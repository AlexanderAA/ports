/* MLton 20130715 (built Mon Jun 13 11:54:01 AEST 2016 on ports.extensibl.com) */
/*   created this file on Mon Jun 13 12:10:18 2016. */
/* Do not edit this file. */
/* Flag settings:  */
/*    align: 8 */
/*    atMLtons: (mlton-compile, @MLton, --) */
/*    chunk: chunk per function */
/*    closureConvertGlobalize: true */
/*    closureConvertShrink: true */
/*    codegen: amd64 */
/*    contifyIntoMain: false */
/*    debug: false */
/*    defaultChar: char8 */
/*    defaultWideChar: widechar32 */
/*    defaultInt: int32 */
/*    defaultReal: real64 */
/*    defaultWord: word32 */
/*    diag passes: [] */
/*    drop passes: [] */
/*    elaborate allowConstant (default): false */
/*    elaborate allowConstant (enabled): true */
/*    elaborate allowFFI (default): false */
/*    elaborate allowFFI (enabled): true */
/*    elaborate allowPrim (default): false */
/*    elaborate allowPrim (enabled): true */
/*    elaborate allowOverload (default): false */
/*    elaborate allowOverload (enabled): true */
/*    elaborate allowRebindEquals (default): false */
/*    elaborate allowRebindEquals (enabled): true */
/*    elaborate deadCode (default): false */
/*    elaborate deadCode (enabled): true */
/*    elaborate forceUsed (default): false */
/*    elaborate forceUsed (enabled): true */
/*    elaborate ffiStr (default):  */
/*    elaborate ffiStr (enabled): true */
/*    elaborate nonexhaustiveExnMatch (default): default */
/*    elaborate nonexhaustiveExnMatch (enabled): true */
/*    elaborate nonexhaustiveMatch (default): warn */
/*    elaborate nonexhaustiveMatch (enabled): true */
/*    elaborate redundantMatch (default): warn */
/*    elaborate redundantMatch (enabled): true */
/*    elaborate resolveScope (default): strdec */
/*    elaborate resolveScope (enabled): true */
/*    elaborate sequenceNonUnit (default): warn */
/*    elaborate sequenceNonUnit (enabled): true */
/*    elaborate warnUnused (default): true */
/*    elaborate warnUnused (enabled): true */
/*    elaborate only: false */
/*    emit main: true */
/*    export header: None */
/*    exn history: false */
/*    generated output format: executable */
/*    gc check: Limit */
/*    indentation: 3 */
/*    inlineIntoMain: true */
/*    inlineLeafA: {loops = true, repeat = true, size = Some 20} */
/*    inlineLeafB: {loops = true, repeat = true, size = Some 40} */
/*    inlineNonRec: {small = 60, product = 320} */
/*    input file: mlton */
/*    keep CoreML: false */
/*    keep def use: true */
/*    keep dot: false */
/*    keep Machine: false */
/*    keep passes: [] */
/*    keep RSSA: false */
/*    keep SSA: false */
/*    keep SSA2: false */
/*    keep SXML: false */
/*    keep XML: false */
/*    extra_: false */
/*    lib dir: /usr/ports/pobj/mlton-20130715/mlton-on-20130715-release/build/lib */
/*    lib target dir: /usr/ports/pobj/mlton-20130715/mlton-on-20130715-release/build/lib/targets/self */
/*    loop passes: 1 */
/*    mark cards: true */
/*    max function size: 10000 */
/*    mlb path vars: [{var = MLTON_ROOT, path = $(LIB_MLTON_DIR)/sml}, {var = SML_LIB, path = $(LIB_MLTON_DIR)/sml}] */
/*    native commented: 0 */
/*    native live stack: false */
/*    native optimize: 1 */
/*    native move hoist: true */
/*    native copy prop: true */
/*    native copy prop cutoff: 1000 */
/*    native cutoff: 100 */
/*    native live transfer: 8 */
/*    native shuffle: true */
/*    native ieee fp: false */
/*    native split: Some 20000 */
/*    optimizationPasses: [<ssa2::default>, <ssa::default>, <sxml::default>, <xml::default>] */
/*    polyvariance: Some {hofo = true, rounds = 2, small = 30, product = 300} */
/*    prefer abs paths: false */
/*    prof passes: [] */
/*    profile: None */
/*    profile branch: false */
/*    profile C: [] */
/*    profile IL: ProfileSource */
/*    profile include/exclude: [(Seq [Star [.], Or [Seq [Seq [[$], [(], [S], [M], [L], [_], [L], [I], [B], [)]]]], Star [.]], false)] */
/*    profile raise: false */
/*    profile stack: false */
/*    profile val: false */
/*    show basis: None */
/*    show def-use: None */
/*    show types: true */
/*    target: self */
/*    target arch: AMD64 */
/*    target OS: OpenBSD */
/*    type check: false */
/*    verbosity: Pass */
/*    warn unrecognized annotation: true */
/*    warn deprecated features: true */
/*    zone cut depth: 100 */
.text
.p2align 0x4
.globl check_2
.hidden check_2
check_2:
L_259904:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_259919
L_259905:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_486278
L_259906:
	movq 0x8(%rbp),%r14
	movq 0x10(%r14),%r13
	movl 0x0(%r13),%r11d
	testl %r11d,%r11d
	jnz L_486277
L_259907:
	movq 0x0(%r14),%r15
	movl 0x0(%r15),%r14d
	testl %r14d,%r14d
	jnz L_486276
L_259908:
	movq 0x8(%r15),%r14
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0x5068)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x10550)(%rip),%r13
	movq %r13,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
L_259909:
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_259910+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_486276:
L_259917:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x5070)(%rip),%r14
	movq %r14,0x8(%r15)
	jmp L_259909
.p2align 0x4
L_486277:
L_259918:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_486278:
L_259919:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_259920+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_259920
.p2align 0x4
.long 0x4AE
L_259920:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	jmp L_259906
.p2align 0x4
.long 0x490
L_259910:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_259911+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x490
L_259911:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	incl %r13d
	jo L_486280
L_259913:
	movl %r13d,0x0(%r14)
	movq (globalObjptr+0x9D0)(%rip),%r14
	movq %r14,0x8(%rbp)
	movq 0x18(%rbp),%r14
	movq %r14,0x28(%rbp)
	movq 0x10(%rbp),%r14
	movq %r14,0x18(%rbp)
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x8,%rbp
	leaq (L_259914+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_486280:
L_259912:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_259914:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq (globalObjptr+0x1610)(%rip),%r15
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_486281
L_259915:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_486281:
L_259916:
	movq (globalObjptr+0x1618)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl elabAndExpandTy_0
.hidden elabAndExpandTy_0
elabAndExpandTy_0:
L_259921:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_259957
L_259922:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_486282
L_259923:
	movq 0x28(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq $0x9DF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x40(%r11),%r14
	movq 0x38(%r11),%r13
	movq 0x30(%r11),%r10
	movq 0x28(%r11),%r9
	movq 0x20(%r11),%r8
	movq 0x18(%r11),%rsp
	movq 0x10(%r11),%rsi
	movq 0x8(%r11),%rdi
	movq 0x0(%r11),%rdx
	movq $0x9E1,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %rdx,0x0(%r11)
	movq %rdi,0x8(%r11)
	movq %rsi,0x10(%r11)
	movq %rsp,0x18(%r11)
	movq %r8,0x20(%r11)
	movq %r9,0x28(%r11)
	movq %r10,0x30(%r11)
	movq %r15,0x38(%r11)
	movq %r13,0x40(%r11)
	movq %r14,0x48(%r11)
	movq %r11,0x38(%rbp)
	addq $0x58,%r12
	movq 0x0(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_259924+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3797
.p2align 0x4
L_486282:
L_259957:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_259958+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_259958
.p2align 0x4
.long 0x4DE
L_259958:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_259923
.p2align 0x4
.long 0x4A5
L_259924:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_259925
L_259955:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_259956+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_259956
.p2align 0x4
.long 0x637
L_259956:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_259925:
	movq $0x3EE7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x30(%rbp)
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x50(%r15),%r13
	movq %r13,0x38(%rbp)
	movq 0x48(%r15),%r13
	movq %r13,0x40(%rbp)
	movq 0x40(%r15),%r13
	movq %r13,0x48(%rbp)
	movq 0x38(%r15),%r13
	movq %r13,0x50(%rbp)
	movq 0x30(%r15),%r13
	movq %r13,0x58(%rbp)
	movq 0x28(%r15),%r13
	movq %r13,0x60(%rbp)
	movq 0x20(%r15),%r13
	movq %r13,0x68(%rbp)
	movq 0x18(%r15),%r13
	movq %r13,0x70(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x78(%rbp)
	movq $0x9E7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x80(%rbp)
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1,0x90(%rbp)
	movl $0x0,0x98(%rbp)
	addq $0x90,%rbp
	leaq (L_259926+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_1
.p2align 0x4
.long 0x435F
L_259926:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq %r15,0x90(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x98(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0xA0(%rbp)
	addq $0x90,%rbp
	leaq (L_259927+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1265
.p2align 0x4
.long 0x4360
L_259927:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_259928
L_259953:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_259954+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_259954
.p2align 0x4
.long 0x4366
L_259954:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_259928:
	movq $0x2CD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x20(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x4123,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq $0xB,0x0(%r14)
	movq %r15,0x8(%r14)
	movq $0x71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x38(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x607,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x18,%r12
	movq %r15,0x8(%r13)
	movq $0x2CD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x88(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x71,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x90(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x9E9,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x70(%r11)
	addq $0x90,%r12
	movl $0x1,0x0(%r11)
	movl $0x0,0x4(%r11)
	movq 0x78(%rbp),%r13
	movq %r13,0x8(%r11)
	movq 0x70(%rbp),%r13
	movq %r13,0x10(%r11)
	movq 0x68(%rbp),%r13
	movq %r13,0x18(%r11)
	movq 0x60(%rbp),%r13
	movq %r13,0x20(%r11)
	movq 0x58(%rbp),%r13
	movq %r13,0x28(%r11)
	movq 0x50(%rbp),%r13
	movq %r13,0x30(%r11)
	movq 0x48(%rbp),%r13
	movq %r13,0x38(%r11)
	movq 0x18(%rbp),%r13
	movq %r13,0x40(%r11)
	movq 0x80(%rbp),%r13
	movq %r13,0x48(%r11)
	movq %r13,0x50(%r11)
	movq 0x10(%rbp),%r13
	movq %r13,0x58(%r11)
	movq 0x40(%rbp),%r13
	movq %r13,0x60(%r11)
	movq 0x30(%rbp),%r13
	movq %r13,0x68(%r11)
	movq %r15,0x78(%r11)
	movq %r14,0x80(%r11)
	movq %r11,0xA8(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0xA0(%rbp)
	addq $0xA0,%rbp
	leaq (L_259929+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_24
.p2align 0x4
.long 0x4361
L_259929:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_259930
L_259951:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_259952+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_259952
.p2align 0x4
.long 0x4365
L_259952:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_259930:
	movq 0x20(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_486286
L_259931:
	movq 0x8(%r14),%r15
	movq %r15,0x40(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x48(%rbp)
L_259932:
	movq 0x48(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0xA8(%rbp)
	movq $0x3DAB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0xA0(%rbp)
	addq $0xA0,%rbp
	leaq (L_259933+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp remove_0
.p2align 0x4
L_486286:
L_259937:
	movq 0x20(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq $0x1,0x0(%r15)
	movq 0x88(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_486287
L_259938:
	movq 0x8(%r14),%r15
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x40(%rbp)
L_259939:
	movq 0x40(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0xA8(%rbp)
	movq $0x3DA3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x90(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0xA0(%rbp)
	addq $0xA0,%rbp
	leaq (L_259940+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp remove_0
.p2align 0x4
L_486287:
L_259944:
	movq 0x88(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq $0x1,0x0(%r15)
	movq 0x30(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4362
L_259933:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_259934
L_259948:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_259949+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_259949
.p2align 0x4
.long 0x32A9
L_259949:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_259934:
	movq 0x48(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r15
	cmpq $0x1,%r15
	je L_259937
L_259935:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x40(%rbp)
	movq %r14,0x48(%rbp)
	jmp L_259932
.p2align 0x4
.long 0x4363
L_259940:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_259941
L_259945:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_259946+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_259946
.p2align 0x4
.long 0x4364
L_259946:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_259941:
	movq 0x40(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r15
	cmpq $0x1,%r15
	je L_259944
L_259942:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x38(%rbp)
	movq %r14,0x40(%rbp)
	jmp L_259939
.text
.p2align 0x4
.globl x_2032
.hidden x_2032
x_2032:
L_259959:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_259992
L_259960:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_486294
L_259961:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x58(%r14),%r13
	movq %r13,0x10(%rbp)
	movq 0x50(%r14),%r11
	movq %r11,0x18(%rbp)
	movq 0x48(%r14),%r11
	movq %r11,0x20(%rbp)
	movq 0x40(%r14),%r11
	movq %r11,0x28(%rbp)
	movq 0x38(%r14),%r11
	movq %r11,0x30(%rbp)
	movq 0x30(%r14),%r11
	movq %r11,0x38(%rbp)
	movq 0x28(%r14),%r11
	movq %r11,0x40(%rbp)
	movq 0x20(%r14),%r11
	movq %r11,0x48(%rbp)
	movq 0x18(%r14),%r11
	movq %r11,0x50(%rbp)
	movq 0x10(%r14),%r11
	movq %r11,0x58(%rbp)
	movq $0x17D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x60(%rbp)
	addq $0x18,%r12
	movq %r13,0x0(%r15)
	movq %r13,0x8(%r15)
	movq (globalObjptr+0xF10)(%rip),%r15
	movq $0x9EB,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_486293
L_259963:
	movl %r13d,0x78(%rbp)
	movq $0x3ECB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq %r14,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_259964+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_1
.p2align 0x4
L_486293:
L_259962:
	movq (globalObjptr+0x4D8)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_486294:
L_259992:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_259993+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_259993
.p2align 0x4
.long 0x45F
L_259993:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_259961
.p2align 0x4
.long 0x348B
L_259964:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_259965
L_259990:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_259991+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_259991
.p2align 0x4
.long 0x804
L_259991:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_259965:
	movq $0x1037,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0xD0(%rbp)
	movq $0x2CD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x68(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x4123,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq $0x6,0x0(%r14)
	movq %r15,0x8(%r14)
	movq $0x71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x70(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x607,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x18,%r12
	movq %r15,0x8(%r13)
	movq %r13,0xF0(%rbp)
	movq $0x2CD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x78(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x71,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x80(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x0(%rbp),%r13
	movq %r13,0x90(%rbp)
	movq 0x58(%rbp),%r13
	movq %r13,0x98(%rbp)
	movq 0x50(%rbp),%r13
	movq %r13,0xA0(%rbp)
	movq 0x48(%rbp),%r13
	movq %r13,0xA8(%rbp)
	movq 0x40(%rbp),%r13
	movq %r13,0xB0(%rbp)
	movq 0x38(%rbp),%r13
	movq %r13,0xB8(%rbp)
	movq 0x30(%rbp),%r13
	movq %r13,0xC0(%rbp)
	movq 0x28(%rbp),%r13
	movq %r13,0xC8(%rbp)
	movq 0x60(%rbp),%r13
	movq %r13,0xD8(%rbp)
	movq 0x20(%rbp),%r13
	movq %r13,0xE0(%rbp)
	movq 0x10(%rbp),%r13
	movq %r13,0xE8(%rbp)
	movq %r15,0xF8(%rbp)
	movq %r14,0x100(%rbp)
	addq $0x90,%rbp
	leaq (L_259966+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_124
.p2align 0x4
.long 0x4367
L_259966:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x88(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_259967
L_259988:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_259989+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_259989
.p2align 0x4
.long 0x436C
L_259989:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_259967:
	movq 0x88(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x90(%rbp)
	movq 0x68(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_486297
L_259968:
	movq 0x8(%r14),%r15
	movq %r15,0x88(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x98(%rbp)
L_259969:
	movq 0x98(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0xB0(%rbp)
	movq $0x3DAB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0xA8(%rbp)
	addq $0xA8,%rbp
	leaq (L_259970+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp remove_0
.p2align 0x4
L_486297:
L_259974:
	movq 0x68(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq $0x1,0x0(%r15)
	movq 0x78(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_486298
L_259975:
	movq 0x8(%r14),%r15
	movq %r15,0x88(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x98(%rbp)
L_259976:
	movq 0x98(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0xB0(%rbp)
	movq $0x3DD9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x80(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0xA8(%rbp)
	addq $0xA8,%rbp
	leaq (L_259977+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp remove_0
.p2align 0x4
L_486298:
L_259981:
	movq 0x78(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq $0x1,0x0(%r15)
	movq 0x90(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4368
L_259970:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0xA0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_259971
L_259985:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_259986+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_259986
.p2align 0x4
.long 0x436B
L_259986:
	addq $0xFFFFFFFFFFFFFF50,%rbp
L_259971:
	movq 0x98(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0xA0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x88(%rbp),%r15
	cmpq $0x1,%r15
	je L_259974
L_259972:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x88(%rbp)
	movq %r14,0x98(%rbp)
	jmp L_259969
.p2align 0x4
.long 0x4369
L_259977:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0xA0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_259978
L_259982:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_259983+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_259983
.p2align 0x4
.long 0x436A
L_259983:
	addq $0xFFFFFFFFFFFFFF50,%rbp
L_259978:
	movq 0x98(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0xA0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x88(%rbp),%r15
	cmpq $0x1,%r15
	je L_259981
L_259979:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x88(%rbp)
	movq %r14,0x98(%rbp)
	jmp L_259976
.text
.p2align 0x4
.globl get_124
.hidden get_124
get_124:
L_259994:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_259995
L_260338:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_260339+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260339
.p2align 0x4
.long 0x678
L_260339:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_259995:
	movq 0x0(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_259996+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_0
.p2align 0x4
.long 0x8C2
L_259996:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r13
	movq 0x0(%r13),%r15
	movq %r13,0x78(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1448,%r14
	jne L_486315
L_259998:
	movq 0x8(%r15),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x78(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_486314
L_260000:
	movq %r15,0x0(%r13)
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_486313
L_260001:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_260003:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_260004
L_260330:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xCD4,%r13
	jne L_260004
L_260331:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	cmpq %r11,0x70(%rbp)
	je L_486308
L_260004:
	incl %ecx
	jo L_486307
L_260006:
	cmpq $0x1,%r15
	je L_486305
L_260007:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_260003
.p2align 0x4
L_486305:
L_260008:
L_260009:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_486306
L_260011:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl x_868
L_260329:
	movl %ecx,0x0(%r15)
x_868:
	movq 0x0(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_260013+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_0
.p2align 0x4
L_486306:
L_260010:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_486307:
L_260005:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_486308:
L_260333:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_260010
L_260334:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_486309
L_260336:
	movl %ecx,0x0(%r15)
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_486309:
L_260335:
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_486313:
L_260337:
	xorl %ecx,%ecx
	jmp L_260009
.p2align 0x4
L_486314:
L_259999:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_486315:
L_259997:
	movq (globalObjptr+0x1500)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xF63
L_260013:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x80(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_260014
L_260327:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_260328+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260328
.p2align 0x4
.long 0xF6E
L_260328:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_260014:
	movq 0x80(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1448,%r15
	jne L_259997
L_260015:
	movq 0x8(%r14),%r15
	movq 0x10(%r15),%r13
	movq 0x68(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x28DD,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r14,0x8(%r11)
	addq $0x18,%r12
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq %r11,0x0(%r15)
	movq 0x0(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x88,%rbp
	leaq (L_260016+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_12
.p2align 0x4
.long 0xF63
L_260016:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x80(%rbp)
	movb 0x0(%r15),%r14b
	cmpb $0x1,%r14b
	je L_486319
	cmpb $0x2,%r14b
	je L_486318
L_260017:
	movb $0x2,0x0(%r15)
	movq 0x0(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_260018+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_0
.p2align 0x4
L_486318:
L_260326:
	movq (globalObjptr+0x1BC0)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_486319:
L_260325:
	movq (globalObjptr+0x1AE0)(%rip),%r13
	movq %r13,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xF65
L_260018:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x88(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_260019
L_260323:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_260324+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260324
.p2align 0x4
.long 0xF6F
L_260324:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_260019:
	movq 0x88(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1448,%r15
	jne L_259997
L_260020:
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r13
	movq %r13,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	je L_486368
L_260021:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE77,%r15
	je L_486367
	cmpq $0xE78,%r15
	je L_486344
	cmpq $0xE79,%r15
	je L_486342
	cmpq $0xE7A,%r15
	je L_486340
	cmpq $0xE7B,%r15
	je L_486320
L_260022:
	movq $0x1037,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq $0x1,0x0(%r15)
	movq 0x0(%rbp),%r14
	movq %r14,0x8(%r15)
L_260023:
	movq 0x80(%rbp),%r14
	movb $0x1,0x0(%r14)
	movq $0x19A9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	movq %r15,0x0(%rbp)
	addq $0x18,%r12
	movq 0x70(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x78(%rbp),%r15
	movq 0x0(%r15),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq %r11,0x0(%r15)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_486320:
L_260224:
	movq 0x8(%r13),%r15
	movq 0x0(%r13),%r14
	movq %r14,0x90(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	movq %r11,0x98(%rbp)
	cmpq %r14,%r11
	movq %r15,0x88(%rbp)
	jne L_260028
L_260226:
	testq %r11,%r11
	jz L_486338
L_260227:
	cmpq $0x7FFFFFFF,%r11
	ja L_486337
L_260228:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_260229
L_260272:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_260273+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260273
.p2align 0x4
.long 0x437C
L_260273:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_260229:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14C3,%rcx
	movq 0x98(%rbp),%rdx
	movq $0x48,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_260230+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260230
.p2align 0x4
.long 0x437C
L_260230:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq %rax,0xA0(%rbp)
L_260231:
	movq $0x0,0xA8(%rbp)
loop_3069:
	movq 0x98(%rbp),%r15
	cmpq %r15,0xA8(%rbp)
	jl L_486335
L_260232:
	movq 0xA0(%rbp),%r15
	movq $0x9EB,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x60(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x88(%rbp)
x_870:
	movq 0x68(%rbp),%r14
	movq 0x10(%r14),%r15
	movq (globalObjptr+0x1068)(%rip),%r14
	movq 0x0(%r14),%r13
	incq %r13
	jo L_259999
L_260233:
	movq %r13,0x0(%r14)
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_486333
L_260234:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq %r13,0x90(%rbp)
	movl $0x0,0x98(%rbp)
.p2align 0x4,,0x7
L_260236:
	movq 0x90(%rbp),%r14
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_260237
L_260258:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xCD1,%r13
	je L_486328
L_260237:
	movl 0x98(%rbp),%r14d
	incl %r14d
	movl %r14d,0x90(%rbp)
	jo L_260005
L_260238:
	cmpq $0x1,%r15
	je L_486321
L_260239:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movl %r14d,0x98(%rbp)
	movq %r13,0x90(%rbp)
	jmp L_260236
.p2align 0x4
L_486321:
L_260240:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_260241
L_260256:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_260257+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260257
.p2align 0x4
.long 0x2CBB
L_260257:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_260241:
	movl 0x90(%rbp),%ecx
L_260242:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_260010
L_260243:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_486324
L_260255:
	movl %ecx,0x0(%r14)
	movq 0x68(%rbp),%r15
	movq 0x88(%rbp),%r14
	movq %r14,0x68(%rbp)
L_260245:
	movq 0x58(%rbp),%r14
	movq 0x10(%r15),%r13
	cmpq %r13,0x10(%r14)
	je L_486322
L_260246:
	movq $0x1,%r15
L_260247:
	movq $0x1037,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x68(%rbp),%r13
	movq %r13,0x8(%r14)
	movq %r14,%r15
	jmp L_260023
.p2align 0x4
L_486322:
L_260248:
	movq 0x60(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_486323
L_260250:
	movl %r13d,0x98(%rbp)
	movq $0x3ECB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq %r14,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_260251+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_1
.p2align 0x4
L_486323:
L_260028:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_486324:
L_260244:
	movq 0x68(%rbp),%r15
	movq 0x88(%rbp),%r13
	movq %r13,0x68(%rbp)
	jmp L_260245
.p2align 0x4
L_486328:
L_260259:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_260260
L_260264:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_260265+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260265
.p2align 0x4
.long 0x437D
L_260265:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_260260:
	movq 0x90(%rbp),%r14
	movq 0x0(%r14),%r13
	movl 0x98(%rbp),%r14d
	movslq %r14d,%r15
	movq (globalObjptr+0x1070)(%rip),%r11
	addq 0x0(%r11),%r15
	jo L_260010
L_260261:
	movq %r15,0x0(%r11)
	movq (globalObjptr+0x1078)(%rip),%r11
	cmpl %r14d,0x0(%r11)
	jl L_486329
L_260262:
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r15,0x68(%rbp)
	movq %r13,%r15
	jmp L_260245
.p2align 0x4
L_486329:
L_260263:
	movq (globalObjptr+0x1078)(%rip),%r14
	movl 0x98(%rbp),%r11d
	movl %r11d,0x0(%r14)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r15,0x68(%rbp)
	movq %r13,%r15
	jmp L_260245
.p2align 0x4
L_486333:
L_260266:
	xorl %ecx,%ecx
	jmp L_260242
.p2align 0x4
L_486335:
L_260267:
	movq 0xA8(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x88(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0xB8(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0xD0(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0xD8(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0xE0(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0xE8(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0xF0(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0xF8(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x100(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x108(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x110(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x118(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x120(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x128(%rbp)
	addq $0xB8,%rbp
	leaq (L_260268+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_124
.p2align 0x4
L_486337:
L_260061:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_486338:
L_260275:
	movq (globalObjptr+0x1BF8)(%rip),%r15
	movq %r15,0xA0(%rbp)
	jmp L_260231
.p2align 0x4
L_486340:
L_260174:
	movq 0x8(%r13),%r14
	movq %r14,0x88(%rbp)
	movq 0x0(%r13),%r14
	cmpq $0x1,%r14
	je L_486341
L_260175:
	movq 0x8(%r14),%r13
	movq %r13,0x90(%rbp)
	movq 0x0(%r14),%r14
	movq $0x1,0x98(%rbp)
	movq %r14,%r15
L_260176:
	movq 0x0(%r15),%r14
	movq %r14,0xB0(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0xD0(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0xD8(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0xE0(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0xE8(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0xF0(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0xF8(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x100(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x108(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x110(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x118(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x120(%rbp)
	addq $0xB0,%rbp
	leaq (L_260177+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_124
.p2align 0x4
L_486341:
L_260223:
	movq $0x1,0x8(%rbp)
L_260181:
	movq 0x88(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_260182+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_1
.p2align 0x4
L_486342:
L_260089:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r11
	movq %r11,0x88(%rbp)
	cmpq $0x1,%r14
	je L_486343
L_260090:
	movq 0x8(%r14),%r13
	movq %r13,0x90(%rbp)
	movq 0x0(%r14),%r14
	movq $0x1,0x98(%rbp)
	movq %r14,%r15
L_260091:
	movq 0x0(%r15),%r14
	movq %r14,0xB0(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0xD0(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0xD8(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0xE0(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0xE8(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0xF0(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0xF8(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x100(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x108(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x110(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x118(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x120(%rbp)
	addq $0xB0,%rbp
	leaq (L_260092+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_124
.p2align 0x4
L_486343:
L_260173:
	movq $0x1,0x8(%rbp)
L_260096:
	movq 0x88(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_260097+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp extra_0
.p2align 0x4
L_486344:
L_260025:
	movq 0x0(%r13),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x127F,%r14
	je L_486362
L_260067:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x90(%rbp)
	cmpq %r15,%rdx
	movq %r14,0x88(%rbp)
	jne L_260028
L_260069:
	testq %rdx,%rdx
	jz L_486360
L_260070:
	cmpq $0x7FFFFFFF,%rdx
	ja L_260061
L_260071:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14C3,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_260072+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260072
.p2align 0x4
.long 0x19FE
L_260072:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq %rax,0x98(%rbp)
L_260073:
	movq $0x0,0xA0(%rbp)
loop_3064:
	movq 0x90(%rbp),%r15
	cmpq %r15,0xA0(%rbp)
	jl L_486358
L_260074:
	movq 0x98(%rbp),%r15
	movq $0x9EB,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x8(%rbp)
	cmpq %rdx,%r14
	jne L_260028
L_260076:
	testq %rdx,%rdx
	jz L_486356
L_260077:
	cmpq $0x7FFFFFFF,%rdx
	ja L_260061
L_260078:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x150D,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_260079+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260079
.p2align 0x4
.long 0x4372
L_260079:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq %rax,%r15
L_260080:
	xorq %r14,%r14
.p2align 0x4,,0x7
loop_3065:
	cmpq 0x8(%rbp),%r14
	jnl L_486345
L_260082:
	movl %r14d,%r13d
	movq %r14,%r11
	movq %r14,%r10
	movslq %r13d,%r9
	movq 0x98(%rbp),%r13
	movq 0x0(%r13,%r9,8),%r8
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r13,1)
	salq $0x4,%r11
	movq %r8,0x0(%r15,%r11,1)
	movq %r15,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%r9,%r13,1)
	salq $0x4,%r10
	movq $0x1,0x8(%r15,%r10,1)
	incq %r14
	jmp loop_3065
.p2align 0x4
L_486345:
L_260081:
	movq $0x185D,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x8(%rbp)
	movq 0x48(%rbp),%r15
x_869:
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x20(%rbp)
	cmpq %r14,%rdx
	jne L_260028
L_260036:
	testq %rdx,%rdx
	jz L_486353
L_260037:
	cmpq $0x7FFFFFFF,%rdx
	ja L_260061
L_260038:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14C3,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_260039+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260039
.p2align 0x4
.long 0x436D
L_260039:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq %rax,0x28(%rbp)
L_260040:
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3063:
	cmpq 0x20(%rbp),%r15
	jnl L_486346
L_260059:
	movl %r15d,%r14d
	movslq %r14d,%r13
	salq $0x4,%r13
	movq 0x8(%rbp),%r14
	movq 0x0(%r14,%r13,1),%r11
	movq 0x28(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r11,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_3063
.p2align 0x4
L_486346:
L_260041:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_260042
L_260057:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_260058+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260058
.p2align 0x4
.long 0x4370
L_260058:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_260042:
	movq 0x28(%rbp),%r15
	movq $0x9EB,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_260028
L_260044:
	cmpl $0x1,%r13d
	je L_486348
L_260045:
	movq 0x10(%rbp),%r11
	movq 0x18(%rbp),%r10
	movq 0x10(%r10),%r9
	cmpq %r9,0x10(%r11)
	jne L_486347
L_260048:
	movl %r13d,0x98(%rbp)
	movq $0x3ECB,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq %r15,0x0(%r13)
	movq %r13,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_260049+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_1
.p2align 0x4
L_486347:
L_260046:
	movq $0x1,%r14
	xchgq %r14,%r15
L_260047:
	movq $0x1037,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x0(%rbp),%r13
	movq %r13,0x8(%r14)
	movq %r14,%r15
	jmp L_260023
.p2align 0x4
L_486348:
L_260053:
	cmpq $0x0,%r14
	jna L_486349
L_260056:
	movq 0x0(%r15),%r14
	movq %r14,%r15
	jmp L_260023
.p2align 0x4
L_486349:
L_260055:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_486353:
L_260062:
	movq (globalObjptr+0x1BF0)(%rip),%r15
	movq %r15,0x28(%rbp)
	jmp L_260040
.p2align 0x4
L_486356:
L_260084:
	movq (globalObjptr+0x1BE0)(%rip),%r15
	jmp L_260080
.p2align 0x4
L_486358:
L_260085:
	movq 0xA0(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x88(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0xB0(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0xD0(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0xD8(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0xE0(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0xE8(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0xF0(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0xF8(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x100(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x108(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x110(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x118(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x120(%rbp)
	addq $0xB0,%rbp
	leaq (L_260086+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_124
.p2align 0x4
L_486360:
L_260088:
	movq (globalObjptr+0x1BD8)(%rip),%r15
	movq %r15,0x98(%rbp)
	jmp L_260073
.p2align 0x4
L_486362:
L_260026:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x90(%rbp)
	cmpq %rdx,%r15
	movq %r14,0x88(%rbp)
	jne L_260028
L_260029:
	testq %rdx,%rdx
	jz L_486365
L_260030:
	cmpq $0x7FFFFFFF,%rdx
	ja L_260061
L_260031:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x150D,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_260032+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260032
.p2align 0x4
.long 0x19FE
L_260032:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq %rax,0x98(%rbp)
L_260033:
	movq $0x0,0xA0(%rbp)
loop_3062:
	movq 0x90(%rbp),%r14
	cmpq %r14,0xA0(%rbp)
	jl L_486363
L_260034:
	movq 0x98(%rbp),%r14
	movq $0x185D,0xFFFFFFFFFFFFFFF8(%r14)
	movq %r14,0x8(%rbp)
	movq 0x48(%rbp),%r15
	jmp x_869
.p2align 0x4
L_486363:
L_260063:
	movq 0xA0(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x88(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x0(%r13),%r11
	movq %r11,0xB0(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0xD0(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0xD8(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0xE0(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0xE8(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0xF0(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0xF8(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x100(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x108(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x110(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x118(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x120(%rbp)
	addq $0xB0,%rbp
	leaq (L_260064+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_124
.p2align 0x4
L_486365:
L_260066:
	movq (globalObjptr+0x1BD0)(%rip),%r15
	movq %r15,0x98(%rbp)
	jmp L_260033
.p2align 0x4
L_486367:
L_260024:
	movq 0x40(%rbp),%r15
	jmp L_260023
.p2align 0x4
L_486368:
L_260276:
	shrq $0x1,%r13
	movb %r13b,%r15b
	movb %r15b,0x40(%rbp)
	cmpb $0x1,%r15b
	je L_486375
	cmpb $0x2,%r15b
	je L_486374
	cmpb $0x3,%r15b
	je L_486369
L_260277:
	movq 0x20(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_260278+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp defaultWord_0
.p2align 0x4
L_486369:
L_260311:
	movq 0x38(%rbp),%r10
	movq 0x8(%r10),%r14
	movq 0x0(%r10),%r9
	movq 0x0(%r9),%r15
	cmpq %r15,(globalObjptr+0xCA68)(%rip)
	je L_486373
L_260312:
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r13
	cmpq $0x5,%r13
	jne L_260314
L_260315:
	xorq %r11,%r11
.p2align 0x4,,0x7
vectorEqualLoop_203:
	cmpq %r13,%r11
	je L_486371
L_260316:
	movq (globalObjptr+0xCA68)(%rip),%r10
	movb 0x0(%r15,%r11,1),%r9b
	cmpb %r9b,0x0(%r10,%r11,1)
	jne L_486370
L_260318:
	incq %r11
	jmp vectorEqualLoop_203
.p2align 0x4
L_486370:
L_260314:
	movq (globalObjptr+0x18C8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_486371:
	movq %r14,%r15
L_260320:
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	movq $0x1,0x90(%rbp)
	movl $0x0,0x98(%rbp)
	addq $0x90,%rbp
	leaq (L_260321+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_1
.p2align 0x4
L_486373:
	movq %r14,%r15
	jmp L_260320
.p2align 0x4
L_486374:
L_260308:
	movq 0x18(%rbp),%r14
	movq %r14,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_260309+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp defaultInt_0
.p2align 0x4
L_486375:
L_260286:
	movq 0x28(%rbp),%r10
	movq 0x8(%r10),%r14
	movq 0x0(%r10),%r9
	movq 0x0(%r9),%r8
	cmpq %r8,(globalObjptr+0xCA98)(%rip)
	je L_486381
L_260287:
	movq 0xFFFFFFFFFFFFFFF0(%r8),%r13
	cmpq $0x6,%r13
	sete %cl
	movzbl %cl,%ecx
	jne vectorEqual_249
L_260301:
	xorq %r11,%r11
	movq %r8,%r15
.p2align 0x4,,0x7
vectorEqualLoop_202:
	cmpq %r11,%r13
	je L_486380
L_260302:
	movq (globalObjptr+0xCA98)(%rip),%r9
	movb 0x0(%r9,%r11,1),%r10b
	cmpb %r10b,0x0(%r15,%r11,1)
	jne vectorEqual_248
L_260304:
	incq %r11
	jmp vectorEqualLoop_202
.p2align 0x4
vectorEqual_248:
vectorEqual_76:
	cmpq (globalObjptr+0xD6E8)(%rip),%r15
	je L_260297
L_260289:
	testl %ecx,%ecx
	jz L_260291
L_260292:
	xorq %r11,%r11
.p2align 0x4,,0x7
vectorEqualLoop_201:
	cmpq %r11,%r13
	je L_486377
L_260293:
	movq (globalObjptr+0xD6E8)(%rip),%r9
	movb 0x0(%r9,%r11,1),%r10b
	cmpb %r10b,0x0(%r15,%r11,1)
	jne L_486376
L_260295:
	incq %r11
	jmp vectorEqualLoop_201
.p2align 0x4
L_486376:
L_260291:
	movq (globalObjptr+0x1AD0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_486377:
L_260297:
	movq 0x0(%r14),%r15
	movq %r15,0x18(%rbp)
L_260298:
	movq $0x1,0x90(%rbp)
	movl $0x0,0x98(%rbp)
	addq $0x90,%rbp
	leaq (L_260299+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_1
.p2align 0x4
L_486380:
	movq %r14,%r15
L_260306:
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	jmp L_260298
.p2align 0x4
vectorEqual_249:
	movq %r8,%r15
	jmp vectorEqual_76
.p2align 0x4
L_486381:
	movq %r14,%r15
	jmp L_260306
.p2align 0x4
.long 0x4367
L_260251:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x88(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_260252
L_260253:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_260254+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260254
.p2align 0x4
.long 0x436C
L_260254:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_260252:
	movq 0x88(%rbp),%r15
	jmp L_260247
.p2align 0x4
.long 0x437E
L_260268:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0xB0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_260269
L_260270:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_260271+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260271
.p2align 0x4
.long 0x437F
L_260271:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_260269:
	movq 0xA0(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0xA8(%rbp),%r14
	movq 0xB0(%rbp),%r13
	movq %r13,0x0(%r15,%r14,8)
	incq %r14
	movq %r14,0xA8(%rbp)
	jmp loop_3069
.p2align 0x4
.long 0x3495
L_260177:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movq 0xB0(%rbp),%r15
	movq %r15,0xA8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_260178
L_260221:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_260222+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260222
.p2align 0x4
.long 0x349F
L_260222:
	addq $0xFFFFFFFFFFFFFF48,%rbp
L_260178:
	movq $0x1039,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xA8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xA0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x283F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x98(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x90(%rbp),%r13
	cmpq $0x1,%r13
	je L_486386
L_260179:
	movq %r14,0x98(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x90(%rbp)
	jmp L_260176
.p2align 0x4
L_486386:
L_260180:
	movq %r14,0x8(%rbp)
	jmp L_260181
.p2align 0x4
.long 0x4379
L_260182:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x8(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1446,%r15
	jne L_259997
L_260183:
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r13
	movl 0x0(%r13),%r11d
	testl %r11d,%r11d
	jnz L_486388
L_260184:
	movq 0x88(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_260185+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_1
.p2align 0x4
L_486388:
L_260220:
	movq (globalObjptr+0x1BC8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3495
L_260092:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movq 0xB0(%rbp),%r15
	movq %r15,0xA8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_260093
L_260171:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_260172+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260172
.p2align 0x4
.long 0x349F
L_260172:
	addq $0xFFFFFFFFFFFFFF48,%rbp
L_260093:
	movq $0x1039,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xA8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xA0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x283F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x98(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x90(%rbp),%r13
	cmpq $0x1,%r13
	je L_486390
L_260094:
	movq %r14,0x98(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x90(%rbp)
	jmp L_260091
.p2align 0x4
L_486390:
L_260095:
	movq %r14,0x8(%rbp)
	jmp L_260096
.p2align 0x4
.long 0x4373
L_260097:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq $0x1,%r15
	je L_486418
L_260098:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r15
	movq %r15,0x10(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq %r14,0x8(%rbp)
.p2align 0x4,,0x7
L_260099:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_486417
.p2align 0x4,,0x7
L_260100:
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r14
	movq $0x1CED,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r13,0x0(%r15)
	movq 0x8(%r13),%r11
	movl 0x4(%r11),%r10d
	testl %r10d,%r10d
	jnz L_486416
L_260101:
	movq $0x2,%r13
L_260102:
	movq $0x13,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq $0x1,0x0(%r11)
	movq 0x50(%rbp),%r10
	movq 0x0(%r10),%r9
	movq $0x1F7,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r9,0x0(%r10)
	addq $0x10,%r12
	movq $0xFFF,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r15,0x0(%r9)
	movq %r10,0x8(%r9)
	movq %r11,0x10(%r9)
	movq %r13,0x18(%r9)
	addq $0x28,%r12
	movq $0x2891,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r9,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x16B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x10,%r12
	movq $0x1037,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq $0x1,0x0(%r15)
	movq $0x1039,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq $0x283F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_486392
L_260103:
	movq %r15,0x18(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x10(%rbp)
	jmp L_260099
.p2align 0x4
L_486392:
L_260104:
L_260105:
	cmpq $0x1,%r15
	je L_486415
L_260106:
	movq %r15,%r14
	movq 0x8(%r15),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_260107:
	incl %ecx
	jo L_260005
L_260108:
	cmpq $0x1,%r15
	je L_486393
L_260109:
	movq 0x8(%r15),%r15
	jmp L_260107
.p2align 0x4
L_486393:
L_260110:
	movq %r14,0x8(%rbp)
L_260111:
	movslq %ecx,%rdx
	movq %rdx,0x10(%rbp)
	cmpq $0x7FFFFFFF,%rdx
	ja L_260061
L_260112:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xAC7,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_260113+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260113
.p2align 0x4
.long 0x4374
L_260113:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq %rax,0x18(%rbp)
	movq 0x8(%rbp),%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3066:
	cmpq 0x10(%rbp),%r15
	jnl L_486395
L_260162:
	cmpq $0x1,%r14
	je L_486394
L_260163:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq 0x18(%rbp),%r11
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r13,0x0(%r11,%r15,8)
	incq %r15
	jmp loop_3066
.p2align 0x4
L_486394:
L_260164:
	movq (globalObjptr+0x4B0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_486395:
L_260114:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_260115
L_260160:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_260161+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260161
.p2align 0x4
.long 0x4376
L_260161:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_260115:
	movq 0x10(%rbp),%r15
	movl %r15d,%r14d
	movl %r14d,0x8(%rbp)
	movslq %r14d,%r13
	movq %r13,0x20(%rbp)
	cmpq %r15,%r13
	jne L_260028
L_260117:
	testl %r14d,%r14d
	jz L_486406
L_260118:
	movq $0x185F,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x28(%rbp)
	addq $0x18,%r12
	movq 0x18(%rbp),%r11
	movq %r11,0x0(%r13)
	movq %r11,0x8(%r13)
	cmpq $0x0,%r15
	jna L_260055
L_260120:
	movq 0x0(%r11),%r15
	cmpl $0x0,%r14d
	jl L_486404
L_260121:
	movq %r15,0x30(%rbp)
	movl $0x0,0xC(%rbp)
	movl $0x0,0x38(%rbp)
.p2align 0x4,,0x7
loop_3067:
	movl 0x38(%rbp),%ecx
	cmpl 0x8(%rbp),%ecx
	jnl L_486400
L_260144:
	movslq %ecx,%r15
	movq 0x18(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x40(%rbp)
	movq 0x8(%r13),%r14
	movq 0x30(%rbp),%r11
	movq 0x8(%r11),%r10
	movq %r14,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	je L_486397
L_260145:
	movq %r10,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	jne L_486396
L_260152:
	movq %r13,%r15
.p2align 0x4,,0x7
L_260150:
	movq %r15,0x30(%rbp)
	movl %ecx,0xC(%rbp)
	incl 0x38(%rbp)
	jmp loop_3067
.p2align 0x4
L_486396:
L_260146:
	movq %r10,0x90(%rbp)
	movq %r14,0x98(%rbp)
	addq $0x90,%rbp
	leaq (L_260147+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1216
.p2align 0x4
L_486397:
L_260153:
	shrq $0x1,%r14
	movl %r14d,%r11d
	movq %r10,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	jne L_486399
L_260155:
	shrq $0x1,%r10
	movl %r10d,%r14d
	cmpl %r11d,%r14d
	jl L_486398
L_260156:
	movq 0x30(%rbp),%r15
	movl 0xC(%rbp),%r14d
	xchgl %r14d,%ecx
	jmp L_260150
.p2align 0x4
L_486398:
.p2align 0x4,,0x7
L_260149:
	movq 0x40(%rbp),%r15
	movl 0x38(%rbp),%ecx
	jmp L_260150
.p2align 0x4
L_486399:
L_260154:
	movq 0x30(%rbp),%r15
	movl 0xC(%rbp),%r14d
	xchgl %r14d,%ecx
	jmp L_260150
.p2align 0x4
L_486400:
L_260122:
	movl 0x8(%rbp),%r15d
	decl %r15d
	movslq 0xC(%rbp),%r14
	movq 0x10(%rbp),%r13
	cmpq %r13,%r14
	jnb L_260055
L_260124:
	movq 0x18(%rbp),%r11
	movq 0x0(%r11,%r14,8),%r10
	movslq %r15d,%r9
	cmpq %r13,%r9
	jnb L_260055
L_260126:
	movq 0x0(%r11,%r9,8),%r13
	movq %r11,%r8
	shrq $0x8,%r8
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r8,1)
	movq %r13,0x0(%r11,%r14,8)
	movq %r11,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%rsp,%r14,1)
	movq %r10,0x0(%r11,%r9,8)
	decl %r15d
	jo L_260005
L_260127:
	movl %r15d,0x90(%rbp)
	movl $0x0,0x94(%rbp)
	movq %r11,0x98(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0xA0(%rbp)
	addq $0x90,%rbp
	leaq (L_260128+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp qsort_33
.p2align 0x4
L_486404:
L_260158:
	movq (globalObjptr+0x4F8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_486406:
L_260131:
	movq 0x20(%rbp),%rdx
	testq %rdx,%rdx
	jz L_486410
L_260132:
	cmpq $0x7FFFFFFF,%rdx
	ja L_260061
L_260133:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x150D,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_260134+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260134
.p2align 0x4
.long 0x4376
L_260134:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq %rax,%r15
L_260135:
	xorq %r14,%r14
.p2align 0x4,,0x7
loop_3068:
	cmpq 0x20(%rbp),%r14
	jnl L_486408
L_260137:
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq 0x10(%rbp),%r11
	jnb L_260055
L_260139:
	movq %r14,%r13
	movq %r14,%r10
	movq 0x18(%rbp),%r9
	movq 0x0(%r9,%r11,8),%r8
	movq 0x0(%r8),%rsp
	movq 0x8(%r8),%rsi
	movq %r15,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r11,1)
	salq $0x4,%r13
	movq %rsp,0x0(%r15,%r13,1)
	movq %r15,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%r9,%r13,1)
	salq $0x4,%r10
	movq %rsi,0x8(%r15,%r10,1)
	incq %r14
	jmp loop_3068
.p2align 0x4
L_486408:
L_260136:
	movq $0x185D,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x8(%rbp)
	movq 0x48(%rbp),%r15
	jmp x_869
.p2align 0x4
L_486410:
L_260141:
	movq (globalObjptr+0x1BE8)(%rip),%r15
	jmp L_260135
.p2align 0x4
L_486415:
L_260166:
	movq %r15,0x8(%rbp)
	xorl %ecx,%ecx
	jmp L_260111
.p2align 0x4
L_486416:
L_260167:
	movq $0x1,%r13
	jmp L_260102
.p2align 0x4
L_486417:
L_260168:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_260169+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260169
.p2align 0x4
.long 0x4378
L_260169:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	jmp L_260100
.p2align 0x4
L_486418:
L_260170:
	movq 0x8(%rbp),%r14
	xchgq %r14,%r15
	jmp L_260105
.p2align 0x4
.long 0x436E
L_260049:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_260050
L_260051:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_260052+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260052
.p2align 0x4
.long 0x436F
L_260052:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_260050:
	movq 0x8(%rbp),%r15
	jmp L_260047
.p2align 0x4
.long 0x4371
L_260086:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movq 0xB0(%rbp),%r15
	movq %r15,0xA8(%rbp)
	movq 0x98(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0xA0(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0xA0(%rbp)
	jmp loop_3064
.p2align 0x4
.long 0x4371
L_260064:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movq 0xB0(%rbp),%r15
	movq %r15,0xA8(%rbp)
	movq 0x98(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0xA0(%rbp),%r13
	movq %r13,%r10
	salq $0x4,%r10
	movq %r15,0x0(%r14,%r10,1)
	movq %r14,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,%r15
	salq $0x4,%r15
	movq $0x1,0x8(%r14,%r15,1)
	incq %r13
	movq %r13,0xA0(%rbp)
	jmp loop_3062
.p2align 0x4
.long 0x4380
L_260278:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq $0x1,0x90(%rbp)
	movl $0x0,0x98(%rbp)
	addq $0x90,%rbp
	leaq (L_260279+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_1
.p2align 0x4
.long 0x4381
L_260321:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq %r15,0x90(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x98(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0xA0(%rbp)
	addq $0x90,%rbp
	leaq (L_260280+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp con_2
.p2align 0x4
.long 0x4380
L_260309:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq $0x1,0x90(%rbp)
	movl $0x0,0x98(%rbp)
	addq $0x90,%rbp
	leaq (L_260310+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_1
.p2align 0x4
.long 0x4381
L_260299:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq %r15,0x90(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x98(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0xA0(%rbp)
	addq $0x90,%rbp
	leaq (L_260280+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp con_2
.p2align 0x4
.long 0x437A
L_260185:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r15,0x10(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1446,%r15
	jne L_259997
L_260186:
	movq 0x8(%r14),%r15
	movq 0x8(%r15),%r13
	cmpq $0x1,%r13
	je L_486432
L_260187:
	movq 0x8(%r13),%r15
	movq %r15,0x10(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x18(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x20(%rbp)
.p2align 0x4,,0x7
L_260188:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_486431
.p2align 0x4,,0x7
L_260189:
	movq 0x8(%rbp),%r13
	cmpq $0x1,%r13
	je L_260198
L_260190:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
.p2align 0x4,,0x7
L_260191:
	movq 0x8(%r15),%r13
	movq 0x18(%rbp),%r15
	movq %r15,%r11
	andq $0x1,%r11
	cmpq $0x1,%r11
	je L_486427
L_260192:
L_260193:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_260194
L_260206:
	movq 0x8(%r15),%r11
	cmpq %r11,0x8(%r13)
	je L_486424
L_260194:
	cmpq $0x1,%r14
	je L_486420
L_260195:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_260191
.p2align 0x4
L_486420:
L_260196:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_486423
.p2align 0x4,,0x7
L_260198:
	movq $0x1039,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x283F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x10(%rbp),%r15
	cmpq $0x1,%r15
	je L_486421
L_260199:
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x10(%rbp)
	movq %r14,0x18(%rbp)
	jmp L_260188
.p2align 0x4
L_486421:
L_260200:
	xchgq %r14,%r15
L_260201:
	cmpq $0x1,%r15
	je L_486422
L_260202:
	movq %r15,%r14
	movq 0x8(%r15),%r15
	xorl %ecx,%ecx
	jmp L_260107
.p2align 0x4
L_486422:
L_260203:
	movq %r15,0x8(%rbp)
	xorl %ecx,%ecx
	jmp L_260111
.p2align 0x4
L_486423:
L_260204:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_260205+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260205
.p2align 0x4
.long 0x437B
L_260205:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	jmp L_260198
.p2align 0x4
L_486424:
L_260209:
	movq 0x10(%rbp),%r15
	cmpq $0x1,%r15
	je L_486425
L_260210:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x10(%rbp)
	movq %r14,0x18(%rbp)
	jmp L_260188
.p2align 0x4
L_486425:
L_260211:
	movq 0x20(%rbp),%r14
	xchgq %r14,%r15
	jmp L_260201
.p2align 0x4
L_486427:
L_260212:
	shrq $0x1,%r15
	movl %r15d,%r11d
	movq %r13,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	jne L_260194
L_260213:
	shrq $0x1,%r13
	movl %r13d,%r15d
	cmpl %r15d,%r11d
	je L_260209
	jmp L_260194
.p2align 0x4
L_486431:
L_260217:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_260218+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260218
.p2align 0x4
.long 0x437B
L_260218:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	jmp L_260189
.p2align 0x4
L_486432:
L_260219:
	movq 0x8(%rbp),%r15
	jmp L_260201
.p2align 0x4
.long 0x4377
L_260147:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movl 0x90(%rbp),%r14d
	movl %r14d,0x3C(%rbp)
	testl %r14d,%r14d
	jz L_260149
L_260151:
	movq 0x30(%rbp),%r15
	movl 0xC(%rbp),%ecx
	jmp L_260150
.p2align 0x4
.long 0x4375
L_260128:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_260129
L_260142:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_260143+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260143
.p2align 0x4
.long 0x4376
L_260143:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_260129:
	movq $0x3CF3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r15,0x90(%rbp)
	movl 0x8(%rbp),%r15d
	movl %r15d,0x98(%rbp)
	movl $0x1,0x9C(%rbp)
	addq $0x90,%rbp
	leaq (L_260130+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fold_0
.p2align 0x4
.long 0x4381
L_260279:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq %r15,0x90(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x98(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0xA0(%rbp)
	addq $0x90,%rbp
	leaq (L_260280+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp con_2
.p2align 0x4
.long 0x4382
L_260280:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq $0x6,0x90(%rbp)
	movq 0x0(%rbp),%r14
	movq %r14,0x98(%rbp)
	movq %r15,0xA0(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0xA8(%rbp)
	addq $0x90,%rbp
	leaq (L_260281+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unify_1
.p2align 0x4
.long 0x4381
L_260310:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq %r15,0x90(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x98(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0xA0(%rbp)
	addq $0x90,%rbp
	leaq (L_260280+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp con_2
.p2align 0x4
.long 0x4375
L_260130:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	jmp L_260131
.p2align 0x4
.long 0x4383
L_260281:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x10(%rbp)
	movb 0x40(%rbp),%r15b
	movb %r15b,0x90(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x90,%rbp
	leaq (L_260282+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp defaultTycon_0
.p2align 0x4
.long 0x4384
L_260282:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_260283
L_260284:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_260285+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260285
.p2align 0x4
.long 0x4385
L_260285:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_260283:
	movq (globalObjptr+0xF10)(%rip),%r15
	movq $0x9EB,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x60(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x88(%rbp)
	jmp x_870
.text
.p2align 0x4
.globl qsort_33
.hidden qsort_33
qsort_33:
L_260340:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb loop_3070
L_260407:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_260408+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260408
.p2align 0x4
.long 0x4E8
L_260408:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
loop_3070:
	movl 0x0(%rbp),%r15d
	subl 0x4(%rbp),%r15d
	jo L_260342
L_260343:
	cmpl $0x14,%r15d
	jng L_486438
L_260345:
	movq (globalObjptr+0x550)(%rip),%r14
	movl 0x0(%r14),%r13d
	imull $0x19660D,%r13d
	addl $0x3C6EF35F,%r13d
	movl %r13d,0x18(%rbp)
	movl %r13d,0x0(%r14)
	incl %r15d
	movl %r15d,0x1C(%rbp)
	jo L_486437
L_260346:
	movl %r15d,0x28(%rbp)
	movl %r13d,0x2C(%rbp)
	addq $0x28,%rbp
	leaq (L_260347+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp div_0
.p2align 0x4
L_486437:
L_260342:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_486438:
L_260344:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4F4
L_260347:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl 0x28(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	movl 0x1C(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	movl 0x18(%rbp),%r15d
	movl %r15d,0x24(%rbp)
	addq $0x20,%rbp
	leaq (L_260348+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp mod_0
.p2align 0x4
.long 0x4E5
L_260348:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movl 0x20(%rbp),%r15d
	movl 0x4(%rbp),%ecx
	movl %ecx,%r14d
	addl %r15d,%r14d
	movl %r15d,0x18(%rbp)
	jo L_260342
L_260349:
	movq 0x10(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r15),%r11
	movq %r11,0x20(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movq %r15,0x28(%rbp)
	movslq %ecx,%r10
	movq %r10,0x30(%rbp)
	cmpq %r15,%r10
	jnb L_260351
L_260352:
	movq 0x0(%r13,%r10,8),%r9
	movslq %r14d,%r8
	cmpq %r15,%r8
	jnb L_260351
L_260354:
	movq 0x0(%r13,%r8,8),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r14
	movq %r14,0x38(%rbp)
	cmpq %r14,%r10
	jnb L_260351
L_260356:
	movq %r11,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r13,1)
	movq %r15,0x0(%r11,%r10,8)
	cmpq %r14,%r8
	jnb L_260351
L_260358:
	movq %r11,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%rsp,%r15,1)
	movq %r9,0x0(%r11,%r8,8)
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq %r14,0x40(%rbp)
	cmpq %r14,%r10
	jnb L_260351
L_260360:
	movq 0x0(%r15,%r10,8),%r14
	movq %r14,0x48(%rbp)
	movl 0x0(%rbp),%r15d
	incl %r15d
	jo L_260342
L_260361:
	movl %r15d,0x50(%rbp)
.p2align 0x4,,0x7
loop_3072:
	incl %ecx
	movl %ecx,0x54(%rbp)
	jo L_260342
L_260362:
	movslq %ecx,%r15
	movq %r15,0x58(%rbp)
	cmpq 0x40(%rbp),%r15
	jnb L_260351
L_260364:
	movq 0x48(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x60(%rbp)
	movq 0x8(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r11
	movq 0x8(%r11),%r10
	andq $0x1,%r13
	cmpq $0x1,%r13
	je L_486441
L_260365:
	movq %r10,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	jne L_486440
L_260401:
	jmp loop_3072
.p2align 0x4
L_486440:
L_260366:
	movq %r10,0x70(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_260367+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1216
.p2align 0x4
L_486441:
L_260402:
	movq 0x60(%rbp),%r15
	shrq $0x1,%r15
	movl %r15d,%r14d
	movq %r10,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	jne L_486457
L_260404:
	shrq $0x1,%r10
	movl %r10d,%r15d
	cmpl %r14d,%r15d
	jl loop_3072
L_260405:
	movl 0x50(%rbp),%r15d
	xchgl %r15d,%ecx
.p2align 0x4,,0x7
loop_3073:
	decl %ecx
	movl %ecx,0x50(%rbp)
	jo L_260342
L_260370:
	movslq %ecx,%r15
	movq %r15,0x68(%rbp)
	cmpq 0x40(%rbp),%r15
	jnb L_260351
L_260372:
	movq 0x8(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x8(%r13),%r11
	movq %r11,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	je L_486443
L_260373:
	movq 0x60(%rbp),%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	jne L_486442
L_260395:
	jmp loop_3073
.p2align 0x4
L_486442:
L_260374:
	movq %r11,0x80(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_260375+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1216
.p2align 0x4
L_486443:
L_260396:
	shrq $0x1,%r11
	movl %r11d,%r15d
	movq 0x60(%rbp),%r14
	movq %r14,%r13
	andq $0x1,%r13
	cmpq $0x1,%r13
	jne L_260378
L_260398:
	shrq $0x1,%r14
	movl %r14d,%r13d
	cmpl %r15d,%r13d
	jnl L_486444
L_260400:
	jmp loop_3073
.p2align 0x4
L_486444:
.p2align 0x4,,0x7
L_260378:
	movl 0x54(%rbp),%ecx
	cmpl %ecx,0x50(%rbp)
	jl L_486449
L_260379:
	movq 0x58(%rbp),%r15
	movq 0x28(%rbp),%r14
	cmpq %r14,%r15
	jnb L_260351
L_260381:
	movq 0x18(%rbp),%r13
	movq 0x0(%r13,%r15,8),%r11
	movq 0x68(%rbp),%r10
	cmpq %r14,%r10
	jnb L_260351
L_260383:
	movq 0x0(%r13,%r10,8),%r14
	movq 0x38(%rbp),%r13
	cmpq %r13,%r15
	jnb L_260351
L_260385:
	movq 0x20(%rbp),%r9
	movq %r9,%r8
	shrq $0x8,%r8
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r8,1)
	movq %r14,0x0(%r9,%r15,8)
	cmpq %r13,%r10
	jnb L_486445
L_260387:
	movq %r9,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%rsp,%r15,1)
	movq %r11,0x0(%r9,%r10,8)
	jmp loop_3072
.p2align 0x4
L_486445:
L_260351:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_486449:
L_260388:
	movq 0x18(%rbp),%r15
	movq 0x30(%rbp),%r14
	movq 0x0(%r15,%r14,8),%r13
	movq 0x68(%rbp),%r11
	cmpq 0x28(%rbp),%r11
	jnb L_260351
L_260390:
	movq 0x0(%r15,%r11,8),%r10
	movq 0x20(%rbp),%r15
	movq %r15,%r9
	shrq $0x8,%r9
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r9,1)
	movq %r10,0x0(%r15,%r14,8)
	cmpq 0x38(%rbp),%r11
	jnb L_260351
L_260392:
	movq %r15,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r8,%r14,1)
	movq %r13,0x0(%r15,%r11,8)
	movl 0x50(%rbp),%r15d
	decl %r15d
	jo L_260342
L_260393:
	movl %r15d,0x60(%rbp)
	movl 0x4(%rbp),%r15d
	movl %r15d,0x64(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x60,%rbp
	leaq (L_260394+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp qsort_33
.p2align 0x4
L_486457:
L_260403:
	movl 0x50(%rbp),%r15d
	xchgl %r15d,%ecx
	jmp loop_3073
.p2align 0x4
.long 0x4F5
L_260367:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movl 0x70(%rbp),%r15d
	movl %r15d,0x68(%rbp)
	testl %r15d,%r15d
	jnz L_486467
L_260368:
	movl 0x54(%rbp),%ecx
	jmp loop_3072
.p2align 0x4
L_486467:
L_260369:
	movl 0x50(%rbp),%ecx
	jmp loop_3073
.p2align 0x4
.long 0x4F6
L_260375:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movl 0x78(%rbp),%r15d
	movl %r15d,0x70(%rbp)
	testl %r15d,%r15d
	jnz L_260378
L_260376:
	movl 0x50(%rbp),%ecx
	jmp loop_3073
.p2align 0x4
.long 0x4F7
L_260394:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movl 0x54(%rbp),%r15d
	movl %r15d,0x4(%rbp)
	jmp loop_3070
.text
.p2align 0x4
.globl toCType_0
.hidden toCType_0
toCType_0:
L_260409:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_260410
L_260450:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_260451+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260451
.p2align 0x4
.long 0x45F
L_260451:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_260410:
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_260411+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_0
.p2align 0x4
.long 0x51E
L_260411:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r13),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1448,%r14
	jne L_486476
L_260413:
	movq 0x8(%r15),%r13
	movq 0x0(%r13),%r14
L_260414:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_260415
L_260438:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xE7B,%r15
	jne L_260415
L_260439:
	movq 0x0(%r14),%r15
	movq 0x10(%rbp),%r13
	cmpq $0x1,%r13
	je L_260415
L_260440:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r13
	movq %r13,0x10(%rbp)
.p2align 0x4,,0x7
L_260441:
	movq 0x10(%rbp),%r13
	movq 0x8(%r13),%r11
	movq 0x10(%r15),%r10
	cmpq %r10,0x10(%r11)
	je L_486471
L_260442:
	cmpq $0x1,%r14
	je L_486470
L_260443:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq %r13,0x10(%rbp)
	jmp L_260441
.p2align 0x4
L_486470:
L_260415:
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_260416+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_0
.p2align 0x4
L_486471:
L_260445:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_260446
L_260447:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_260448+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260448
.p2align 0x4
.long 0x24
L_260448:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_260446:
	movq 0x10(%rbp),%r15
	movq 0x10(%r15),%r14
	movb 0x0(%r15),%r13b
	movq $0x20F7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movzbl %r13b,%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_486476:
L_260412:
	movq (globalObjptr+0x1500)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4E5
L_260416:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r10
	movq %r10,0x18(%rbp)
	movq 0x0(%r10),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1448,%r14
	jne L_260412
L_260417:
	movq 0x8(%r15),%r10
	movq 0x0(%r10),%r14
L_260418:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_260419
L_260420:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xE7B,%r15
	jne L_260419
L_260421:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r10
	movq 0x10(%rbp),%r9
	cmpq $0x1,%r9
	je L_260419
L_260422:
	movq 0x8(%r9),%r11
	movq 0x0(%r9),%r13
	movq %r10,%r14
.p2align 0x4,,0x7
L_260423:
	movq 0x10(%r13),%r10
	cmpq %r10,0x10(%r14)
	je L_486478
L_260424:
	cmpq $0x1,%r11
	je L_486477
L_260425:
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r11
	jmp L_260423
.p2align 0x4
L_486477:
L_260419:
	movq $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_486478:
L_260427:
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_486481
L_260429:
	cmpl $0x1,%r13d
	jne L_260419
L_260431:
	cmpq $0x0,%r14
	jna L_486479
L_260433:
	movq 0x8(%rbp),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_260434+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toCType_0
.p2align 0x4
L_486479:
L_260432:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_486481:
L_260428:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_260434:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	cmpq $0x1,%r15
	movq %r15,0x0(%rbp)
	je L_260419
L_260435:
	movq (globalObjptr+0x5010)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl scopeCheck_0
.hidden scopeCheck_0
scopeCheck_0:
L_260452:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_260453
L_260585:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_260586+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260586
.p2align 0x4
.long 0x4E7
L_260586:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_260453:
	movq 0x18(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x10(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq %r14,0x38(%rbp)
	movl %r14d,%ecx
	movslq %ecx,%r15
	cmpq %r15,%r14
	jne L_260455
L_260456:
	movl $0x0,0x4(%rbp)
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_3074:
	cmpl %ecx,%ebx
	jnl L_486488
L_260582:
	movl %ebx,%r15d
	incl %r15d
	movslq %ebx,%r14
	cmpq 0x38(%rbp),%r14
	jnb L_486487
L_260584:
	movq 0x10(%rbp),%r13
	movzbl 0x0(%r13,%r14,1),%r11d
	movl 0x4(%rbp),%r14d
	imull $0x1F,%r14d
	addl %r14d,%r11d
	movl %r11d,0x4(%rbp)
	movl %r15d,%ebx
	jmp loop_3074
.p2align 0x4
L_486487:
L_260463:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_486488:
L_260457:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_260458
L_260580:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_260581+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260581
.p2align 0x4
.long 0x1113
L_260581:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_260458:
	movq 0x20(%rbp),%r14
	movq 0x0(%r14),%r15
	movq (globalObjptr+0xAE0)(%rip),%r14
	movq 0x0(%r14),%r13
	incq %r13
	jo L_486532
L_260460:
	movq %r13,0x0(%r14)
	movq 0x28(%rbp),%r14
	movl 0x0(%r14),%r13d
	andl 0x4(%rbp),%r13d
	cmpl $0x0,%r13d
	jl L_260474
L_260461:
	movslq %r13d,%r14
	movq %r14,0x18(%rbp)
	cmpq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	jnb L_260463
L_260464:
	movq 0x0(%r15,%r14,8),%r13
	movq %r13,0x40(%rbp)
	cmpq $0x1,%r13
	je L_260473
L_260465:
	movq 0x8(%r13),%r15
	movq 0x0(%r13),%r14
	movq %r14,0x48(%rbp)
.p2align 0x4,,0x7
L_260466:
	movq (globalObjptr+0xAE8)(%rip),%r11
	movq 0x0(%r11),%r14
	incq %r14
	jo L_486528
L_260468:
	movq %r14,0x0(%r11)
	movq 0x48(%rbp),%r11
	movq 0x8(%r11),%r14
	movl 0x4(%rbp),%r10d
	cmpl %r10d,0x0(%r11)
	jne L_486525
L_260552:
	cmpq %r14,0x10(%rbp)
	je L_486523
L_260553:
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r11
	cmpq %r11,0x38(%rbp)
	jne L_486520
L_260560:
	xorq %r13,%r13
.p2align 0x4,,0x7
vectorEqualLoop_204:
	cmpq %r13,0x38(%rbp)
	je L_486518
L_260561:
	movq 0x10(%rbp),%r11
	movb 0x0(%r14,%r13,1),%r10b
	cmpb %r10b,0x0(%r11,%r13,1)
	jne L_486489
L_260568:
	incq %r13
	jmp vectorEqualLoop_204
.p2align 0x4
L_486489:
L_260562:
	cmpq $0x1,%r15
	je L_486490
L_260563:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r14,0x48(%rbp)
	jmp L_260466
.p2align 0x4
L_486490:
L_260564:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_260473
L_260566:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_260567+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260567
.p2align 0x4
.long 0x10E1
L_260567:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_260473:
	movq $0xFA9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x4(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movzbl 0x0(%rbp),%r14d
	movl %r14d,0x4(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq (globalObjptr+0x5020)(%rip),%r14
	movl 0x0(%r14),%r13d
	incl %r13d
	jo L_260474
L_260475:
	movl %r13d,0x0(%r14)
	movq 0x20(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x28F5,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	addq $0x18,%r12
	movq 0x40(%rbp),%r15
	movq %r15,0x8(%r10)
	movq 0x18(%rbp),%rdx
	cmpq 0xFFFFFFFFFFFFFFF0(%r11),%rdx
	jnb L_260463
L_260477:
	movq %r11,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r15,1)
	movq %r10,0x0(%r11,%rdx,8)
	movq 0x0(%r13),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r11
	movl %r11d,%r10d
	movslq %r10d,%r9
	cmpq %r9,%r11
	jne L_260455
L_260479:
	movl 0x0(%r14),%r15d
	imull $0x4,%r15d
	jo L_260474
L_260480:
	cmpl %r15d,%r10d
	jnl L_486512
L_260521:
	addl %r10d,%r10d
	jo L_260474
L_260522:
	movq 0x28(%rbp),%r15
	movl 0x0(%r15),%r14d
	shll $0x1,%r14d
	orl $0x1,%r14d
	movl %r14d,0x4(%rbp)
	movslq %r10d,%rdx
	movq %rdx,0x18(%rbp)
	cmpq $0x7FFFFFFF,%rdx
	ja L_486510
L_260523:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x653,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_260524+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260524
.p2align 0x4
.long 0xE93
L_260524:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq %rax,0x38(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3075:
	cmpq 0x18(%rbp),%r15
	jnl L_486491
L_260548:
	movq 0x38(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_3075
.p2align 0x4
L_486491:
L_260525:
	movq 0x20(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movl %r13d,0x48(%rbp)
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_486509
L_260527:
	cmpl $0x0,%r13d
	jl L_486508
L_260528:
	movl $0x0,0x4C(%rbp)
.p2align 0x4,,0x7
loop_3076:
	movl 0x4C(%rbp),%r15d
	cmpl 0x48(%rbp),%r15d
	jnl L_486497
L_260533:
	movslq %r15d,%r14
	movq 0x40(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	cmpq $0x1,%r13
	je L_260542
L_260534:
	movq 0x8(%r13),%r15
	movq %r15,0x50(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x58(%rbp)
L_260535:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_486495
.p2align 0x4,,0x7
L_260536:
	movq 0x58(%rbp),%r15
	movl 0x0(%r15),%r14d
	andl 0x4(%rbp),%r14d
	cmpl $0x0,%r14d
	jl L_486494
L_260537:
	movslq %r14d,%r13
	cmpq 0x18(%rbp),%r13
	jnb L_260463
L_260539:
	movq 0x38(%rbp),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq $0x28F5,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r15,0x0(%r10)
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r10,0x0(%r14,%r13,8)
	movq 0x50(%rbp),%r15
	cmpq $0x1,%r15
	je L_486492
L_260540:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x50(%rbp)
	movq %r14,0x58(%rbp)
	jmp L_260535
.p2align 0x4
L_486492:
L_260542:
	incl 0x4C(%rbp)
	jmp loop_3076
.p2align 0x4
L_486494:
L_260474:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_486495:
L_260544:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_260545+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260545
.p2align 0x4
.long 0x4387
L_260545:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	jmp L_260536
.p2align 0x4
L_486497:
L_260529:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_260530
L_260531:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r14d
	movl %r14d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r14
	movq %r14,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_260532+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260532
.p2align 0x4
.long 0xE91
L_260532:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_260530:
	movq 0x20(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r15
	movl 0x4(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movb 0x0(%rbp),%dl
L_260482:
	movb 0x0(%rbp),%r15b
	cmpb %dl,%r15b
	je L_486506
L_260483:
	cmpb $0x1,%r15b
	je L_486503
	cmpb $0x2,%r15b
	je L_486500
L_260484:
	cmpb $0x1,%dl
	je L_486499
	cmpb $0x2,%dl
	je L_486498
L_260485:
	movq (globalObjptr+0xE928)(%rip),%r15
	movq %r15,%r13
	movq %r15,%r14
	movq %r13,%r15
L_260486:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x18,%r12
	movq (globalObjptr+0x5028)(%rip),%r11
	movq %r11,0x8(%r13)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0x10980)(%rip),%r13
	movq %r13,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0x10988)(%rip),%r14
	movq %r14,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x10(%rbp)
	movq (globalObjptr+0x10990)(%rip),%r15
	movq $0x1,0x18(%rbp)
L_260487:
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_260488+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_486498:
L_260511:
	movq (globalObjptr+0xE948)(%rip),%r15
	movq (globalObjptr+0xE928)(%rip),%r14
	jmp L_260486
.p2align 0x4
L_486499:
L_260510:
	movq (globalObjptr+0xE940)(%rip),%r15
	movq (globalObjptr+0xE928)(%rip),%r14
	jmp L_260486
.p2align 0x4
L_486500:
L_260516:
	cmpb $0x1,%dl
	je L_486502
	cmpb $0x2,%dl
	je L_486501
L_260517:
	movq (globalObjptr+0xE928)(%rip),%r15
	movq (globalObjptr+0xE948)(%rip),%r14
	jmp L_260486
.p2align 0x4
L_486501:
L_260519:
	movq (globalObjptr+0xE948)(%rip),%r15
	movq %r15,%r13
	movq %r15,%r14
	movq %r13,%r15
	jmp L_260486
.p2align 0x4
L_486502:
L_260518:
	movq (globalObjptr+0xE940)(%rip),%r15
	movq (globalObjptr+0xE948)(%rip),%r14
	jmp L_260486
.p2align 0x4
L_486503:
L_260512:
	cmpb $0x1,%dl
	je L_486505
	cmpb $0x2,%dl
	je L_486504
L_260513:
	movq (globalObjptr+0xE928)(%rip),%r13
	movq (globalObjptr+0xE940)(%rip),%r14
	movq %r13,%r15
	jmp L_260486
.p2align 0x4
L_486504:
L_260515:
	movq (globalObjptr+0xE948)(%rip),%r13
	movq (globalObjptr+0xE940)(%rip),%r14
	movq %r13,%r15
	jmp L_260486
.p2align 0x4
L_486505:
L_260514:
	movq (globalObjptr+0xE940)(%rip),%r14
	movq %r14,%r13
	movq %r13,%r15
	jmp L_260486
.p2align 0x4
L_486506:
L_260520:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_486508:
L_260547:
	movq (globalObjptr+0x4F8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_486509:
L_260455:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_486510:
L_260549:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_486512:
L_260481:
	movb 0x0(%rbp),%dl
	jmp L_260482
.p2align 0x4
L_486518:
L_260569:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_260571
L_260572:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_260573+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260573
.p2align 0x4
.long 0x1A43
L_260573:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_260571:
	movq 0x48(%rbp),%r15
	movb 0x4(%r15),%dl
	jmp L_260482
.p2align 0x4
L_486520:
L_260554:
	cmpq $0x1,%r15
	je L_486521
L_260555:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r14,0x48(%rbp)
	jmp L_260466
.p2align 0x4
L_486521:
L_260556:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_260473
L_260558:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_260559+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260559
.p2align 0x4
.long 0x10E1
L_260559:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_260473
.p2align 0x4
L_486523:
L_260574:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_260571
L_260576:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_260577+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260577
.p2align 0x4
.long 0x1A43
L_260577:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	jmp L_260571
.p2align 0x4
L_486525:
L_260469:
	cmpq $0x1,%r15
	je L_486526
L_260470:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r14,0x48(%rbp)
	jmp L_260466
.p2align 0x4
L_486526:
L_260471:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_260473
L_260550:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_260551+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260551
.p2align 0x4
.long 0x10E1
L_260551:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_260473
.p2align 0x4
L_486528:
L_260467:
	movq (globalObjptr+0xAF0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_486532:
L_260459:
	movq (globalObjptr+0xAF8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x742
L_260488:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_260489
L_260508:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_260509+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260509
.p2align 0x4
.long 0xA27
L_260509:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_260489:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_486536
L_260490:
	movq %r15,0x18(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	jmp L_260487
.p2align 0x4
L_486536:
L_260491:
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq $0x1,0x20(%rbp)
.p2align 0x4,,0x7
L_260492:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_486542
.p2align 0x4,,0x7
L_260493:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x28(%rbp)
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_486537
L_260494:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r13,0x18(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_260492
.p2align 0x4
L_486537:
L_260495:
	movq 0x20(%rbp),%r13
	movq 0x18(%rbp),%r11
	xorl %ecx,%ecx
	xchgq %r11,%r15
	xchgq %r13,%r14
.p2align 0x4,,0x7
L_260496:
	addl 0x0(%r15),%ecx
	movl %ecx,0x10(%rbp)
	jo L_260474
L_260497:
	cmpq $0x1,%r14
	je L_486538
L_260498:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_260496
.p2align 0x4
L_486538:
L_260499:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_260500
L_260504:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_260505+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260505
.p2align 0x4
.long 0x4386
L_260505:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_260500:
	movl 0x10(%rbp),%ecx
	testl %ecx,%ecx
	jz L_486539
L_260501:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
L_260502:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x9D0)(%rip),%r15
	movq %r15,0x0(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq %r14,0x8(%rbp)
	movq (globalObjptr+0xDD30)(%rip),%r15
	movq %r15,0x18(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x20(%rbp)
	jmp msg_0
.p2align 0x4
L_486539:
L_260503:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_260502
.p2align 0x4
L_486542:
L_260506:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_260507+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260507
.p2align 0x4
.long 0xA27
L_260507:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_260493
.text
.p2align 0x4
.globl primApp_8
.hidden primApp_8
primApp_8:
L_260587:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_260821
L_260588:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_486545
L_260589:
	movq 0x18(%rbp),%r15
	movq 0x78(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x70(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x68(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x60(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x58(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x10(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_486544
L_260591:
	movl %r13d,0x58(%rbp)
	movq $0x3EAB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq %r14,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_260592+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_1
.p2align 0x4
L_486544:
L_260590:
	movq (globalObjptr+0x4D8)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_486545:
L_260821:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_260822+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260822
.p2align 0x4
.long 0x4AE
L_260822:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	jmp L_260589
.p2align 0x4
.long 0x10B7
L_260592:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_260593
L_260819:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_260820+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260820
.p2align 0x4
.long 0x63B
L_260820:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_260593:
	movq 0x8(%rbp),%r15
	movq %r15,%r14
	andq $0xFF,%r14
	cmpq $0x1,%r14
	je L_486593
	cmpq $0x2,%r14
	je L_486592
	cmpq $0x3,%r14
	je L_486590
	cmpq $0x5,%r14
	je L_486588
	cmpq $0x6,%r14
	je L_486586
	cmpq $0x7,%r14
	je L_486584
	cmpq $0xF,%r14
	je L_486583
	cmpq $0x13,%r14
	je L_486581
	cmpq $0x17,%r14
	je L_486580
	cmpq $0x1A,%r14
	je L_486578
	cmpq $0x35,%r14
	je L_486577
	cmpq $0x37,%r14
	je L_486576
	cmpq $0x39,%r14
	je L_486574
	cmpq $0x3A,%r14
	je L_486572
	cmpq $0x3D,%r14
	je L_486570
	cmpq $0x41,%r14
	je L_486568
	cmpq $0x42,%r14
	je L_486566
	cmpq $0x43,%r14
	je L_486564
	cmpq $0x45,%r14
	je L_486562
	cmpq $0x46,%r14
	je L_486560
	cmpq $0x47,%r14
	je L_486558
	cmpq $0x49,%r14
	je L_486557
	cmpq $0x5A,%r14
	je L_486555
	cmpq $0x5B,%r14
	je L_486553
	cmpq $0x5D,%r14
	je L_486551
	cmpq $0x5E,%r14
	je L_486550
	cmpq $0x5F,%r14
	je L_486548
L_260594:
	andq $0x3,%r15
	jnz L_260595
L_260600:
L_260595:
	movq $0x1,0x20(%rbp)
	movl $0x0,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_260596+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_1
.p2align 0x4
L_486548:
L_260816:
	movq 0x18(%rbp),%r14
	cmpq $0x0,0xFFFFFFFFFFFFFFF0(%r14)
	jna L_486549
L_260818:
	movq 0x0(%r14),%r13
	movq $0x3EC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	movq %r14,0x20(%rbp)
	addq $0x10,%r12
	movl $0x1,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_260596+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_1
.p2align 0x4
L_486549:
L_260613:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_486550:
L_260815:
	movq $0x3EC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x0(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r14,0x20(%rbp)
	movl $0x1,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_260596+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_1
.p2align 0x4
L_486551:
L_260800:
	movq 0x18(%rbp),%r14
	cmpq $0x0,0xFFFFFFFFFFFFFFF0(%r14)
	jna L_260613
L_260802:
	movq 0x0(%r14),%r13
	movq %r13,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_260803+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_0
.p2align 0x4
L_486553:
L_260785:
	movq 0x18(%rbp),%r14
	cmpq $0x0,0xFFFFFFFFFFFFFFF0(%r14)
	jna L_260613
L_260787:
	movq 0x0(%r14),%r13
	movq %r13,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_260788+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_0
.p2align 0x4
L_486555:
L_260770:
	movq 0x18(%rbp),%r14
	cmpq $0x0,0xFFFFFFFFFFFFFFF0(%r14)
	jna L_260613
L_260772:
	movq 0x0(%r14),%r13
	movq %r13,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_260773+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_0
.p2align 0x4
L_486557:
L_260757:
	movq 0x0(%rbp),%r14
	movq %r14,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_260758+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_0
.p2align 0x4
L_486558:
L_260742:
	movq 0x18(%rbp),%r14
	cmpq $0x0,0xFFFFFFFFFFFFFFF0(%r14)
	jna L_260613
L_260744:
	movq 0x0(%r14),%r13
	movq %r13,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_260745+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_0
.p2align 0x4
L_486560:
L_260727:
	movq 0x18(%rbp),%r14
	cmpq $0x0,0xFFFFFFFFFFFFFFF0(%r14)
	jna L_260613
L_260729:
	movq 0x0(%r14),%r13
	movq %r13,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_260730+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_0
.p2align 0x4
L_486562:
L_260724:
	movq 0x18(%rbp),%r14
	cmpq $0x0,0xFFFFFFFFFFFFFFF0(%r14)
	jna L_260613
L_260726:
	movq 0x0(%r14),%r13
	movq $0x3EC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	movq %r14,0x20(%rbp)
	addq $0x10,%r12
	movl $0x1,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_260596+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_1
.p2align 0x4
L_486564:
L_260721:
	movq 0x18(%rbp),%r14
	cmpq $0x0,0xFFFFFFFFFFFFFFF0(%r14)
	jna L_260613
L_260723:
	movq 0x0(%r14),%r13
	movq $0x3EC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	movq %r14,0x20(%rbp)
	addq $0x10,%r12
	movl $0x1,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_260596+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_1
.p2align 0x4
L_486566:
L_260718:
	movq 0x18(%rbp),%r14
	cmpq $0x0,0xFFFFFFFFFFFFFFF0(%r14)
	jna L_260613
L_260720:
	movq 0x0(%r14),%r13
	movq $0x3EC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	movq %r14,0x20(%rbp)
	addq $0x10,%r12
	movl $0x1,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_260596+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_1
.p2align 0x4
L_486568:
L_260715:
	movq 0x18(%rbp),%r14
	cmpq $0x0,0xFFFFFFFFFFFFFFF0(%r14)
	jna L_260613
L_260717:
	movq 0x0(%r14),%r13
	movq $0x3EC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	movq %r14,0x20(%rbp)
	addq $0x10,%r12
	movl $0x1,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_260596+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_1
.p2align 0x4
L_486570:
L_260712:
	movq 0x18(%rbp),%r14
	cmpq $0x0,0xFFFFFFFFFFFFFFF0(%r14)
	jna L_260613
L_260714:
	movq 0x0(%r14),%r13
	movq $0x3EC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	movq %r14,0x20(%rbp)
	addq $0x10,%r12
	movl $0x1,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_260596+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_1
.p2align 0x4
L_486572:
L_260709:
	movq 0x18(%rbp),%r14
	cmpq $0x0,0xFFFFFFFFFFFFFFF0(%r14)
	jna L_260613
L_260711:
	movq 0x0(%r14),%r13
	movq $0x3EC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	movq %r14,0x20(%rbp)
	addq $0x10,%r12
	movl $0x1,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_260596+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_1
.p2align 0x4
L_486574:
L_260706:
	movq 0x18(%rbp),%r14
	cmpq $0x0,0xFFFFFFFFFFFFFFF0(%r14)
	jna L_260613
L_260708:
	movq 0x0(%r14),%r13
	movq $0x3EC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	movq %r14,0x20(%rbp)
	addq $0x10,%r12
	movl $0x1,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_260596+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_1
.p2align 0x4
L_486576:
L_260705:
	movq $0x3EC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x0(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r14,0x20(%rbp)
	movl $0x1,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_260596+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_1
.p2align 0x4
L_486577:
L_260704:
	movq $0x3EC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x0(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r14,0x20(%rbp)
	movl $0x1,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_260596+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_1
.p2align 0x4
L_486578:
L_260695:
	movq 0x18(%rbp),%r14
	cmpq $0x0,0xFFFFFFFFFFFFFFF0(%r14)
	jna L_260613
L_260697:
	movq 0x0(%r14),%r13
	movq %r13,0x20(%rbp)
	movq 0x28(%rbp),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_260698+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp deArrowOpt_0
.p2align 0x4
L_486580:
L_260694:
	movq $0x3EC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x0(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r14,0x20(%rbp)
	movl $0x1,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_260596+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_1
.p2align 0x4
L_486581:
L_260691:
	movq 0x18(%rbp),%r14
	cmpq $0x2,0xFFFFFFFFFFFFFFF0(%r14)
	jna L_260613
L_260693:
	movq 0x10(%r14),%r13
	movq $0x3EC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	movq %r14,0x20(%rbp)
	addq $0x10,%r12
	movl $0x1,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_260596+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_1
.p2align 0x4
L_486583:
L_260690:
	movq $0x3EC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x0(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r14,0x20(%rbp)
	movl $0x1,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_260596+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_1
.p2align 0x4
L_486584:
L_260675:
	movq 0x18(%rbp),%r14
	cmpq $0x0,0xFFFFFFFFFFFFFFF0(%r14)
	jna L_260613
L_260677:
	movq 0x0(%r14),%r13
	movq %r13,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_260678+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_0
.p2align 0x4
L_486586:
L_260660:
	movq 0x18(%rbp),%r14
	cmpq $0x0,0xFFFFFFFFFFFFFFF0(%r14)
	jna L_260613
L_260662:
	movq 0x0(%r14),%r13
	movq %r13,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_260663+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_0
.p2align 0x4
L_486588:
L_260645:
	movq 0x18(%rbp),%r14
	cmpq $0x0,0xFFFFFFFFFFFFFFF0(%r14)
	jna L_260613
L_260647:
	movq 0x0(%r14),%r13
	movq %r13,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_260648+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_0
.p2align 0x4
L_486590:
L_260630:
	movq 0x18(%rbp),%r14
	cmpq $0x0,0xFFFFFFFFFFFFFFF0(%r14)
	jna L_260613
L_260632:
	movq 0x0(%r14),%r13
	movq %r13,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_260633+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_0
.p2align 0x4
L_486592:
L_260617:
	movq 0x0(%rbp),%r14
	movq %r14,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_260618+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_0
.p2align 0x4
L_486593:
L_260601:
	movq 0x0(%rbp),%r14
	movq %r14,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_260602+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_0
.p2align 0x4
.long 0x51E
L_260596:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_260597
L_260598:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_260599+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260599
.p2align 0x4
.long 0x4AE
L_260599:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_260597:
	movq $0x1D19,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1369
L_260803:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_260804
L_260813:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_260814+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260814
.p2align 0x4
.long 0xE07
L_260814:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_260804:
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1448,%r15
	jne L_486600
L_260805:
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r13
L_260806:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_260607
L_260807:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE7B,%r15
	jne L_260607
L_260808:
	movq 0x8(%r13),%r15
	movq 0x40(%rbp),%r14
	movq 0x0(%r13),%r11
	movq 0x10(%r11),%r10
	cmpq %r10,0x10(%r14)
	jne L_486597
L_260810:
	cmpq $0x0,0xFFFFFFFFFFFFFFF0(%r15)
	jna L_260613
L_260812:
	movq 0x0(%r15),%r14
	movq $0x3EC3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x20(%rbp)
	addq $0x10,%r12
	movl $0x1,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_260596+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_1
.p2align 0x4
L_486597:
L_260607:
	movq (globalObjptr+0x1B18)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_486600:
L_260604:
	movq (globalObjptr+0x1500)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x102C
L_260788:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_260789
L_260798:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_260799+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260799
.p2align 0x4
.long 0x8E5
L_260799:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_260789:
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1448,%r15
	jne L_260604
L_260790:
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r13
L_260791:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_260607
L_260792:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE7B,%r15
	jne L_260607
L_260793:
	movq 0x8(%r13),%r15
	movq 0x38(%rbp),%r14
	movq 0x0(%r13),%r11
	movq 0x10(%r11),%r10
	cmpq %r10,0x10(%r14)
	jne L_260607
L_260795:
	cmpq $0x0,0xFFFFFFFFFFFFFFF0(%r15)
	jna L_260613
L_260797:
	movq 0x0(%r15),%r14
	movq $0x3EC3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x20(%rbp)
	addq $0x10,%r12
	movl $0x1,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_260596+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_1
.p2align 0x4
.long 0x102C
L_260773:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_260774
L_260783:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_260784+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260784
.p2align 0x4
.long 0x8E5
L_260784:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_260774:
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1448,%r15
	jne L_260604
L_260775:
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r13
L_260776:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_260607
L_260777:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE7B,%r15
	jne L_260607
L_260778:
	movq 0x8(%r13),%r15
	movq 0x0(%r13),%r14
	movq 0x38(%rbp),%r11
	movq 0x10(%r11),%r10
	cmpq %r10,0x10(%r14)
	jne L_260607
L_260780:
	cmpq $0x0,0xFFFFFFFFFFFFFFF0(%r15)
	jna L_260613
L_260782:
	movq 0x0(%r15),%r14
	movq $0x3EC3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x20(%rbp)
	addq $0x10,%r12
	movl $0x1,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_260596+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_1
.p2align 0x4
.long 0x3CC6
L_260758:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_260759
L_260768:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_260769+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260769
.p2align 0x4
.long 0x97F
L_260769:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_260759:
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1448,%r15
	jne L_260604
L_260760:
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r13
L_260761:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_260607
L_260762:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE7B,%r15
	jne L_260607
L_260763:
	movq 0x8(%r13),%r15
	movq 0x30(%rbp),%r14
	movq 0x0(%r13),%r11
	movq 0x10(%r11),%r10
	cmpq %r10,0x10(%r14)
	jne L_260607
L_260765:
	cmpq $0x0,0xFFFFFFFFFFFFFFF0(%r15)
	jna L_260613
L_260767:
	movq 0x0(%r15),%r14
	movq $0x3EC3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x20(%rbp)
	addq $0x10,%r12
	movl $0x1,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_260596+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_1
.p2align 0x4
.long 0x3CC6
L_260745:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_260746
L_260755:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_260756+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260756
.p2align 0x4
.long 0x97F
L_260756:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_260746:
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1448,%r15
	jne L_260604
L_260747:
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r13
L_260748:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_260607
L_260749:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE7B,%r15
	jne L_260607
L_260750:
	movq 0x8(%r13),%r15
	movq 0x30(%rbp),%r14
	movq 0x0(%r13),%r11
	movq 0x10(%r11),%r10
	cmpq %r10,0x10(%r14)
	jne L_260607
L_260752:
	cmpq $0x0,0xFFFFFFFFFFFFFFF0(%r15)
	jna L_260613
L_260754:
	movq 0x0(%r15),%r14
	movq $0x3EC3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x20(%rbp)
	addq $0x10,%r12
	movl $0x1,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_260596+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_1
.p2align 0x4
.long 0x3CC6
L_260730:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_260731
L_260740:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_260741+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260741
.p2align 0x4
.long 0x97F
L_260741:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_260731:
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1448,%r15
	jne L_260604
L_260732:
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r13
L_260733:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_260607
L_260734:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE7B,%r15
	jne L_260607
L_260735:
	movq 0x8(%r13),%r15
	movq 0x0(%r13),%r14
	movq 0x30(%rbp),%r11
	movq 0x10(%r11),%r10
	cmpq %r10,0x10(%r14)
	jne L_260607
L_260737:
	cmpq $0x0,0xFFFFFFFFFFFFFFF0(%r15)
	jna L_260613
L_260739:
	movq 0x0(%r15),%r14
	movq $0x3EC3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x20(%rbp)
	addq $0x10,%r12
	movl $0x1,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_260596+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_1
.p2align 0x4
.long 0x51E
L_260698:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_260699
L_260702:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_260703+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260703
.p2align 0x4
.long 0x4AE
L_260703:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_260699:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_486632
L_260700:
	movq 0x8(%r15),%r14
	movq $0x3EC3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x20(%rbp)
	addq $0x10,%r12
	movl $0x1,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_260596+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_1
.p2align 0x4
L_486632:
L_260701:
	movq (globalObjptr+0x1B20)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xB9D
L_260678:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_260679
L_260688:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_260689+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260689
.p2align 0x4
.long 0x63C
L_260689:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_260679:
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1448,%r15
	jne L_260604
L_260680:
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r13
L_260681:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_260607
L_260682:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE7B,%r15
	jne L_260607
L_260683:
	movq 0x8(%r13),%r15
	movq 0x20(%rbp),%r14
	movq 0x0(%r13),%r11
	movq 0x10(%r11),%r10
	cmpq %r10,0x10(%r14)
	jne L_260607
L_260685:
	cmpq $0x0,0xFFFFFFFFFFFFFFF0(%r15)
	jna L_260613
L_260687:
	movq 0x0(%r15),%r14
	movq $0x3EC3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x20(%rbp)
	addq $0x10,%r12
	movl $0x1,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_260596+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_1
.p2align 0x4
.long 0xB9D
L_260663:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_260664
L_260673:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_260674+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260674
.p2align 0x4
.long 0x63C
L_260674:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_260664:
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1448,%r15
	jne L_260604
L_260665:
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r13
L_260666:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_260607
L_260667:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE7B,%r15
	jne L_260607
L_260668:
	movq 0x8(%r13),%r15
	movq 0x0(%r13),%r14
	movq 0x20(%rbp),%r11
	movq 0x10(%r11),%r10
	cmpq %r10,0x10(%r14)
	jne L_260607
L_260670:
	cmpq $0x0,0xFFFFFFFFFFFFFFF0(%r15)
	jna L_260613
L_260672:
	movq 0x0(%r15),%r14
	movq $0x3EC3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x20(%rbp)
	addq $0x10,%r12
	movl $0x1,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_260596+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_1
.p2align 0x4
.long 0xB9D
L_260648:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_260649
L_260658:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_260659+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260659
.p2align 0x4
.long 0x63C
L_260659:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_260649:
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1448,%r15
	jne L_260604
L_260650:
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r13
L_260651:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_260607
L_260652:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE7B,%r15
	jne L_260607
L_260653:
	movq 0x8(%r13),%r15
	movq 0x20(%rbp),%r14
	movq 0x0(%r13),%r11
	movq 0x10(%r11),%r10
	cmpq %r10,0x10(%r14)
	jne L_260607
L_260655:
	cmpq $0x0,0xFFFFFFFFFFFFFFF0(%r15)
	jna L_260613
L_260657:
	movq 0x0(%r15),%r14
	movq $0x3EC3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x20(%rbp)
	addq $0x10,%r12
	movl $0x1,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_260596+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_1
.p2align 0x4
.long 0xB9D
L_260633:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_260634
L_260643:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_260644+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260644
.p2align 0x4
.long 0x63C
L_260644:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_260634:
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1448,%r15
	jne L_260604
L_260635:
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r13
L_260636:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_260607
L_260637:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE7B,%r15
	jne L_260607
L_260638:
	movq 0x8(%r13),%r15
	movq 0x20(%rbp),%r14
	movq 0x0(%r13),%r11
	movq 0x10(%r11),%r10
	cmpq %r10,0x10(%r14)
	jne L_260607
L_260640:
	cmpq $0x0,0xFFFFFFFFFFFFFFF0(%r15)
	jna L_260613
L_260642:
	movq 0x0(%r15),%r14
	movq $0x3EC3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x20(%rbp)
	addq $0x10,%r12
	movl $0x1,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_260596+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_1
.p2align 0x4
.long 0xB9D
L_260618:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_260619
L_260628:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_260629+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260629
.p2align 0x4
.long 0x63C
L_260629:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_260619:
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1448,%r15
	jne L_260604
L_260620:
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r13
L_260621:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_260607
L_260622:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE7B,%r15
	jne L_260607
L_260623:
	movq 0x8(%r13),%r15
	movq 0x20(%rbp),%r14
	movq 0x0(%r13),%r11
	movq 0x10(%r11),%r10
	cmpq %r10,0x10(%r14)
	jne L_260607
L_260625:
	cmpq $0x0,0xFFFFFFFFFFFFFFF0(%r15)
	jna L_260613
L_260627:
	movq 0x0(%r15),%r14
	movq $0x3EC3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x20(%rbp)
	addq $0x10,%r12
	movl $0x1,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_260596+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_1
.p2align 0x4
.long 0xB9D
L_260602:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_260603
L_260615:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_260616+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260616
.p2align 0x4
.long 0x63C
L_260616:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_260603:
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1448,%r15
	jne L_260604
L_260605:
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r13
L_260606:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_260607
L_260608:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE7B,%r15
	jne L_260607
L_260609:
	movq 0x8(%r13),%r15
	movq 0x20(%rbp),%r14
	movq 0x0(%r13),%r11
	movq 0x10(%r11),%r10
	cmpq %r10,0x10(%r14)
	jne L_260607
L_260611:
	cmpq $0x0,0xFFFFFFFFFFFFFFF0(%r15)
	jna L_260613
L_260614:
	movq 0x0(%r15),%r14
	movq $0x3EC3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x20(%rbp)
	addq $0x10,%r12
	movl $0x1,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_260596+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_1
.text
.p2align 0x4
.globl mkSymbol_0
.hidden mkSymbol_0
mkSymbol_0:
L_260823:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_260824
L_261071:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_261072+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261072
.p2align 0x4
.long 0x524
L_261072:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_260824:
	movq 0x18(%rbp),%r15
	movq 0x78(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x70(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x68(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x60(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x58(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x50(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x48(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x40(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x90(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x98(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0xA8(%rbp)
	addq $0xA8,%rbp
	leaq (L_260825+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_0
.p2align 0x4
.long 0x4388
L_260825:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1448,%r15
	jne L_486673
L_260827:
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r13
L_260828:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_260829
L_261069:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE7B,%r15
	jne L_486671
L_261070:
	movq 0x0(%r13),%r15
	movq 0x20(%rbp),%r14
	movq 0x10(%r14),%r11
	cmpq %r11,0x10(%r15)
	sete %al
	movzbl %al,%eax
	movl %eax,0x14(%rbp)
L_260830:
	movq 0x28(%rbp),%r15
	movq %r15,0xA8(%rbp)
	addq $0xA8,%rbp
	leaq (L_260831+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_486671:
L_260829:
	movl $0x0,0x14(%rbp)
	jmp L_260830
.p2align 0x4
L_486673:
L_260826:
	movq (globalObjptr+0x1500)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x14E7
L_260831:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movl 0xA8(%rbp),%r15d
	movl %r15d,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_260832
L_261067:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_261068+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261068
.p2align 0x4
.long 0x14F9
L_261068:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_260832:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x18(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xCE38)(%rip),%r15
	movq %r15,0x18(%r13)
	movq 0x28(%rbp),%r15
	movq %r15,0xA8(%rbp)
	addq $0xA8,%rbp
	leaq (L_260833+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x4389
L_260833:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movl 0xA8(%rbp),%r15d
	movl %r15d,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_260834
L_261065:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_261066+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261066
.p2align 0x4
.long 0x43A5
L_261066:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_260834:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x28(%rbp)
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x18(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xCE38)(%rip),%r15
	movq %r15,0x18(%r13)
	movq 0x30(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq %r11,0xA0(%rbp)
	movq $0x479F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq %r13,0x8(%r15)
	movq $0x1D25,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0xA8(%rbp)
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq 0x0(%r13),%r15
	movq %r15,0xB0(%rbp)
	movq 0x8(%r13),%r14
	movq 0x8(%r14),%r11
	movq %r11,0xB8(%rbp)
	movq 0x0(%r14),%r10
	movq %r10,0xC0(%rbp)
	movq 0x0(%r11),%r14
	cmpq $0x1,%r14
	je L_486675
L_260835:
	movq 0x0(%r14),%r13
	movq %r13,0xD0(%rbp)
	movq %r15,0xD8(%rbp)
	addq $0xD0,%rbp
	leaq (L_260836+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_486675:
L_261060:
	movq 0xC0(%rbp),%r14
	movq %r14,0x8(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r14
	movq %r14,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_261061+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x438A
L_260836:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movq 0xD0(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq %r15,0xD0(%rbp)
	addq $0xD0,%rbp
	leaq (L_260837+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
.long 0x1
L_261061:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (bug_637+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x438A
L_260837:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movl 0xD0(%rbp),%r15d
	movq 0xA0(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movslq %r15d,%r11
	movl %r15d,0x18(%rbp)
	cmpq %r13,%r11
	movq %r13,0x30(%rbp)
	jnb L_486698
L_260840:
	movq 0x0(%r14,%r11,8),%r15
	cmpq $0x1,%r15
	movq %r15,0x18(%rbp)
	je L_486697
L_260841:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_260842
L_261057:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_261058+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261058
.p2align 0x4
.long 0x43A2
L_261058:
	addq $0xFFFFFFFFFFFFFF30,%rbp
L_260842:
	movq $0x16D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r12,(gcState+0x0)(%rip)
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xA8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0xC8(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14CF,%rcx
	movq $0x2,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_260843+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260843
.p2align 0x4
.long 0x438B
L_260843:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq %rax,0x18(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3077:
	cmpq $0x2,%r15
	jnl L_486679
L_261053:
	movl %r15d,%r14d
	cmpl $0x0,%r14d
	je L_486678
	cmpl $0x1,%r14d
	je L_486677
L_260885:
	movq (globalObjptr+0x4A8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_486677:
L_261056:
	movq 0xC8(%rbp),%r14
L_261055:
	movq 0x18(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r14,0x0(%r13,%r15,8)
	incq %r15
	jmp loop_3077
.p2align 0x4
L_486678:
L_261054:
	movq 0x0(%rbp),%r14
	jmp L_261055
.p2align 0x4
L_486679:
L_260844:
	movq 0x18(%rbp),%r15
	movq $0x18B,0xFFFFFFFFFFFFFFF8(%r15)
	movzbq 0x10(%rbp),%rax
	subq $0x1,%rax
	cmpq $0xA,%rax
	ja L_486680
	leaq jumpTable_752(%rip),%rbx
	jmp *(%rbx,%rax,8)
.data
.p2align 0x4
jumpTable_752:
.quad L_486695,L_486694,L_486693,L_486691,L_486689,L_486687,L_486686,L_486685,L_486684,L_486683,L_486681
.text
.p2align 0x4
L_486680:
L_260845:
	movq $0x81,0xD0(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0xD8(%rbp)
	addq $0xD0,%rbp
	leaq (L_260846+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_486681:
L_261050:
	movl 0x14(%rbp),%r13d
	testl %r13d,%r13d
	jnz L_486682
L_261051:
	movq 0x8(%rbp),%r15
	movq $0xE,%r14
L_260849:
	movq %r15,0xD0(%rbp)
	movq %r14,0xD8(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0xE0(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0xE8(%rbp)
	addq $0xD0,%rbp
	leaq (L_260850+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp primApp_8
.p2align 0x4
L_486682:
L_261052:
	movq $0xE,0xC8(%rbp)
L_260984:
	movq 0x48(%rbp),%r15
	movq %r15,0xD8(%rbp)
	addq $0xD8,%rbp
	leaq (L_260985+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_486683:
L_261043:
	movq $0x11,0xD0(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0xD8(%rbp)
	addq $0xD0,%rbp
	leaq (L_261044+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_486684:
L_261036:
	movq $0x21,0xD0(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0xD8(%rbp)
	addq $0xD0,%rbp
	leaq (L_261037+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_486685:
L_261029:
	movq $0x41,0xD0(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0xD8(%rbp)
	addq $0xD0,%rbp
	leaq (L_261030+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_486686:
L_261022:
	movq $0x81,0xD0(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0xD8(%rbp)
	addq $0xD0,%rbp
	leaq (L_261023+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_486687:
L_261019:
	movl 0x14(%rbp),%r13d
	testl %r13d,%r13d
	jnz L_486688
L_261020:
	movq 0x8(%rbp),%r15
	movq $0xF,%r14
	jmp L_260849
.p2align 0x4
L_486688:
L_261021:
	movq $0xF,0xC8(%rbp)
	jmp L_260984
.p2align 0x4
L_486689:
L_261016:
	movl 0x14(%rbp),%r13d
	testl %r13d,%r13d
	jnz L_486690
L_261017:
	movq 0x8(%rbp),%r15
	movq (globalWord64+0xF58)(%rip),%r14
	jmp L_260849
.p2align 0x4
L_486690:
L_261018:
	movq (globalWord64+0xF58)(%rip),%r15
	movq %r15,0xC8(%rbp)
	jmp L_260984
.p2align 0x4
L_486691:
L_261013:
	movl 0x14(%rbp),%r13d
	testl %r13d,%r13d
	jnz L_486692
L_261014:
	movq 0x8(%rbp),%r15
	movq (globalWord64+0xF40)(%rip),%r14
	jmp L_260849
.p2align 0x4
L_486692:
L_261015:
	movq (globalWord64+0xF40)(%rip),%r15
	movq %r15,0xC8(%rbp)
	jmp L_260984
.p2align 0x4
L_486693:
L_261006:
	movq $0x11,0xD0(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0xD8(%rbp)
	addq $0xD0,%rbp
	leaq (L_261007+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_486694:
L_260999:
	movq $0x21,0xD0(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0xD8(%rbp)
	addq $0xD0,%rbp
	leaq (L_261000+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_486695:
L_260992:
	movq $0x41,0xD0(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0xD8(%rbp)
	addq $0xD0,%rbp
	leaq (L_260993+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_486697:
L_260943:
	movq $0x9,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_486698:
L_260839:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
bug_637:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_261062
L_261063:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_261064+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261064
.p2align 0x4
.long 0x451
L_261064:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_261062:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x438C
L_260846:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movq 0xD0(%rbp),%r15
	movq %r15,0xC8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_260847
L_260990:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_260991+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260991
.p2align 0x4
.long 0x43A4
L_260991:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_260847:
	movq $0x24C1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0xC8(%rbp),%r13
	movq %r13,0x0(%r14)
	movl 0x14(%rbp),%r13d
	testl %r13d,%r13d
	jnz L_486700
L_260848:
	movq 0x8(%rbp),%r15
	jmp L_260849
.p2align 0x4
L_486700:
L_260983:
	movq %r14,0xC8(%rbp)
	jmp L_260984
.p2align 0x4
.long 0x438D
L_260850:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movq 0xD0(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_260851
L_260981:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_260982+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260982
.p2align 0x4
.long 0x43A2
L_260982:
	addq $0xFFFFFFFFFFFFFF30,%rbp
L_260851:
	movq $0x16D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0xC8(%rbp)
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r13)
	movq 0x40(%rbp),%r15
	movq %r15,0x8(%r13)
	movl 0x14(%rbp),%r13d
	testl %r13d,%r13d
	jnz L_486702
L_260852:
L_260853:
	movq $0x16D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq %r14,0x0(%r13)
	movq $0x1D1F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x18(%rbp)
	movq %r13,0x18(%r15)
	addq $0x28,%r12
	movl $0x1,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x20(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x80(%rbp),%r13
	movq %r13,0x10(%r15)
	movq 0x88(%rbp),%r15
	movq 0x10(%r15),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x40(%rbp)
	movq 0x0(%r11),%r10
	movq %r10,0x48(%rbp)
	movq $0x3EC1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq %r13,0x8(%r15)
	movq %r15,0xD0(%rbp)
	movl $0x2,0xD8(%rbp)
	addq $0xD0,%rbp
	leaq (L_260854+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_1
.p2align 0x4
L_486702:
L_260961:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1629,%rcx
	movq $0x2,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r13
	movq %r13,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_260962+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260962
.p2align 0x4
.long 0x439E
L_260962:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq %rax,0x18(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3081:
	cmpq $0x2,%r15
	jnl L_486705
L_260977:
	movl %r15d,%r14d
	cmpl $0x0,%r14d
	je L_486704
	cmpl $0x1,%r14d
	je L_486703
	jmp L_260885
.p2align 0x4
L_486703:
L_260980:
	movq 0x70(%rbp),%r14
	movq 0x68(%rbp),%r13
L_260979:
	movq %r15,%r11
	movq %r15,%r10
	movq %r15,%r9
	movq 0x18(%rbp),%r8
	movq %r8,%rsp
	shrq $0x8,%rsp
	movq (gcState+0x3C8)(%rip),%rsi
	movq %rsp,%rax
	movb $0x1,0x0(%rsi,%rax,1)
	imulq $0x18,%r11
	movq %r14,0x0(%r8,%r11,1)
	movq %r8,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%rsi,%r14,1)
	imulq $0x18,%r10
	movq $0x1,0x8(%r8,%r10,1)
	movq %r8,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%rsi,%r14,1)
	imulq $0x18,%r9
	movq %r13,0x10(%r8,%r9,1)
	incq %r15
	jmp loop_3081
.p2align 0x4
L_486704:
L_260978:
	movq 0x60(%rbp),%r14
	movq 0x58(%rbp),%r13
	jmp L_260979
.p2align 0x4
L_486705:
L_260963:
	movq 0x18(%rbp),%r15
	movq $0x12C5,0xFFFFFFFFFFFFFFF8(%r15)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14CF,%rcx
	movq $0x2,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_260964+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260964
.p2align 0x4
.long 0x439F
L_260964:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq %rax,0x40(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3082:
	cmpq $0x2,%r15
	jnl L_486708
L_260973:
	movl %r15d,%r14d
	cmpl $0x0,%r14d
	je L_486707
	cmpl $0x1,%r14d
	je L_486706
	jmp L_260885
.p2align 0x4
L_486706:
L_260976:
	movq 0x78(%rbp),%r14
L_260975:
	movq 0x40(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r14,0x0(%r13,%r15,8)
	incq %r15
	jmp loop_3082
.p2align 0x4
L_486707:
L_260974:
	movq 0xC8(%rbp),%r14
	jmp L_260975
.p2align 0x4
L_486708:
L_260965:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_260966
L_260971:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_260972+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260972
.p2align 0x4
.long 0x43A1
L_260972:
	addq $0xFFFFFFFFFFFFFF30,%rbp
L_260966:
	movq 0x40(%rbp),%r15
	movq $0x18B,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x24AD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r14,0xD8(%rbp)
	movq 0x8(%rbp),%r14
	movq %r14,0xD0(%rbp)
	movq %r15,0xE0(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0xE8(%rbp)
	addq $0xD0,%rbp
	leaq (L_260967+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp primApp_8
.p2align 0x4
.long 0x43A3
L_260985:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movl 0xD8(%rbp),%r13d
	movl %r13d,0xD0(%rbp)
	movslq %r13d,%r15
	movq 0x40(%rbp),%r13
	cmpq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	jnb L_260839
L_260987:
	movq 0x0(%r13,%r15,8),%r11
	cmpq $0x1,%r11
	je L_260943
L_260988:
	movq 0xC8(%rbp),%r14
	movq %r11,%r15
	jmp L_260849
.p2align 0x4
.long 0x438C
L_261044:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movq 0xD0(%rbp),%r15
	movq %r15,0xC8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_261045
L_261048:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_261049+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261049
.p2align 0x4
.long 0x43A4
L_261049:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_261045:
	movq $0x24C1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0xC8(%rbp),%r13
	movq %r13,0x0(%r14)
	movl 0x14(%rbp),%r13d
	testl %r13d,%r13d
	jnz L_486713
L_261046:
	movq 0x8(%rbp),%r15
	jmp L_260849
.p2align 0x4
L_486713:
L_261047:
	movq %r14,0xC8(%rbp)
	jmp L_260984
.p2align 0x4
.long 0x438C
L_261037:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movq 0xD0(%rbp),%r15
	movq %r15,0xC8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_261038
L_261041:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_261042+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261042
.p2align 0x4
.long 0x43A4
L_261042:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_261038:
	movq $0x24C1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0xC8(%rbp),%r13
	movq %r13,0x0(%r14)
	movl 0x14(%rbp),%r13d
	testl %r13d,%r13d
	jnz L_486715
L_261039:
	movq 0x8(%rbp),%r15
	jmp L_260849
.p2align 0x4
L_486715:
L_261040:
	movq %r14,0xC8(%rbp)
	jmp L_260984
.p2align 0x4
.long 0x438C
L_261030:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movq 0xD0(%rbp),%r15
	movq %r15,0xC8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_261031
L_261034:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_261035+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261035
.p2align 0x4
.long 0x43A4
L_261035:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_261031:
	movq $0x24C1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0xC8(%rbp),%r13
	movq %r13,0x0(%r14)
	movl 0x14(%rbp),%r13d
	testl %r13d,%r13d
	jnz L_486717
L_261032:
	movq 0x8(%rbp),%r15
	jmp L_260849
.p2align 0x4
L_486717:
L_261033:
	movq %r14,0xC8(%rbp)
	jmp L_260984
.p2align 0x4
.long 0x438C
L_261023:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movq 0xD0(%rbp),%r15
	movq %r15,0xC8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_261024
L_261027:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_261028+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261028
.p2align 0x4
.long 0x43A4
L_261028:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_261024:
	movq $0x24C1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0xC8(%rbp),%r13
	movq %r13,0x0(%r14)
	movl 0x14(%rbp),%r13d
	testl %r13d,%r13d
	jnz L_486719
L_261025:
	movq 0x8(%rbp),%r15
	jmp L_260849
.p2align 0x4
L_486719:
L_261026:
	movq %r14,0xC8(%rbp)
	jmp L_260984
.p2align 0x4
.long 0x438C
L_261007:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movq 0xD0(%rbp),%r15
	movq %r15,0xC8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_261008
L_261011:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_261012+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261012
.p2align 0x4
.long 0x43A4
L_261012:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_261008:
	movq $0x24C1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0xC8(%rbp),%r13
	movq %r13,0x0(%r14)
	movl 0x14(%rbp),%r13d
	testl %r13d,%r13d
	jnz L_486721
L_261009:
	movq 0x8(%rbp),%r15
	jmp L_260849
.p2align 0x4
L_486721:
L_261010:
	movq %r14,0xC8(%rbp)
	jmp L_260984
.p2align 0x4
.long 0x438C
L_261000:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movq 0xD0(%rbp),%r15
	movq %r15,0xC8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_261001
L_261004:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_261005+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261005
.p2align 0x4
.long 0x43A4
L_261005:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_261001:
	movq $0x24C1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0xC8(%rbp),%r13
	movq %r13,0x0(%r14)
	movl 0x14(%rbp),%r13d
	testl %r13d,%r13d
	jnz L_486723
L_261002:
	movq 0x8(%rbp),%r15
	jmp L_260849
.p2align 0x4
L_486723:
L_261003:
	movq %r14,0xC8(%rbp)
	jmp L_260984
.p2align 0x4
.long 0x438C
L_260993:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movq 0xD0(%rbp),%r15
	movq %r15,0xC8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_260994
L_260997:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_260998+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260998
.p2align 0x4
.long 0x43A4
L_260998:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_260994:
	movq $0x24C1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0xC8(%rbp),%r13
	movq %r13,0x0(%r14)
	movl 0x14(%rbp),%r13d
	testl %r13d,%r13d
	jnz L_486725
L_260995:
	movq 0x8(%rbp),%r15
	jmp L_260849
.p2align 0x4
L_486725:
L_260996:
	movq %r14,0xC8(%rbp)
	jmp L_260984
.p2align 0x4
.long 0x438E
L_260854:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movq 0xD0(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq %r15,0xD0(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0xD8(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0xE0(%rbp)
	addq $0xD0,%rbp
	leaq (L_260855+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp con_2
.p2align 0x4
.long 0x43A0
L_260967:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movq 0xD0(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_260968
L_260969:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_260970+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260970
.p2align 0x4
.long 0x43A1
L_260970:
	addq $0xFFFFFFFFFFFFFF30,%rbp
L_260968:
	movq $0x16D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x48(%rbp),%r13
	movq %r13,0x8(%r15)
	movq $0x1D29,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x30(%r13)
	addq $0x40,%r12
	movb $0x3,%r11b
	movzbl %r11b,%r10d
	movb $0x1,%r11b
	movzbl %r11b,%r9d
	shll $0x8,%r9d
	orl %r9d,%r10d
	movb $0x1,%r11b
	movzbl %r11b,%r9d
	shll $0x10,%r9d
	orl %r9d,%r10d
	movb $0x1,%r11b
	movzbl %r11b,%r9d
	shll $0x18,%r9d
	orl %r9d,%r10d
	movl %r10d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xA058)(%rip),%r11
	movq %r11,0x8(%r13)
	movq $0x5,0x10(%r13)
	movq $0x1,0x18(%r13)
	movq $0x1,0x20(%r13)
	movq 0x18(%rbp),%r11
	movq %r11,0x28(%r13)
	movq 0x10(%r11),%r10
	movq 0x0(%r10),%r14
	movq %r13,%r15
	jmp L_260853
.p2align 0x4
.long 0x438E
L_260855:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movq 0xD0(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_260856
L_260959:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_260960+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260960
.p2align 0x4
.long 0x439D
L_260960:
	addq $0xFFFFFFFFFFFFFF30,%rbp
L_260856:
	movq $0x4795,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1D11,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x18,%r12
	movq $0x2,0x8(%r13)
	movq $0x16D,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,0x58(%rbp)
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	movl 0x14(%rbp),%r11d
	testl %r11d,%r11d
	jnz L_486729
L_260857:
	movq %r13,%r15
L_260858:
	movq $0x16D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x58(%rbp)
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0xB8(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_486728
L_260859:
	movq 0x0(%r14),%r15
	movq %r15,0xB8(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xB8,%rbp
	leaq (L_260860+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_486728:
L_260944:
	movq 0xC0(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_260945+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_486729:
L_260949:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1629,%rcx
	movq $0x2,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_260950+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260950
.p2align 0x4
.long 0x439B
L_260950:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movq %rax,0x68(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3080:
	cmpq $0x2,%r15
	jnl L_486732
L_260955:
	movl %r15d,%r14d
	cmpl $0x0,%r14d
	je L_486731
	cmpl $0x1,%r14d
	je L_486730
	jmp L_260885
.p2align 0x4
L_486730:
L_260958:
	movq 0x60(%rbp),%r14
	movq 0x78(%rbp),%r13
L_260957:
	movq %r15,%r11
	movq %r15,%r10
	movq %r15,%r9
	movq 0x68(%rbp),%r8
	movq %r8,%rsp
	shrq $0x8,%rsp
	movq (gcState+0x3C8)(%rip),%rsi
	movq %rsp,%rax
	movb $0x1,0x0(%rsi,%rax,1)
	imulq $0x18,%r11
	movq %r14,0x0(%r8,%r11,1)
	movq %r8,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%rsi,%r14,1)
	imulq $0x18,%r10
	movq $0x1,0x8(%r8,%r10,1)
	movq %r8,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%rsi,%r14,1)
	imulq $0x18,%r9
	movq %r13,0x10(%r8,%r9,1)
	incq %r15
	jmp loop_3080
.p2align 0x4
L_486731:
L_260956:
	movq 0x70(%rbp),%r14
	movq 0x90(%rbp),%r13
	jmp L_260957
.p2align 0x4
L_486732:
L_260951:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_260952
L_260953:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_260954+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260954
.p2align 0x4
.long 0x439C
L_260954:
	addq $0xFFFFFFFFFFFFFF30,%rbp
L_260952:
	movq 0x68(%rbp),%r13
	movq $0x12C5,0xFFFFFFFFFFFFFFF8(%r13)
	movq $0x1D29,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x40,%r12
	movb $0x3,%r11b
	movzbl %r11b,%r10d
	movb $0x1,%r11b
	movzbl %r11b,%r9d
	shll $0x8,%r9d
	orl %r9d,%r10d
	movb $0x1,%r11b
	movzbl %r11b,%r9d
	shll $0x10,%r9d
	orl %r9d,%r10d
	movb $0x1,%r11b
	movzbl %r11b,%r9d
	shll $0x18,%r9d
	orl %r9d,%r10d
	movl %r10d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq (globalObjptr+0xA058)(%rip),%r11
	movq %r11,0x8(%r15)
	movq $0x2,0x10(%r15)
	movq $0x1,0x18(%r15)
	movq $0x1,0x20(%r15)
	movq %r13,0x28(%r15)
	movq 0x58(%rbp),%r11
	movq %r11,0x30(%r15)
	movq 0x10(%r13),%r11
	movq 0x0(%r11),%r14
	jmp L_260858
.p2align 0x4
.long 0x438F
L_260860:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq %r15,0xB8(%rbp)
	addq $0xB8,%rbp
	leaq (L_260861+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
.long 0x1
L_260945:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (bug_636+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x438F
L_260861:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movl 0xB8(%rbp),%r15d
	movslq %r15d,%r14
	movl %r15d,0x14(%rbp)
	cmpq 0x30(%rbp),%r14
	jnb L_260839
L_260863:
	movq 0xA0(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	cmpq $0x1,%r13
	movq %r13,0x30(%rbp)
	je L_260943
L_260864:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_260865
L_260940:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_260941+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260941
.p2align 0x4
.long 0x439A
L_260941:
	addq $0xFFFFFFFFFFFFFF48,%rbp
L_260865:
	movq $0x16D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r12,(gcState+0x0)(%rip)
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xA8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x60(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14CF,%rcx
	movq $0x3,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_260866+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260866
.p2align 0x4
.long 0x4390
L_260866:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq %rax,0x30(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3078:
	cmpq $0x3,%r15
	jnl L_486738
L_260934:
	movl %r15d,%r14d
	cmpl $0x0,%r14d
	je L_486737
	cmpl $0x1,%r14d
	je L_486736
	cmpl $0x2,%r14d
	je L_486735
L_260935:
	movq (globalObjptr+0x4C0)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_486735:
L_260939:
	movq 0x58(%rbp),%r14
L_260937:
	movq 0x30(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r14,0x0(%r13,%r15,8)
	incq %r15
	jmp loop_3078
.p2align 0x4
L_486736:
L_260938:
	movq 0x60(%rbp),%r14
	jmp L_260937
.p2align 0x4
L_486737:
L_260936:
	movq 0x0(%rbp),%r14
	jmp L_260937
.p2align 0x4
L_486738:
L_260867:
	movq 0x30(%rbp),%r15
	movq $0x18B,0xFFFFFFFFFFFFFFF8(%r15)
	movzbq 0x10(%rbp),%rax
	subq $0x1,%rax
	cmpq $0xA,%rax
	ja L_486739
	leaq jumpTable_753(%rip),%rbx
	jmp *(%rbx,%rax,8)
.data
.p2align 0x4
jumpTable_753:
.quad L_486750,L_486749,L_486748,L_486747,L_486746,L_486745,L_486744,L_486743,L_486742,L_486741,L_486740
.text
.p2align 0x4
L_486739:
L_260868:
	movq $0x81,0xA8(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0xB0(%rbp)
	addq $0xA8,%rbp
	leaq (L_260869+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_486740:
L_260933:
	movq $0x12,%r15
L_260871:
	movq %r15,0xB0(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0xA8(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xA8,%rbp
	leaq (L_260872+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp primApp_8
.p2align 0x4
L_486741:
L_260928:
	movq $0x11,0xA8(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0xB0(%rbp)
	addq $0xA8,%rbp
	leaq (L_260929+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_486742:
L_260923:
	movq $0x21,0xA8(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0xB0(%rbp)
	addq $0xA8,%rbp
	leaq (L_260924+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_486743:
L_260918:
	movq $0x41,0xA8(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0xB0(%rbp)
	addq $0xA8,%rbp
	leaq (L_260919+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_486744:
L_260913:
	movq $0x81,0xA8(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0xB0(%rbp)
	addq $0xA8,%rbp
	leaq (L_260914+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_486745:
L_260912:
	movq $0x13,%r15
	jmp L_260871
.p2align 0x4
L_486746:
L_260911:
	movq (globalWord64+0xF88)(%rip),%r15
	jmp L_260871
.p2align 0x4
L_486747:
L_260910:
	movq (globalWord64+0xF70)(%rip),%r15
	jmp L_260871
.p2align 0x4
L_486748:
L_260905:
	movq $0x11,0xA8(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0xB0(%rbp)
	addq $0xA8,%rbp
	leaq (L_260906+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_486749:
L_260900:
	movq $0x21,0xA8(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0xB0(%rbp)
	addq $0xA8,%rbp
	leaq (L_260901+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_486750:
L_260895:
	movq $0x41,0xA8(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0xB0(%rbp)
	addq $0xA8,%rbp
	leaq (L_260896+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
.long 0x1
bug_636:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_260946
L_260947:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_260948+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260948
.p2align 0x4
.long 0x451
L_260948:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_260946:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4391
L_260869:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_260870
L_260893:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_260894+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260894
.p2align 0x4
.long 0x4399
L_260894:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_260870:
	movq $0x24BF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_260871
.p2align 0x4
.long 0x4392
L_260872:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_260873
L_260891:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_260892+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260892
.p2align 0x4
.long 0x4398
L_260892:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_260873:
	movq $0x16D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r13
	movq %r13,0x8(%r15)
	movq $0x1D1F,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x38(%rbp)
	movq %r15,0x18(%r13)
	addq $0x28,%r12
	movl $0x1,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq 0x28(%rbp),%r15
	movq %r15,0x8(%r13)
	movq 0x8(%rbp),%r15
	movq %r15,0x10(%r13)
	movq $0x3EC1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r13,0xA8(%rbp)
	movl $0x2,0xB0(%rbp)
	addq $0xA8,%rbp
	leaq (L_260874+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_1
.p2align 0x4
.long 0x4391
L_260929:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_260930
L_260931:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_260932+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260932
.p2align 0x4
.long 0x4399
L_260932:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_260930:
	movq $0x24BF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_260871
.p2align 0x4
.long 0x4391
L_260924:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_260925
L_260926:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_260927+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260927
.p2align 0x4
.long 0x4399
L_260927:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_260925:
	movq $0x24BF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_260871
.p2align 0x4
.long 0x4391
L_260919:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_260920
L_260921:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_260922+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260922
.p2align 0x4
.long 0x4399
L_260922:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_260920:
	movq $0x24BF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_260871
.p2align 0x4
.long 0x4391
L_260914:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_260915
L_260916:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_260917+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260917
.p2align 0x4
.long 0x4399
L_260917:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_260915:
	movq $0x24BF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_260871
.p2align 0x4
.long 0x4391
L_260906:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_260907
L_260908:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_260909+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260909
.p2align 0x4
.long 0x4399
L_260909:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_260907:
	movq $0x24BF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_260871
.p2align 0x4
.long 0x4391
L_260901:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_260902
L_260903:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_260904+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260904
.p2align 0x4
.long 0x4399
L_260904:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_260902:
	movq $0x24BF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_260871
.p2align 0x4
.long 0x4391
L_260896:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_260897
L_260898:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_260899+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260899
.p2align 0x4
.long 0x4399
L_260899:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_260897:
	movq $0x24BF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_260871
.p2align 0x4
.long 0x4393
L_260874:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq %r15,0xA8(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0xB0(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0xB8(%rbp)
	addq $0xA8,%rbp
	leaq (L_260875+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp con_2
.p2align 0x4
.long 0x4394
L_260875:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14CF,%rcx
	movq $0x2,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_260876+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260876
.p2align 0x4
.long 0x4395
L_260876:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq %rax,0x30(%rbp)
	movq $0x0,0x40(%rbp)
.p2align 0x4,,0x7
loop_3079:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_486767
.p2align 0x4,,0x7
L_260877:
	movq 0x40(%rbp),%r15
	cmpq $0x2,%r15
	jnl L_486766
L_260884:
	movl %r15d,%r14d
	cmpl $0x0,%r14d
	je L_486765
	cmpl $0x1,%r14d
	je L_486764
	jmp L_260885
.p2align 0x4
L_486764:
L_260888:
	movq 0x28(%rbp),%r14
	movq 0x38(%rbp),%r15
L_260887:
	movq $0x16D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x30(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq 0x40(%rbp),%r14
	movq %r13,0x0(%r15,%r14,8)
	incq %r14
	movq %r14,0x40(%rbp)
	jmp loop_3079
.p2align 0x4
L_486765:
L_260886:
	movq 0x20(%rbp),%r14
	movq 0x18(%rbp),%r15
	jmp L_260887
.p2align 0x4
L_486766:
L_260878:
	movq 0x30(%rbp),%r14
	movq $0x18B,0xFFFFFFFFFFFFFFF8(%r14)
	movq $0x2481,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq %r14,0x0(%r13)
	movq $0x1D15,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,0x38(%rbp)
	movq %r13,0x0(%r11)
	addq $0x10,%r12
	movq $0x3EB7,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq %r14,0x0(%r13)
	movq %r13,0xA8(%rbp)
	movl $0x2,0xB0(%rbp)
	addq $0xA8,%rbp
	leaq (L_260879+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_1
.p2align 0x4
L_486767:
L_260889:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_260890+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260890
.p2align 0x4
.long 0x4397
L_260890:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	jmp L_260877
.p2align 0x4
.long 0x4396
L_260879:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq %r15,0x48(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_260880+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tuple_9
.p2align 0x4
.long 0x78B
L_260880:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_260881
L_260882:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_260883+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_260883
.p2align 0x4
.long 0x78C
L_260883:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_260881:
	movq $0x16D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl etaExtraNoWrap_0
.hidden etaExtraNoWrap_0
etaExtraNoWrap_0:
L_261073:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_261074
L_261232:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_261233+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261233
.p2align 0x4
.long 0x63B
L_261233:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_261074:
	movq 0x10(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_261075+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp deArrowOpt_0
.p2align 0x4
.long 0x636
L_261075:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq $0x1,%r15
	je L_486770
L_261076:
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_261077+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_486770:
L_261231:
	movq 0x38(%rbp),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%rbp),%r14
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%rbp)
	movq 0x8(%rbp),%r13
	movq %r13,0x10(%rbp)
	movq %r14,0x8(%rbp)
	jmp primApp_8
.p2align 0x4
.long 0x1F57
L_261077:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movl 0x58(%rbp),%r15d
	movl %r15d,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_261078
L_261229:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_261230+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261230
.p2align 0x4
.long 0x21CD
L_261230:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_261078:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x50(%rbp)
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x40(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xCE38)(%rip),%r15
	movq %r15,0x18(%r13)
	movq 0x48(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_261079+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2032
.p2align 0x4
.long 0x43A6
L_261079:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq $0x1,%r15
	je L_486796
L_261080:
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x40(%rbp)
	cmpq %rdx,%r14
	jne L_261082
L_261083:
	testq %rdx,%rdx
	jz L_486794
L_261084:
	cmpq $0x7FFFFFFF,%rdx
	ja L_261146
L_261085:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x164D,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_261086+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261086
.p2align 0x4
.long 0x1342
L_261086:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq %rax,0x58(%rbp)
L_261087:
	movq $0x0,0x60(%rbp)
loop_3083:
	movq 0x40(%rbp),%r15
	cmpq %r15,0x60(%rbp)
	jl L_486792
L_261088:
	movq 0x58(%rbp),%r15
	movq $0xC81,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x30(%rbp)
	movl %r13d,0x28(%rbp)
	cmpq %rdx,%r14
	jne L_486791
L_261090:
	testq %rdx,%rdx
	jz L_486790
L_261091:
	cmpq $0x7FFFFFFF,%rdx
	ja L_261146
L_261092:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14CF,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_261093+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261093
.p2align 0x4
.long 0x43A7
L_261093:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq %rax,0x40(%rbp)
L_261094:
	movq $0x0,0x60(%rbp)
.p2align 0x4,,0x7
loop_3084:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_486788
.p2align 0x4,,0x7
L_261095:
	movq 0x60(%rbp),%r15
	cmpq 0x30(%rbp),%r15
	jnl L_486772
L_261163:
	movl %r15d,%r14d
	movslq %r14d,%r13
	movq %r13,%r14
	salq $0x4,%r14
	movq 0x58(%rbp),%r11
	movq 0x0(%r11,%r14,1),%r10
	salq $0x4,%r13
	movq 0x8(%r11,%r13,1),%r14
	movq $0x4795,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x10,%r12
	movq $0x1D11,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	addq $0x18,%r12
	movq $0x2,0x8(%r14)
	movq $0x16D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r10,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r13,0x0(%r14,%r15,8)
	incq %r15
	movq %r15,0x60(%rbp)
	jmp loop_3084
.p2align 0x4
L_486772:
L_261096:
	movq 0x40(%rbp),%r14
	movq $0x18B,0xFFFFFFFFFFFFFFF8(%r14)
	movq $0x2529,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq %r14,0x0(%r13)
	movq $0x1,0x8(%r13)
	movq 0x8(%rbp),%r14
	movq %r14,0x30(%rbp)
	movq %r13,0x8(%rbp)
	movq $0x1,0x40(%rbp)
.p2align 0x4,,0x7
L_261097:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_486787
.p2align 0x4,,0x7
L_261098:
	movq 0x30(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq $0xF59,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x18,%r12
	movq %r15,0x8(%r13)
	movq $0x2983,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r13,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_486773
L_261099:
	movq %r15,0x40(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x30(%rbp)
	jmp L_261097
.p2align 0x4
L_486773:
L_261100:
	movq %r13,0x30(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq $0x1,0x40(%rbp)
.p2align 0x4,,0x7
L_261101:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_486786
.p2align 0x4,,0x7
L_261102:
	movq $0x2983,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_486774
L_261103:
	movq %r15,0x40(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x30(%rbp)
	jmp L_261101
.p2align 0x4
L_486774:
L_261104:
	movq 0x40(%rbp),%r13
	cmpq $0x1,%r13
	je L_486781
L_261105:
	movq 0x30(%rbp),%r11
	xorq %r15,%r15
	xchgq %r11,%r14
.p2align 0x4,,0x7
L_261106:
	addq 0x0(%r14),%r15
	movq %r15,0x8(%rbp)
	cmpq $0x1,%r13
	je L_486775
L_261107:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	jmp L_261106
.p2align 0x4
L_486775:
L_261108:
	testq %r15,%r15
	jz L_486780
L_261109:
	cmpq $0x7FFFFFFF,%r15
	ja L_486779
L_261110:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14CF,%rcx
	movq %r15,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_261111+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261111
.p2align 0x4
.long 0x43A8
L_261111:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq %rax,%r15
L_261112:
	movq 0x40(%rbp),%r10
	movq 0x30(%rbp),%r11
	xorq %r13,%r13
	xorq %r14,%r14
.p2align 0x4,,0x7
loop_3085:
	cmpq 0x8(%rbp),%r14
	jnl L_486778
.p2align 0x4,,0x7
loop_3087:
	cmpq 0x0(%r11),%r13
	jl L_486777
L_261140:
	cmpq $0x1,%r10
	je L_486776
L_261141:
	movq 0x0(%r10),%r9
	movq 0x8(%r10),%r10
	xorq %r13,%r13
	movq %r9,%r11
	jmp loop_3087
.p2align 0x4
L_486776:
L_261143:
	movq (globalObjptr+0x5B8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_486777:
L_261144:
	movq 0x8(%r11),%r9
	movq 0x0(%r9,%r13,8),%r8
	incq %r13
	movq %r15,%r9
	shrq $0x8,%r9
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r9,1)
	movq %r8,0x0(%r15,%r14,8)
	incq %r14
	jmp loop_3085
.p2align 0x4
L_486778:
L_261113:
	movq $0x18B,0xFFFFFFFFFFFFFFF8(%r15)
L_261114:
	movq %r15,0x78(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x68,%rbp
	leaq (L_261115+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp primApp_8
.p2align 0x4
L_486779:
L_261146:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_486780:
L_261147:
	movq (globalObjptr+0x6E88)(%rip),%r14
	xchgq %r14,%r15
	jmp L_261112
.p2align 0x4
L_486781:
L_261148:
	movq 0x30(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r13,0x40(%rbp)
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movq %r14,0x8(%rbp)
	je L_486785
L_261149:
	testq %r13,%r13
	jz L_486784
L_261150:
	cmpq $0x7FFFFFFF,%r13
	ja L_261146
L_261151:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14CF,%rcx
	movq %r13,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_261152+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261152
.p2align 0x4
.long 0x43A7
L_261152:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq %rax,%r15
L_261153:
	xorq %r14,%r14
.p2align 0x4,,0x7
loop_3088:
	cmpq 0x40(%rbp),%r14
	jnl L_486782
L_261155:
	movq 0x8(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r11
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r11,0x0(%r15,%r14,8)
	incq %r14
	jmp loop_3088
.p2align 0x4
L_486782:
L_261154:
	movq $0x18B,0xFFFFFFFFFFFFFFF8(%r15)
	jmp L_261114
.p2align 0x4
L_486784:
L_261157:
	movq (globalObjptr+0x6E90)(%rip),%r15
	jmp L_261153
.p2align 0x4
L_486785:
L_261158:
	movq 0x8(%rbp),%r15
	jmp L_261114
.p2align 0x4
L_486786:
L_261159:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_261160+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261160
.p2align 0x4
.long 0x43B1
L_261160:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	jmp L_261102
.p2align 0x4
L_486787:
L_261161:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_261162+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261162
.p2align 0x4
.long 0x43B1
L_261162:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	jmp L_261098
.p2align 0x4
L_486788:
L_261164:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_261165+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261165
.p2align 0x4
.long 0x43B2
L_261165:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_261095
.p2align 0x4
L_486790:
L_261167:
	movq (globalObjptr+0x6EA0)(%rip),%r15
	movq %r15,0x40(%rbp)
	jmp L_261094
.p2align 0x4
L_486791:
L_261082:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_486792:
L_261168:
	movq 0x60(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x28(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x68(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_261169+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_486794:
L_261174:
	movq (globalObjptr+0x6E98)(%rip),%r15
	movq %r15,0x58(%rbp)
	jmp L_261087
.p2align 0x4
L_486796:
L_261175:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_261176
L_261227:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r14d
	movl %r14d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r14
	movq %r14,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_261228+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261228
.p2align 0x4
.long 0x43B8
L_261228:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_261176:
	movq $0x4795,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1D11,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x2,0x8(%r14)
	movq $0x16D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq %r12,(gcState+0x0)(%rip)
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x20(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14CF,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_261177+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261177
.p2align 0x4
.long 0x24A8
L_261177:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq %rax,0x28(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3089:
	cmpq $0x1,%r15
	jnl L_486797
L_261226:
	movq 0x28(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_3089
.p2align 0x4
L_486797:
L_261178:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_261179
L_261224:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_261225+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261225
.p2align 0x4
.long 0x43BA
L_261225:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_261179:
	movq 0x28(%rbp),%r15
	movq $0x18B,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x2529,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq 0x8(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x28(%rbp)
.p2align 0x4,,0x7
L_261180:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_486812
.p2align 0x4,,0x7
L_261181:
	movq 0x20(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq $0xF59,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x18,%r12
	movq %r15,0x8(%r13)
	movq $0x2983,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r13,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_486798
L_261182:
	movq %r15,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_261180
.p2align 0x4
L_486798:
L_261183:
	movq %r13,0x20(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq $0x1,0x28(%rbp)
.p2align 0x4,,0x7
L_261184:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_486811
.p2align 0x4,,0x7
L_261185:
	movq $0x2983,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_486799
L_261186:
	movq %r15,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_261184
.p2align 0x4
L_486799:
L_261187:
	movq 0x28(%rbp),%r13
	cmpq $0x1,%r13
	je L_486806
L_261188:
	movq 0x20(%rbp),%r11
	xorq %r15,%r15
	xchgq %r11,%r14
.p2align 0x4,,0x7
L_261189:
	addq 0x0(%r14),%r15
	movq %r15,0x8(%rbp)
	cmpq $0x1,%r13
	je L_486800
L_261190:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	jmp L_261189
.p2align 0x4
L_486800:
L_261191:
	testq %r15,%r15
	jz L_486805
L_261192:
	cmpq $0x7FFFFFFF,%r15
	ja L_261146
L_261193:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14CF,%rcx
	movq %r15,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_261194+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261194
.p2align 0x4
.long 0x43B5
L_261194:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq %rax,%r15
L_261195:
	movq 0x28(%rbp),%r10
	movq 0x20(%rbp),%r11
	xorq %r13,%r13
	xorq %r14,%r14
.p2align 0x4,,0x7
loop_3090:
	cmpq 0x8(%rbp),%r14
	jnl L_486803
.p2align 0x4,,0x7
loop_3091:
	cmpq 0x0(%r11),%r13
	jl L_486802
L_261203:
	cmpq $0x1,%r10
	je L_261143
L_261204:
	movq 0x0(%r10),%r9
	movq 0x8(%r10),%r10
	xorq %r13,%r13
	movq %r9,%r11
	jmp loop_3091
.p2align 0x4
L_486802:
L_261206:
	movq 0x8(%r11),%r9
	movq 0x0(%r9,%r13,8),%r8
	incq %r13
	movq %r15,%r9
	shrq $0x8,%r9
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r9,1)
	movq %r8,0x0(%r15,%r14,8)
	incq %r14
	jmp loop_3090
.p2align 0x4
L_486803:
L_261196:
	movq $0x18B,0xFFFFFFFFFFFFFFF8(%r15)
L_261197:
	movq %r15,0x70(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x60,%rbp
	leaq (L_261198+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp primApp_8
.p2align 0x4
L_486805:
L_261208:
	movq (globalObjptr+0x6E88)(%rip),%r14
	xchgq %r14,%r15
	jmp L_261195
.p2align 0x4
L_486806:
L_261209:
	movq 0x20(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r13,0x28(%rbp)
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movq %r14,0x8(%rbp)
	je L_486810
L_261210:
	testq %r13,%r13
	jz L_486809
L_261211:
	cmpq $0x7FFFFFFF,%r13
	ja L_261146
L_261212:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14CF,%rcx
	movq %r13,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_261213+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261213
.p2align 0x4
.long 0x43B8
L_261213:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq %rax,%r15
L_261214:
	xorq %r14,%r14
.p2align 0x4,,0x7
loop_3092:
	cmpq 0x28(%rbp),%r14
	jnl L_486807
L_261216:
	movq 0x8(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r11
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r11,0x0(%r15,%r14,8)
	incq %r14
	jmp loop_3092
.p2align 0x4
L_486807:
L_261215:
	movq $0x18B,0xFFFFFFFFFFFFFFF8(%r15)
	jmp L_261197
.p2align 0x4
L_486809:
L_261218:
	movq (globalObjptr+0x6E90)(%rip),%r15
	jmp L_261214
.p2align 0x4
L_486810:
L_261219:
	movq 0x8(%rbp),%r15
	jmp L_261197
.p2align 0x4
L_486811:
L_261220:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_261221+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261221
.p2align 0x4
.long 0x43B9
L_261221:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	jmp L_261185
.p2align 0x4
L_486812:
L_261222:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_261223+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261223
.p2align 0x4
.long 0x43B9
L_261223:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	jmp L_261181
.p2align 0x4
.long 0x43A9
L_261115:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_261116
L_261137:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_261138+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261138
.p2align 0x4
.long 0x43B0
L_261138:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_261116:
	movq $0x16D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x40(%rbp)
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x36F3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x60(%rbp)
	movl 0x28(%rbp),%r15d
	movl %r15d,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_261117+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_44
.p2align 0x4
.long 0x43B3
L_261169:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movl 0x78(%rbp),%r15d
	movl %r15d,0x70(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_261170
L_261171:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_261172+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261172
.p2align 0x4
.long 0x43B4
L_261172:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_261170:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x70(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xCE38)(%rip),%r15
	movq %r15,0x18(%r13)
	movq 0x58(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq 0x60(%rbp),%r14
	movq %r14,%r10
	salq $0x4,%r10
	movq 0x68(%rbp),%r9
	movq %r9,0x0(%r15,%r10,1)
	movq %r15,%r10
	shrq $0x8,%r10
	movb $0x1,0x0(%r11,%r10,1)
	movq %r14,%r11
	salq $0x4,%r11
	movq %r13,0x8(%r15,%r11,1)
	incq %r14
	movq %r14,0x60(%rbp)
	jmp loop_3083
.p2align 0x4
.long 0x43B6
L_261198:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_261199
L_261200:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_261201+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261201
.p2align 0x4
.long 0x43B7
L_261201:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_261199:
	movq 0x20(%rbp),%r14
	movq 0x28(%rbp),%r15
L_261127:
	movq $0x16D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq %r14,0x0(%r13)
	movq $0x1D1F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x20(%rbp)
	movq %r13,0x18(%r15)
	addq $0x28,%r12
	movl $0x1,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x50(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x48(%rbp),%r13
	movq %r13,0x10(%r15)
	movq 0x18(%rbp),%r15
	movq 0x10(%r15),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x28(%rbp)
	movq 0x0(%r11),%r10
	movq %r10,0x30(%rbp)
	movq $0x3EC1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq %r13,0x8(%r15)
	movq %r15,0x40(%rbp)
	movl $0x2,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_261128+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_1
.p2align 0x4
.long 0x43AA
L_261117:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_261118
L_261135:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_261136+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261136
.p2align 0x4
.long 0x43AF
L_261136:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_261118:
	movq $0x1D05,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x30(%rbp)
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_261082
L_261120:
	movl %r13d,0x68(%rbp)
	movq $0x3EA5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r14,0x0(%r15)
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_261121+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_1
.p2align 0x4
.long 0x6FF
L_261128:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq 0x28(%rbp),%r14
	movq %r14,0x40(%rbp)
	movq 0x30(%rbp),%r14
	movq %r15,0x30(%rbp)
	movq %r14,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_261129+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp con_2
.p2align 0x4
.long 0x1033
L_261121:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq %r15,0x60(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_261122+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tuple_9
.p2align 0x4
.long 0x459
L_261129:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq %r15,0x0(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x43AB
L_261122:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_261123
L_261133:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_261134+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261134
.p2align 0x4
.long 0x43AE
L_261134:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_261123:
	movq $0x605,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r12,(gcState+0x0)(%rip)
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x28(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1629,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_261124+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261124
.p2align 0x4
.long 0x43AC
L_261124:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq %rax,0x20(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3086:
	cmpq $0x1,%r15
	jnl L_486820
L_261132:
	movq %r15,%r14
	movq %r15,%r13
	movq %r15,%r11
	movq 0x20(%rbp),%r10
	movq %r10,%r9
	shrq $0x8,%r9
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r9,1)
	imulq $0x18,%r14
	movq 0x28(%rbp),%r9
	movq %r9,0x0(%r10,%r14,1)
	movq %r10,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r8,%r14,1)
	imulq $0x18,%r13
	movq $0x1,0x8(%r10,%r13,1)
	movq %r10,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r8,%r14,1)
	imulq $0x18,%r11
	movq 0x40(%rbp),%r14
	movq %r14,0x10(%r10,%r11,1)
	incq %r15
	jmp loop_3086
.p2align 0x4
L_486820:
L_261125:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_261126
L_261130:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_261131+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261131
.p2align 0x4
.long 0x43AD
L_261131:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_261126:
	movq 0x20(%rbp),%r13
	movq $0x12C5,0xFFFFFFFFFFFFFFF8(%r13)
	movq $0x4795,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x50(%rbp),%r11
	movq %r11,0x0(%r15)
	movq $0x1D11,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x2,0x8(%r14)
	movq $0x16D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x48(%rbp),%r11
	movq %r11,0x0(%r15)
	movq $0x1D29,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x30(%r14)
	addq $0x40,%r12
	movb $0x3,%r11b
	movzbl %r11b,%r10d
	movb $0x1,%r11b
	movzbl %r11b,%r9d
	shll $0x8,%r9d
	orl %r9d,%r10d
	movb $0x1,%r11b
	movzbl %r11b,%r9d
	shll $0x10,%r9d
	orl %r9d,%r10d
	movb $0x1,%r11b
	movzbl %r11b,%r9d
	shll $0x18,%r9d
	orl %r9d,%r10d
	movl %r10d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0xA058)(%rip),%r11
	movq %r11,0x8(%r14)
	movq $0x1,0x10(%r14)
	movq $0x1,0x18(%r14)
	movq $0x1,0x20(%r14)
	movq %r13,0x28(%r14)
	movq 0x10(%r13),%r11
	movq 0x0(%r11),%r10
	movq %r14,%r15
	movq %r10,%r14
	jmp L_261127
.text
.p2align 0x4
.globl import_0
.hidden import_0
import_0:
L_261234:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x38(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_261235
L_261589:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_261590+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261590
.p2align 0x4
.long 0x976
L_261590:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_261235:
	movq 0x28(%rbp),%r15
	movq 0x30(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x28(%r15),%r14
	movq 0x18(%r14),%r13
	movq %r13,0x90(%rbp)
	movq 0x10(%r14),%r13
	movq %r13,0x70(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x78(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_261236+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp deArrowOpt_0
.p2align 0x4
.long 0x43BB
L_261236:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq $0x1,%r15
	je L_486824
L_261237:
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x80(%rbp)
	movq %r14,0x90(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x90,%rbp
	leaq (L_261238+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2032
.p2align 0x4
L_486824:
L_261541:
	movq 0x38(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x10818)(%rip),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_261542+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x43BC
L_261238:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_261239
L_261586:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_261587+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261587
.p2align 0x4
.long 0x43E4
L_261587:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_261239:
	movq 0x10(%rbp),%r15
	cmpq $0x1,%r15
	je L_486829
L_261240:
	movq $0x71,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x70(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	movq %r11,0x80(%rbp)
	cmpq %r11,%r14
	je L_486825
L_261241:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_486825:
L_261242:
	movq 0x80(%rbp),%rdx
	testq %rdx,%rdx
	jz L_486828
L_261243:
	cmpq $0x7FFFFFFF,%rdx
	ja L_486827
L_261244:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x15E7,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_261245+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261245
.p2align 0x4
.long 0x43BD
L_261245:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq %rax,0x88(%rbp)
L_261246:
	movq $0x0,0x90(%rbp)
loop_3093:
	movq 0x80(%rbp),%r15
	cmpq %r15,0x90(%rbp)
	jl L_486826
L_261247:
	movq 0x88(%rbp),%r15
	movq $0x9F1,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x10(%rbp)
L_261248:
	movq 0x78(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x28(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_261249+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toCType_0
.p2align 0x4
L_486826:
L_261562:
	movq 0x90(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x10(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x98(%rbp)
	movq 0x78(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0xB0(%rbp)
	leaq L_261572(%rip),%r15
	movq %r15,0x30(%rbp)
	movq %rbp,%r15
	addq $0x38,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq %r13,0xA8(%rbp)
	addq $0xA8,%rbp
	leaq (L_261563+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toCType_0
.p2align 0x4
L_486827:
L_261577:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_486828:
L_261578:
	movq (globalObjptr+0x5018)(%rip),%r15
	movq %r15,0x88(%rbp)
	jmp L_261246
.p2align 0x4
L_486829:
L_261579:
	movq 0x78(%rbp),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x98(%rbp)
	movq 0x80(%rbp),%r14
	movq %r14,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_261580+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toCType_0
.p2align 0x4
.long 0x43DF
L_261542:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_261543+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutPretty_0
.p2align 0x4
.long 0x43BE
L_261249:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x70(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_261250
L_261560:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_261561+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261561
.p2align 0x4
.long 0x43DC
L_261561:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_261250:
	movq 0x70(%rbp),%r15
	cmpq $0x1,%r15
	je L_486864
L_261251:
	movq 0x8(%r15),%r14
	movb 0x0(%r15),%r13b
	movq $0x251B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x20,%r12
	movzbl %r13b,%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_486863
L_261252:
	movq %r15,0x48(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x18(%rbp)
	movb 0x0(%r14),%r15b
	movb %r15b,0x28(%rbp)
	movq $0x1,0x70(%rbp)
.p2align 0x4,,0x7
L_261253:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_486862
.p2align 0x4,,0x7
L_261254:
	movb 0x28(%rbp),%r15b
	cmpb $0x0,%r15b
	je L_261528
	cmpb $0x4,%r15b
	je L_486859
L_261255:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_486831
L_261256:
	movb 0x0(%r15),%r14b
	movq 0x8(%r15),%r15
	movq %r15,0x18(%rbp)
	movb %r14b,0x28(%rbp)
	jmp L_261253
.p2align 0x4
L_486831:
L_261257:
	movq 0x48(%rbp),%r14
	movq %r14,0x18(%rbp)
	movq 0x70(%rbp),%r15
L_261258:
	cmpq $0x1,%r15
	je L_261294
L_261259:
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movb 0x0(%r15),%r14b
	movb %r14b,0x48(%rbp)
	movq $0x1,0x70(%rbp)
.p2align 0x4,,0x7
L_261260:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_486857
.p2align 0x4,,0x7
L_261261:
	movq $0x20F9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movzbl 0x48(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_486832
L_261262:
	movq %r15,0x70(%rbp)
	movb 0x0(%r14),%r15b
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	movb %r15b,0x48(%rbp)
	jmp L_261260
.p2align 0x4
L_486832:
L_261263:
	cmpq $0x1,0x70(%rbp)
	jne L_261264
L_261516:
	movb 0x48(%rbp),%r15b
	cmpb $0x0,%r15b
	je L_486852
	cmpb $0x4,%r15b
	je L_486833
L_261264:
	movq (globalObjptr+0x10998)(%rip),%r15
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_261265+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_486833:
L_261294:
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je L_486851
L_261295:
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movb 0x0(%r15),%r14b
	movb %r14b,0x48(%rbp)
	movb $0x1,0x49(%rbp)
	movq $0x1,0x50(%rbp)
.p2align 0x4,,0x7
L_261296:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_486850
.p2align 0x4,,0x7
L_261297:
	movb 0x48(%rbp),%r15b
	cmpb $0x1,%r15b
	je L_261491
	cmpb $0x2,%r15b
	je L_261491
	cmpb $0x3,%r15b
	je L_486846
L_261298:
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_486834
L_261299:
	movb 0x0(%r15),%r14b
	movq 0x8(%r15),%r15
	movq %r15,0x28(%rbp)
	movb %r14b,0x48(%rbp)
	jmp L_261296
.p2align 0x4
L_486834:
L_261300:
	movb 0x49(%rbp),%r14b
	movb %r14b,0x28(%rbp)
	movq 0x50(%rbp),%r14
	xchgq %r14,%r15
L_261301:
	cmpq $0x1,%r15
	je L_486845
L_261302:
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movb 0x0(%r15),%r14b
	movb %r14b,0x29(%rbp)
	movq $0x1,0x50(%rbp)
.p2align 0x4,,0x7
L_261303:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_486844
.p2align 0x4,,0x7
L_261304:
	movq $0x20F9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movzbl 0x29(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_486835
L_261305:
	movq %r15,0x50(%rbp)
	movb 0x0(%r14),%r15b
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	movb %r15b,0x29(%rbp)
	jmp L_261303
.p2align 0x4
L_486835:
L_261307:
	cmpq $0x1,0x8(%rbp)
	je L_486841
L_261308:
	cmpq $0x1,%r15
	je L_261338
L_261309:
	movb 0x0(%r15),%r14b
	cmpq $0x1,0x8(%r15)
	jne L_261310
L_261433:
	cmpb $0x1,%r14b
	je L_486838
	cmpb $0x2,%r14b
	je L_486837
	cmpb $0x3,%r14b
	je L_486836
L_261310:
	movq (globalObjptr+0x10998)(%rip),%r15
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_261311+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_486836:
L_261338:
	movb $0x2,0x20(%rbp)
L_261339:
	movb 0x20(%rbp),%r15b
	movb %r15b,0x78(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x78,%rbp
	leaq (L_261340+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp scopeCheck_0
.p2align 0x4
L_486837:
L_261435:
	movb $0x1,0x20(%rbp)
	jmp L_261339
.p2align 0x4
L_486838:
L_261434:
	movb $0x0,0x20(%rbp)
	jmp L_261339
.p2align 0x4
L_486841:
L_261438:
	cmpq $0x1,%r15
	je L_486842
L_261439:
	movq (globalObjptr+0x10998)(%rip),%r15
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_261440+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_486842:
L_261468:
	movb $0x2,0x20(%rbp)
L_261342:
	movq 0x10(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x24(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_486843
L_261345:
	movq $0x3EAD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq %r14,0x78(%rbp)
	movl %r13d,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_261346+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_1
.p2align 0x4
L_486843:
L_261344:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_486844:
L_261487:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_261488+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261488
.p2align 0x4
.long 0x43D7
L_261488:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	jmp L_261304
.p2align 0x4
L_486845:
L_261489:
	movq $0x1,%r15
	jmp L_261307
.p2align 0x4
L_486846:
L_261491:
	movq $0x20F9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movzbl 0x48(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_486847
L_261492:
	movq %r15,0x50(%rbp)
	movb 0x0(%r14),%r15b
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	movb %r15b,0x48(%rbp)
	jmp L_261296
.p2align 0x4
L_486847:
L_261493:
	movb 0x49(%rbp),%r13b
	movb %r13b,0x28(%rbp)
	jmp L_261301
.p2align 0x4
L_486850:
L_261496:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_261497+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261497
.p2align 0x4
.long 0x43D8
L_261497:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	jmp L_261297
.p2align 0x4
L_486851:
L_261498:
	movb $0x1,0x28(%rbp)
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_261301
.p2align 0x4
L_486852:
L_261517:
	movq 0x50(%rbp),%r11
	movb 0x0(%r11),%r13b
	cmpb $0x3,%r13b
	je L_261519
	cmpb $0x9,%r13b
	je L_486853
	jmp L_261294
.p2align 0x4
L_486853:
L_261519:
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je L_486854
L_261520:
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movb 0x0(%r15),%r14b
	movb %r14b,0x48(%rbp)
	movb $0x0,0x49(%rbp)
	movq $0x1,0x50(%rbp)
	jmp L_261296
.p2align 0x4
L_486854:
L_261521:
	movb $0x0,0x28(%rbp)
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_261301
.p2align 0x4
L_486857:
L_261524:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_261525+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261525
.p2align 0x4
.long 0x43DE
L_261525:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	jmp L_261261
.p2align 0x4
L_486859:
L_261528:
	movq $0x20F9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movzbl 0x28(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_486860
L_261529:
	movq %r15,0x70(%rbp)
	movb 0x0(%r14),%r15b
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	movb %r15b,0x28(%rbp)
	jmp L_261253
.p2align 0x4
L_486860:
L_261530:
	movq 0x48(%rbp),%r14
	movq %r14,0x18(%rbp)
	jmp L_261258
.p2align 0x4
L_486862:
L_261532:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_261533+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261533
.p2align 0x4
.long 0x43D1
L_261533:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	jmp L_261254
.p2align 0x4
L_486863:
L_261534:
	movq %r15,0x18(%rbp)
	movq $0x1,%r15
	jmp L_261258
.p2align 0x4
L_486864:
L_261535:
	movq 0x28(%rbp),%r14
	movq %r14,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_261536+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_0
.p2align 0x4
.long 0x43E1
L_261563:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0xA0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_261564
L_261570:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_261571+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261571
.p2align 0x4
.long 0x43E2
L_261571:
	addq $0xFFFFFFFFFFFFFF50,%rbp
L_261564:
	movq 0xA0(%rbp),%r15
	cmpq $0x1,%r15
	je L_486866
L_261565:
	movq 0x8(%r15),%r14
	movb 0x0(%r15),%r13b
	movq 0x88(%rbp),%r15
	movq %r15,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq 0x90(%rbp),%r11
	movq %r11,%r9
	imulq $0x18,%r9
	movq 0x98(%rbp),%r8
	movq %r8,0x8(%r15,%r9,1)
	movq %r15,%r9
	shrq $0x8,%r9
	movb $0x1,0x0(%r10,%r9,1)
	movq %r11,%r10
	imulq $0x18,%r10
	movq %r14,0x10(%r15,%r10,1)
	movq %r11,%r14
	imulq $0x18,%r14
	movb %r13b,0x0(%r15,%r14,1)
	incq %r11
	movq %r11,0x90(%rbp)
	jmp loop_3093
.p2align 0x4
L_486866:
L_261566:
	movq $0x1ACB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x70(%rbp),%r13
	movq %r13,0x0(%r14)
	xchgq %r13,%r15
L_261567:
	cmpq %r15,0x70(%rbp)
	je L_261541
L_261568:
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq 0x38(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x651
L_261572:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r14
L_261573:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_486870
L_261575:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xD65,%r15
	jne L_486869
L_261576:
	movq %r14,%r13
	movq 0x0(%r14),%r14
	movq %r14,%r15
	movq %r13,%r14
	jmp L_261567
.p2align 0x4
L_486869:
	movq %r14,%r15
L_261574:
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq 0x38(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_486870:
	movq %r14,%r15
	jmp L_261574
.p2align 0x4
.long 0x43BC
L_261580:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq $0x1,%r15
	je L_261541
L_261581:
	movq 0x8(%r15),%r14
	movq %r14,0x70(%rbp)
	movb 0x0(%r15),%r14b
	movb %r14b,0x88(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x15E7,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_261582+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261582
.p2align 0x4
.long 0x43E3
L_261582:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	xorq %r15,%r15
	movq %rax,%r14
.p2align 0x4,,0x7
loop_3097:
	cmpq $0x1,%r15
	jnl L_486871
L_261584:
	movq %r15,%r13
	movq %r15,%r11
	movq %r15,%r10
	movq %r14,%r9
	shrq $0x8,%r9
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r9,1)
	imulq $0x18,%r13
	movq 0x80(%rbp),%r9
	movq %r9,0x8(%r14,%r13,1)
	movq %r14,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%r8,%r13,1)
	imulq $0x18,%r11
	movq 0x70(%rbp),%r13
	movq %r13,0x10(%r14,%r11,1)
	imulq $0x18,%r10
	movb 0x88(%rbp),%r13b
	movb %r13b,0x0(%r14,%r10,1)
	incq %r15
	jmp loop_3097
.p2align 0x4
L_486871:
L_261583:
	movq $0x9F1,0xFFFFFFFFFFFFFFF8(%r14)
	movq %r14,0x10(%rbp)
	jmp L_261248
.p2align 0x4
.long 0x59B
L_261543:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	incl %r13d
	jo L_486873
L_261544:
	movl %r13d,0x0(%r14)
	movq %r15,0x48(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x60(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x48,%rbp
	leaq (L_261545+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_486873:
L_261272:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x43BF
L_261265:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je L_486878
L_261266:
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movb 0x0(%r15),%dl
	movl $0x0,0x50(%rbp)
	movq $0x1,0x70(%rbp)
L_261267:
	cmpb $0x1,%dl
	je L_486877
	cmpb $0x2,%dl
	je L_486876
	cmpb $0x3,%dl
	je L_486875
	cmpb $0x4,%dl
	je L_486874
L_261268:
	movq (globalObjptr+0xE8E0)(%rip),%r15
L_261269:
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_261270+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_486874:
L_261514:
	movq (globalObjptr+0xE950)(%rip),%r15
	jmp L_261269
.p2align 0x4
L_486875:
L_261513:
	movq (globalObjptr+0xE948)(%rip),%r15
	jmp L_261269
.p2align 0x4
L_486876:
L_261512:
	movq (globalObjptr+0xE940)(%rip),%r15
	jmp L_261269
.p2align 0x4
L_486877:
L_261511:
	movq (globalObjptr+0xE928)(%rip),%r15
	jmp L_261269
.p2align 0x4
L_486878:
L_261515:
	movq $0x1,%r14
	xchgq %r14,%r15
L_261280:
	movq %r15,0x78(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x80(%rbp)
	movq (globalObjptr+0x9F40)(%rip),%r15
	movq %r15,0x88(%rbp)
	movq (globalObjptr+0xDD28)(%rip),%r15
	movq %r15,0x90(%rbp)
	addq $0x78,%rbp
	leaq (L_261281+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
.long 0x43BF
L_261311:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je L_486883
L_261312:
	movb 0x0(%r15),%dl
	movq 0x8(%r15),%r15
	movq %r15,0x20(%rbp)
	movl $0x0,0x2C(%rbp)
	movq $0x1,0x50(%rbp)
L_261313:
	cmpb $0x1,%dl
	je L_486882
	cmpb $0x2,%dl
	je L_486881
	cmpb $0x3,%dl
	je L_486880
	cmpb $0x4,%dl
	je L_486879
L_261314:
	movq (globalObjptr+0xE8E0)(%rip),%r15
L_261315:
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_261316+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_486879:
L_261431:
	movq (globalObjptr+0xE950)(%rip),%r15
	jmp L_261315
.p2align 0x4
L_486880:
L_261430:
	movq (globalObjptr+0xE948)(%rip),%r15
	jmp L_261315
.p2align 0x4
L_486881:
L_261429:
	movq (globalObjptr+0xE940)(%rip),%r15
	jmp L_261315
.p2align 0x4
L_486882:
L_261428:
	movq (globalObjptr+0xE928)(%rip),%r15
	jmp L_261315
.p2align 0x4
L_486883:
L_261432:
	movq $0x1,%r14
	xchgq %r14,%r15
L_261325:
	movq %r15,0x78(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x80(%rbp)
	movq (globalObjptr+0x9F40)(%rip),%r15
	movq %r15,0x88(%rbp)
	movq (globalObjptr+0xDD28)(%rip),%r15
	movq %r15,0x90(%rbp)
	addq $0x78,%rbp
	leaq (L_261326+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
.long 0x43C5
L_261340:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_261342
L_261415:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_261416+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261416
.p2align 0x4
.long 0x43CE
L_261416:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	jmp L_261342
.p2align 0x4
.long 0x43D2
L_261440:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je L_486889
L_261441:
	movb 0x0(%r15),%dl
	movq 0x8(%r15),%r15
	movq %r15,0x20(%rbp)
	movl $0x0,0x2C(%rbp)
	movq $0x1,0x50(%rbp)
L_261442:
	cmpb $0x1,%dl
	je L_486888
	cmpb $0x2,%dl
	je L_486887
	cmpb $0x3,%dl
	je L_486886
	cmpb $0x4,%dl
	je L_486885
L_261443:
	movq (globalObjptr+0xE8E0)(%rip),%r15
L_261444:
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_261445+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_486885:
L_261484:
	movq (globalObjptr+0xE950)(%rip),%r15
	jmp L_261444
.p2align 0x4
L_486886:
L_261483:
	movq (globalObjptr+0xE948)(%rip),%r15
	jmp L_261444
.p2align 0x4
L_486887:
L_261482:
	movq (globalObjptr+0xE940)(%rip),%r15
	jmp L_261444
.p2align 0x4
L_486888:
L_261481:
	movq (globalObjptr+0xE928)(%rip),%r15
	jmp L_261444
.p2align 0x4
L_486889:
L_261485:
	movq $0x1,%r14
	xchgq %r14,%r15
L_261454:
	movq %r15,0x78(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x80(%rbp)
	movq (globalObjptr+0x9F40)(%rip),%r15
	movq %r15,0x88(%rbp)
	movq (globalObjptr+0xDD28)(%rip),%r15
	movq %r15,0x90(%rbp)
	addq $0x78,%rbp
	leaq (L_261455+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
.long 0x43C5
L_261346:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_261347
L_261413:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_261414+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261414
.p2align 0x4
.long 0x43CD
L_261414:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_261347:
	cmpq $0x1,0x8(%rbp)
	jne L_486890
L_261365:
	movq $0x265F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x48(%rbp)
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x3EC3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x78(%rbp)
	movl $0x1,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_261366+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_1
.p2align 0x4
L_486890:
L_261349:
	movq $0x3749,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x78(%rbp)
	movl 0x24(%rbp),%r15d
	movl %r15d,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_261350+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_17
.p2align 0x4
.long 0x43C2
L_261536:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_261537
L_261558:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_261559+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261559
.p2align 0x4
.long 0x43E0
L_261559:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_261537:
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	movq %r15,%r13
	shrq $0x1,%r13
	cmpq $0x1448,%r13
	jne L_486898
L_261539:
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r13
L_261540:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_261541
L_261548:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE78,%r15
	jne L_261541
L_261549:
	movq 0x0(%r13),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x127F,%r14
	je L_261541
L_261551:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r13,%r10
	jne L_261344
L_261553:
	testl %r11d,%r11d
	jnz L_261541
L_261555:
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je L_486892
L_261556:
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movb 0x0(%r15),%r14b
	movb %r14b,0x28(%rbp)
	movq $0x1,0x48(%rbp)
	movq $0x1,0x70(%rbp)
	jmp L_261253
.p2align 0x4
L_486892:
L_261557:
	movq $0x1,0x18(%rbp)
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_261258
.p2align 0x4
L_486898:
L_261538:
	movq (globalObjptr+0x1500)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x904
L_261545:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq (globalObjptr+0x1610)(%rip),%r15
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_486900
L_261546:
	movq $0x35,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_486900:
L_261418:
	movq (globalObjptr+0x1618)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x43C0
L_261270:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x78(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_261271
L_261509:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_261510+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261510
.p2align 0x4
.long 0x43DD
L_261510:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_261271:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x8(%r15)
	movl 0x50(%rbp),%r14d
	incl %r14d
	jo L_261272
L_261273:
	movq 0x48(%rbp),%r13
	cmpq $0x1,%r13
	je L_486901
L_261274:
	movl %r14d,0x50(%rbp)
	movq %r15,0x70(%rbp)
	movb 0x0(%r13),%dl
	movq 0x8(%r13),%r13
	movq %r13,0x48(%rbp)
	jmp L_261267
.p2align 0x4
L_486901:
L_261275:
	movq 0x70(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq $0x1,0x70(%rbp)
.p2align 0x4,,0x7
L_261276:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_486903
.p2align 0x4,,0x7
L_261277:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_261280
L_261278:
	movq %r15,0x70(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	movq %r15,0x50(%rbp)
	jmp L_261276
.p2align 0x4
L_486903:
L_261507:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_261508+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261508
.p2align 0x4
.long 0x43DC
L_261508:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	jmp L_261277
.p2align 0x4
.long 0x43C1
L_261281:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_261282
L_261505:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_261506+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261506
.p2align 0x4
.long 0x43DB
L_261506:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_261282:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x50(%rbp)
	addq $0x18,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_261283:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_261272
L_261284:
	cmpq $0x1,%r14
	je L_486906
L_261285:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_261283
.p2align 0x4
L_486906:
L_261286:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_261287
L_261503:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_261504+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261504
.p2align 0x4
.long 0x43DA
L_261504:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_261287:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_486908
L_261288:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
L_261289:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_261272
L_261290:
	movl %r13d,0x0(%r15)
	movq %r14,0x80(%rbp)
	movq (globalObjptr+0x9D0)(%rip),%r15
	movq %r15,0x78(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x90(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x78,%rbp
	leaq (L_261291+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_486908:
L_261502:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_261289
.p2align 0x4
.long 0x43C2
L_261316:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x70(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_261317
L_261426:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_261427+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261427
.p2align 0x4
.long 0x43D1
L_261427:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_261317:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movl 0x2C(%rbp),%r14d
	incl %r14d
	jo L_261272
L_261318:
	movq 0x20(%rbp),%r13
	cmpq $0x1,%r13
	je L_486912
L_261319:
	movl %r14d,0x2C(%rbp)
	movq %r15,0x50(%rbp)
	movb 0x0(%r13),%dl
	movq 0x8(%r13),%r13
	movq %r13,0x20(%rbp)
	jmp L_261313
.p2align 0x4
L_486912:
L_261320:
	movq 0x50(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq $0x1,0x70(%rbp)
.p2align 0x4,,0x7
L_261321:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_486914
.p2align 0x4,,0x7
L_261322:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_261325
L_261323:
	movq %r15,0x70(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x50(%rbp)
	jmp L_261321
.p2align 0x4
L_486914:
L_261424:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_261425+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261425
.p2align 0x4
.long 0x43D1
L_261425:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	jmp L_261322
.p2align 0x4
.long 0x43C3
L_261326:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_261327
L_261422:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_261423+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261423
.p2align 0x4
.long 0x43D0
L_261423:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_261327:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x50(%rbp)
	addq $0x18,%r12
	movq 0x48(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_261328:
	addl 0x0(%r15),%ecx
	movl %ecx,0x20(%rbp)
	jo L_261272
L_261329:
	cmpq $0x1,%r14
	je L_486917
L_261330:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_261328
.p2align 0x4
L_486917:
L_261331:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_261332
L_261420:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_261421+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261421
.p2align 0x4
.long 0x43CF
L_261421:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_261332:
	movl 0x20(%rbp),%ecx
	testl %ecx,%ecx
	jz L_486919
L_261333:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
L_261334:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_261272
L_261335:
	movl %r13d,0x0(%r15)
	movq %r14,0x80(%rbp)
	movq (globalObjptr+0x9D0)(%rip),%r15
	movq %r15,0x78(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x90(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x78,%rbp
	leaq (L_261336+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_486919:
L_261419:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_261334
.p2align 0x4
.long 0x43D3
L_261445:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_261446
L_261479:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_261480+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261480
.p2align 0x4
.long 0x43D7
L_261480:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_261446:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movl 0x2C(%rbp),%r14d
	incl %r14d
	jo L_261272
L_261447:
	movq 0x20(%rbp),%r13
	cmpq $0x1,%r13
	je L_486923
L_261448:
	movl %r14d,0x2C(%rbp)
	movq %r15,0x50(%rbp)
	movb 0x0(%r13),%dl
	movq 0x8(%r13),%r13
	movq %r13,0x20(%rbp)
	jmp L_261442
.p2align 0x4
L_486923:
L_261449:
	movq 0x50(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq $0x1,0x58(%rbp)
.p2align 0x4,,0x7
L_261450:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_486925
.p2align 0x4,,0x7
L_261451:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_261454
L_261452:
	movq %r15,0x58(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x50(%rbp)
	jmp L_261450
.p2align 0x4
L_486925:
L_261477:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_261478+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261478
.p2align 0x4
.long 0x43D7
L_261478:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	jmp L_261451
.p2align 0x4
.long 0x43D4
L_261455:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_261456
L_261475:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_261476+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261476
.p2align 0x4
.long 0x43D6
L_261476:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_261456:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x50(%rbp)
	addq $0x18,%r12
	movq 0x48(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_261457:
	addl 0x0(%r15),%ecx
	movl %ecx,0x20(%rbp)
	jo L_261272
L_261458:
	cmpq $0x1,%r14
	je L_486928
L_261459:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_261457
.p2align 0x4
L_486928:
L_261460:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_261461
L_261473:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_261474+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261474
.p2align 0x4
.long 0x43D5
L_261474:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_261461:
	movl 0x20(%rbp),%ecx
	testl %ecx,%ecx
	jz L_486930
L_261462:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
L_261463:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_261272
L_261464:
	movl %r13d,0x0(%r15)
	movq %r14,0x80(%rbp)
	movq (globalObjptr+0x9D0)(%rip),%r15
	movq %r15,0x78(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x90(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x78,%rbp
	leaq (L_261465+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_486930:
L_261472:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_261463
.p2align 0x4
.long 0x43C8
L_261366:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq $0x1,0x50(%rbp)
	movq 0x48(%rbp),%r14
	movq %r14,0x40(%rbp)
	movq %r15,0x48(%rbp)
.p2align 0x4,,0x7
L_261367:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_486950
.p2align 0x4,,0x7
L_261368:
	movq 0x48(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq $0xF6B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x18,%r12
	movq %r15,0x8(%r13)
	movq $0x2971,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r13,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_486934
L_261369:
	movq %r15,0x50(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x40(%rbp)
	movq %r15,0x48(%rbp)
	jmp L_261367
.p2align 0x4
L_486934:
L_261370:
	movq %r13,0x48(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq $0x1,0x50(%rbp)
.p2align 0x4,,0x7
L_261371:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_486949
.p2align 0x4,,0x7
L_261372:
	movq $0x2971,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_486935
L_261373:
	movq %r15,0x50(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x40(%rbp)
	movq %r15,0x48(%rbp)
	jmp L_261371
.p2align 0x4
L_486935:
L_261374:
	movq 0x50(%rbp),%r13
	cmpq $0x1,%r13
	je L_486943
L_261375:
	movq 0x48(%rbp),%r11
	xorq %r15,%r15
	xchgq %r11,%r14
.p2align 0x4,,0x7
L_261376:
	addq 0x0(%r14),%r15
	movq %r15,0x40(%rbp)
	cmpq $0x1,%r13
	je L_486936
L_261377:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	jmp L_261376
.p2align 0x4
L_486936:
L_261378:
	testq %r15,%r15
	jz L_486942
L_261379:
	cmpq $0x7FFFFFFF,%r15
	ja L_486941
L_261380:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x142D,%rcx
	movq %r15,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_261381+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261381
.p2align 0x4
.long 0x43C9
L_261381:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq %rax,0x58(%rbp)
L_261382:
	movq 0x50(%rbp),%r11
	movq 0x48(%rbp),%r13
	xorq %r14,%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3094:
	cmpq 0x40(%rbp),%r15
	jnl L_486939
.p2align 0x4,,0x7
loop_3095:
	cmpq 0x0(%r13),%r14
	jl L_486938
L_261388:
	cmpq $0x1,%r11
	je L_486937
L_261389:
	movq 0x0(%r11),%r10
	movq 0x8(%r11),%r11
	xorq %r14,%r14
	movq %r10,%r13
	jmp loop_3095
.p2align 0x4
L_486937:
L_261390:
	movq (globalObjptr+0x5B8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_486938:
L_261391:
	movq 0x8(%r13),%r10
	movq 0x0(%r10,%r14,8),%r9
	incq %r14
	movq 0x58(%rbp),%r10
	movq %r10,%r8
	shrq $0x8,%r8
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r8,1)
	movq %r9,0x0(%r10,%r15,8)
	incq %r15
	jmp loop_3094
.p2align 0x4
L_486939:
L_261383:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_261384
L_261385:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_261386+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261386
.p2align 0x4
.long 0x43CA
L_261386:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_261384:
	movq 0x58(%rbp),%r15
	movq $0x1F9,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x40(%rbp)
	jmp L_261349
.p2align 0x4
L_486941:
L_261393:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_486942:
L_261394:
	movq (globalObjptr+0x5030)(%rip),%r14
	movq %r14,0x58(%rbp)
	jmp L_261382
.p2align 0x4
L_486943:
L_261395:
	movq 0x48(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r13,0x50(%rbp)
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movq %r14,0x40(%rbp)
	je L_261349
L_261396:
	testq %r13,%r13
	jz L_486947
L_261397:
	cmpq $0x7FFFFFFF,%r13
	ja L_261393
L_261398:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x142D,%rcx
	movq %r13,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_261399+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261399
.p2align 0x4
.long 0x43C7
L_261399:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq %rax,0x48(%rbp)
L_261400:
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3096:
	cmpq 0x50(%rbp),%r15
	jnl L_486944
L_261405:
	movq 0x40(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x48(%rbp),%r14
	movq %r14,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r13,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_3096
.p2align 0x4
L_486944:
L_261401:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_261402
L_261403:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_261404+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261404
.p2align 0x4
.long 0x43CB
L_261404:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_261402:
	movq 0x48(%rbp),%r15
	movq $0x1F9,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x40(%rbp)
	jmp L_261349
.p2align 0x4
L_486947:
L_261407:
	movq (globalObjptr+0x5038)(%rip),%r15
	movq %r15,0x48(%rbp)
	jmp L_261400
.p2align 0x4
L_486949:
L_261409:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_261410+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261410
.p2align 0x4
.long 0x43CC
L_261410:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	jmp L_261372
.p2align 0x4
L_486950:
L_261411:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_261412+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261412
.p2align 0x4
.long 0x43CC
L_261412:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	jmp L_261368
.p2align 0x4
.long 0x43C6
L_261350:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_261351
L_261363:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_261364+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261364
.p2align 0x4
.long 0x43C7
L_261364:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_261351:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_486954
L_261352:
	movzbw 0x0(%r14),%r15w
	shlw $0x1,%r15w
	orw $0x1,%r15w
L_261353:
	movq $0x1159,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x18,%r12
	movzwl %r15w,%r10d
	movl %r10d,0x0(%r11)
	movl $0x0,0x4(%r11)
	movq 0x10(%rbp),%r10
	movq %r10,0x8(%r11)
	movq 0x18(%rbp),%r10
	cmpq $0x1,%r10
	je L_486952
L_261354:
	movq 0x10(%r10),%r14
	movq 0x8(%rbp),%r13
	cmpq $0x1,%r13
	je L_486951
L_261355:
	movq %r11,%r15
L_261357:
	movq $0x24BD,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x10(%r11)
	movq %r14,0x18(%r11)
	movq %r13,0x20(%r11)
	addq $0x30,%r12
	movzbl 0x28(%rbp),%r15d
	movzbl 0x20(%rbp),%r14d
	shll $0x8,%r14d
	orl %r14d,%r15d
	movl %r15d,0x0(%r11)
	movl $0x0,0x4(%r11)
	movq 0x40(%rbp),%r15
	movq %r15,0x8(%r11)
	movq %r11,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_486951:
L_261358:
	movq $0x1,%r10
	movq %r11,%r15
	xchgq %r10,%r13
	jmp L_261357
.p2align 0x4
L_486952:
L_261359:
	movq 0x8(%rbp),%r13
	cmpq $0x1,%r13
	je L_486953
L_261360:
	movq 0x68(%rbp),%r14
	movq %r11,%r15
	jmp L_261357
.p2align 0x4
L_486953:
L_261361:
	movq $0x1,%r9
	movq 0x68(%rbp),%r14
	movq %r11,%r15
	xchgq %r9,%r13
	jmp L_261357
.p2align 0x4
L_486954:
L_261362:
	xorw %r15w,%r15w
	jmp L_261353
.p2align 0x4
.long 0x43BF
L_261291:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_261292
L_261500:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_261501+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261501
.p2align 0x4
.long 0x43D9
L_261501:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_261292:
	movq (globalObjptr+0x1608)(%rip),%r15
	movq (globalObjptr+0x1610)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_261418
	jmp L_261294
.p2align 0x4
.long 0x43C4
L_261336:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq (globalObjptr+0x1610)(%rip),%r15
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_261418
	jmp L_261338
.p2align 0x4
.long 0x43C5
L_261465:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_261466
L_261470:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_261471+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261471
.p2align 0x4
.long 0x43CE
L_261471:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_261466:
	movq (globalObjptr+0x1608)(%rip),%r15
	movq (globalObjptr+0x1610)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_261418
	jmp L_261468
.text
.p2align 0x4
.globl concat_9
.hidden concat_9
concat_9:
L_261591:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_261592
L_261635:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_261636+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261636
.p2align 0x4
.long 0x451
L_261636:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_261592:
	movq 0x0(%rbp),%r15
	cmpq $0x1,%r15
	je L_486976
L_261593:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_261594:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_486975
.p2align 0x4,,0x7
L_261595:
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq $0xF4D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x18,%r12
	movq %r15,0x8(%r13)
	movq $0x298F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r13,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_486961
L_261596:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_261594
.p2align 0x4
L_486961:
L_261597:
	movq %r13,0x8(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_261598:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_486974
.p2align 0x4,,0x7
L_261599:
	movq $0x298F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_486962
L_261600:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_261598
.p2align 0x4
L_486962:
L_261601:
	movq 0x10(%rbp),%r13
	cmpq $0x1,%r13
	je L_486969
L_261602:
	movq 0x8(%rbp),%r11
	xorq %r15,%r15
	xchgq %r11,%r14
.p2align 0x4,,0x7
L_261603:
	addq 0x0(%r14),%r15
	movq %r15,0x18(%rbp)
	cmpq $0x1,%r13
	je L_486963
L_261604:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	jmp L_261603
.p2align 0x4
L_486963:
L_261605:
	testq %r15,%r15
	jz L_486968
L_261606:
	cmpq $0x7FFFFFFF,%r15
	ja L_486967
L_261607:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x143D,%rcx
	movq %r15,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_261608+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261608
.p2align 0x4
.long 0x49B
L_261608:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq %rax,%r15
L_261609:
	movq 0x10(%rbp),%r10
	movq 0x8(%rbp),%r11
	xorq %r13,%r13
	xorq %r14,%r14
.p2align 0x4,,0x7
loop_3098:
	cmpq 0x18(%rbp),%r14
	jnl L_486966
.p2align 0x4,,0x7
loop_3099:
	cmpq 0x0(%r11),%r13
	jl L_486965
L_261612:
	cmpq $0x1,%r10
	je L_486964
L_261613:
	movq 0x0(%r10),%r9
	movq 0x8(%r10),%r10
	xorq %r13,%r13
	movq %r9,%r11
	jmp loop_3099
.p2align 0x4
L_486964:
L_261614:
	movq (globalObjptr+0x5B8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_486965:
L_261615:
	movq 0x8(%r11),%r9
	movq 0x0(%r9,%r13,8),%r8
	incq %r13
	movq %r15,%r9
	shrq $0x8,%r9
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r9,1)
	movq %r8,0x0(%r15,%r14,8)
	incq %r14
	jmp loop_3098
.p2align 0x4
L_486966:
L_261610:
	movq $0xB1B,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_486967:
L_261617:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_486968:
L_261618:
	movq (globalObjptr+0x660)(%rip),%r14
	xchgq %r14,%r15
	jmp L_261609
.p2align 0x4
L_486969:
L_261619:
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%rdx
	movq %rdx,0x18(%rbp)
	cmpq 0xFFFFFFFFFFFFFFF0(%r13),%rdx
	movq %r13,0x10(%rbp)
	je L_486973
L_261620:
	testq %rdx,%rdx
	jz L_486972
L_261621:
	cmpq $0x7FFFFFFF,%rdx
	ja L_261617
L_261622:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x143D,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_261623+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261623
.p2align 0x4
.long 0x4A4
L_261623:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq %rax,%r15
L_261624:
	xorq %r14,%r14
.p2align 0x4,,0x7
loop_3100:
	cmpq 0x18(%rbp),%r14
	jnl L_486970
L_261626:
	movq 0x10(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r11
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r11,0x0(%r15,%r14,8)
	incq %r14
	jmp loop_3100
.p2align 0x4
L_486970:
L_261625:
	movq $0xB1B,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_486972:
L_261628:
	movq (globalObjptr+0x668)(%rip),%r15
	jmp L_261624
.p2align 0x4
L_486973:
L_261629:
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_486974:
L_261630:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_261631+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261631
.p2align 0x4
.long 0x45B
L_261631:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_261599
.p2align 0x4
L_486975:
L_261632:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_261633+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261633
.p2align 0x4
.long 0x45B
L_261633:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_261595
.p2align 0x4
L_486976:
L_261634:
	movq (globalObjptr+0x670)(%rip),%r14
	movq $0xB1B,0xFFFFFFFFFFFFFFF8(%r14)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl loop_3951
.hidden loop_3951
loop_3951:
L_261637:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_261638
L_261680:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_261681+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261681
.p2align 0x4
.long 0x494
L_261681:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_261638:
	movq 0x8(%rbp),%r15
	cmpq $0x1,%r15
	je L_486990
L_261639:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1067,%r14
	je L_486986
	cmpq $0x1068,%r14
	je L_486982
	cmpq $0x1069,%r14
	je L_486980
	cmpq $0x106A,%r14
	je L_486979
L_261640:
	movl 0x0(%rbp),%ecx
L_261641:
	incl %ecx
	jo L_486978
L_261643:
	movl %ecx,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_486978:
L_261642:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_486979:
L_261669:
	movl 0x0(%rbp),%ecx
	movq 0x8(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x0(%rbp)
	movq 0x0(%r14),%r15
L_261670:
	movl %ecx,0x10(%rbp)
	movq %r15,0x18(%rbp)
	addq $0x10,%rbp
	leaq (L_261671+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3951
.p2align 0x4
L_486980:
L_261661:
	movq 0x8(%rbp),%r14
	movq 0x0(%r14),%r15
	movl 0x0(%rbp),%ecx
L_261662:
	cmpq $0x1,%r15
	je L_486981
L_261663:
	movq 0x8(%r15),%r14
	movq %r14,0x0(%rbp)
	movq 0x0(%r15),%r15
L_261664:
	movl %ecx,0x10(%rbp)
	movq %r15,0x18(%rbp)
	addq $0x10,%rbp
	leaq (L_261665+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3951
.p2align 0x4
L_486981:
L_261668:
	movl %ecx,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_486982:
L_261652:
	movl 0x0(%rbp),%ecx
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x0(%rbp)
L_261653:
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x8(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_486985
L_261655:
	cmpl $0x0,%r13d
	jl L_486984
L_261656:
	movl $0x0,0xC(%rbp)
loop_3101:
	movl 0x8(%rbp),%r15d
	cmpl %r15d,0xC(%rbp)
	jl L_486983
L_261657:
	movl %ecx,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_486983:
L_261658:
	movl %ecx,0x18(%rbp)
	movslq 0xC(%rbp),%r15
	movq 0x0(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x20(%rbp)
	addq $0x18,%rbp
	leaq (L_261659+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3951
.p2align 0x4
L_486984:
L_261660:
	movq (globalObjptr+0x4F8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_486985:
L_261654:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_486986:
L_261644:
	movq 0x8(%rbp),%r14
	movq 0x0(%r14),%r15
	movl 0x0(%rbp),%ecx
L_261645:
	cmpq $0x1,%r15
	je L_486989
L_261646:
	movq 0x8(%r15),%r15
.p2align 0x4,,0x7
L_261647:
	incl %ecx
	jo L_261642
L_261648:
	cmpq $0x1,%r15
	je L_486987
L_261649:
	movq 0x8(%r15),%r15
	jmp L_261647
.p2align 0x4
L_486987:
L_261650:
	movl %ecx,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_486989:
L_261651:
	movl %ecx,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_486990:
L_261679:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4AF
L_261671:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movl 0x10(%rbp),%ecx
	movl %ecx,0x8(%rbp)
	movq 0x0(%rbp),%r15
	cmpq $0x1,%r15
	je L_486996
L_261672:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1067,%r14
	je L_486995
	cmpq $0x1068,%r14
	je L_486994
	cmpq $0x1069,%r14
	je L_486993
	cmpq $0x106A,%r14
	je L_486992
L_261673:
	jmp L_261641
.p2align 0x4
L_486992:
L_261677:
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_261670
.p2align 0x4
L_486993:
L_261676:
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r15
	jmp L_261662
.p2align 0x4
L_486994:
L_261675:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x0(%rbp)
	jmp L_261653
.p2align 0x4
L_486995:
L_261674:
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r15
	jmp L_261645
.p2align 0x4
L_486996:
L_261678:
	movl %ecx,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4AF
L_261665:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movl 0x10(%rbp),%ecx
	movl %ecx,0x8(%rbp)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_486997
L_261666:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_261664
.p2align 0x4
L_486997:
L_261667:
	movl %ecx,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x9A7
L_261659:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movl 0x18(%rbp),%ecx
	movl %ecx,0x10(%rbp)
	incl 0xC(%rbp)
	jmp loop_3101
.text
.p2align 0x4
.globl loop_3952
.hidden loop_3952
loop_3952:
L_261682:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_261683
L_261733:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_261734+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261734
.p2align 0x4
.long 0x524
L_261734:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_261683:
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_487012
L_261684:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1067,%r15
	je L_487007
	cmpq $0x1068,%r15
	je L_487003
	cmpq $0x1069,%r15
	je L_487001
	cmpq $0x106A,%r15
	je L_487000
L_261685:
	movq 0x0(%r14),%r15
L_261686:
	movq 0x8(%rbp),%r14
	movl 0x0(%r14),%r13d
	cmpl 0x10(%rbp),%r13d
	jnl L_486999
L_261689:
	movslq %r13d,%r11
	movq 0x18(%rbp),%r10
	cmpq 0xFFFFFFFFFFFFFFF0(%r10),%r11
	jnb L_486998
L_261692:
	movq %r10,%r9
	shrq $0x8,%r9
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r9,1)
	movq %r15,0x0(%r10,%r11,8)
	incl %r13d
	movl %r13d,0x0(%r14)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_486998:
L_261691:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_486999:
L_261688:
	movq (globalObjptr+0x1050)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_487000:
L_261721:
	movq 0x8(%r14),%r13
	movq %r13,0x20(%rbp)
	movq 0x0(%r14),%r15
L_261722:
	movq %r15,0x30(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x38(%rbp)
	movl 0x10(%rbp),%r15d
	movl %r15d,0x40(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x30,%rbp
	leaq (L_261723+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3952
.p2align 0x4
L_487001:
L_261713:
	movq 0x0(%r14),%r15
loop_3104:
	cmpq $0x1,%r15
	je L_487002
L_261714:
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r15
L_261715:
	movq %r15,0x30(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x38(%rbp)
	movl 0x10(%rbp),%r15d
	movl %r15d,0x40(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x30,%rbp
	leaq (L_261716+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3952
.p2align 0x4
L_487002:
L_261719:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_487003:
L_261704:
	movq 0x0(%r14),%r15
	movq %r15,0x20(%rbp)
L_261705:
	movq 0x20(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x14(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r14
	je L_487004
L_261706:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_487004:
L_261707:
	cmpl $0x0,0x14(%rbp)
	jl L_487006
L_261708:
	movl $0x0,0x28(%rbp)
loop_3103:
	movl 0x14(%rbp),%r15d
	cmpl %r15d,0x28(%rbp)
	jl L_487005
L_261709:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_487005:
L_261710:
	movslq 0x28(%rbp),%r15
	movq 0x20(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x38(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x40(%rbp)
	movl 0x10(%rbp),%r15d
	movl %r15d,0x48(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x38,%rbp
	leaq (L_261711+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3952
.p2align 0x4
L_487006:
L_261712:
	movq (globalObjptr+0x4F8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_487007:
L_261693:
	movq 0x0(%r14),%r15
loop_3102:
	cmpq $0x1,%r15
	je L_261702
L_261694:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
.p2align 0x4,,0x7
L_261695:
	movq 0x8(%rbp),%r13
	movl 0x0(%r13),%r11d
	cmpl 0x10(%rbp),%r11d
	jnl L_261688
L_261697:
	movslq %r11d,%r10
	movq 0x18(%rbp),%r9
	cmpq 0xFFFFFFFFFFFFFFF0(%r9),%r10
	jnb L_261691
L_261699:
	movq %r9,%r8
	shrq $0x8,%r8
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r8,1)
	movq %r14,0x0(%r9,%r10,8)
	incl %r11d
	movl %r11d,0x0(%r13)
	cmpq $0x1,%r15
	je L_487008
L_261700:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_261695
.p2align 0x4
L_487008:
L_261702:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_487012:
L_261731:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x5FF
L_261723:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_261731
L_261724:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1067,%r15
	je L_487017
	cmpq $0x1068,%r15
	je L_487016
	cmpq $0x1069,%r15
	je L_487015
	cmpq $0x106A,%r15
	je L_487014
L_261725:
	movq 0x0(%r14),%r15
	jmp L_261686
.p2align 0x4
L_487014:
L_261729:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	jmp L_261722
.p2align 0x4
L_487015:
L_261728:
	movq 0x0(%r14),%r15
	jmp loop_3104
.p2align 0x4
L_487016:
L_261727:
	movq 0x0(%r14),%r14
	movq %r14,0x20(%rbp)
	jmp L_261705
.p2align 0x4
L_487017:
L_261726:
	movq 0x0(%r14),%r15
	jmp loop_3102
.p2align 0x4
.long 0x5FF
L_261716:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_261719
L_261717:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	jmp L_261715
.p2align 0x4
.long 0x3C5A
L_261711:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	incl 0x28(%rbp)
	jmp loop_3103
.text
.p2align 0x4
.globl x_2019
.hidden x_2019
x_2019:
L_261735:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_261736
L_261882:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_261883+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261883
.p2align 0x4
.long 0x45B
L_261883:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_261736:
	movq 0x10(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r11
	movq %r11,0x28(%rbp)
	cmpq $0x1,%r13
	je L_487020
L_261737:
	movq 0x8(%r13),%r15
	movq %r15,0x10(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x30(%rbp)
	movq 0x8(%rbp),%r14
	movq 0x18(%r14),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x48(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_261738+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_23
.p2align 0x4
L_487020:
L_261861:
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x40(%rbp)
	movq 0x28(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_261862+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_23
.p2align 0x4
.long 0x10F4
L_261738:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_261739
L_261859:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_261860+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261860
.p2align 0x4
.long 0x646
L_261860:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_261739:
	movq 0x8(%rbp),%r14
	movq 0x0(%r14),%r13
	cmpq $0x1,%r13
	je L_261746
L_261740:
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r15,0x38(%rbp)
	movq %r13,%r15
.p2align 0x4,,0x7
L_261741:
	movq 0x38(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x106D,%r13
	je L_487045
L_261742:
	cmpq $0x1,%r15
	je L_487022
L_261743:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r14,0x38(%rbp)
	jmp L_261741
.p2align 0x4
L_487022:
L_261744:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_261746
L_261852:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_261853+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261853
.p2align 0x4
.long 0x646
L_261853:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_261746:
	movq $0x1E7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x20DB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq 0x8(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x20E5,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r10,0x0(%r13)
x_871:
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_487041
L_261747:
	movq 0x0(%r14),%r13
	movq 0x8(%r13),%r15
	movq 0x18(%r13),%r11
	movq 0x8(%r15),%r14
	movq $0x1BD3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r14,1)
	movq %r13,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_487023
L_261748:
	movq 0x8(%r14),%r13
	movq %r13,0x8(%rbp)
	movq 0x0(%r14),%r14
	movq %r14,0x10(%rbp)
	movq $0x1,0x38(%rbp)
	movq %r11,%r15
L_261749:
	movq %r15,0x50(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_261750+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peekStrid_0
.p2align 0x4
L_487023:
L_261850:
	movq %r11,%r15
L_261755:
	movq 0x0(%r15),%r14
	movq %r14,0x8(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%ebx
	movslq %ebx,%r14
	cmpq %r14,%r15
	jne L_487040
L_261757:
	decl %ebx
	jo L_261758
L_261759:
	xorl %ecx,%ecx
.p2align 0x4,,0x7
loop_3105:
	cmpl %ecx,%ebx
	jl L_487038
L_261760:
	movl %ebx,%esp
	addl %ecx,%esp
	movl %ecx,(localWord32+0x4)(%rip)
	jo L_261758
L_261761:
	movl %esp,%esi
	shrl $0x1F,%esi
	addl %esi,%esp
	sarl $0x1,%esp
	movslq %esp,%rsi
	movq %rsi,0x10(%rbp)
	cmpq %r15,%rsi
	jnb L_487036
L_261763:
	movq 0x28(%rbp),%rdi
	movq 0x8(%rdi),%rdx
	movq 0x10(%rdx),%r8
	movq 0x8(%rbp),%rdi
	movq 0x0(%rdi,%rsi,8),%rdx
	movq 0x18(%rdx),%rax
	movq 0x8(%rax),%r14
	movq 0x10(%r14),%r9
	movq 0xFFFFFFFFFFFFFFF0(%r8),%r11
	movq 0xFFFFFFFFFFFFFFF0(%r9),%r10
	xorq %r13,%r13
	xorq %r14,%r14
	movl %esp,%ecx
.p2align 0x4,,0x7
loop_3106:
	cmpq %r11,%r14
	jl L_487035
L_261764:
	movl $0x1,%esp
	xchgl %esp,%ecx
	movl %esp,(localWord32+0xC)(%rip)
L_261765:
	cmpq %r10,%r13
	jnl L_261767
L_261785:
	testl %ecx,%ecx
	jnz L_487033
L_261786:
	movb 0x0(%r8,%r14,1),%spl
	movb 0x0(%r9,%r13,1),%sil
	cmpb %sil,%spl
	jb L_487031
L_261787:
	cmpb %spl,%sil
	jb L_487024
L_261788:
	incq %r14
	incq %r13
	movl (localWord32+0xC)(%rip),%ecx
	jmp loop_3106
.p2align 0x4
L_487024:
L_261767:
	cmpq %r8,%r9
	je L_487029
L_261768:
	cmpq %r11,%r10
	jne L_261770
L_261772:
	xorq %r14,%r14
.p2align 0x4,,0x7
vectorEqualLoop_205:
	cmpq %r14,%r11
	je L_487026
L_261773:
	movb 0x0(%r8,%r14,1),%r13b
	cmpb %r13b,0x0(%r9,%r14,1)
	jne L_487025
L_261775:
	incq %r14
	jmp vectorEqualLoop_205
.p2align 0x4
L_487025:
L_261770:
	movl (localWord32+0xC)(%rip),%r14d
	incl %r14d
	jno loop_3954
L_261758:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
loop_3954:
	movl %r14d,%ecx
	jmp loop_3105
.p2align 0x4
L_487026:
L_261776:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_261778
L_261779:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_261780+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261780
.p2align 0x4
.long 0xA2B
L_261780:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_261778:
	movq 0x8(%rbp),%r15
	movq 0x10(%rbp),%r14
	movq 0x0(%r15,%r14,8),%r13
	movq 0x8(%r13),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r14),%r15
	movq $0x24D3,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x8(%r11)
	addq $0x18,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%r11)
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r15,1)
	movq %r11,0x0(%r14)
	movq 0x10(%r13),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_487029:
L_261781:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_261778
L_261783:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_261784+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261784
.p2align 0x4
.long 0xA2B
L_261784:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_261778
.p2align 0x4
L_487031:
	movl (localWord32+0x4)(%rip),%ecx
L_261791:
	movl (localWord32+0xC)(%rip),%ebx
	decl %ebx
	jo L_261758
	jmp loop_3105
.p2align 0x4
L_487033:
	movl (localWord32+0x4)(%rip),%ecx
	jmp L_261791
.p2align 0x4
L_487035:
L_261794:
	xorl %esp,%esp
	xchgl %esp,%ecx
	movl %esp,(localWord32+0xC)(%rip)
	jmp L_261765
.p2align 0x4
L_487036:
L_261762:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_487038:
L_261796:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_261797+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_31
.p2align 0x4
L_487040:
L_261756:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_487041:
L_261851:
	movq $0x1BD3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
L_261810:
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x8(%rbp)
	cmpq $0x1,%r15
	je L_487042
L_261811:
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%r15),%r15
	movq $0x1,0x28(%rbp)
L_261812:
	movq 0x8(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_261813+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_487042:
L_261845:
	movq $0x1,%r15
	xorl %ecx,%ecx
L_261829:
	testl %ecx,%ecx
	jz L_487043
L_261830:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
L_261831:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x28(%rbp)
	movq (globalObjptr+0xA460)(%rip),%r15
	movq %r15,0x30(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x28,%rbp
	leaq (L_261832+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unbound_0
.p2align 0x4
L_487043:
L_261836:
	movq $0x1,%r15
	xorl %ecx,%ecx
	jmp L_261831
.p2align 0x4
L_487045:
L_261854:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_261855
L_261856:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_261857+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261857
.p2align 0x4
.long 0x1EE2
L_261857:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_261855:
	movq 0x38(%rbp),%r14
	movq 0x0(%r14),%r15
	jmp x_871
.p2align 0x4
.long 0x465
L_261862:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_261863
L_261880:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_261881+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261881
.p2align 0x4
.long 0x45A
L_261881:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_261863:
	movq 0x8(%rbp),%r14
	movq 0x0(%r14),%r13
	cmpq $0x1,%r13
	je L_261870
L_261864:
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r15,0x10(%rbp)
	movq %r13,%r15
.p2align 0x4,,0x7
L_261865:
	movq 0x10(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x106B,%r13
	je L_487052
L_261866:
	cmpq $0x1,%r15
	je L_487049
L_261867:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r14,0x10(%rbp)
	jmp L_261865
.p2align 0x4
L_487049:
L_261868:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_261870
L_261873:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_261874+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261874
.p2align 0x4
.long 0x45A
L_261874:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_261870:
	movq $0x15F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x20D7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq 0x8(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x20E5,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r10,0x0(%r13)
x_872:
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_261796
L_261871:
	movq 0x0(%r14),%r15
	movq 0x18(%r15),%r13
	movq %r13,0x0(%rbp)
	movq 0x8(%r15),%r13
	movq 0x8(%r13),%r11
	movq 0x0(%r11),%r15
	movq $0x24D3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r11,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r14,0x0(%r11)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_487052:
L_261875:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_261876
L_261877:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_261878+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261878
.p2align 0x4
.long 0xBEC
L_261878:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_261876:
	movq 0x10(%rbp),%r14
	movq 0x0(%r14),%r15
	jmp x_872
.p2align 0x4
.long 0x636
L_261750:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_261751
L_261848:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_261849+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261849
.p2align 0x4
.long 0x63B
L_261849:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_261751:
	movq 0x40(%rbp),%r15
	cmpq $0x1,%r15
	je L_487057
L_261752:
	movq $0x1BD3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x38(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x8(%rbp),%r13
	cmpq $0x1,%r13
	je L_261755
L_261753:
	movq %r14,0x38(%rbp)
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movq %r13,0x8(%rbp)
	movq %r14,0x10(%rbp)
	jmp L_261749
.p2align 0x4
L_487057:
L_261805:
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%rbp)
	movq $0x1,0x28(%rbp)
.p2align 0x4,,0x7
L_261806:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_487059
.p2align 0x4,,0x7
L_261807:
	movq $0x1BD3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_487058
L_261808:
	movq %r15,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x10(%rbp)
	jmp L_261806
.p2align 0x4
L_487058:
L_261809:
	movq $0x1BD3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x30(%rbp),%r11
	movq %r11,0x0(%r13)
	movq %r13,%r15
	jmp L_261810
.p2align 0x4
L_487059:
L_261846:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_261847+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261847
.p2align 0x4
.long 0x646
L_261847:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_261807
.p2align 0x4
.long 0x5FF
L_261797:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x10(%rbp)
	movl 0x38(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_261798
L_261803:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_261804+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261804
.p2align 0x4
.long 0x764
L_261804:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_261798:
	movq $0xC3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x28(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x28(%rbp)
	movq (globalObjptr+0xAC28)(%rip),%r15
	movq %r15,0x30(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x28,%rbp
	leaq (L_261799+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unbound_0
.p2align 0x4
.long 0x4E3
L_261813:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_261814
L_261843:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_261844+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261844
.p2align 0x4
.long 0x4F0
L_261844:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_261814:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_487062
L_261815:
	movq %r15,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	jmp L_261812
.p2align 0x4
L_487062:
L_261816:
	movq 0x28(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq $0x1,0x30(%rbp)
.p2align 0x4,,0x7
L_261817:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_487064
.p2align 0x4,,0x7
L_261818:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_487063
L_261819:
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x28(%rbp)
	jmp L_261817
.p2align 0x4
L_487063:
L_261820:
	movq (globalObjptr+0xA050)(%rip),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_261821+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_487064:
L_261841:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_261842+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261842
.p2align 0x4
.long 0x4F0
L_261842:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_261818
.p2align 0x4
.long 0x48F
L_261832:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_261833
L_261834:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_261835+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261835
.p2align 0x4
.long 0x27
L_261835:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_261833:
	movq $0x5C9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq $0x1,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x48F
L_261799:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_261800
L_261801:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_261802+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261802
.p2align 0x4
.long 0x27
L_261802:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_261800:
	movq $0x5C9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq $0x1,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x990
L_261821:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x30(%rbp),%r14
	movq %r14,0x38(%rbp)
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_261822+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3787
.p2align 0x4
.long 0x679
L_261822:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_261823
L_261839:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_261840+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261840
.p2align 0x4
.long 0x637
L_261840:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_261823:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x30(%rbp)
	addq $0x18,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%r13)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_261824:
	addl 0x0(%r15),%ecx
	movl %ecx,0x10(%rbp)
	jo L_261758
L_261825:
	cmpq $0x1,%r14
	je L_487068
L_261826:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_261824
.p2align 0x4
L_487068:
L_261827:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_261828
L_261837:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_261838+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261838
.p2align 0x4
.long 0x991
L_261838:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_261828:
	movq 0x30(%rbp),%r15
	movl 0x10(%rbp),%ecx
	jmp L_261829
.text
.p2align 0x4
.globl approximatePrefix_0
.hidden approximatePrefix_0
approximatePrefix_0:
L_261884:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_261885
L_261906:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_261907+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261907
.p2align 0x4
.long 0x451
L_261907:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_261885:
	movq $0x1,0x8(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (rev_364+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x1
rev_364:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_487075
L_261886:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_261887:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_487074
.p2align 0x4,,0x7
L_261888:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_487073
L_261889:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_261887
.p2align 0x4
L_487073:
L_261891:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_261892+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_487074:
L_261903:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_261904+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261904
.p2align 0x4
.long 0x45B
L_261904:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_261888
.p2align 0x4
L_487075:
L_261905:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_261891
.p2align 0x4
.long 0x1
L_261892:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_487077
L_261894:
	cmpl $0xF,%r13d
	jg L_487076
L_261895:
L_261896:
	movq %r15,0x0(%rbp)
	jmp str_3
.p2align 0x4
L_487076:
L_261897:
	movq $0xA,%r14
	shlq $0x1,%r14
	orq $0x1,%r14
	movq %r14,0x8(%rbp)
	movl $0x0,0x10(%rbp)
	movq %r15,0x18(%rbp)
	addq $0x8,%rbp
	leaq (L_261898+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp extract_0
.p2align 0x4
L_487077:
L_261893:
	movq (globalObjptr+0x4D8)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_261898:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_261899
L_261901:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_261902+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261902
.p2align 0x4
.long 0x451
L_261902:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_261899:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x4F90)(%rip),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_261900+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x1
L_261900:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp L_261896
.text
.p2align 0x4
.globl x_2020
.hidden x_2020
x_2020:
L_261908:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_261940
L_261909:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_487082
L_261910:
	movq 0x8(%rbp),%r13
	movq 0x38(%r13),%r11
	movq %r11,0x10(%rbp)
	movq 0x30(%r13),%r11
	movq %r11,0x18(%rbp)
	movq 0x28(%r13),%r15
	movq 0x20(%r13),%r14
	movq 0x18(%r13),%r11
	movq 0x10(%r13),%r10
	movq 0x8(%r13),%r9
	movq 0x0(%r13),%r8
	movq $0x2855,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r8,0x0(%r13)
	addq $0x18,%r12
	movq $0x1,0x8(%r13)
	movq $0x2855,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r9,0x0(%r8)
	movq %r13,0x8(%r8)
	addq $0x18,%r12
	movq $0x2855,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r10,0x0(%r13)
	movq %r8,0x8(%r13)
	addq $0x18,%r12
	movq $0x2855,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r11,0x0(%r10)
	movq %r13,0x8(%r10)
	addq $0x18,%r12
	movq $0x2855,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r10,0x8(%r13)
	addq $0x18,%r12
	movq %r13,%r14
.p2align 0x4,,0x7
L_261911:
	movq 0x0(%rbp),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x8(%rbp)
	movq 0x8(%r15),%r13
	movq 0x8(%r13),%r10
	cmpq %r10,0x8(%r11)
	je L_487080
L_261912:
	cmpq $0x1,%r14
	je L_487079
L_261913:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_261911
.p2align 0x4
L_487079:
L_261914:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_487080:
L_261915:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_261916
L_261938:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_261939+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261939
.p2align 0x4
.long 0x4AE
L_261939:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_261916:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x13C8)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x109A0)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_261917+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_487082:
L_261940:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_261941+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261941
.p2align 0x4
.long 0x45F
L_261941:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_261910
.p2align 0x4
.long 0x517
L_261917:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_261918+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x517
L_261918:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_261919+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x8A9
L_261919:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_261920
L_261936:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_261937+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261937
.p2align 0x4
.long 0x51F
L_261937:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_261920:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x30(%rbp)
	addq $0x18,%r12
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_261921:
	addl 0x0(%r15),%ecx
	movl %ecx,0x18(%rbp)
	jo L_261922
L_261923:
	cmpq $0x1,%r14
	je L_487084
L_261924:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_261921
.p2align 0x4
L_487084:
L_261925:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_261926
L_261934:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_261935+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261935
.p2align 0x4
.long 0x43E5
L_261935:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_261926:
	movl 0x18(%rbp),%ecx
	testl %ecx,%ecx
	jz L_487086
L_261927:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
L_261928:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_487085
L_261929:
	movl %r13d,0x0(%r15)
	movq (globalObjptr+0x9D0)(%rip),%r15
	movq %r15,0x8(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x20(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq %r14,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_261930+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_487085:
L_261922:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_487086:
L_261933:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_261928
.p2align 0x4
.long 0x1
L_261930:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq (globalObjptr+0x1610)(%rip),%r15
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_487090
L_261931:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_487090:
L_261932:
	movq (globalObjptr+0x1618)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl make_1
.hidden make_1
make_1:
L_261942:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_262040
L_261943:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_487116
L_261944:
	movq 0x88(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq %r14,0x90(%rbp)
	movl %r14d,%r13d
	movl %r13d,0x4(%rbp)
	movslq %r13d,%r11
	movq %r11,0x98(%rbp)
	cmpq %r11,%r14
	jne L_261946
L_261947:
	movl 0x0(%rbp),%r14d
	cmpl %r13d,%r14d
	je L_487092
L_261948:
	incl %r14d
	jo L_487091
L_261950:
	movl %r14d,0xA0(%rbp)
	movq 0x8(%rbp),%r14
	movq %r14,0xA8(%rbp)
	movq 0x10(%rbp),%r14
	movq %r14,0xB0(%rbp)
	movq 0x18(%rbp),%r14
	movq %r14,0xB8(%rbp)
	movq 0x20(%rbp),%r14
	movq %r14,0xC0(%rbp)
	movq 0x28(%rbp),%r14
	movq %r14,0xC8(%rbp)
	movl 0x30(%rbp),%r14d
	movl %r14d,0xD0(%rbp)
	movq 0x38(%rbp),%r14
	movq %r14,0xD8(%rbp)
	movq 0x40(%rbp),%r14
	movq %r14,0xE0(%rbp)
	movq 0x48(%rbp),%r14
	movq %r14,0xE8(%rbp)
	movq 0x50(%rbp),%r14
	movq %r14,0xF0(%rbp)
	movq 0x58(%rbp),%r14
	movq %r14,0xF8(%rbp)
	movq 0x60(%rbp),%r14
	movq %r14,0x100(%rbp)
	movq 0x68(%rbp),%r14
	movq %r14,0x108(%rbp)
	movq 0x70(%rbp),%r14
	movq %r14,0x110(%rbp)
	movq 0x78(%rbp),%r14
	movq %r14,0x118(%rbp)
	movq 0x80(%rbp),%r14
	movq %r14,0x120(%rbp)
	movq %r15,0x128(%rbp)
	addq $0xA0,%rbp
	leaq (L_261951+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp make_1
.p2align 0x4
L_487091:
L_261949:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_487092:
L_261962:
	movq 0x80(%rbp),%r11
	movq 0x10(%r11),%r10
	movb 0x0(%r10),%r13b
	movb %r13b,0x8(%rbp)
	movq 0x78(%rbp),%r11
	movq 0x10(%r11),%r10
	movb 0x0(%r10),%r13b
	movb %r13b,0x9(%rbp)
	movq 0x70(%rbp),%r11
	movq 0x10(%r11),%r10
	movb 0x0(%r10),%r13b
	movb %r13b,0xA(%rbp)
	movq 0x68(%rbp),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r11
	movl %r11d,%r10d
	movslq %r10d,%r9
	movq %r9,0x90(%rbp)
	cmpq %r9,%r11
	jne L_261946
L_261964:
	testq %r9,%r9
	jz L_487113
L_261965:
	cmpq $0x7FFFFFFF,%r9
	ja L_262020
L_261966:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_261967
L_262036:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r13d
	movl %r13d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r13
	movq %r13,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_262037+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_262037
.p2align 0x4
.long 0x43E8
L_262037:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_261967:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1629,%rcx
	movq 0x90(%rbp),%rdx
	movq $0x10,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_261968+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261968
.p2align 0x4
.long 0x43E8
L_261968:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq %rax,0x70(%rbp)
L_261969:
	movq $0x0,0x78(%rbp)
loop_3107:
	movq 0x90(%rbp),%r15
	cmpq %r15,0x78(%rbp)
	jl L_487109
L_261970:
	movq 0x70(%rbp),%r15
	movq $0x12C5,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x58(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_261946
L_261972:
	cmpl 0x4(%rbp),%r13d
	je L_487093
L_261973:
	movq (globalObjptr+0x4E0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_487093:
L_261974:
	movq 0x98(%rbp),%rdx
	testq %rdx,%rdx
	jz L_487107
L_261975:
	cmpq $0x7FFFFFFF,%rdx
	ja L_487106
L_261976:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14CF,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_261977+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261977
.p2align 0x4
.long 0x43E9
L_261977:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq %rax,0x60(%rbp)
L_261978:
	movq $0x0,0x68(%rbp)
.p2align 0x4,,0x7
loop_3108:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_487105
.p2align 0x4,,0x7
L_261979:
	movq 0x68(%rbp),%r15
	cmpq 0x98(%rbp),%r15
	jnl L_487094
L_262016:
	movl %r15d,%r14d
	movslq %r14d,%r13
	movq 0x88(%rbp),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq 0x58(%rbp),%r14
	movq 0x0(%r14,%r13,8),%r10
	movq $0x4795,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r11,0x0(%r14)
	addq $0x10,%r12
	movq $0x1D11,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x18,%r12
	movq $0x2,0x8(%r13)
	movq $0x16D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r10,0x0(%r14)
	movq %r13,0x8(%r14)
	addq $0x18,%r12
	movq 0x60(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r14,0x0(%r13,%r15,8)
	incq %r15
	movq %r15,0x68(%rbp)
	jmp loop_3108
.p2align 0x4
L_487094:
L_261980:
	movq 0x60(%rbp),%r14
	movq $0x18B,0xFFFFFFFFFFFFFFF8(%r14)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r13,%r10
	jne L_261946
L_261982:
	cmpl $0x1,%r11d
	je L_487095
L_261983:
	movl %r11d,0x88(%rbp)
	movq $0x2481,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq %r14,0x0(%r11)
	movq $0x1D15,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r10,0x58(%rbp)
	movq %r11,0x0(%r10)
	addq $0x10,%r12
	movq $0x3EB7,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq %r14,0x0(%r11)
	movq %r11,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_261984+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_1
.p2align 0x4
L_487095:
L_262013:
	cmpq $0x0,%r13
	jna L_261954
L_262015:
	movq 0x0(%r14),%r13
	xchgq %r13,%r15
L_261987:
	movq 0x70(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r13,%r10
	jne L_487102
L_261989:
	testl %r11d,%r11d
	jz L_487101
L_261990:
	movq $0x47AD,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq 0x48(%rbp),%r10
	movq %r10,0x0(%r11)
	movq $0x1D29,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r11,0x10(%r10)
	movq %r15,0x30(%r10)
	addq $0x40,%r12
	movb $0x0,%r11b
	movzbl %r11b,%r9d
	movzbl 0x8(%rbp),%r11d
	shll $0x8,%r11d
	orl %r11d,%r9d
	movzbl 0x9(%rbp),%r11d
	shll $0x10,%r11d
	orl %r11d,%r9d
	movzbl 0xA(%rbp),%r11d
	shll $0x18,%r11d
	orl %r11d,%r9d
	movl %r9d,0x0(%r10)
	movl $0x0,0x4(%r10)
	movq (globalObjptr+0x10690)(%rip),%r11
	movq %r11,0x8(%r10)
	movq 0x40(%rbp),%r11
	movq %r11,0x18(%r10)
	movq 0x38(%rbp),%r11
	movq %r11,0x20(%r10)
	movq %r14,0x28(%r10)
	cmpq $0x0,%r13
	jna L_487100
L_261992:
	movq 0x10(%r14),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x38(%rbp)
	movq $0x16D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x48(%rbp)
	addq $0x18,%r12
	movq %r11,0x0(%r14)
	movq %r10,0x8(%r14)
	movl 0x30(%rbp),%r14d
	testl %r14d,%r14d
	jz L_487099
L_261995:
	movq 0x28(%rbp),%r14
	movl 0x0(%r14),%r13d
	testl %r13d,%r13d
	jnz L_487098
L_261996:
	movq 0x20(%rbp),%r14
	cmpb $0x2,0x0(%r14)
	jne L_487097
L_261998:
	movq 0x18(%rbp),%r14
	movq 0x0(%r14),%r13
	cmpq $0x1,%r13
	je L_487096
L_261999:
	movq 0x0(%r13),%r13
	movq %r13,%r15
L_262000:
	movq $0x1C81,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x18(%rbp)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x40(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x10(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	addq $0x58,%rbp
	leaq (L_262001+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_487096:
L_262008:
	movq $0x1,%r15
	jmp L_262000
.p2align 0x4
L_487097:
	movq %r10,%r15
L_261994:
	movq %r15,0x8(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_487098:
	movq %r10,%r15
	jmp L_261994
.p2align 0x4
L_487099:
	movq %r10,%r15
	jmp L_261994
.p2align 0x4
L_487100:
L_261954:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_487101:
L_262010:
	movq (globalObjptr+0x1C18)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_487102:
L_261946:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_487105:
L_262017:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_262018+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_262018
.p2align 0x4
.long 0x43EE
L_262018:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	jmp L_261979
.p2align 0x4
L_487106:
L_262020:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_487107:
L_262021:
	movq (globalObjptr+0x6D60)(%rip),%r15
	movq %r15,0x60(%rbp)
	jmp L_261978
.p2align 0x4
L_487109:
L_262022:
	movq 0x78(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq %r15,%r14
	movq %r15,%r13
	salq $0x5,%r14
	movq 0x68(%rbp),%r11
	movq 0x0(%r11,%r14,1),%r10
	salq $0x5,%r13
	movq 0x8(%r11,%r13,1),%r14
	movq %r14,0x80(%rbp)
	salq $0x5,%r15
	movq 0x18(%r11,%r15,1),%r14
	movq %r14,0xA0(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r10),%r15
	movl %r15d,%r14d
	movslq %r14d,%r13
	cmpq %r13,%r15
	jne L_261946
L_262024:
	movl %r14d,0xB8(%rbp)
	movq $0x36FD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r10,0x0(%r15)
	movq %r15,0xB0(%rbp)
	addq $0x10,%r12
	addq $0xB0,%rbp
	leaq (L_262025+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_44
.p2align 0x4
L_487113:
L_262039:
	movq (globalObjptr+0x6D58)(%rip),%r13
	movq %r13,0x70(%rbp)
	jmp L_261969
.p2align 0x4
L_487116:
L_262040:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_262041+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_262041
.p2align 0x4
.long 0x19B4
L_262041:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	jmp L_261944
.p2align 0x4
.long 0x43E6
L_261951:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0xA8(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_261952
L_261960:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_261961+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_261961
.p2align 0x4
.long 0x43E7
L_261961:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_261952:
	movq $0x16D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r13
	movq %r13,0x8(%r15)
	movslq 0x0(%rbp),%r13
	movq 0x58(%rbp),%r11
	cmpq 0xFFFFFFFFFFFFFFF0(%r11),%r13
	jnb L_261954
L_261955:
	movq 0x0(%r11,%r13,8),%r10
	cmpq 0x90(%rbp),%r13
	jnb L_261954
L_261957:
	movq 0x88(%rbp),%r11
	movq 0x0(%r11,%r13,8),%r9
	movq $0x1D1F,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x18(%rbp)
	movq %r9,0x8(%r13)
	movq %r15,0x18(%r13)
	addq $0x28,%r12
	movl $0x1,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r10,0x10(%r13)
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x20(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x28(%rbp)
	movq $0x3EC1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r10,0x8(%r15)
	addq $0x18,%r12
	movq %r14,0x0(%r15)
	movq %r15,0x38(%rbp)
	movl $0x2,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_261958+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_1
.p2align 0x4
.long 0x43EA
L_261984:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq %r15,0x80(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_261985+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tuple_9
.p2align 0x4
.long 0xC1B
L_262001:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movl 0x58(%rbp),%r15d
	movl %r15d,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_262002
L_262006:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_262007+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_262007
.p2align 0x4
.long 0x43EC
L_262007:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_262002:
	movq $0x13,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x2F5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x20,%r12
	movl 0x30(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x18(%rbp),%r13
	movq %r13,0x10(%r14)
	movq 0x20(%rbp),%r13
	cmpb $0x4,0x0(%r13)
	jne L_487121
L_262005:
	movq 0x28(%rbp),%r13
	movq 0x0(%r13),%r15
	movq $0x1C7F,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x8(%r11)
	addq $0x18,%r12
	movq %r14,0x0(%r11)
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r15,1)
	movq %r11,0x0(%r13)
	movq %r14,%r15
L_262004:
	movq $0x1D23,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x48(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_487121:
	movq %r14,%r15
	jmp L_262004
.p2align 0x4
.long 0x43EF
L_262025:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movq 0xB0(%rbp),%r15
	movq %r15,0xA8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_262026
L_262034:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_262035+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_262035
.p2align 0x4
.long 0x43F2
L_262035:
	addq $0xFFFFFFFFFFFFFF48,%rbp
L_262026:
	movq $0x448F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x80(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x2097,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0xB0(%rbp)
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x1D05,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xB8(%rbp)
	addq $0x10,%r12
	movq 0xA8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_261946
L_262028:
	movl %r13d,0xD0(%rbp)
	movq $0x3EDD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r14,0x0(%r15)
	movq %r15,0xC8(%rbp)
	addq $0xC8,%rbp
	leaq (L_262029+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_1
.p2align 0x4
.long 0x71D
L_261958:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq 0x20(%rbp),%r14
	movq %r14,0x38(%rbp)
	movq 0x28(%rbp),%r14
	movq %r15,0x28(%rbp)
	movq %r14,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_261959+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp con_2
.p2align 0x4
.long 0x43EB
L_261985:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_261986
L_262011:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_262012+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_262012
.p2align 0x4
.long 0x43ED
L_262012:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_261986:
	movq $0x16D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_261987
.p2align 0x4
.long 0x43F0
L_262029:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq %r15,0xC8(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC8,%rbp
	leaq (L_262030+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tuple_9
.p2align 0x4
.long 0x48F
L_261959:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq %r15,0x0(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x43F0
L_262030:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0x80(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_262031
L_262032:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_262033+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_262033
.p2align 0x4
.long 0x43F1
L_262033:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_262031:
	movq $0x605,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x80(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xB8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x78(%rbp),%r13
	movq %r13,%r10
	imulq $0x18,%r10
	movq %r15,0x0(%r14,%r10,1)
	movq %r14,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,%r15
	imulq $0x18,%r15
	movq 0xB0(%rbp),%r10
	movq %r10,0x8(%r14,%r15,1)
	movq %r14,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,%r15
	imulq $0x18,%r15
	movq 0xA0(%rbp),%r11
	movq %r11,0x10(%r14,%r15,1)
	incq %r13
	movq %r13,0x78(%rbp)
	jmp loop_3107
.text
.p2align 0x4
.globl elabDatBind_0
.hidden elabDatBind_0
elabDatBind_0:
L_262042:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_262357
L_262043:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_487159
L_262044:
	movq 0x10(%rbp),%r15
	movq 0x58(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x50(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x48(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x40(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x78(%rbp)
	movq 0x8(%r14),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movl %r15d,%r14d
	movslq %r14d,%r11
	movq %r11,0x88(%rbp)
	cmpq %r11,%r15
	movq %r13,0x80(%rbp)
	jne L_262046
L_262047:
	testq %r11,%r11
	jz L_487157
L_262048:
	cmpq $0x7FFFFFFF,%r11
	ja L_262165
L_262049:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_262050
L_262353:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_262354+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_262354
.p2align 0x4
.long 0x43F3
L_262354:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_262050:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x161D,%rcx
	movq 0x88(%rbp),%rdx
	movq $0x70,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_262051+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_262051
.p2align 0x4
.long 0x43F3
L_262051:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq %rax,0x8(%rbp)
L_262052:
	movq $0x0,0x10(%rbp)
loop_3109:
	movq 0x88(%rbp),%r15
	cmpq %r15,0x10(%rbp)
	jl L_487151
L_262053:
	movq 0x8(%rbp),%r15
	movq $0x1847,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x40(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x78(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	movq %r11,0x88(%rbp)
	movl %r13d,0x80(%rbp)
	cmpq %r15,%r11
	movq %r14,0x38(%rbp)
	jne L_262046
L_262055:
	testq %r11,%r11
	jz L_487149
L_262056:
	cmpq $0x7FFFFFFF,%r11
	ja L_262165
L_262057:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_262058
L_262274:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_262275+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_262275
.p2align 0x4
.long 0x43F4
L_262275:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_262058:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x161B,%rcx
	movq 0x88(%rbp),%rdx
	movq $0x70,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_262059+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_262059
.p2align 0x4
.long 0x43F4
L_262059:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq %rax,0x40(%rbp)
L_262060:
	movq $0x0,0x78(%rbp)
loop_3110:
	movq 0x88(%rbp),%r15
	cmpq %r15,0x78(%rbp)
	jl L_487146
L_262061:
	movq 0x40(%rbp),%r15
	movq $0x183D,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%ecx
	movslq %ecx,%r13
	cmpq %r14,%r13
	jne L_262046
L_262063:
	movl 0x80(%rbp),%r15d
	cmpl %r15d,%ecx
	jne L_262065
L_262066:
	cmpl $0x0,%r15d
	jl L_487143
L_262067:
	xorl %ecx,%ecx
loop_3111:
	cmpl 0x80(%rbp),%ecx
	jnl L_487127
L_262254:
	movl %ecx,%r15d
	incl %r15d
	movl %r15d,0x10(%rbp)
	movslq %ecx,%r15
	movq 0x40(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x98(%rbp)
	movq 0x38(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x8(%r13),%r11
	movq %r11,0xA0(%rbp)
	movq (globalObjptr+0x4AF0)(%rip),%r15
	movq %r15,0x90(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0xA8(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0xB0(%rbp)
	addq $0x90,%rbp
	leaq (L_262255+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp extendTycon_0
.p2align 0x4
L_487127:
L_262068:
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	movq %r11,0x10(%rbp)
	cmpq %r11,%r14
	jne L_262046
L_262070:
	testq %r11,%r11
	jz L_487141
L_262071:
	cmpq $0x7FFFFFFF,%r11
	ja L_262165
L_262072:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_262073
L_262250:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_262251+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_262251
.p2align 0x4
.long 0x43F5
L_262251:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_262073:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x161F,%rcx
	movq 0x10(%rbp),%rdx
	movq $0x18,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_262074+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_262074
.p2align 0x4
.long 0x43F5
L_262074:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq %rax,0x18(%rbp)
L_262075:
	movq $0x0,0x30(%rbp)
loop_3112:
	movq 0x10(%rbp),%r15
	cmpq %r15,0x30(%rbp)
	jl L_487137
L_262076:
	movq 0x18(%rbp),%r15
	movq $0x1851,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x30(%rbp)
	cmpq %rdx,%r14
	jne L_262046
L_262078:
	cmpq $0x0,%rdx
	sete %bl
	movzbl %bl,%ebx
	movl %ebx,0x38(%rbp)
	je L_487135
L_262079:
	cmpq $0x7FFFFFFF,%rdx
	ja L_262165
L_262080:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x15BF,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_262081+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_262081
.p2align 0x4
.long 0x43F6
L_262081:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq %rax,0x40(%rbp)
L_262082:
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3113:
	cmpq 0x30(%rbp),%r15
	jnl L_487128
L_262167:
	movl %r15d,%r14d
	movq %r15,%r13
	movq %r15,%r11
	movq %r15,%r10
	movslq %r14d,%r9
	salq $0x4,%r9
	movq 0x18(%rbp),%r14
	movq 0x8(%r14,%r9,1),%r8
	movq 0x0(%r8),%rsp
	movq 0x8(%r8),%rsi
	movq 0x10(%r8),%rdi
	movq 0x40(%rbp),%r14
	movq %r14,%r9
	shrq $0x8,%r9
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r9,1)
	imulq $0x18,%r13
	movq %rsp,0x0(%r14,%r13,1)
	movq %r14,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%r8,%r13,1)
	imulq $0x18,%r11
	movq %rsi,0x8(%r14,%r11,1)
	movq %r14,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%r8,%r13,1)
	imulq $0x18,%r10
	movq %rdi,0x10(%r14,%r10,1)
	incq %r15
	jmp loop_3113
.p2align 0x4
L_487128:
L_262083:
	movq 0x40(%rbp),%r15
	movq $0x889,0xFFFFFFFFFFFFFFF8(%r15)
	movl 0x38(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_487133
L_262084:
	movq 0x30(%rbp),%rdx
	cmpq $0x7FFFFFFF,%rdx
	ja L_487132
L_262085:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1621,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_262086+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_262086
.p2align 0x4
.long 0x43F7
L_262086:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq %rax,0x38(%rbp)
L_262087:
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3114:
	cmpq 0x30(%rbp),%r15
	jnl L_487129
L_262163:
	movl %r15d,%r14d
	movq %r15,%r13
	movq %r15,%r11
	movslq %r14d,%r10
	salq $0x4,%r10
	movq 0x18(%rbp),%r14
	movq 0x0(%r14,%r10,1),%r9
	movq 0x0(%r9),%r8
	movq 0x8(%r9),%rsp
	movq 0x38(%rbp),%r14
	movq %r14,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	salq $0x4,%r13
	movq %r8,0x0(%r14,%r13,1)
	movq %r14,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%r9,%r13,1)
	salq $0x4,%r11
	movq %rsp,0x8(%r14,%r11,1)
	incq %r15
	jmp loop_3114
.p2align 0x4
L_487129:
L_262088:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_262089
L_262161:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_262162+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_262162
.p2align 0x4
.long 0x43FD
L_262162:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_262089:
	movq 0x38(%rbp),%r15
	movq $0xB63,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_487130
L_262091:
	movl %r13d,0x88(%rbp)
	movq $0x3AC9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x20,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x20(%rbp),%r13
	movq %r13,0x8(%r14)
	movq %r15,0x10(%r14)
	movq %r14,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_262092+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_32
.p2align 0x4
L_487130:
L_262046:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_487132:
L_262165:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_487133:
L_262166:
	movq (globalObjptr+0x6D10)(%rip),%r15
	movq %r15,0x38(%rbp)
	jmp L_262087
.p2align 0x4
L_487135:
L_262169:
	movq (globalObjptr+0x6D08)(%rip),%r15
	movq %r15,0x40(%rbp)
	jmp L_262082
.p2align 0x4
L_487137:
L_262170:
	movq 0x30(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq %r15,%r14
	movq %r15,%r13
	movq %r15,%r11
	movq %r15,%r10
	movq %r15,%r9
	imulq $0x30,%r14
	movq 0x8(%rbp),%r8
	movq 0x8(%r8,%r14,1),%rsp
	movq %rsp,0x38(%rbp)
	imulq $0x30,%r13
	movq 0x10(%r8,%r13,1),%r14
	movq %r14,0x40(%rbp)
	imulq $0x30,%r11
	movq 0x18(%r8,%r11,1),%r14
	movq %r14,0x78(%rbp)
	imulq $0x30,%r10
	movq 0x20(%r8,%r10,1),%r14
	movq %r14,0x80(%rbp)
	imulq $0x30,%r9
	movq 0x0(%r8,%r9,1),%r14
	movq %r14,0x88(%rbp)
	imulq $0x30,%r15
	movq 0x28(%r8,%r15,1),%r14
	movq %r14,0x90(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%rsp),%r15
	movl %r15d,%r14d
	movl %r14d,0x98(%rbp)
	movslq %r14d,%r13
	cmpq %r13,%r15
	jne L_262046
L_262172:
	movq $0x3EDB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r15)
	movq %rsp,0x8(%r15)
	movq %r15,0xA8(%rbp)
	movl %r14d,0xB0(%rbp)
	addq $0xA8,%rbp
	leaq (L_262173+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_1
.p2align 0x4
L_487141:
L_262253:
	movq (globalObjptr+0x6D00)(%rip),%r15
	movq %r15,0x18(%rbp)
	jmp L_262075
.p2align 0x4
L_487143:
L_262065:
	movq (globalObjptr+0xCF8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_487146:
L_262260:
	movq 0x78(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x38(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x90(%rbp)
	movq 0x10(%r13),%r11
	movq %r11,0xA0(%rbp)
	movq 0x10(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq $0x9DF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x40(%r11),%r14
	movq 0x38(%r11),%r13
	movq 0x30(%r11),%r10
	movq 0x28(%r11),%r9
	movq 0x20(%r11),%r8
	movq 0x18(%r11),%rsp
	movq 0x10(%r11),%rsi
	movq 0x8(%r11),%rdi
	movq 0x0(%r11),%rdx
	movq $0x9E1,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %rdx,0x0(%r11)
	movq %rdi,0x8(%r11)
	movq %rsi,0x10(%r11)
	movq %rsp,0x18(%r11)
	movq %r8,0x20(%r11)
	movq %r9,0x28(%r11)
	movq %r10,0x30(%r11)
	movq %r15,0x38(%r11)
	movq %r13,0x40(%r11)
	movq %r14,0x48(%r11)
	movq %r11,0xA8(%rbp)
	addq $0x58,%r12
	addq $0xA0,%rbp
	leaq (L_262261+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3797
.p2align 0x4
L_487149:
L_262277:
	movq (globalObjptr+0x6CF0)(%rip),%r15
	movq %r15,0x40(%rbp)
	jmp L_262060
.p2align 0x4
L_487151:
L_262278:
	movq 0x10(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x80(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x90(%rbp)
	movq 0x8(%r13),%r10
	movq %r10,0x98(%rbp)
	movq 0x10(%r13),%r9
	movq %r9,0xA0(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r15
	movl %r15d,%r14d
	movslq %r14d,%r13
	cmpq %r15,%r13
	jne L_262046
L_262280:
	movl %r14d,%r15d
	shlq $0x1,%r15
	orq $0x1,%r15
	movq %r15,0xA8(%rbp)
	movq 0x8(%r10),%r15
	movq 0x10(%r15),%r14
	movq %r14,0xB8(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0xB0(%rbp)
	movq $0x1,0xC0(%rbp)
.p2align 0x4,,0x7
L_262281:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_487153
.p2align 0x4,,0x7
L_262282:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xB8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xC0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xB0(%rbp),%r14
	cmpq $0x1,%r14
	je L_487152
L_262283:
	movq %r15,0xC0(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0xB0(%rbp)
	movq %r15,0xB8(%rbp)
	jmp L_262281
.p2align 0x4
L_487152:
L_262284:
	movq 0xC0(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq (globalObjptr+0xA050)(%rip),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC8,%rbp
	leaq (L_262285+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3781
.p2align 0x4
L_487153:
L_262351:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_262352+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_262352
.p2align 0x4
.long 0x441E
L_262352:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	jmp L_262282
.p2align 0x4
L_487157:
L_262356:
	movq (globalObjptr+0x6CF8)(%rip),%r15
	movq %r15,0x8(%rbp)
	jmp L_262052
.p2align 0x4
L_487159:
L_262357:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_262358+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_262358
.p2align 0x4
.long 0x45B
L_262358:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_262044
.p2align 0x4
.long 0x440A
L_262255:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_262256
L_262257:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_262258+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_262258
.p2align 0x4
.long 0x440B
L_262258:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_262256:
	movl 0x10(%rbp),%ecx
	jmp loop_3111
.p2align 0x4
.long 0x43F8
L_262092:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x48(%rbp)
.p2align 0x4,,0x7
loop_3115:
	movq 0x40(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x48(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_262046
L_262094:
	cmpl $0x0,%r13d
	jl L_487164
L_262095:
	movl $0x0,0x4C(%rbp)
	movl $0x0,0x50(%rbp)
.p2align 0x4,,0x7
loop_3116:
	movl 0x48(%rbp),%r15d
	cmpl %r15d,0x50(%rbp)
	jl L_487163
L_262096:
	movl 0x4C(%rbp),%r15d
	testl %r15d,%r15d
	jnz loop_3115
L_262097:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_262098
L_262099:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_262100+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_262100
.p2align 0x4
.long 0x78C
L_262100:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_262098:
	movq $0x20CB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x20CD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x10,%r12
	movq 0x38(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_487163:
L_262102:
	movslq 0x50(%rbp),%r15
	movq %r15,%r14
	movq %r15,%r13
	imulq $0x18,%r14
	movq 0x40(%rbp),%r11
	movq 0x0(%r11,%r14,1),%r10
	movq %r10,0x58(%rbp)
	imulq $0x18,%r13
	movq 0x8(%r11,%r13,1),%r14
	movq %r14,0x80(%rbp)
	imulq $0x18,%r15
	movq 0x10(%r11,%r15,1),%r14
	movq %r14,0x60(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_262103+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1232
.p2align 0x4
L_487164:
L_262160:
	movq (globalObjptr+0x4F8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x43FE
L_262173:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0xA0(%rbp)
	movq %r15,0xA8(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0xB0(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0xB8(%rbp)
	addq $0xA8,%rbp
	leaq (L_262174+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp con_2
.p2align 0x4
.long 0x440C
L_262261:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r15
	movq %r15,0x98(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_262262
L_262272:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_262273+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_262273
.p2align 0x4
.long 0x440F
L_262273:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_262262:
	movq 0x90(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%ecx
	movslq %ecx,%r13
	cmpq %r13,%r14
	jne L_262046
L_262264:
	testl %ecx,%ecx
	jz L_487166
L_262265:
	movq $0x47BD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq $0x1D01,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x30,%r12
	movl $0x1,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq $0x1,0x10(%r13)
	movq 0x98(%rbp),%r14
	movq %r14,0x18(%r13)
	movq %r15,0x20(%r13)
	movq %r13,%r15
L_262266:
	movq %r15,0xA0(%rbp)
	movl %ecx,%r15d
	shlq $0x1,%r15
	orq $0x1,%r15
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_262267+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp def_0
.p2align 0x4
L_487166:
L_262271:
	movq $0x1CFF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x98(%rbp),%r13
	movq %r13,0x0(%r14)
	xchgq %r14,%r15
	jmp L_262266
.p2align 0x4
.long 0x4410
L_262285:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0xB0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_262286
L_262349:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_262350+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_262350
.p2align 0x4
.long 0x441D
L_262350:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_262286:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xB8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xB0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0xB8(%rbp)
	addq $0xB8,%rbp
	leaq (L_262287+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x43F9
L_262103:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x80(%rbp)
	movq %r15,0x78(%rbp)
	movb 0x0(%r14),%r15b
	cmpb $0x1,%r15b
	je L_262157
	cmpb $0x2,%r15b
	je L_487178
L_262104:
	movq 0x60(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq %r14,0x78(%rbp)
	movl %r14d,%r15d
	movl %r15d,0x54(%rbp)
	movslq %r15d,%r13
	cmpq %r14,%r13
	jne L_262046
L_262106:
	movl $0x0,0x88(%rbp)
.p2align 0x4,,0x7
loop_3117:
	movl 0x88(%rbp),%r15d
	cmpl %r15d,0x54(%rbp)
	je L_487176
L_262107:
	movslq %r15d,%r14
	cmpq 0x78(%rbp),%r14
	jnb L_487175
L_262109:
	salq $0x4,%r14
	movq 0x60(%rbp),%r15
	movq 0x8(%r15,%r14,1),%r13
	movq %r13,0x90(%rbp)
	cmpq $0x1,%r13
	jne L_487171
.p2align 0x4,,0x7
L_262122:
	movl 0x88(%rbp),%r15d
	incl %r15d
	jo L_487170
L_262124:
	movl %r15d,0x88(%rbp)
	jmp loop_3117
.p2align 0x4
L_487170:
L_262123:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_487171:
L_262110:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_262111
L_262153:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_262154+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_262154
.p2align 0x4
.long 0x43FC
L_262154:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_262111:
	movq 0x58(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_262046
L_262113:
	testl %r13d,%r13d
	jz L_487172
L_262114:
	movq $0x47BD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq $0x1D01,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x30,%r12
	movl $0x1,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq $0x1,0x10(%r13)
	movq 0x90(%rbp),%r14
	movq %r14,0x18(%r13)
	movq %r15,0x20(%r13)
	movq %r13,%r15
x_873:
	movq %r15,0xA0(%rbp)
	movq 0x70(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq %r11,0xA8(%rbp)
	movq $0x3EDF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r15,0x98(%rbp)
	addq $0x10,%r12
	addq $0x98,%rbp
	leaq (L_262115+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp instantiateP_0
.p2align 0x4
L_487172:
L_262152:
	movq $0x1CFF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x90(%rbp),%r13
	movq %r13,0x0(%r14)
	xchgq %r14,%r15
	jmp x_873
.p2align 0x4
L_487175:
L_262108:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_487176:
L_262157:
	movl 0x4C(%rbp),%ecx
L_262128:
	movl %ecx,0x4C(%rbp)
	incl 0x50(%rbp)
	jmp loop_3116
.p2align 0x4
L_487178:
L_262159:
	movq (globalObjptr+0x6D18)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x43FE
L_262174:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%rdx
	movq %rdx,0xA0(%rbp)
	movq 0x90(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0xA8(%rbp)
	cmpq %r14,%rdx
	jne L_262046
L_262176:
	testq %rdx,%rdx
	jz L_487204
L_262177:
	cmpq $0x7FFFFFFF,%rdx
	ja L_262165
L_262178:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1623,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_262179+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_262179
.p2align 0x4
.long 0x43FF
L_262179:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq %rax,0xB0(%rbp)
L_262180:
	movq $0x0,0xB8(%rbp)
.p2align 0x4,,0x7
loop_3119:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_487202
.p2align 0x4,,0x7
L_262181:
	movq 0xB8(%rbp),%r15
	cmpq 0xA8(%rbp),%r15
	jnl L_487183
L_262230:
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq %r15,%r14
	imulq $0x18,%r14
	movq 0x90(%rbp),%r13
	movq 0x8(%r13,%r14,1),%r11
	movq %r11,0xC0(%rbp)
	imulq $0x18,%r15
	movq 0x10(%r13,%r15,1),%r14
	cmpq $0x1,%r14
	jne L_487182
L_262245:
	movq 0xA0(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq $0x1,0xD0(%rbp)
.p2align 0x4,,0x7
L_262236:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_487181
.p2align 0x4,,0x7
L_262237:
	movl 0x98(%rbp),%r15d
	testl %r15d,%r15d
	jz L_487180
L_262238:
	movq $0x47BD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1D01,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x30,%r12
	movl $0x1,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq $0x1,0x10(%r13)
	movq 0xC8(%rbp),%r11
	movq %r11,0x18(%r13)
	movq %r14,0x20(%r13)
	movq %r13,%r15
L_262239:
	movq $0x1849,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0xC0(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0xD0(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0xB0(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq 0xB8(%rbp),%r11
	movq %r11,%r9
	salq $0x4,%r9
	movq %r14,0x0(%r13,%r9,1)
	movq %r13,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r10,%r14,1)
	movq %r11,%r14
	salq $0x4,%r14
	movq %r15,0x8(%r13,%r14,1)
	incq %r11
	movq %r11,0xB8(%rbp)
	jmp loop_3119
.p2align 0x4
L_487180:
L_262240:
	movq $0x1CFF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xC8(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_262239
.p2align 0x4
L_487181:
L_262241:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_262242+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_262242
.p2align 0x4
.long 0x4407
L_262242:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	jmp L_262237
.p2align 0x4
L_487182:
L_262231:
	movq %r14,0xD0(%rbp)
	movq 0x58(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq $0x9DF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x40(%r11),%r14
	movq 0x38(%r11),%r13
	movq 0x30(%r11),%r10
	movq 0x28(%r11),%r9
	movq 0x20(%r11),%r8
	movq 0x18(%r11),%rsp
	movq 0x10(%r11),%rsi
	movq 0x8(%r11),%rdi
	movq 0x0(%r11),%rdx
	movq $0x9E1,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %rdx,0x0(%r11)
	movq %rdi,0x8(%r11)
	movq %rsi,0x10(%r11)
	movq %rsp,0x18(%r11)
	movq %r8,0x20(%r11)
	movq %r9,0x28(%r11)
	movq %r10,0x30(%r11)
	movq %r15,0x38(%r11)
	movq %r13,0x40(%r11)
	movq %r14,0x48(%r11)
	movq %r11,0xD8(%rbp)
	addq $0x58,%r12
	addq $0xD0,%rbp
	leaq (L_262232+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3797
.p2align 0x4
L_487183:
L_262182:
	movq 0xB0(%rbp),%r14
	movq $0x184B,0xFFFFFFFFFFFFFFF8(%r14)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movslq %r11d,%rdx
	movq %rdx,0x90(%rbp)
	cmpq %rdx,%r13
	jne L_262046
L_262184:
	cmpq $0x0,%rdx
	sete %bl
	movzbl %bl,%ebx
	movl %ebx,0x98(%rbp)
	je L_487200
L_262185:
	cmpq $0x7FFFFFFF,%rdx
	ja L_262165
L_262186:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x150B,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r14
	movq %r14,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_262187+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_262187
.p2align 0x4
.long 0x4400
L_262187:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq %rax,0xA0(%rbp)
L_262188:
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3120:
	cmpq 0x90(%rbp),%r15
	jnl L_487184
L_262227:
	movl %r15d,%r14d
	movslq %r14d,%r13
	salq $0x4,%r13
	movq 0xB0(%rbp),%r14
	movq 0x8(%r14,%r13,1),%r11
	movq 0xA0(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r11,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_3120
.p2align 0x4
L_487184:
L_262189:
	movq 0xA0(%rbp),%r15
	movq $0xC0B,0xFFFFFFFFFFFFFFF8(%r15)
	movl 0x98(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_487198
L_262190:
	movq 0x90(%rbp),%rdx
	cmpq $0x7FFFFFFF,%rdx
	ja L_262165
L_262191:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1625,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_262192+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_262192
.p2align 0x4
.long 0x4401
L_262192:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq %rax,0x98(%rbp)
L_262193:
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3121:
	cmpq 0x90(%rbp),%r15
	jnl L_487185
L_262224:
	movl %r15d,%r14d
	movq %r15,%r13
	movq %r15,%r11
	movslq %r14d,%r10
	salq $0x4,%r10
	movq 0xB0(%rbp),%r14
	movq 0x0(%r14,%r10,1),%r9
	movq 0x0(%r9),%r8
	movq 0x8(%r9),%rsp
	movq 0x98(%rbp),%r14
	movq %r14,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	salq $0x4,%r13
	movq %r8,0x0(%r14,%r13,1)
	movq %r14,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%r9,%r13,1)
	salq $0x4,%r11
	movq %rsp,0x8(%r14,%r11,1)
	incq %r15
	jmp loop_3121
.p2align 0x4
L_487185:
L_262194:
	movq 0x98(%rbp),%r15
	movq $0xB11,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x80(%rbp),%r15
	movq 0x20(%r15),%r14
	movq %r14,0x90(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0xA8(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0xB0(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0xB8(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xC0(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	movq %r11,0xC8(%rbp)
	cmpq %r15,%r11
	jne L_262046
L_262196:
	cmpl $0x1,%r13d
	sete %al
	movzbl %al,%eax
	movl %eax,0x80(%rbp)
	movq 0xA0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r11d
	movslq %r11d,%r10
	cmpq %r10,%r14
	jne L_262046
L_262198:
	cmpl %r13d,%r11d
	je L_487186
L_262199:
	movq (globalObjptr+0x4E0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_487186:
L_262200:
	movq 0xC8(%rbp),%rdx
	testq %rdx,%rdx
	jz L_487194
L_262201:
	cmpq $0x7FFFFFFF,%rdx
	ja L_262165
L_262202:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x15CD,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_262203+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_262203
.p2align 0x4
.long 0x4402
L_262203:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq %rax,0xD0(%rbp)
L_262204:
	movq $0x0,0xD8(%rbp)
.p2align 0x4,,0x7
loop_3122:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_487192
.p2align 0x4,,0x7
L_262205:
	movq 0xD8(%rbp),%r10
	cmpq 0xC8(%rbp),%r10
	jnl L_487191
L_262207:
	movl %r10d,%r9d
	movslq %r9d,%r15
	movq %r15,%r14
	salq $0x4,%r14
	movq 0xC0(%rbp),%r10
	movq 0x0(%r10,%r14,1),%r9
	movq %r15,%r14
	salq $0x4,%r14
	movq 0x8(%r10,%r14,1),%r13
	movq 0xA0(%rbp),%r10
	movq 0x0(%r10,%r15,8),%r14
	movq 0xB8(%rbp),%r10
	cmpq $0x1,0x0(%r10)
	je L_487190
L_262208:
	movq $0x209F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r13,0x0(%r15)
	movq $0x5C9,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x8(%r11)
	addq $0x18,%r12
	movq %r14,0x0(%r11)
	movq %r9,%r15
L_262209:
	movq 0xB0(%rbp),%r10
	movq 0x8(%r10),%r9
	movq $0x5CB,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	addq $0x10,%r12
	movq $0x1,0x0(%r10)
	movq $0x53,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	addq $0x10,%r12
	movl $0x0,0x0(%r8)
	movl $0x0,0x4(%r8)
	movq $0x5CD,0x0(%r12)
	movq %r12,%rsp
	addq $0x8,%rsp
	movq %r10,0x8(%rsp)
	addq $0x18,%r12
	movq %r8,0x0(%rsp)
	movq 0xA8(%rbp),%rsi
	movl 0x0(%rsi),%edi
	testl %edi,%edi
	jz L_487189
L_262218:
	movq $0x11D7,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r11,0x10(%r10)
	addq $0x28,%r12
	movb $0x6,%sil
	movzbl %sil,%edi
	movl %edi,0x0(%r10)
	movl $0x0,0x4(%r10)
	movq %rsp,0x8(%r10)
	movq %r15,0x18(%r10)
	movq 0x0(%r9),%r11
	movq $0x24D1,0x0(%r12)
	movq %r12,%rsi
	addq $0x8,%rsi
	movq %r10,0x0(%rsi)
	movq %r11,0x8(%rsi)
	addq $0x18,%r12
	movq %r9,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%rdi
	movb $0x1,0x0(%rdi,%r11,1)
	movq %rsi,0x0(%r9)
	movq %r8,%r11
	movq %rsp,%r10
L_262211:
	movq 0x90(%rbp),%r9
	movq 0x10(%r9),%r8
	movl 0x0(%r8),%esp
	testl %esp,%esp
	jz L_262213
L_262215:
	movl 0x80(%rbp),%r9d
	testl %r9d,%r9d
	jz L_262214
L_262213:
	movl $0x1,0x0(%r11)
L_262214:
	movq 0xD0(%rbp),%r11
	movq %r11,%r9
	shrq $0x8,%r9
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r9,1)
	movq 0xD8(%rbp),%r9
	movq %r9,%rsp
	salq $0x5,%rsp
	movq %rsp,%rax
	movq %r10,0x0(%r11,%rax,1)
	movq %r11,%r10
	shrq $0x8,%r10
	movb $0x1,0x0(%r8,%r10,1)
	movq %r9,%r10
	salq $0x5,%r10
	movq %r14,0x8(%r11,%r10,1)
	movq %r11,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r8,%r14,1)
	movq %r9,%r14
	salq $0x5,%r14
	movq %r15,0x10(%r11,%r14,1)
	movq %r11,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%r8,%r15,1)
	movq %r9,%r15
	salq $0x5,%r15
	movq %r13,0x18(%r11,%r15,1)
	incq %r9
	movq %r9,0xD8(%rbp)
	jmp loop_3122
.p2align 0x4
L_487189:
	movq %r8,%r11
	movq %rsp,%r10
	jmp L_262211
.p2align 0x4
L_487190:
L_262219:
	movq $0x1,%r11
	movq %r9,%r15
	jmp L_262209
.p2align 0x4
L_487191:
L_262206:
	movq 0xD0(%rbp),%r15
	movq $0xAEF,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x20A5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x40(%rbp),%r15
	movq %r15,0x8(%r14)
	movq $0x6D7,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x88(%rbp),%r14
	movq %r14,0x0(%r13)
	movq $0x184D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x20,%r12
	movq 0x38(%rbp),%r11
	movq %r11,0x0(%r14)
	movq %r15,0x8(%r14)
	movq 0x98(%rbp),%r15
	movq %r15,0x10(%r14)
	movq $0x184F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq 0x78(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x18(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r11,1)
	movq 0x30(%rbp),%r11
	movq %r11,%r8
	salq $0x4,%r8
	movq %r15,0x0(%r13,%r8,1)
	movq %r13,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%r9,%r15,1)
	movq %r11,%r15
	salq $0x4,%r15
	movq %r14,0x8(%r13,%r15,1)
	incq %r11
	movq %r11,0x30(%rbp)
	jmp loop_3112
.p2align 0x4
L_487192:
L_262220:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE8,%rbp
	leaq (L_262221+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_262221
.p2align 0x4
.long 0x4403
L_262221:
	addq $0xFFFFFFFFFFFFFF18,%rbp
	jmp L_262205
.p2align 0x4
L_487194:
L_262223:
	movq (globalObjptr+0x4DA0)(%rip),%r15
	movq %r15,0xD0(%rbp)
	jmp L_262204
.p2align 0x4
L_487198:
L_262226:
	movq (globalObjptr+0x6D30)(%rip),%r15
	movq %r15,0x98(%rbp)
	jmp L_262193
.p2align 0x4
L_487200:
L_262229:
	movq (globalObjptr+0x6D28)(%rip),%r14
	movq %r14,0xA0(%rbp)
	jmp L_262188
.p2align 0x4
L_487202:
L_262246:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_262247+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_262247
.p2align 0x4
.long 0x4409
L_262247:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	jmp L_262181
.p2align 0x4
L_487204:
L_262249:
	movq (globalObjptr+0x6D20)(%rip),%r15
	movq %r15,0xB0(%rbp)
	jmp L_262180
.p2align 0x4
.long 0x440D
L_262267:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x90(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_262268
L_262269:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_262270+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_262270
.p2align 0x4
.long 0x440E
L_262270:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_262268:
	movq 0x40(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x78(%rbp),%r14
	movq 0x90(%rbp),%r13
	movq %r13,0x0(%r15,%r14,8)
	incq %r14
	movq %r14,0x78(%rbp)
	jmp loop_3110
.p2align 0x4
.long 0x4411
L_262287:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0xB0(%rbp)
	movq 0x98(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0xB8(%rbp)
	movq 0x18(%rbp),%r15
	movq 0x20(%r15),%r14
	movq %r14,0xC0(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0xC8(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0xD0(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0xD8(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xE8(%rbp)
	addq $0xE8,%rbp
	leaq (L_262288+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x43FA
L_262115:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq 0xA0(%rbp),%r14
	movq %r14,0x98(%rbp)
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_262116+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_0
.p2align 0x4
.long 0x4404
L_262232:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movq 0xD0(%rbp),%r15
	movq %r15,0xC8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_262233
L_262243:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_262244+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_262244
.p2align 0x4
.long 0x4408
L_262244:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_262233:
	movq 0x60(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0xD0(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0xD8(%rbp)
	movq $0x3EC1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xA0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xC8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0xE8(%rbp)
	movl $0x2,0xF0(%rbp)
	addq $0xE8,%rbp
	leaq (L_262234+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_1
.p2align 0x4
.long 0x4412
L_262288:
	addq $0xFFFFFFFFFFFFFF18,%rbp
	movl 0xE8(%rbp),%r15d
	movl %r15d,0xE0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_262289
L_262347:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF0,%rbp
	leaq (L_262348+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_262348
.p2align 0x4
.long 0x441C
L_262348:
	addq $0xFFFFFFFFFFFFFF10,%rbp
L_262289:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xB0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0xE8(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0x17,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,0xF0(%rbp)
	movq %r15,0x8(%r11)
	addq $0x28,%r12
	movl 0xE0(%rbp),%r10d
	movl %r10d,0x0(%r11)
	movl $0x0,0x4(%r11)
	movq %r13,0x10(%r11)
	movq %r14,0x18(%r11)
	movq $0xFF7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movb $0x0,%r11b
	movzbl %r11b,%ecx
	movl %ecx,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x13FB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq 0xD8(%rbp),%r11
	movq 0x0(%r11),%r10
	movq $0x1F7,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r10,0x0(%r11)
	addq $0x10,%r12
	movq $0x13FD,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r10,0xF8(%rbp)
	movq %r11,0x0(%r10)
	movq %r14,0x8(%r10)
	movq %r15,0x10(%r10)
	addq $0x20,%r12
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_487218
L_262291:
	movq %r15,0x0(%r11)
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_487217
L_262292:
	movq 0x0(%r11),%r14
	movq 0x8(%r11),%r11
	xorl %ecx,%ecx
	movq %r11,%r15
.p2align 0x4,,0x7
L_262294:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_262295
L_262340:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xCCE,%r13
	je L_487213
L_262295:
	incl %ecx
	movl %ecx,0xB0(%rbp)
	jo L_262123
L_262296:
	cmpq $0x1,%r15
	je L_487208
L_262297:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_262294
.p2align 0x4
L_487208:
L_262298:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_262299
L_262338:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x108,%rbp
	leaq (L_262339+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_262339
.p2align 0x4
.long 0x441B
L_262339:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
L_262299:
	movl 0xB0(%rbp),%ecx
L_262300:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_487210
L_262302:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_262304
L_262337:
	movl %ecx,0x0(%r15)
L_262304:
	movq $0x199D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xF8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xE8(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
x_875:
	movq 0xF0(%rbp),%r15
	movq %r15,0x100(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0x108(%rbp)
	addq $0x100,%rbp
	leaq (L_262305+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1232
.p2align 0x4
L_487210:
L_262301:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_487213:
L_262341:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_262301
L_262342:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %ecx,0x0(%r13)
	jnl L_487214
L_262345:
	movl %ecx,0x0(%r13)
	movq %r14,%r15
L_262344:
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0xF8(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp x_875
.p2align 0x4
L_487214:
L_262343:
	movq %r14,%r15
	jmp L_262344
.p2align 0x4
L_487217:
L_262346:
	xorl %ecx,%ecx
	jmp L_262300
.p2align 0x4
L_487218:
L_262290:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x43FA
L_262116:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r14
	movq %r14,0x90(%rbp)
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1448,%r14
	jne L_487228
L_262118:
	movq 0x8(%r15),%r14
	movq 0x18(%r14),%r13
	cmpq $0x1,%r13
	je L_262122
	cmpq $0x2,%r13
	je L_262127
L_262119:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE73,%r15
	je L_487223
L_262130:
	movq 0x0(%r13),%r15
L_262131:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x23E0,%r14
	je L_487222
	cmpq $0x23E1,%r14
	je L_487221
	cmpq $0x23E2,%r14
	je L_487220
L_262132:
	movq 0x10(%r15),%r14
	movq %r14,0xA8(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x90(%rbp)
	addq $0xA0,%rbp
	leaq (L_262133+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1232
.p2align 0x4
L_487220:
L_262149:
	movq 0x8(%r15),%r14
	movq %r14,0x98(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xA0(%rbp)
	addq $0x98,%rbp
	leaq (loop_3118+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1233
.p2align 0x4
L_487221:
L_262148:
	movq 0x8(%r15),%r14
	movq %r14,0x98(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xA0(%rbp)
	addq $0x98,%rbp
	leaq (loop_3118+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1234
.p2align 0x4
L_487222:
L_262142:
	movq 0x8(%r15),%r14
	movq %r14,0x98(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xA0(%rbp)
	addq $0x98,%rbp
	leaq (loop_3118+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1235
.p2align 0x4
L_487223:
L_262120:
	movq 0x0(%r13),%r15
x_874:
	movq 0x0(%r15),%r14
	movq %r14,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	jne L_262122
L_262125:
	shrq $0x1,%r14
	movl %r14d,%r15d
	testl %r15d,%r15d
	jnz L_262122
L_262127:
	movq 0x80(%rbp),%r15
	movb $0x1,0x0(%r15)
	movl $0x1,%ecx
	jmp L_262128
.p2align 0x4
L_487228:
L_262117:
	movq (globalObjptr+0x1500)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4405
L_262234:
	addq $0xFFFFFFFFFFFFFF18,%rbp
	movq 0xE8(%rbp),%r15
	movq 0xD0(%rbp),%r14
	movq %r14,0xE8(%rbp)
	movq 0xD8(%rbp),%r14
	movq %r15,0xD8(%rbp)
	movq %r14,0xE0(%rbp)
	addq $0xD8,%rbp
	leaq (L_262235+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp con_2
.p2align 0x4
.long 0x4413
L_262305:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0xB0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_262306
L_262335:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x100,%rbp
	leaq (L_262336+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_262336
.p2align 0x4
.long 0x441A
L_262336:
	addq $0xFFFFFFFFFFFFFF00,%rbp
L_262306:
	movq 0xB0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq $0x1CE5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xB8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq %r14,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r15,0x0(%r14)
	movq 0xC8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x20C1,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x8(%r11)
	addq $0x18,%r12
	movq 0xF0(%rbp),%r14
	movq %r14,0x0(%r11)
	movq %r15,%r9
	shrq $0x8,%r9
	movb $0x1,0x0(%r10,%r9,1)
	movq %r11,0x0(%r15)
	movq $0x128D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0xA8(%rbp),%r11
	movq %r11,0x0(%r15)
	movq %r13,0x8(%r15)
	movq %r14,0x10(%r15)
	movq 0xC0(%rbp),%r13
	movq 0x0(%r13),%r9
	movq $0x20C3,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r15,0x0(%r8)
	movq %r9,0x8(%r8)
	addq $0x18,%r12
	movq %r13,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%r10,%r15,1)
	movq %r8,0x0(%r13)
	movq $0x20A1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r14,0x0(%r15)
	movq $0x6D7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq %r11,0x0(%r14)
	movq %r14,0x108(%rbp)
	movq (globalObjptr+0x1C00)(%rip),%r15
	movq %r15,0x100(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0x110(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x118(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x120(%rbp)
	addq $0x100,%rbp
	leaq (L_262307+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp extendTycon_0
.p2align 0x4
.long 0x43FB
L_262133:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r14
	movq %r14,0x98(%rbp)
	movq 0x10(%r14),%r11
	movb 0x0(%r11),%r13b
	cmpb $0x1,%r13b
	je L_262127
	cmpb $0x2,%r13b
	je L_487233
L_262134:
	movq 0x90(%rbp),%r14
	cmpq $0x1,%r14
	je L_262122
	cmpq $0x2,%r14
	je L_262127
L_262135:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xE73,%r15
	je L_487230
L_262137:
	movq 0x0(%r14),%r15
	jmp L_262131
.p2align 0x4
L_487230:
L_262136:
	movq 0x0(%r14),%r15
	jmp x_874
.p2align 0x4
L_487233:
L_262141:
	movq (globalObjptr+0x1B08)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x43FA
loop_3118:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r14
	movq %r14,0x90(%rbp)
	cmpq $0x1,%r14
	je L_262122
	cmpq $0x2,%r14
	je L_262127
L_262143:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xE73,%r15
	je L_487235
L_262145:
	movq 0x0(%r14),%r15
	jmp L_262131
.p2align 0x4
L_487235:
L_262144:
	movq 0x0(%r14),%r15
	jmp x_874
.p2align 0x4
.long 0x4406
L_262235:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq 0xC8(%rbp),%r14
	movq %r14,0xD0(%rbp)
	movq %r15,0xC8(%rbp)
	jmp L_262236
.p2align 0x4
.long 0x4414
L_262307:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0xA0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0xB0(%rbp)
	cmpq %rdx,%r14
	jne L_262046
L_262309:
	testq %rdx,%rdx
	jz L_487245
L_262310:
	cmpq $0x7FFFFFFF,%rdx
	ja L_262165
L_262311:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1627,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x100,%rbp
	leaq (L_262312+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_262312
.p2align 0x4
.long 0x4415
L_262312:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq %rax,0xB8(%rbp)
L_262313:
	movq $0x0,0xC0(%rbp)
loop_3123:
	movq 0xB0(%rbp),%r15
	cmpq %r15,0xC0(%rbp)
	jl L_487243
L_262314:
	movq 0xB8(%rbp),%r15
	movq $0x1843,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0xA0(%rbp)
	cmpq %rdx,%r14
	jne L_262046
L_262316:
	testq %rdx,%rdx
	jz L_487241
L_262317:
	cmpq $0x7FFFFFFF,%rdx
	ja L_262165
L_262318:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x15CF,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x100,%rbp
	leaq (L_262319+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_262319
.p2align 0x4
.long 0x4416
L_262319:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq %rax,0xB0(%rbp)
L_262320:
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3124:
	cmpq 0xA0(%rbp),%r15
	jnl L_487238
L_262325:
	movl %r15d,%r14d
	movq %r15,%r13
	movq %r15,%r11
	movslq %r14d,%r10
	movq %r10,%r14
	imulq $0x18,%r14
	movq 0xB8(%rbp),%r9
	movq 0x0(%r9,%r14,1),%r8
	imulq $0x18,%r10
	movq 0x8(%r9,%r10,1),%r14
	movq 0xB0(%rbp),%r10
	movq %r10,%r9
	shrq $0x8,%r9
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r9,1)
	salq $0x4,%r13
	movq %r8,0x0(%r10,%r13,1)
	movq %r10,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%rsp,%r13,1)
	salq $0x4,%r11
	movq %r14,0x8(%r10,%r11,1)
	incq %r15
	jmp loop_3124
.p2align 0x4
L_487238:
L_262321:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_262322
L_262323:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x100,%rbp
	leaq (L_262324+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_262324
.p2align 0x4
.long 0x4417
L_262324:
	addq $0xFFFFFFFFFFFFFF00,%rbp
L_262322:
	movq 0xB0(%rbp),%r15
	movq $0x17E1,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x38(%rbp),%r14
	movq 0x18(%r14),%r13
	movq 0x10(%r14),%r11
	movq 0x8(%r14),%r10
	movq 0x20(%rbp),%r14
	movq 0x0(%r14),%r9
	movq $0x1845,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r10,0x8(%r14)
	movq %r9,0x10(%r14)
	movq %r11,0x18(%r14)
	movq %r13,0x20(%r14)
	addq $0x30,%r12
	movq %r15,0x0(%r14)
	movq 0x8(%rbp),%r15
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x10(%rbp),%r13
	movq %r13,%r10
	imulq $0x30,%r10
	movq 0x90(%rbp),%r9
	movq %r9,0x8(%r15,%r10,1)
	movq %r15,%r10
	shrq $0x8,%r10
	movb $0x1,0x0(%r11,%r10,1)
	movq %r13,%r10
	imulq $0x30,%r10
	movq 0xF0(%rbp),%r9
	movq %r9,0x10(%r15,%r10,1)
	movq %r15,%r10
	shrq $0x8,%r10
	movb $0x1,0x0(%r11,%r10,1)
	movq %r13,%r10
	imulq $0x30,%r10
	movq 0x98(%rbp),%r9
	movq %r9,0x18(%r15,%r10,1)
	movq %r15,%r10
	shrq $0x8,%r10
	movb $0x1,0x0(%r11,%r10,1)
	movq %r13,%r10
	imulq $0x30,%r10
	movq %r14,0x20(%r15,%r10,1)
	movq %r13,%r14
	imulq $0x30,%r14
	movq 0xA8(%rbp),%r10
	movq %r10,0x0(%r15,%r14,1)
	movq %r15,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,%r14
	imulq $0x30,%r14
	movq 0xB8(%rbp),%r11
	movq %r11,0x28(%r15,%r14,1)
	incq %r13
	movq %r13,0x10(%rbp)
	jmp loop_3109
.p2align 0x4
L_487241:
L_262327:
	movq (globalObjptr+0x6D40)(%rip),%r15
	movq %r15,0xB0(%rbp)
	jmp L_262320
.p2align 0x4
L_487243:
L_262328:
	movq 0xC0(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0xA0(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x0(%r13),%r11
	movq %r11,0xC8(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0xD0(%rbp)
	movq 0x8(%r11),%r15
	movq 0x10(%r15),%r14
	movq %r14,0xD8(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x100(%rbp)
	addq $0x100,%rbp
	leaq (L_262329+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_487245:
L_262334:
	movq (globalObjptr+0x6D38)(%rip),%r15
	movq %r15,0xB8(%rbp)
	jmp L_262313
.p2align 0x4
.long 0x4418
L_262329:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movl 0x100(%rbp),%r15d
	movl %r15d,0xE0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_262330
L_262331:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x100,%rbp
	leaq (L_262332+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_262332
.p2align 0x4
.long 0x4419
L_262332:
	addq $0xFFFFFFFFFFFFFF00,%rbp
L_262330:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xD8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0x17,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x8(%r11)
	movq %r13,0x10(%r11)
	addq $0x28,%r12
	movl 0xE0(%rbp),%r15d
	movl %r15d,0x0(%r11)
	movl $0x0,0x4(%r11)
	movq %r14,0x18(%r11)
	movq 0xB8(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0xC0(%rbp),%r14
	movq %r14,%r10
	imulq $0x18,%r10
	movq 0xD0(%rbp),%r9
	movq %r9,0x0(%r15,%r10,1)
	movq %r15,%r10
	shrq $0x8,%r10
	movb $0x1,0x0(%r13,%r10,1)
	movq %r14,%r10
	imulq $0x18,%r10
	movq %r11,0x8(%r15,%r10,1)
	movq %r15,%r11
	shrq $0x8,%r11
	movb $0x1,0x0(%r13,%r11,1)
	movq %r14,%r13
	imulq $0x18,%r13
	movq 0xC8(%rbp),%r11
	movq %r11,0x10(%r15,%r13,1)
	incq %r14
	movq %r14,0xC0(%rbp)
	jmp loop_3123
.text
.p2align 0x4
.globl loop_3936
.hidden loop_3936
loop_3936:
L_262359:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_262417
L_262360:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_487264
L_262361:
	movq 0x8(%rbp),%r13
	cmpq $0x1,%r13
	je L_487263
L_262362:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x1067,%r15
	je L_487257
	cmpq $0x1068,%r15
	je L_487253
	cmpq $0x1069,%r15
	je L_487249
	cmpq $0x106A,%r15
	je L_487248
L_262363:
	movq 0x0(%r13),%r14
	movq 0x0(%rbp),%r15
L_262364:
	movq $0x2379,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r13,0x0(%rbp)
	addq $0x18,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_487248:
L_262403:
	movq 0x8(%r13),%r14
	movq 0x0(%rbp),%r15
	movq 0x0(%r13),%r11
	movq %r11,0x0(%rbp)
L_262404:
	movq %r15,0x10(%rbp)
	movq %r14,0x18(%rbp)
	addq $0x10,%rbp
	leaq (L_262405+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3936
.p2align 0x4
L_487249:
L_262389:
	movq 0x0(%r13),%r15
L_262390:
	cmpq $0x1,%r15
	je L_487252
L_262391:
	movq 0x8(%r15),%r14
	movq %r14,0x8(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	movq $0x1,0x18(%rbp)
.p2align 0x4,,0x7
L_262392:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_487251
.p2align 0x4,,0x7
L_262393:
	movq $0x2503,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_487250
L_262394:
	movq %r15,0x18(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x10(%rbp)
	jmp L_262392
.p2align 0x4
L_487250:
L_262395:
	movq 0x10(%rbp),%r13
	movq 0x0(%rbp),%r15
	movq 0x18(%rbp),%r11
	movq %r11,0x0(%rbp)
	xchgq %r13,%r14
L_262396:
	movq %r15,0x10(%rbp)
	movq %r14,0x18(%rbp)
	addq $0x10,%rbp
	leaq (L_262397+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3936
.p2align 0x4
L_487251:
L_262400:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_262401+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_262401
.p2align 0x4
.long 0x4AE
L_262401:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	jmp L_262393
.p2align 0x4
L_487252:
L_262402:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_487253:
L_262380:
	movq 0x0(%rbp),%r15
	movq 0x0(%r13),%r14
	movq %r14,0x0(%rbp)
L_262381:
	movq 0x0(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%ecx
	movslq %ecx,%r11
	cmpq %r11,%r13
	jne L_487256
L_262383:
	decl %ecx
	jo L_487255
L_262385:
loop_3125:
	cmpl $0x0,%ecx
	jl L_487254
L_262386:
	movq %r15,0x18(%rbp)
	movl %ecx,%r15d
	decl %r15d
	movl %r15d,0x8(%rbp)
	movslq %ecx,%r15
	movq 0x0(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x20(%rbp)
	addq $0x18,%rbp
	leaq (L_262387+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3936
.p2align 0x4
L_487254:
L_262388:
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_487255:
L_262384:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_487256:
L_262382:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_487257:
L_262365:
	movq 0x0(%r13),%r15
rev_365:
	cmpq $0x1,%r15
	je L_487262
L_262366:
	movq 0x8(%r15),%r14
	movq %r14,0x8(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	movq $0x1,0x18(%rbp)
.p2align 0x4,,0x7
L_262367:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_487261
.p2align 0x4,,0x7
L_262368:
	movq $0x2379,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_487258
L_262369:
	movq %r15,0x18(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x10(%rbp)
	jmp L_262367
.p2align 0x4
L_487258:
L_262370:
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%rbp)
.p2align 0x4,,0x7
L_262371:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_487260
.p2align 0x4,,0x7
L_262372:
	movq $0x2379,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_487259
L_262373:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_262371
.p2align 0x4
L_487259:
L_262374:
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_487260:
L_262375:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_262376+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_262376
.p2align 0x4
.long 0x45B
L_262376:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_262372
.p2align 0x4
L_487261:
L_262377:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_262378+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_262378
.p2align 0x4
.long 0x4AE
L_262378:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	jmp L_262368
.p2align 0x4
L_487262:
L_262379:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_487263:
L_262416:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_487264:
L_262417:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_262418+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_262418
.p2align 0x4
.long 0x45F
L_262418:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_262361
.p2align 0x4
.long 0x4AF
L_262405:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_262406
L_262414:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_262415+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_262415
.p2align 0x4
.long 0x45F
L_262415:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_262406:
	movq 0x0(%rbp),%r13
	cmpq $0x1,%r13
	je L_487270
L_262407:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x1067,%r15
	je L_487269
	cmpq $0x1068,%r15
	je L_487268
	cmpq $0x1069,%r15
	je L_487267
	cmpq $0x106A,%r15
	je L_487266
L_262408:
	movq 0x0(%r13),%r14
	movq 0x8(%rbp),%r15
	jmp L_262364
.p2align 0x4
L_487266:
L_262412:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r13
	movq %r13,0x0(%rbp)
	movq 0x8(%rbp),%r15
	jmp L_262404
.p2align 0x4
L_487267:
L_262411:
	movq 0x0(%r13),%r15
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%rbp)
	jmp L_262390
.p2align 0x4
L_487268:
L_262410:
	movq 0x0(%r13),%r13
	movq %r13,0x0(%rbp)
	movq 0x8(%rbp),%r15
	jmp L_262381
.p2align 0x4
L_487269:
L_262409:
	movq 0x0(%r13),%r15
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%rbp)
	jmp rev_365
.p2align 0x4
L_487270:
L_262413:
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4AF
L_262397:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x0(%rbp),%r13
	cmpq $0x1,%r13
	je L_487272
L_262398:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movq %r13,0x0(%rbp)
	jmp L_262396
.p2align 0x4
L_487272:
L_262399:
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x9A7
L_262387:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movl 0x8(%rbp),%ecx
	jmp loop_3125
.text
.p2align 0x4
.globl x_1993
.hidden x_1993
x_1993:
L_262419:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_262420
L_262485:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_262486+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_262486
.p2align 0x4
.long 0x4AE
L_262486:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_262420:
	movq 0x18(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x10(%rbp),%r15
	movq 0x28(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movl 0x0(%r15),%r14d
	movl %r14d,0x50(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x70(%rbp)
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_262421+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_23
.p2align 0x4
.long 0x729
L_262421:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_262422
L_262483:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_262484+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_262484
.p2align 0x4
.long 0x72C
L_262484:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_262422:
	movq 0x10(%rbp),%r14
	movq 0x0(%r14),%r13
	cmpq $0x1,%r13
	je L_262429
L_262423:
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r15,0x18(%rbp)
	movq %r13,%r15
.p2align 0x4,,0x7
L_262424:
	movq 0x18(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x106E,%r13
	je L_487287
L_262425:
	cmpq $0x1,%r15
	je L_487274
L_262426:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r14,0x18(%rbp)
	jmp L_262424
.p2align 0x4
L_487274:
L_262427:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_262429
L_262476:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_262477+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_262477
.p2align 0x4
.long 0x72C
L_262477:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_262429:
	movq $0x15D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x20DD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq 0x10(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x20E5,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r10,0x0(%r13)
	movq %r15,0x10(%rbp)
L_262430:
	movq 0x10(%rbp),%r13
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_487282
L_262431:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r11
	movq 0x10(%r11),%r10
	movq 0x58(%rbp),%r9
	movq 0x8(%r9),%r8
	cmpq %r8,0x8(%r10)
	je L_487278
L_262432:
	movq 0x40(%rbp),%r11
	movq 0x0(%r11),%r14
	movq $0x24DB,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x8(%r10)
	addq $0x18,%r12
	movq %r13,0x0(%r10)
	movq %r11,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq %r10,0x0(%r11)
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_487275
L_262433:
L_262434:
	movq $0x11C5,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x30,%r12
	movl 0x50(%rbp),%r14d
	movl %r14d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq 0x58(%rbp),%r14
	movq %r14,0x10(%r13)
	movq 0x60(%rbp),%r14
	movq %r14,0x18(%r13)
	movq 0x68(%rbp),%r14
	movq %r14,0x20(%r13)
	movq $0x24F1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r15
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_487275:
L_262435:
	movq 0x30(%rbp),%r11
	cmpq $0x1,0x0(%r11)
L_262437:
	movq 0x8(%rbp),%r11
	movq 0x8(%r11),%r13
	movq $0x53,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movl $0x0,0x0(%r11)
	movl $0x0,0x4(%r11)
	movq $0x5C7,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	addq $0x18,%r12
	movq %r11,0x0(%r10)
	movq $0x1,0x8(%r10)
	movq 0x28(%rbp),%r9
	movl 0x0(%r9),%r8d
	testl %r8d,%r8d
	jz L_487277
L_262442:
	movq $0x11D3,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	addq $0x20,%r12
	movb $0x3,%r8b
	movzbl %r8b,%esp
	movl %esp,0x0(%r9)
	movl $0x0,0x4(%r9)
	movq %r10,0x8(%r9)
	movq 0x68(%rbp),%r8
	movq %r8,0x10(%r9)
	movq 0x0(%r13),%r8
	movq $0x24DD,0x0(%r12)
	movq %r12,%rsp
	addq $0x8,%rsp
	movq %r9,0x0(%rsp)
	movq %r8,0x8(%rsp)
	addq $0x18,%r12
	movq %r13,%r9
	shrq $0x8,%r9
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r9,1)
	movq %rsp,0x0(%r13)
	xchgq %r10,%r14
	movq %r11,%r13
L_262439:
	movq 0x20(%rbp),%r11
	movq 0x10(%r11),%r10
	movl 0x0(%r10),%r9d
	testl %r9d,%r9d
	jnz L_262434
L_262440:
	movl $0x1,0x0(%r13)
	jmp L_262434
.p2align 0x4
L_487277:
	xchgq %r10,%r14
	movq %r11,%r13
	jmp L_262439
.p2align 0x4
L_487278:
L_262444:
	movq 0x48(%rbp),%r11
	cmpq $0x1,%r11
	je L_487279
L_262445:
	movq %r14,%r15
	movq %r11,%r14
L_262446:
	movq $0x11C5,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x30,%r12
	movl 0x50(%rbp),%r14d
	movl %r14d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq 0x58(%rbp),%r14
	movq %r14,0x10(%r13)
	movq 0x60(%rbp),%r14
	movq %r14,0x18(%r13)
	movq 0x68(%rbp),%r14
	movq %r14,0x20(%r13)
	movq $0x24F1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r15
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_487279:
L_262447:
	movq 0x30(%rbp),%r10
	cmpq $0x1,0x0(%r10)
L_262449:
	movq 0x8(%rbp),%r10
	movq 0x8(%r10),%r15
	movq $0x53,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	addq $0x10,%r12
	movl $0x0,0x0(%r10)
	movl $0x0,0x4(%r10)
	movq $0x5C7,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	addq $0x18,%r12
	movq %r10,0x0(%r9)
	movq $0x1,0x8(%r9)
	movq 0x28(%rbp),%r8
	movl 0x0(%r8),%esp
	testl %esp,%esp
	jz L_487281
L_262454:
	movq $0x11D3,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	addq $0x20,%r12
	movb $0x3,%spl
	movzbl %spl,%esi
	movl %esi,0x0(%r8)
	movl $0x0,0x4(%r8)
	movq %r9,0x8(%r8)
	movq 0x68(%rbp),%rsp
	movq %rsp,0x10(%r8)
	movq 0x0(%r15),%rsp
	movq $0x24DD,0x0(%r12)
	movq %r12,%rsi
	addq $0x8,%rsi
	movq %r8,0x0(%rsi)
	movq %rsp,0x8(%rsi)
	addq $0x18,%r12
	movq %r15,%r8
	shrq $0x8,%r8
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r8,1)
	movq %rsi,0x0(%r15)
	movq %r14,%r15
	movq %r9,%r14
	xchgq %r10,%r13
L_262451:
	movq 0x20(%rbp),%r11
	movq 0x10(%r11),%r10
	movl 0x0(%r10),%r9d
	testl %r9d,%r9d
	jnz L_262446
L_262452:
	movl $0x1,0x0(%r13)
	jmp L_262446
.p2align 0x4
L_487281:
	movq %r14,%r15
	movq %r9,%r14
	xchgq %r10,%r13
	jmp L_262451
.p2align 0x4
L_487282:
L_262456:
	movq 0x58(%rbp),%r15
	movl 0x0(%r15),%r14d
	testl %r14d,%r14d
	jz new_51
L_262469:
	movq 0x38(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x98(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x70(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x80(%rbp)
	movq %r14,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_262470+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_0
.p2align 0x4
new_51:
new_16:
	movq 0x40(%rbp),%r14
	movq 0x0(%r14),%r15
	movq $0x24DB,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x10(%rbp),%r11
	movq %r11,0x0(%r13)
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	movq 0x48(%rbp),%r15
	cmpq $0x1,%r15
	je L_487283
L_262458:
L_262459:
	movq $0x11C5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x30,%r12
	movl 0x50(%rbp),%r15d
	movl %r15d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x58(%rbp),%r15
	movq %r15,0x10(%r14)
	movq 0x60(%rbp),%r15
	movq %r15,0x18(%r14)
	movq 0x68(%rbp),%r15
	movq %r15,0x20(%r14)
	movq $0x24F1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_487283:
L_262460:
	movq 0x30(%rbp),%r13
	cmpq $0x1,0x0(%r13)
L_262462:
	movq 0x8(%rbp),%r13
	movq 0x8(%r13),%r14
	movq $0x53,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movl $0x0,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq $0x5C7,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x18,%r12
	movq %r13,0x0(%r11)
	movq $0x1,0x8(%r11)
	movq 0x28(%rbp),%r10
	movl 0x0(%r10),%r9d
	testl %r9d,%r9d
	jz L_487285
L_262467:
	movq $0x11D3,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	addq $0x20,%r12
	movb $0x3,%r9b
	movzbl %r9b,%r8d
	movl %r8d,0x0(%r10)
	movl $0x0,0x4(%r10)
	movq %r11,0x8(%r10)
	movq 0x68(%rbp),%r9
	movq %r9,0x10(%r10)
	movq 0x0(%r14),%r9
	movq $0x24DD,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r10,0x0(%r8)
	movq %r9,0x8(%r8)
	addq $0x18,%r12
	movq %r14,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r8,0x0(%r14)
	xchgq %r11,%r15
	movq %r13,%r14
L_262464:
	movq 0x20(%rbp),%r13
	movq 0x10(%r13),%r11
	movl 0x0(%r11),%r10d
	testl %r10d,%r10d
	jnz L_262459
L_262465:
	movl $0x1,0x0(%r14)
	jmp L_262459
.p2align 0x4
L_487285:
	xchgq %r11,%r15
	movq %r13,%r14
	jmp L_262464
.p2align 0x4
L_487287:
L_262478:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_262479
L_262480:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_262481+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_262481
.p2align 0x4
.long 0x72D
L_262481:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_262479:
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	jmp L_262430
.p2align 0x4
.long 0x72A
L_262470:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movb 0x90(%rbp),%r15b
	movb %r15b,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_262471
L_262474:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_262475+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_262475
.p2align 0x4
.long 0x72B
L_262475:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_262471:
	movb 0x38(%rbp),%r15b
	testb %r15b,%r15b
	jz new_16
L_262473:
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x20E7,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x0(%r15)
	movq $0x1943,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x80(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	movq %r13,0x8(%r10)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%r11,%r15,1)
	movq %r10,0x0(%r14)
	jmp new_16
