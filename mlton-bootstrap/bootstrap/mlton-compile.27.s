/* MLton 20130715 (built Mon Jun 13 11:54:01 AEST 2016 on ports.extensibl.com) */
/*   created this file on Mon Jun 13 12:08:58 2016. */
/* Do not edit this file. */
/* Flag settings:  */
/*    align: 8 */
/*    atMLtons: (mlton-compile, @MLton, --) */
/*    chunk: chunk per function */
/*    closureConvertGlobalize: true */
/*    closureConvertShrink: true */
/*    codegen: amd64 */
/*    contifyIntoMain: false */
/*    debug: false */
/*    defaultChar: char8 */
/*    defaultWideChar: widechar32 */
/*    defaultInt: int32 */
/*    defaultReal: real64 */
/*    defaultWord: word32 */
/*    diag passes: [] */
/*    drop passes: [] */
/*    elaborate allowConstant (default): false */
/*    elaborate allowConstant (enabled): true */
/*    elaborate allowFFI (default): false */
/*    elaborate allowFFI (enabled): true */
/*    elaborate allowPrim (default): false */
/*    elaborate allowPrim (enabled): true */
/*    elaborate allowOverload (default): false */
/*    elaborate allowOverload (enabled): true */
/*    elaborate allowRebindEquals (default): false */
/*    elaborate allowRebindEquals (enabled): true */
/*    elaborate deadCode (default): false */
/*    elaborate deadCode (enabled): true */
/*    elaborate forceUsed (default): false */
/*    elaborate forceUsed (enabled): true */
/*    elaborate ffiStr (default):  */
/*    elaborate ffiStr (enabled): true */
/*    elaborate nonexhaustiveExnMatch (default): default */
/*    elaborate nonexhaustiveExnMatch (enabled): true */
/*    elaborate nonexhaustiveMatch (default): warn */
/*    elaborate nonexhaustiveMatch (enabled): true */
/*    elaborate redundantMatch (default): warn */
/*    elaborate redundantMatch (enabled): true */
/*    elaborate resolveScope (default): strdec */
/*    elaborate resolveScope (enabled): true */
/*    elaborate sequenceNonUnit (default): warn */
/*    elaborate sequenceNonUnit (enabled): true */
/*    elaborate warnUnused (default): true */
/*    elaborate warnUnused (enabled): true */
/*    elaborate only: false */
/*    emit main: true */
/*    export header: None */
/*    exn history: false */
/*    generated output format: executable */
/*    gc check: Limit */
/*    indentation: 3 */
/*    inlineIntoMain: true */
/*    inlineLeafA: {loops = true, repeat = true, size = Some 20} */
/*    inlineLeafB: {loops = true, repeat = true, size = Some 40} */
/*    inlineNonRec: {small = 60, product = 320} */
/*    input file: mlton */
/*    keep CoreML: false */
/*    keep def use: true */
/*    keep dot: false */
/*    keep Machine: false */
/*    keep passes: [] */
/*    keep RSSA: false */
/*    keep SSA: false */
/*    keep SSA2: false */
/*    keep SXML: false */
/*    keep XML: false */
/*    extra_: false */
/*    lib dir: /usr/ports/pobj/mlton-20130715/mlton-on-20130715-release/build/lib */
/*    lib target dir: /usr/ports/pobj/mlton-20130715/mlton-on-20130715-release/build/lib/targets/self */
/*    loop passes: 1 */
/*    mark cards: true */
/*    max function size: 10000 */
/*    mlb path vars: [{var = MLTON_ROOT, path = $(LIB_MLTON_DIR)/sml}, {var = SML_LIB, path = $(LIB_MLTON_DIR)/sml}] */
/*    native commented: 0 */
/*    native live stack: false */
/*    native optimize: 1 */
/*    native move hoist: true */
/*    native copy prop: true */
/*    native copy prop cutoff: 1000 */
/*    native cutoff: 100 */
/*    native live transfer: 8 */
/*    native shuffle: true */
/*    native ieee fp: false */
/*    native split: Some 20000 */
/*    optimizationPasses: [<ssa2::default>, <ssa::default>, <sxml::default>, <xml::default>] */
/*    polyvariance: Some {hofo = true, rounds = 2, small = 30, product = 300} */
/*    prefer abs paths: false */
/*    prof passes: [] */
/*    profile: None */
/*    profile branch: false */
/*    profile C: [] */
/*    profile IL: ProfileSource */
/*    profile include/exclude: [(Seq [Star [.], Or [Seq [Seq [[$], [(], [S], [M], [L], [_], [L], [I], [B], [)]]]], Star [.]], false)] */
/*    profile raise: false */
/*    profile stack: false */
/*    profile val: false */
/*    show basis: None */
/*    show def-use: None */
/*    show types: true */
/*    target: self */
/*    target arch: AMD64 */
/*    target OS: OpenBSD */
/*    type check: false */
/*    verbosity: Pass */
/*    warn unrecognized annotation: true */
/*    warn deprecated features: true */
/*    zone cut depth: 100 */
.text
.p2align 0x4
.globl flattens_0
.hidden flattens_0
flattens_0:
L_84763:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_84875
L_84764:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_408991
L_84765:
	movq 0x10(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x30(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_84767
L_84768:
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%ecx
	movslq %ecx,%r11
	cmpq %r14,%r11
	jne L_408989
L_84770:
	cmpl %r13d,%ecx
	jne L_84772
L_84773:
	cmpl $0x0,%r13d
	jl L_408987
L_84774:
	movq $0x1,0x10(%rbp)
	xorl %ecx,%ecx
loop_990:
	cmpl 0x30(%rbp),%ecx
	jnl L_408982
L_84787:
	movl %ecx,%r15d
	incl %r15d
	movl %r15d,0x34(%rbp)
	movslq %ecx,%r15
	movq 0x8(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x38(%rbp)
	movq 0x0(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_84788+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_3
.p2align 0x4
L_408982:
L_84775:
	movq $0x19D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x18(%rbp)
	addq $0x10,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	cmpq $0x1,%r13
	je L_408986
L_84776:
	movq 0x8(%r13),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_84777:
	incl %ecx
	movl %ecx,0x20(%rbp)
	jo L_408985
L_84779:
	cmpq $0x1,%r15
	je L_408983
L_84780:
	movq 0x8(%r15),%r15
	jmp L_84777
.p2align 0x4
L_408983:
L_84781:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_84782
L_84784:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_84785+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_84785
.p2align 0x4
.long 0x49C
L_84785:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_84782:
	movl 0x20(%rbp),%ecx
L_84783:
	movl %ecx,0x8(%rbp)
	movq $0x4009,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	jmp unfoldi_3
.p2align 0x4
L_408985:
L_84778:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_408986:
L_84786:
	xorl %ecx,%ecx
	jmp L_84783
.p2align 0x4
L_408987:
L_84772:
	movq (globalObjptr+0xCF8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_408989:
L_84767:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_408991:
L_84875:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_84876+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_84876
.p2align 0x4
.long 0x45B
L_84876:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_84765
.p2align 0x4
.long 0x11C5
L_84788:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_84789
L_84872:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_84873+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_84873
.p2align 0x4
.long 0x11CC
L_84873:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_84789:
	movq 0x40(%rbp),%r11
	movq 0x0(%r11),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1450,%r14
	jne L_409011
L_84791:
	cmpq $0x1,0x8(%r15)
	je L_409010
L_84792:
	movq 0x18(%rbp),%r11
	movq 0x8(%r11),%r14
	movq 0x0(%r11),%r10
	movq %r10,0x40(%rbp)
	movq 0x38(%rbp),%r11
	movq 0x10(%r11),%r10
	movq %r10,0x48(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_409009
L_84794:
	movq %r15,0x0(%r11)
	movq 0x0(%r10),%r11
	cmpq $0x1,%r11
	je L_409008
L_84795:
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r11
	xorl %ecx,%ecx
	movq %r11,%r15
.p2align 0x4,,0x7
L_84797:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_409007
L_84863:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xD05,%r11
	jne L_409006
L_84864:
	movq 0x8(%r13),%r11
	cmpq 0x0(%r13),%r14
	movq %r14,(localObjptr+0x0)(%rip)
	je L_408998
L_84798:
	incl %ecx
	movl %ecx,0x50(%rbp)
	jo L_84778
L_84799:
	cmpq $0x1,%r15
	je L_408993
L_84800:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x0)(%rip),%r14
	jmp L_84797
.p2align 0x4
L_408993:
L_84801:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_84802
L_84861:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_84862+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_84862
.p2align 0x4
.long 0x11CB
L_84862:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_84802:
	movl 0x50(%rbp),%ecx
L_84803:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_408995
L_84805:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_84807
L_84860:
	movl %ecx,0x0(%r15)
L_84807:
	movq $0x27BB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x28A1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x72B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x50(%rbp)
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_84808+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_3
.p2align 0x4
L_408995:
L_84804:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_408998:
L_84866:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_84804
L_84867:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_409004
L_84869:
	movl %ecx,0x0(%r14)
	movq %r11,%r15
L_84819:
	movq 0x0(%r15),%r14
	movq 0x0(%r14),%r13
L_84820:
	movq %r13,%r15
	movq %r13,0x40(%rbp)
	andq $0x3,%r15
	jz L_408999
L_84821:
	movq 0x38(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_84822+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_408999:
L_84843:
	movq 0x40(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x38(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_84767
L_84845:
	cmpl $0x0,%r13d
	jl L_409002
L_84846:
	movl $0x0,0x3C(%rbp)
.p2align 0x4,,0x7
loop_991:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_409001
.p2align 0x4,,0x7
L_84847:
	movl 0x3C(%rbp),%r15d
	cmpl 0x38(%rbp),%r15d
	jnl L_409000
L_84849:
	movslq %r15d,%r14
	movq 0x40(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r11
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r11,0x0(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x8(%r14)
	movq %r14,0x10(%rbp)
	incl %r15d
	movl %r15d,0x3C(%rbp)
	jmp loop_991
.p2align 0x4
L_409000:
L_84848:
	movl 0x34(%rbp),%ecx
	jmp loop_990
.p2align 0x4
L_409001:
L_84850:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_84851+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_84851
.p2align 0x4
.long 0x975
L_84851:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_84847
.p2align 0x4
L_409002:
L_84852:
	movq (globalObjptr+0x4F8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_409004:
L_84868:
	movq %r11,%r15
	jmp L_84819
.p2align 0x4
L_409006:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_84798
.p2align 0x4
L_409007:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_84798
.p2align 0x4
L_409008:
L_84870:
	xorl %ecx,%ecx
	jmp L_84803
.p2align 0x4
L_409009:
L_84793:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_409010:
L_84871:
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x10(%rbp)
	movl 0x34(%rbp),%ecx
	jmp loop_990
.p2align 0x4
L_409011:
L_84790:
	movq (globalObjptr+0x1500)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x11C6
L_84808:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_84809
L_84858:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_84859+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_84859
.p2align 0x4
.long 0x11CA
L_84859:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_84809:
	movq 0x58(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1450,%r15
	jne L_84790
L_84810:
	movq 0x8(%r14),%r15
	movq %r15,0x58(%rbp)
	cmpq $0x1,%r15
	je L_409013
L_84811:
	movq 0x50(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_84812+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_3
.p2align 0x4
L_409013:
L_84818:
	movq $0x13C9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13CB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x8(%r14)
	movq $0x1A0B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x48(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r10,0x0(%r13)
	movq %r14,%r15
	jmp L_84819
.p2align 0x4
.long 0x11C7
L_84822:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_84823
L_84841:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_84842+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_84842
.p2align 0x4
.long 0x11C8
L_84842:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_84823:
	movq $0x3B83,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x20(%rbp)
	movl 0x30(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_84824+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
.long 0x4B8
L_84812:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_84813
L_84855:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_84856+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_84856
.p2align 0x4
.long 0x4DB
L_84856:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_84813:
	movq 0x60(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x1450,%r13
	jne L_409017
L_84815:
	movl 0x0(%r14),%r13d
	movq $0x28A1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %r13d,0x0(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1,0x8(%r14)
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x60(%rbp)
	movb $0xD,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_84816+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3819
.p2align 0x4
L_409017:
L_84814:
	movq (globalObjptr+0x1508)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x2B
L_84824:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x28(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0x30(%rbp)
	movq (globalObjptr+0xD0F8)(%rip),%r15
	movq %r15,0x38(%rbp)
	addq $0x20,%rbp
	leaq (toString_115+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
.long 0x11C6
L_84816:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_84818
L_84853:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_84854+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_84854
.p2align 0x4
.long 0x11C9
L_84854:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	jmp L_84818
.p2align 0x4
.long 0x2B
toString_115:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq $0x1,0x20(%rbp)
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (rev_115+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x2B
rev_115:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq $0x1,%r15
	je L_409022
L_84825:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x18(%rbp)
	movq %r14,0x20(%rbp)
	movq $0x1,0x28(%rbp)
.p2align 0x4,,0x7
L_84826:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_409021
.p2align 0x4,,0x7
L_84827:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_409020
L_84828:
	movq %r15,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_84826
.p2align 0x4
L_409020:
L_84830:
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_84831+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_409021:
L_84838:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_84839+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_84839
.p2align 0x4
.long 0x51F
L_84839:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_84827
.p2align 0x4
L_409022:
L_84840:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_84830
.p2align 0x4
.long 0x2B
L_84831:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_84832
L_84836:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_84837+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_84837
.p2align 0x4
.long 0x2C
L_84837:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_84832:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xF0E0)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_235+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x1
bug_235:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_84833
L_84834:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_84835+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_84835
.p2align 0x4
.long 0x451
L_84835:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_84833:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl gotoMeaning_0
.hidden gotoMeaning_0
gotoMeaning_0:
L_84877:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_84997
L_84878:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_409068
L_84879:
	movq 0x0(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x30(%rbp)
loop_992:
	movq 0x18(%rbp),%r15
	movq 0x60(%r15),%r14
	movq 0x58(%r15),%r13
	movq 0x50(%r15),%r11
	movq 0x48(%r15),%r10
	movq %r10,0x38(%rbp)
	movq 0x40(%r15),%r10
	movq 0x38(%r15),%r9
	movq %r9,0x40(%rbp)
	movq 0x30(%r15),%r9
	movq %r9,0x48(%rbp)
	movq 0x28(%r15),%r9
	movq %r9,0x50(%rbp)
	movq 0x28(%rbp),%r15
	movl 0x0(%r15),%r8d
	movq 0x10(%r15),%rsp
	movslq %r8d,%r15
	movl %r8d,0x58(%rbp)
	cmpq 0xFFFFFFFFFFFFFFF0(%r9),%r15
	jnb L_84881
L_84882:
	movl 0x0(%r9,%r15,4),%r8d
	movl %r8d,0x5C(%rbp)
	movq $0x957,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r9,0x60(%rbp)
	movq %r10,0x0(%r9)
	addq $0x18,%r12
	movq 0x20(%rbp),%r10
	movq %r10,0x8(%r9)
	cmpq $0x1,%rsp
	je L_409066
	cmpq $0x2,%rsp
	je L_409065
L_84883:
	movq 0xFFFFFFFFFFFFFFF8(%rsp),%r10
	shrq $0x1,%r10
	cmpq $0xEDF,%r10
	je L_409057
	cmpq $0xEE0,%r10
	je L_409040
	cmpq $0xEE1,%r10
	je L_409032
L_84884:
	movq 0x8(%rsp),%r10
	movq %r10,0x38(%rbp)
	movq 0x0(%rsp),%r9
	movq %r9,0x40(%rbp)
	cmpq $0x1,%r10
	je L_409031
L_84885:
	movq 0x30(%rbp),%r10
	cmpq $0x1,%r10
	je L_409030
L_84886:
	movq 0x8(%r10),%r9
	movq %r9,0x48(%rbp)
	movq 0x0(%r10),%r9
	movq %r9,0x50(%rbp)
	movq $0x1,0x58(%rbp)
.p2align 0x4,,0x7
L_84887:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_409029
.p2align 0x4,,0x7
L_84888:
	movq $0x1DB9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_409025
L_84889:
	movq %r15,0x58(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	movq %r15,0x50(%rbp)
	jmp L_84887
.p2align 0x4
L_409025:
L_84890:
	movq 0x58(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x58(%rbp)
.p2align 0x4,,0x7
L_84891:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_409028
.p2align 0x4,,0x7
L_84892:
	movq $0x1DB9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_409026
L_84893:
	movq %r15,0x58(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	movq %r15,0x50(%rbp)
	jmp L_84891
.p2align 0x4
L_409026:
L_84894:
	movq %r15,0x48(%rbp)
L_84895:
	movq 0x40(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_409027
L_84898:
	movq $0x3FFB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x60(%rbp),%r11
	movq %r11,0x0(%r14)
	movl %r13d,0x60(%rbp)
	movq %r15,0x8(%r14)
	movq %r14,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_84899+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
L_409027:
L_84897:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_409028:
L_84903:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_84904+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_84904
.p2align 0x4
.long 0x6FA
L_84904:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_84892
.p2align 0x4
L_409029:
L_84905:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_84906+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_84906
.p2align 0x4
.long 0x11CD
L_84906:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_84888
.p2align 0x4
L_409030:
L_84907:
	movq 0x38(%rbp),%r15
	movq %r15,0x48(%rbp)
	jmp L_84895
.p2align 0x4
L_409031:
L_84908:
	movq 0x30(%rbp),%r15
	movq %r15,0x48(%rbp)
	jmp L_84895
.p2align 0x4
L_409032:
L_84975:
	movq 0x10(%rsp),%r15
	movq %r15,0x60(%rbp)
	movq 0x8(%rsp),%r15
	movq %r15,0x68(%rbp)
	movq 0x0(%rsp),%r15
	movq %r15,0x70(%rbp)
	cmpq $0x1,%r15
	je L_409039
L_84976:
	movq 0x30(%rbp),%r15
	cmpq $0x1,%r15
	je L_409038
L_84977:
	movq 0x8(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x80(%rbp)
	movq $0x1,0x88(%rbp)
.p2align 0x4,,0x7
L_84978:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_409037
.p2align 0x4,,0x7
L_84979:
	movq $0x1DB9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x80(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x88(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x78(%rbp),%r14
	cmpq $0x1,%r14
	je L_409033
L_84980:
	movq %r15,0x88(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x78(%rbp)
	movq %r15,0x80(%rbp)
	jmp L_84978
.p2align 0x4
L_409033:
L_84981:
	movq 0x80(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x70(%rbp)
.p2align 0x4,,0x7
L_84982:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_409036
.p2align 0x4,,0x7
L_84983:
	movq $0x1DB9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x80(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x70(%rbp),%r14
	cmpq $0x1,%r14
	je L_409034
L_84984:
	movq %r15,0x80(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x70(%rbp)
	movq %r15,0x78(%rbp)
	jmp L_84982
.p2align 0x4
L_409034:
L_84986:
	movq 0x20(%rbp),%r14
	cmpq $0x0,0xFFFFFFFFFFFFFFF0(%r14)
	jna L_409035
L_84988:
	movq 0x0(%r14),%r13
	movq %r13,0x0(%rbp)
	movq $0x40AF,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x50,%r12
	movl 0x5C(%rbp),%r11d
	movl %r11d,0x0(%r13)
	movl 0x58(%rbp),%r11d
	movl %r11d,0x4(%r13)
	movq 0x50(%rbp),%r11
	movq %r11,0x8(%r13)
	movq 0x48(%rbp),%r11
	movq %r11,0x10(%r13)
	movq %r14,0x18(%r13)
	movq 0x40(%rbp),%r14
	movq %r14,0x20(%r13)
	movq 0x30(%rbp),%r14
	movq %r14,0x28(%r13)
	movq 0x18(%rbp),%r14
	movq %r14,0x30(%r13)
	movq %r14,0x38(%r13)
	movq 0x28(%rbp),%r11
	movq %r11,0x40(%r13)
	movq %r13,0x20(%rbp)
	movq $0x40AB,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq %r11,0x0(%r13)
	movq %r15,0x28(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x8(%r13)
	movq %r13,0x8(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq %r14,0x30(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x18(%rbp)
	jmp simplifyCase_0
.p2align 0x4
L_409035:
L_84881:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_409036:
L_84989:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_84990+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_84990
.p2align 0x4
.long 0x11D0
L_84990:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	jmp L_84983
.p2align 0x4
L_409037:
L_84991:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_84992+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_84992
.p2align 0x4
.long 0x11D1
L_84992:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	jmp L_84979
.p2align 0x4
L_409038:
L_84993:
	movq 0x70(%rbp),%r14
	xchgq %r14,%r15
	jmp L_84986
.p2align 0x4
L_409039:
L_84994:
	movq 0x30(%rbp),%r15
	jmp L_84986
.p2align 0x4
L_409040:
L_84933:
	movq 0x10(%rsp),%r10
	movq %r10,0x38(%rbp)
	movq 0x8(%rsp),%r9
	movq %r9,0x68(%rbp)
	movq 0x0(%rsp),%r8
	movq %r8,0x70(%rbp)
	cmpq 0xFFFFFFFFFFFFFFF0(%r11),%r15
	jnb L_84881
L_84935:
	movl 0x0(%r11,%r15,4),%r8d
	testl %r8d,%r8d
	jnz L_84973
L_84936:
	cmpq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	jnb L_84881
L_84938:
	movl 0x0(%r13,%r15,4),%r11d
	testl %r11d,%r11d
	jnz L_409053
L_84939:
	movl 0x5C(%rbp),%r13d
	decl %r13d
	jo L_84940
L_84941:
	movq 0x50(%rbp),%r11
	movl %r13d,0x0(%r11,%r15,4)
	cmpl $0x0,%r13d
	jng L_409050
L_84967:
	movq 0x8(%r14),%r15
	movslq 0x0(%r10),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	jnb L_84881
L_84969:
	movl 0x0(%r15,%r14,4),%r13d
	incl %r13d
	jo L_409048
L_84970:
	movl %r13d,0x0(%r15,%r14,4)
	cmpq $0x1,%r9
	je L_409047
L_84943:
	movq 0x30(%rbp),%r15
	cmpq $0x1,%r15
	je L_409046
L_84944:
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq $0x1,0x30(%rbp)
.p2align 0x4,,0x7
L_84945:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_409045
.p2align 0x4,,0x7
L_84946:
	movq $0x1DB9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_409041
L_84947:
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x28(%rbp)
	jmp L_84945
.p2align 0x4
L_409041:
L_84948:
	movq 0x30(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x30(%rbp)
.p2align 0x4,,0x7
L_84949:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_409044
.p2align 0x4,,0x7
L_84950:
	movq $0x1DB9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_409042
L_84951:
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x28(%rbp)
	jmp L_84949
.p2align 0x4
L_409042:
L_84952:
	movq %r15,0x20(%rbp)
L_84953:
	movq 0x70(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_84897
L_84955:
	movl %r13d,0x50(%rbp)
	movq $0x3925,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x60(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_84956+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_23
.p2align 0x4
L_409044:
L_84960:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_84961+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_84961
.p2align 0x4
.long 0x11CE
L_84961:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	jmp L_84950
.p2align 0x4
L_409045:
L_84962:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_84963+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_84963
.p2align 0x4
.long 0x11CF
L_84963:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	jmp L_84946
.p2align 0x4
L_409046:
L_84964:
	movq 0x68(%rbp),%r14
	movq %r14,0x20(%rbp)
	jmp L_84953
.p2align 0x4
L_409047:
L_84966:
	movq 0x30(%rbp),%r15
	movq %r15,0x20(%rbp)
	jmp L_84953
.p2align 0x4
L_409048:
L_84940:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_409050:
L_84942:
	cmpq $0x1,%r9
	je L_84966
	jmp L_84943
.p2align 0x4
L_409053:
L_84973:
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq %r15,0x10(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x30(%rbp)
	movl 0x58(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	movl 0x5C(%rbp),%r15d
	movl %r15d,0x48(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x40(%rbp)
	jmp normal_18
.p2align 0x4
L_409057:
L_84909:
	movq 0x8(%rsp),%r15
	movq %r15,0x38(%rbp)
	movq 0x0(%rsp),%r14
	movq %r14,0x40(%rbp)
	cmpq $0x1,%r15
	je L_409064
L_84910:
	movq 0x30(%rbp),%r15
	cmpq $0x1,%r15
	je L_409063
L_84911:
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movq $0x1,0x58(%rbp)
.p2align 0x4,,0x7
L_84912:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_409062
.p2align 0x4,,0x7
L_84913:
	movq $0x1DB9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_409058
L_84914:
	movq %r15,0x58(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	movq %r15,0x50(%rbp)
	jmp L_84912
.p2align 0x4
L_409058:
L_84915:
	movq 0x58(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x58(%rbp)
.p2align 0x4,,0x7
L_84916:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_409061
.p2align 0x4,,0x7
L_84917:
	movq $0x1DB9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_409059
L_84918:
	movq %r15,0x58(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	movq %r15,0x50(%rbp)
	jmp L_84916
.p2align 0x4
L_409059:
L_84919:
	movq %r15,0x48(%rbp)
L_84920:
	movq 0x40(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_84897
L_84922:
	movq $0x4017,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x60(%rbp),%r11
	movq %r11,0x0(%r14)
	movl %r13d,0x60(%rbp)
	movq %r15,0x8(%r14)
	movq %r14,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_84923+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
L_409061:
L_84927:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_84928+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_84928
.p2align 0x4
.long 0x6FA
L_84928:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_84917
.p2align 0x4
L_409062:
L_84929:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_84930+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_84930
.p2align 0x4
.long 0x11CD
L_84930:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_84913
.p2align 0x4
L_409063:
L_84931:
	movq 0x38(%rbp),%r14
	movq %r14,0x48(%rbp)
	jmp L_84920
.p2align 0x4
L_409064:
L_84932:
	movq 0x30(%rbp),%r15
	movq %r15,0x48(%rbp)
	jmp L_84920
.p2align 0x4
L_409065:
L_84996:
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq %r15,0x10(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x30(%rbp)
	movl 0x58(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	movl 0x5C(%rbp),%r15d
	movl %r15d,0x48(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x40(%rbp)
	jmp normal_18
.p2align 0x4
L_409066:
L_84995:
	movq $0x1,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_409068:
L_84997:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_84998+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_84998
.p2align 0x4
.long 0x4AE
L_84998:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	jmp L_84879
.p2align 0x4
.long 0x90C
L_84899:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_84900
L_84901:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_84902+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_84902
.p2align 0x4
.long 0x9BB
L_84902:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_84900:
	movq $0x1D7D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x5E3
L_84956:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_84957
L_84958:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_84959+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_84959
.p2align 0x4
.long 0x5E6
L_84959:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_84957:
	movq 0x20(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp loop_992
.p2align 0x4
.long 0x90C
L_84923:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_84924
L_84925:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_84926+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_84926
.p2align 0x4
.long 0x9BB
L_84926:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_84924:
	movq $0x1D7F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl normal_18
.hidden normal_18
normal_18:
L_84999:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_85000
L_85033:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_85034+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_85034
.p2align 0x4
.long 0x11D4
L_85034:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_85000:
	cmpl $0x1,0x48(%rbp)
	je L_409073
L_85001:
	movq 0x0(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_85002+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp forceMeaningBlock_1
.p2align 0x4
L_409073:
L_85016:
	movslq 0x38(%rbp),%r15
	movq 0x40(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_85005
L_85018:
	movl $0x0,0x0(%r14,%r15,4)
	movq 0x30(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_409079
L_85020:
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x38(%rbp)
	movq 0x18(%r13),%r15
	movq %r15,0x40(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x48(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_85008
L_85022:
	movq 0x28(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%ecx
	movslq %ecx,%r11
	cmpq %r11,%r14
	jne L_409077
L_85024:
	cmpl %ecx,%r13d
	jne L_85026
L_85027:
	cmpl $0x0,%r13d
	jl L_409075
L_85028:
	xorl %ecx,%ecx
loop_993:
	cmpl 0x48(%rbp),%ecx
	jnl L_409074
L_85030:
	movl %ecx,%r15d
	incl %r15d
	movl %r15d,0x30(%rbp)
	movslq %ecx,%r15
	movq 0x28(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x58(%rbp)
	movq 0x40(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x60(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x58,%rbp
	leaq (L_85031+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1429
.p2align 0x4
L_409074:
L_85029:
	movq 0x38(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp simplifyBlock_0
.p2align 0x4
L_409075:
L_85026:
	movq (globalObjptr+0xCF8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_409077:
L_85008:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_409079:
L_85005:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1050
L_85002:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_85003
L_85014:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_85015+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_85015
.p2align 0x4
.long 0x11D2
L_85015:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_85003:
	movslq 0x38(%rbp),%r15
	movq 0x30(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_85005
L_85006:
	movq 0x0(%r14,%r15,8),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x20(%rbp)
	movq 0x28(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_85008
L_85009:
	movl %r13d,0x38(%rbp)
	movq $0x4015,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq %r14,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_85010+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
.long 0x11D3
L_85031:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movl 0x30(%rbp),%ecx
	jmp loop_993
.p2align 0x4
.long 0x519
L_85010:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_85011
L_85012:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_85013+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_85013
.p2align 0x4
.long 0x51C
L_85013:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_85011:
	movq $0x1D81,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x0(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl simplifyBlock_0
.hidden simplifyBlock_0
simplifyBlock_0:
L_85035:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_85036
L_85663:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_85664+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_85664
.p2align 0x4
.long 0x45B
L_85664:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_85036:
	movq 0x10(%rbp),%r15
	movq 0xA8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0xA0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x98(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x40(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x8(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x50(%rbp)
	cmpq %r15,%rdx
	movq %r14,0x48(%rbp)
	jne L_85038
L_85039:
	testq %rdx,%rdx
	jz L_409151
L_85040:
	cmpq $0x7FFFFFFF,%rdx
	ja L_409150
L_85041:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x153D,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_85042+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_85042
.p2align 0x4
.long 0xB67
L_85042:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq %rax,0x58(%rbp)
L_85043:
	movq $0x0,0x60(%rbp)
.p2align 0x4,,0x7
loop_994:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_409149
.p2align 0x4,,0x7
L_85044:
	movq 0x60(%rbp),%r15
	cmpq 0x50(%rbp),%r15
	jnl L_409099
L_85449:
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x48(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x68(%rbp)
	movq 0x8(%r13),%r10
	movq %r10,0x70(%rbp)
	movq 0x10(%r13),%r10
	movq %r10,0x78(%rbp)
	cmpq $0x1,%r11
	jne L_409098
.p2align 0x4,,0x7
L_85452:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_409097
.p2align 0x4,,0x7
L_85453:
	movq 0x78(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xEB6,%r15
	je L_409096
	cmpq $0xEB7,%r15
	je L_409094
	cmpq $0xEB8,%r15
	je L_409093
	cmpq $0xEBA,%r15
	je L_409091
	cmpq $0xEBB,%r15
	je L_409089
	cmpq $0xEBC,%r15
	je L_409087
L_85454:
	movq $0xA15,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x80(%rbp)
	addq $0x18,%r12
	movq 0x70(%rbp),%r11
	movq %r11,0x0(%r13)
	movq %r14,0x8(%r13)
	cmpq $0x1,0x68(%rbp)
	jne L_409086
L_85461:
	movq $0x3E23,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r14,0x0(%r15)
	movq %r11,0x8(%r15)
.p2align 0x4,,0x7
L_85458:
	movq 0x58(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x60(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x60(%rbp)
	jmp loop_994
.p2align 0x4
L_409086:
L_85455:
	movq 0x68(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x90,%rbp
	leaq (L_85456+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1388
.p2align 0x4
L_409087:
L_85643:
	movq 0x8(%r14),%r15
	movq %r15,0x80(%rbp)
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_409088
L_85645:
	movl %r13d,0x98(%rbp)
	movq $0x391D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_85646+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_23
.p2align 0x4
L_409088:
L_85038:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_409089:
L_85636:
	movq 0x0(%r14),%r15
	movq $0x27ED,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x80(%rbp)
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	cmpq $0x1,0x68(%rbp)
	jne L_409090
.p2align 0x4,,0x7
L_85466:
	movq $0x1,%r15
	jmp L_85458
.p2align 0x4
L_409090:
L_85637:
	movq 0x68(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x90,%rbp
	leaq (L_85638+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1388
.p2align 0x4
L_409091:
L_85559:
	movq 0x10(%r14),%r15
	movq %r15,0x80(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x88(%rbp)
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_85038
L_85561:
	movl %r13d,0xA0(%rbp)
	movq $0x391D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_85562+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_23
.p2align 0x4
L_409093:
L_85541:
	movq 0x8(%r14),%r15
	movq %r15,0x90(%rbp)
	movl 0x0(%r14),%r15d
	movl %r15d,0x80(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x90,%rbp
	leaq (L_85542+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1388
.p2align 0x4
L_409094:
L_85468:
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_85038
L_85470:
	movl %r13d,0x88(%rbp)
	movq $0x391D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_85471+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_23
.p2align 0x4
L_409096:
L_85462:
	movq 0x0(%r14),%r14
	movq %r14,0x78(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_85463+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1388
.p2align 0x4
L_409097:
L_85656:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_85657+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_85657
.p2align 0x4
.long 0x1226
L_85657:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	jmp L_85453
.p2align 0x4
L_409098:
L_85450:
	movq $0x53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x4B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x8E1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0x8E3,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x8(%r11)
	movq %r14,0x18(%r11)
	movq %r15,0x20(%r11)
	addq $0x30,%r12
	movq 0x68(%rbp),%r15
	movq %r15,0x0(%r11)
	movq 0x70(%rbp),%r14
	movq %r14,0x10(%r11)
	movq %r11,0x88(%rbp)
	movq %r15,0x90(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x88,%rbp
	leaq (L_85451+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1429
.p2align 0x4
L_409099:
L_85045:
	movq 0x58(%rbp),%r14
	movq $0x1785,0xFFFFFFFFFFFFFFF8(%r14)
	movq 0x10(%rbp),%r14
	movq 0xF0(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0xE8(%r14),%r11
	movq %r11,0x38(%rbp)
	movq 0xE0(%r14),%r11
	movq %r11,0x48(%rbp)
	movq 0xD8(%r14),%r11
	movq %r11,0x50(%rbp)
	movq 0xD0(%r14),%r15
	movq %r15,0x60(%rbp)
	movq 0x48(%r14),%r15
	movq %r15,0x68(%rbp)
	movq 0x30(%r14),%r15
	movq %r15,0x70(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x78(%rbp)
	movq 0x40(%rbp),%r15
	cmpq $0x1,%r15
	je L_409113
L_85046:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xEBE,%r14
	je L_409111
	cmpq $0xEBF,%r14
	je L_409109
	cmpq $0xEC0,%r14
	je L_409107
	cmpq $0xEC1,%r14
	je L_409106
	cmpq $0xEC2,%r14
	je L_409103
	cmpq $0xEC3,%r14
	je L_409101
L_85047:
	movq 0x10(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r11d
	movslq %r11d,%r10
	cmpq %r15,%r10
	jne L_85038
L_85049:
	movl %r11d,0x90(%rbp)
	movq $0x3FFD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq %r13,0x0(%r15)
	movq %r15,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_85050+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
L_409101:
L_85296:
	movq 0x20(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_85038
L_85298:
	movl %r13d,0x90(%rbp)
	movq $0x391D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_85299+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_23
.p2align 0x4
L_409103:
L_85189:
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r11
	movq %r11,0x18(%rbp)
	movq 0x0(%r15),%r11
	movq %r11,0x20(%rbp)
L_85190:
	movq %r14,%r15
	andq $0x3,%r15
	jz L_409105
L_85191:
	movq %r14,0x10(%rbp)
	movq $0x1,0x30(%rbp)
L_85192:
	movq 0x20(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_85038
L_85194:
	movl %r13d,0x70(%rbp)
	movq $0x3FFD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_85195+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
L_409105:
L_85199:
	movq 0x8(%r14),%r15
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x80(%rbp)
	movq 0x78(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x10(%r14),%r11
	movq %r11,0x40(%rbp)
	movq 0x0(%r14),%r11
	movq %r11,0x48(%rbp)
	movq %r11,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_85200+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_33
.p2align 0x4
L_409106:
L_85184:
	movq 0x10(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_85185+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1388
.p2align 0x4
L_409107:
L_85171:
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r11d
	movslq %r11d,%r10
	cmpq %r15,%r10
	jne L_85038
L_85173:
	movl %r11d,0x90(%rbp)
	movq $0x391D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_85174+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_23
.p2align 0x4
L_409109:
L_85164:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r11d
	movslq %r11d,%r10
	cmpq %r10,%r15
	jne L_85038
L_85166:
	movl %r11d,0x70(%rbp)
	movq $0x3FFD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq %r13,0x0(%r15)
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_85167+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
L_409111:
L_85157:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r11d
	movslq %r11d,%r10
	cmpq %r15,%r10
	jne L_85038
L_85159:
	movl %r11d,0x70(%rbp)
	movq $0x3FFD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq %r13,0x0(%r15)
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_85160+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
L_409113:
L_85448:
	movq $0x1,0x10(%rbp)
	movq $0x1,%r14
	xchgq %r14,%r15
L_85063:
	movq 0x58(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r13,%r10
	jne L_85038
L_85065:
	decl %r11d
	jo L_409147
L_85067:
	movq %r15,0x18(%rbp)
	movl %r11d,0x20(%rbp)
.p2align 0x4,,0x7
loop_995:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_409146
.p2align 0x4,,0x7
L_85068:
	movl 0x20(%rbp),%r15d
	cmpl $0x0,%r15d
	jl L_409139
L_85069:
	movl %r15d,%r14d
	decl %r14d
	movl %r14d,0x24(%rbp)
	movslq %r15d,%r14
	movq 0x58(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	cmpq $0x1,%r13
	je L_409138
L_85070:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%rax
	shrq $0x1,%rax
	subq $0x1F11,%rax
	cmpq $0x8,%rax
	ja L_409114
	leaq jumpTable_215(%rip),%rbx
	jmp *(%rbx,%rax,8)
.data
.p2align 0x4
jumpTable_215:
.quad L_409137,L_409135,L_409133,L_409128,L_409126,L_409124,L_409121,L_409118,L_409116
.text
.p2align 0x4
L_409114:
L_85071:
	movq 0x8(%r13),%r15
	movq 0x0(%r13),%r14
	movq 0x10(%r13),%r11
	movl 0x0(%r11),%r10d
	testl %r10d,%r10d
	jz L_409115
L_85073:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq $0x9D9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r11,0x8(%r14)
	movq %r13,0x10(%r14)
	addq $0x20,%r12
	movq $0x1DB9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x18(%rbp)
	movl 0x24(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	jmp loop_995
.p2align 0x4
L_409115:
L_85072:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq $0x9D9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x8(%r14)
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movq $0x1,0x0(%r14)
	movq $0x1DB9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x18(%rbp)
	movl 0x24(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	jmp loop_995
.p2align 0x4
L_409116:
L_85130:
	movq 0x10(%r13),%r15
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r11
	movq 0x18(%r13),%r10
	movl 0x0(%r10),%r9d
	testl %r9d,%r9d
	jz L_409117
L_85132:
	movq $0x9D9,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r11,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x20,%r12
	movq $0x1DB9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x18(%rbp)
	movl 0x24(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	jmp loop_995
.p2align 0x4
L_409117:
L_85131:
	movl 0x24(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	jmp loop_995
.p2align 0x4
L_409118:
L_85121:
	movq 0x10(%r13),%r15
	movq %r15,0x28(%rbp)
	movq 0x8(%r13),%r15
	movq 0x0(%r13),%r14
	movq %r14,0x30(%rbp)
	movq 0x18(%r13),%r14
	movl 0x0(%r14),%r11d
	testl %r11d,%r11d
	jnz L_409119
L_85122:
	movl 0x24(%rbp),%r14d
	movl %r14d,0x20(%rbp)
	jmp loop_995
.p2align 0x4
L_409119:
L_85123:
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_85038
L_85125:
	movl %r13d,0x70(%rbp)
	movq $0x4015,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x68(%rbp)
	addq $0x10,%r12
	addq $0x68,%rbp
	leaq (L_85126+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
L_409121:
L_85112:
	movq 0x18(%r13),%r15
	movq %r15,0x28(%rbp)
	movq 0x10(%r13),%r15
	movq 0x8(%r13),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r13),%r14
	movq %r14,0x38(%rbp)
	movq 0x20(%r13),%r14
	movl 0x0(%r14),%r11d
	testl %r11d,%r11d
	jnz L_409122
L_85113:
	movl 0x24(%rbp),%r14d
	movl %r14d,0x20(%rbp)
	jmp loop_995
.p2align 0x4
L_409122:
L_85114:
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_85038
L_85116:
	movl %r13d,0x70(%rbp)
	movq $0x4015,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x68(%rbp)
	addq $0x10,%r12
	addq $0x68,%rbp
	leaq (L_85117+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
L_409124:
L_85109:
	movq 0x10(%r13),%r15
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r11
	movq 0x18(%r13),%r10
	movl 0x0(%r10),%r9d
	testl %r9d,%r9d
	jz L_409125
L_85111:
	movq $0x1D77,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x10,%r12
	movq $0x9D9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r11,0x8(%r14)
	movq %r13,0x10(%r14)
	addq $0x20,%r12
	movq $0x1DB9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x18(%rbp)
	movl 0x24(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	jmp loop_995
.p2align 0x4
L_409125:
L_85110:
	movl 0x24(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	jmp loop_995
.p2align 0x4
L_409126:
L_85102:
	movq 0x18(%r13),%r15
	movq %r15,0x28(%rbp)
	movq 0x10(%r13),%r15
	movq %r15,0x30(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x38(%rbp)
	movq 0x0(%r13),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_85038
L_85104:
	movl %r13d,0x70(%rbp)
	movq $0x4015,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x68(%rbp)
	addq $0x10,%r12
	addq $0x68,%rbp
	leaq (L_85105+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
L_409128:
L_85085:
	movq 0x10(%r13),%r15
	movq %r15,0x28(%rbp)
	movq 0x8(%r13),%r15
	movl 0x0(%r13),%r14d
	movq 0x18(%r13),%r11
	movl 0x0(%r11),%r10d
	testl %r10d,%r10d
	jnz L_409131
L_85086:
	testl %r14d,%r14d
	jnz L_409129
L_85087:
	movl 0x24(%rbp),%r14d
	movl %r14d,0x20(%rbp)
	jmp loop_995
.p2align 0x4
L_409129:
L_85088:
	movq 0x18(%r15),%r14
	movq 0x10(%r15),%r13
	movq %r13,0x28(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x30(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x38(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_85038
L_85090:
	movl %r13d,0x70(%rbp)
	movq $0x4015,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x68(%rbp)
	addq $0x10,%r12
	addq $0x68,%rbp
	leaq (L_85091+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
L_409131:
L_85095:
	movq 0x18(%r15),%r14
	movq 0x10(%r15),%r13
	movq %r13,0x30(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x38(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x40(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_85038
L_85097:
	movl %r13d,0x70(%rbp)
	movq $0x4015,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x68(%rbp)
	addq $0x10,%r12
	addq $0x68,%rbp
	leaq (L_85098+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
L_409133:
L_85078:
	movq 0x10(%r13),%r15
	movq %r15,0x28(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x30(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x38(%rbp)
	movq 0x18(%r13),%r15
	movl 0x0(%r15),%r14d
	testl %r14d,%r14d
	jnz L_409134
L_85079:
	movl 0x24(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	jmp loop_995
.p2align 0x4
L_409134:
L_85080:
	movq $0x1,0x68(%rbp)
	movl $0x0,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_85081+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
L_409135:
L_85075:
	movq 0x18(%r13),%r15
	movq 0x10(%r13),%r14
	movl 0x0(%r13),%r11d
	movq 0x8(%r13),%r10
	movq 0x20(%r13),%r9
	movl 0x0(%r9),%r8d
	testl %r8d,%r8d
	jz L_409136
L_85077:
	movq 0x0(%r14),%r13
	movq 0x20(%r14),%r9
	movl $0x1,0x0(%r9)
	movq $0x1D71,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %r11d,0x0(%r14)
	movq %r13,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x9D9,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r10,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x20,%r12
	movq $0x1DB9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x18(%rbp)
	movl 0x24(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	jmp loop_995
.p2align 0x4
L_409136:
L_85076:
	movl 0x24(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	jmp loop_995
.p2align 0x4
L_409137:
L_85074:
	movq 0x8(%r13),%r15
	movq 0x0(%r13),%r14
	movq $0x9D9,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x20,%r12
	movq $0x1,0x0(%r13)
	movq $0x1DB9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x18(%rbp)
	movl 0x24(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	jmp loop_995
.p2align 0x4
L_409138:
L_85133:
	movl 0x24(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	jmp loop_995
.p2align 0x4
L_409139:
L_85134:
	cmpq $0x1,0x18(%rbp)
	je L_409145
L_85135:
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_409144
L_85136:
	movq 0x8(%r14),%r13
	movq %r13,0x20(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x28(%rbp)
	movq $0x1,0x30(%rbp)
.p2align 0x4,,0x7
L_85137:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_409143
.p2align 0x4,,0x7
L_85138:
	movq $0x1DB9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_409140
L_85139:
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x28(%rbp)
	jmp L_85137
.p2align 0x4
L_409140:
L_85140:
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x18(%rbp)
.p2align 0x4,,0x7
L_85141:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_409142
.p2align 0x4,,0x7
L_85142:
	movq $0x1DB9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_409141
L_85143:
	movq %r15,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_85141
.p2align 0x4
L_409141:
L_85144:
	movq %r15,0x8(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_409142:
L_85145:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_85146+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_85146
.p2align 0x4
.long 0x51F
L_85146:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_85142
.p2align 0x4
L_409143:
L_85147:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_85148+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_85148
.p2align 0x4
.long 0x720
L_85148:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_85138
.p2align 0x4
L_409144:
L_85149:
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%rbp)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_409145:
L_85150:
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_409146:
L_85151:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_85152+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_85152
.p2align 0x4
.long 0x11DE
L_85152:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	jmp L_85068
.p2align 0x4
L_409147:
L_85066:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_409149:
L_85659:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_85660+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_85660
.p2align 0x4
.long 0x1233
L_85660:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_85044
.p2align 0x4
L_409150:
L_85661:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_409151:
L_85662:
	movq (globalObjptr+0x1F28)(%rip),%r15
	movq %r15,0x58(%rbp)
	jmp L_85043
.p2align 0x4
.long 0x121F
L_85456:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x70(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_85457
L_85459:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_85460+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_85460
.p2align 0x4
.long 0x1220
L_85460:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_85457:
	movq 0x70(%rbp),%r14
	movq 0x8(%r14),%r15
	movq 0x20(%r14),%r13
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq $0x1,0x0(%r15)
	movq $0x3E21,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x10(%r15)
	addq $0x20,%r12
	movq 0x80(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_85458
.p2align 0x4
.long 0x1232
L_85646:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x78(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_85647
L_85654:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_85655+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_85655
.p2align 0x4
.long 0x1224
L_85655:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_85647:
	movq $0x27EF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x88(%rbp)
	addq $0x18,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x80(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x68(%rbp),%r15
	cmpq $0x1,%r15
	je L_85466
L_85648:
	movq %r15,0x98(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0xA0(%rbp)
	addq $0x98,%rbp
	leaq (L_85649+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1388
.p2align 0x4
.long 0x1222
L_85638:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x88(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_85639
L_85640:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_85641+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_85641
.p2align 0x4
.long 0x1223
L_85641:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_85639:
	movq 0x88(%rbp),%r14
	movq 0x8(%r14),%r15
	movq 0x20(%r14),%r13
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq 0x80(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x3E33,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x18(%r15)
	addq $0x28,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x10(%r15)
	jmp L_85458
.p2align 0x4
.long 0x122B
L_85562:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq %r15,0x98(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0xA0(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0xA8(%rbp)
	addq $0x98,%rbp
	leaq (L_85563+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp primApp_6
.p2align 0x4
.long 0x1227
L_85542:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x78(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_85543
L_85557:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_85558+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_85558
.p2align 0x4
.long 0x122A
L_85558:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_85543:
	movq 0x78(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r14),%r13
L_85544:
	movq %r13,%r15
	andq $0x3,%r15
	jnz x_257
L_85551:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x13F4,%r15
	jne x_1469
L_85552:
	movq 0x0(%r13),%r15
	movslq 0x80(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	jnb L_409159
L_85554:
	movq 0x0(%r15,%r14,8),%r13
	movq 0x68(%rbp),%r15
	cmpq $0x1,%r15
	je L_85466
L_85555:
	movq %r13,0x70(%rbp)
	movq %r15,0x78(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x70,%rbp
	leaq (L_85465+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1429
.p2align 0x4
L_409159:
L_85054:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
x_1469:
x_257:
	movq $0x27EB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x88(%rbp)
	addq $0x18,%r12
	movl 0x80(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x68(%rbp),%r15
	cmpq $0x1,%r15
	je L_85466
L_85545:
	movq %r15,0x98(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0xA0(%rbp)
	addq $0x98,%rbp
	leaq (L_85546+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1388
.p2align 0x4
.long 0x11EA
L_85471:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x78(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_85472
L_85539:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_85540+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_85540
.p2align 0x4
.long 0x1226
L_85540:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_85472:
	movq $0x71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x80(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x78(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%ecx
	movslq %ecx,%r13
	cmpq %r14,%r13
	jne L_85474
L_85475:
	movl %ecx,%ebx
	decl %ebx
	jo L_409185
L_85477:
	movq $0x1,0x88(%rbp)
.p2align 0x4,,0x7
loop_998:
	cmpl $0x0,%ebx
	jl L_409181
L_85478:
	movl %ebx,%r15d
	decl %r15d
	movslq %ebx,%r14
	movq 0x78(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r11
	movq 0x8(%r11),%r10
	movq 0x0(%r10),%r9
L_85479:
	movq %r9,%r14
	andq $0x3,%r14
	jnz L_409179
L_85494:
	movq 0xFFFFFFFFFFFFFFF8(%r9),%r14
	shrq $0x1,%r14
	cmpq $0x13F5,%r14
	jne L_409177
L_85499:
	movq 0x8(%r9),%r14
	cmpl %ebx,0x0(%r9)
	jne L_409175
L_85504:
	movq 0x88(%rbp),%r13
	cmpq $0x1,%r13
	je L_409166
L_85505:
	movq 0x0(%r13),%r11
	movq 0x0(%r14),%r10
	movq 0x10(%r10),%r9
	cmpq %r9,0x10(%r11)
	jne L_409162
L_85510:
	movl %r15d,%ebx
	jmp loop_998
.p2align 0x4
L_409162:
L_85506:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_85507
L_85508:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_85509+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_85509
.p2align 0x4
.long 0x1224
L_85509:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_85507:
	movq 0x80(%rbp),%r15
	movq $0x16,%r14
L_85482:
	cmpq %r15,0x80(%rbp)
	je L_409163
L_85483:
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_409163:
L_85485:
	movq $0x27E9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x80(%rbp)
	addq $0x10,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x68(%rbp),%r15
	cmpq $0x1,%r15
	je L_85466
L_85486:
	movq %r15,0x90(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x90,%rbp
	leaq (L_85487+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1388
.p2align 0x4
L_409166:
L_85511:
	movq 0x10(%r14),%r11
	cmpq $0x1,%r11
	je L_409173
L_85512:
	movq 0x8(%r11),%r10
L_85513:
	movq %r10,%r11
	andq $0x3,%r11
	jnz L_85514
L_85518:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r11
	shrq $0x1,%r11
	cmpq $0xEB2,%r11
	jne L_409170
L_85519:
	movq 0x0(%r10),%r11
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r9
	movl %r9d,%r8d
	movslq %r8d,%rsp
	cmpq %rsp,%r9
	jne L_409169
L_85521:
	cmpl %r8d,%ecx
	jne L_409167
L_85526:
	movq %r14,0x88(%rbp)
	movl %r15d,%ebx
	jmp loop_998
.p2align 0x4
L_409167:
L_85522:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_85523
L_85524:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_85525+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_85525
.p2align 0x4
.long 0x1224
L_85525:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_85523:
	movq 0x80(%rbp),%r15
	movq $0x16,%r14
	jmp L_85482
.p2align 0x4
L_409169:
L_85474:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_409170:
L_85514:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_85515
L_85516:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_85517+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_85517
.p2align 0x4
.long 0x1224
L_85517:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_85515:
	movq 0x80(%rbp),%r15
	movq $0x16,%r14
	jmp L_85482
.p2align 0x4
L_409173:
L_85527:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_85528
L_85529:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_85530+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_85530
.p2align 0x4
.long 0x1224
L_85530:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_85528:
	movq 0x80(%rbp),%r15
	movq $0x16,%r14
	jmp L_85482
.p2align 0x4
L_409175:
L_85500:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_85501
L_85502:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_85503+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_85503
.p2align 0x4
.long 0x1224
L_85503:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_85501:
	movq 0x80(%rbp),%r15
	movq $0x16,%r14
	jmp L_85482
.p2align 0x4
L_409177:
L_85495:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_85496
L_85497:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_85498+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_85498
.p2align 0x4
.long 0x1224
L_85498:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_85496:
	movq 0x80(%rbp),%r15
	movq $0x16,%r14
	jmp L_85482
.p2align 0x4
L_409179:
L_85480:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_85481
L_85492:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_85493+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_85493
.p2align 0x4
.long 0x1224
L_85493:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_85481:
	movq 0x80(%rbp),%r15
	movq $0x16,%r14
	jmp L_85482
.p2align 0x4
L_409181:
L_85531:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_85532
L_85537:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_85538+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_85538
.p2align 0x4
.long 0x1225
L_85538:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_85532:
	movq 0x88(%rbp),%r15
	cmpq $0x1,%r15
	je L_85485
L_85533:
	movq 0x68(%rbp),%r14
	cmpq $0x1,%r14
	je L_85466
L_85534:
	movq %r15,0x70(%rbp)
	movq %r14,0x78(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x70,%rbp
	leaq (L_85465+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1429
.p2align 0x4
L_409185:
L_85476:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1221
L_85463:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x68(%rbp),%r15
	cmpq $0x1,%r15
	je L_85466
L_85464:
	movq %r15,0x78(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x70,%rbp
	leaq (L_85465+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1429
.p2align 0x4
.long 0x121E
L_85451:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	jmp L_85452
.p2align 0x4
.long 0x11D5
L_85050:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x78(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x30(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x70(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_85051+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_33
.p2align 0x4
.long 0x11F7
L_85299:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq %r15,0x88(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x88,%rbp
	leaq (L_85300+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp primApp_6
.p2align 0x4
.long 0x11E8
L_85195:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_85196
L_85197:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_85198+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_85198
.p2align 0x4
.long 0x11E9
L_85198:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_85196:
	movq $0x1D85,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0x10(%rbp)
	movq 0x30(%rbp),%r15
	jmp L_85063
.p2align 0x4
.long 0x11EA
L_85200:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movl 0x80(%rbp),%r15d
	movq 0x40(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movq %r13,0x60(%rbp)
	movslq %r15d,%r11
	movl %r15d,0x50(%rbp)
	cmpq %r13,%r11
	jnb L_85054
L_85202:
	movq 0x0(%r14,%r11,8),%r15
L_85203:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_409200
L_85204:
	movq 0x10(%r15),%r14
	movq %r14,0x50(%rbp)
	movl 0x0(%r15),%r14d
	movl %r14d,0x78(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x30(%rbp),%r15
	cmpq $0x1,%r15
	je L_85289
	cmpq $0x2,%r15
	je L_409190
L_85205:
	movq %r15,0x90(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x90,%rbp
	leaq (L_85206+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_33
.p2align 0x4
L_409190:
L_85289:
	movq 0x80(%rbp),%r14
	cmpq $0x1,%r14
	je nonTail_0
L_85290:
	movq %r14,%r15
	andq $0x3,%r15
	jnz nonTail_0
L_85291:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xEDE,%r15
	jne nonTail_0
L_85292:
	movq 0x8(%r14),%r13
	movq %r13,0x88(%rbp)
	movq 0x0(%r14),%r15
L_85261:
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%ecx
	movslq %ecx,%r13
	cmpq %r14,%r13
	jne L_85038
L_85263:
	movslq 0x78(%rbp),%r13
	movq 0x70(%rbp),%r11
	cmpq 0xFFFFFFFFFFFFFFF0(%r11),%r13
	jnb L_85054
L_85265:
	movq 0x0(%r11,%r13,8),%r10
	movq 0x18(%r10),%r9
	movq 0xFFFFFFFFFFFFFFF0(%r9),%r8
	movl %r8d,%ebx
	movslq %ebx,%rsp
	cmpq %rsp,%r8
	jne L_85038
L_85267:
	cmpl %ecx,%ebx
	jne nonTail_0
L_85269:
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_997:
	cmpl %ecx,%ebx
	je L_409194
L_85270:
	movslq %ebx,%r13
	cmpq %r14,%r13
	jnb L_85054
L_85272:
	movq 0x0(%r15,%r13,8),%r11
	movq %r11,%r13
	andq $0x1,%r13
	cmpq $0x1,%r13
	jne nonTail_0
L_85273:
	shrq $0x1,%r11
	movl %r11d,%r13d
	cmpl %r13d,%ebx
	jne nonTail_2
L_85275:
	incl %ebx
	jo L_85066
L_85276:
	jmp loop_997
.p2align 0x4
nonTail_2:
nonTail_0:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_85212
L_85237:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_85238+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_85238
.p2align 0x4
.long 0x11F2
L_85238:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_85212:
	movq $0x8C7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movl 0x78(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x80(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0x88(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x88,%rbp
	leaq (L_85213+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp forceMeaningBlock_1
.p2align 0x4
L_409194:
L_85277:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_85278
L_85283:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_85284+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_85284
.p2align 0x4
.long 0x11F5
L_85284:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_85278:
	movq 0x88(%rbp),%r15
	movq %r15,0x10(%rbp)
tail_1:
	movq $0x8C7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movl 0x78(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x80(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x70(%rbp)
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_85279+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp deleteLabelMeaning_1
.p2align 0x4
L_409200:
L_85057:
	movq (globalObjptr+0x1F00)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x11E6
L_85185:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_85186
L_85187:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_85188+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_85188
.p2align 0x4
.long 0x11E7
L_85188:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_85186:
	movq $0x40AD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x28,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x10(%rbp),%r11
	movq %r11,0x10(%r15)
	movq 0x18(%rbp),%r10
	movq %r10,0x18(%r15)
	movq %r15,0x88(%rbp)
	movq $0x40A9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq %r10,0x0(%r15)
	movq %r13,0x8(%r15)
	movq 0x60(%rbp),%r9
	movq %r9,0x10(%r15)
	movq %r15,0x70(%rbp)
	movq %r14,0x68(%rbp)
	movq %r10,0x78(%rbp)
	movq %r13,0x80(%rbp)
	movq $0x1,0x90(%rbp)
	movq %r11,0x98(%rbp)
	addq $0x68,%rbp
	leaq (L_85181+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp simplifyCase_0
.p2align 0x4
.long 0x11E3
L_85174:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x78(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x70(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_85175+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_33
.p2align 0x4
.long 0x11E1
L_85167:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_85168
L_85169:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_85170+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_85170
.p2align 0x4
.long 0x11E2
L_85170:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_85168:
	movq $0x1D7F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x10(%rbp)
	movq $0x1,%r15
	jmp L_85063
.p2align 0x4
.long 0x11E1
L_85160:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_85161
L_85162:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_85163+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_85163
.p2align 0x4
.long 0x11E2
L_85163:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_85161:
	movq $0x1D7D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x10(%rbp)
	movq $0x1,%r15
	jmp L_85063
.p2align 0x4
.long 0x11DC
L_85126:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_85127
L_85128:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_85129+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_85129
.p2align 0x4
.long 0x11DD
L_85129:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_85127:
	movq $0x1D6F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x9D9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x30(%rbp),%r15
	movq %r15,0x8(%r14)
	movq $0x1DB9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x18(%rbp)
	movl 0x24(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	jmp loop_995
.p2align 0x4
.long 0x11D8
L_85117:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_85118
L_85119:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_85120+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_85120
.p2align 0x4
.long 0x11D9
L_85120:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_85118:
	movq $0x1D79,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x9D9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x38(%rbp),%r15
	movq %r15,0x8(%r14)
	movq $0x1DB9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x18(%rbp)
	movl 0x24(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	jmp loop_995
.p2align 0x4
.long 0x11D8
L_85105:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_85106
L_85107:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_85108+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_85108
.p2align 0x4
.long 0x11D9
L_85108:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_85106:
	movq $0x1D75,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x10(%r15)
	movq $0x9D9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movq $0x1,0x0(%r14)
	movq 0x28(%rbp),%r15
	movq %r15,0x8(%r14)
	movq $0x1DB9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x18(%rbp)
	movl 0x24(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	jmp loop_995
.p2align 0x4
.long 0x11D8
L_85091:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_85092
L_85093:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_85094+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_85094
.p2align 0x4
.long 0x11D9
L_85094:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_85092:
	movq $0x1D75,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x10(%r15)
	movq $0x9D9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movq $0x1,0x0(%r14)
	movq 0x38(%rbp),%r15
	movq %r15,0x8(%r14)
	movq $0x1DB9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x18(%rbp)
	movl 0x24(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	jmp loop_995
.p2align 0x4
.long 0x11DA
L_85098:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_85099
L_85100:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_85101+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_85101
.p2align 0x4
.long 0x11DB
L_85101:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_85099:
	movq $0x1D75,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x10(%r15)
	movq $0x9D9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x40(%rbp),%r15
	movq %r15,0x8(%r14)
	movq $0x1DB9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x18(%rbp)
	movl 0x24(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	jmp loop_995
.p2align 0x4
.long 0x11D8
L_85081:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_85082
L_85083:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_85084+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_85084
.p2align 0x4
.long 0x11D9
L_85084:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_85082:
	movq $0x1D79,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x9D9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x38(%rbp),%r15
	movq %r15,0x8(%r14)
	movq $0x1DB9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x18(%rbp)
	movl 0x24(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	jmp loop_995
.p2align 0x4
.long 0x122C
L_85649:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x90(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_85650
L_85651:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_85652+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_85652
.p2align 0x4
.long 0x1231
L_85652:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_85650:
	movq 0x90(%rbp),%r14
	movq 0x8(%r14),%r15
	movq 0x20(%r14),%r13
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq 0x88(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x3E2F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x20(%r15)
	addq $0x30,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x80(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x18(%r15)
	jmp L_85458
.p2align 0x4
.long 0x122C
L_85563:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x90(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_85564
L_85634:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_85635+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_85635
.p2align 0x4
.long 0x1231
L_85635:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_85564:
	movq 0x90(%rbp),%r15
	movq %r15,%r14
	andq $0x3,%r14
	cmpq $0x3,%r14
	je L_409217
L_85565:
	andq $0x3,%r15
	jz L_409212
L_85566:
	movq 0x88(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_85567+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1435
.p2align 0x4
L_409212:
L_85581:
	movq 0x90(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x13F9,%r14
	je L_409215
	cmpq $0x13FA,%r14
	je L_409214
L_85582:
	movq 0x0(%r15),%r14
	movq 0x68(%rbp),%r15
	cmpq $0x1,%r15
	je L_85466
L_85583:
	movq %r14,0x70(%rbp)
	movq %r15,0x78(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x70,%rbp
	leaq (L_85465+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1429
.p2align 0x4
L_409214:
L_85592:
	movq 0x8(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x80(%rbp)
	movq $0x1,0x90(%rbp)
	movl $0x0,0x98(%rbp)
	addq $0x90,%rbp
	leaq (L_85593+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_5
.p2align 0x4
L_409215:
L_85585:
	movq 0x0(%r15),%r14
	movq %r14,0x78(%rbp)
	movq $0x27ED,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x80(%rbp)
	addq $0x10,%r12
	movq %r14,0x0(%r15)
	movq 0x68(%rbp),%r15
	cmpq $0x1,%r15
	je L_85466
L_85586:
	movq %r15,0x90(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x90,%rbp
	leaq (L_85587+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1388
.p2align 0x4
L_409217:
L_85620:
	shrq $0x2,%r15
	movl %r15d,%r14d
	movq 0x28(%rbp),%r15
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	testl %r14d,%r14d
	jnz L_409218
L_85621:
	movq %r11,0x78(%rbp)
L_85622:
	movq $0x1,0x88(%rbp)
	movl $0x0,0x90(%rbp)
	addq $0x88,%rbp
	leaq (L_85623+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_23
.p2align 0x4
L_409218:
L_85633:
	movq %r13,0x78(%rbp)
	jmp L_85622
.p2align 0x4
.long 0x1213
L_85465:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_85466
.p2align 0x4
.long 0x1228
L_85546:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x90(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_85547
L_85548:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_85549+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_85549
.p2align 0x4
.long 0x1229
L_85549:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_85547:
	movq 0x90(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x20(%r15),%r13
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq 0x88(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x3E25,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x20(%r15)
	addq $0x30,%r12
	movl 0x80(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x18(%r15)
	jmp L_85458
.p2align 0x4
.long 0x1222
L_85487:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x88(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_85488
L_85489:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_85490+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_85490
.p2align 0x4
.long 0x1223
L_85490:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_85488:
	movq 0x88(%rbp),%r14
	movq 0x8(%r14),%r15
	movq 0x20(%r14),%r13
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq 0x80(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x3E31,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x18(%r15)
	addq $0x28,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x10(%r15)
	jmp L_85458
.p2align 0x4
.long 0x11D6
L_85051:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movl 0x68(%rbp),%r15d
	movl %r15d,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_85052
L_85155:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_85156+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_85156
.p2align 0x4
.long 0x11E0
L_85156:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_85052:
	movslq 0x18(%rbp),%r15
	movq 0x30(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_85054
L_85055:
	movq 0x0(%r14,%r15,8),%r13
L_85056:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_85057
L_85058:
	movq 0x10(%r13),%r15
	movl 0x0(%r13),%r14d
	movl %r14d,0x18(%rbp)
	movq 0x8(%r13),%r11
	movq $0x8C7,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	movq %r11,0x10(%r13)
	addq $0x20,%r12
	movl %r14d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,0x68(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_85059+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp forceMeaningBlock_1
.p2align 0x4
.long 0x11F8
L_85300:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_85301
L_85446:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_85447+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_85447
.p2align 0x4
.long 0x121D
L_85447:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_85301:
	movq 0x20(%rbp),%r15
	movq %r15,%r14
	andq $0x3,%r14
	cmpq $0x1,%r14
	je L_409233
L_85302:
	andq $0x3,%r15
	jz L_409226
L_85303:
	movq 0x18(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_85038
L_85305:
	movl %r13d,0x90(%rbp)
	movq $0x4015,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq %r14,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_85306+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
L_409226:
L_85332:
	movq 0x20(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x13F9,%r14
	je L_409232
	cmpq $0x13FA,%r14
	je L_409227
L_85333:
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x60(%rbp),%r15
	movq 0x30(%r15),%r14
	movq 0x8(%r14),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x28(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x90(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_85334+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_33
.p2align 0x4
L_409227:
L_85385:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r13,0x18(%rbp)
	movq $0xBD9,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x40(%rbp)
	addq $0x10,%r12
	movq %r14,0x0(%r13)
	cmpq $0x1,%r14
	je L_409231
L_85386:
	movq 0x8(%r14),%r14
	xorl %ecx,%ecx
	movq %r14,%r15
.p2align 0x4,,0x7
L_85387:
	incl %ecx
	movl %ecx,0x20(%rbp)
	jo L_85066
L_85388:
	cmpq $0x1,%r15
	je L_409228
L_85389:
	movq 0x8(%r15),%r15
	jmp L_85387
.p2align 0x4
L_409228:
L_85390:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_85391
L_85424:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_85425+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_85425
.p2align 0x4
.long 0x1219
L_85425:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_85391:
	movl 0x20(%rbp),%ecx
L_85392:
	movl %ecx,0x90(%rbp)
	movq $0x391F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x88(%rbp)
	addq $0x88,%rbp
	leaq (uses_1+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_23
.p2align 0x4
L_409231:
L_85426:
	xorl %ecx,%ecx
	jmp L_85392
.p2align 0x4
L_409232:
L_85355:
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x60(%rbp),%r15
	movq 0x30(%r15),%r14
	movq 0x8(%r14),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x38(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x90(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_85356+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_33
.p2align 0x4
L_409233:
L_85427:
	movq 0x60(%rbp),%r14
	movq 0x30(%r14),%r13
	movq 0x8(%r13),%r11
	movq 0x10(%r11),%r10
	movq %r10,0x18(%rbp)
	movq 0x0(%r11),%r10
	movq %r10,0x90(%rbp)
	movq 0x30(%rbp),%r14
	movq %r14,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_85428+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_33
.p2align 0x4
.long 0x11EB
L_85206:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movl 0x90(%rbp),%r13d
	movl %r13d,0x7C(%rbp)
	movslq %r13d,%r15
	cmpq 0x60(%rbp),%r15
	jnb L_85054
L_85208:
	movq 0x40(%rbp),%r13
	movq 0x0(%r13,%r15,8),%r14
L_85209:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_85057
L_85210:
	movl 0x0(%r14),%ecx
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_85289
L_85211:
	movq %r15,%r14
	andq $0x3,%r14
	jnz nonTail_0
L_85239:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xEDF,%r14
	jne nonTail_0
L_85240:
	movq 0x8(%r15),%r13
	movq %r13,0x88(%rbp)
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%ebx
	movslq %ebx,%r13
	cmpq %r13,%r15
	jne L_85038
L_85242:
	movslq %ecx,%r13
	movq 0x70(%rbp),%r11
	cmpq 0xFFFFFFFFFFFFFFF0(%r11),%r13
	jnb L_85054
L_85244:
	movq 0x0(%r11,%r13,8),%r10
	movq 0x18(%r10),%r9
	movq 0xFFFFFFFFFFFFFFF0(%r9),%r8
	movl %r8d,%ecx
	movslq %ecx,%rsp
	cmpq %r8,%rsp
	jne L_85038
L_85246:
	cmpl %ebx,%ecx
	jne nonTail_0
L_85248:
	xorl %ecx,%ecx
.p2align 0x4,,0x7
loop_996:
	cmpl %ebx,%ecx
	je L_409237
L_85249:
	movslq %ecx,%r13
	cmpq %r15,%r13
	jnb L_85054
L_85251:
	movq 0x0(%r14,%r13,8),%r11
	movq %r11,%r13
	andq $0x1,%r13
	cmpq $0x1,%r13
	jne nonTail_0
L_85252:
	shrq $0x1,%r11
	movl %r11d,%r13d
	cmpl %r13d,%ecx
	jne nonTail_0
L_85254:
	incl %ecx
	jo L_85066
L_85255:
	jmp loop_996
.p2align 0x4
L_409237:
L_85256:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_85257
L_85286:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_85287+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_85287
.p2align 0x4
.long 0x11F6
L_85287:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_85257:
	movq 0x80(%rbp),%r14
	cmpq $0x1,%r14
	je L_409238
L_85258:
	movq %r14,%r15
	andq $0x3,%r15
	jnz nonTail_0
L_85259:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xEDE,%r15
	jne nonTail_0
L_85260:
	movq 0x8(%r14),%r13
	movq %r13,0x88(%rbp)
	movq 0x0(%r14),%r15
	jmp L_85261
.p2align 0x4
L_409238:
L_85285:
	movq 0x88(%rbp),%r15
	movq %r15,0x10(%rbp)
	jmp tail_1
.p2align 0x4
.long 0x11EC
L_85213:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_85214
L_85235:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_85236+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_85236
.p2align 0x4
.long 0x11F1
L_85236:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_85214:
	movq 0x30(%rbp),%r15
	cmpq $0x1,%r15
	je L_409248
	cmpq $0x2,%r15
	je L_409246
L_85215:
	movq %r15,0x88(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x88,%rbp
	leaq (L_85216+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_33
.p2align 0x4
L_409246:
L_85234:
	movq $0x2,%r14
	xchgq %r14,%r15
L_85226:
	movslq 0x78(%rbp),%r14
	movq 0x38(%rbp),%r13
	cmpq 0xFFFFFFFFFFFFFFF0(%r13),%r14
	jnb L_85054
L_85228:
	movq 0x0(%r13,%r14,8),%r11
	movq 0x10(%r11),%r10
	movq $0x240B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r10,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x10(%rbp)
	addq $0x18,%r12
	movq $0x1,0x30(%rbp)
	jmp L_85192
.p2align 0x4
L_409248:
L_85233:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_85226
.p2align 0x4
.long 0x11F3
L_85279:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_85280
L_85281:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_85282+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_85282
.p2align 0x4
.long 0x11F4
L_85282:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_85280:
	movq 0x10(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq $0x1,0x10(%rbp)
	jmp L_85192
.p2align 0x4
.long 0x11E1
L_85181:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r14
	movq %r14,0x10(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x18(%rbp)
	jmp L_85063
.p2align 0x4
.long 0x11E4
L_85175:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movl 0x68(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_85176
L_85182:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_85183+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_85183
.p2align 0x4
.long 0x11E5
L_85183:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_85176:
	movslq 0x20(%rbp),%r15
	movq 0x28(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_85054
L_85178:
	movq 0x0(%r14,%r15,8),%r13
L_85179:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_85057
L_85180:
	movq 0x10(%r13),%r15
	movl 0x0(%r13),%r14d
	movq 0x8(%r13),%r11
	movq $0x8C7,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movl %r14d,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r11,0x10(%r13)
	addq $0x20,%r12
	movl $0x0,0x4(%r13)
	movq %r13,0x70(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq $0x1,0x78(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x68,%rbp
	leaq (L_85181+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp gotoMeaning_0
.p2align 0x4
.long 0x122C
L_85567:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movb 0x98(%rbp),%r15b
	movb %r15b,0x90(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_85568
L_85579:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_85580+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_85580
.p2align 0x4
.long 0x122F
L_85580:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_85568:
	cmpb $0x0,0x90(%rbp)
	sete %al
	movzbl %al,%eax
	movl %eax,0x94(%rbp)
	movq $0xA13,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x98(%rbp)
	addq $0x28,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x80(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x88(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x68(%rbp),%r15
	cmpq $0x1,%r15
	je L_409254
L_85569:
	movq %r15,0xA8(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0xB0(%rbp)
	addq $0xA8,%rbp
	leaq (L_85570+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1388
.p2align 0x4
L_409254:
L_85575:
	movl 0x94(%rbp),%r11d
	testl %r11d,%r11d
	jz L_85466
L_85577:
	movq 0x80(%rbp),%r13
	movq 0x88(%rbp),%r14
	movq 0x78(%rbp),%r11
	xchgq %r11,%r15
L_85578:
	movq $0x3E2B,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r14,0x8(%r11)
	movq %r13,0x10(%r11)
	addq $0x28,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x18(%r11)
	movq %r11,%r15
	jmp L_85458
.p2align 0x4
.long 0x1222
L_85593:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x88(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_85594
L_85618:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_85619+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_85619
.p2align 0x4
.long 0x1223
L_85619:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_85594:
	movq $0xBD9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x90(%rbp)
	addq $0x10,%r12
	movq 0x78(%rbp),%r13
	movq %r13,0x0(%r14)
	cmpq $0x1,%r13
	je L_409260
L_85595:
	movq 0x8(%r13),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_85596:
	incl %ecx
	movl %ecx,0x78(%rbp)
	jo L_85066
L_85597:
	cmpq $0x1,%r15
	je L_409257
L_85598:
	movq 0x8(%r15),%r15
	jmp L_85596
.p2align 0x4
L_409257:
L_85599:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_85600
L_85615:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_85616+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_85616
.p2align 0x4
.long 0x1230
L_85616:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_85600:
	movl 0x78(%rbp),%ecx
L_85601:
	movl %ecx,0xA0(%rbp)
	movq $0x391F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x90(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_85602+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_23
.p2align 0x4
L_409260:
L_85617:
	xorl %ecx,%ecx
	jmp L_85601
.p2align 0x4
.long 0x1222
L_85587:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x88(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_85588
L_85589:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_85590+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_85590
.p2align 0x4
.long 0x1223
L_85590:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_85588:
	movq 0x88(%rbp),%r14
	movq 0x8(%r14),%r15
	movq 0x20(%r14),%r13
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq 0x80(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x3E2D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x18(%r15)
	addq $0x28,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x10(%r15)
	jmp L_85458
.p2align 0x4
.long 0x121E
L_85623:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x80(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_85624
L_85631:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_85632+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_85632
.p2align 0x4
.long 0x1224
L_85632:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_85624:
	movq $0x27EF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x88(%rbp)
	addq $0x18,%r12
	movq 0x80(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x68(%rbp),%r15
	cmpq $0x1,%r15
	je L_85466
L_85625:
	movq %r15,0x98(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0xA0(%rbp)
	addq $0x98,%rbp
	leaq (L_85626+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1388
.p2align 0x4
.long 0x11D7
L_85059:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_85060
L_85153:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_85154+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_85154
.p2align 0x4
.long 0x11DF
L_85154:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_85060:
	movslq 0x18(%rbp),%r15
	movq 0x38(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_85054
L_85062:
	movq 0x0(%r14,%r15,8),%r13
	movq 0x10(%r13),%r11
	movq $0x1D7B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x10(%r15)
	addq $0x20,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x10(%rbp)
	movq $0x1,%r15
	jmp L_85063
.p2align 0x4
.long 0x11F9
L_85306:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x78(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x20(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x40(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq %r13,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_85307+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_33
.p2align 0x4
.long 0x1200
L_85334:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movl 0x88(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_85335
L_85353:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_85354+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_85354
.p2align 0x4
.long 0x1206
L_85354:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_85335:
	movslq 0x20(%rbp),%r15
	movq 0x28(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_85054
L_85337:
	movq 0x0(%r14,%r15,8),%r13
L_85338:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_85057
L_85339:
	movq 0x10(%r13),%r15
	movl 0x0(%r13),%r14d
	movq 0x8(%r13),%r11
	movq $0x8C7,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movl %r14d,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r11,0x10(%r13)
	addq $0x20,%r12
	movl $0x0,0x4(%r13)
	movq %r13,0x88(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x88,%rbp
	leaq (L_85340+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp deleteLabelMeaning_1
.p2align 0x4
.long 0x1212
uses_1:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_85393
L_85422:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_85423+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_85423
.p2align 0x4
.long 0x1218
L_85423:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_85393:
	movq 0x20(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_85038
L_85395:
	movl %r13d,0x90(%rbp)
	movq $0x4015,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq %r14,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_85396+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
.long 0x1207
L_85356:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movl 0x88(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_85357
L_85383:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_85384+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_85384
.p2align 0x4
.long 0x1211
L_85384:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_85357:
	movslq 0x20(%rbp),%r15
	movq 0x38(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_85054
L_85359:
	movq 0x0(%r14,%r15,8),%r13
L_85360:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_85057
L_85361:
	movq 0x10(%r13),%r15
	movl 0x0(%r13),%r14d
	movq 0x8(%r13),%r11
	movq $0x8C7,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movl %r14d,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r11,0x10(%r13)
	addq $0x20,%r12
	movl $0x0,0x4(%r13)
	movq %r13,0x88(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x88,%rbp
	leaq (L_85362+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp deleteLabelMeaning_1
.p2align 0x4
.long 0x121A
L_85428:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movl 0x88(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_85429
L_85444:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_85445+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_85445
.p2align 0x4
.long 0x121C
L_85445:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_85429:
	movslq 0x20(%rbp),%r15
	movq 0x18(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_85054
L_85431:
	movq 0x0(%r14,%r15,8),%r13
L_85432:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_85057
L_85433:
	movq 0x10(%r13),%r15
	movl 0x0(%r13),%r14d
	movq 0x8(%r13),%r11
	movq $0x8C7,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movl %r14d,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r11,0x10(%r13)
	addq $0x20,%r12
	movl $0x0,0x4(%r13)
	movq %r13,0x88(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x88,%rbp
	leaq (L_85434+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp deleteLabelMeaning_1
.p2align 0x4
.long 0x11ED
L_85216:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movl 0x88(%rbp),%r15d
	movl %r15d,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_85217
L_85231:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_85232+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_85232
.p2align 0x4
.long 0x11F0
L_85232:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_85217:
	movslq 0x30(%rbp),%r15
	cmpq 0x60(%rbp),%r15
	jnb L_85054
L_85219:
	movq 0x40(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
L_85220:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_85057
L_85221:
	movq 0x10(%r13),%r15
	movl 0x0(%r13),%r14d
	movl %r14d,0x30(%rbp)
	movq 0x8(%r13),%r11
	movq $0x8C7,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	movq %r11,0x10(%r13)
	addq $0x20,%r12
	movl %r14d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,0x88(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x88,%rbp
	leaq (L_85222+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp forceMeaningBlock_1
.p2align 0x4
.long 0x122D
L_85570:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x70(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_85571
L_85573:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_85574+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_85574
.p2align 0x4
.long 0x122E
L_85574:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_85571:
	movq 0x70(%rbp),%r11
	movq 0x8(%r11),%r15
	movq 0x20(%r11),%r13
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq $0x1,0x0(%r15)
	movq 0x68(%rbp),%r14
	movq 0x98(%rbp),%r15
	movl 0x94(%rbp),%ecx
L_85572:
	movq $0x3E29,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movl %ecx,0x0(%r11)
	movq %r15,0x8(%r11)
	movq %r14,0x10(%r11)
	movq %r13,0x18(%r11)
	addq $0x28,%r12
	movl $0x0,0x4(%r11)
	movq %r11,%r15
	jmp L_85458
.p2align 0x4
.long 0x122B
L_85602:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_85603+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1435
.p2align 0x4
.long 0x1228
L_85626:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x80(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_85627
L_85628:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_85629+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_85629
.p2align 0x4
.long 0x1223
L_85629:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_85627:
	movq 0x80(%rbp),%r14
	movq 0x8(%r14),%r15
	movq 0x20(%r14),%r13
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq 0x88(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x3E27,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x18(%r15)
	addq $0x28,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x10(%r15)
	jmp L_85458
.p2align 0x4
.long 0x11FA
L_85307:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movl 0x78(%rbp),%r15d
	movl %r15d,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_85308
L_85330:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_85331+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_85331
.p2align 0x4
.long 0x11FF
L_85331:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_85308:
	movq 0x20(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq %r14,0x50(%rbp)
	movslq 0x48(%rbp),%r13
	cmpq %r14,%r13
	jnb L_85054
L_85310:
	movq 0x0(%r15,%r13,8),%r14
L_85311:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_85057
L_85312:
	movq 0x10(%r14),%r15
	movl 0x0(%r14),%r13d
	movl %r13d,0x48(%rbp)
	movq 0x8(%r14),%r11
	movq $0x8C7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	movq %r11,0x10(%r14)
	addq $0x20,%r12
	movl %r13d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq %r14,0x78(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_85313+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp forceMeaningBlock_1
.p2align 0x4
.long 0x1201
L_85340:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_85341
L_85351:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_85352+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_85352
.p2align 0x4
.long 0x1205
L_85352:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_85341:
	movq $0x3921,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x88(%rbp)
	movl $0x1,0x90(%rbp)
	addq $0x88,%rbp
	leaq (L_85342+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_23
.p2align 0x4
.long 0x1212
L_85396:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x78(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x40(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x48(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq %r13,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_85397+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_33
.p2align 0x4
.long 0x1208
L_85362:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_85363+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x121B
L_85434:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq $0x1,0x88(%rbp)
	movl $0x0,0x90(%rbp)
	addq $0x88,%rbp
	leaq (L_85435+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_23
.p2align 0x4
.long 0x11EE
L_85222:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_85223
L_85229:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_85230+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_85230
.p2align 0x4
.long 0x11EF
L_85230:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_85223:
	movslq 0x30(%rbp),%r15
	movq 0x38(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_85054
L_85225:
	movq 0x0(%r14,%r15,8),%r13
	movq 0x10(%r13),%r13
	movq %r13,%r15
	jmp L_85226
.p2align 0x4
.long 0x122C
L_85603:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movb 0x98(%rbp),%r15b
	movb %r15b,0x90(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_85604
L_85613:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_85614+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_85614
.p2align 0x4
.long 0x122F
L_85614:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_85604:
	cmpb $0x0,0x90(%rbp)
	sete %al
	movzbl %al,%eax
	movl %eax,0x94(%rbp)
	movq $0xA13,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x98(%rbp)
	addq $0x28,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x88(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x80(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x68(%rbp),%r15
	cmpq $0x1,%r15
	je L_409289
L_85605:
	movq %r15,0xA8(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0xB0(%rbp)
	addq $0xA8,%rbp
	leaq (L_85606+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1388
.p2align 0x4
L_409289:
L_85610:
	movl 0x94(%rbp),%r11d
	testl %r11d,%r11d
	jz L_85466
L_85612:
	movq 0x88(%rbp),%r13
	movq 0x80(%rbp),%r14
	movq 0x78(%rbp),%r11
	xchgq %r11,%r15
	jmp L_85578
.p2align 0x4
.long 0x11FA
L_85313:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x38(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq %r14,0x60(%rbp)
	movslq 0x48(%rbp),%r13
	cmpq %r14,%r13
	jnb L_85054
L_85315:
	movq 0x0(%r15,%r13,8),%r14
	movq 0x10(%r14),%r11
	movq %r11,0x48(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_85316+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_33
.p2align 0x4
.long 0x1202
L_85342:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x78(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x20(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x70(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_85343+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_33
.p2align 0x4
.long 0x712
L_85397:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movl 0x68(%rbp),%r15d
	movl %r15d,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_85398
L_85420:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_85421+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_85421
.p2align 0x4
.long 0xA9C
L_85421:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_85398:
	movq 0x40(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq %r14,0x60(%rbp)
	movslq 0x50(%rbp),%r13
	cmpq %r14,%r13
	jnb L_85054
L_85400:
	movq 0x0(%r15,%r13,8),%r14
L_85401:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_85057
L_85402:
	movq 0x10(%r14),%r15
	movl 0x0(%r14),%r13d
	movl %r13d,0x50(%rbp)
	movq 0x8(%r14),%r11
	movq $0x8C7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	movq %r11,0x10(%r14)
	addq $0x20,%r12
	movl %r13d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq %r14,0x70(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_85403+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp forceMeaningBlock_1
.p2align 0x4
.long 0x1209
L_85363:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movl 0x88(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_85364
L_85381:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_85382+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_85382
.p2align 0x4
.long 0x1210
L_85382:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_85364:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x38(%rbp)
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x20(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xCE38)(%rip),%r15
	movq %r15,0x18(%r13)
	movq $0x53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x40(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x4B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x27ED,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq 0x18(%rbp),%r10
	movq %r10,0x0(%r11)
	movq $0x8E1,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r11,0x0(%r10)
	addq $0x10,%r12
	movq $0x8E3,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r10,0x8(%r11)
	movq %r14,0x18(%r11)
	addq $0x30,%r12
	movq %r13,0x0(%r11)
	movq 0x28(%rbp),%r14
	movq %r14,0x10(%r11)
	movq %r15,0x20(%r11)
	movq $0x3921,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	movq %r15,0x88(%rbp)
	addq $0x10,%r12
	movl $0x1,0x90(%rbp)
	addq $0x88,%rbp
	leaq (L_85365+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_23
.p2align 0x4
.long 0x121B
L_85435:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x78(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x20(%rbp)
	movq 0x70(%rbp),%r13
	movq %r13,0x68(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_85436+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_33
.p2align 0x4
.long 0x122D
L_85606:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x70(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_85607
L_85608:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_85609+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_85609
.p2align 0x4
.long 0x122E
L_85609:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_85607:
	movq 0x70(%rbp),%r11
	movq 0x8(%r11),%r15
	movq 0x20(%r11),%r13
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq $0x1,0x0(%r15)
	movq 0x68(%rbp),%r14
	movq 0x98(%rbp),%r15
	movl 0x94(%rbp),%ecx
	jmp L_85572
.p2align 0x4
.long 0x11FB
L_85316:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movl 0x78(%rbp),%r15d
	movl %r15d,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_85317
L_85328:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_85329+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_85329
.p2align 0x4
.long 0x11FE
L_85329:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_85317:
	movslq 0x30(%rbp),%r15
	cmpq 0x50(%rbp),%r15
	jnb L_85054
L_85319:
	movq 0x20(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
L_85320:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_85057
L_85321:
	movq 0x10(%r13),%r15
	movl 0x0(%r13),%r14d
	movl %r14d,0x20(%rbp)
	movq 0x8(%r13),%r11
	movq $0x8C7,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	movq %r11,0x10(%r13)
	addq $0x20,%r12
	movl %r14d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,0x78(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_85322+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp forceMeaningBlock_1
.p2align 0x4
.long 0x1203
L_85343:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movl 0x68(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_85344
L_85349:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_85350+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_85350
.p2align 0x4
.long 0x1204
L_85350:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_85344:
	movslq 0x28(%rbp),%r15
	movq 0x20(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_85054
L_85346:
	movq 0x0(%r14,%r15,8),%r13
L_85347:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_85057
L_85348:
	movq 0x10(%r13),%r15
	movl 0x0(%r13),%r14d
	movq 0x8(%r13),%r11
	movq $0x8C7,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movl %r14d,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r11,0x10(%r13)
	addq $0x20,%r12
	movl $0x0,0x4(%r13)
	movq %r13,0x70(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq $0x1,0x78(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x68,%rbp
	leaq (L_85181+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp gotoMeaning_0
.p2align 0x4
.long 0x1213
L_85403:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x38(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq %r14,0x68(%rbp)
	movslq 0x50(%rbp),%r13
	cmpq %r14,%r13
	jnb L_85054
L_85405:
	movq 0x0(%r15,%r13,8),%r14
	movq 0x10(%r14),%r11
	movq %r11,0x50(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_85406+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_33
.p2align 0x4
.long 0x120A
L_85365:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x78(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x70(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_85366+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_33
.p2align 0x4
.long 0x1203
L_85436:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movl 0x68(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_85437
L_85442:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_85443+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_85443
.p2align 0x4
.long 0x1204
L_85443:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_85437:
	movslq 0x28(%rbp),%r15
	movq 0x20(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_85054
L_85439:
	movq 0x0(%r14,%r15,8),%r13
L_85440:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_85057
L_85441:
	movq 0x10(%r13),%r15
	movl 0x0(%r13),%r14d
	movq 0x8(%r13),%r11
	movq $0x8C7,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movl %r14d,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r11,0x10(%r13)
	addq $0x20,%r12
	movl $0x0,0x4(%r13)
	movq %r13,0x70(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq $0x1,0x78(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x68,%rbp
	leaq (L_85181+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp gotoMeaning_0
.p2align 0x4
.long 0x11FC
L_85322:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_85323
L_85326:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_85327+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_85327
.p2align 0x4
.long 0x11FD
L_85327:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_85323:
	movslq 0x20(%rbp),%r15
	cmpq 0x60(%rbp),%r15
	jnb L_85054
L_85325:
	movq 0x38(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x10(%r13),%r11
	movq $0x1D87,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x18(%r15)
	addq $0x30,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x20(%r15)
	movq %r15,0x10(%rbp)
	movq $0x1,%r15
	jmp L_85063
.p2align 0x4
.long 0x1214
L_85406:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movl 0x78(%rbp),%r15d
	movl %r15d,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_85407
L_85418:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_85419+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_85419
.p2align 0x4
.long 0x1217
L_85419:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_85407:
	movslq 0x30(%rbp),%r15
	cmpq 0x60(%rbp),%r15
	jnb L_85054
L_85409:
	movq 0x40(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
L_85410:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_85057
L_85411:
	movq 0x10(%r13),%r15
	movl 0x0(%r13),%r14d
	movl %r14d,0x30(%rbp)
	movq 0x8(%r13),%r11
	movq $0x8C7,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	movq %r11,0x10(%r13)
	addq $0x20,%r12
	movl %r14d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,0x78(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_85412+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp forceMeaningBlock_1
.p2align 0x4
.long 0x120B
L_85366:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movl 0x68(%rbp),%r15d
	movl %r15d,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_85367
L_85379:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_85380+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_85380
.p2align 0x4
.long 0x120F
L_85380:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_85367:
	movslq 0x30(%rbp),%r15
	movq 0x28(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_85054
L_85369:
	movq 0x0(%r14,%r15,8),%r13
L_85370:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_85057
L_85371:
	movq 0x10(%r13),%r15
	movl 0x0(%r13),%r14d
	movq 0x8(%r13),%r11
	movq $0x8C7,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movl %r14d,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r11,0x10(%r13)
	addq $0x20,%r12
	movl $0x0,0x4(%r13)
	movq %r13,0x70(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq $0x1,0x78(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x68,%rbp
	leaq (L_85372+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp gotoMeaning_0
.p2align 0x4
.long 0x1215
L_85412:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_85413
L_85416:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_85417+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_85417
.p2align 0x4
.long 0x1216
L_85417:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_85413:
	movslq 0x30(%rbp),%r15
	cmpq 0x68(%rbp),%r15
	jnb L_85054
L_85415:
	movq 0x38(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x10(%r13),%r11
	movq $0x1D87,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x18(%r15)
	addq $0x30,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x20(%r15)
	movq %r15,0x10(%rbp)
	movq $0x1,%r15
	jmp L_85063
.p2align 0x4
.long 0x120C
L_85372:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r14
	movq %r14,0x10(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x40(%rbp),%r14
	movl 0x0(%r14),%r13d
	testl %r13d,%r13d
	jnz L_409318
L_85373:
	jmp L_85063
.p2align 0x4
L_409318:
L_85374:
	movq 0x18(%rbp),%r14
	movq %r14,0x68(%rbp)
	movq 0x48(%rbp),%r14
	movq %r14,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_85375+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp ofConst_0
.p2align 0x4
.long 0x120D
L_85375:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_85376
L_85377:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_85378+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_85378
.p2align 0x4
.long 0x120E
L_85378:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_85376:
	movq $0x1D77,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x9D9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x28(%rbp),%r13
	movq %r13,0x8(%r14)
	movq $0x1DB9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_85063
.text
.p2align 0x4
.globl simplifyCase_0
.hidden simplifyCase_0
simplifyCase_0:
L_85665:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_85666
L_85992:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_85993+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_85993
.p2align 0x4
.long 0x646
L_85993:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_85666:
	movq 0x30(%rbp),%r14
	movq 0x78(%r14),%r15
	movq 0x70(%r14),%r13
	movq %r13,0x38(%rbp)
	movq 0x60(%r14),%r13
	movq %r13,0x40(%rbp)
	movq 0x30(%r14),%r13
	movq %r13,0x48(%rbp)
	movq 0x28(%r14),%r13
	movq %r13,0x50(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x58(%rbp)
	movq 0x18(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x1206,%r13
	je L_409330
L_85987:
	movq 0x0(%r14),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r11
	movl %r11d,%r10d
	movslq %r10d,%r9
	cmpq %r11,%r9
	jne L_85669
L_85989:
	testl %r10d,%r10d
	jz L_409327
L_85672:
	movq 0x18(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x1206,%r13
	je L_409323
L_85968:
	movq 0x0(%r14),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r14
	movl %r14d,%r11d
	movslq %r11d,%r10
	cmpq %r14,%r10
	jne L_409322
L_85970:
	cmpl $0x1,%r11d
	jl L_409321
L_85971:
	cmpq $0x0,%r14
	jna L_409320
L_85973:
	movq 0x0(%r13),%r14
	movq 0x0(%r14),%r11
	movq %r11,0x60(%rbp)
L_85680:
	movq %r15,0x78(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_85681+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_33
.p2align 0x4
L_409320:
L_85678:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_409321:
L_85967:
	movq (globalObjptr+0x1F10)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_409322:
L_85669:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_409323:
L_85673:
	movq 0x8(%r14),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r14
	movl %r14d,%r11d
	movslq %r11d,%r10
	cmpq %r10,%r14
	jne L_85669
L_85675:
	cmpl $0x1,%r11d
	jl L_85967
L_85676:
	cmpq $0x0,%r14
	jna L_85678
L_85679:
	movq 0x0(%r13),%r14
	movq 0x0(%r14),%r11
	movq %r11,0x60(%rbp)
	jmp L_85680
.p2align 0x4
L_409327:
L_85976:
	movq 0x10(%rbp),%r15
	cmpq $0x1,%r15
	je L_409328
L_85977:
	movq 0x58(%rbp),%r14
	movq 0x8(%r14),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x18(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x68(%rbp)
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_85978+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_33
.p2align 0x4
L_409328:
L_85986:
	movq $0x1,0x0(%rbp)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_409330:
L_85667:
	movq 0x8(%r14),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r11
	movl %r11d,%r10d
	movslq %r10d,%r9
	cmpq %r11,%r9
	jne L_85669
L_85670:
	testl %r10d,%r10d
	jz L_85976
	jmp L_85672
.p2align 0x4
.long 0x65E
L_85681:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movl 0x70(%rbp),%r15d
	movl %r15d,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_85682
L_85964:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_85965+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_85965
.p2align 0x4
.long 0x7F4
L_85965:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_85682:
	movslq 0x68(%rbp),%r15
	movq 0x48(%rbp),%r13
	cmpq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	jnb L_85678
L_85684:
	movq 0x0(%r13,%r15,8),%r11
	movq 0x18(%r11),%r10
	movq 0xFFFFFFFFFFFFFFF0(%r10),%r9
	movl %r9d,%ecx
	movslq %ecx,%r14
	cmpq %r9,%r14
	jne L_85669
L_85686:
	testl %ecx,%ecx
	jnz L_85688
L_85890:
	movq 0x18(%rbp),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x1206,%r15
	je L_409366
L_85948:
	movq 0x0(%r13),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%ecx
	movslq %ecx,%r13
	cmpq %r13,%r15
	jne L_85669
L_85950:
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_1003:
	cmpl %ecx,%ebx
	je L_409361
L_85951:
	movslq %ebx,%r13
	cmpq %r15,%r13
	jnb L_85678
L_85953:
	movq 0x60(%rbp),%r11
	movq 0x0(%r14,%r13,8),%r10
	movq 0x0(%r10),%r9
	movq 0x10(%r9),%r8
	cmpq %r8,0x10(%r11)
	jne L_409335
L_85958:
	incl %ebx
	jo L_409334
L_85959:
	jmp loop_1003
.p2align 0x4
L_409334:
L_85766:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_409335:
L_85954:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_85688
L_85956:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_85957+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_85957
.p2align 0x4
.long 0x123E
L_85957:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_85688:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r14),%r13
L_85689:
	movq %r13,%r15
	andq $0x3,%r15
	jnz x_258
L_85748:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x13F6,%r15
	je L_409355
	cmpq $0x13F7,%r15
	je L_409345
x_258:
	movq 0x20(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x2056,%r14
	je L_409336
L_85747:
	movq 0x40(%r15),%r14
	movq %r14,0x0(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x8(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x30(%rbp)
	movl 0x4(%r15),%r14d
	movl %r14d,0x38(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movl 0x0(%r15),%r14d
	movq 0x20(%r15),%r15
	movq %r15,0x20(%rbp)
	movl %r14d,0x48(%rbp)
	jmp normal_18
.p2align 0x4
L_409336:
L_85690:
	movq 0x18(%r15),%r13
	movq %r13,0x0(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x8(%rbp)
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r13,%r15
cantSimplify_0:
	movq 0x0(%r15),%r13
	movq %r13,0x10(%rbp)
	movq 0x20(%r15),%r13
	movl $0x1,0x0(%r13)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1206,%r15
	je L_409343
L_85717:
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	movq %r11,0x20(%rbp)
	cmpq %r14,%r11
	movq %r15,0x18(%rbp)
	jne L_85669
L_85719:
	testq %r11,%r11
	jz L_409341
L_85720:
	cmpq $0x7FFFFFFF,%r11
	ja L_409340
L_85721:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_85722
L_85743:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_85744+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_85744
.p2align 0x4
.long 0x4DF
L_85744:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_85722:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14DF,%rcx
	movq 0x20(%rbp),%rdx
	movq $0x30,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_85723+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_85723
.p2align 0x4
.long 0x4DF
L_85723:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq %rax,0x28(%rbp)
L_85724:
	movq $0x0,0x30(%rbp)
loop_999:
	movq 0x20(%rbp),%r14
	cmpq %r14,0x30(%rbp)
	jl L_409338
L_85725:
	movq 0x28(%rbp),%r14
	movq $0xB03,0xFFFFFFFFFFFFFFF8(%r14)
	movq $0x240F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r14,0x0(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_409337
L_85726:
	movq %r15,0x18(%rbp)
	movq %r14,%r15
L_85697:
	movq %r15,0x38(%rbp)
	movq 0x8(%rbp),%r15
	movq 0xE8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x28(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_85698+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_33
.p2align 0x4
L_409337:
L_85727:
	movq $0x1,%r13
	xchgq %r15,%r14
	xchgq %r13,%r15
L_85709:
	movq $0x1D83,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x20,%r12
	movq 0x10(%rbp),%r15
	movq %r15,0x10(%r13)
	movq %r13,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_409338:
L_85728:
	movq 0x30(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x18(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x58(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x38(%rbp)
	movq 0x8(%rbp),%r15
	movq 0xE8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x48(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_85729+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_33
.p2align 0x4
L_409340:
L_85745:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_409341:
L_85746:
	movq (globalObjptr+0x1F20)(%rip),%r15
	movq %r15,0x28(%rbp)
	jmp L_85724
.p2align 0x4
L_409343:
L_85691:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq %r13,0x18(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_85669
L_85693:
	movl %r13d,0x30(%rbp)
	movq $0x397D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_85694+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_27
.p2align 0x4
L_409345:
L_85828:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
	movq 0x18(%rbp),%r10
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0x1207,%r13
	jne x_258
L_85829:
	movq 0x0(%r10),%r11
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r13
	movl %r13d,%ecx
	movslq %ecx,%r10
	cmpq %r10,%r13
	jne L_85669
L_85831:
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_1001:
	cmpl %ecx,%ebx
	je L_409349
L_85832:
	movslq %ebx,%r10
	cmpq %r13,%r10
	jnb L_85678
L_85834:
	movq 0x0(%r11,%r10,8),%r9
	movq 0x0(%r9),%r8
	movq 0x8(%r9),%rsp
	movq 0x10(%r14),%rsi
	cmpq %rsi,0x10(%rsp)
	je L_409347
L_85835:
	incl %ebx
	jo L_85766
L_85836:
	jmp loop_1001
.p2align 0x4
L_409347:
L_85837:
	movq %r15,0x10(%rbp)
	movq %r8,%r15
doit_18:
	movq %r15,0x50(%rbp)
	movq 0x58(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_85838+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_33
.p2align 0x4
L_409349:
L_85866:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_85867
L_85888:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_85889+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_85889
.p2align 0x4
.long 0x123D
L_85889:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_85867:
	cmpq $0x1,0x10(%rbp)
	je L_409350
L_85868:
	movq $0x1,0x68(%rbp)
	movl $0x0,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_85869+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_23
.p2align 0x4
L_409350:
L_85870:
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x2054,%r14
	je L_409351
L_85887:
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%r15),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_85881+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp deleteLabelMeaning_1
.p2align 0x4
L_409351:
L_85871:
	movq 0x10(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq %r11,0x18(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x1206,%r15
	je L_409352
L_85886:
	movq 0x0(%r13),%r15
	movq %r15,0x38(%rbp)
	movq $0x3615,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r14,0x0(%r15)
	movq %r15,0x30(%rbp)
	movb $0x9,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_85873+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldP_1
.p2align 0x4
L_409352:
L_85872:
	movq 0x8(%r13),%r15
	movq %r15,0x38(%rbp)
	movq $0x3657,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r14,0x0(%r15)
	movq %r15,0x30(%rbp)
	movb $0x11,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_85873+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldP_0
.p2align 0x4
L_409355:
L_85749:
	movq 0x0(%r13),%r15
	movq 0x18(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x1206,%r13
	jne L_85750
L_85751:
	movq 0x8(%r14),%r13
	movq %r13,0x20(%rbp)
L_85752:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_85750
L_85753:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	jne L_409356
L_85754:
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	movq $0x1,0x68(%rbp)
	movl $0x0,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_85755+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_23
.p2align 0x4
L_409356:
L_85750:
	movq (globalObjptr+0x1F18)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_409361:
L_85960:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_85905
L_85962:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_85963+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_85963
.p2align 0x4
.long 0x1241
L_85963:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_85905:
	movq 0x10(%rbp),%r15
	cmpq $0x1,%r15
	je L_85909
L_85906:
	movq 0x60(%rbp),%r14
	movq 0x10(%r15),%r13
	cmpq %r13,0x10(%r14)
	jne L_85688
L_85909:
	movq 0x58(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x10(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_85910+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_33
.p2align 0x4
L_409366:
L_85891:
	movq 0x8(%r13),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%ecx
	movslq %ecx,%r13
	cmpq %r15,%r13
	jne L_85669
L_85893:
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_1002:
	cmpl %ecx,%ebx
	je L_409371
L_85894:
	movslq %ebx,%r13
	cmpq %r15,%r13
	jnb L_85678
L_85896:
	movq 0x0(%r14,%r13,8),%r11
	movq 0x0(%r11),%r10
	movq 0x60(%rbp),%r9
	movq 0x10(%r9),%r8
	cmpq %r8,0x10(%r10)
	jne L_409368
L_85901:
	incl %ebx
	jo L_85766
L_85902:
	jmp loop_1002
.p2align 0x4
L_409368:
L_85897:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_85688
L_85899:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_85900+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_85900
.p2align 0x4
.long 0x123E
L_85900:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	jmp L_85688
.p2align 0x4
L_409371:
L_85903:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_85905
L_85946:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_85947+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_85947
.p2align 0x4
.long 0x1241
L_85947:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_85905
.p2align 0x4
.long 0x1242
L_85978:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movl 0x60(%rbp),%r15d
	movl %r15d,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_85979
L_85984:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_85985+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_85985
.p2align 0x4
.long 0x1243
L_85985:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_85979:
	movslq 0x10(%rbp),%r15
	movq 0x18(%rbp),%r13
	cmpq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	jnb L_85678
L_85981:
	movq 0x0(%r13,%r15,8),%r11
L_85982:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_409385
L_85983:
	movl 0x0(%r11),%ecx
	movq 0x8(%r11),%r14
	movq 0x10(%r11),%r11
	movq %r11,%r15
tryToEliminate_0:
	movq $0x8C7,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x10(%rbp)
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x20,%r12
	movl %ecx,0x0(%r13)
	movl $0x0,0x4(%r13)
	movslq %ecx,%r15
	movq 0x50(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_85678
L_85917:
	movl 0x0(%r14,%r15,4),%r13d
	testl %r13d,%r13d
	jz L_409382
L_85918:
	movq 0x38(%rbp),%r14
	movq 0x8(%r14),%r13
	cmpq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	jnb L_85678
L_85920:
	movl 0x0(%r13,%r15,4),%r14d
	incl %r14d
	jo L_85766
L_85921:
	movl %r14d,0x0(%r13,%r15,4)
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x2054,%r14
	je L_409378
L_85939:
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_85932+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp deleteLabelMeaning_1
.p2align 0x4
L_409378:
L_85922:
	movq 0x10(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq %r11,0x20(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x1206,%r15
	je L_409379
L_85938:
	movq 0x0(%r13),%r15
	movq %r15,0x50(%rbp)
	movq $0x3615,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r14,0x0(%r15)
	movq %r15,0x48(%rbp)
	movb $0x9,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_85924+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldP_1
.p2align 0x4
L_409379:
L_85923:
	movq 0x8(%r13),%r15
	movq %r15,0x50(%rbp)
	movq $0x3657,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r14,0x0(%r15)
	movq %r15,0x48(%rbp)
	movb $0x11,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_85924+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldP_0
.p2align 0x4
L_409382:
L_85940:
	movq 0x20(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x2056,%r14
	je L_409383
L_85942:
	movq 0x40(%r15),%r14
	movq %r14,0x0(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x8(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x30(%rbp)
	movl 0x4(%r15),%r14d
	movl %r14d,0x38(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movl 0x0(%r15),%r14d
	movq 0x20(%r15),%r15
	movq %r15,0x20(%rbp)
	movl %r14d,0x48(%rbp)
	jmp normal_18
.p2align 0x4
L_409383:
L_85941:
	movq 0x18(%r15),%r13
	movq %r13,0x0(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x8(%rbp)
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r13,%r15
	jmp cantSimplify_0
.p2align 0x4
L_409385:
L_85703:
	movq (globalObjptr+0x1F00)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4E3
L_85698:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movl 0x38(%rbp),%r15d
	movl %r15d,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_85699
L_85712:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_85713+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_85713
.p2align 0x4
.long 0xBBD
L_85713:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_85699:
	movslq 0x30(%rbp),%r15
	movq 0x28(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_85678
L_85701:
	movq 0x0(%r14,%r15,8),%r13
L_85702:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_85703
L_85704:
	movq 0x10(%r13),%r15
	movl 0x0(%r13),%r14d
	movl %r14d,0x28(%rbp)
	movq 0x8(%r13),%r11
	movq $0x8C7,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	movq %r11,0x10(%r13)
	addq $0x20,%r12
	movl %r14d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,0x38(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_85705+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp forceMeaningBlock_1
.p2align 0x4
.long 0x1234
L_85729:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movl 0x58(%rbp),%r15d
	movl %r15d,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_85730
L_85741:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_85742+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_85742
.p2align 0x4
.long 0x1237
L_85742:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_85730:
	movslq 0x50(%rbp),%r15
	movq 0x48(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_85678
L_85732:
	movq 0x0(%r14,%r15,8),%r13
L_85733:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_85703
L_85734:
	movq 0x10(%r13),%r15
	movl 0x0(%r13),%r14d
	movl %r14d,0x48(%rbp)
	movq 0x8(%r13),%r11
	movq $0x8C7,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	movq %r11,0x10(%r13)
	addq $0x20,%r12
	movl %r14d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,0x58(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_85735+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp forceMeaningBlock_1
.p2align 0x4
.long 0x65B
L_85694:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_85695
L_85715:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_85716+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_85716
.p2align 0x4
.long 0x63C
L_85716:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_85695:
	movq $0x240D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_409394
L_85696:
	movq %r15,0x18(%rbp)
	movq %r14,%r15
	jmp L_85697
.p2align 0x4
L_409394:
L_85714:
	movq $0x1,%r13
	xchgq %r15,%r14
	xchgq %r13,%r15
	jmp L_85709
.p2align 0x4
.long 0x4F3
L_85838:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movl 0x50(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_85839
L_85864:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_85865+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_85865
.p2align 0x4
.long 0x1239
L_85865:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_85839:
	movslq 0x20(%rbp),%r15
	movq 0x18(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_85678
L_85841:
	movq 0x0(%r14,%r15,8),%r13
L_85842:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_85703
L_85843:
	movq 0x10(%r13),%r15
	movl 0x0(%r13),%r14d
	movq 0x8(%r13),%r11
	movq $0x8C7,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x18(%rbp)
	movq %r15,0x8(%r13)
	movq %r11,0x10(%r13)
	addq $0x20,%r12
	movl %r14d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq 0x40(%rbp),%r15
	movq 0x8(%r15),%r13
	movslq %r14d,%r15
	cmpq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	jnb L_85678
L_85845:
	movl 0x0(%r13,%r15,4),%r14d
	incl %r14d
	jo L_85766
L_85846:
	movl %r14d,0x0(%r13,%r15,4)
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x2054,%r14
	je L_409396
L_85863:
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_85857+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp deleteLabelMeaning_1
.p2align 0x4
L_409396:
L_85847:
	movq 0x10(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq %r11,0x38(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x1206,%r15
	je L_409397
L_85862:
	movq 0x0(%r13),%r15
	movq %r15,0x58(%rbp)
	movq $0x3615,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r14,0x0(%r15)
	movq %r15,0x50(%rbp)
	movb $0x9,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_85849+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldP_1
.p2align 0x4
L_409397:
L_85848:
	movq 0x8(%r13),%r15
	movq %r15,0x58(%rbp)
	movq $0x3657,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r14,0x0(%r15)
	movq %r15,0x50(%rbp)
	movb $0x11,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_85849+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldP_0
.p2align 0x4
.long 0x123C
L_85869:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r14
	movq %r14,0x18(%rbp)
	movq 0x10(%rbp),%r15
	movq %r14,0x10(%rbp)
	jmp doit_18
.p2align 0x4
.long 0x1
L_85881:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
L_85882:
	movq $0x1,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x490
L_85873:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_85882
L_85874:
	movq 0x10(%rbp),%r14
	movq 0x30(%r14),%r13
	movq 0x8(%r13),%r11
	movq 0x10(%r11),%r10
	movq %r10,0x20(%rbp)
	movq 0x0(%r11),%r10
	movq %r10,0x38(%rbp)
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_85875+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_33
.p2align 0x4
.long 0x10DA
L_85755:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_85756
L_85826:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_85827+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_85827
.p2align 0x4
.long 0xBCE
L_85827:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_85756:
	movq 0x20(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq %r14,0x48(%rbp)
	movl %r14d,%r15d
	movl %r15d,0x50(%rbp)
	movslq %r15d,%r13
	cmpq %r13,%r14
	jne L_85669
L_85758:
	movl $0x0,0x54(%rbp)
loop_1000:
	movl 0x54(%rbp),%r15d
	cmpl 0x50(%rbp),%r15d
	je L_409405
L_85759:
	movslq %r15d,%r14
	cmpq 0x48(%rbp),%r14
	jnb L_85678
L_85761:
	movq 0x20(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x60(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x68(%rbp)
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x8(%r11),%r15
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_85762+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_0
.p2align 0x4
L_409405:
L_85805:
	cmpq $0x1,0x10(%rbp)
	je L_409406
L_85806:
	movq $0x1,0x68(%rbp)
	movl $0x0,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_85807+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_23
.p2align 0x4
L_409406:
L_85808:
	movq 0x8(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x2054,%r13
	je L_409407
L_85825:
	movq 0x8(%r14),%r13
	movq %r13,0x10(%rbp)
	movq 0x0(%r14),%r14
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_85819+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp deleteLabelMeaning_1
.p2align 0x4
L_409407:
L_85809:
	movq 0x10(%r14),%r13
	movq %r13,0x10(%rbp)
	movq 0x8(%r14),%r11
	movq 0x0(%r14),%r10
	movq %r10,0x18(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0x1206,%r14
	je L_409408
L_85824:
	movq 0x0(%r11),%r14
	movq %r14,0x38(%rbp)
	movq $0x3615,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r13,0x0(%r14)
	movq %r14,0x30(%rbp)
	movb $0x9,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_85811+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldP_1
.p2align 0x4
L_409408:
L_85810:
	movq 0x8(%r11),%r14
	movq %r14,0x38(%rbp)
	movq $0x3657,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r13,0x0(%r14)
	movq %r14,0x30(%rbp)
	movb $0x11,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_85811+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldP_0
.p2align 0x4
.long 0x123F
L_85910:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movl 0x60(%rbp),%r15d
	movl %r15d,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_85911
L_85943:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_85944+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_85944
.p2align 0x4
.long 0x1240
L_85944:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_85911:
	movslq 0x18(%rbp),%r15
	movq 0x10(%rbp),%r13
	cmpq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	jnb L_85678
L_85913:
	movq 0x0(%r13,%r15,8),%r11
L_85914:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_85703
L_85915:
	movl 0x0(%r11),%ecx
	movq 0x8(%r11),%r14
	movq 0x10(%r11),%r11
	movq %r11,%r15
	jmp tryToEliminate_0
.p2align 0x4
.long 0x50D
L_85932:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_85933:
	movq $0x1,0x40(%rbp)
	movl $0x0,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_85934+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_23
.p2align 0x4
.long 0x4A7
L_85924:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je L_85933
L_85925:
	movq 0x18(%rbp),%r14
	movq 0x30(%r14),%r13
	movq 0x8(%r13),%r11
	movq 0x10(%r11),%r10
	movq %r10,0x38(%rbp)
	movq 0x0(%r11),%r10
	movq %r10,0x50(%rbp)
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_85926+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_33
.p2align 0x4
.long 0x64E
L_85705:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_85706
L_85710:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_85711+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_85711
.p2align 0x4
.long 0x650
L_85711:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_85706:
	movslq 0x28(%rbp),%r15
	movq 0x20(%rbp),%r13
	cmpq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	jnb L_85678
L_85708:
	movq 0x0(%r13,%r15,8),%r11
	movq 0x10(%r11),%r11
	movq 0x18(%rbp),%r14
	movq %r11,%r15
	jmp L_85709
.p2align 0x4
.long 0x1235
L_85735:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_85736
L_85739:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_85740+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_85740
.p2align 0x4
.long 0x1236
L_85740:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_85736:
	movslq 0x48(%rbp),%r15
	movq 0x40(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_85678
L_85738:
	movq 0x0(%r14,%r15,8),%r13
	movq 0x10(%r13),%r11
	movq $0x17D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x30(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x30(%rbp)
	jmp loop_999
.p2align 0x4
.long 0x786
L_85857:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_85858:
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x18(%rbp)
	jmp gotoMeaning_0
.p2align 0x4
.long 0x4A8
L_85849:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x38(%rbp),%r15
	cmpq $0x1,%r15
	je L_85858
L_85850:
	movq 0x20(%rbp),%r14
	movq 0x30(%r14),%r13
	movq 0x8(%r13),%r11
	movq 0x10(%r11),%r10
	movq %r10,0x40(%rbp)
	movq 0x0(%r11),%r10
	movq %r10,0x58(%rbp)
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_85851+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_33
.p2align 0x4
.long 0x2
L_85875:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movl 0x30(%rbp),%r15d
	movl %r15d,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_85876
L_85883:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_85884+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_85884
.p2align 0x4
.long 0x97E
L_85884:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_85876:
	movslq 0x18(%rbp),%r15
	movq 0x20(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_85678
L_85878:
	movq 0x0(%r14,%r15,8),%r13
L_85879:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_85703
L_85880:
	movq 0x10(%r13),%r15
	movl 0x0(%r13),%r14d
	movq 0x8(%r13),%r11
	movq $0x8C7,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movl %r14d,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r11,0x10(%r13)
	addq $0x20,%r12
	movl $0x0,0x4(%r13)
	movq %r13,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_85881+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp deleteLabelMeaning_1
.p2align 0x4
.long 0x1238
L_85762:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movl 0x78(%rbp),%r15d
	movl %r15d,0x70(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_85763
L_85803:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_85804+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_85804
.p2align 0x4
.long 0x123B
L_85804:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_85763:
	movl 0x70(%rbp),%r15d
	testl %r15d,%r15d
	jz L_85765
L_85768:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_85769
L_85801:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_85802+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_85802
.p2align 0x4
.long 0x123A
L_85802:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_85769:
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0x18(%rbp),%r14
	movq 0x0(%r14),%rsi
	movq 0x68(%rbp),%r14
	movq 0x0(%r14),%rdi
	xorq %rax,%rax
	call IntInf_equal
L_85770:
	testl %eax,%eax
	jz L_409423
L_85772:
	movq 0x38(%rbp),%r14
	movq %r14,0x10(%rbp)
	movq 0x60(%rbp),%r15
doit_17:
	movq %r15,0x50(%rbp)
	movq 0x58(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_85773+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_33
.p2align 0x4
L_409423:
L_85765:
	movl 0x54(%rbp),%r15d
	incl %r15d
	jo L_85766
L_85767:
	movl %r15d,0x54(%rbp)
	jmp loop_1000
.p2align 0x4
.long 0x123C
L_85807:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r14
	movq %r14,0x18(%rbp)
	movq 0x10(%rbp),%r15
	movq %r14,0x10(%rbp)
	jmp doit_17
.p2align 0x4
.long 0x1
L_85819:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
L_85820:
	movq $0x1,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x490
L_85811:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_85820
L_85812:
	movq 0x10(%rbp),%r14
	movq 0x30(%r14),%r13
	movq 0x8(%r13),%r11
	movq 0x10(%r11),%r10
	movq %r10,0x20(%rbp)
	movq 0x0(%r11),%r10
	movq %r10,0x38(%rbp)
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_85813+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_33
.p2align 0x4
.long 0x50D
L_85934:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x18(%rbp)
	jmp gotoMeaning_0
.p2align 0x4
.long 0xAA1
L_85926:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movl 0x48(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_85927
L_85935:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_85936+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_85936
.p2align 0x4
.long 0x9A9
L_85936:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_85927:
	movslq 0x20(%rbp),%r15
	movq 0x38(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_85678
L_85929:
	movq 0x0(%r14,%r15,8),%r13
L_85930:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_85703
L_85931:
	movq 0x10(%r13),%r15
	movl 0x0(%r13),%r14d
	movq 0x8(%r13),%r11
	movq $0x8C7,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movl %r14d,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r11,0x10(%r13)
	addq $0x20,%r12
	movl $0x0,0x4(%r13)
	movq %r13,0x40(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_85932+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp deleteLabelMeaning_1
.p2align 0x4
.long 0x70D
L_85851:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movl 0x50(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_85852
L_85859:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_85860+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_85860
.p2align 0x4
.long 0x70E
L_85860:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_85852:
	movslq 0x38(%rbp),%r15
	movq 0x40(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_85678
L_85854:
	movq 0x0(%r14,%r15,8),%r13
L_85855:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_85703
L_85856:
	movq 0x10(%r13),%r15
	movl 0x0(%r13),%r14d
	movq 0x8(%r13),%r11
	movq $0x8C7,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movl %r14d,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r11,0x10(%r13)
	addq $0x20,%r12
	movl $0x0,0x4(%r13)
	movq %r13,0x40(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_85857+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp deleteLabelMeaning_1
.p2align 0x4
.long 0x4F3
L_85773:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movl 0x50(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_85774
L_85799:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_85800+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_85800
.p2align 0x4
.long 0x1239
L_85800:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_85774:
	movslq 0x20(%rbp),%r15
	movq 0x18(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_85678
L_85776:
	movq 0x0(%r14,%r15,8),%r13
L_85777:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_85703
L_85778:
	movq 0x10(%r13),%r15
	movl 0x0(%r13),%r14d
	movq 0x8(%r13),%r11
	movq $0x8C7,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x18(%rbp)
	movq %r15,0x8(%r13)
	movq %r11,0x10(%r13)
	addq $0x20,%r12
	movl %r14d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq 0x40(%rbp),%r15
	movq 0x8(%r15),%r13
	movslq %r14d,%r15
	cmpq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	jnb L_85678
L_85780:
	movl 0x0(%r13,%r15,4),%r14d
	incl %r14d
	jo L_85766
L_85781:
	movl %r14d,0x0(%r13,%r15,4)
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x2054,%r14
	je L_409435
L_85798:
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_85792+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp deleteLabelMeaning_1
.p2align 0x4
L_409435:
L_85782:
	movq 0x10(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq %r11,0x38(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x1206,%r15
	je L_409436
L_85797:
	movq 0x0(%r13),%r15
	movq %r15,0x58(%rbp)
	movq $0x3615,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r14,0x0(%r15)
	movq %r15,0x50(%rbp)
	movb $0x9,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_85784+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldP_1
.p2align 0x4
L_409436:
L_85783:
	movq 0x8(%r13),%r15
	movq %r15,0x58(%rbp)
	movq $0x3657,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r14,0x0(%r15)
	movq %r15,0x50(%rbp)
	movb $0x11,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_85784+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldP_0
.p2align 0x4
.long 0x2
L_85813:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movl 0x30(%rbp),%r15d
	movl %r15d,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_85814
L_85821:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_85822+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_85822
.p2align 0x4
.long 0x97E
L_85822:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_85814:
	movslq 0x18(%rbp),%r15
	movq 0x20(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_85678
L_85816:
	movq 0x0(%r14,%r15,8),%r13
L_85817:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_85703
L_85818:
	movq 0x10(%r13),%r15
	movl 0x0(%r13),%r14d
	movq 0x8(%r13),%r11
	movq $0x8C7,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movl %r14d,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r11,0x10(%r13)
	addq $0x20,%r12
	movl $0x0,0x4(%r13)
	movq %r13,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_85819+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp deleteLabelMeaning_1
.p2align 0x4
.long 0x786
L_85792:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_85793:
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x18(%rbp)
	jmp gotoMeaning_0
.p2align 0x4
.long 0x4A8
L_85784:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x38(%rbp),%r15
	cmpq $0x1,%r15
	je L_85793
L_85785:
	movq 0x20(%rbp),%r14
	movq 0x30(%r14),%r13
	movq 0x8(%r13),%r11
	movq 0x10(%r11),%r10
	movq %r10,0x40(%rbp)
	movq 0x0(%r11),%r10
	movq %r10,0x58(%rbp)
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_85786+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_33
.p2align 0x4
.long 0x70D
L_85786:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movl 0x50(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_85787
L_85794:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_85795+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_85795
.p2align 0x4
.long 0x70E
L_85795:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_85787:
	movslq 0x38(%rbp),%r15
	movq 0x40(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_85678
L_85789:
	movq 0x0(%r14,%r15,8),%r13
L_85790:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_85703
L_85791:
	movq 0x10(%r13),%r15
	movl 0x0(%r13),%r14d
	movq 0x8(%r13),%r11
	movq $0x8C7,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movl %r14d,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r11,0x10(%r13)
	addq $0x20,%r12
	movl $0x0,0x4(%r13)
	movq %r13,0x40(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_85792+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp deleteLabelMeaning_1
.text
.p2align 0x4
.globl deleteLabelMeaning_1
.hidden deleteLabelMeaning_1
deleteLabelMeaning_1:
loopS_13:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_85994
L_86047:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_86048+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_86048
.p2align 0x4
.long 0x45F
L_86048:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_85994:
	movq 0x0(%rbp),%r15
	movl 0x0(%r15),%ecx
	movq 0x10(%r15),%r14
	movq %r14,0x10(%rbp)
.p2align 0x4,,0x7
loop_1004:
	movq 0x8(%rbp),%r15
	movq 0x38(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x20(%r15),%r14
	movslq %ecx,%r15
	movq %r15,0x30(%rbp)
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_85996
L_85997:
	movl 0x0(%r14,%r15,4),%r13d
	decl %r13d
	jo L_409459
L_85999:
	movl %r13d,0x0(%r14,%r15,4)
	testl %r13d,%r13d
	jnz L_409458
L_86001:
	movq 0x10(%rbp),%r15
	cmpq $0x1,%r15
	je L_409457
	cmpq $0x2,%r15
	je L_409454
L_86002:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xEDF,%r14
	je L_409453
	cmpq $0xEE0,%r14
	je L_409452
	cmpq $0xEE1,%r14
	je L_409449
L_86003:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_409449:
L_86006:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_86007
L_86019:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_86020+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_86020
.p2align 0x4
.long 0x63A
L_86020:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_86007:
	movq 0x10(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x8(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1206,%r15
	je L_409450
L_86018:
	movq 0x0(%r14),%r15
	movq %r15,0x40(%rbp)
	movq $0x3623,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x38(%rbp)
	movb $0x10,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_86009+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldP_1
.p2align 0x4
L_409450:
L_86008:
	movq 0x8(%r14),%r15
	movq %r15,0x40(%rbp)
	movq $0x3649,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x38(%rbp)
	movb $0xA,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_86009+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldP_0
.p2align 0x4
L_409452:
L_86005:
	movq 0x10(%rbp),%r15
	movq 0x10(%r15),%r14
	movl 0x0(%r14),%ecx
	movq 0x10(%r14),%r15
	movq %r15,0x10(%rbp)
	jmp loop_1004
.p2align 0x4
L_409453:
L_86004:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_409454:
L_86022:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_86023
L_86045:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r14d
	movl %r14d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r14
	movq %r14,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_86046+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_86046
.p2align 0x4
.long 0x10F2
L_86046:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_86023:
	movq 0x30(%rbp),%r15
	movq 0x28(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_409455
L_86025:
	movq 0x0(%r14,%r15,8),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x10(%rbp)
	movq $0x36A7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x38(%rbp)
	movq $0x1E,0x30(%rbp)
	movq $0x1B,0x40(%rbp)
	movq %r11,0x48(%rbp)
	addq $0x30,%rbp
	leaq (L_86026+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachFuncLabelVar_1
.p2align 0x4
L_409455:
L_85996:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_409457:
L_86021:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_409458:
L_86000:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_409459:
L_85998:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x5FF
L_86009:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_409462
L_86010:
	movq 0x20(%rbp),%r14
	movq 0x8(%r14),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x10(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x28(%rbp)
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_86011+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_33
.p2align 0x4
L_409462:
L_86017:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x8A9
L_86026:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_86027:
	movq 0x10(%rbp),%r15
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_86028
L_86029:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xEC2,%r14
	jne L_409467
L_86030:
	movq 0x10(%r15),%r14
	cmpq $0x1,%r14
	je L_409466
	cmpq $0x2,%r14
	je L_409465
L_86031:
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_409464
	cmpq $0x2,%r15
	je L_409463
L_86032:
	movq %r15,0x38(%rbp)
	movq 0x20(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_86033+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_33
.p2align 0x4
L_409463:
L_86042:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_409464:
L_86041:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_409465:
L_86044:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_409466:
L_86043:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_409467:
L_86028:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4E5
L_86011:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movl 0x20(%rbp),%r15d
	movl %r15d,0x18(%rbp)
	movslq %r15d,%r14
	movq 0x10(%rbp),%r15
	cmpq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	jnb L_85996
L_86013:
	movq 0x0(%r15,%r14,8),%r13
L_86014:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_409469
L_86016:
	movl 0x0(%r13),%ecx
	movq 0x8(%r13),%r15
	movq %r15,0x10(%rbp)
	jmp loop_1004
.p2align 0x4
L_409469:
L_86015:
	movq (globalObjptr+0x1F00)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x71E
L_86033:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movl 0x38(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	movslq %r15d,%r14
	movq 0x28(%rbp),%r15
	cmpq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	jnb L_85996
L_86035:
	movq 0x0(%r15,%r14,8),%r13
L_86036:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_86015
L_86037:
	movslq 0x0(%r13),%r15
	movq 0x18(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_85996
L_86039:
	movl 0x0(%r14,%r15,4),%r13d
	decl %r13d
	jo L_85998
L_86040:
	movl %r13d,0x0(%r14,%r15,4)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl primApp_6
.hidden primApp_6
primApp_6:
L_86049:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x20(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_86050
L_88826:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_88827+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_88827
.p2align 0x4
.long 0x6FE
L_88827:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_86050:
	movq 0x10(%rbp),%r15
	movq 0x28(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x30(%rbp)
	cmpq %rdx,%r14
	jne L_86052
L_86053:
	testq %rdx,%rdx
	jz L_409487
L_86054:
	cmpq $0x7FFFFFFF,%rdx
	ja L_409486
L_86055:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x153B,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_86056+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_86056
.p2align 0x4
.long 0x1244
L_86056:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq %rax,0x10(%rbp)
L_86057:
	movq $0x0,0x38(%rbp)
.p2align 0x4,,0x7
loop_1005:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_409485
.p2align 0x4,,0x7
L_86058:
	movq 0x38(%rbp),%r14
	cmpq 0x30(%rbp),%r14
	jnl L_409480
L_88810:
	movl %r14d,%r13d
	movslq %r13d,%r15
	movq 0x0(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x8(%r13),%r14
	movq 0x0(%r14),%r11
L_88811:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_409479
L_88814:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0x13F6,%r15
	je L_409478
	cmpq $0x13F7,%r15
	je L_409475
L_88815:
	movq $0x27F9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x10,%r12
L_88813:
	movq 0x10(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x38(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x38(%rbp)
	jmp loop_1005
.p2align 0x4
L_409475:
L_88817:
	movq 0x8(%r11),%r15
	movq 0x0(%r11),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r10
	movl %r10d,%r9d
	movslq %r9d,%r8
	cmpq %r8,%r10
	jne L_409477
L_88819:
	testl %r9d,%r9d
	jz L_409476
L_88820:
	movq $0x27F9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x10,%r12
	jmp L_88813
.p2align 0x4
L_409476:
L_88821:
	movq $0x27FD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
	jmp L_88813
.p2align 0x4
L_409477:
L_86052:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_409478:
L_88816:
	movq 0x0(%r11),%r15
	movq $0x27FB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
	jmp L_88813
.p2align 0x4
L_409479:
L_88812:
	movq $0x27F9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x10,%r12
	jmp L_88813
.p2align 0x4
L_409480:
L_86059:
	movq 0x10(%rbp),%r15
	movq $0x1787,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r13,%r10
	jne L_86052
L_86061:
	decl %r11d
	jo L_409483
L_86063:
	movl %r11d,0x38(%rbp)
	movq $0x1,0x30(%rbp)
.p2align 0x4,,0x7
loop_1006:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_409482
.p2align 0x4,,0x7
L_86064:
	movl 0x38(%rbp),%r15d
	cmpl $0x0,%r15d
	jl L_409481
L_86065:
	movl %r15d,%r14d
	decl %r14d
	movslq %r15d,%r13
	movl %r14d,0x38(%rbp)
	movq 0x10(%rbp),%r15
	movq 0x0(%r15,%r13,8),%r14
	movq $0x27FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x30(%rbp)
	jmp loop_1006
.p2align 0x4
L_409481:
L_86066:
	movq 0x28(%rbp),%r14
	movq 0x290(%r14),%r13
	movq %r13,0x10(%rbp)
	movq 0x288(%r14),%r11
	movq %r11,0x38(%rbp)
	movq 0x278(%r14),%r11
	movq %r11,0x40(%rbp)
	movq 0x270(%r14),%r11
	movq %r11,0x48(%rbp)
	movq 0x268(%r14),%r11
	movq %r11,0x50(%rbp)
	movq 0x260(%r14),%r11
	movq %r11,0x58(%rbp)
	movq 0x258(%r14),%r11
	movq %r11,0x60(%rbp)
	movq 0x250(%r14),%r11
	movq %r11,0x68(%rbp)
	movq 0x248(%r14),%r11
	movq %r11,0x70(%rbp)
	movq 0x240(%r14),%r11
	movq %r11,0x78(%rbp)
	movq 0x238(%r14),%r11
	movq %r11,0x80(%rbp)
	movq 0x230(%r14),%r11
	movq %r11,0x88(%rbp)
	movq 0x228(%r14),%r11
	movq %r11,0x90(%rbp)
	movq 0x220(%r14),%r11
	movq %r11,0x98(%rbp)
	movq 0x218(%r14),%r11
	movq %r11,0xA0(%rbp)
	movq 0x210(%r14),%r11
	movq %r11,0xA8(%rbp)
	movq 0x208(%r14),%r11
	movq %r11,0xB0(%rbp)
	movq 0x200(%r14),%r11
	movq %r11,0xB8(%rbp)
	movq 0x1F8(%r14),%r11
	movq %r11,0xC0(%rbp)
	movq 0x1F0(%r14),%r11
	movq %r11,0xC8(%rbp)
	movq 0x1E8(%r14),%r11
	movq %r11,0xD0(%rbp)
	movq 0x1E0(%r14),%r11
	movq %r11,0xD8(%rbp)
	movq 0x1D8(%r14),%r11
	movq %r11,0xE0(%rbp)
	movq 0x1D0(%r14),%r11
	movq %r11,0xE8(%rbp)
	movq 0x1C8(%r14),%r11
	movq %r11,0xF0(%rbp)
	movq 0x1C0(%r14),%r11
	movq %r11,0xF8(%rbp)
	movq 0x1B8(%r14),%r11
	movq %r11,0x100(%rbp)
	movq 0x1B0(%r14),%r11
	movq %r11,0x108(%rbp)
	movq 0x1A8(%r14),%r11
	movq %r11,0x110(%rbp)
	movq 0x1A0(%r14),%r11
	movq %r11,0x118(%rbp)
	movq 0x198(%r14),%r11
	movq %r11,0x120(%rbp)
	movq 0x190(%r14),%r11
	movq %r11,0x128(%rbp)
	movq 0x188(%r14),%r11
	movq %r11,0x130(%rbp)
	movq 0x180(%r14),%r11
	movq %r11,0x138(%rbp)
	movq 0x178(%r14),%r11
	movq %r11,0x140(%rbp)
	movq 0x170(%r14),%r11
	movq %r11,0x148(%rbp)
	movq 0x168(%r14),%r11
	movq %r11,0x150(%rbp)
	movq 0x160(%r14),%r11
	movq %r11,0x158(%rbp)
	movq 0x158(%r14),%r11
	movq %r11,0x160(%rbp)
	movq 0x150(%r14),%r11
	movq %r11,0x168(%rbp)
	movq 0x148(%r14),%r11
	movq %r11,0x170(%rbp)
	movq 0x140(%r14),%r11
	movq %r11,0x178(%rbp)
	movq 0x138(%r14),%r11
	movq %r11,0x180(%rbp)
	movq 0x130(%r14),%r11
	movq %r11,0x188(%rbp)
	movq 0x128(%r14),%r11
	movq %r11,0x190(%rbp)
	movq 0x120(%r14),%r11
	movq %r11,0x198(%rbp)
	movq 0x118(%r14),%r11
	movq %r11,0x1A0(%rbp)
	movq 0x110(%r14),%r11
	movq %r11,0x1A8(%rbp)
	movq 0x108(%r14),%r11
	movq %r11,0x1B0(%rbp)
	movq 0x100(%r14),%r11
	movq %r11,0x1B8(%rbp)
	movq 0xF8(%r14),%r11
	movq %r11,0x1C0(%rbp)
	movq 0xF0(%r14),%r11
	movq %r11,0x1C8(%rbp)
	movq 0xE8(%r14),%r11
	movq %r11,0x1D0(%rbp)
	movq 0xE0(%r14),%r11
	movq %r11,0x1D8(%rbp)
	movq 0xD8(%r14),%r11
	movq %r11,0x1E0(%rbp)
	movq 0xD0(%r14),%r11
	movq %r11,0x1E8(%rbp)
	movq 0xC8(%r14),%r11
	movq %r11,0x1F0(%rbp)
	movq 0xC0(%r14),%r11
	movq %r11,0x1F8(%rbp)
	movq 0xB8(%r14),%r11
	movq %r11,0x200(%rbp)
	movq 0xB0(%r14),%r11
	movq %r11,0x208(%rbp)
	movq 0xA8(%r14),%r11
	movq %r11,0x210(%rbp)
	movq 0xA0(%r14),%r11
	movq %r11,0x218(%rbp)
	movq 0x98(%r14),%r11
	movq %r11,0x220(%rbp)
	movq 0x90(%r14),%r11
	movq %r11,0x228(%rbp)
	movq 0x88(%r14),%r11
	movq %r11,0x230(%rbp)
	movq 0x80(%r14),%r11
	movq %r11,0x238(%rbp)
	movq 0x78(%r14),%r11
	movq %r11,0x240(%rbp)
	movq 0x70(%r14),%r11
	movq %r11,0x248(%rbp)
	movq 0x68(%r14),%r11
	movq %r11,0x250(%rbp)
	movq 0x60(%r14),%r11
	movq %r11,0x258(%rbp)
	movq 0x58(%r14),%r11
	movq %r11,0x260(%rbp)
	movq 0x50(%r14),%r11
	movq %r11,0x268(%rbp)
	movq 0x48(%r14),%r11
	movq %r11,0x270(%rbp)
	movq 0x40(%r14),%r11
	movq %r11,0x278(%rbp)
	movq 0x38(%r14),%r11
	movq %r11,0x280(%rbp)
	movq 0x30(%r14),%r11
	movq %r11,0x288(%rbp)
	movq 0x28(%r14),%r11
	movq %r11,0x290(%rbp)
	movq 0x18(%r14),%r11
	movq %r11,0x298(%rbp)
	movq 0x10(%r14),%r11
	movq %r11,0x2A0(%rbp)
	movq 0x8(%r14),%r11
	movq %r11,0x2A8(%rbp)
	movq 0x0(%r14),%r11
	movq %r11,0x2B0(%rbp)
	movl $0x80,0x2C0(%rbp)
	movq $0x3,0x2C8(%rbp)
	movq %r13,0x2D0(%rbp)
	addq $0x2C0,%rbp
	leaq (L_86067+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
L_409482:
L_88808:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_88809+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_88809
.p2align 0x4
.long 0x129B
L_88809:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_86064
.p2align 0x4
L_409483:
L_86062:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_409485:
L_88822:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_88823+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_88823
.p2align 0x4
.long 0x129C
L_88823:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_86058
.p2align 0x4
L_409486:
L_88824:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_409487:
L_88825:
	movq (globalObjptr+0x1F08)(%rip),%r15
	movq %r15,0x10(%rbp)
	jmp L_86057
.p2align 0x4
.long 0x1245
L_86067:
	addq $0xFFFFFFFFFFFFFD40,%rbp
	movq 0x2C0(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq %r15,0x2C0(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x2C8(%rbp)
	addq $0x2C0,%rbp
	leaq (L_86068+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigNeg_0
.p2align 0x4
.long 0x1246
L_86068:
	addq $0xFFFFFFFFFFFFFD40,%rbp
	movq 0x2C0(%rbp),%r15
	movq %r15,0x2B8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_86069
L_88806:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2C8,%rbp
	leaq (L_88807+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_88807
.p2align 0x4
.long 0x129A
L_88807:
	addq $0xFFFFFFFFFFFFFD38,%rbp
L_86069:
	movq 0x40(%rbp),%r13
	movq 0x30(%r13),%r15
	movq 0x28(%r13),%r14
	movq 0x20(%r13),%r11
	movq 0x38(%r13),%r10
	movq 0x8(%r10),%r9
	movq $0x3D6F,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq 0x2B8(%rbp),%r10
	movq %r10,0x0(%r13)
	movq 0x28(%rbp),%r10
	movq %r10,0x8(%r13)
	movq $0x1763,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r10,0x2C0(%rbp)
	movq %r9,0x0(%r10)
	movq %r13,0x8(%r10)
	movq %r15,0x10(%r10)
	movq %r14,0x18(%r10)
	movq %r11,0x20(%r10)
	addq $0x30,%r12
	movq 0x30(%rbp),%r13
	cmpq $0x1,%r13
	je L_86712
L_86070:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
.p2align 0x4,,0x7
L_86071:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0x13FD,%r13
	jne L_410519
L_86708:
	cmpq $0x1,%r14
	je L_409490
L_86709:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_86071
.p2align 0x4
L_409490:
L_86710:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_86712
L_88803:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2D0,%rbp
	leaq (L_88804+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_88804
.p2align 0x4
.long 0x1299
L_88804:
	addq $0xFFFFFFFFFFFFFD30,%rbp
L_86712:
	movq 0x30(%rbp),%r15
	cmpq $0x1,%r15
	je L_410517
L_86713:
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r15
	movq %r15,0x30(%rbp)
	movq $0x1,0x40(%rbp)
.p2align 0x4,,0x7
L_86714:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_410516
.p2align 0x4,,0x7
L_86715:
	movq 0x30(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x13FD,%r14
	jne L_410515
L_86717:
	movq 0x0(%r15),%r14
	movq $0x284B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x28(%rbp),%r13
	cmpq $0x1,%r13
	je L_409491
L_86718:
	movq %r15,0x40(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x28(%rbp)
	movq %r15,0x30(%rbp)
	jmp L_86714
.p2align 0x4
L_409491:
L_86719:
	movq %r14,0x30(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq $0x1,0x40(%rbp)
.p2align 0x4,,0x7
L_86720:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_410514
.p2align 0x4,,0x7
L_86721:
	movq $0x284B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_409492
L_86722:
	movq %r15,0x40(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x30(%rbp)
	jmp L_86720
.p2align 0x4
L_409492:
L_86724:
	movq 0x8(%rbp),%r14
	movq %r14,%r13
	andq $0xFF,%r13
	cmpq $0xD,%r13
	je L_410498
	cmpq $0x16,%r13
	je L_410483
	cmpq $0x21,%r13
	je L_410465
	cmpq $0x22,%r13
	je L_410452
	cmpq $0x32,%r13
	je L_410439
	cmpq $0x39,%r13
	je L_410421
	cmpq $0x3A,%r13
	je L_410400
	cmpq $0x59,%r13
	je L_410383
	cmpq $0x5A,%r13
	je L_410365
	cmpq $0x5F,%r13
	je L_410350
	cmpq $0x67,%r13
	je L_410335
	cmpq $0x69,%r13
	je L_410320
	cmpq $0x6A,%r13
	je L_410305
	cmpq $0x6B,%r13
	je L_410287
	cmpq $0x6D,%r13
	je L_410272
	cmpq $0x6E,%r13
	je L_410257
	cmpq $0x6F,%r13
	je L_410242
	cmpq $0x71,%r13
	je L_410227
	cmpq $0x72,%r13
	je L_410212
	cmpq $0x73,%r13
	je L_410197
	cmpq $0x75,%r13
	je L_410182
	cmpq $0x76,%r13
	je L_410165
	cmpq $0x77,%r13
	je L_410147
	cmpq $0x79,%r13
	je L_410129
	cmpq $0x7A,%r13
	je L_410107
	cmpq $0x7D,%r13
	je L_410085
	cmpq $0x7E,%r13
	je L_410063
	cmpq $0x7F,%r13
	je L_410045
	cmpq $0x81,%r13
	je L_410024
	cmpq $0x82,%r13
	je L_410003
	cmpq $0x83,%r13
	je L_409986
	cmpq $0x85,%r13
	je L_409964
	cmpq $0x87,%r13
	je L_409946
L_86725:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_86727
L_86834:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%rax
	shrq $0x1,%rax
	subq $0xEF7,%rax
	cmpq $0x18,%rax
	ja L_409493
	leaq jumpTable_216(%rip),%rbx
	jmp *(%rbx,%rax,8)
.data
.p2align 0x4
jumpTable_216:
.quad L_409927,L_409908,L_409890,L_409872,L_409854,L_409836,L_409809,L_409790,L_409771,L_409753,L_409734,L_409719,L_409704,L_409685,L_409667,L_409649,L_409631,L_409615,L_409597,L_409579,L_409561,L_409542,L_409524,L_86727,L_409506
.text
.p2align 0x4
L_409493:
L_86727:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_86075
L_86728:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
L_86729:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_86075
L_86730:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE4C,%r15
	jne L_86075
L_86731:
	movq 0x0(%r13),%r15
L_86732:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_86075
L_86733:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_86734:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_409501
L_86774:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	je L_409498
	cmpq $0xE4C,%r14
	je L_409495
	movq %r13,%r14
L_86735:
	cmpq $0x1,%r14
	jne L_409494
L_86736:
	movq %r15,0x10(%rbp)
intInfUnary_2:
	movq 0x10(%rbp),%r15
	movq %r15,0x2D0(%rbp)
	movq 0x2C0(%rbp),%r15
	movq %r15,0x2D8(%rbp)
	addq $0x2D0,%rbp
	leaq (L_86737+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1473
.p2align 0x4
L_409494:
L_86075:
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x2,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_409495:
L_86829:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_409497
L_86830:
	cmpq $0x1,0x8(%r13)
	jne L_86075
x_261:
	movq %r14,0x30(%rbp)
	movq %r15,0x38(%rbp)
	leaq L_86749(%rip),%r15
	movq %r15,0x18(%rbp)
	movq %rbp,%r15
	addq $0x20,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x98(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x2C0(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0x60(%rbp),%r15
	movq 0x78(%rbp),%r14
	movq %r14,0x60(%rbp)
	movq %r15,0x78(%rbp)
	movq 0x70(%rbp),%r15
	movq 0x68(%rbp),%r14
	movq %r14,0x70(%rbp)
	movq %r15,0x68(%rbp)
	addq $0x30,%rbp
	leaq (L_86832+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp intInfBinary_12
.p2align 0x4
L_409497:
L_86833:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_2
.p2align 0x4
L_409498:
L_86775:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_409500
L_86776:
	cmpq $0x1,0x8(%r13)
	jne L_86075
L_86777:
	movq %r15,0x28(%rbp)
	movq %r14,0x30(%rbp)
x_260:
	movq 0x28(%rbp),%r15
	movq %r15,0x2D0(%rbp)
	movq 0x2C0(%rbp),%r15
	movq %r15,0x2D8(%rbp)
	addq $0x2D0,%rbp
	leaq (L_86778+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1473
.p2align 0x4
L_409500:
L_86828:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_2
.p2align 0x4
L_409501:
	movq %r13,%r14
	jmp L_86735
.p2align 0x4
L_409506:
L_87743:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_86075
L_87744:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
L_87745:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_86075
L_87746:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE4B,%r15
	je L_409517
	cmpq $0xE4C,%r15
	je L_409507
	jmp L_86075
.p2align 0x4
L_409507:
L_87759:
	movq 0x0(%r13),%r15
L_87760:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_86075
L_87761:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_87762:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_409515
L_87765:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	je L_409512
	cmpq $0xE4C,%r14
	je L_409509
	movq %r13,%r14
L_87763:
	cmpq $0x1,%r14
	jne L_86075
L_87764:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_2
.p2align 0x4
L_409509:
L_87770:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_409511
L_87771:
	cmpq $0x1,0x8(%r13)
	jne L_86075
	jmp x_261
.p2align 0x4
L_409511:
L_87773:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_2
.p2align 0x4
L_409512:
L_87766:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_409514
L_87767:
	cmpq $0x1,0x8(%r13)
	jne L_86075
L_87768:
	movq %r15,0x28(%rbp)
	movq %r14,0x30(%rbp)
	jmp x_260
.p2align 0x4
L_409514:
L_87769:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_2
.p2align 0x4
L_409515:
	movq %r13,%r14
	jmp L_87763
.p2align 0x4
L_409517:
L_87747:
	movq 0x0(%r13),%r15
	cmpq $0x1,%r14
	jne L_86075
L_87748:
	movq 0x138(%rbp),%r14
	movq 0x8(%r14),%r13
	cmpq $0x1,0x0(%r13)
	jne L_86075
L_87750:
	movq %r15,%r14
	andq $0x1,%r14
	cmpq $0x1,%r14
	je L_409518
L_87751:
	movsd 0x0(%r15),%xmm15
	movsd %xmm15,0x30(%rbp)
	movq 0x150(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x158(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_87752+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1474
.p2align 0x4
L_409518:
L_87758:
	shrq $0x1,%r15
	movl %r15d,%r14d
	movd %r14d,%xmm15
	movss %xmm15,%xmm14
	movss %xmm14,0x30(%rbp)
	movq 0x140(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x148(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_87752+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1475
.p2align 0x4
L_409524:
L_87700:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_86075
L_87701:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
L_87702:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_86075
L_87703:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE4A,%r15
	je L_409535
	cmpq $0xE4C,%r15
	je L_409525
	jmp L_86075
.p2align 0x4
L_409525:
L_87727:
	movq 0x0(%r13),%r15
L_87728:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_86075
L_87729:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_87730:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_409533
L_87733:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	je L_409530
	cmpq $0xE4C,%r14
	je L_409527
	movq %r13,%r14
L_87731:
	cmpq $0x1,%r14
	jne L_86075
L_87732:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_2
.p2align 0x4
L_409527:
L_87738:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_409529
L_87739:
	cmpq $0x1,0x8(%r13)
	jne L_86075
	jmp x_261
.p2align 0x4
L_409529:
L_87741:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_2
.p2align 0x4
L_409530:
L_87734:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_409532
L_87735:
	cmpq $0x1,0x8(%r13)
	jne L_86075
L_87736:
	movq %r15,0x28(%rbp)
	movq %r14,0x30(%rbp)
	jmp x_260
.p2align 0x4
L_409532:
L_87737:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_2
.p2align 0x4
L_409533:
	movq %r13,%r14
	jmp L_87731
.p2align 0x4
L_409535:
L_87704:
	movq 0x0(%r13),%r15
	movq %r15,0x28(%rbp)
L_87705:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_86075
L_87706:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_87707:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_86075
L_87708:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	jne L_86075
L_87709:
	movq 0x0(%r11),%r14
	movq %r14,0x30(%rbp)
	cmpq $0x1,%r13
	jne L_86075
L_87710:
	movq 0x200(%rbp),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x38(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x40(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x48(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x58(%rbp)
	movq %r13,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_87711+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_0
.p2align 0x4
L_409542:
L_87663:
	movq 0x8(%rbp),%r14
	movl 0x0(%r14),%r13d
	movl %r13d,0x28(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x30(%rbp)
L_87664:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_86075
L_87665:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
L_87666:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_86075
L_87667:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE4A,%r15
	je L_409553
	cmpq $0xE4C,%r15
	je L_409543
	jmp L_86075
.p2align 0x4
L_409543:
L_87684:
	movq 0x0(%r13),%r15
L_87685:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_86075
L_87686:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_87687:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_409551
L_87690:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	je L_409548
	cmpq $0xE4C,%r14
	je L_409545
	movq %r13,%r14
L_87688:
	cmpq $0x1,%r14
	jne L_86075
L_87689:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_2
.p2align 0x4
L_409545:
L_87695:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_409547
L_87696:
	cmpq $0x1,0x8(%r13)
	jne L_86075
	jmp x_261
.p2align 0x4
L_409547:
L_87698:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_2
.p2align 0x4
L_409548:
L_87691:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_409550
L_87692:
	cmpq $0x1,0x8(%r13)
	jne L_86075
L_87693:
	movq %r15,0x28(%rbp)
	movq %r14,0x30(%rbp)
	jmp x_260
.p2align 0x4
L_409550:
L_87694:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_2
.p2align 0x4
L_409551:
	movq %r13,%r14
	jmp L_87688
.p2align 0x4
L_409553:
L_87668:
	movq 0x0(%r13),%r15
L_87669:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_86075
L_87670:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_87671:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_86075
L_87672:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	jne L_86075
L_87673:
	movq 0x0(%r11),%r10
	movq %r10,0x38(%rbp)
	cmpq $0x1,%r13
	jne L_86075
L_87674:
	movl 0x28(%rbp),%r13d
	testl %r13d,%r13d
	jnz L_409554
L_87675:
	movq 0x0(%r15),%r14
	movq 0x0(%r10),%r15
L_87676:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	movq %r13,0x60(%rbp)
	addq $0x18,%r12
	leaq L_86749(%rip),%r15
	movq %r15,0x18(%rbp)
	movq %rbp,%r15
	addq $0x20,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x58(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_87677+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1183
.p2align 0x4
L_409554:
L_87678:
	movq %r15,0x170(%rbp)
	leaq L_86749(%rip),%r15
	movq %r15,0x18(%rbp)
	movq %rbp,%r15
	addq $0x20,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x160(%rbp),%r15
	movq %r15,0x178(%rbp)
	addq $0x170,%rbp
	leaq (L_87679+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toIntInfX_0
.p2align 0x4
L_409561:
L_87634:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_86075
L_87635:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
L_87636:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_86075
L_87637:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE4A,%r15
	je L_409572
	cmpq $0xE4C,%r15
	je L_409562
	jmp L_86075
.p2align 0x4
L_409562:
L_87648:
	movq 0x0(%r13),%r15
L_87649:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_86075
L_87650:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_87651:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_409570
L_87654:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	je L_409567
	cmpq $0xE4C,%r14
	je L_409564
	movq %r13,%r14
L_87652:
	cmpq $0x1,%r14
	jne L_86075
L_87653:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_2
.p2align 0x4
L_409564:
L_87659:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_409566
L_87660:
	cmpq $0x1,0x8(%r13)
	jne L_86075
	jmp x_261
.p2align 0x4
L_409566:
L_87662:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_2
.p2align 0x4
L_409567:
L_87655:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_409569
L_87656:
	cmpq $0x1,0x8(%r13)
	jne L_86075
L_87657:
	movq %r15,0x28(%rbp)
	movq %r14,0x30(%rbp)
	jmp x_260
.p2align 0x4
L_409569:
L_87658:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_2
.p2align 0x4
L_409570:
	movq %r13,%r14
	jmp L_87652
.p2align 0x4
L_409572:
L_87638:
	movq 0x0(%r13),%r15
L_87639:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_86075
L_87640:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_87641:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_86075
L_87642:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	jne L_86075
L_87643:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	jne L_86075
L_87644:
	movq %r14,0x30(%rbp)
	movq %r15,0x38(%rbp)
	leaq L_86749(%rip),%r15
	movq %r15,0x18(%rbp)
	movq %rbp,%r15
	addq $0x20,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x1F8(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x30,%rbp
	leaq (word_18+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1476
.p2align 0x4
L_409579:
L_87601:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_86075
L_87602:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
L_87603:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_86075
L_87604:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE4A,%r15
	je L_409590
	cmpq $0xE4C,%r15
	je L_409580
	jmp L_86075
.p2align 0x4
L_409580:
L_87618:
	movq 0x0(%r13),%r15
L_87619:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_86075
L_87620:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_87621:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_409588
L_87624:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	je L_409585
	cmpq $0xE4C,%r14
	je L_409582
	movq %r13,%r14
L_87622:
	cmpq $0x1,%r14
	jne L_86075
L_87623:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_2
.p2align 0x4
L_409582:
L_87629:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_409584
L_87630:
	cmpq $0x1,0x8(%r13)
	jne L_86075
	jmp x_261
.p2align 0x4
L_409584:
L_87632:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_2
.p2align 0x4
L_409585:
L_87625:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_409587
L_87626:
	cmpq $0x1,0x8(%r13)
	jne L_86075
L_87627:
	movq %r15,0x28(%rbp)
	movq %r14,0x30(%rbp)
	jmp x_260
.p2align 0x4
L_409587:
L_87628:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_2
.p2align 0x4
L_409588:
	movq %r13,%r14
	jmp L_87622
.p2align 0x4
L_409590:
L_87605:
	movq 0x0(%r13),%r15
	cmpq $0x1,%r14
	jne L_86075
L_87606:
	movq 0x138(%rbp),%r14
	movq 0x8(%r14),%r13
	cmpq $0x1,0x0(%r13)
	jne L_86075
L_87608:
	movq 0x8(%r15),%r14
	cmpq $0x41,%r14
	je L_409592
L_87609:
	cmpq $0x81,%r14
	jne L_409591
L_87611:
	movq %r15,0x30(%rbp)
	movq 0x158(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x210(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x30,%rbp
	leaq (realOpt_0+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1477
.p2align 0x4
L_409591:
L_87610:
	movq (globalObjptr+0x1A50)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_409592:
L_87617:
	movq %r15,0x30(%rbp)
	movq 0x148(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x208(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x30,%rbp
	leaq (realOpt_0+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1478
.p2align 0x4
L_409597:
L_87570:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_86075
L_87571:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
L_87572:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_86075
L_87573:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE4A,%r15
	je L_409608
	cmpq $0xE4C,%r15
	je L_409598
	jmp L_86075
.p2align 0x4
L_409598:
L_87585:
	movq 0x0(%r13),%r15
L_87586:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_86075
L_87587:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_87588:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_409606
L_87591:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	je L_409603
	cmpq $0xE4C,%r14
	je L_409600
	movq %r13,%r14
L_87589:
	cmpq $0x1,%r14
	jne L_86075
L_87590:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_2
.p2align 0x4
L_409600:
L_87596:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_409602
L_87597:
	cmpq $0x1,0x8(%r13)
	jne L_86075
	jmp x_261
.p2align 0x4
L_409602:
L_87599:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_2
.p2align 0x4
L_409603:
L_87592:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_409605
L_87593:
	cmpq $0x1,0x8(%r13)
	jne L_86075
L_87594:
	movq %r15,0x28(%rbp)
	movq %r14,0x30(%rbp)
	jmp x_260
.p2align 0x4
L_409605:
L_87595:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_2
.p2align 0x4
L_409606:
	movq %r13,%r14
	jmp L_87589
.p2align 0x4
L_409608:
L_87574:
	movq 0x0(%r13),%r15
	movq %r15,0x28(%rbp)
L_87575:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_86075
L_87576:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_87577:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_86075
L_87578:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	jne L_86075
L_87579:
	movq 0x0(%r11),%r14
	movq %r14,0x30(%rbp)
	cmpq $0x1,%r13
	jne L_86075
L_87580:
	movq 0x8(%r15),%r13
	movq %r13,0x48(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_87581+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_0
.p2align 0x4
L_409615:
L_87537:
	movq 0x8(%rbp),%r14
	movq 0x0(%r14),%r13
	movl 0x0(%r13),%r11d
	movq 0x8(%r13),%r10
	movq %r10,0x28(%rbp)
L_87538:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_86075
L_87539:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
L_87540:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_86075
L_87541:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE4A,%r15
	je L_409626
	cmpq $0xE4C,%r15
	je L_409616
	jmp L_86075
.p2align 0x4
L_409616:
L_87554:
	movq 0x0(%r13),%r15
L_87555:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_86075
L_87556:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_87557:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_409624
L_87560:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	je L_409621
	cmpq $0xE4C,%r14
	je L_409618
	movq %r13,%r14
L_87558:
	cmpq $0x1,%r14
	jne L_86075
L_87559:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_2
.p2align 0x4
L_409618:
L_87565:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_409620
L_87566:
	cmpq $0x1,0x8(%r13)
	jne L_86075
	jmp x_261
.p2align 0x4
L_409620:
L_87568:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_2
.p2align 0x4
L_409621:
L_87561:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_409623
L_87562:
	cmpq $0x1,0x8(%r13)
	jne L_86075
L_87563:
	movq %r15,0x28(%rbp)
	movq %r14,0x30(%rbp)
	jmp x_260
.p2align 0x4
L_409623:
L_87564:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_2
.p2align 0x4
L_409624:
	movq %r13,%r14
	jmp L_87558
.p2align 0x4
L_409626:
L_87542:
	movq 0x0(%r13),%r15
	cmpq $0x1,%r14
	jne L_86075
L_87543:
	testl %r11d,%r11d
	jnz L_409627
L_87544:
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x1D0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_87545+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_409627:
L_87550:
	movq %r15,0x40(%rbp)
	movq 0x1C8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	leaq L_86749(%rip),%r15
	movq %r15,0x18(%rbp)
	movq %rbp,%r15
	addq $0x20,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x40,%rbp
	leaq (L_87551+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toIntInfX_0
.p2align 0x4
L_409631:
L_87508:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_86075
L_87509:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
L_87510:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_86075
L_87511:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE4A,%r15
	je L_409642
	cmpq $0xE4C,%r15
	je L_409632
	jmp L_86075
.p2align 0x4
L_409632:
L_87522:
	movq 0x0(%r13),%r15
L_87523:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_86075
L_87524:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_87525:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_409640
L_87528:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	je L_409637
	cmpq $0xE4C,%r14
	je L_409634
	movq %r13,%r14
L_87526:
	cmpq $0x1,%r14
	jne L_86075
L_87527:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_2
.p2align 0x4
L_409634:
L_87533:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_409636
L_87534:
	cmpq $0x1,0x8(%r13)
	jne L_86075
	jmp x_261
.p2align 0x4
L_409636:
L_87536:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_2
.p2align 0x4
L_409637:
L_87529:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_409639
L_87530:
	cmpq $0x1,0x8(%r13)
	jne L_86075
L_87531:
	movq %r15,0x28(%rbp)
	movq %r14,0x30(%rbp)
	jmp x_260
.p2align 0x4
L_409639:
L_87532:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_2
.p2align 0x4
L_409640:
	movq %r13,%r14
	jmp L_87526
.p2align 0x4
L_409642:
L_87512:
	movq 0x0(%r13),%r15
L_87513:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_86075
L_87514:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_87515:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_86075
L_87516:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	jne L_86075
L_87517:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	jne L_86075
L_87518:
	movq %r14,0x30(%rbp)
	movq %r15,0x38(%rbp)
	leaq L_86749(%rip),%r15
	movq %r15,0x18(%rbp)
	movq %rbp,%r15
	addq $0x20,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x1F0(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x30,%rbp
	leaq (word_16+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1437
.p2align 0x4
L_409649:
L_87480:
	movq 0x8(%rbp),%r14
	movl 0x0(%r14),%r13d
L_87481:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_86075
L_87482:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r11
L_87483:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_86075
L_87484:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE4A,%r15
	je L_409660
	cmpq $0xE4C,%r15
	je L_409650
	jmp L_86075
.p2align 0x4
L_409650:
L_87492:
	movq 0x0(%r11),%r15
L_87493:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_86075
L_87494:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_87495:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_409658
L_87498:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	je L_409655
	cmpq $0xE4C,%r14
	je L_409652
	movq %r13,%r14
L_87496:
	cmpq $0x1,%r14
	jne L_86075
L_87497:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_2
.p2align 0x4
L_409652:
L_87503:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_409654
L_87504:
	cmpq $0x1,0x8(%r13)
	jne L_86075
	jmp x_261
.p2align 0x4
L_409654:
L_87506:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_2
.p2align 0x4
L_409655:
L_87499:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_409657
L_87500:
	cmpq $0x1,0x8(%r13)
	jne L_86075
L_87501:
	movq %r15,0x28(%rbp)
	movq %r14,0x30(%rbp)
	jmp x_260
.p2align 0x4
L_409657:
L_87502:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_2
.p2align 0x4
L_409658:
	movq %r13,%r14
	jmp L_87496
.p2align 0x4
L_409660:
L_87485:
	movq 0x0(%r11),%r15
L_87486:
	movq %r14,%r11
	andq $0x3,%r11
	jnz L_86075
L_87487:
	movq 0x8(%r14),%r11
	movq 0x0(%r14),%r10
L_87488:
	movq %r10,%r14
	andq $0x3,%r14
	jnz L_86075
L_87489:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	jne L_86075
L_87490:
	movq 0x0(%r10),%r14
	cmpq $0x1,%r11
	jne L_86075
L_87491:
	movl %r13d,0x30(%rbp)
	movq %r14,0x38(%rbp)
	movq %r15,0x40(%rbp)
	leaq L_86749(%rip),%r15
	movq %r15,0x18(%rbp)
	movq %rbp,%r15
	addq $0x20,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0xC8(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x30,%rbp
	leaq (x_262+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1479
.p2align 0x4
L_409667:
L_87432:
	movq 0x8(%rbp),%r14
	movl 0x0(%r14),%r13d
	movl %r13d,0x28(%rbp)
L_87433:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_86075
L_87434:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
L_87435:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_86075
L_87436:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE4A,%r15
	je L_409678
	cmpq $0xE4C,%r15
	je L_409668
	jmp L_86075
.p2align 0x4
L_409668:
L_87465:
	movq 0x0(%r13),%r15
L_87466:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_86075
L_87467:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_87468:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_409676
L_87471:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	je L_409673
	cmpq $0xE4C,%r14
	je L_409670
	movq %r13,%r14
L_87469:
	cmpq $0x1,%r14
	jne L_86075
L_87470:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_2
.p2align 0x4
L_409670:
L_87476:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_409672
L_87477:
	cmpq $0x1,0x8(%r13)
	jne L_86075
	jmp x_261
.p2align 0x4
L_409672:
L_87479:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_2
.p2align 0x4
L_409673:
L_87472:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_409675
L_87473:
	cmpq $0x1,0x8(%r13)
	jne L_86075
L_87474:
	movq %r15,0x28(%rbp)
	movq %r14,0x30(%rbp)
	jmp x_260
.p2align 0x4
L_409675:
L_87475:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_2
.p2align 0x4
L_409676:
	movq %r13,%r14
	jmp L_87469
.p2align 0x4
L_409678:
L_87437:
	movq 0x0(%r13),%r15
	movq %r15,0x30(%rbp)
L_87438:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_86075
L_87439:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_87440:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_86075
L_87441:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	jne L_86075
L_87442:
	movq 0x0(%r11),%r14
	movq %r14,0x38(%rbp)
	cmpq $0x1,%r13
	jne L_86075
L_87443:
	movq 0x1E8(%rbp),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x40(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x48(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x50(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x58(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x68(%rbp)
	movq %r13,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_87444+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_0
.p2align 0x4
L_409685:
L_87399:
	movq 0x8(%rbp),%r14
	movl 0x0(%r14),%r13d
	movl %r13d,0x28(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x30(%rbp)
L_87400:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_86075
L_87401:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
L_87402:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_86075
L_87403:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE4A,%r15
	je L_409696
	cmpq $0xE4C,%r15
	je L_409686
	jmp L_86075
.p2align 0x4
L_409686:
L_87417:
	movq 0x0(%r13),%r15
L_87418:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_86075
L_87419:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_87420:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_409694
L_87423:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	je L_409691
	cmpq $0xE4C,%r14
	je L_409688
	movq %r13,%r14
L_87421:
	cmpq $0x1,%r14
	jne L_86075
L_87422:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_2
.p2align 0x4
L_409688:
L_87428:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_409690
L_87429:
	cmpq $0x1,0x8(%r13)
	jne L_86075
	jmp x_261
.p2align 0x4
L_409690:
L_87431:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_2
.p2align 0x4
L_409691:
L_87424:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_409693
L_87425:
	cmpq $0x1,0x8(%r13)
	jne L_86075
L_87426:
	movq %r15,0x28(%rbp)
	movq %r14,0x30(%rbp)
	jmp x_260
.p2align 0x4
L_409693:
L_87427:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_2
.p2align 0x4
L_409694:
	movq %r13,%r14
	jmp L_87421
.p2align 0x4
L_409696:
L_87404:
	movq 0x0(%r13),%r15
L_87405:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_86075
L_87406:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_87407:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_86075
L_87408:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	jne L_86075
L_87409:
	movq 0x0(%r11),%r10
	movq %r10,0x38(%rbp)
	cmpq $0x1,%r13
	jne L_86075
L_87410:
	movl 0x28(%rbp),%r13d
	testl %r13d,%r13d
	jnz L_409697
L_87411:
	movq 0x0(%r15),%r14
	movq 0x0(%r10),%r15
L_87412:
	movq %r15,0x60(%rbp)
	movq %r14,0x68(%rbp)
	leaq L_86749(%rip),%r15
	movq %r15,0x18(%rbp)
	movq %rbp,%r15
	addq $0x20,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x90(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x60,%rbp
	leaq (L_87413+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1182
.p2align 0x4
L_409697:
L_87414:
	movq %r15,0x170(%rbp)
	leaq L_86749(%rip),%r15
	movq %r15,0x18(%rbp)
	movq %rbp,%r15
	addq $0x20,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x160(%rbp),%r15
	movq %r15,0x178(%rbp)
	addq $0x170,%rbp
	leaq (L_87415+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toIntInfX_0
.p2align 0x4
L_409704:
L_87370:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_86075
L_87371:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
L_87372:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_86075
L_87373:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE4A,%r15
	je L_409715
	cmpq $0xE4C,%r15
	je L_409705
	jmp L_86075
.p2align 0x4
L_409705:
L_87384:
	movq 0x0(%r13),%r15
L_87385:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_86075
L_87386:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_87387:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_409713
L_87390:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	je L_409710
	cmpq $0xE4C,%r14
	je L_409707
	movq %r13,%r14
L_87388:
	cmpq $0x1,%r14
	jne L_86075
L_87389:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_2
.p2align 0x4
L_409707:
L_87395:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_409709
L_87396:
	cmpq $0x1,0x8(%r13)
	jne L_86075
	jmp x_261
.p2align 0x4
L_409709:
L_87398:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_2
.p2align 0x4
L_409710:
L_87391:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_409712
L_87392:
	cmpq $0x1,0x8(%r13)
	jne L_86075
L_87393:
	movq %r15,0x28(%rbp)
	movq %r14,0x30(%rbp)
	jmp x_260
.p2align 0x4
L_409712:
L_87394:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_2
.p2align 0x4
L_409713:
	movq %r13,%r14
	jmp L_87388
.p2align 0x4
L_409715:
L_87374:
	movq 0x0(%r13),%r15
	movq %r15,0x28(%rbp)
	cmpq $0x1,%r14
	jne L_86075
L_87375:
	leaq L_86749(%rip),%r14
	movq %r14,0x18(%rbp)
	movq %rbp,%r14
	addq $0x20,%r14
	subq (gcState+0x560)(%rip),%r14
	movq %r14,(gcState+0x20)(%rip)
	movq %r15,0x60(%rbp)
	movq 0x160(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_87376+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toIntInfX_0
.p2align 0x4
L_409719:
L_87345:
	movq 0x8(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x28(%rbp)
L_87346:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_86075
L_87347:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
L_87348:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_86075
L_87349:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE4A,%r15
	je L_409730
	cmpq $0xE4C,%r15
	je L_409720
	jmp L_86075
.p2align 0x4
L_409720:
L_87354:
	movq 0x0(%r13),%r15
L_87355:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_86075
L_87356:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_87357:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_409728
L_87360:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	je L_409725
	cmpq $0xE4C,%r14
	je L_409722
	movq %r13,%r14
L_87358:
	cmpq $0x1,%r14
	jne L_86075
L_87359:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_2
.p2align 0x4
L_409722:
L_87365:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_409724
L_87366:
	cmpq $0x1,0x8(%r13)
	jne L_86075
	jmp x_261
.p2align 0x4
L_409724:
L_87368:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_2
.p2align 0x4
L_409725:
L_87361:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_409727
L_87362:
	cmpq $0x1,0x8(%r13)
	jne L_86075
L_87363:
	movq %r15,0x28(%rbp)
	movq %r14,0x30(%rbp)
	jmp x_260
.p2align 0x4
L_409727:
L_87364:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_2
.p2align 0x4
L_409728:
	movq %r13,%r14
	jmp L_87358
.p2align 0x4
L_409730:
L_87350:
	movq 0x0(%r13),%r15
	cmpq $0x1,%r14
	jne L_86075
L_87351:
	movq %r15,0x60(%rbp)
	leaq L_86749(%rip),%r15
	movq %r15,0x18(%rbp)
	movq %rbp,%r15
	addq $0x20,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x160(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_87352+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toIntInfX_0
.p2align 0x4
L_409734:
L_87309:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_86075
L_87310:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
L_87311:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_86075
L_87312:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE4A,%r15
	je L_409745
	cmpq $0xE4C,%r15
	je L_409735
	jmp L_86075
.p2align 0x4
L_409735:
L_87330:
	movq 0x0(%r13),%r15
L_87331:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_86075
L_87332:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_87333:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_409743
L_87336:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	je L_409740
	cmpq $0xE4C,%r14
	je L_409737
	movq %r13,%r14
L_87334:
	cmpq $0x1,%r14
	jne L_86075
L_87335:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_2
.p2align 0x4
L_409737:
L_87341:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_409739
L_87342:
	cmpq $0x1,0x8(%r13)
	jne L_86075
	jmp x_261
.p2align 0x4
L_409739:
L_87344:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_2
.p2align 0x4
L_409740:
L_87337:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_409742
L_87338:
	cmpq $0x1,0x8(%r13)
	jne L_86075
L_87339:
	movq %r15,0x28(%rbp)
	movq %r14,0x30(%rbp)
	jmp x_260
.p2align 0x4
L_409742:
L_87340:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_2
.p2align 0x4
L_409743:
	movq %r13,%r14
	jmp L_87334
.p2align 0x4
L_409745:
L_87313:
	movq 0x0(%r13),%r15
	movq %r15,0x28(%rbp)
	cmpq $0x1,%r14
	jne L_86075
L_87314:
	movq 0x1E0(%rbp),%r14
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq %r11,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq %r14,%r15
	andq $0x1,%r15
	jnz L_409749
L_87323:
	movq 0xFFFFFFFFFFFFFFF0(%r14),%rsi
	decq %rsi
	jo L_409748
L_87324:
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r14
	imulq %r14,%rsi
	addq $0x7,%r15
	addq %r14,%r15
	addq %r15,%rsi
	movq %rsi,%r15
	movq %rsi,0x40(%rbp)
	addq $0x0,%r15
	jc L_409747
L_87325:
	movq (gcState+0x458)(%rip),%r14
	subq %r12,%r14
	cmpq %r15,%r14
	jnb L_87326
L_87328:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r14d
	movl %r14d,%edx
	movq %r15,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_87329+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_87329
.p2align 0x4
.long 0x1281
L_87329:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_87326:
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0x40(%rbp),%rsi
	movq 0x38(%rbp),%rdi
	xorq %rax,%rax
	movq %r12,(gcState+0x0)(%rip)
	call IntInf_notb
L_87327:
	movq %rax,0x38(%rbp)
	movq (gcState+0x0)(%rip),%r12
L_87316:
	movq 0x28(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x30(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x48(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x50(%rbp)
	movq %r14,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_87317+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_409747:
L_86619:
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %rax,%rax
	call MLton_heapCheckTooLarge
.p2align 0x4
L_409748:
L_86755:
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_409749:
L_87315:
	notq %r14
	orq $0x1,%r14
	movq %r14,0x38(%rbp)
	jmp L_87316
.p2align 0x4
L_409753:
L_87279:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_86075
L_87280:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
L_87281:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_86075
L_87282:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE4A,%r15
	je L_409764
	cmpq $0xE4C,%r15
	je L_409754
	jmp L_86075
.p2align 0x4
L_409754:
L_87293:
	movq 0x0(%r13),%r15
L_87294:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_86075
L_87295:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_87296:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_409762
L_87299:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	je L_409759
	cmpq $0xE4C,%r14
	je L_409756
	movq %r13,%r14
L_87297:
	cmpq $0x1,%r14
	jne L_86075
L_87298:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_2
.p2align 0x4
L_409756:
L_87304:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_409758
L_87305:
	cmpq $0x1,0x8(%r13)
	jne L_86075
	jmp x_261
.p2align 0x4
L_409758:
L_87307:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_2
.p2align 0x4
L_409759:
L_87300:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_409761
L_87301:
	cmpq $0x1,0x8(%r13)
	jne L_86075
L_87302:
	movq %r15,0x28(%rbp)
	movq %r14,0x30(%rbp)
	jmp x_260
.p2align 0x4
L_409761:
L_87303:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_2
.p2align 0x4
L_409762:
	movq %r13,%r14
	jmp L_87297
.p2align 0x4
L_409764:
L_87283:
	movq 0x0(%r13),%r15
L_87284:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_86075
L_87285:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_87286:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_86075
L_87287:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	jne L_86075
L_87288:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	jne L_86075
L_87289:
	movq %r14,0x30(%rbp)
	movq %r15,0x38(%rbp)
	leaq L_86749(%rip),%r15
	movq %r15,0x18(%rbp)
	movq %rbp,%r15
	addq $0x20,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x188(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x30,%rbp
	leaq (word_15+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1438
.p2align 0x4
L_409771:
L_87229:
	movq 0x8(%rbp),%r14
	movl 0x0(%r14),%r13d
	movl %r13d,0x28(%rbp)
L_87230:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_86075
L_87231:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
L_87232:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_86075
L_87233:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE4A,%r15
	je L_409782
	cmpq $0xE4C,%r15
	je L_409772
	jmp L_86075
.p2align 0x4
L_409772:
L_87263:
	movq 0x0(%r13),%r15
L_87264:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_86075
L_87265:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_87266:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_409780
L_87269:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	je L_409777
	cmpq $0xE4C,%r14
	je L_409774
	movq %r13,%r14
L_87267:
	cmpq $0x1,%r14
	jne L_86075
L_87268:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_2
.p2align 0x4
L_409774:
L_87274:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_409776
L_87275:
	cmpq $0x1,0x8(%r13)
	jne L_86075
	jmp x_261
.p2align 0x4
L_409776:
L_87277:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_2
.p2align 0x4
L_409777:
L_87270:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_409779
L_87271:
	cmpq $0x1,0x8(%r13)
	jne L_86075
L_87272:
	movq %r15,0x28(%rbp)
	movq %r14,0x30(%rbp)
	jmp x_260
.p2align 0x4
L_409779:
L_87273:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_2
.p2align 0x4
L_409780:
	movq %r13,%r14
	jmp L_87267
.p2align 0x4
L_409782:
L_87234:
	movq 0x0(%r13),%r15
	movq %r15,0x30(%rbp)
L_87235:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_86075
L_87236:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_87237:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_86075
L_87238:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	jne L_86075
L_87239:
	movq 0x0(%r11),%r14
	movq %r14,0x38(%rbp)
	cmpq $0x1,%r13
	jne L_86075
L_87240:
	movq 0x0(%r14),%r13
	movq %r13,0x40(%rbp)
	cmpq $0x1,%r13
	je L_86075
L_87241:
	movq 0x1D8(%rbp),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x48(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x50(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x58(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x60(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x70(%rbp)
	movq %r13,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_87242+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_0
.p2align 0x4
L_409790:
L_87180:
	movq 0x8(%rbp),%r14
	movl 0x0(%r14),%r13d
	movl %r13d,0x28(%rbp)
L_87181:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_86075
L_87182:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
L_87183:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_86075
L_87184:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE4A,%r15
	je L_409801
	cmpq $0xE4C,%r15
	je L_409791
	jmp L_86075
.p2align 0x4
L_409791:
L_87214:
	movq 0x0(%r13),%r15
L_87215:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_86075
L_87216:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_87217:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_409799
L_87220:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	je L_409796
	cmpq $0xE4C,%r14
	je L_409793
	movq %r13,%r14
L_87218:
	cmpq $0x1,%r14
	jne L_86075
L_87219:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_2
.p2align 0x4
L_409793:
L_87225:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_409795
L_87226:
	cmpq $0x1,0x8(%r13)
	jne L_86075
	jmp x_261
.p2align 0x4
L_409795:
L_87228:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_2
.p2align 0x4
L_409796:
L_87221:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_409798
L_87222:
	cmpq $0x1,0x8(%r13)
	jne L_86075
L_87223:
	movq %r15,0x28(%rbp)
	movq %r14,0x30(%rbp)
	jmp x_260
.p2align 0x4
L_409798:
L_87224:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_2
.p2align 0x4
L_409799:
	movq %r13,%r14
	jmp L_87218
.p2align 0x4
L_409801:
L_87185:
	movq 0x0(%r13),%r15
	movq %r15,0x30(%rbp)
L_87186:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_86075
L_87187:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_87188:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_86075
L_87189:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	jne L_86075
L_87190:
	movq 0x0(%r11),%r14
	movq %r14,0x38(%rbp)
	cmpq $0x1,%r13
	jne L_86075
L_87191:
	movq 0x0(%r14),%r13
	movq %r13,0x40(%rbp)
	cmpq $0x1,%r13
	je L_86075
L_87192:
	movq 0x190(%rbp),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x48(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x50(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x58(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x60(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x70(%rbp)
	movq %r13,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_87193+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_0
.p2align 0x4
L_409809:
L_87057:
	movq 0x8(%rbp),%r14
	movl 0x0(%r14),%r13d
	movb 0x4(%r14),%r11b
	movb %r11b,0x28(%rbp)
L_87058:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_86075
L_87059:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r11
L_87060:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_86075
L_87061:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE4A,%r15
	je L_409820
	cmpq $0xE4C,%r15
	je L_409810
	jmp L_86075
.p2align 0x4
L_409810:
L_87165:
	movq 0x0(%r11),%r15
L_87166:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_86075
L_87167:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_87168:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_409818
L_87171:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	je L_409815
	cmpq $0xE4C,%r14
	je L_409812
	movq %r13,%r14
L_87169:
	cmpq $0x1,%r14
	jne L_86075
L_87170:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_2
.p2align 0x4
L_409812:
L_87176:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_409814
L_87177:
	cmpq $0x1,0x8(%r13)
	jne L_86075
	jmp x_261
.p2align 0x4
L_409814:
L_87179:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_2
.p2align 0x4
L_409815:
L_87172:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_409817
L_87173:
	cmpq $0x1,0x8(%r13)
	jne L_86075
L_87174:
	movq %r15,0x28(%rbp)
	movq %r14,0x30(%rbp)
	jmp x_260
.p2align 0x4
L_409817:
L_87175:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_2
.p2align 0x4
L_409818:
	movq %r13,%r14
	jmp L_87169
.p2align 0x4
L_409820:
L_87062:
	movq 0x0(%r11),%r15
	cmpq $0x1,%r14
	jne L_86075
L_87063:
	testl %r13d,%r13d
	jnz L_409832
L_87064:
	movq 0x0(%r15),%r14
	movb 0x28(%rbp),%r15b
	testb %r15b,%r15b
	jnz L_409826
L_87065:
	movq %r14,0x28(%rbp)
L_87066:
	movq 0x138(%rbp),%r15
	movq 0x8(%r15),%r14
	cmpq $0x1,0x0(%r14)
	jne L_86075
L_87068:
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %rax,%rax
	addq $0x190,%rbp
	leaq (L_87069+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call IEEEReal_getRoundingMode
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_87069
.p2align 0x4
.long 0x1271
L_87069:
	addq $0xFFFFFFFFFFFFFE70,%rbp
	testl %eax,%eax
	jz L_409824
L_87070:
	cmpl $0x1,%eax
	je L_409823
L_87071:
	cmpl $0x2,%eax
	je L_409822
L_87072:
	cmpl $0x3,%eax
	jne L_409821
L_87075:
	movb $0x0,0x30(%rbp)
L_87076:
	leaq L_87096(%rip),%r15
	movq %r15,0x18(%rbp)
	movq %rbp,%r15
	addq $0x20,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movb $0x2,0x190(%rbp)
	addq $0x190,%rbp
	leaq (L_87077+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp setRoundingMode_0
.p2align 0x4
L_409821:
L_87074:
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x778)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_409822:
L_87110:
	movb $0x1,0x30(%rbp)
	jmp L_87076
.p2align 0x4
L_409823:
L_87111:
	movb $0x2,0x30(%rbp)
	jmp L_87076
.p2align 0x4
L_409824:
L_87112:
	movb $0x3,0x30(%rbp)
	jmp L_87076
.p2align 0x4
L_409826:
L_87113:
	movq %r14,0x28(%rbp)
L_87114:
	movq 0x138(%rbp),%r15
	movq 0x8(%r15),%r14
	cmpq $0x1,0x0(%r14)
	jne L_86075
L_87116:
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %rax,%rax
	addq $0x180,%rbp
	leaq (L_87117+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call IEEEReal_getRoundingMode
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_87117
.p2align 0x4
.long 0x1275
L_87117:
	addq $0xFFFFFFFFFFFFFE80,%rbp
	testl %eax,%eax
	jz L_409830
L_87118:
	cmpl $0x1,%eax
	je L_409829
L_87119:
	cmpl $0x2,%eax
	je L_409828
L_87120:
	cmpl $0x3,%eax
	jne L_87074
L_87122:
	movb $0x0,0x30(%rbp)
L_87123:
	leaq L_87143(%rip),%r15
	movq %r15,0x18(%rbp)
	movq %rbp,%r15
	addq $0x20,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movb $0x2,0x180(%rbp)
	addq $0x180,%rbp
	leaq (L_87124+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp setRoundingMode_0
.p2align 0x4
L_409828:
L_87158:
	movb $0x1,0x30(%rbp)
	jmp L_87123
.p2align 0x4
L_409829:
L_87159:
	movb $0x2,0x30(%rbp)
	jmp L_87123
.p2align 0x4
L_409830:
L_87160:
	movb $0x3,0x30(%rbp)
	jmp L_87123
.p2align 0x4
L_409832:
L_87161:
	movq %r15,0x190(%rbp)
	leaq L_86749(%rip),%r15
	movq %r15,0x18(%rbp)
	movq %rbp,%r15
	addq $0x20,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x160(%rbp),%r15
	movq %r15,0x198(%rbp)
	addq $0x190,%rbp
	leaq (L_87162+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toIntInfX_0
.p2align 0x4
L_409836:
L_87018:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_86075
L_87019:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
L_87020:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_86075
L_87021:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE4A,%r15
	je L_409847
	cmpq $0xE4C,%r15
	je L_409837
	jmp L_86075
.p2align 0x4
L_409837:
L_87042:
	movq 0x0(%r13),%r15
L_87043:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_86075
L_87044:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_87045:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_409845
L_87048:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	je L_409842
	cmpq $0xE4C,%r14
	je L_409839
	movq %r13,%r14
L_87046:
	cmpq $0x1,%r14
	jne L_86075
L_87047:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_2
.p2align 0x4
L_409839:
L_87053:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_409841
L_87054:
	cmpq $0x1,0x8(%r13)
	jne L_86075
	jmp x_261
.p2align 0x4
L_409841:
L_87056:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_2
.p2align 0x4
L_409842:
L_87049:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_409844
L_87050:
	cmpq $0x1,0x8(%r13)
	jne L_86075
L_87051:
	movq %r15,0x28(%rbp)
	movq %r14,0x30(%rbp)
	jmp x_260
.p2align 0x4
L_409844:
L_87052:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_2
.p2align 0x4
L_409845:
	movq %r13,%r14
	jmp L_87046
.p2align 0x4
L_409847:
L_87022:
	movq 0x0(%r13),%r15
	movq %r15,0x28(%rbp)
L_87023:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_86075
L_87024:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_87025:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_86075
L_87026:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	jne L_86075
L_87027:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	jne L_86075
L_87028:
	movq 0x8(%r15),%r13
	movq %r13,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x1B8(%rbp)
	leaq L_86749(%rip),%r15
	movq %r15,0x18(%rbp)
	movq %rbp,%r15
	addq $0x20,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq %r13,0x1B0(%rbp)
	movq 0x198(%rbp),%r15
	movq %r15,0x1C0(%rbp)
	addq $0x1B0,%rbp
	leaq (L_87029+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
L_409854:
L_86978:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_86075
L_86979:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
L_86980:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_86075
L_86981:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE4A,%r15
	je L_409865
	cmpq $0xE4C,%r15
	je L_409855
	jmp L_86075
.p2align 0x4
L_409855:
L_87002:
	movq 0x0(%r13),%r15
L_87003:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_86075
L_87004:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_87005:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_409863
L_87008:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	je L_409860
	cmpq $0xE4C,%r14
	je L_409857
	movq %r13,%r14
L_87006:
	cmpq $0x1,%r14
	jne L_86075
L_87007:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_2
.p2align 0x4
L_409857:
L_87013:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_409859
L_87014:
	cmpq $0x1,0x8(%r13)
	jne L_86075
	jmp x_261
.p2align 0x4
L_409859:
L_87016:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_2
.p2align 0x4
L_409860:
L_87009:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_409862
L_87010:
	cmpq $0x1,0x8(%r13)
	jne L_86075
L_87011:
	movq %r15,0x28(%rbp)
	movq %r14,0x30(%rbp)
	jmp x_260
.p2align 0x4
L_409862:
L_87012:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_2
.p2align 0x4
L_409863:
	movq %r13,%r14
	jmp L_87006
.p2align 0x4
L_409865:
L_86982:
	movq 0x0(%r13),%r15
	movq %r15,0x28(%rbp)
L_86983:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_86075
L_86984:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_86985:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_86075
L_86986:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	jne L_86075
L_86987:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	jne L_86075
L_86988:
	movq 0x8(%r15),%r13
	movq %r13,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x1B8(%rbp)
	leaq L_86749(%rip),%r15
	movq %r15,0x18(%rbp)
	movq %rbp,%r15
	addq $0x20,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq %r13,0x1B0(%rbp)
	movq 0x198(%rbp),%r15
	movq %r15,0x1C0(%rbp)
	addq $0x1B0,%rbp
	leaq (L_86989+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
L_409872:
L_86947:
	movq 0x8(%rbp),%r14
	movl 0x0(%r14),%r13d
L_86948:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_86075
L_86949:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r11
L_86950:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_86075
L_86951:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE4A,%r15
	je L_409883
	cmpq $0xE4C,%r15
	je L_409873
	jmp L_86075
.p2align 0x4
L_409873:
L_86962:
	movq 0x0(%r11),%r15
L_86963:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_86075
L_86964:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_86965:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_409881
L_86968:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	je L_409878
	cmpq $0xE4C,%r14
	je L_409875
	movq %r13,%r14
L_86966:
	cmpq $0x1,%r14
	jne L_86075
L_86967:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_2
.p2align 0x4
L_409875:
L_86973:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_409877
L_86974:
	cmpq $0x1,0x8(%r13)
	jne L_86075
	jmp x_261
.p2align 0x4
L_409877:
L_86976:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_2
.p2align 0x4
L_409878:
L_86969:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_409880
L_86970:
	cmpq $0x1,0x8(%r13)
	jne L_86075
L_86971:
	movq %r15,0x28(%rbp)
	movq %r14,0x30(%rbp)
	jmp x_260
.p2align 0x4
L_409880:
L_86972:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_2
.p2align 0x4
L_409881:
	movq %r13,%r14
	jmp L_86966
.p2align 0x4
L_409883:
L_86952:
	movq 0x0(%r11),%r15
L_86953:
	movq %r14,%r11
	andq $0x3,%r11
	jnz L_86075
L_86954:
	movq 0x8(%r14),%r11
	movq 0x0(%r14),%r10
L_86955:
	movq %r10,%r14
	andq $0x3,%r14
	jnz L_86075
L_86956:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	jne L_86075
L_86957:
	movq 0x0(%r10),%r14
	cmpq $0x1,%r11
	jne L_86075
L_86958:
	movl %r13d,0x30(%rbp)
	movq %r14,0x38(%rbp)
	movq %r15,0x40(%rbp)
	leaq L_86749(%rip),%r15
	movq %r15,0x18(%rbp)
	movq %rbp,%r15
	addq $0x20,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x1B8(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x30,%rbp
	leaq (word_14+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp rshift_0
.p2align 0x4
L_409890:
L_86908:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_86075
L_86909:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
L_86910:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_86075
L_86911:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE4A,%r15
	je L_409901
	cmpq $0xE4C,%r15
	je L_409891
	jmp L_86075
.p2align 0x4
L_409891:
L_86932:
	movq 0x0(%r13),%r15
L_86933:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_86075
L_86934:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_86935:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_409899
L_86938:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	je L_409896
	cmpq $0xE4C,%r14
	je L_409893
	movq %r13,%r14
L_86936:
	cmpq $0x1,%r14
	jne L_86075
L_86937:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_2
.p2align 0x4
L_409893:
L_86943:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_409895
L_86944:
	cmpq $0x1,0x8(%r13)
	jne L_86075
	jmp x_261
.p2align 0x4
L_409895:
L_86946:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_2
.p2align 0x4
L_409896:
L_86939:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_409898
L_86940:
	cmpq $0x1,0x8(%r13)
	jne L_86075
L_86941:
	movq %r15,0x28(%rbp)
	movq %r14,0x30(%rbp)
	jmp x_260
.p2align 0x4
L_409898:
L_86942:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_2
.p2align 0x4
L_409899:
	movq %r13,%r14
	jmp L_86936
.p2align 0x4
L_409901:
L_86912:
	movq 0x0(%r13),%r15
	movq %r15,0x28(%rbp)
L_86913:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_86075
L_86914:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_86915:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_86075
L_86916:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	jne L_86075
L_86917:
	movq 0x0(%r11),%r14
	movq %r14,0x30(%rbp)
	cmpq $0x1,%r13
	jne L_86075
L_86918:
	movq 0x1A8(%rbp),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x38(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x40(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x48(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x58(%rbp)
	movq %r13,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_86919+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_0
.p2align 0x4
L_409908:
L_86865:
	movq 0x8(%rbp),%r14
	movl 0x0(%r14),%r13d
	movl %r13d,0x28(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x30(%rbp)
L_86866:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_86075
L_86867:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
L_86868:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_86075
L_86869:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE4A,%r15
	je L_409919
	cmpq $0xE4C,%r15
	je L_409909
	jmp L_86075
.p2align 0x4
L_409909:
L_86892:
	movq 0x0(%r13),%r15
L_86893:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_86075
L_86894:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_86895:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_409917
L_86898:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	je L_409914
	cmpq $0xE4C,%r14
	je L_409911
	movq %r13,%r14
L_86896:
	cmpq $0x1,%r14
	jne L_86075
L_86897:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_2
.p2align 0x4
L_409911:
L_86903:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_409913
L_86904:
	cmpq $0x1,0x8(%r13)
	jne L_86075
	jmp x_261
.p2align 0x4
L_409913:
L_86906:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_2
.p2align 0x4
L_409914:
L_86899:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_409916
L_86900:
	cmpq $0x1,0x8(%r13)
	jne L_86075
L_86901:
	movq %r15,0x28(%rbp)
	movq %r14,0x30(%rbp)
	jmp x_260
.p2align 0x4
L_409916:
L_86902:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_2
.p2align 0x4
L_409917:
	movq %r13,%r14
	jmp L_86896
.p2align 0x4
L_409919:
L_86870:
	movq 0x0(%r13),%r15
L_86871:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_86075
L_86872:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_86873:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_86075
L_86874:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	jne L_86075
L_86875:
	movq 0x0(%r11),%r10
	movq %r10,0x38(%rbp)
	cmpq $0x1,%r13
	jne L_86075
L_86876:
	movl 0x28(%rbp),%r13d
	testl %r13d,%r13d
	jnz L_409920
L_86877:
	movq 0x0(%r15),%r14
	movq 0x0(%r10),%r15
L_86878:
	movq %r15,0x60(%rbp)
	movq %r14,0x68(%rbp)
	leaq L_86749(%rip),%r15
	movq %r15,0x18(%rbp)
	movq %rbp,%r15
	addq $0x20,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x80(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x60,%rbp
	leaq (L_86879+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
L_409920:
L_86889:
	movq %r15,0x170(%rbp)
	leaq L_86749(%rip),%r15
	movq %r15,0x18(%rbp)
	movq %rbp,%r15
	addq $0x20,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x160(%rbp),%r15
	movq %r15,0x178(%rbp)
	addq $0x170,%rbp
	leaq (L_86890+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toIntInfX_0
.p2align 0x4
L_409927:
L_86836:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_86075
L_86837:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
L_86838:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_86075
L_86839:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE4A,%r15
	je L_409938
	cmpq $0xE4C,%r15
	je L_409928
	jmp L_86075
.p2align 0x4
L_409928:
L_86850:
	movq 0x0(%r13),%r15
L_86851:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_86075
L_86852:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_86853:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_409936
L_86856:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	je L_409933
	cmpq $0xE4C,%r14
	je L_409930
	movq %r13,%r14
L_86854:
	cmpq $0x1,%r14
	jne L_86075
L_86855:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_2
.p2align 0x4
L_409930:
L_86861:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_409932
L_86862:
	cmpq $0x1,0x8(%r13)
	jne L_86075
	jmp x_261
.p2align 0x4
L_409932:
L_86864:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_2
.p2align 0x4
L_409933:
L_86857:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_409935
L_86858:
	cmpq $0x1,0x8(%r13)
	jne L_86075
L_86859:
	movq %r15,0x28(%rbp)
	movq %r14,0x30(%rbp)
	jmp x_260
.p2align 0x4
L_409935:
L_86860:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_2
.p2align 0x4
L_409936:
	movq %r13,%r14
	jmp L_86854
.p2align 0x4
L_409938:
L_86840:
	movq 0x0(%r13),%r15
L_86841:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_86075
L_86842:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_86843:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_86075
L_86844:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	jne L_86075
L_86845:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	jne L_86075
L_86846:
	movq %r14,0x30(%rbp)
	movq %r15,0x38(%rbp)
	leaq L_86749(%rip),%r15
	movq %r15,0x18(%rbp)
	movq %rbp,%r15
	addq $0x20,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x1C0(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x30,%rbp
	leaq (word_13+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1480
.p2align 0x4
L_409946:
L_88767:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_86075
L_88768:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
L_88769:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_86075
L_88770:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE4B,%r15
	je L_409957
	cmpq $0xE4C,%r15
	je L_409947
	jmp L_86075
.p2align 0x4
L_409947:
L_88783:
	movq 0x0(%r11),%r15
L_88784:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_86075
L_88785:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_88786:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_409955
L_88789:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4A,%r13
	je L_409952
	cmpq $0xE4C,%r13
	je L_409949
	xchgq %r11,%r14
L_88787:
	cmpq $0x1,%r14
	jne L_86075
L_88788:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_2
.p2align 0x4
L_409949:
L_88794:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_409951
L_88795:
	cmpq $0x1,0x8(%r11)
	jne L_86075
	xchgq %r13,%r14
	jmp x_261
.p2align 0x4
L_409951:
L_88797:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_2
.p2align 0x4
L_409952:
L_88790:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_409954
L_88791:
	cmpq $0x1,0x8(%r11)
	jne L_86075
L_88792:
	movq %r15,0x28(%rbp)
	movq %r13,0x30(%rbp)
	jmp x_260
.p2align 0x4
L_409954:
L_88793:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_2
.p2align 0x4
L_409955:
	xchgq %r11,%r14
	jmp L_88787
.p2align 0x4
L_409957:
L_88771:
	movq 0x0(%r11),%r15
L_88772:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_86075
L_88773:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_88774:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_86075
L_88775:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4B,%r13
	jne L_86075
L_88776:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	jne L_86075
L_88777:
	movq %r13,0x30(%rbp)
	movq %r15,0x38(%rbp)
	leaq L_86749(%rip),%r15
	movq %r15,0x18(%rbp)
	movq %rbp,%r15
	addq $0x20,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x230(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x30,%rbp
	leaq (realOpt_17+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1481
.p2align 0x4
L_409964:
L_88731:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_86075
L_88732:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
L_88733:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_86075
L_88734:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE4B,%r15
	je L_409975
	cmpq $0xE4C,%r15
	je L_409965
	jmp L_86075
.p2align 0x4
L_409965:
L_88751:
	movq 0x0(%r11),%r15
L_88752:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_86075
L_88753:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_88754:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_409973
L_88757:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4A,%r13
	je L_409970
	cmpq $0xE4C,%r13
	je L_409967
	xchgq %r11,%r14
L_88755:
	cmpq $0x1,%r14
	jne L_86075
L_88756:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_2
.p2align 0x4
L_409967:
L_88762:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_409969
L_88763:
	cmpq $0x1,0x8(%r11)
	jne L_86075
	xchgq %r13,%r14
	jmp x_261
.p2align 0x4
L_409969:
L_88765:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_2
.p2align 0x4
L_409970:
L_88758:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_409972
L_88759:
	cmpq $0x1,0x8(%r11)
	jne L_86075
L_88760:
	movq %r15,0x28(%rbp)
	movq %r13,0x30(%rbp)
	jmp x_260
.p2align 0x4
L_409972:
L_88761:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_2
.p2align 0x4
L_409973:
	xchgq %r11,%r14
	jmp L_88755
.p2align 0x4
L_409975:
L_88735:
	movq 0x0(%r11),%r15
L_88736:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_86075
L_88737:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_88738:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_86075
L_88739:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4B,%r13
	jne L_86075
L_88740:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	jne L_86075
L_88741:
	movq 0x218(%rbp),%r11
	movq 0x8(%r11),%r10
	cmpq $0x1,0x0(%r10)
	jne L_86075
L_88743:
	movq %r15,%r11
	andq $0x1,%r11
	cmpq $0x1,%r11
	je L_409977
L_88744:
	movsd 0x0(%r15),%xmm15
L_88745:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_409976
L_88747:
	movsd 0x0(%r13),%xmm14
	ucomisd %xmm15,%xmm14
	setp %al
	movzbl %al,%eax
	sete %cl
	movzbl %cl,%ecx
	orl %eax,%ecx
x_270:
	movl %ecx,%r15d
	shlq $0x2,%r15
	orq $0x3,%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_409976:
L_88746:
	movq (globalObjptr+0x19D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_409977:
L_88748:
	shrq $0x1,%r15
	movl %r15d,%r11d
	movd %r11d,%xmm15
	movq %r13,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	jne L_409978
L_88750:
	shrq $0x1,%r13
	movl %r13d,%r15d
	movd %r15d,%xmm14
	ucomiss %xmm15,%xmm14
	setp %al
	movzbl %al,%eax
	sete %cl
	movzbl %cl,%ecx
	orl %eax,%ecx
	jmp x_270
.p2align 0x4
L_409978:
L_88749:
	movq (globalObjptr+0x19D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_409986:
L_88705:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_86075
L_88706:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
L_88707:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_86075
L_88708:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE4B,%r15
	je L_409997
	cmpq $0xE4C,%r15
	je L_409987
	jmp L_86075
.p2align 0x4
L_409987:
L_88715:
	movq 0x0(%r11),%r15
L_88716:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_86075
L_88717:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_88718:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_409995
L_88721:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4A,%r13
	je L_409992
	cmpq $0xE4C,%r13
	je L_409989
	xchgq %r11,%r14
L_88719:
	cmpq $0x1,%r14
	jne L_86075
L_88720:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_2
.p2align 0x4
L_409989:
L_88726:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_409991
L_88727:
	cmpq $0x1,0x8(%r11)
	jne L_86075
	xchgq %r13,%r14
	jmp x_261
.p2align 0x4
L_409991:
L_88729:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_2
.p2align 0x4
L_409992:
L_88722:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_409994
L_88723:
	cmpq $0x1,0x8(%r11)
	jne L_86075
L_88724:
	movq %r15,0x28(%rbp)
	movq %r13,0x30(%rbp)
	jmp x_260
.p2align 0x4
L_409994:
L_88725:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_2
.p2align 0x4
L_409995:
	xchgq %r11,%r14
	jmp L_88719
.p2align 0x4
L_409997:
L_88709:
	movq 0x0(%r11),%r15
	cmpq $0x1,%r13
	jne L_86075
L_88710:
	movq 0x270(%rbp),%r13
	movq 0x8(%r13),%r11
	cmpq $0x1,0x0(%r11)
	jne L_86075
L_88712:
	movq %r15,%r13
	andq $0x1,%r13
	cmpq $0x1,%r13
	je L_409998
L_88713:
	movq $0x8000000000000000,%r13
	movd %r13,%xmm15
	movsd 0x0(%r15),%xmm14
	xorpd %xmm14,%xmm15
	movq $0x1C8F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movsd %xmm15,%xmm14
	movsd %xmm14,0x0(%r15)
	addq $0x10,%r12
real_13:
	movq $0x1C97,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x27F3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_409998:
L_88714:
	shrq $0x1,%r15
	movl %r15d,%r13d
	movd %r13d,%xmm15
	movl $0x80000000,%r13d
	movd %r13d,%xmm14
	xorps %xmm15,%xmm14
	movd %xmm14,%r13d
	movl %r13d,%r15d
	shlq $0x1,%r15
	orq $0x1,%r15
	jmp real_13
.p2align 0x4
L_410003:
L_88668:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_86075
L_88669:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
L_88670:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_86075
L_88671:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE4B,%r15
	je L_410014
	cmpq $0xE4C,%r15
	je L_410004
	jmp L_86075
.p2align 0x4
L_410004:
L_88689:
	movq 0x0(%r11),%r15
L_88690:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_86075
L_88691:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_88692:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_410012
L_88695:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4A,%r13
	je L_410009
	cmpq $0xE4C,%r13
	je L_410006
	xchgq %r11,%r14
L_88693:
	cmpq $0x1,%r14
	jne L_86075
L_88694:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_2
.p2align 0x4
L_410006:
L_88700:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_410008
L_88701:
	cmpq $0x1,0x8(%r11)
	jne L_86075
	xchgq %r13,%r14
	jmp x_261
.p2align 0x4
L_410008:
L_88703:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_2
.p2align 0x4
L_410009:
L_88696:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_410011
L_88697:
	cmpq $0x1,0x8(%r11)
	jne L_86075
L_88698:
	movq %r15,0x28(%rbp)
	movq %r13,0x30(%rbp)
	jmp x_260
.p2align 0x4
L_410011:
L_88699:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_2
.p2align 0x4
L_410012:
	xchgq %r11,%r14
	jmp L_88693
.p2align 0x4
L_410014:
L_88672:
	movq 0x0(%r11),%r15
L_88673:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_86075
L_88674:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_88675:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_86075
L_88676:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4B,%r13
	jne L_86075
L_88677:
	movq 0x0(%r10),%r13
L_88678:
	movq %r11,%r10
	andq $0x3,%r10
	jnz L_86075
L_88679:
	movq 0x8(%r11),%r10
	movq 0x0(%r11),%r9
L_88680:
	movq %r9,%r11
	andq $0x3,%r11
	jnz L_86075
L_88681:
	movq 0xFFFFFFFFFFFFFFF8(%r9),%r11
	shrq $0x1,%r11
	cmpq $0xE4B,%r11
	jne L_86075
L_88682:
	movq 0x0(%r9),%r11
	cmpq $0x1,%r10
	jne L_86075
L_88683:
	movq %r11,0x30(%rbp)
	movq %r13,0x38(%rbp)
	movq %r15,0x40(%rbp)
	leaq L_86749(%rip),%r15
	movq %r15,0x18(%rbp)
	movq %rbp,%r15
	addq $0x20,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x228(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x30,%rbp
	leaq (realOpt_16+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1482
.p2align 0x4
L_410024:
L_88631:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_86075
L_88632:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
L_88633:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_86075
L_88634:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE4B,%r15
	je L_410035
	cmpq $0xE4C,%r15
	je L_410025
	jmp L_86075
.p2align 0x4
L_410025:
L_88652:
	movq 0x0(%r11),%r15
L_88653:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_86075
L_88654:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_88655:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_410033
L_88658:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4A,%r13
	je L_410030
	cmpq $0xE4C,%r13
	je L_410027
	xchgq %r11,%r14
L_88656:
	cmpq $0x1,%r14
	jne L_86075
L_88657:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_2
.p2align 0x4
L_410027:
L_88663:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_410029
L_88664:
	cmpq $0x1,0x8(%r11)
	jne L_86075
	xchgq %r13,%r14
	jmp x_261
.p2align 0x4
L_410029:
L_88666:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_2
.p2align 0x4
L_410030:
L_88659:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_410032
L_88660:
	cmpq $0x1,0x8(%r11)
	jne L_86075
L_88661:
	movq %r15,0x28(%rbp)
	movq %r13,0x30(%rbp)
	jmp x_260
.p2align 0x4
L_410032:
L_88662:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_2
.p2align 0x4
L_410033:
	xchgq %r11,%r14
	jmp L_88656
.p2align 0x4
L_410035:
L_88635:
	movq 0x0(%r11),%r15
L_88636:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_86075
L_88637:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_88638:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_86075
L_88639:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4B,%r13
	jne L_86075
L_88640:
	movq 0x0(%r10),%r13
L_88641:
	movq %r11,%r10
	andq $0x3,%r10
	jnz L_86075
L_88642:
	movq 0x8(%r11),%r10
	movq 0x0(%r11),%r9
L_88643:
	movq %r9,%r11
	andq $0x3,%r11
	jnz L_86075
L_88644:
	movq 0xFFFFFFFFFFFFFFF8(%r9),%r11
	shrq $0x1,%r11
	cmpq $0xE4B,%r11
	jne L_86075
L_88645:
	movq 0x0(%r9),%r11
	cmpq $0x1,%r10
	jne L_86075
L_88646:
	movq %r11,0x30(%rbp)
	movq %r13,0x38(%rbp)
	movq %r15,0x40(%rbp)
	leaq L_86749(%rip),%r15
	movq %r15,0x18(%rbp)
	movq %rbp,%r15
	addq $0x20,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x120(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x30,%rbp
	leaq (realOpt_15+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1483
.p2align 0x4
L_410045:
L_88599:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_86075
L_88600:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
L_88601:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_86075
L_88602:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE4B,%r15
	je L_410056
	cmpq $0xE4C,%r15
	je L_410046
	jmp L_86075
.p2align 0x4
L_410046:
L_88615:
	movq 0x0(%r11),%r15
L_88616:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_86075
L_88617:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_88618:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_410054
L_88621:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4A,%r13
	je L_410051
	cmpq $0xE4C,%r13
	je L_410048
	xchgq %r11,%r14
L_88619:
	cmpq $0x1,%r14
	jne L_86075
L_88620:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_2
.p2align 0x4
L_410048:
L_88626:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_410050
L_88627:
	cmpq $0x1,0x8(%r11)
	jne L_86075
	xchgq %r13,%r14
	jmp x_261
.p2align 0x4
L_410050:
L_88629:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_2
.p2align 0x4
L_410051:
L_88622:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_410053
L_88623:
	cmpq $0x1,0x8(%r11)
	jne L_86075
L_88624:
	movq %r15,0x28(%rbp)
	movq %r13,0x30(%rbp)
	jmp x_260
.p2align 0x4
L_410053:
L_88625:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_2
.p2align 0x4
L_410054:
	xchgq %r11,%r14
	jmp L_88619
.p2align 0x4
L_410056:
L_88603:
	movq 0x0(%r11),%r15
L_88604:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_86075
L_88605:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_88606:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_86075
L_88607:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4B,%r13
	jne L_86075
L_88608:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	jne L_86075
L_88609:
	movq %r13,0x30(%rbp)
	movq %r15,0x38(%rbp)
	leaq L_86749(%rip),%r15
	movq %r15,0x18(%rbp)
	movq %rbp,%r15
	addq $0x20,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x118(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x30,%rbp
	leaq (realOpt_14+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1481
.p2align 0x4
L_410063:
L_88563:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_86075
L_88564:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
L_88565:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_86075
L_88566:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE4B,%r15
	je L_410074
	cmpq $0xE4C,%r15
	je L_410064
	jmp L_86075
.p2align 0x4
L_410064:
L_88583:
	movq 0x0(%r11),%r15
L_88584:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_86075
L_88585:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_88586:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_410072
L_88589:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4A,%r13
	je L_410069
	cmpq $0xE4C,%r13
	je L_410066
	xchgq %r11,%r14
L_88587:
	cmpq $0x1,%r14
	jne L_86075
L_88588:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_2
.p2align 0x4
L_410066:
L_88594:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_410068
L_88595:
	cmpq $0x1,0x8(%r11)
	jne L_86075
	xchgq %r13,%r14
	jmp x_261
.p2align 0x4
L_410068:
L_88597:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_2
.p2align 0x4
L_410069:
L_88590:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_410071
L_88591:
	cmpq $0x1,0x8(%r11)
	jne L_86075
L_88592:
	movq %r15,0x28(%rbp)
	movq %r13,0x30(%rbp)
	jmp x_260
.p2align 0x4
L_410071:
L_88593:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_2
.p2align 0x4
L_410072:
	xchgq %r11,%r14
	jmp L_88587
.p2align 0x4
L_410074:
L_88567:
	movq 0x0(%r11),%r15
L_88568:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_86075
L_88569:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_88570:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_86075
L_88571:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4B,%r13
	jne L_86075
L_88572:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	jne L_86075
L_88573:
	movq 0x130(%rbp),%r11
	movq 0x8(%r11),%r10
	cmpq $0x1,0x0(%r10)
	jne L_86075
L_88575:
	movq %r15,%r11
	andq $0x1,%r11
	cmpq $0x1,%r11
	je L_410076
L_88576:
	movsd 0x0(%r15),%xmm15
L_88577:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_410075
L_88579:
	ucomisd 0x0(%r13),%xmm15
	setnp %al
	movzbl %al,%eax
	setc %cl
	movzbl %cl,%ecx
	andl %eax,%ecx
x_269:
	movl %ecx,%r15d
	shlq $0x2,%r15
	orq $0x3,%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_410075:
L_88578:
	movq (globalObjptr+0x19D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_410076:
L_88580:
	shrq $0x1,%r15
	movl %r15d,%r11d
	movd %r11d,%xmm15
	movq %r13,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	jne L_410077
L_88582:
	shrq $0x1,%r13
	movl %r13d,%r15d
	movd %r15d,%xmm14
	ucomiss %xmm14,%xmm15
	setnp %al
	movzbl %al,%eax
	setc %cl
	movzbl %cl,%ecx
	andl %eax,%ecx
	jmp x_269
.p2align 0x4
L_410077:
L_88581:
	movq (globalObjptr+0x19D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_410085:
L_88527:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_86075
L_88528:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
L_88529:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_86075
L_88530:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE4B,%r15
	je L_410096
	cmpq $0xE4C,%r15
	je L_410086
	jmp L_86075
.p2align 0x4
L_410086:
L_88547:
	movq 0x0(%r11),%r15
L_88548:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_86075
L_88549:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_88550:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_410094
L_88553:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4A,%r13
	je L_410091
	cmpq $0xE4C,%r13
	je L_410088
	xchgq %r11,%r14
L_88551:
	cmpq $0x1,%r14
	jne L_86075
L_88552:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_2
.p2align 0x4
L_410088:
L_88558:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_410090
L_88559:
	cmpq $0x1,0x8(%r11)
	jne L_86075
	xchgq %r13,%r14
	jmp x_261
.p2align 0x4
L_410090:
L_88561:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_2
.p2align 0x4
L_410091:
L_88554:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_410093
L_88555:
	cmpq $0x1,0x8(%r11)
	jne L_86075
L_88556:
	movq %r15,0x28(%rbp)
	movq %r13,0x30(%rbp)
	jmp x_260
.p2align 0x4
L_410093:
L_88557:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_2
.p2align 0x4
L_410094:
	xchgq %r11,%r14
	jmp L_88551
.p2align 0x4
L_410096:
L_88531:
	movq 0x0(%r11),%r15
L_88532:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_86075
L_88533:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_88534:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_86075
L_88535:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4B,%r13
	jne L_86075
L_88536:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	jne L_86075
L_88537:
	movq 0x220(%rbp),%r11
	movq 0x8(%r11),%r10
	cmpq $0x1,0x0(%r10)
	jne L_86075
L_88539:
	movq %r15,%r11
	andq $0x1,%r11
	cmpq $0x1,%r11
	je L_410098
L_88540:
	movsd 0x0(%r15),%xmm15
L_88541:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_410097
L_88543:
	ucomisd 0x0(%r13),%xmm15
	setnp %al
	movzbl %al,%eax
	setna %cl
	movzbl %cl,%ecx
	andl %eax,%ecx
x_268:
	movl %ecx,%r15d
	shlq $0x2,%r15
	orq $0x3,%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_410097:
L_88542:
	movq (globalObjptr+0x19D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_410098:
L_88544:
	shrq $0x1,%r15
	movl %r15d,%r11d
	movd %r11d,%xmm15
	movq %r13,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	jne L_410099
L_88546:
	shrq $0x1,%r13
	movl %r13d,%r15d
	movd %r15d,%xmm14
	ucomiss %xmm14,%xmm15
	setnp %al
	movzbl %al,%eax
	setna %cl
	movzbl %cl,%ecx
	andl %eax,%ecx
	jmp x_268
.p2align 0x4
L_410099:
L_88545:
	movq (globalObjptr+0x19D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_410107:
L_88491:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_86075
L_88492:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
L_88493:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_86075
L_88494:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE4B,%r15
	je L_410118
	cmpq $0xE4C,%r15
	je L_410108
	jmp L_86075
.p2align 0x4
L_410108:
L_88511:
	movq 0x0(%r11),%r15
L_88512:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_86075
L_88513:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_88514:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_410116
L_88517:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4A,%r13
	je L_410113
	cmpq $0xE4C,%r13
	je L_410110
	xchgq %r11,%r14
L_88515:
	cmpq $0x1,%r14
	jne L_86075
L_88516:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_2
.p2align 0x4
L_410110:
L_88522:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_410112
L_88523:
	cmpq $0x1,0x8(%r11)
	jne L_86075
	xchgq %r13,%r14
	jmp x_261
.p2align 0x4
L_410112:
L_88525:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_2
.p2align 0x4
L_410113:
L_88518:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_410115
L_88519:
	cmpq $0x1,0x8(%r11)
	jne L_86075
L_88520:
	movq %r15,0x28(%rbp)
	movq %r13,0x30(%rbp)
	jmp x_260
.p2align 0x4
L_410115:
L_88521:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_2
.p2align 0x4
L_410116:
	xchgq %r11,%r14
	jmp L_88515
.p2align 0x4
L_410118:
L_88495:
	movq 0x0(%r11),%r15
L_88496:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_86075
L_88497:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_88498:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_86075
L_88499:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4B,%r13
	jne L_86075
L_88500:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	jne L_86075
L_88501:
	movq 0x128(%rbp),%r11
	movq 0x8(%r11),%r10
	cmpq $0x1,0x0(%r10)
	jne L_86075
L_88503:
	movq %r15,%r11
	andq $0x1,%r11
	cmpq $0x1,%r11
	je L_410120
L_88504:
	movsd 0x0(%r15),%xmm15
L_88505:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_410119
L_88507:
	movsd 0x0(%r13),%xmm14
	ucomisd %xmm15,%xmm14
	setnp %al
	movzbl %al,%eax
	setz %cl
	movzbl %cl,%ecx
	andl %eax,%ecx
x_267:
	movl %ecx,%r15d
	shlq $0x2,%r15
	orq $0x3,%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_410119:
L_88506:
	movq (globalObjptr+0x19D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_410120:
L_88508:
	shrq $0x1,%r15
	movl %r15d,%r11d
	movd %r11d,%xmm15
	movq %r13,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	jne L_410121
L_88510:
	shrq $0x1,%r13
	movl %r13d,%r15d
	movd %r15d,%xmm14
	ucomiss %xmm14,%xmm15
	setnp %al
	movzbl %al,%eax
	setz %cl
	movzbl %cl,%ecx
	andl %eax,%ecx
	jmp x_267
.p2align 0x4
L_410121:
L_88509:
	movq (globalObjptr+0x19D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_410129:
L_88459:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_86075
L_88460:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
L_88461:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_86075
L_88462:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE4B,%r15
	je L_410140
	cmpq $0xE4C,%r15
	je L_410130
	jmp L_86075
.p2align 0x4
L_410130:
L_88475:
	movq 0x0(%r11),%r15
L_88476:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_86075
L_88477:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_88478:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_410138
L_88481:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4A,%r13
	je L_410135
	cmpq $0xE4C,%r13
	je L_410132
	xchgq %r11,%r14
L_88479:
	cmpq $0x1,%r14
	jne L_86075
L_88480:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_2
.p2align 0x4
L_410132:
L_88486:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_410134
L_88487:
	cmpq $0x1,0x8(%r11)
	jne L_86075
	xchgq %r13,%r14
	jmp x_261
.p2align 0x4
L_410134:
L_88489:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_2
.p2align 0x4
L_410135:
L_88482:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_410137
L_88483:
	cmpq $0x1,0x8(%r11)
	jne L_86075
L_88484:
	movq %r15,0x28(%rbp)
	movq %r13,0x30(%rbp)
	jmp x_260
.p2align 0x4
L_410137:
L_88485:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_2
.p2align 0x4
L_410138:
	xchgq %r11,%r14
	jmp L_88479
.p2align 0x4
L_410140:
L_88463:
	movq 0x0(%r11),%r15
L_88464:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_86075
L_88465:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_88466:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_86075
L_88467:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4B,%r13
	jne L_86075
L_88468:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	jne L_86075
L_88469:
	movq %r13,0x30(%rbp)
	movq %r15,0x38(%rbp)
	leaq L_86749(%rip),%r15
	movq %r15,0x18(%rbp)
	movq %rbp,%r15
	addq $0x20,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x238(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x30,%rbp
	leaq (realOpt_13+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1481
.p2align 0x4
L_410147:
L_88427:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_86075
L_88428:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
L_88429:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_86075
L_88430:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE4B,%r15
	je L_410158
	cmpq $0xE4C,%r15
	je L_410148
	jmp L_86075
.p2align 0x4
L_410148:
L_88443:
	movq 0x0(%r11),%r15
L_88444:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_86075
L_88445:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_88446:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_410156
L_88449:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4A,%r13
	je L_410153
	cmpq $0xE4C,%r13
	je L_410150
	xchgq %r11,%r14
L_88447:
	cmpq $0x1,%r14
	jne L_86075
L_88448:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_2
.p2align 0x4
L_410150:
L_88454:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_410152
L_88455:
	cmpq $0x1,0x8(%r11)
	jne L_86075
	xchgq %r13,%r14
	jmp x_261
.p2align 0x4
L_410152:
L_88457:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_2
.p2align 0x4
L_410153:
L_88450:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_410155
L_88451:
	cmpq $0x1,0x8(%r11)
	jne L_86075
L_88452:
	movq %r15,0x28(%rbp)
	movq %r13,0x30(%rbp)
	jmp x_260
.p2align 0x4
L_410155:
L_88453:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_2
.p2align 0x4
L_410156:
	xchgq %r11,%r14
	jmp L_88447
.p2align 0x4
L_410158:
L_88431:
	movq 0x0(%r11),%r15
L_88432:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_86075
L_88433:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_88434:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_86075
L_88435:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4B,%r13
	jne L_86075
L_88436:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	jne L_86075
L_88437:
	movq %r13,0x30(%rbp)
	movq %r15,0x38(%rbp)
	leaq L_86749(%rip),%r15
	movq %r15,0x18(%rbp)
	movq %rbp,%r15
	addq $0x20,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x110(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x30,%rbp
	leaq (realOpt_12+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1481
.p2align 0x4
L_410165:
L_88401:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_86075
L_88402:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
L_88403:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_86075
L_88404:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE4B,%r15
	je L_410176
	cmpq $0xE4C,%r15
	je L_410166
	jmp L_86075
.p2align 0x4
L_410166:
L_88411:
	movq 0x0(%r11),%r15
L_88412:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_86075
L_88413:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_88414:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_410174
L_88417:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4A,%r13
	je L_410171
	cmpq $0xE4C,%r13
	je L_410168
	xchgq %r11,%r14
L_88415:
	cmpq $0x1,%r14
	jne L_86075
L_88416:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_2
.p2align 0x4
L_410168:
L_88422:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_410170
L_88423:
	cmpq $0x1,0x8(%r11)
	jne L_86075
	xchgq %r13,%r14
	jmp x_261
.p2align 0x4
L_410170:
L_88425:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_2
.p2align 0x4
L_410171:
L_88418:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_410173
L_88419:
	cmpq $0x1,0x8(%r11)
	jne L_86075
L_88420:
	movq %r15,0x28(%rbp)
	movq %r13,0x30(%rbp)
	jmp x_260
.p2align 0x4
L_410173:
L_88421:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_2
.p2align 0x4
L_410174:
	xchgq %r11,%r14
	jmp L_88415
.p2align 0x4
L_410176:
L_88405:
	movq 0x0(%r11),%r15
	cmpq $0x1,%r13
	jne L_86075
L_88406:
	movq 0xE0(%rbp),%r13
	movq 0x8(%r13),%r11
	cmpq $0x1,0x0(%r11)
	jne L_86075
L_88408:
	movq %r15,%r13
	andq $0x1,%r13
	cmpq $0x1,%r13
	je L_410177
L_88409:
	movq $0x7FFFFFFFFFFFFFFF,%r13
	movd %r13,%xmm15
	movsd 0x0(%r15),%xmm14
	andpd %xmm14,%xmm15
	movq $0x1C8F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movsd %xmm15,%xmm14
	movsd %xmm14,0x0(%r15)
	addq $0x10,%r12
real_12:
	movq $0x1C97,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x27F3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_410177:
L_88410:
	shrq $0x1,%r15
	movl %r15d,%r13d
	movd %r13d,%xmm15
	movl $0x7FFFFFFF,%r13d
	movd %r13d,%xmm14
	andps %xmm15,%xmm14
	movd %xmm14,%r13d
	movl %r13d,%r15d
	shlq $0x1,%r15
	orq $0x1,%r15
	jmp real_12
.p2align 0x4
L_410182:
L_88374:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_86075
L_88375:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
L_88376:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_86075
L_88377:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE4B,%r15
	je L_410193
	cmpq $0xE4C,%r15
	je L_410183
	jmp L_86075
.p2align 0x4
L_410183:
L_88385:
	movq 0x0(%r11),%r15
L_88386:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_86075
L_88387:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_88388:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_410191
L_88391:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4A,%r13
	je L_410188
	cmpq $0xE4C,%r13
	je L_410185
	xchgq %r11,%r14
L_88389:
	cmpq $0x1,%r14
	jne L_86075
L_88390:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_2
.p2align 0x4
L_410185:
L_88396:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_410187
L_88397:
	cmpq $0x1,0x8(%r11)
	jne L_86075
	xchgq %r13,%r14
	jmp x_261
.p2align 0x4
L_410187:
L_88399:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_2
.p2align 0x4
L_410188:
L_88392:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_410190
L_88393:
	cmpq $0x1,0x8(%r11)
	jne L_86075
L_88394:
	movq %r15,0x28(%rbp)
	movq %r13,0x30(%rbp)
	jmp x_260
.p2align 0x4
L_410190:
L_88395:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_2
.p2align 0x4
L_410191:
	xchgq %r11,%r14
	jmp L_88389
.p2align 0x4
L_410193:
L_88378:
	movq 0x0(%r11),%r15
	cmpq $0x1,%r13
	jne L_86075
L_88379:
	movq %r15,0x30(%rbp)
	leaq L_86749(%rip),%r15
	movq %r15,0x18(%rbp)
	movq %rbp,%r15
	addq $0x20,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x240(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (realOpt_11+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1484
.p2align 0x4
L_410197:
L_88347:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_86075
L_88348:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
L_88349:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_86075
L_88350:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE4B,%r15
	je L_410208
	cmpq $0xE4C,%r15
	je L_410198
	jmp L_86075
.p2align 0x4
L_410198:
L_88358:
	movq 0x0(%r11),%r15
L_88359:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_86075
L_88360:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_88361:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_410206
L_88364:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4A,%r13
	je L_410203
	cmpq $0xE4C,%r13
	je L_410200
	xchgq %r11,%r14
L_88362:
	cmpq $0x1,%r14
	jne L_86075
L_88363:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_2
.p2align 0x4
L_410200:
L_88369:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_410202
L_88370:
	cmpq $0x1,0x8(%r11)
	jne L_86075
	xchgq %r13,%r14
	jmp x_261
.p2align 0x4
L_410202:
L_88372:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_2
.p2align 0x4
L_410203:
L_88365:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_410205
L_88366:
	cmpq $0x1,0x8(%r11)
	jne L_86075
L_88367:
	movq %r15,0x28(%rbp)
	movq %r13,0x30(%rbp)
	jmp x_260
.p2align 0x4
L_410205:
L_88368:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_2
.p2align 0x4
L_410206:
	xchgq %r11,%r14
	jmp L_88362
.p2align 0x4
L_410208:
L_88351:
	movq 0x0(%r11),%r15
	cmpq $0x1,%r13
	jne L_86075
L_88352:
	movq %r15,0x30(%rbp)
	leaq L_86749(%rip),%r15
	movq %r15,0x18(%rbp)
	movq %rbp,%r15
	addq $0x20,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x108(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (realOpt_10+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1484
.p2align 0x4
L_410212:
L_88320:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_86075
L_88321:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
L_88322:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_86075
L_88323:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE4B,%r15
	je L_410223
	cmpq $0xE4C,%r15
	je L_410213
	jmp L_86075
.p2align 0x4
L_410213:
L_88331:
	movq 0x0(%r11),%r15
L_88332:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_86075
L_88333:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_88334:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_410221
L_88337:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4A,%r13
	je L_410218
	cmpq $0xE4C,%r13
	je L_410215
	xchgq %r11,%r14
L_88335:
	cmpq $0x1,%r14
	jne L_86075
L_88336:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_2
.p2align 0x4
L_410215:
L_88342:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_410217
L_88343:
	cmpq $0x1,0x8(%r11)
	jne L_86075
	xchgq %r13,%r14
	jmp x_261
.p2align 0x4
L_410217:
L_88345:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_2
.p2align 0x4
L_410218:
L_88338:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_410220
L_88339:
	cmpq $0x1,0x8(%r11)
	jne L_86075
L_88340:
	movq %r15,0x28(%rbp)
	movq %r13,0x30(%rbp)
	jmp x_260
.p2align 0x4
L_410220:
L_88341:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_2
.p2align 0x4
L_410221:
	xchgq %r11,%r14
	jmp L_88335
.p2align 0x4
L_410223:
L_88324:
	movq 0x0(%r11),%r15
	cmpq $0x1,%r13
	jne L_86075
L_88325:
	movq %r15,0x30(%rbp)
	leaq L_86749(%rip),%r15
	movq %r15,0x18(%rbp)
	movq %rbp,%r15
	addq $0x20,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x248(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (realOpt_9+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1484
.p2align 0x4
L_410227:
L_88293:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_86075
L_88294:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
L_88295:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_86075
L_88296:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE4B,%r15
	je L_410238
	cmpq $0xE4C,%r15
	je L_410228
	jmp L_86075
.p2align 0x4
L_410228:
L_88304:
	movq 0x0(%r11),%r15
L_88305:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_86075
L_88306:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_88307:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_410236
L_88310:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4A,%r13
	je L_410233
	cmpq $0xE4C,%r13
	je L_410230
	xchgq %r11,%r14
L_88308:
	cmpq $0x1,%r14
	jne L_86075
L_88309:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_2
.p2align 0x4
L_410230:
L_88315:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_410232
L_88316:
	cmpq $0x1,0x8(%r11)
	jne L_86075
	xchgq %r13,%r14
	jmp x_261
.p2align 0x4
L_410232:
L_88318:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_2
.p2align 0x4
L_410233:
L_88311:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_410235
L_88312:
	cmpq $0x1,0x8(%r11)
	jne L_86075
L_88313:
	movq %r15,0x28(%rbp)
	movq %r13,0x30(%rbp)
	jmp x_260
.p2align 0x4
L_410235:
L_88314:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_2
.p2align 0x4
L_410236:
	xchgq %r11,%r14
	jmp L_88308
.p2align 0x4
L_410238:
L_88297:
	movq 0x0(%r11),%r15
	cmpq $0x1,%r13
	jne L_86075
L_88298:
	movq %r15,0x30(%rbp)
	leaq L_86749(%rip),%r15
	movq %r15,0x18(%rbp)
	movq %rbp,%r15
	addq $0x20,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x100(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (realOpt_8+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1484
.p2align 0x4
L_410242:
L_88266:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_86075
L_88267:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
L_88268:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_86075
L_88269:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE4B,%r15
	je L_410253
	cmpq $0xE4C,%r15
	je L_410243
	jmp L_86075
.p2align 0x4
L_410243:
L_88277:
	movq 0x0(%r11),%r15
L_88278:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_86075
L_88279:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_88280:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_410251
L_88283:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4A,%r13
	je L_410248
	cmpq $0xE4C,%r13
	je L_410245
	xchgq %r11,%r14
L_88281:
	cmpq $0x1,%r14
	jne L_86075
L_88282:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_2
.p2align 0x4
L_410245:
L_88288:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_410247
L_88289:
	cmpq $0x1,0x8(%r11)
	jne L_86075
	xchgq %r13,%r14
	jmp x_261
.p2align 0x4
L_410247:
L_88291:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_2
.p2align 0x4
L_410248:
L_88284:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_410250
L_88285:
	cmpq $0x1,0x8(%r11)
	jne L_86075
L_88286:
	movq %r15,0x28(%rbp)
	movq %r13,0x30(%rbp)
	jmp x_260
.p2align 0x4
L_410250:
L_88287:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_2
.p2align 0x4
L_410251:
	xchgq %r11,%r14
	jmp L_88281
.p2align 0x4
L_410253:
L_88270:
	movq 0x0(%r11),%r15
	cmpq $0x1,%r13
	jne L_86075
L_88271:
	movq %r15,0x30(%rbp)
	leaq L_86749(%rip),%r15
	movq %r15,0x18(%rbp)
	movq %rbp,%r15
	addq $0x20,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x250(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (realOpt_7+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1484
.p2align 0x4
L_410257:
L_88239:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_86075
L_88240:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
L_88241:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_86075
L_88242:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE4B,%r15
	je L_410268
	cmpq $0xE4C,%r15
	je L_410258
	jmp L_86075
.p2align 0x4
L_410258:
L_88250:
	movq 0x0(%r11),%r15
L_88251:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_86075
L_88252:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_88253:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_410266
L_88256:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4A,%r13
	je L_410263
	cmpq $0xE4C,%r13
	je L_410260
	xchgq %r11,%r14
L_88254:
	cmpq $0x1,%r14
	jne L_86075
L_88255:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_2
.p2align 0x4
L_410260:
L_88261:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_410262
L_88262:
	cmpq $0x1,0x8(%r11)
	jne L_86075
	xchgq %r13,%r14
	jmp x_261
.p2align 0x4
L_410262:
L_88264:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_2
.p2align 0x4
L_410263:
L_88257:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_410265
L_88258:
	cmpq $0x1,0x8(%r11)
	jne L_86075
L_88259:
	movq %r15,0x28(%rbp)
	movq %r13,0x30(%rbp)
	jmp x_260
.p2align 0x4
L_410265:
L_88260:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_2
.p2align 0x4
L_410266:
	xchgq %r11,%r14
	jmp L_88254
.p2align 0x4
L_410268:
L_88243:
	movq 0x0(%r11),%r15
	cmpq $0x1,%r13
	jne L_86075
L_88244:
	movq %r15,0x30(%rbp)
	leaq L_86749(%rip),%r15
	movq %r15,0x18(%rbp)
	movq %rbp,%r15
	addq $0x20,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0xF8(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (realOpt_6+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1484
.p2align 0x4
L_410272:
L_88212:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_86075
L_88213:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
L_88214:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_86075
L_88215:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE4B,%r15
	je L_410283
	cmpq $0xE4C,%r15
	je L_410273
	jmp L_86075
.p2align 0x4
L_410273:
L_88223:
	movq 0x0(%r11),%r15
L_88224:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_86075
L_88225:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_88226:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_410281
L_88229:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4A,%r13
	je L_410278
	cmpq $0xE4C,%r13
	je L_410275
	xchgq %r11,%r14
L_88227:
	cmpq $0x1,%r14
	jne L_86075
L_88228:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_2
.p2align 0x4
L_410275:
L_88234:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_410277
L_88235:
	cmpq $0x1,0x8(%r11)
	jne L_86075
	xchgq %r13,%r14
	jmp x_261
.p2align 0x4
L_410277:
L_88237:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_2
.p2align 0x4
L_410278:
L_88230:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_410280
L_88231:
	cmpq $0x1,0x8(%r11)
	jne L_86075
L_88232:
	movq %r15,0x28(%rbp)
	movq %r13,0x30(%rbp)
	jmp x_260
.p2align 0x4
L_410280:
L_88233:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_2
.p2align 0x4
L_410281:
	xchgq %r11,%r14
	jmp L_88227
.p2align 0x4
L_410283:
L_88216:
	movq 0x0(%r11),%r15
	cmpq $0x1,%r13
	jne L_86075
L_88217:
	movq %r15,0x30(%rbp)
	leaq L_86749(%rip),%r15
	movq %r15,0x18(%rbp)
	movq %rbp,%r15
	addq $0x20,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x258(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (realOpt_5+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1484
.p2align 0x4
L_410287:
L_88180:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_86075
L_88181:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
L_88182:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_86075
L_88183:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE4B,%r15
	je L_410298
	cmpq $0xE4C,%r15
	je L_410288
	jmp L_86075
.p2align 0x4
L_410288:
L_88196:
	movq 0x0(%r11),%r15
L_88197:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_86075
L_88198:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_88199:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_410296
L_88202:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4A,%r13
	je L_410293
	cmpq $0xE4C,%r13
	je L_410290
	xchgq %r11,%r14
L_88200:
	cmpq $0x1,%r14
	jne L_86075
L_88201:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_2
.p2align 0x4
L_410290:
L_88207:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_410292
L_88208:
	cmpq $0x1,0x8(%r11)
	jne L_86075
	xchgq %r13,%r14
	jmp x_261
.p2align 0x4
L_410292:
L_88210:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_2
.p2align 0x4
L_410293:
L_88203:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_410295
L_88204:
	cmpq $0x1,0x8(%r11)
	jne L_86075
L_88205:
	movq %r15,0x28(%rbp)
	movq %r13,0x30(%rbp)
	jmp x_260
.p2align 0x4
L_410295:
L_88206:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_2
.p2align 0x4
L_410296:
	xchgq %r11,%r14
	jmp L_88200
.p2align 0x4
L_410298:
L_88184:
	movq 0x0(%r11),%r15
L_88185:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_86075
L_88186:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_88187:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_86075
L_88188:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4B,%r13
	jne L_86075
L_88189:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	jne L_86075
L_88190:
	movq %r13,0x30(%rbp)
	movq %r15,0x38(%rbp)
	leaq L_86749(%rip),%r15
	movq %r15,0x18(%rbp)
	movq %rbp,%r15
	addq $0x20,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0xF0(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x30,%rbp
	leaq (realOpt_4+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1481
.p2align 0x4
L_410305:
L_88153:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_86075
L_88154:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
L_88155:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_86075
L_88156:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE4B,%r15
	je L_410316
	cmpq $0xE4C,%r15
	je L_410306
	jmp L_86075
.p2align 0x4
L_410306:
L_88164:
	movq 0x0(%r11),%r15
L_88165:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_86075
L_88166:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_88167:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_410314
L_88170:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4A,%r13
	je L_410311
	cmpq $0xE4C,%r13
	je L_410308
	xchgq %r11,%r14
L_88168:
	cmpq $0x1,%r14
	jne L_86075
L_88169:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_2
.p2align 0x4
L_410308:
L_88175:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_410310
L_88176:
	cmpq $0x1,0x8(%r11)
	jne L_86075
	xchgq %r13,%r14
	jmp x_261
.p2align 0x4
L_410310:
L_88178:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_2
.p2align 0x4
L_410311:
L_88171:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_410313
L_88172:
	cmpq $0x1,0x8(%r11)
	jne L_86075
L_88173:
	movq %r15,0x28(%rbp)
	movq %r13,0x30(%rbp)
	jmp x_260
.p2align 0x4
L_410313:
L_88174:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_2
.p2align 0x4
L_410314:
	xchgq %r11,%r14
	jmp L_88168
.p2align 0x4
L_410316:
L_88157:
	movq 0x0(%r11),%r15
	cmpq $0x1,%r13
	jne L_86075
L_88158:
	movq %r15,0x30(%rbp)
	leaq L_86749(%rip),%r15
	movq %r15,0x18(%rbp)
	movq %rbp,%r15
	addq $0x20,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x260(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (realOpt_3+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1484
.p2align 0x4
L_410320:
L_88126:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_86075
L_88127:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
L_88128:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_86075
L_88129:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE4B,%r15
	je L_410331
	cmpq $0xE4C,%r15
	je L_410321
	jmp L_86075
.p2align 0x4
L_410321:
L_88137:
	movq 0x0(%r11),%r15
L_88138:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_86075
L_88139:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_88140:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_410329
L_88143:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4A,%r13
	je L_410326
	cmpq $0xE4C,%r13
	je L_410323
	xchgq %r11,%r14
L_88141:
	cmpq $0x1,%r14
	jne L_86075
L_88142:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_2
.p2align 0x4
L_410323:
L_88148:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_410325
L_88149:
	cmpq $0x1,0x8(%r11)
	jne L_86075
	xchgq %r13,%r14
	jmp x_261
.p2align 0x4
L_410325:
L_88151:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_2
.p2align 0x4
L_410326:
L_88144:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_410328
L_88145:
	cmpq $0x1,0x8(%r11)
	jne L_86075
L_88146:
	movq %r15,0x28(%rbp)
	movq %r13,0x30(%rbp)
	jmp x_260
.p2align 0x4
L_410328:
L_88147:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_2
.p2align 0x4
L_410329:
	xchgq %r11,%r14
	jmp L_88141
.p2align 0x4
L_410331:
L_88130:
	movq 0x0(%r11),%r15
	cmpq $0x1,%r13
	jne L_86075
L_88131:
	movq %r15,0x30(%rbp)
	leaq L_86749(%rip),%r15
	movq %r15,0x18(%rbp)
	movq %rbp,%r15
	addq $0x20,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0xE8(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (realOpt_2+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1484
.p2align 0x4
L_410335:
L_88099:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_86075
L_88100:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
L_88101:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_86075
L_88102:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE4B,%r15
	je L_410346
	cmpq $0xE4C,%r15
	je L_410336
	jmp L_86075
.p2align 0x4
L_410336:
L_88110:
	movq 0x0(%r11),%r15
L_88111:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_86075
L_88112:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_88113:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_410344
L_88116:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4A,%r13
	je L_410341
	cmpq $0xE4C,%r13
	je L_410338
	xchgq %r11,%r14
L_88114:
	cmpq $0x1,%r14
	jne L_86075
L_88115:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_2
.p2align 0x4
L_410338:
L_88121:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_410340
L_88122:
	cmpq $0x1,0x8(%r11)
	jne L_86075
	xchgq %r13,%r14
	jmp x_261
.p2align 0x4
L_410340:
L_88124:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_2
.p2align 0x4
L_410341:
L_88117:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_410343
L_88118:
	cmpq $0x1,0x8(%r11)
	jne L_86075
L_88119:
	movq %r15,0x28(%rbp)
	movq %r13,0x30(%rbp)
	jmp x_260
.p2align 0x4
L_410343:
L_88120:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_2
.p2align 0x4
L_410344:
	xchgq %r11,%r14
	jmp L_88114
.p2align 0x4
L_410346:
L_88103:
	movq 0x0(%r11),%r15
	cmpq $0x1,%r13
	jne L_86075
L_88104:
	movq %r15,0x30(%rbp)
	leaq L_86749(%rip),%r15
	movq %r15,0x18(%rbp)
	movq %rbp,%r15
	addq $0x20,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x268(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (realOpt_1+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1484
.p2align 0x4
L_410350:
L_88060:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_86075
L_88061:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
L_88062:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_86075
L_88063:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE4A,%r15
	je L_410361
	cmpq $0xE4C,%r15
	je L_410351
	jmp L_86075
.p2align 0x4
L_410351:
L_88083:
	movq 0x0(%r11),%r15
L_88084:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_86075
L_88085:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_88086:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_410359
L_88089:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4A,%r13
	je L_410356
	cmpq $0xE4C,%r13
	je L_410353
	xchgq %r11,%r14
L_88087:
	cmpq $0x1,%r14
	jne L_86075
L_88088:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_2
.p2align 0x4
L_410353:
L_88094:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_410355
L_88095:
	cmpq $0x1,0x8(%r11)
	jne L_86075
	xchgq %r13,%r14
	jmp x_261
.p2align 0x4
L_410355:
L_88097:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_2
.p2align 0x4
L_410356:
L_88090:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_410358
L_88091:
	cmpq $0x1,0x8(%r11)
	jne L_86075
L_88092:
	movq %r15,0x28(%rbp)
	movq %r13,0x30(%rbp)
	jmp x_260
.p2align 0x4
L_410358:
L_88093:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_2
.p2align 0x4
L_410359:
	xchgq %r11,%r14
	jmp L_88087
.p2align 0x4
L_410361:
L_88064:
	movq 0x0(%r11),%r15
	movq %r15,0x28(%rbp)
	cmpq $0x1,%r13
	jne L_86075
L_88065:
	movq 0x8(%r15),%r13
	movq %r13,0x30(%rbp)
	movq 0x1B0(%rbp),%r15
	movq 0x8(%r15),%r11
	movq %r11,0x38(%rbp)
	movq 0x0(%r15),%r11
	movq %r11,0x40(%rbp)
	movq %r13,0x2D0(%rbp)
	addq $0x2D0,%rbp
	leaq (L_88066+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_410365:
L_88027:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_86075
L_88028:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
L_88029:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_86075
L_88030:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE49,%r15
	je L_410376
	cmpq $0xE4C,%r15
	je L_410366
	jmp L_86075
.p2align 0x4
L_410366:
L_88044:
	movq 0x0(%r11),%r15
L_88045:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_86075
L_88046:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_88047:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_410374
L_88050:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4A,%r13
	je L_410371
	cmpq $0xE4C,%r13
	je L_410368
	xchgq %r11,%r14
L_88048:
	cmpq $0x1,%r14
	jne L_86075
L_88049:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_2
.p2align 0x4
L_410368:
L_88055:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_410370
L_88056:
	cmpq $0x1,0x8(%r11)
	jne L_86075
	xchgq %r13,%r14
	jmp x_261
.p2align 0x4
L_410370:
L_88058:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_2
.p2align 0x4
L_410371:
L_88051:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_410373
L_88052:
	cmpq $0x1,0x8(%r11)
	jne L_86075
L_88053:
	movq %r15,0x28(%rbp)
	movq %r13,0x30(%rbp)
	jmp x_260
.p2align 0x4
L_410373:
L_88054:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_2
.p2align 0x4
L_410374:
	xchgq %r11,%r14
	jmp L_88048
.p2align 0x4
L_410376:
L_88031:
	movq 0x8(%r11),%r15
	movq %r15,0x28(%rbp)
L_88032:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_86075
L_88033:
	movq 0x8(%r13),%r15
	movq 0x0(%r13),%r11
L_88034:
	movq %r11,%r13
	andq $0x3,%r13
	jnz L_86075
L_88035:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r13
	shrq $0x1,%r13
	cmpq $0xE4A,%r13
	jne L_86075
L_88036:
	movq 0x0(%r11),%r13
	cmpq $0x1,%r15
	jne L_86075
L_88037:
	movq 0x0(%r13),%r15
	movq %r15,0x38(%rbp)
	leaq L_86749(%rip),%r15
	movq %r15,0x18(%rbp)
	movq %rbp,%r15
	addq $0x20,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x38,%rbp
	leaq (L_88038+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_410383:
L_87990:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_86075
L_87991:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
L_87992:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_86075
L_87993:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE49,%r15
	je L_410394
	cmpq $0xE4C,%r15
	je L_410384
	jmp L_86075
.p2align 0x4
L_410384:
L_88011:
	movq 0x0(%r11),%r15
L_88012:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_86075
L_88013:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_88014:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_410392
L_88017:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4A,%r13
	je L_410389
	cmpq $0xE4C,%r13
	je L_410386
	xchgq %r11,%r14
L_88015:
	cmpq $0x1,%r14
	jne L_86075
L_88016:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_2
.p2align 0x4
L_410386:
L_88022:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_410388
L_88023:
	cmpq $0x1,0x8(%r11)
	jne L_86075
	xchgq %r13,%r14
	jmp x_261
.p2align 0x4
L_410388:
L_88025:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_2
.p2align 0x4
L_410389:
L_88018:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_410391
L_88019:
	cmpq $0x1,0x8(%r11)
	jne L_86075
L_88020:
	movq %r15,0x28(%rbp)
	movq %r13,0x30(%rbp)
	jmp x_260
.p2align 0x4
L_410391:
L_88021:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_2
.p2align 0x4
L_410392:
	xchgq %r11,%r14
	jmp L_88015
.p2align 0x4
L_410394:
L_87994:
	movq 0x8(%r11),%r15
	cmpq $0x1,%r13
	jne L_86075
L_87995:
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r10,%r13
	jne L_410396
L_87997:
	shlq $0x1,%r10
	orq $0x1,%r10
	movq %r10,0x28(%rbp)
	movq 0x278(%rbp),%r15
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r11
	movq 0x0(%r11),%r10
	movq 0x8(%r11),%r9
	movq 0x0(%r9),%r8
	cmpq $0x1,%r8
	je L_410395
L_87998:
	movq %r13,0x68(%rbp)
	movq 0x0(%r8),%r15
	movq %r15,0x60(%rbp)
	leaq L_86749(%rip),%r15
	movq %r15,0x18(%rbp)
	movq %rbp,%r15
	addq $0x20,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x60,%rbp
	leaq (L_87999+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_410395:
L_88006:
	movq %r10,0x30(%rbp)
	leaq L_86749(%rip),%r15
	movq %r15,0x18(%rbp)
	movq %rbp,%r15
	addq $0x20,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_88007+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_410396:
L_87996:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_410400:
L_87953:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_86075
L_87954:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
L_87955:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_410419
L_87974:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE4C,%r15
	jne L_410409
L_87975:
	movq 0x0(%r11),%r15
L_87976:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_86075
L_87977:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_87978:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_86075
L_87979:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4A,%r13
	je L_410404
	cmpq $0xE4C,%r13
	je L_410401
	jmp L_86075
.p2align 0x4
L_410401:
L_87984:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_410403
L_87985:
	cmpq $0x1,0x8(%r11)
	jne L_86075
	xchgq %r13,%r14
	jmp x_261
.p2align 0x4
L_410403:
L_87987:
	movq (c_stackP+0x0)(%rip),%rsp
	movq %r15,%rsi
	movq %r13,%rdi
	xorq %rax,%rax
	call IntInf_equal
L_87988:
	movl %eax,%r15d
	shlq $0x2,%r15
	orq $0x3,%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_410404:
L_87980:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_86075
L_87981:
	cmpq $0x1,0x8(%r11)
	jne L_86075
L_87982:
	movq %r15,0x28(%rbp)
	movq %r13,0x30(%rbp)
	jmp x_260
.p2align 0x4
L_410409:
	movq %r13,%r15
	xchgq %r11,%r14
L_87957:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_86075
L_87958:
	movq 0x0(%r15),%r13
	cmpq $0x1,0x8(%r15)
	jne L_86075
L_87960:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_86075
L_87961:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xE49,%r15
	je L_410413
	cmpq $0xE4A,%r15
	je L_410410
	jmp L_86075
.p2align 0x4
L_410410:
L_87966:
	movq 0x0(%r14),%r15
	movq %r15,0x28(%rbp)
L_87967:
	movq %r13,%r14
	andq $0x3,%r14
	jnz L_86075
L_87968:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	jne L_86075
L_87969:
	movq 0x0(%r13),%r14
	movq %r14,0x30(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x48(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_87970+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_0
.p2align 0x4
L_410413:
L_87962:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r11
	movq $0xECB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r11,0x8(%r14)
	addq $0x18,%r12
L_87963:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_86075
L_87964:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE49,%r15
	jne L_86075
L_87965:
	movq %r14,0x38(%rbp)
	movq 0x8(%r13),%r15
	movq 0x0(%r13),%r14
	movq $0xECB,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	movq %r13,0x30(%rbp)
	addq $0x18,%r12
	leaq L_86749(%rip),%r15
	movq %r15,0x18(%rbp)
	movq %rbp,%r15
	addq $0x20,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x30,%rbp
	leaq (x_265+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_3
.p2align 0x4
L_410419:
	movq %r13,%r15
	xchgq %r11,%r14
	jmp L_87957
.p2align 0x4
L_410421:
L_87921:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_86075
L_87922:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
L_87923:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_410437
L_87938:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE4C,%r15
	jne L_410430
L_87939:
	movq 0x0(%r11),%r15
L_87940:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_86075
L_87941:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_87942:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_86075
L_87943:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4A,%r13
	je L_410425
	cmpq $0xE4C,%r13
	je L_410422
	jmp L_86075
.p2align 0x4
L_410422:
L_87948:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_86075
L_87949:
	cmpq $0x1,0x8(%r11)
	jne L_86075
	xchgq %r13,%r14
	jmp x_261
.p2align 0x4
L_410425:
L_87944:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_86075
L_87945:
	cmpq $0x1,0x8(%r11)
	jne L_86075
L_87946:
	movq %r15,0x28(%rbp)
	movq %r13,0x30(%rbp)
	jmp x_260
.p2align 0x4
L_410430:
	movq %r13,%r15
	xchgq %r11,%r14
L_87925:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_86075
L_87926:
	movq 0x0(%r15),%r13
	cmpq $0x1,0x8(%r15)
	jne L_86075
L_87928:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_86075
L_87929:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xE4A,%r15
	jne L_86075
L_87930:
	movq 0x0(%r14),%r15
	movq %r15,0x28(%rbp)
L_87931:
	movq %r13,%r14
	andq $0x3,%r14
	jnz L_86075
L_87932:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	jne L_86075
L_87933:
	movq 0x0(%r13),%r14
	movq %r14,0x30(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x48(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_87934+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_0
.p2align 0x4
L_410437:
	movq %r13,%r15
	xchgq %r11,%r14
	jmp L_87925
.p2align 0x4
L_410439:
L_87895:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_86075
L_87896:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
L_87897:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_86075
L_87898:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE4C,%r15
	jne L_86075
L_87899:
	movq 0x0(%r11),%r15
	cmpq $0x1,%r13
	je L_410448
L_87900:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_87901:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_410447
L_87904:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4A,%r13
	je L_410444
	cmpq $0xE4C,%r13
	je L_410441
	xchgq %r11,%r14
L_87902:
	cmpq $0x1,%r14
	jne L_86075
L_87903:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_2
.p2align 0x4
L_410441:
L_87909:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_410443
L_87910:
	cmpq $0x1,0x8(%r11)
	jne L_86075
	xchgq %r13,%r14
	jmp x_261
.p2align 0x4
L_410443:
L_87912:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_2
.p2align 0x4
L_410444:
L_87905:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_410446
L_87906:
	cmpq $0x1,0x8(%r11)
	jne L_86075
L_87907:
	movq %r15,0x28(%rbp)
	movq %r13,0x30(%rbp)
	jmp x_260
.p2align 0x4
L_410446:
L_87908:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_2
.p2align 0x4
L_410447:
	xchgq %r11,%r14
	jmp L_87902
.p2align 0x4
L_410448:
L_87913:
	movq %r15,0x30(%rbp)
	leaq L_86749(%rip),%r15
	movq %r15,0x18(%rbp)
	movq %rbp,%r15
	addq $0x20,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0xD8(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_87914+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toWord_0
.p2align 0x4
L_410452:
L_87874:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_86075
L_87875:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
L_87876:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_86075
L_87877:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE4C,%r15
	jne L_86075
L_87878:
	movq 0x0(%r11),%r15
L_87879:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_86075
L_87880:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_87881:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_410460
L_87884:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4A,%r13
	je L_410457
	cmpq $0xE4C,%r13
	je L_410454
	xchgq %r11,%r14
L_87882:
	cmpq $0x1,%r14
	jne L_86075
L_87883:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_2
.p2align 0x4
L_410454:
L_87889:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_410456
L_87890:
	cmpq $0x1,0x8(%r11)
	jne L_86075
	xchgq %r13,%r14
	jmp x_261
.p2align 0x4
L_410456:
L_87892:
	movq (c_stackP+0x0)(%rip),%rsp
	movq %r15,%rsi
	movq %r13,%rdi
	xorq %rax,%rax
	call IntInf_equal
L_87893:
	movl %eax,%r15d
	shlq $0x2,%r15
	orq $0x3,%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_410457:
L_87885:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_410459
L_87886:
	cmpq $0x1,0x8(%r11)
	jne L_86075
L_87887:
	movq %r15,0x28(%rbp)
	movq %r13,0x30(%rbp)
	jmp x_260
.p2align 0x4
L_410459:
L_87888:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_2
.p2align 0x4
L_410460:
	xchgq %r11,%r14
	jmp L_87882
.p2align 0x4
L_410465:
L_87833:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_86075
L_87834:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
L_87835:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_86075
L_87836:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE4C,%r15
	jne L_86075
L_87837:
	movq 0x0(%r11),%r15
L_87838:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_86075
L_87839:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_87840:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_410478
L_87843:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4A,%r13
	je L_410475
	cmpq $0xE4C,%r13
	je L_410467
	xchgq %r11,%r14
L_87841:
	cmpq $0x1,%r14
	jne L_86075
L_87842:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_2
.p2align 0x4
L_410467:
L_87848:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_410469
L_87849:
	cmpq $0x1,0x8(%r11)
	jne L_86075
	xchgq %r13,%r14
	jmp x_261
.p2align 0x4
L_410469:
L_87851:
	movq %r15,%r11
	andq %r13,%r11
	andq $0x1,%r11
	jz L_410472
L_87852:
	cmpq %r13,%r15
	jl L_410471
L_87853:
	cmpq %r15,%r13
	jl L_410470
L_87855:
	movq $0x1,0x28(%rbp)
L_87856:
	movq 0x50(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0xE0(%rbp)
	addq $0xE0,%rbp
	leaq (L_87857+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_410470:
L_87864:
	movq $0x3,0x28(%rbp)
	jmp L_87856
.p2align 0x4
L_410471:
L_87866:
	movq $0xFFFFFFFFFFFFFFFF,0x28(%rbp)
	jmp L_87856
.p2align 0x4
L_410472:
L_87867:
	movq (c_stackP+0x0)(%rip),%rsp
	movq %r13,%rsi
	movq %r15,%rdi
	xorq %rax,%rax
	call IntInf_compare
L_87868:
	cmpl $0x0,%eax
	jl L_87866
L_87869:
	cmpl $0x0,%eax
	jg L_87864
	jmp L_87855
.p2align 0x4
L_410475:
L_87844:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_410477
L_87845:
	cmpq $0x1,0x8(%r11)
	jne L_86075
L_87846:
	movq %r15,0x28(%rbp)
	movq %r13,0x30(%rbp)
	jmp x_260
.p2align 0x4
L_410477:
L_87847:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_2
.p2align 0x4
L_410478:
	xchgq %r11,%r14
	jmp L_87841
.p2align 0x4
L_410483:
L_87799:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_86075
L_87800:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	cmpq $0x1,%r11
	je L_410494
L_87801:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE4C,%r15
	jne L_86075
L_87802:
	movq 0x0(%r11),%r15
L_87803:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_86075
L_87804:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_87805:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_410491
L_87808:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4A,%r13
	je L_410488
	cmpq $0xE4C,%r13
	je L_410485
	xchgq %r11,%r14
L_87806:
	cmpq $0x1,%r14
	jne L_86075
L_87807:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_2
.p2align 0x4
L_410485:
L_87813:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_410487
L_87814:
	cmpq $0x1,0x8(%r11)
	jne L_86075
	xchgq %r13,%r14
	jmp x_261
.p2align 0x4
L_410487:
L_87816:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_2
.p2align 0x4
L_410488:
L_87809:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_410490
L_87810:
	cmpq $0x1,0x8(%r11)
	jne L_86075
L_87811:
	movq %r15,0x28(%rbp)
	movq %r13,0x30(%rbp)
	jmp x_260
.p2align 0x4
L_410490:
L_87812:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_2
.p2align 0x4
L_410491:
	xchgq %r11,%r14
	jmp L_87806
.p2align 0x4
L_410494:
L_87817:
	cmpq $0x1,%r13
	jne L_86075
L_87818:
	movq 0x280(%rbp),%r15
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r11
	movq 0x0(%r11),%r10
	movq 0x8(%r11),%r9
	movq 0x0(%r9),%r8
	cmpq $0x1,%r8
	je L_410495
L_87819:
	movq %r13,0x2A0(%rbp)
	movq 0x0(%r8),%r15
	movq %r15,0x298(%rbp)
	leaq L_86749(%rip),%r15
	movq %r15,0x18(%rbp)
	movq %rbp,%r15
	addq $0x20,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x298,%rbp
	leaq (L_87820+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_410495:
L_87827:
	movq %r10,0x30(%rbp)
	leaq L_86749(%rip),%r15
	movq %r15,0x18(%rbp)
	movq %rbp,%r15
	addq $0x20,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_87828+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_410498:
L_87775:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_86075
L_87776:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
L_87777:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_86075
L_87778:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE4A,%r15
	je L_410509
	cmpq $0xE4C,%r15
	je L_410499
	jmp L_86075
.p2align 0x4
L_410499:
L_87783:
	movq 0x0(%r11),%r15
L_87784:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_86075
L_87785:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_87786:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_410507
L_87789:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4A,%r13
	je L_410504
	cmpq $0xE4C,%r13
	je L_410501
	xchgq %r11,%r14
L_87787:
	cmpq $0x1,%r14
	jne L_86075
L_87788:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_2
.p2align 0x4
L_410501:
L_87794:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_410503
L_87795:
	cmpq $0x1,0x8(%r11)
	jne L_86075
	xchgq %r13,%r14
	jmp x_261
.p2align 0x4
L_410503:
L_87797:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_2
.p2align 0x4
L_410504:
L_87790:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_410506
L_87791:
	cmpq $0x1,0x8(%r11)
	jne L_86075
L_87792:
	movq %r15,0x28(%rbp)
	movq %r13,0x30(%rbp)
	jmp x_260
.p2align 0x4
L_410506:
L_87793:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_2
.p2align 0x4
L_410507:
	xchgq %r11,%r14
	jmp L_87787
.p2align 0x4
L_410509:
L_87779:
	movq 0x0(%r11),%r15
	cmpq $0x1,%r13
	jne L_86075
L_87780:
	cmpq $0x1,0x0(%r15)
	jne L_86075
L_87782:
	movq (globalObjptr+0x1A58)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_410514:
L_88798:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2D0,%rbp
	leaq (L_88799+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_88799
.p2align 0x4
.long 0x1298
L_88799:
	addq $0xFFFFFFFFFFFFFD30,%rbp
	jmp L_86721
.p2align 0x4
L_410515:
L_86716:
	movq (globalObjptr+0x1A48)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_410516:
L_88800:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2D0,%rbp
	leaq (L_88801+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_88801
.p2align 0x4
.long 0x1298
L_88801:
	addq $0xFFFFFFFFFFFFFD30,%rbp
	jmp L_86715
.p2align 0x4
L_410517:
L_88802:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_86724
.p2align 0x4
L_410519:
L_86072:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_86074
L_86706:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2D0,%rbp
	leaq (L_86707+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_86707
.p2align 0x4
.long 0x1268
L_86707:
	addq $0xFFFFFFFFFFFFFD30,%rbp
L_86074:
	movq 0x30(%rbp),%r15
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_86075
L_86076:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x13FD,%r15
	je L_410634
	cmpq $0x13FE,%r15
	je L_410626
L_86077:
	movq 0x0(%r13),%r15
L_86078:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_86075
L_86079:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0x13FC,%r14
	je L_410593
	cmpq $0x13FD,%r14
	je L_410520
	jmp L_86075
.p2align 0x4
L_410520:
L_86175:
	movq 0x0(%r11),%r14
L_86176:
	movq %r14,%r11
	andq $0x3,%r11
	jnz L_86075
L_86177:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r11
	shrq $0x1,%r11
	cmpq $0xE4A,%r11
	je L_410529
	cmpq $0xE4B,%r11
	je L_410525
	cmpq $0xE4C,%r11
	je L_410521
	jmp L_86075
.p2align 0x4
L_410521:
L_86491:
	movq 0x0(%r14),%r11
L_86492:
	movq %r13,%r14
	andq $0x3,%r14
	jnz L_86075
L_86493:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r10
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0x13FC,%r13
	jne L_86075
L_86494:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r14
	jne L_86075
L_86495:
	movq %r13,0x28(%rbp)
	movq %r15,0x30(%rbp)
	movl $0x1,0x10(%rbp)
	movq %r11,%r15
varIntInf_0:
	movq %r15,0x2D0(%rbp)
	leaq L_86554(%rip),%r15
	movq %r15,0x18(%rbp)
	movq %rbp,%r15
	addq $0x20,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x2D0,%rbp
	leaq (L_86496+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_410525:
L_86440:
	movq 0x0(%r14),%r11
	cmpq $0x1,%r13
	jne L_86075
L_86441:
	movq %r11,0x28(%rbp)
	movq %r15,0x30(%rbp)
	movl $0x1,0x10(%rbp)
varReal_0:
	movq 0x138(%rbp),%r15
	movq 0x8(%r15),%r14
	cmpq $0x1,0x0(%r14)
	jne L_86075
L_86443:
	movq 0x28(%rbp),%r15
	movq %r15,%r14
	andq $0x1,%r14
	cmpq $0x1,%r14
	je L_410526
L_86444:
	movsd 0x0(%r15),%xmm15
	movsd %xmm15,0x40(%rbp)
	movq 0x158(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_86445+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1485
.p2align 0x4
L_410526:
L_86490:
	shrq $0x1,%r15
	movl %r15d,%r14d
	movd %r14d,%xmm15
	movss %xmm15,%xmm14
	movss %xmm14,0x40(%rbp)
	movq 0x148(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_86445+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1486
.p2align 0x4
L_410529:
L_86178:
	movq 0x0(%r14),%r11
	cmpq $0x1,%r13
	je L_410535
L_86179:
	cmpq $0x1,0x8(%r13)
	jne L_86075
L_86180:
	cmpq $0x1,0x0(%r11)
	jne L_86075
L_86182:
	movq 0x8(%rbp),%r14
	movq %r14,%r13
	andq $0xFF,%r13
	cmpq $0x1F,%r13
	je L_410532
	cmpq $0x25,%r13
	je L_410531
L_86183:
	andq $0x3,%r14
	jnz L_86075
L_86184:
	jmp L_86075
.p2align 0x4
L_410531:
L_86186:
	movq $0x27F1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r13,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_410532:
L_86185:
	movq $0x27F1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r13,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_410535:
L_86187:
	movq 0x8(%rbp),%r14
	movq %r14,%r13
	andq $0xFF,%r13
	cmpq $0x9,%r13
	je L_410590
	cmpq $0x15,%r13
	je L_410587
L_86188:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_86075
L_86189:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%rax
	shrq $0x1,%rax
	subq $0xEF7,%rax
	cmpq $0x16,%rax
	ja L_86075
	leaq jumpTable_217(%rip),%rbx
	jmp *(%rbx,%rax,8)
.data
.p2align 0x4
jumpTable_217:
.quad L_410584,L_410581,L_410578,L_410573,L_410572,L_410569,L_86075,L_410565,L_410561,L_410559,L_86075,L_86075,L_86075,L_410555,L_410551,L_410547,L_410543,L_86075,L_86075,L_86075,L_410541,L_410539,L_410537
.text
.p2align 0x4
L_410537:
L_86426:
	movq %r15,%r14
	movq %r11,%r15
L_86427:
	cmpq $0x1,0x0(%r15)
	jne L_86075
L_86429:
	movq $0x27F1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_410539:
L_86422:
	movq %r15,%r14
	movq %r11,%r15
L_86423:
	cmpq $0x1,0x0(%r15)
	jne L_86075
L_86425:
	movq $0x27F1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_410541:
L_86409:
	movq %r15,0x28(%rbp)
	movq 0x8(%rbp),%r13
	movq 0x0(%r13),%r14
	movq %r11,%r15
L_86410:
	movq 0x0(%r15),%r13
	movq %r13,0x30(%rbp)
	cmpq $0x1,%r13
	je L_410542
L_86411:
	movq 0x290(%rbp),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x38(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x40(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_86412+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_410542:
L_86421:
	movq %r14,0x28(%rbp)
zero_1:
	movq 0x288(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_86222+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_410543:
L_86406:
	movq 0x8(%rbp),%r10
	movq 0x0(%r10),%r13
	movl $0x1,%ecx
	movq %r11,%r14
shift_0:
	testl %ecx,%ecx
	jz L_410545
L_86408:
	movq %r14,0x28(%rbp)
	movq %r13,0x30(%rbp)
	movq %r15,%r13
L_86229:
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	cmpq $0x1,%r14
	jne L_410544
L_86247:
	movq $0x27F1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r15,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_410544:
L_86230:
	movq 0x50(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0x298(%rbp)
	addq $0x298,%rbp
	leaq (L_86231+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_410545:
L_86407:
	xchgq %r13,%r14
L_86219:
	cmpq $0x1,0x0(%r13)
	jne L_86075
L_86221:
	movq %r14,0x28(%rbp)
	jmp zero_1
.p2align 0x4
L_410547:
L_86366:
	movq %r11,0x28(%rbp)
	movq 0x8(%rbp),%r15
	movl 0x0(%r15),%ebx
	movl $0x1,%ecx
L_86367:
	testl %ecx,%ecx
	jnz L_410549
L_86368:
	movq 0x28(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x2A0(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x38(%rbp)
	movq 0x0(%r15),%r13
	movq 0x18(%r13),%r11
	movq %r11,0x40(%rbp)
	movq 0x10(%r13),%r11
	movq %r11,0x48(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x50(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x58(%rbp)
	testl %ebx,%ebx
	jnz L_410548
L_86369:
	movq %r14,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_86370+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_410548:
L_86382:
	movq %r14,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_86383+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_410549:
L_86386:
	movq 0x28(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x298(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x38(%rbp)
	movq 0x0(%r15),%r13
	movq 0x18(%r13),%r11
	movq %r11,0x40(%rbp)
	movq 0x10(%r13),%r11
	movq %r11,0x48(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x50(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x58(%rbp)
	testl %ebx,%ebx
	jnz L_410550
L_86387:
	movq %r14,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_86388+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_410550:
L_86401:
	movq %r14,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_86402+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_410551:
L_86352:
	movq %r15,0x30(%rbp)
	movq 0x8(%rbp),%r14
	movl 0x0(%r14),%ecx
	movq 0x8(%r14),%r13
	movq %r13,0x28(%rbp)
	movq %r11,%r15
L_86353:
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_410554
L_86354:
	cmpq $0x3,%r14
	je L_410553
L_86355:
	testl %ecx,%ecx
	jz L_86075
L_86357:
	movq %r15,0x40(%rbp)
	movq 0x2A8(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_86358+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toIntInfX_0
.p2align 0x4
L_410553:
L_86364:
	movq $0x27F1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_410554:
L_86365:
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x27F3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_410555:
L_86338:
	movq %r15,0x30(%rbp)
	movq 0x8(%rbp),%r14
	movl 0x0(%r14),%ecx
	movq 0x8(%r14),%r13
	movq %r13,0x28(%rbp)
	movq %r11,%r15
L_86339:
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_410558
L_86340:
	cmpq $0x3,%r14
	je L_410557
L_86341:
	testl %ecx,%ecx
	jz L_86075
L_86343:
	movq %r15,0x40(%rbp)
	movq 0x2A8(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_86344+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toIntInfX_0
.p2align 0x4
L_410557:
L_86350:
	movq $0x27F1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_410558:
L_86351:
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x27F3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_410559:
L_86325:
	movq %r11,0x28(%rbp)
L_86326:
	movq 0x28(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x30(%rbp)
	cmpq $0x1,%r13
	jne L_410560
L_86337:
	movq $0x27F1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_410560:
L_86327:
	movq 0x290(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x28(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_86328+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_410561:
L_86311:
	movq %r15,0x30(%rbp)
	movq 0x8(%rbp),%r14
	movl 0x0(%r14),%ebx
	movq 0x8(%r14),%r13
	movq %r13,0x28(%rbp)
	movl $0x1,%ecx
	movq %r11,%r15
L_86312:
	testl %ecx,%ecx
	jz L_86075
L_86314:
	cmpq $0x3,0x0(%r15)
	je L_410563
L_86315:
	testl %ebx,%ebx
	jz L_86075
L_86317:
	movq %r15,0x40(%rbp)
	movq 0x2A8(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_86318+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toIntInfX_0
.p2align 0x4
L_410563:
L_86324:
	movq $0x27F1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_410565:
L_86299:
	movq 0x8(%rbp),%r14
	movl 0x0(%r14),%ebx
	movq 0x8(%r14),%r13
	movq %r13,0x28(%rbp)
	movl $0x1,%ecx
	movq %r11,%r15
L_86300:
	testl %ecx,%ecx
	jz L_86075
L_86302:
	cmpq $0x3,0x0(%r15)
	je zero_1
L_86303:
	testl %ebx,%ebx
	jz L_86075
L_86305:
	movq %r15,0x298(%rbp)
	movq 0x2A8(%rbp),%r15
	movq %r15,0x2A0(%rbp)
	addq $0x298,%rbp
	leaq (L_86306+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toIntInfX_0
.p2align 0x4
L_410569:
L_86298:
	movq %r11,0x28(%rbp)
	movq %r15,0x30(%rbp)
	movq 0x8(%rbp),%r14
	movq 0x0(%r14),%r15
	movl $0x1,%ecx
ro_0:
	testl %ecx,%ecx
	jz L_410570
L_86278:
	movq %r15,0x1A0(%rbp)
	addq $0x1A0,%rbp
	leaq (L_86279+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_410570:
L_86265:
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	cmpq $0x1,%r14
	je L_410571
L_86266:
	movq 0x290(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x38(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x40(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_86267+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_410571:
L_86274:
	movq $0x1C95,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x27F3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_410572:
L_86264:
	movq %r11,0x28(%rbp)
	movq %r15,0x30(%rbp)
	movq 0x8(%rbp),%r14
	movq 0x0(%r14),%r15
	movl $0x1,%ecx
	jmp ro_0
.p2align 0x4
L_410573:
L_86215:
	movq %r11,0x30(%rbp)
	movq 0x8(%rbp),%r13
	movl 0x0(%r13),%ecx
	movq 0x8(%r13),%r11
	movl $0x1,0x28(%rbp)
	movq %r15,%r14
	movq %r11,%r15
L_86216:
	testl %ecx,%ecx
	jnz L_410575
L_86217:
	movl 0x28(%rbp),%r11d
	testl %r11d,%r11d
	jz L_410574
L_86228:
	movq 0x30(%rbp),%r13
	movq %r13,0x28(%rbp)
	movq %r15,0x30(%rbp)
	movq %r14,%r13
	jmp L_86229
.p2align 0x4
L_410574:
L_86218:
	movq 0x30(%rbp),%r13
	movq %r15,%r14
	jmp L_86219
.p2align 0x4
L_410575:
L_86248:
	movq 0x30(%rbp),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x38(%rbp)
	cmpq $0x1,%r11
	jne L_410577
L_86261:
	movl 0x28(%rbp),%r13d
	testl %r13d,%r13d
	jnz L_410576
L_86262:
	movq %r15,0x28(%rbp)
	jmp zero_1
.p2align 0x4
L_410576:
L_86263:
	movq $0x27F1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_410577:
L_86249:
	movq 0x290(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x30(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_86250+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_410578:
L_86209:
	movq 0x8(%rbp),%r10
	movq 0x0(%r10),%r13
	movl $0x1,%ecx
	movq %r11,%r14
L_86210:
	cmpq $0x1,0x0(%r14)
	jne L_86075
L_86212:
	testl %ecx,%ecx
	jnz L_410579
L_86213:
	movq $0x1E07,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	addq $0x10,%r12
	movq $0x27F7,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x18,%r12
	movq $0x1,0x8(%r13)
	movq $0x27F5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	movq %r15,0x0(%rbp)
	addq $0x18,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_410579:
L_86214:
	movq $0x27F1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_410581:
L_86203:
	movq 0x8(%rbp),%r10
	movq 0x8(%r10),%r13
	movl $0x1,%ecx
	movq %r11,%r14
L_86204:
	cmpq $0x1,0x0(%r14)
	jne L_86075
L_86206:
	testl %ecx,%ecx
	jnz L_410582
L_86207:
	movq $0x1E05,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	addq $0x10,%r12
	movq $0x27F7,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x18,%r12
	movq $0x1,0x8(%r13)
	movq $0x27F5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	movq %r15,0x0(%rbp)
	addq $0x18,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_410582:
L_86208:
	movq $0x27F1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_410584:
L_86190:
	movq %r15,0x30(%rbp)
	movq 0x8(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x28(%rbp)
	movq %r11,%r15
L_86191:
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	cmpq $0x1,%r14
	je L_410585
L_86192:
	movq 0x290(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x40(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x48(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_86193+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_410585:
L_86202:
	movq $0x27F1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_410587:
L_86434:
	movl $0x1,%ecx
	xchgq %r15,%r14
	xchgq %r11,%r15
L_86435:
	cmpq $0x1,0x0(%r15)
	jne L_86075
L_86437:
	testl %ecx,%ecx
	jz L_86075
L_86439:
	movq $0x27F1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_410590:
L_86430:
	xchgq %r15,%r14
	xchgq %r11,%r15
L_86431:
	cmpq $0x1,0x0(%r15)
	jne L_86075
L_86433:
	movq $0x27F1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_410593:
L_86080:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_410603
L_86081:
	cmpq $0x1,0x8(%r13)
	jne L_86075
L_86082:
	movq 0x0(%r15),%r13
	movq 0x0(%r14),%r11
	movq 0x10(%r11),%r10
	cmpq %r10,0x10(%r13)
	jne L_86075
L_86084:
	movq 0x8(%rbp),%r14
	movq %r14,%r13
	andq $0xFF,%r13
	cmpq $0x1E,%r13
	je L_410600
	cmpq $0x2A,%r13
	je L_410599
	cmpq $0x2B,%r13
	je L_410598
	cmpq $0x2D,%r13
	je L_86098
	cmpq $0x2E,%r13
	je L_86098
	cmpq $0x33,%r13
	je L_410595
L_86085:
	andq $0x3,%r14
	jnz L_86075
L_86086:
	jmp L_86075
.p2align 0x4
L_410595:
L_86098:
	xorl %ecx,%ecx
x_259:
	movslq %ecx,%r15
	shlq $0x1,%r15
	orq $0x1,%r15
	movq %r15,0x28(%rbp)
	movq %r15,0x38(%rbp)
	movq 0x2C0(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_86091+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1473
.p2align 0x4
L_410598:
L_86090:
	movl $0x1,%ecx
	jmp x_259
.p2align 0x4
L_410599:
L_86088:
	movq $0x27F1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r13,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_410600:
L_86087:
	movq $0x27F1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r13,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_410603:
L_86101:
	movq 0x0(%r15),%r13
	movq 0x0(%r14),%r11
	movq 0x10(%r11),%r10
	cmpq %r10,0x10(%r13)
	jne L_86075
L_86103:
	movq 0x8(%rbp),%r14
	movq %r14,%r13
	andq $0xFF,%r13
	cmpq $0xA,%r13
	je L_410622
	cmpq $0xB,%r13
	je L_86145
	cmpq $0x11,%r13
	je L_86143
	cmpq $0x21,%r13
	je L_410619
	cmpq $0x22,%r13
	je L_86145
	cmpq $0x39,%r13
	je L_86145
	cmpq $0x3A,%r13
	je L_86145
	cmpq $0x7E,%r13
	je L_86143
	cmpq $0x85,%r13
	je L_86145
L_86104:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_86075
L_86105:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xEF7,%r13
	je L_410612
	cmpq $0xEF8,%r13
	je L_410611
	cmpq $0xEF9,%r13
	je L_410610
	cmpq $0xEFE,%r13
	je L_410609
	cmpq $0xEFF,%r13
	je L_410608
	cmpq $0xF00,%r13
	je L_410607
	cmpq $0xF06,%r13
	je L_410606
	cmpq $0xF09,%r13
	je L_410605
	cmpq $0xF0B,%r13
	je L_410604
	jmp L_86075
.p2align 0x4
L_410604:
L_86146:
	movq $0x27F1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_410605:
L_86145:
	movq (globalWord64+0x198)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_410606:
L_86143:
	movq (globalWord64+0x188)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_410607:
L_86141:
	movq $0x27F1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_410608:
L_86134:
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x1B0(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x28(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x30(%rbp)
	movq %r14,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_86135+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_410609:
L_86127:
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x288(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x28(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x30(%rbp)
	movq %r14,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_86128+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_410610:
L_86120:
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x288(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x28(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x30(%rbp)
	movq %r14,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_86121+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_410611:
L_86113:
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x288(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x28(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x30(%rbp)
	movq %r14,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_86114+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_410612:
L_86106:
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x288(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x28(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x30(%rbp)
	movq %r14,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_86107+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_410619:
L_86163:
	movq 0x288(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x28(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x30(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0xE0(%rbp)
	addq $0xE0,%rbp
	leaq (L_86164+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_410622:
L_86147:
	movq 0x2B0(%rbp),%r15
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r11
	movq 0x0(%r11),%r10
	movq 0x8(%r11),%r9
	movq 0x0(%r9),%r8
	cmpq $0x1,%r8
	je L_410623
L_86148:
	movq %r13,0x2A0(%rbp)
	movq 0x0(%r8),%r15
	movq %r15,0x298(%rbp)
	addq $0x298,%rbp
	leaq (L_86149+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_410623:
L_86156:
	movq %r10,0x30(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_86157+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_410626:
L_86694:
	movq 0x0(%r13),%r15
L_86695:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_86075
L_86696:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0x13FE,%r14
	jne L_86075
L_86697:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	jne L_86075
L_86698:
	movq 0x8(%rbp),%r13
	movq %r13,%r11
	andq $0xFF,%r11
	cmpq $0x39,%r11
	je L_86702
	cmpq $0x3A,%r11
	je L_410628
L_86699:
	andq $0x3,%r13
	jnz L_86075
L_86700:
	jmp L_86075
.p2align 0x4
L_410628:
L_86702:
	movq 0x10(%r15),%r13
	cmpq %r13,0x10(%r14)
	je L_86145
	jmp L_86143
.p2align 0x4
L_410634:
L_86559:
	movq 0x0(%r13),%r15
L_86560:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_86075
L_86561:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0xE4A,%r13
	je L_410651
	cmpq $0xE4B,%r13
	je L_410647
	cmpq $0xE4C,%r13
	je L_410635
	jmp L_86075
.p2align 0x4
L_410635:
L_86592:
	movq 0x0(%r15),%r13
	movq %r13,0x28(%rbp)
L_86593:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_86075
L_86594:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r14
	shrq $0x1,%r14
	cmpq $0x13FC,%r14
	je L_410643
	cmpq $0x13FD,%r14
	je L_410637
L_86595:
	cmpq $0x1,%r15
	jne L_86075
intInfUnary_1:
	movq 0x28(%rbp),%r15
	movq %r15,0x2D0(%rbp)
	movq 0x2C0(%rbp),%r15
	movq %r15,0x2D8(%rbp)
	addq $0x2D0,%rbp
	leaq (L_86597+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1473
.p2align 0x4
L_410637:
L_86631:
	movq 0x0(%r13),%r11
L_86632:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_410642
L_86635:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	je L_410640
	cmpq $0xE4C,%r14
	je L_410638
	movq %r15,%r14
L_86633:
	cmpq $0x1,%r14
	je intInfUnary_1
	jmp L_86075
.p2align 0x4
L_410638:
L_86690:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r15
	je intInfUnary_1
L_86691:
	cmpq $0x1,0x8(%r15)
	jne L_86075
L_86692:
	movq %r14,0x0(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x2C0(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp intInfBinary_12
.p2align 0x4
L_410640:
L_86636:
	movq 0x0(%r11),%r14
	movq %r14,0x30(%rbp)
	cmpq $0x1,%r15
	je intInfUnary_1
L_86637:
	cmpq $0x1,0x8(%r15)
	jne L_86075
L_86638:
	movq 0x28(%rbp),%r15
	movq %r15,0x2D0(%rbp)
	movq 0x2C0(%rbp),%r15
	movq %r15,0x2D8(%rbp)
	addq $0x2D0,%rbp
	leaq (L_86639+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1473
.p2align 0x4
L_410642:
	movq %r15,%r14
	jmp L_86633
.p2align 0x4
L_410643:
L_86626:
	movq 0x0(%r13),%r14
	cmpq $0x1,%r15
	je intInfUnary_1
L_86627:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0x13FC,%r15
	jne L_86075
L_86628:
	movq 0x0(%r11),%r15
	cmpq $0x1,%r13
	jne L_86075
L_86629:
	movq %r14,0x30(%rbp)
	movl $0x0,0x10(%rbp)
	movq 0x28(%rbp),%r14
	movq %r15,0x28(%rbp)
	movq %r14,%r15
	jmp varIntInf_0
.p2align 0x4
L_410647:
L_86587:
	movq 0x0(%r15),%r13
L_86588:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_86075
L_86589:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r11
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0x13FC,%r14
	jne L_86075
L_86590:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r15
	jne L_86075
L_86591:
	movq %r13,0x28(%rbp)
	movq %r14,0x30(%rbp)
	movl $0x0,0x10(%rbp)
	jmp varReal_0
.p2align 0x4
L_410651:
L_86562:
	movq 0x0(%r15),%r13
L_86563:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_86075
L_86564:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r11
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0x13FC,%r14
	jne L_86075
L_86565:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r15
	jne L_86075
L_86566:
	movq 0x8(%rbp),%r15
	movq %r15,%r11
	andq $0xFF,%r11
	cmpq $0x9,%r11
	je L_410672
	cmpq $0x15,%r11
	je L_410671
L_86567:
	movq %r15,%r11
	andq $0x3,%r11
	jnz L_86075
L_86568:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%rax
	shrq $0x1,%rax
	subq $0xEF7,%rax
	cmpq $0x16,%rax
	ja L_86075
	leaq jumpTable_218(%rip),%rbx
	jmp *(%rbx,%rax,8)
.data
.p2align 0x4
jumpTable_218:
.quad L_410669,L_410668,L_410667,L_410666,L_410665,L_410664,L_86075,L_410662,L_410661,L_410660,L_86075,L_86075,L_86075,L_410659,L_410658,L_410657,L_410656,L_86075,L_86075,L_86075,L_410655,L_410654,L_410653
.text
.p2align 0x4
L_410653:
L_86584:
	movq %r13,%r15
	jmp L_86427
.p2align 0x4
L_410654:
L_86583:
	movq %r13,%r15
	jmp L_86423
.p2align 0x4
L_410655:
L_86582:
	movq %r14,0x28(%rbp)
	movq 0x8(%rbp),%r11
	movq 0x0(%r11),%r14
	movq %r13,%r15
	jmp L_86410
.p2align 0x4
L_410656:
L_86581:
	movq 0x8(%rbp),%r11
	movq 0x0(%r11),%r10
	xorl %ecx,%ecx
	movq %r14,%r15
	movq %r13,%r14
	movq %r10,%r13
	jmp shift_0
.p2align 0x4
L_410657:
L_86580:
	movq %r13,0x28(%rbp)
	movq 0x8(%rbp),%r15
	movl 0x0(%r15),%ebx
	xorl %ecx,%ecx
	jmp L_86367
.p2align 0x4
L_410658:
L_86579:
	movq %r14,0x30(%rbp)
	movq 0x8(%rbp),%r14
	movl 0x0(%r14),%ecx
	movq 0x8(%r14),%r11
	movq %r11,0x28(%rbp)
	movq %r13,%r15
	jmp L_86353
.p2align 0x4
L_410659:
L_86578:
	movq %r14,0x30(%rbp)
	movq 0x8(%rbp),%r14
	movl 0x0(%r14),%ecx
	movq 0x8(%r14),%r11
	movq %r11,0x28(%rbp)
	movq %r13,%r15
	jmp L_86339
.p2align 0x4
L_410660:
L_86577:
	movq %r13,0x28(%rbp)
	movq %r14,%r15
	jmp L_86326
.p2align 0x4
L_410661:
L_86576:
	movq %r14,0x30(%rbp)
	movq 0x8(%rbp),%r14
	movl 0x0(%r14),%ebx
	movq 0x8(%r14),%r11
	movq %r11,0x28(%rbp)
	xorl %ecx,%ecx
	movq %r13,%r15
	jmp L_86312
.p2align 0x4
L_410662:
L_86575:
	movq 0x8(%rbp),%r14
	movl 0x0(%r14),%ebx
	movq 0x8(%r14),%r11
	movq %r11,0x28(%rbp)
	xorl %ecx,%ecx
	movq %r13,%r15
	jmp L_86300
.p2align 0x4
L_410664:
L_86574:
	movq %r13,0x28(%rbp)
	movq %r14,0x30(%rbp)
	movq 0x8(%rbp),%r14
	movq 0x0(%r14),%r15
	xorl %ecx,%ecx
	jmp ro_0
.p2align 0x4
L_410665:
L_86573:
	movq %r13,0x28(%rbp)
	movq %r14,0x30(%rbp)
	movq 0x8(%rbp),%r14
	movq 0x0(%r14),%r15
	xorl %ecx,%ecx
	jmp ro_0
.p2align 0x4
L_410666:
L_86572:
	movq %r13,0x30(%rbp)
	movq 0x8(%rbp),%r13
	movl 0x0(%r13),%ecx
	movq 0x8(%r13),%r15
	movl $0x0,0x28(%rbp)
	jmp L_86216
.p2align 0x4
L_410667:
L_86571:
	movq 0x8(%rbp),%r11
	movq 0x0(%r11),%r10
	xorl %ecx,%ecx
	movq %r14,%r15
	movq %r13,%r14
	movq %r10,%r13
	jmp L_86210
.p2align 0x4
L_410668:
L_86570:
	movq 0x8(%rbp),%r11
	movq 0x8(%r11),%r10
	xorl %ecx,%ecx
	movq %r14,%r15
	movq %r13,%r14
	movq %r10,%r13
	jmp L_86204
.p2align 0x4
L_410669:
L_86569:
	movq %r14,0x30(%rbp)
	movq 0x8(%rbp),%r14
	movq 0x0(%r14),%r11
	movq %r11,0x28(%rbp)
	movq %r13,%r15
	jmp L_86191
.p2align 0x4
L_410671:
L_86586:
	xorl %ecx,%ecx
	xchgq %r13,%r15
	jmp L_86435
.p2align 0x4
L_410672:
L_86585:
	xchgq %r13,%r15
	jmp L_86431
.p2align 0x4
.long 0x1269
L_86737:
	addq $0xFFFFFFFFFFFFFD30,%rbp
	movl 0x2D0(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	testl %r15d,%r15d
	jnz L_86075
L_86738:
	movq 0x8(%rbp),%r15
	movq %r15,%r14
	andq $0xFF,%r14
	cmpq $0x27,%r14
	je L_410687
	cmpq $0x29,%r14
	je L_410682
L_86739:
	andq $0x3,%r15
	jnz L_86075
L_86740:
	jmp L_86075
.p2align 0x4
L_410682:
L_86758:
	movq 0x10(%rbp),%r14
	movq %r14,%r13
	andq $0x1,%r13
	jz L_410683
L_86759:
	notq %r14
	orq $0x1,%r14
	movq %r14,0x28(%rbp)
intInf_1:
	movq 0x28(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x2C0(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_86760+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1473
.p2align 0x4
L_410683:
L_86766:
	movq 0xFFFFFFFFFFFFFFF0(%r14),%rsi
	decq %rsi
	jo L_86755
L_86767:
	movq 0xA0(%rbp),%r14
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r11
	imulq %r11,%rsi
	addq $0x7,%r13
	addq %r11,%r13
	addq %r13,%rsi
	movq %rsi,%r14
	movq %rsi,0x28(%rbp)
	addq $0x0,%r14
	jc L_86619
L_86768:
	movq (gcState+0x458)(%rip),%r13
	subq %r12,%r13
	cmpq %r14,%r13
	jnb L_86769
L_86771:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r13d
	movl %r13d,%edx
	movq %r14,%rsi
	leaq gcState(%rip),%r14
	movq %r14,%rdi
	xorq %rax,%rax
	addq $0x2D0,%rbp
	leaq (L_86772+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_86772
.p2align 0x4
.long 0x126A
L_86772:
	addq $0xFFFFFFFFFFFFFD30,%rbp
L_86769:
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0x28(%rbp),%rsi
	movq 0x10(%rbp),%rdi
	xorq %rax,%rax
	movq %r12,(gcState+0x0)(%rip)
	call IntInf_notb
L_86770:
	movq %rax,0x28(%rbp)
	movq (gcState+0x0)(%rip),%r12
	jmp intInf_1
.p2align 0x4
L_410687:
L_86741:
	leaq L_86749(%rip),%r14
	movq %r14,0x18(%rbp)
	movq %rbp,%r14
	addq $0x20,%r14
	subq (gcState+0x560)(%rip),%r14
	movq %r14,(gcState+0x20)(%rip)
	movq 0x10(%rbp),%r14
	movq %r14,0x2D0(%rbp)
	movq 0x38(%rbp),%r14
	movq %r14,0x2D8(%rbp)
	addq $0x2D0,%rbp
	leaq (L_86742+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigNeg_0
.p2align 0x4
.long 0x920
L_86832:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x20(%rbp),%r14
	movq %r14,(gcState+0x20)(%rip)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x48A
L_86749:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	cmpq $0x1,%r15
	je L_86075
	cmpq $0x3,%r15
	je L_86755
	cmpq $0x6,%r15
	je L_86075
	cmpq $0x7,%r15
	je L_86075
L_86750:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_86751
L_86752:
L_86751:
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x125E
L_86778:
	addq $0xFFFFFFFFFFFFFD30,%rbp
	movl 0x2D0(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	testl %r15d,%r15d
	jnz L_86075
L_86779:
	movq 0x8(%rbp),%r15
	movq %r15,%r14
	andq $0xFF,%r14
	cmpq $0x1F,%r14
	je L_410697
	cmpq $0x25,%r14
	je L_410696
	cmpq $0x2F,%r14
	je L_410695
L_86780:
	andq $0x3,%r15
	jnz L_86075
L_86781:
	jmp L_86075
.p2align 0x4
L_410695:
L_86809:
	movq 0x30(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0xC8(%rbp)
	leaq L_86749(%rip),%r14
	movq %r14,0x18(%rbp)
	movq %rbp,%r14
	addq $0x20,%r14
	subq (gcState+0x560)(%rip),%r14
	movq %r14,(gcState+0x20)(%rip)
	addq $0xC8,%rbp
	leaq (L_86810+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_410696:
L_86791:
	movq 0x50(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x38(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x40(%rbp)
	movq 0xC0(%rbp),%r14
	movq %r14,0x2D0(%rbp)
	addq $0x2D0,%rbp
	leaq (L_86792+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_410697:
L_86782:
	movq 0x30(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x2D0(%rbp)
	addq $0x2D0,%rbp
	leaq (L_86783+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x920
L_87752:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_87753
L_87756:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_87757+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_87757
.p2align 0x4
.long 0x504
L_87757:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_87753:
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_86075
L_87754:
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq $0x27F3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xBAD
L_87711:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movl 0x58(%rbp),%r15d
	movl %r15d,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_87712
L_87725:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_87726+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_87726
.p2align 0x4
.long 0x128F
L_87726:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_87712:
	movl 0x50(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_410701
L_87713:
	leaq L_86749(%rip),%r15
	movq %r15,0x18(%rbp)
	movq %rbp,%r15
	addq $0x20,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x18F8)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (bug_243+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_410701:
L_87717:
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x30(%rbp),%r15
	movq 0x0(%r15),%r13
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r15,0x58(%rbp)
	addq $0x18,%r12
	leaq L_86749(%rip),%r15
	movq %r15,0x18(%rbp)
	movq %rbp,%r15
	addq $0x20,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x40(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_87718+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1183
.p2align 0x4
.long 0x126B
L_87677:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x38(%rbp)
	movl 0x28(%rbp),%ecx
	movq %r15,0x28(%rbp)
wordOrOverflow_0:
	movl %ecx,0x60(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x60,%rbp
	leaq (L_86880+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp isInRange_0
.p2align 0x4
.long 0x128C
L_87679:
	addq $0xFFFFFFFFFFFFFE90,%rbp
	movq 0x170(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x160(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_87680+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toIntInfX_0
.p2align 0x4
.long 0x920
word_18:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_87645
L_87646:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_87647+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_87647
.p2align 0x4
.long 0x488
L_87647:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_87645:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x27F3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	addq $0x10,%r12
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x920
realOpt_0:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_87612
L_87615:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_87616+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_87616
.p2align 0x4
.long 0x504
L_87616:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_87612:
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_86075
L_87613:
	movq 0x0(%r15),%r14
	movq $0x1C97,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x27F3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x5F1
L_87581:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movl 0x40(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	testl %r15d,%r15d
	jnz L_410706
L_87582:
	xorl %ecx,%ecx
x_263:
	movl %ecx,%r15d
	shlq $0x2,%r15
	orq $0x3,%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_410706:
L_87583:
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0x30(%rbp),%r15
	movq 0x0(%r15),%rsi
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%rdi
	xorq %rax,%rax
	call IntInf_equal
L_87584:
	movl %eax,%ecx
	jmp x_263
.p2align 0x4
.long 0xDDE
L_87545:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movl 0x50(%rbp),%r15d
	movl %r15d,0x48(%rbp)
	leaq L_86749(%rip),%r14
	movq %r14,0x18(%rbp)
	movq %rbp,%r14
	addq $0x20,%r14
	subq (gcState+0x560)(%rip),%r14
	movq %r14,(gcState+0x20)(%rip)
	movl %r15d,0x50(%rbp)
	movq $0x3,0x58(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x50,%rbp
	leaq (L_87546+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x5F1
L_87551:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x30(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_87552+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x920
word_16:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_87519
L_87520:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_87521+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_87521
.p2align 0x4
.long 0x488
L_87521:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_87519:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x27F3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	addq $0x10,%r12
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x920
x_262:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movl 0x30(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	movl %r15d,%r14d
	shlq $0x2,%r14
	orq $0x3,%r14
	movq %r14,0x0(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x76B
L_87444:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movl 0x68(%rbp),%r15d
	movl %r15d,0x2C(%rbp)
	testl %r15d,%r15d
	jnz L_410708
L_87445:
	leaq L_86749(%rip),%r15
	movq %r15,0x18(%rbp)
	movq %rbp,%r15
	addq $0x20,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x1968)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (bug_242+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_410708:
L_87449:
	movl 0x28(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_410709
L_87450:
	movq 0x30(%rbp),%r14
	movq 0x0(%r14),%r15
L_87451:
	movq 0x38(%rbp),%r13
	movq 0x0(%r13),%r11
	movq %r15,%r14
	movq %r11,%r15
L_87452:
	movq %r15,0x68(%rbp)
	movq %r14,0x70(%rbp)
	leaq L_86749(%rip),%r15
	movq %r15,0x18(%rbp)
	movq %rbp,%r15
	addq $0x20,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x48(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x68,%rbp
	leaq (L_87453+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1182
.p2align 0x4
L_410709:
L_87460:
	leaq L_86749(%rip),%r15
	movq %r15,0x18(%rbp)
	movq %rbp,%r15
	addq $0x20,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x30(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_87461+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toIntInfX_0
.p2align 0x4
.long 0x126B
L_87413:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x38(%rbp)
	movl 0x28(%rbp),%ecx
	movq %r15,0x28(%rbp)
	jmp wordOrOverflow_0
.p2align 0x4
.long 0x1284
L_87415:
	addq $0xFFFFFFFFFFFFFE90,%rbp
	movq 0x170(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0xA0(%rbp)
	movq 0x160(%rbp),%r15
	movq %r15,0xA8(%rbp)
	addq $0xA0,%rbp
	leaq (L_87416+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toIntInfX_0
.p2align 0x4
.long 0x7C5
L_87376:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq %r15,0x60(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_87377+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigNeg_0
.p2align 0x4
.long 0x1282
L_87352:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq %r15,0x60(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_87353+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigNeg_0
.p2align 0x4
.long 0x1280
L_87317:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movl 0x60(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	leaq L_86749(%rip),%r14
	movq %r14,0x18(%rbp)
	movq %rbp,%r14
	addq $0x20,%r14
	subq (gcState+0x560)(%rip),%r14
	movq %r14,(gcState+0x20)(%rip)
	movl %r15d,0x60(%rbp)
	movq $0x3,0x68(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x60,%rbp
	leaq (L_87318+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x920
word_15:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_87290
L_87291:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_87292+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_87292
.p2align 0x4
.long 0x488
L_87292:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_87290:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x27F3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	addq $0x10,%r12
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x127A
L_87242:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movl 0x70(%rbp),%r15d
	movl %r15d,0x2C(%rbp)
	testl %r15d,%r15d
	jnz L_410711
L_87243:
	leaq L_86749(%rip),%r15
	movq %r15,0x18(%rbp)
	movq %rbp,%r15
	addq $0x20,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x1978)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (bug_241+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_410711:
L_87247:
	movl 0x28(%rbp),%r13d
	testl %r13d,%r13d
	jnz L_410712
L_87248:
	movq 0x30(%rbp),%r13
	movq 0x0(%r13),%r14
	movq 0x40(%rbp),%r15
L_87249:
	movq %r15,0x70(%rbp)
	movq %r14,0x78(%rbp)
	leaq L_86749(%rip),%r15
	movq %r15,0x18(%rbp)
	movq %rbp,%r15
	addq $0x20,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x50(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x70,%rbp
	leaq (L_87250+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigQuot_0
.p2align 0x4
L_410712:
L_87257:
	leaq L_86749(%rip),%r15
	movq %r15,0x18(%rbp)
	movq %rbp,%r15
	addq $0x20,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x30(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_87258+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toIntInfX_0
.p2align 0x4
.long 0x127A
L_87193:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movl 0x70(%rbp),%r15d
	movl %r15d,0x2C(%rbp)
	testl %r15d,%r15d
	jnz L_410713
L_87194:
	leaq L_86749(%rip),%r15
	movq %r15,0x18(%rbp)
	movq %rbp,%r15
	addq $0x20,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x1988)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (bug_240+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_410713:
L_87198:
	movl 0x28(%rbp),%r13d
	testl %r13d,%r13d
	jnz L_410714
L_87199:
	movq 0x30(%rbp),%r13
	movq 0x0(%r13),%r14
	movq 0x40(%rbp),%r15
L_87200:
	movq %r15,0x70(%rbp)
	movq %r14,0x78(%rbp)
	leaq L_86749(%rip),%r15
	movq %r15,0x18(%rbp)
	movq %rbp,%r15
	addq $0x20,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x50(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x70,%rbp
	leaq (L_87201+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigRem_0
.p2align 0x4
L_410714:
L_87208:
	leaq L_86749(%rip),%r15
	movq %r15,0x18(%rbp)
	movq %rbp,%r15
	addq $0x20,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x30(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_87209+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toIntInfX_0
.p2align 0x4
.long 0x1272
L_87077:
	addq $0xFFFFFFFFFFFFFE70,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x190(%rbp)
	movq 0x178(%rbp),%r15
	movq %r15,0x198(%rbp)
	addq $0x190,%rbp
	leaq (L_87078+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromIntInf_0
.p2align 0x4
.long 0x48A
L_87096:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_87097+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call IEEEReal_getRoundingMode
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_87097
.p2align 0x4
.long 0x475
L_87097:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	testl %eax,%eax
	jz L_410719
L_87098:
	cmpl $0x1,%eax
	je L_410718
L_87099:
	cmpl $0x2,%eax
	je L_410717
L_87100:
	cmpl $0x3,%eax
	jne L_87074
L_87102:
	xorb %dl,%dl
L_87103:
	cmpb 0x30(%rbp),%dl
	je L_86075
L_87104:
	leaq L_86749(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x30,%rbp
	leaq (L_87105+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp setRoundingMode_0
.p2align 0x4
L_410717:
L_87107:
	movb $0x1,%dl
	jmp L_87103
.p2align 0x4
L_410718:
L_87108:
	movb $0x2,%dl
	jmp L_87103
.p2align 0x4
L_410719:
L_87109:
	movb $0x3,%dl
	jmp L_87103
.p2align 0x4
.long 0x1276
L_87124:
	addq $0xFFFFFFFFFFFFFE80,%rbp
	leaq L_87157(%rip),%r15
	movq %r15,0x18(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x180(%rbp)
	movq 0x168(%rbp),%r15
	movq %r15,0x188(%rbp)
	addq $0x180,%rbp
	leaq (L_87125+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromIntInf_1
.p2align 0x4
.long 0x48A
L_87143:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_87144:
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_87145+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call IEEEReal_getRoundingMode
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_87145
.p2align 0x4
.long 0x475
L_87145:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	testl %eax,%eax
	jz L_410724
L_87146:
	cmpl $0x1,%eax
	je L_410723
L_87147:
	cmpl $0x2,%eax
	je L_410722
L_87148:
	cmpl $0x3,%eax
	jne L_87074
L_87150:
	xorb %dl,%dl
L_87151:
	cmpb 0x30(%rbp),%dl
	je L_86075
L_87152:
	leaq L_86749(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x30,%rbp
	leaq (L_87105+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp setRoundingMode_0
.p2align 0x4
L_410722:
L_87154:
	movb $0x1,%dl
	jmp L_87151
.p2align 0x4
L_410723:
L_87155:
	movb $0x2,%dl
	jmp L_87151
.p2align 0x4
L_410724:
L_87156:
	movb $0x3,%dl
	jmp L_87151
.p2align 0x4
.long 0x1279
L_87162:
	addq $0xFFFFFFFFFFFFFE70,%rbp
	movq 0x190(%rbp),%r15
	movq %r15,0x30(%rbp)
	movb 0x28(%rbp),%r14b
	testb %r14b,%r14b
	jnz L_410725
L_87163:
	movq %r15,0x28(%rbp)
	jmp L_87066
.p2align 0x4
L_410725:
L_87164:
	movq %r15,0x28(%rbp)
	jmp L_87114
.p2align 0x4
.long 0x126E
L_87029:
	addq $0xFFFFFFFFFFFFFE50,%rbp
	movq 0x1B0(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq %r15,0x1B0(%rbp)
	addq $0x1B0,%rbp
	leaq (L_87030+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x126E
L_86989:
	addq $0xFFFFFFFFFFFFFE50,%rbp
	movq 0x1B0(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq %r15,0x1B0(%rbp)
	addq $0x1B0,%rbp
	leaq (L_86990+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x920
word_14:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_86959
L_86960:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_86961+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_86961
.p2align 0x4
.long 0x488
L_86961:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_86959:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x27F3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	addq $0x10,%r12
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xBAD
L_86919:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movl 0x58(%rbp),%r15d
	movl %r15d,0x50(%rbp)
	testl %r15d,%r15d
	jnz L_410727
L_86920:
	leaq L_86749(%rip),%r15
	movq %r15,0x18(%rbp)
	movq %rbp,%r15
	addq $0x20,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x1908)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (bug_239+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_410727:
L_86924:
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x30(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x58(%rbp)
	leaq L_86749(%rip),%r15
	movq %r15,0x18(%rbp)
	movq %rbp,%r15
	addq $0x20,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x40(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x58,%rbp
	leaq (L_86925+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x126B
L_86879:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x38(%rbp)
	movl 0x28(%rbp),%ecx
	movq %r15,0x28(%rbp)
	jmp wordOrOverflow_0
.p2align 0x4
.long 0x126C
L_86890:
	addq $0xFFFFFFFFFFFFFE90,%rbp
	movq 0x170(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq 0x160(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x90,%rbp
	leaq (L_86891+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toIntInfX_0
.p2align 0x4
.long 0x920
word_13:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_86847
L_86848:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_86849+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_86849
.p2align 0x4
.long 0x488
L_86849:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_86847:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x27F3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	addq $0x10,%r12
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x920
realOpt_17:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_88778
L_88781:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_88782+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_88782
.p2align 0x4
.long 0x504
L_88782:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_88778:
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_86075
L_88779:
	movq 0x0(%r15),%r14
	movq $0x1C97,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x27F3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x920
realOpt_16:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_88684
L_88687:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_88688+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_88688
.p2align 0x4
.long 0x504
L_88688:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_88684:
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_86075
L_88685:
	movq 0x0(%r15),%r14
	movq $0x1C97,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x27F3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x920
realOpt_15:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_88647
L_88650:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_88651+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_88651
.p2align 0x4
.long 0x504
L_88651:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_88647:
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_86075
L_88648:
	movq 0x0(%r15),%r14
	movq $0x1C97,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x27F3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x920
realOpt_14:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_88610
L_88613:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_88614+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_88614
.p2align 0x4
.long 0x504
L_88614:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_88610:
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_86075
L_88611:
	movq 0x0(%r15),%r14
	movq $0x1C97,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x27F3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x920
realOpt_13:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_88470
L_88473:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_88474+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_88474
.p2align 0x4
.long 0x504
L_88474:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_88470:
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_86075
L_88471:
	movq 0x0(%r15),%r14
	movq $0x1C97,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x27F3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x920
realOpt_12:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_88438
L_88441:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_88442+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_88442
.p2align 0x4
.long 0x504
L_88442:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_88438:
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_86075
L_88439:
	movq 0x0(%r15),%r14
	movq $0x1C97,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x27F3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x920
realOpt_11:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_88380
L_88383:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_88384+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_88384
.p2align 0x4
.long 0x504
L_88384:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_88380:
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_86075
L_88381:
	movq 0x0(%r15),%r14
	movq $0x1C97,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x27F3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x920
realOpt_10:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_88353
L_88356:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_88357+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_88357
.p2align 0x4
.long 0x504
L_88357:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_88353:
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_86075
L_88354:
	movq 0x0(%r15),%r14
	movq $0x1C97,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x27F3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x920
realOpt_9:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_88326
L_88329:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_88330+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_88330
.p2align 0x4
.long 0x504
L_88330:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_88326:
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_86075
L_88327:
	movq 0x0(%r15),%r14
	movq $0x1C97,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x27F3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x920
realOpt_8:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_88299
L_88302:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_88303+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_88303
.p2align 0x4
.long 0x504
L_88303:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_88299:
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_86075
L_88300:
	movq 0x0(%r15),%r14
	movq $0x1C97,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x27F3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x920
realOpt_7:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_88272
L_88275:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_88276+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_88276
.p2align 0x4
.long 0x504
L_88276:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_88272:
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_86075
L_88273:
	movq 0x0(%r15),%r14
	movq $0x1C97,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x27F3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x920
realOpt_6:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_88245
L_88248:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_88249+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_88249
.p2align 0x4
.long 0x504
L_88249:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_88245:
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_86075
L_88246:
	movq 0x0(%r15),%r14
	movq $0x1C97,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x27F3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x920
realOpt_5:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_88218
L_88221:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_88222+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_88222
.p2align 0x4
.long 0x504
L_88222:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_88218:
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_86075
L_88219:
	movq 0x0(%r15),%r14
	movq $0x1C97,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x27F3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x920
realOpt_4:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_88191
L_88194:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_88195+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_88195
.p2align 0x4
.long 0x504
L_88195:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_88191:
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_86075
L_88192:
	movq 0x0(%r15),%r14
	movq $0x1C97,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x27F3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x920
realOpt_3:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_88159
L_88162:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_88163+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_88163
.p2align 0x4
.long 0x504
L_88163:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_88159:
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_86075
L_88160:
	movq 0x0(%r15),%r14
	movq $0x1C97,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x27F3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x920
realOpt_2:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_88132
L_88135:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_88136+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_88136
.p2align 0x4
.long 0x504
L_88136:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_88132:
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_86075
L_88133:
	movq 0x0(%r15),%r14
	movq $0x1C97,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x27F3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x920
realOpt_1:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_88105
L_88108:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_88109+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_88109
.p2align 0x4
.long 0x504
L_88109:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_88105:
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_86075
L_88106:
	movq 0x0(%r15),%r14
	movq $0x1C97,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x27F3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1292
L_88066:
	addq $0xFFFFFFFFFFFFFD30,%rbp
	movl 0x2D0(%rbp),%r15d
	movl %r15d,0x48(%rbp)
	leaq L_86749(%rip),%r14
	movq %r14,0x18(%rbp)
	movq %rbp,%r14
	addq $0x20,%r14
	subq (gcState+0x560)(%rip),%r14
	movq %r14,(gcState+0x20)(%rip)
	movl %r15d,0x2D0(%rbp)
	movq $0x3,0x2D8(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x2E0(%rbp)
	addq $0x2D0,%rbp
	leaq (L_88067+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x51A
L_88038:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movl 0x38(%rbp),%r15d
	movl %r15d,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_88039
L_88042:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_88043+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_88043
.p2align 0x4
.long 0x5E4
L_88043:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_88039:
	movslq 0x30(%rbp),%r15
	movq 0x28(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_86075
L_88041:
	movq 0x0(%r14,%r15,8),%r13
	movq $0x1C95,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x10,%r12
	movq $0x27F3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x61B
L_87999:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x50(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x38(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x40(%rbp)
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_88000+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x920
L_88007:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x30(%rbp)
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (bug_245+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x5F1
L_87970:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movl 0x40(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	testl %r15d,%r15d
	jnz L_410765
L_87971:
	xorl %ecx,%ecx
x_266:
	movl %ecx,%r15d
	shlq $0x2,%r15
	orq $0x3,%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_410765:
L_87972:
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0x30(%rbp),%r15
	movq 0x0(%r15),%rsi
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%rdi
	xorq %rax,%rax
	call IntInf_equal
L_87973:
	movl %eax,%ecx
	jmp x_266
.p2align 0x4
.long 0x920
x_265:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movl 0x30(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	movl %r15d,%r14d
	shlq $0x2,%r14
	orq $0x3,%r14
	movq %r14,0x0(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x5F1
L_87934:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movl 0x40(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	testl %r15d,%r15d
	jnz L_410766
L_87935:
	xorl %ecx,%ecx
x_264:
	movl %ecx,%r15d
	shlq $0x2,%r15
	orq $0x3,%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_410766:
L_87936:
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%rsi
	movq 0x30(%rbp),%r15
	movq 0x0(%r15),%rdi
	xorq %rax,%rax
	call IntInf_equal
L_87937:
	movl %eax,%ecx
	jmp x_264
.p2align 0x4
.long 0x920
L_87914:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_87915
L_87918:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_87919+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_87919
.p2align 0x4
.long 0x504
L_87919:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_87915:
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_86075
L_87916:
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq $0x27F3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	addq $0x10,%r12
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1290
L_87857:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	movl 0xE0(%rbp),%r15d
	movl %r15d,0x40(%rbp)
	leaq L_86749(%rip),%r14
	movq %r14,0x18(%rbp)
	movq %rbp,%r14
	addq $0x20,%r14
	subq (gcState+0x560)(%rip),%r14
	movq %r14,(gcState+0x20)(%rip)
	movl %r15d,0xE0(%rbp)
	movq $0x3,0xE8(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0xF0(%rbp)
	addq $0xE0,%rbp
	leaq (L_87858+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x1248
L_87820:
	addq $0xFFFFFFFFFFFFFD68,%rbp
	movq 0x298(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x288(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x30(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x38(%rbp)
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_87821+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x920
L_87828:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x30(%rbp)
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (bug_244+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x1259
L_86496:
	addq $0xFFFFFFFFFFFFFD30,%rbp
	movl 0x2D0(%rbp),%r15d
	movl %r15d,0x14(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_86497
L_86552:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2D0,%rbp
	leaq (L_86553+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_86553
.p2align 0x4
.long 0x125A
L_86553:
	addq $0xFFFFFFFFFFFFFD30,%rbp
L_86497:
	movq 0x8(%rbp),%r15
	movq %r15,%r14
	andq $0xFF,%r14
	cmpq $0x1D,%r14
	je L_410802
	cmpq $0x1E,%r14
	je L_410799
	cmpq $0x1F,%r14
	je L_410796
	cmpq $0x23,%r14
	je L_410793
	cmpq $0x25,%r14
	je L_410791
	cmpq $0x26,%r14
	je L_410787
	cmpq $0x2A,%r14
	je L_410784
	cmpq $0x2B,%r14
	je L_410780
	cmpq $0x2D,%r14
	je L_410776
	cmpq $0x2E,%r14
	je L_410773
	cmpq $0x33,%r14
	je L_410770
L_86498:
	andq $0x3,%r15
	jnz L_86075
L_86499:
	jmp L_86075
.p2align 0x4
L_410770:
L_86547:
	movl 0x14(%rbp),%r14d
	testl %r14d,%r14d
	jz L_410772
L_86548:
	cmpl $0xFFFFFFFF,%r14d
	jne L_86075
L_86550:
	movq $0x27F7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x27F7,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r13)
	movq $0x27F5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x8(%r14)
	addq $0x18,%r12
	movq $0x29,0x0(%r14)
	movq %r14,0x0(%rbp)
	movq 0x20(%rbp),%r14
	movq %r14,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_410772:
L_86551:
	movq $0x27F1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq 0x30(%rbp),%r11
	movq %r11,0x0(%r13)
	movq %r13,0x0(%rbp)
	movq 0x20(%rbp),%r13
	movq %r13,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_410773:
L_86542:
	movl 0x14(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_86075
L_86544:
	movl 0x10(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_410774
L_86545:
	movq $0x27F7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x27F7,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r13)
	movq $0x27F5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x8(%r14)
	addq $0x18,%r12
	movq $0x27,0x0(%r14)
	movq %r14,0x0(%rbp)
	movq 0x20(%rbp),%r14
	movq %r14,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_410774:
L_86546:
	movq $0x27F1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r14,0x0(%rbp)
	movq 0x20(%rbp),%r14
	movq %r14,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_410776:
L_86535:
	movl 0x10(%rbp),%r14d
	testl %r14d,%r14d
	jz L_86075
L_86537:
	movl 0x14(%rbp),%r14d
	cmpl $0xFFFFFFFF,%r14d
	je L_86098
L_86538:
	cmpl $0x1,%r14d
	je L_86098
	jmp L_86075
.p2align 0x4
L_410780:
L_86530:
	movl 0x10(%rbp),%r14d
	testl %r14d,%r14d
	jz L_86075
L_86532:
	movl 0x14(%rbp),%r14d
	cmpl $0x1,%r14d
	je L_410782
	cmpl $0xFFFFFFFF,%r14d
	je L_410781
	jmp L_86075
.p2align 0x4
L_410781:
L_86534:
	movq $0x27F7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x27F7,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r13)
	movq $0x27F5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x8(%r14)
	addq $0x18,%r12
	movq $0x27,0x0(%r14)
	movq %r14,0x0(%rbp)
	movq 0x20(%rbp),%r14
	movq %r14,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_410782:
L_86533:
	movq $0x27F1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq 0x30(%rbp),%r11
	movq %r11,0x0(%r13)
	movq %r13,0x0(%rbp)
	movq 0x20(%rbp),%r13
	movq %r13,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_410784:
L_86525:
	movl 0x14(%rbp),%r14d
	testl %r14d,%r14d
	jz L_410786
L_86526:
	cmpl $0xFFFFFFFF,%r14d
	jne L_86075
L_86512:
	movl $0xFFFFFFFF,%ecx
	jmp x_259
.p2align 0x4
L_410786:
L_86529:
	movq $0x27F1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq 0x30(%rbp),%r11
	movq %r11,0x0(%r13)
	movq %r13,0x0(%rbp)
	movq 0x20(%rbp),%r13
	movq %r13,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_410787:
L_86522:
	movl 0x14(%rbp),%r14d
	cmpl $0x0,%r14d
	je L_86098
	cmpl $0x1,%r14d
	je L_410789
	cmpl $0xFFFFFFFF,%r14d
	je L_410788
	jmp L_86075
.p2align 0x4
L_410788:
L_86524:
	movq $0x27F7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x27F7,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r13)
	movq $0x27F5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x8(%r14)
	addq $0x18,%r12
	movq $0x27,0x0(%r14)
	movq %r14,0x0(%rbp)
	movq 0x20(%rbp),%r14
	movq %r14,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_410789:
L_86523:
	movq $0x27F1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq 0x30(%rbp),%r11
	movq %r11,0x0(%r13)
	movq %r13,0x0(%rbp)
	movq 0x20(%rbp),%r13
	movq %r13,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_410791:
L_86519:
	movl 0x14(%rbp),%r14d
	testl %r14d,%r14d
	jz L_86098
	jmp L_86075
.p2align 0x4
L_410793:
L_86514:
	movl 0x14(%rbp),%r14d
	cmpl $0xFFFFFFFF,%r14d
	je L_86090
L_86515:
	cmpl $0x1,%r14d
	je L_86090
	jmp L_86075
.p2align 0x4
L_410796:
L_86508:
	movl 0x14(%rbp),%r14d
	testl %r14d,%r14d
	jz L_86098
L_86509:
	cmpl $0xFFFFFFFF,%r14d
	je L_86512
	jmp L_86075
.p2align 0x4
L_410799:
L_86503:
	movl 0x14(%rbp),%r14d
	testl %r14d,%r14d
	jz L_86098
L_86504:
	cmpl $0xFFFFFFFF,%r14d
	jne L_86075
L_86506:
	movq $0x27F1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r14,0x0(%rbp)
	movq 0x20(%rbp),%r14
	movq %r14,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_410802:
L_86500:
	movl 0x14(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_86075
L_86502:
	movq $0x27F1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r14,0x0(%rbp)
	movq 0x20(%rbp),%r14
	movq %r14,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x48A
L_86554:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	cmpq $0x3,%r15
	je L_86075
L_86555:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_86556
L_86557:
L_86556:
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x8F9
L_86445:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_86446
L_86488:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_86489+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_86489
.p2align 0x4
.long 0xB61
L_86489:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_86446:
	movq 0x38(%rbp),%r15
	movq %r15,%r14
	andq $0x7,%r14
	cmpq $0x1,%r14
	je L_410825
	cmpq $0x2,%r14
	je L_86075
	cmpq $0x3,%r14
	je L_86075
	cmpq $0x5,%r14
	je L_86075
	cmpq $0x6,%r14
	je L_410815
L_86447:
	movl 0x4(%r15),%r14d
	movl 0x0(%r15),%r13d
	movq 0x8(%rbp),%r15
	movq %r15,%r11
	andq $0xFF,%r11
	cmpq $0x79,%r11
	je L_410811
	cmpq $0x7F,%r11
	je L_410808
L_86448:
	andq $0x3,%r15
	jnz L_86075
L_86449:
	jmp L_86075
.p2align 0x4
L_410808:
L_86457:
	shrq $0x8,%r15
	movb %r15b,%r11b
	testl %r14d,%r14d
	jnz L_86075
L_86458:
	cmpl $0x2,%r13d
	jne L_86075
L_86460:
	movzbq %r11b,%r15
	shlq $0x8,%r15
	orq $0x77,%r15
	movq $0x27F7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x27F7,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x8(%r11)
	addq $0x18,%r12
	movq %r13,0x0(%r11)
	movq $0x27F5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r11,0x8(%r14)
	movq %r14,0x0(%rbp)
	addq $0x18,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_410811:
L_86450:
	shrq $0x8,%r15
	movb %r15b,%r11b
	movl 0x10(%rbp),%r15d
	testl %r15d,%r15d
	jz L_86075
L_86452:
	testl %r14d,%r14d
	jnz L_86075
L_86453:
	testl %r13d,%r13d
	jnz L_86075
L_86455:
	movzbq %r11b,%r15
	shlq $0x8,%r15
	orq $0x77,%r15
	movq $0x27F7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x27F7,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x8(%r11)
	addq $0x18,%r12
	movq %r13,0x0(%r11)
	movq $0x27F5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r11,0x8(%r14)
	movq %r14,0x0(%rbp)
	addq $0x18,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_410815:
L_86477:
	shrq $0x3,%r15
	movl %r15d,%r14d
	movq 0x8(%rbp),%r15
	movq %r15,%r13
	andq $0xFF,%r13
	cmpq $0x79,%r13
	je L_410819
	cmpq $0x7F,%r13
	je L_410817
L_86478:
	andq $0x3,%r15
	jnz L_86075
L_86479:
	jmp L_86075
.p2align 0x4
L_410817:
L_86485:
	shrq $0x8,%r15
	movb %r15b,%r13b
	testl %r14d,%r14d
	jz L_410818
L_86487:
	movzbq %r13b,%r15
	shlq $0x8,%r15
	orq $0x83,%r15
	movq $0x27F7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x27F5,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	movq %r13,0x0(%rbp)
	addq $0x18,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_410818:
L_86486:
	movq $0x27F1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_410819:
L_86480:
	shrq $0x8,%r15
	movb %r15b,%r13b
	movl 0x10(%rbp),%r15d
	testl %r15d,%r15d
	jz L_86075
L_86482:
	testl %r14d,%r14d
	jz L_410820
L_86484:
	movzbq %r13b,%r15
	shlq $0x8,%r15
	orq $0x83,%r15
	movq $0x27F7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x27F5,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	movq %r13,0x0(%rbp)
	addq $0x18,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_410820:
L_86483:
	movq $0x27F1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_410825:
L_86462:
	movq 0x8(%rbp),%r14
	movq %r14,%r13
	andq $0xFF,%r13
	cmpq $0x6B,%r13
	je L_410835
	cmpq $0x77,%r13
	je L_410834
	cmpq $0x79,%r13
	je L_410833
	cmpq $0x7A,%r13
	je L_86143
	cmpq $0x7D,%r13
	je L_86143
	cmpq $0x7E,%r13
	je L_86143
	cmpq $0x7F,%r13
	je L_410829
	cmpq $0x85,%r13
	je L_86145
	cmpq $0x87,%r13
	je L_410827
L_86463:
	andq $0x3,%r14
	jnz L_86075
L_86464:
	jmp L_86075
.p2align 0x4
L_410827:
L_86473:
	movq $0x1C97,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq 0x28(%rbp),%r11
	movq %r11,0x0(%r13)
	movq $0x27F3,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r11,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_410829:
L_86471:
	movq $0x1C97,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq 0x28(%rbp),%r11
	movq %r11,0x0(%r13)
	movq $0x27F3,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r11,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_410833:
L_86467:
	movq $0x1C97,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq 0x28(%rbp),%r11
	movq %r11,0x0(%r13)
	movq $0x27F3,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r11,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_410834:
L_86466:
	movq $0x1C97,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq 0x28(%rbp),%r11
	movq %r11,0x0(%r13)
	movq $0x27F3,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r11,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_410835:
L_86465:
	movq $0x1C97,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq 0x28(%rbp),%r11
	movq %r11,0x0(%r13)
	movq $0x27F3,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r11,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xDDE
L_86412:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movl 0x50(%rbp),%r15d
	movl %r15d,0x48(%rbp)
	movl %r15d,0x50(%rbp)
	movq $0x3,0x58(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x50,%rbp
	leaq (L_86413+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x7B4
L_86222:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movl 0x48(%rbp),%r15d
	movl %r15d,0x40(%rbp)
	movl %r15d,0x48(%rbp)
	movq $0x3,0x50(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x48,%rbp
	leaq (L_86223+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x124D
L_86231:
	addq $0xFFFFFFFFFFFFFD68,%rbp
	movl 0x298(%rbp),%r15d
	movl %r15d,0x50(%rbp)
	movl %r15d,0x298(%rbp)
	movq $0x3,0x2A0(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x2A8(%rbp)
	addq $0x298,%rbp
	leaq (L_86232+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x1258
L_86370:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movl 0x68(%rbp),%r15d
	movl %r15d,0x40(%rbp)
	movl %r15d,0x60(%rbp)
	movq $0x3,0x68(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x60,%rbp
	leaq (L_86371+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0xF4E
L_86383:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movl 0x60(%rbp),%r15d
	movl %r15d,0x58(%rbp)
	decl %r15d
	movl %r15d,0x60(%rbp)
	movq $0x3,0x68(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x60,%rbp
	leaq (L_86384+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x1258
L_86388:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movl 0x68(%rbp),%r15d
	movl %r15d,0x40(%rbp)
	movl %r15d,0x60(%rbp)
	movq $0x3,0x68(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x60,%rbp
	leaq (L_86389+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0xF4E
L_86402:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movl 0x60(%rbp),%r15d
	movl %r15d,0x58(%rbp)
	decl %r15d
	movl %r15d,0x60(%rbp)
	movq $0x3,0x68(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x60,%rbp
	leaq (L_86403+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x5F1
L_86358:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_86359
L_86362:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_86363+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_86363
.p2align 0x4
.long 0x489
L_86363:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_86359:
	cmpq $0xFFFFFFFFFFFFFFFF,0x38(%rbp)
	jne L_86075
L_86361:
	movq $0x1E07,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x27F7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x27F5,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	movq %r13,0x0(%rbp)
	addq $0x18,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x5F1
L_86344:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_86345
L_86348:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_86349+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_86349
.p2align 0x4
.long 0x489
L_86349:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_86345:
	cmpq $0xFFFFFFFFFFFFFFFF,0x38(%rbp)
	jne L_86075
L_86347:
	movq $0x1E05,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x27F7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x27F5,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	movq %r13,0x0(%rbp)
	addq $0x18,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xDDE
L_86328:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movl 0x50(%rbp),%r15d
	movl %r15d,0x48(%rbp)
	movl %r15d,0x50(%rbp)
	movq $0x3,0x58(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x50,%rbp
	leaq (L_86329+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x5F1
L_86318:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_86319
L_86322:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_86323+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_86323
.p2align 0x4
.long 0x489
L_86323:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_86319:
	cmpq $0xFFFFFFFFFFFFFFFF,0x38(%rbp)
	jne L_86075
L_86321:
	movq $0x1E07,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x27F7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x27F5,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	movq %r13,0x0(%rbp)
	addq $0x18,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1257
L_86306:
	addq $0xFFFFFFFFFFFFFD68,%rbp
	movq 0x298(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq $0xFFFFFFFFFFFFFFFF,%r15
	je zero_1
	jmp L_86075
.p2align 0x4
.long 0x1252
L_86279:
	addq $0xFFFFFFFFFFFFFE60,%rbp
	movl 0x1A0(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	movslq %r15d,%r14
	shlq $0x1,%r14
	orq $0x1,%r14
	movq %r14,0x40(%rbp)
	movq 0x28(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x50(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x58(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x60(%rbp)
	movq %r14,0x1A0(%rbp)
	addq $0x1A0,%rbp
	leaq (L_86280+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0xDDE
L_86267:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movl 0x50(%rbp),%r15d
	movl %r15d,0x48(%rbp)
	movl %r15d,0x50(%rbp)
	movq $0x3,0x58(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x50,%rbp
	leaq (L_86268+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x1251
L_86250:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movl 0x58(%rbp),%r15d
	movl %r15d,0x2C(%rbp)
	movl %r15d,0x58(%rbp)
	movq $0x3,0x60(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x58,%rbp
	leaq (L_86251+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0xBAD
L_86193:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movl 0x58(%rbp),%r15d
	movl %r15d,0x50(%rbp)
	movl %r15d,0x58(%rbp)
	movq $0x3,0x60(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x58,%rbp
	leaq (L_86194+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x651
L_86091:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movl 0x38(%rbp),%r15d
	movl %r15d,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_86092
L_86095:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_86096+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_86096
.p2align 0x4
.long 0x475
L_86096:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_86092:
	movl 0x30(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_86075
L_86093:
	movq $0x1C99,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x27F3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x50D
L_86135:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movl 0x40(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	movl %r15d,0x40(%rbp)
	movq $0x3,0x48(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x40,%rbp
	leaq (L_86136+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x50D
L_86128:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movl 0x40(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	movl %r15d,0x40(%rbp)
	movq $0x3,0x48(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x40,%rbp
	leaq (L_86129+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x50D
L_86121:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movl 0x40(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	movl %r15d,0x40(%rbp)
	movq $0x3,0x48(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x40,%rbp
	leaq (L_86122+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x50D
L_86114:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movl 0x40(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	movl %r15d,0x40(%rbp)
	movq $0x3,0x48(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x40,%rbp
	leaq (L_86115+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x50D
L_86107:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movl 0x40(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	movl %r15d,0x40(%rbp)
	movq $0x3,0x48(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x40,%rbp
	leaq (L_86108+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x1249
L_86164:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	movl 0xE0(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	movl %r15d,0xE0(%rbp)
	movq $0x3,0xE8(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0xF0(%rbp)
	addq $0xE0,%rbp
	leaq (L_86165+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x1248
L_86149:
	addq $0xFFFFFFFFFFFFFD68,%rbp
	movq 0x298(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x288(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x30(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x38(%rbp)
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_86150+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x920
L_86157:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x30(%rbp)
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (bug_236+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x125B
L_86597:
	addq $0xFFFFFFFFFFFFFD30,%rbp
	movl 0x2D0(%rbp),%r15d
	movl %r15d,0x10(%rbp)
	testl %r15d,%r15d
	jnz L_86075
L_86598:
	movq 0x8(%rbp),%r15
	movq %r15,%r14
	andq $0xFF,%r14
	cmpq $0x27,%r14
	je L_410851
	cmpq $0x29,%r14
	je L_410846
L_86599:
	andq $0x3,%r15
	jnz L_86075
L_86600:
	jmp L_86075
.p2align 0x4
L_410846:
L_86609:
	movq 0x28(%rbp),%r14
	movq %r14,%r13
	andq $0x1,%r13
	jz L_410847
L_86610:
	notq %r14
	orq $0x1,%r14
	movq %r14,0x28(%rbp)
intInf_0:
	movq 0x28(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x2C0(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_86611+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1473
.p2align 0x4
L_410847:
L_86617:
	movq 0xFFFFFFFFFFFFFFF0(%r14),%rsi
	decq %rsi
	jo L_86062
L_86618:
	movq 0xA0(%rbp),%r14
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r11
	imulq %r11,%rsi
	addq $0x7,%r13
	addq %r11,%r13
	addq %r13,%rsi
	movq %rsi,%r14
	movq %rsi,0x30(%rbp)
	addq $0x0,%r14
	jc L_86619
L_86620:
	movq (gcState+0x458)(%rip),%r13
	subq %r12,%r13
	cmpq %r14,%r13
	jnb L_86621
L_86623:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r13d
	movl %r13d,%edx
	movq %r14,%rsi
	leaq gcState(%rip),%r14
	movq %r14,%rdi
	xorq %rax,%rax
	addq $0x2D0,%rbp
	leaq (L_86624+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_86624
.p2align 0x4
.long 0x125D
L_86624:
	addq $0xFFFFFFFFFFFFFD30,%rbp
L_86621:
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0x30(%rbp),%rsi
	movq 0x28(%rbp),%rdi
	xorq %rax,%rax
	movq %r12,(gcState+0x0)(%rip)
	call IntInf_notb
L_86622:
	movq %rax,0x28(%rbp)
	movq (gcState+0x0)(%rip),%r12
	jmp intInf_0
.p2align 0x4
L_410851:
L_86601:
	movq 0x28(%rbp),%r14
	movq %r14,0x2D0(%rbp)
	movq 0x38(%rbp),%r14
	movq %r14,0x2D8(%rbp)
	addq $0x2D0,%rbp
	leaq (L_86602+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigNeg_0
.p2align 0x4
.long 0x125E
L_86639:
	addq $0xFFFFFFFFFFFFFD30,%rbp
	movl 0x2D0(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	testl %r15d,%r15d
	jnz L_86075
L_86640:
	movq 0x8(%rbp),%r15
	movq %r15,%r14
	andq $0xFF,%r14
	cmpq $0x1F,%r14
	je L_410856
	cmpq $0x25,%r14
	je L_410855
	cmpq $0x2F,%r14
	je L_410854
L_86641:
	andq $0x3,%r15
	jnz L_86075
L_86642:
	jmp L_86075
.p2align 0x4
L_410854:
L_86670:
	movq 0x30(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0xC8(%rbp)
	addq $0xC8,%rbp
	leaq (L_86671+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_410855:
L_86652:
	movq 0x50(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x38(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x40(%rbp)
	movq 0xC0(%rbp),%r14
	movq %r14,0x2D0(%rbp)
	addq $0x2D0,%rbp
	leaq (L_86653+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_410856:
L_86643:
	movq 0x30(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x2D0(%rbp)
	addq $0x2D0,%rbp
	leaq (L_86644+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x51A
L_86760:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movl 0x38(%rbp),%r15d
	movl %r15d,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_86761
L_86764:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_86765+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_86765
.p2align 0x4
.long 0x5E4
L_86765:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_86761:
	movl 0x30(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_86075
L_86762:
	movq $0x1C99,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x27F3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x125C
L_86742:
	addq $0xFFFFFFFFFFFFFD30,%rbp
	movq 0x2D0(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq %r15,0x38(%rbp)
	movq 0x2C0(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_86743+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1473
.p2align 0x4
.long 0x1266
L_86810:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movl 0xC8(%rbp),%r15d
	movl %r15d,0x30(%rbp)
	cmpl $0x2,%r15d
	je L_410866
	cmpl $0x8,%r15d
	je L_410865
	cmpl $0xA,%r15d
	je L_410864
	cmpl $0x10,%r15d
	je L_410860
L_86811:
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x1A40)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_410860:
L_86826:
	xorb %dl,%dl
L_86813:
	movq 0xB0(%rbp),%r14
	movq 0x18(%r14),%r13
	movq 0x10(%r14),%r11
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r10
	cmpb $0x1,%dl
	je L_410863
	cmpb $0x2,%dl
	je L_410862
	cmpb $0x3,%dl
	je L_410861
L_86814:
L_86815:
	movq %r15,0xD0(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC8,%rbp
	leaq (L_86816+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1197
.p2align 0x4
L_410861:
	movq %r13,%r15
	jmp L_86815
.p2align 0x4
L_410862:
L_86822:
	movq %r10,%r15
	jmp L_86815
.p2align 0x4
L_410863:
L_86821:
	movq %r11,%r15
	jmp L_86815
.p2align 0x4
L_410864:
L_86825:
	movb $0x1,%dl
	jmp L_86813
.p2align 0x4
L_410865:
L_86824:
	movb $0x2,%dl
	jmp L_86813
.p2align 0x4
L_410866:
L_86812:
	movb $0x3,%dl
	jmp L_86813
.p2align 0x4
.long 0x1260
L_86792:
	addq $0xFFFFFFFFFFFFFD30,%rbp
	movl 0x2D0(%rbp),%r15d
	movl %r15d,0x48(%rbp)
	leaq L_86749(%rip),%r14
	movq %r14,0x18(%rbp)
	movq %rbp,%r14
	addq $0x20,%r14
	subq (gcState+0x560)(%rip),%r14
	movq %r14,(gcState+0x20)(%rip)
	movl %r15d,0x2D0(%rbp)
	movq $0x3,0x2D8(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x2E0(%rbp)
	addq $0x2D0,%rbp
	leaq (L_86793+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x125F
L_86783:
	addq $0xFFFFFFFFFFFFFD30,%rbp
	movl 0x2D0(%rbp),%r15d
	movl %r15d,0x30(%rbp)
	leaq L_86749(%rip),%r14
	movq %r14,0x18(%rbp)
	movq %rbp,%r14
	addq $0x20,%r14
	subq (gcState+0x560)(%rip),%r14
	movq %r14,(gcState+0x20)(%rip)
	movl %r15d,0x2D0(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x2D8(%rbp)
	movq 0xA8(%rbp),%r15
	movq %r15,0x2E0(%rbp)
	addq $0x2D0,%rbp
	leaq (L_86784+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1487
.p2align 0x4
.long 0x920
bug_243:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_87714
L_87715:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_87716+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_87716
.p2align 0x4
.long 0x504
L_87716:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_87714:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xFA4
L_87718:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x38(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_87719+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x1256
L_86880:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movl 0x60(%rbp),%r15d
	testl %r15d,%r15d
	movl %r15d,0x38(%rbp)
	jz L_86755
L_86882:
	movq 0x50(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_86883+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x128D
L_87680:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_87681
L_87682:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_87683+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_87683
.p2align 0x4
.long 0x128E
L_87683:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_87681:
	movq 0x38(%rbp),%r15
	movq 0x40(%rbp),%r14
	jmp L_87676
.p2align 0x4
.long 0x7AA
L_87546:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (word_17+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x9B2
L_87552:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movl 0x58(%rbp),%r15d
	movl %r15d,0x30(%rbp)
	movl %r15d,0x58(%rbp)
	movq $0x3,0x60(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x58,%rbp
	leaq (L_87553+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x920
bug_242:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_87446
L_87447:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_87448+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_87448
.p2align 0x4
.long 0x504
L_87448:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_87446:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1286
L_87453:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x40(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_87454+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x128A
L_87461:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x30(%rbp)
	movl 0x28(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_410871
L_87462:
	jmp L_87451
.p2align 0x4
L_410871:
L_87463:
	movq 0x38(%rbp),%r14
	movq %r14,0x68(%rbp)
	movq 0x50(%rbp),%r14
	movq %r14,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_87464+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toIntInfX_0
.p2align 0x4
.long 0x1285
L_87416:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x40(%rbp),%r14
	jmp L_87412
.p2align 0x4
.long 0x7C6
L_87377:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x28(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x50(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x40(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x48(%rbp)
	movq %r14,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_87378+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x1283
L_87353:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movl $0x1,%ecx
	movq 0x28(%rbp),%r14
	movq %r15,0x28(%rbp)
	movq %r14,0x30(%rbp)
	jmp wordOrOverflow_0
.p2align 0x4
.long 0xA4B
L_87318:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x38(%rbp),%r14
	movq %r14,0x58(%rbp)
	movq 0x50(%rbp),%r14
	movq %r14,0x60(%rbp)
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_87319+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x920
bug_241:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_87244
L_87245:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_87246+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_87246
.p2align 0x4
.long 0x504
L_87246:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_87244:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x127B
L_87250:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x48(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_87251+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x127E
L_87258:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r14
	movq %r14,0x30(%rbp)
	movl 0x28(%rbp),%r13d
	testl %r13d,%r13d
	jnz L_410873
L_87259:
	movq 0x40(%rbp),%r15
	jmp L_87249
.p2align 0x4
L_410873:
L_87260:
	movq 0x38(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_87261+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toIntInfX_0
.p2align 0x4
.long 0x920
bug_240:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_87195
L_87196:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_87197+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_87197
.p2align 0x4
.long 0x504
L_87197:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_87195:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x127B
L_87201:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x48(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_87202+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x127E
L_87209:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r14
	movq %r14,0x30(%rbp)
	movl 0x28(%rbp),%r13d
	testl %r13d,%r13d
	jnz L_410875
L_87210:
	movq 0x40(%rbp),%r15
	jmp L_87200
.p2align 0x4
L_410875:
L_87211:
	movq 0x38(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_87212+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toIntInfX_0
.p2align 0x4
.long 0x1272
L_87078:
	addq $0xFFFFFFFFFFFFFE70,%rbp
	movsd 0x190(%rbp),%xmm15
	movsd %xmm15,0x38(%rbp)
	movb $0x1,0x190(%rbp)
	addq $0x190,%rbp
	leaq (L_87079+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp setRoundingMode_0
.p2align 0x4
.long 0x920
L_87105:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	jmp L_86075
.p2align 0x4
.long 0x1276
L_87125:
	addq $0xFFFFFFFFFFFFFE80,%rbp
	movss 0x180(%rbp),%xmm15
	movss %xmm15,0x34(%rbp)
	leaq L_87143(%rip),%r15
	movq %r15,0x18(%rbp)
	movb $0x1,0x180(%rbp)
	addq $0x180,%rbp
	leaq (L_87126+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp setRoundingMode_0
.p2align 0x4
.long 0x48A
L_87157:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_87144
.p2align 0x4
.long 0x126E
L_87030:
	addq $0xFFFFFFFFFFFFFE50,%rbp
	movl 0x1B0(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x1B0(%rbp)
	addq $0x1B0,%rbp
	leaq (L_87031+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x126E
L_86990:
	addq $0xFFFFFFFFFFFFFE50,%rbp
	movl 0x1B0(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x1B0(%rbp)
	addq $0x1B0,%rbp
	leaq (L_86991+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x920
bug_239:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_86921
L_86922:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_86923+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_86923
.p2align 0x4
.long 0x504
L_86923:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_86921:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xFA4
L_86925:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x38(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_86926+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x126D
L_86891:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x40(%rbp),%r14
	jmp L_86878
.p2align 0x4
.long 0x1293
L_88067:
	addq $0xFFFFFFFFFFFFFD30,%rbp
	movq 0x2D0(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq %r15,0x2D0(%rbp)
	movq $0x3,0x2D8(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x2E0(%rbp)
	addq $0x2D0,%rbp
	leaq (L_88068+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x512
L_88000:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movl 0x50(%rbp),%r15d
	movl %r15d,0x48(%rbp)
	movl %r15d,0x50(%rbp)
	movq $0x3,0x58(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x50,%rbp
	leaq (L_88001+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x920
bug_245:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_88008
L_88009:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_88010+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_88010
.p2align 0x4
.long 0x504
L_88010:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_88008:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1291
L_87858:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	movq 0xE0(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq %r15,0xE0(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0xE8(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0xF0(%rbp)
	addq $0xE0,%rbp
	leaq (L_87859+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x7B4
L_87821:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movl 0x48(%rbp),%r15d
	movl %r15d,0x40(%rbp)
	movl %r15d,0x48(%rbp)
	movq $0x3,0x50(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x48,%rbp
	leaq (L_87822+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x920
bug_244:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_87829
L_87830:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_87831+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_87831
.p2align 0x4
.long 0x504
L_87831:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_87829:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x7AA
L_86413:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq %r15,0x48(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq $0x3,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_86414+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x79B
L_86223:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq $0x1,0x40(%rbp)
	movq 0x38(%rbp),%r14
	movq %r14,0x48(%rbp)
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_86224+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x124E
L_86232:
	addq $0xFFFFFFFFFFFFFD68,%rbp
	movq 0x298(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq %r15,0x298(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x2A0(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x2A8(%rbp)
	addq $0x298,%rbp
	leaq (L_86233+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x7C4
L_86371:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq $0x3,0x48(%rbp)
	movq 0x50(%rbp),%r14
	movq %r14,0x58(%rbp)
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_86372+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x9F5
L_86384:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq %r15,0x60(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_86385+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigNeg_0
.p2align 0x4
.long 0x7C4
L_86389:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq $0x3,0x48(%rbp)
	movq 0x50(%rbp),%r14
	movq %r14,0x58(%rbp)
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_86390+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x9F5
L_86403:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq %r15,0x60(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_86404+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigNeg_0
.p2align 0x4
.long 0x7AA
L_86329:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq %r15,0x48(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq $0x3,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_86330+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x1253
L_86280:
	addq $0xFFFFFFFFFFFFFE60,%rbp
	movl 0x1A0(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	movl %r15d,0x1A0(%rbp)
	movq $0x3,0x1A8(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x1B0(%rbp)
	addq $0x1A0,%rbp
	leaq (L_86281+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x7AA
L_86268:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq %r15,0x48(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq $0x3,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_86269+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x6DB
L_86251:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq %r15,0x50(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq $0x3,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_86252+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x693
L_86194:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq %r15,0x50(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq $0x3,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_86195+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x1247
L_86136:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq $0x3,0x38(%rbp)
	movq 0x30(%rbp),%r14
	movq %r14,0x40(%rbp)
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_86137+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x1247
L_86129:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq $0x1,0x38(%rbp)
	movq 0x30(%rbp),%r14
	movq %r14,0x40(%rbp)
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_86130+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x1247
L_86122:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq $0x1,0x38(%rbp)
	movq 0x30(%rbp),%r14
	movq %r14,0x40(%rbp)
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_86123+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x1247
L_86115:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq $0x1,0x38(%rbp)
	movq 0x30(%rbp),%r14
	movq %r14,0x40(%rbp)
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_86116+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x1247
L_86108:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq $0x1,0x38(%rbp)
	movq 0x30(%rbp),%r14
	movq %r14,0x40(%rbp)
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_86109+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x124A
L_86165:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	movq 0xE0(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq %r15,0xE0(%rbp)
	movq $0x1,0xE8(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0xF0(%rbp)
	addq $0xE0,%rbp
	leaq (L_86166+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x7B4
L_86150:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movl 0x48(%rbp),%r15d
	movl %r15d,0x40(%rbp)
	movl %r15d,0x48(%rbp)
	movq $0x3,0x50(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x48,%rbp
	leaq (L_86151+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x920
bug_236:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_86158
L_86159:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_86160+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_86160
.p2align 0x4
.long 0x504
L_86160:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_86158:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x51A
L_86611:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movl 0x38(%rbp),%r15d
	movl %r15d,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_86612
L_86615:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_86616+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_86616
.p2align 0x4
.long 0x5E4
L_86616:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_86612:
	movl 0x30(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_86075
L_86613:
	movq $0x1C99,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x27F3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x125C
L_86602:
	addq $0xFFFFFFFFFFFFFD30,%rbp
	movq 0x2D0(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq %r15,0x38(%rbp)
	movq 0x2C0(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_86603+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1473
.p2align 0x4
.long 0x1266
L_86671:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movl 0xC8(%rbp),%r15d
	movl %r15d,0x30(%rbp)
	cmpl $0x2,%r15d
	je L_410888
	cmpl $0x8,%r15d
	je L_410887
	cmpl $0xA,%r15d
	je L_410886
	cmpl $0x10,%r15d
	je L_410882
L_86672:
	movq (globalObjptr+0x1A40)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_410882:
L_86687:
	xorb %dl,%dl
L_86674:
	movq 0xB0(%rbp),%r14
	movq 0x18(%r14),%r13
	movq 0x10(%r14),%r11
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r10
	cmpb $0x1,%dl
	je L_410885
	cmpb $0x2,%dl
	je L_410884
	cmpb $0x3,%dl
	je L_410883
L_86675:
L_86676:
	movq %r15,0xD0(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC8,%rbp
	leaq (L_86677+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1197
.p2align 0x4
L_410883:
	movq %r13,%r15
	jmp L_86676
.p2align 0x4
L_410884:
L_86683:
	movq %r10,%r15
	jmp L_86676
.p2align 0x4
L_410885:
L_86682:
	movq %r11,%r15
	jmp L_86676
.p2align 0x4
L_410886:
L_86686:
	movb $0x1,%dl
	jmp L_86674
.p2align 0x4
L_410887:
L_86685:
	movb $0x2,%dl
	jmp L_86674
.p2align 0x4
L_410888:
L_86673:
	movb $0x3,%dl
	jmp L_86674
.p2align 0x4
.long 0x1260
L_86653:
	addq $0xFFFFFFFFFFFFFD30,%rbp
	movl 0x2D0(%rbp),%r15d
	movl %r15d,0x48(%rbp)
	movl %r15d,0x2D0(%rbp)
	movq $0x3,0x2D8(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x2E0(%rbp)
	addq $0x2D0,%rbp
	leaq (L_86654+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x125F
L_86644:
	addq $0xFFFFFFFFFFFFFD30,%rbp
	movl 0x2D0(%rbp),%r15d
	movl %r15d,0x30(%rbp)
	movl %r15d,0x2D0(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x2D8(%rbp)
	movq 0xA8(%rbp),%r15
	movq %r15,0x2E0(%rbp)
	addq $0x2D0,%rbp
	leaq (L_86645+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1487
.p2align 0x4
.long 0x51A
L_86743:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movl 0x38(%rbp),%r15d
	movl %r15d,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_86744
L_86747:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_86748+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_86748
.p2align 0x4
.long 0x5E4
L_86748:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_86744:
	movl 0x30(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_86075
L_86745:
	movq $0x1C99,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x27F3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1267
L_86816:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq %r15,0x30(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_86817+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1266
.p2align 0x4
.long 0x1261
L_86793:
	addq $0xFFFFFFFFFFFFFD30,%rbp
	movq 0x2D0(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq %r15,0x2D0(%rbp)
	movq $0x101,0x2D8(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x2E0(%rbp)
	addq $0x2D0,%rbp
	leaq (L_86794+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x125C
L_86784:
	addq $0xFFFFFFFFFFFFFD30,%rbp
	movq 0x2D0(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq %r15,0x38(%rbp)
	movq 0x2C0(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_86785+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1473
.p2align 0x4
.long 0x923
L_87719:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movl 0x58(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	movl %r15d,0x58(%rbp)
	movq $0x3,0x60(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x58,%rbp
	leaq (L_87720+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0xDDE
L_86883:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movl 0x50(%rbp),%r15d
	movl %r15d,0x48(%rbp)
	movl %r15d,0x50(%rbp)
	movq $0x3,0x58(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x50,%rbp
	leaq (L_86884+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x51A
word_17:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_87547
L_87548:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_87549+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_87549
.p2align 0x4
.long 0x488
L_87549:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_87547:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x27F3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	addq $0x10,%r12
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xFA3
L_87553:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x38(%rbp),%r14
	movq %r14,0x40(%rbp)
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (word_17+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x1287
L_87454:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movl 0x68(%rbp),%r15d
	movl %r15d,0x40(%rbp)
	movl %r15d,0x68(%rbp)
	movq $0x3,0x70(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x68,%rbp
	leaq (L_87455+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x128B
L_87464:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x30(%rbp),%r14
	jmp L_87452
.p2align 0x4
.long 0x1251
L_87378:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movl 0x58(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	movl %r15d,0x58(%rbp)
	movq $0x3,0x60(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x58,%rbp
	leaq (L_87379+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x847
L_87319:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_87320
L_87321:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_87322+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_87322
.p2align 0x4
.long 0x6F7
L_87322:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_87320:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x27F3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	addq $0x10,%r12
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x127C
L_87251:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movl 0x70(%rbp),%r15d
	movl %r15d,0x40(%rbp)
	movl %r15d,0x70(%rbp)
	movq $0x3,0x78(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x70,%rbp
	leaq (L_87252+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x127F
L_87261:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x30(%rbp),%r14
	jmp L_87249
.p2align 0x4
.long 0x127C
L_87202:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movl 0x70(%rbp),%r15d
	movl %r15d,0x40(%rbp)
	movl %r15d,0x70(%rbp)
	movq $0x3,0x78(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x70,%rbp
	leaq (L_87203+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x127F
L_87212:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x30(%rbp),%r14
	jmp L_87200
.p2align 0x4
.long 0x1272
L_87079:
	addq $0xFFFFFFFFFFFFFE70,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x190(%rbp)
	movq 0x178(%rbp),%r15
	movq %r15,0x198(%rbp)
	addq $0x190,%rbp
	leaq (L_87080+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromIntInf_0
.p2align 0x4
.long 0x1276
L_87126:
	addq $0xFFFFFFFFFFFFFE80,%rbp
	leaq L_87157(%rip),%r15
	movq %r15,0x18(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x180(%rbp)
	movq 0x168(%rbp),%r15
	movq %r15,0x188(%rbp)
	addq $0x180,%rbp
	leaq (L_87127+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromIntInf_1
.p2align 0x4
.long 0x126F
L_87031:
	addq $0xFFFFFFFFFFFFFE50,%rbp
	movl 0x1B0(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_87032
L_87040:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1B0,%rbp
	leaq (L_87041+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_87041
.p2align 0x4
.long 0x1270
L_87041:
	addq $0xFFFFFFFFFFFFFE50,%rbp
L_87032:
	movl 0x28(%rbp),%r15d
	movl 0x38(%rbp),%r14d
	subl %r14d,%r15d
	movq $0x343,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movl %r15d,0x0(%r13)
	addq $0x10,%r12
	movl %r14d,0x4(%r13)
	movq %r13,0x60(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x1A0(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x60,%rbp
	leaq (L_87033+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp swap_0
.p2align 0x4
.long 0x126F
L_86991:
	addq $0xFFFFFFFFFFFFFE50,%rbp
	movl 0x1B0(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_86992
L_87000:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1B0,%rbp
	leaq (L_87001+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_87001
.p2align 0x4
.long 0x1270
L_87001:
	addq $0xFFFFFFFFFFFFFE50,%rbp
L_86992:
	movl 0x28(%rbp),%r15d
	movl 0x38(%rbp),%r14d
	subl %r14d,%r15d
	movq $0x343,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movl %r15d,0x4(%r13)
	addq $0x10,%r12
	movl %r14d,0x0(%r13)
	movq %r13,0x60(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x1A0(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x60,%rbp
	leaq (L_86993+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp swap_0
.p2align 0x4
.long 0x923
L_86926:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movl 0x58(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	movl %r15d,0x58(%rbp)
	movq $0x3,0x60(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x58,%rbp
	leaq (L_86927+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x1294
L_88068:
	addq $0xFFFFFFFFFFFFFD30,%rbp
	movq 0x2D0(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_88069
L_88081:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2D0,%rbp
	leaq (L_88082+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_88082
.p2align 0x4
.long 0x1297
L_88082:
	addq $0xFFFFFFFFFFFFFD30,%rbp
L_88069:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x2D8(%rbp)
	movl $0x1,0x2D0(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x2E0(%rbp)
	movq 0x1B8(%rbp),%r15
	movq %r15,0x2E8(%rbp)
	addq $0x2D0,%rbp
	leaq (L_88070+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp rshift_0
.p2align 0x4
.long 0x868
L_88001:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x28(%rbp),%r14
	movq %r14,0x48(%rbp)
	movq 0x40(%rbp),%r14
	movq %r14,0x50(%rbp)
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_88002+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x124B
L_87859:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	movq 0xE0(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_87860
L_87861:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_87862+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_87862
.p2align 0x4
.long 0x124C
L_87862:
	addq $0xFFFFFFFFFFFFFF20,%rbp
L_87860:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xD0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x27F3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	addq $0x10,%r12
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x79B
L_87822:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq $0x1,0x40(%rbp)
	movq 0x38(%rbp),%r14
	movq %r14,0x48(%rbp)
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_87823+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x5F1
L_86414:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_86415
L_86419:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_86420+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_86420
.p2align 0x4
.long 0x489
L_86420:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_86415:
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0x38(%rbp),%rsi
	movq 0x30(%rbp),%rdi
	xorq %rax,%rax
	call IntInf_equal
L_86416:
	testl %eax,%eax
	jz L_86075
L_86418:
	movq $0x27F1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x51A
L_86224:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_86225
L_86226:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_86227+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_86227
.p2align 0x4
.long 0x488
L_86227:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_86225:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x27F3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x124F
L_86233:
	addq $0xFFFFFFFFFFFFFD68,%rbp
	movq 0x298(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x28(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x2A0(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0x298(%rbp)
	addq $0x298,%rbp
	leaq (L_86234+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_0
.p2align 0x4
.long 0x7B4
L_86372:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x38(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_86373+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x8BD
L_86385:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq $0x3,0x48(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_86372+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x7B4
L_86390:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq $0x1,0x40(%rbp)
L_86391:
	movq 0x38(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_86392+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x8BD
L_86404:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq $0x3,0x58(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x58,%rbp
	leaq (L_86405+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x5F1
L_86330:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_86331
L_86335:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_86336+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_86336
.p2align 0x4
.long 0x489
L_86336:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_86331:
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0x30(%rbp),%rsi
	movq 0x38(%rbp),%rdi
	xorq %rax,%rax
	call IntInf_equal
L_86332:
	testl %eax,%eax
	jz L_86075
L_86334:
	movq $0x1C95,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x27F3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1254
L_86281:
	addq $0xFFFFFFFFFFFFFE60,%rbp
	movq 0x1A0(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq %r15,0x1A0(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x1A8(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x1B0(%rbp)
	addq $0x1A0,%rbp
	leaq (L_86282+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x5F1
L_86269:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_86270
L_86275:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_86276+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_86276
.p2align 0x4
.long 0x489
L_86276:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_86270:
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0x30(%rbp),%rsi
	movq 0x38(%rbp),%rdi
	xorq %rax,%rax
	call IntInf_equal
L_86271:
	testl %eax,%eax
	jnz L_86274
	jmp L_86075
.p2align 0x4
.long 0x7BF
L_86252:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_86253
L_86259:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_86260+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_86260
.p2align 0x4
.long 0x86A
L_86260:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_86253:
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0x40(%rbp),%rsi
	movq 0x38(%rbp),%rdi
	xorq %rax,%rax
	call IntInf_equal
L_86254:
	testl %eax,%eax
	jz L_86075
L_86256:
	movl 0x28(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_86075
L_86257:
	movq $0x1C95,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x27F3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x7B4
L_86195:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_86196
L_86200:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_86201+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_86201
.p2align 0x4
.long 0x5F4
L_86201:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_86196:
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0x40(%rbp),%rsi
	movq 0x38(%rbp),%rdi
	xorq %rax,%rax
	call IntInf_equal
L_86197:
	testl %eax,%eax
	jz L_86075
L_86199:
	movq $0x1E03,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x27F7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x27F5,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	movq %r13,0x0(%rbp)
	addq $0x18,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x8B0
L_86137:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_86138
L_86139:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_86140+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_86140
.p2align 0x4
.long 0x8B1
L_86140:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_86138:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x27F3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x8B0
L_86130:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_86131
L_86132:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_86133+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_86133
.p2align 0x4
.long 0x8B1
L_86133:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_86131:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x27F3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x8B0
L_86123:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_86124
L_86125:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_86126+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_86126
.p2align 0x4
.long 0x8B1
L_86126:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_86124:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x27F3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x8B0
L_86116:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_86117
L_86118:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_86119+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_86119
.p2align 0x4
.long 0x8B1
L_86119:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_86117:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x27F3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x8B0
L_86109:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_86110
L_86111:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_86112+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_86112
.p2align 0x4
.long 0x8B1
L_86112:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_86110:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x27F3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x124B
L_86166:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	movq 0xE0(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_86167
L_86168:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_86169+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_86169
.p2align 0x4
.long 0x124C
L_86169:
	addq $0xFFFFFFFFFFFFFF20,%rbp
L_86167:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xD0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x27F3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x79B
L_86151:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq $0x1,0x40(%rbp)
	movq 0x38(%rbp),%r14
	movq %r14,0x48(%rbp)
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_86152+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x51A
L_86603:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movl 0x38(%rbp),%r15d
	movl %r15d,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_86604
L_86607:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_86608+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_86608
.p2align 0x4
.long 0x5E4
L_86608:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_86604:
	movl 0x30(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_86075
L_86605:
	movq $0x1C99,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x27F3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1267
L_86677:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq %r15,0x30(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_86678+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1266
.p2align 0x4
.long 0x1261
L_86654:
	addq $0xFFFFFFFFFFFFFD30,%rbp
	movq 0x2D0(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq %r15,0x2D0(%rbp)
	movq $0x101,0x2D8(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x2E0(%rbp)
	addq $0x2D0,%rbp
	leaq (L_86655+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x125C
L_86645:
	addq $0xFFFFFFFFFFFFFD30,%rbp
	movq 0x2D0(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq %r15,0x38(%rbp)
	movq 0x2C0(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_86646+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1473
.p2align 0x4
.long 0x920
L_86817:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_86818
L_86819:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_86820+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_86820
.p2align 0x4
.long 0x504
L_86820:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_86818:
	movq $0x27F3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1262
L_86794:
	addq $0xFFFFFFFFFFFFFD30,%rbp
	movq 0x2D0(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_86795
L_86807:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2D0,%rbp
	leaq (L_86808+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_86808
.p2align 0x4
.long 0x1265
L_86808:
	addq $0xFFFFFFFFFFFFFD30,%rbp
L_86795:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xC0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x2D8(%rbp)
	movl $0x0,0x2D0(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x2E0(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0x2E8(%rbp)
	addq $0x2D0,%rbp
	leaq (L_86796+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1479
.p2align 0x4
.long 0x51A
L_86785:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movl 0x38(%rbp),%r15d
	movl %r15d,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_86786
L_86789:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_86790+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_86790
.p2align 0x4
.long 0x5E4
L_86790:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_86786:
	movl 0x30(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_86075
L_86787:
	movq $0x1C99,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x27F3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x6F4
L_87720:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq %r15,0x58(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x58,%rbp
	leaq (L_87721+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x7AA
L_86884:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x28(%rbp),%r14
	movq %r14,0x48(%rbp)
	movq 0x40(%rbp),%r14
	movq %r14,0x50(%rbp)
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_86885+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x1288
L_87455:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq %r15,0x68(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x68,%rbp
	leaq (L_87456+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x6DB
L_87379:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x30(%rbp),%r14
	movq %r14,0x50(%rbp)
	movq 0x48(%rbp),%r14
	movq %r14,0x58(%rbp)
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_87380+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x7A0
L_87252:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq %r15,0x70(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x70,%rbp
	leaq (L_87253+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x7A0
L_87203:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq %r15,0x70(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x70,%rbp
	leaq (L_87204+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x1273
L_87080:
	addq $0xFFFFFFFFFFFFFE70,%rbp
	movsd 0x190(%rbp),%xmm15
	movsd %xmm15,0x28(%rbp)
	movb 0x30(%rbp),%r15b
	movb %r15b,0x190(%rbp)
	addq $0x190,%rbp
	leaq (L_87081+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp setRoundingMode_0
.p2align 0x4
.long 0x1277
L_87127:
	addq $0xFFFFFFFFFFFFFE80,%rbp
	movss 0x180(%rbp),%xmm15
	movss %xmm15,0x28(%rbp)
	leaq L_87143(%rip),%r15
	movq %r15,0x18(%rbp)
	movb 0x30(%rbp),%r15b
	movb %r15b,0x180(%rbp)
	addq $0x180,%rbp
	leaq (L_87128+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp setRoundingMode_0
.p2align 0x4
.long 0x10E6
L_87033:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x50(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_87034+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x10E6
L_86993:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x50(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_86994+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x6F4
L_86927:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq %r15,0x58(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x58,%rbp
	leaq (L_86928+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x1295
L_88070:
	addq $0xFFFFFFFFFFFFFD30,%rbp
	movq 0x2D0(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x2D8(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_88071
L_88079:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2D0,%rbp
	leaq (L_88080+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_88080
.p2align 0x4
.long 0x1296
L_88080:
	addq $0xFFFFFFFFFFFFFD30,%rbp
L_88071:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x2D0(%rbp)
	movq 0x160(%rbp),%r15
	movq %r15,0x2D8(%rbp)
	addq $0x2D0,%rbp
	leaq (L_88072+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toIntInfX_0
.p2align 0x4
.long 0x69B
L_88002:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_88003
L_88004:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_88005+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_88005
.p2align 0x4
.long 0x488
L_88005:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_88003:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x27F3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	addq $0x10,%r12
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x51A
L_87823:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_87824
L_87825:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_87826+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_87826
.p2align 0x4
.long 0x488
L_87826:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_87824:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x27F3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	addq $0x10,%r12
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1250
L_86234:
	addq $0xFFFFFFFFFFFFFD68,%rbp
	movl 0x298(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	testl %r15d,%r15d
	jnz L_410924
L_86235:
	movq (globalObjptr+0x19C8)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (bug_237+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_410924:
L_86239:
	movq 0x38(%rbp),%r15
	movq %r15,%r14
	movq 0x40(%rbp),%r13
	andq %r13,%r14
	andq $0x1,%r14
	jz L_410926
L_86240:
	cmpq %r13,%r15
	jl L_86075
L_86241:
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp zero_1
.p2align 0x4
L_410926:
L_86243:
	movq (c_stackP+0x0)(%rip),%rsp
	movq %r13,%rsi
	movq %r15,%rdi
	xorq %rax,%rax
	call IntInf_compare
L_86244:
	cmpl $0x0,%eax
	jl L_86075
L_86245:
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp zero_1
.p2align 0x4
.long 0xF50
L_86373:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movl 0x60(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	movl %r15d,0x60(%rbp)
	movq $0x3,0x68(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x60,%rbp
	leaq (L_86374+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0xF50
L_86392:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movl 0x60(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	movl %r15d,0x60(%rbp)
	movq $0x3,0x68(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x60,%rbp
	leaq (L_86393+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x693
L_86405:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	jmp L_86391
.p2align 0x4
.long 0x1255
L_86282:
	addq $0xFFFFFFFFFFFFFE60,%rbp
	movq 0x1A0(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x190(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_86283+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_0
.p2align 0x4
.long 0x51A
L_86152:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_86153
L_86154:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_86155+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_86155
.p2align 0x4
.long 0x488
L_86155:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_86153:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x27F3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x920
L_86678:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_86679
L_86680:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_86681+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_86681
.p2align 0x4
.long 0x504
L_86681:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_86679:
	movq $0x27F3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1262
L_86655:
	addq $0xFFFFFFFFFFFFFD30,%rbp
	movq 0x2D0(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_86656
L_86668:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2D0,%rbp
	leaq (L_86669+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_86669
.p2align 0x4
.long 0x1265
L_86669:
	addq $0xFFFFFFFFFFFFFD30,%rbp
L_86656:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xC0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x2D8(%rbp)
	movl $0x0,0x2D0(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x2E0(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0x2E8(%rbp)
	addq $0x2D0,%rbp
	leaq (L_86657+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1479
.p2align 0x4
.long 0x51A
L_86646:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movl 0x38(%rbp),%r15d
	movl %r15d,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_86647
L_86650:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_86651+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_86651
.p2align 0x4
.long 0x5E4
L_86651:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_86647:
	movl 0x30(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_86075
L_86648:
	movq $0x1C99,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x27F3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1263
L_86796:
	addq $0xFFFFFFFFFFFFFD30,%rbp
	movl 0x2D0(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	testl %r15d,%r15d
	jz L_86075
L_86798:
	movq 0x30(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x2D0(%rbp)
	addq $0x2D0,%rbp
	leaq (L_86799+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x90C
L_87721:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_87722
L_87723:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_87724+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_87724
.p2align 0x4
.long 0x90B
L_87724:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_87722:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x27F3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	addq $0x10,%r12
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x69B
L_86885:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_86886
L_86887:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_86888+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_86888
.p2align 0x4
.long 0x488
L_86888:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_86886:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x27F3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	addq $0x10,%r12
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xA96
L_87456:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_87457
L_87458:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_87459+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_87459
.p2align 0x4
.long 0x1289
L_87459:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_87457:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x27F3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	addq $0x10,%r12
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x78B
L_87380:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_87381
L_87382:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_87383+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_87383
.p2align 0x4
.long 0x5F3
L_87383:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_87381:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x27F3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	addq $0x10,%r12
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x79A
L_87253:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_87254
L_87255:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_87256+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_87256
.p2align 0x4
.long 0x127D
L_87256:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_87254:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x27F3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	addq $0x10,%r12
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x79A
L_87204:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_87205
L_87206:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_87207+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_87207
.p2align 0x4
.long 0x127D
L_87207:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_87205:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x27F3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	addq $0x10,%r12
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1273
L_87081:
	addq $0xFFFFFFFFFFFFFE70,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_87082
L_87094:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x190,%rbp
	leaq (L_87095+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_87095
.p2align 0x4
.long 0x1274
L_87095:
	addq $0xFFFFFFFFFFFFFE70,%rbp
L_87082:
	movsd 0x28(%rbp),%xmm15
	movsd 0x38(%rbp),%xmm14
	ucomisd %xmm15,%xmm14
	setnp %al
	movzbl %al,%eax
	setc %bl
	movzbl %bl,%ebx
	andl %eax,%ebx
	jnz L_410944
L_87083:
	ucomisd %xmm14,%xmm15
	setnp %al
	movzbl %al,%eax
	setc %bl
	movzbl %bl,%ebx
	andl %eax,%ebx
	jnz L_410943
L_87084:
	ucomisd %xmm15,%xmm14
	setnp %al
	movzbl %al,%eax
	setz %bl
	movzbl %bl,%ebx
	andl %eax,%ebx
	jnz L_410942
L_87085:
	xorb %dl,%dl
L_87086:
	cmpb $0x2,%dl
	jne L_86075
L_87088:
	movsd 0x38(%rbp),%xmm15
	movd %xmm15,%r15
	movq 0x180(%rbp),%r14
	movq 0x10(%r14),%r13
	andq %r13,%r15
	cmpq %r15,%r13
	sete %al
	movzbl %al,%eax
	movsd 0x28(%rbp),%xmm14
	movd %xmm14,%r15
	andq %r13,%r15
	cmpq %r15,%r13
	sete %bl
	movzbl %bl,%ebx
	cmpl %eax,%ebx
	jne L_86075
L_87090:
	movq $0x1C8F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movsd %xmm15,%xmm14
	movsd %xmm14,0x0(%r15)
real_11:
	movq $0x1C97,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x27F3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	addq $0x10,%r12
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_410942:
L_87091:
	movb $0x2,%dl
	jmp L_87086
.p2align 0x4
L_410943:
L_87092:
	movb $0x1,%dl
	jmp L_87086
.p2align 0x4
L_410944:
L_87093:
	movb $0x3,%dl
	jmp L_87086
.p2align 0x4
.long 0x1277
L_87128:
	addq $0xFFFFFFFFFFFFFE80,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_87129
L_87141:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x180,%rbp
	leaq (L_87142+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_87142
.p2align 0x4
.long 0x1278
L_87142:
	addq $0xFFFFFFFFFFFFFE80,%rbp
L_87129:
	movss 0x28(%rbp),%xmm15
	movss 0x34(%rbp),%xmm14
	ucomiss %xmm15,%xmm14
	setnp %al
	movzbl %al,%eax
	setc %bl
	movzbl %bl,%ebx
	andl %eax,%ebx
	jnz L_410950
L_87130:
	ucomiss %xmm14,%xmm15
	setnp %al
	movzbl %al,%eax
	setc %bl
	movzbl %bl,%ebx
	andl %eax,%ebx
	jnz L_410949
L_87131:
	ucomiss %xmm14,%xmm15
	setnp %al
	movzbl %al,%eax
	setz %bl
	movzbl %bl,%ebx
	andl %eax,%ebx
	jnz L_410948
L_87132:
	xorb %dl,%dl
L_87133:
	cmpb $0x2,%dl
	jne L_86075
L_87135:
	movss 0x34(%rbp),%xmm15
	movd %xmm15,%r14d
	movq 0x170(%rbp),%r13
	movl 0xC(%r13),%r11d
	andl %r11d,%r14d
	cmpl %r11d,%r14d
	sete %al
	movzbl %al,%eax
	movss 0x28(%rbp),%xmm14
	movd %xmm14,%r14d
	andl %r11d,%r14d
	cmpl %r11d,%r14d
	sete %bl
	movzbl %bl,%ebx
	cmpl %eax,%ebx
	jne L_86075
L_87137:
	movd %xmm15,%r14d
	movl %r14d,%r15d
	shlq $0x1,%r15
	orq $0x1,%r15
	jmp real_11
.p2align 0x4
L_410948:
L_87138:
	movb $0x2,%dl
	jmp L_87133
.p2align 0x4
L_410949:
L_87139:
	movb $0x1,%dl
	jmp L_87133
.p2align 0x4
L_410950:
L_87140:
	movb $0x3,%dl
	jmp L_87133
.p2align 0x4
.long 0xDDE
L_87034:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movl 0x50(%rbp),%r15d
	movl %r15d,0x48(%rbp)
	movl %r15d,0x50(%rbp)
	movq $0x3,0x58(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x50,%rbp
	leaq (L_87035+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0xDDE
L_86994:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movl 0x50(%rbp),%r15d
	movl %r15d,0x48(%rbp)
	movl %r15d,0x50(%rbp)
	movq $0x3,0x58(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x50,%rbp
	leaq (L_86995+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x90C
L_86928:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_86929
L_86930:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_86931+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_86931
.p2align 0x4
.long 0x90B
L_86931:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_86929:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x27F3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	addq $0x10,%r12
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x125C
L_88072:
	addq $0xFFFFFFFFFFFFFD30,%rbp
	movq 0x2D0(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq %r15,0x38(%rbp)
	movq 0x2C0(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_88073+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1473
.p2align 0x4
.long 0x920
bug_237:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_86236
L_86237:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_86238+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_86238
.p2align 0x4
.long 0x504
L_86238:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_86236:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x8BE
L_86374:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x40(%rbp),%r14
	movq %r14,0x48(%rbp)
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_86375+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x8BE
L_86393:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x40(%rbp),%r14
	movq %r14,0x48(%rbp)
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_86394+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0xF4E
L_86283:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movl 0x60(%rbp),%r15d
	movl %r15d,0x58(%rbp)
	testl %r15d,%r15d
	jnz L_410954
L_86284:
	movq (globalObjptr+0x1988)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (bug_238+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_410954:
L_86288:
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x58,%rbp
	leaq (L_86289+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigRem_0
.p2align 0x4
.long 0x1263
L_86657:
	addq $0xFFFFFFFFFFFFFD30,%rbp
	movl 0x2D0(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	testl %r15d,%r15d
	jz L_86075
L_86659:
	movq 0x30(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x2D0(%rbp)
	addq $0x2D0,%rbp
	leaq (L_86660+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x1264
L_86799:
	addq $0xFFFFFFFFFFFFFD30,%rbp
	movl 0x2D0(%rbp),%r15d
	movl %r15d,0x30(%rbp)
	movl %r15d,0x2D0(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x2D8(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x2E0(%rbp)
	addq $0x2D0,%rbp
	leaq (L_86800+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x7AA
L_87035:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x28(%rbp),%r14
	movq %r14,0x48(%rbp)
	movq 0x40(%rbp),%r14
	movq %r14,0x50(%rbp)
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_87036+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x7AA
L_86995:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x28(%rbp),%r14
	movq %r14,0x48(%rbp)
	movq 0x40(%rbp),%r14
	movq %r14,0x50(%rbp)
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_86996+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x51A
L_88073:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movl 0x38(%rbp),%r15d
	movl %r15d,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_88074
L_88077:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_88078+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_88078
.p2align 0x4
.long 0x5E4
L_88078:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_88074:
	movl 0x30(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_86075
L_88075:
	movq $0x1C99,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x27F3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x5F1
L_86375:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_86376+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_0
.p2align 0x4
.long 0x5F1
L_86394:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_86395+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_0
.p2align 0x4
.long 0x920
bug_238:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_86285
L_86286:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_86287+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_86287
.p2align 0x4
.long 0x504
L_86287:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_86285:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x9F3
L_86289:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x40(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_86290+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x1264
L_86660:
	addq $0xFFFFFFFFFFFFFD30,%rbp
	movl 0x2D0(%rbp),%r15d
	movl %r15d,0x30(%rbp)
	movl %r15d,0x2D0(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x2D8(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x2E0(%rbp)
	addq $0x2D0,%rbp
	leaq (L_86661+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x125C
L_86800:
	addq $0xFFFFFFFFFFFFFD30,%rbp
	movq 0x2D0(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq %r15,0x38(%rbp)
	movq 0x2C0(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_86801+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1473
.p2align 0x4
.long 0x69B
L_87036:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_87037
L_87038:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_87039+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_87039
.p2align 0x4
.long 0x488
L_87039:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_87037:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x27F3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	addq $0x10,%r12
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x69B
L_86996:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_86997
L_86998:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_86999+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_86999
.p2align 0x4
.long 0x488
L_86999:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_86997:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x27F3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	addq $0x10,%r12
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x79B
L_86376:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movl 0x48(%rbp),%r15d
	movl %r15d,0x30(%rbp)
	testl %r15d,%r15d
	jz L_86075
L_86378:
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%rsi
	movq 0x38(%rbp),%rdi
	xorq %rax,%rax
	call IntInf_equal
L_86379:
	testl %eax,%eax
	jnz L_86143
	jmp L_86075
.p2align 0x4
.long 0x79B
L_86395:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movl 0x48(%rbp),%r15d
	movl %r15d,0x30(%rbp)
	testl %r15d,%r15d
	jz L_86075
L_86397:
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%rsi
	movq 0x38(%rbp),%rdi
	xorq %rax,%rax
	call IntInf_equal
L_86398:
	testl %eax,%eax
	jnz L_86143
	jmp L_86075
.p2align 0x4
.long 0x7C4
L_86290:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movl 0x60(%rbp),%r15d
	movl %r15d,0x40(%rbp)
	movl %r15d,0x60(%rbp)
	movq $0x3,0x68(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x60,%rbp
	leaq (L_86291+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x125C
L_86661:
	addq $0xFFFFFFFFFFFFFD30,%rbp
	movq 0x2D0(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq %r15,0x38(%rbp)
	movq 0x2C0(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_86662+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1473
.p2align 0x4
.long 0x51A
L_86801:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movl 0x38(%rbp),%r15d
	movl %r15d,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_86802
L_86805:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_86806+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_86806
.p2align 0x4
.long 0x5E4
L_86806:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_86802:
	movl 0x30(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_86075
L_86803:
	movq $0x1C99,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x27F3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1256
L_86291:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq %r15,0x40(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_86292+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x51A
L_86662:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movl 0x38(%rbp),%r15d
	movl %r15d,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_86663
L_86666:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_86667+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_86667
.p2align 0x4
.long 0x5E4
L_86667:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_86663:
	movl 0x30(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_86075
L_86664:
	movq $0x1C99,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x27F3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x69B
L_86292:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_86293
L_86296:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_86297+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_86297
.p2align 0x4
.long 0x488
L_86297:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_86293:
	cmpq $0x1,0x28(%rbp)
	jne L_86075
L_86295:
	movq $0x27F1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
