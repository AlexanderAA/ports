/* MLton 20130715 (built Mon Jun 13 11:54:01 AEST 2016 on ports.extensibl.com) */
/*   created this file on Mon Jun 13 12:10:23 2016. */
/* Do not edit this file. */
/* Flag settings:  */
/*    align: 8 */
/*    atMLtons: (mlton-compile, @MLton, --) */
/*    chunk: chunk per function */
/*    closureConvertGlobalize: true */
/*    closureConvertShrink: true */
/*    codegen: amd64 */
/*    contifyIntoMain: false */
/*    debug: false */
/*    defaultChar: char8 */
/*    defaultWideChar: widechar32 */
/*    defaultInt: int32 */
/*    defaultReal: real64 */
/*    defaultWord: word32 */
/*    diag passes: [] */
/*    drop passes: [] */
/*    elaborate allowConstant (default): false */
/*    elaborate allowConstant (enabled): true */
/*    elaborate allowFFI (default): false */
/*    elaborate allowFFI (enabled): true */
/*    elaborate allowPrim (default): false */
/*    elaborate allowPrim (enabled): true */
/*    elaborate allowOverload (default): false */
/*    elaborate allowOverload (enabled): true */
/*    elaborate allowRebindEquals (default): false */
/*    elaborate allowRebindEquals (enabled): true */
/*    elaborate deadCode (default): false */
/*    elaborate deadCode (enabled): true */
/*    elaborate forceUsed (default): false */
/*    elaborate forceUsed (enabled): true */
/*    elaborate ffiStr (default):  */
/*    elaborate ffiStr (enabled): true */
/*    elaborate nonexhaustiveExnMatch (default): default */
/*    elaborate nonexhaustiveExnMatch (enabled): true */
/*    elaborate nonexhaustiveMatch (default): warn */
/*    elaborate nonexhaustiveMatch (enabled): true */
/*    elaborate redundantMatch (default): warn */
/*    elaborate redundantMatch (enabled): true */
/*    elaborate resolveScope (default): strdec */
/*    elaborate resolveScope (enabled): true */
/*    elaborate sequenceNonUnit (default): warn */
/*    elaborate sequenceNonUnit (enabled): true */
/*    elaborate warnUnused (default): true */
/*    elaborate warnUnused (enabled): true */
/*    elaborate only: false */
/*    emit main: true */
/*    export header: None */
/*    exn history: false */
/*    generated output format: executable */
/*    gc check: Limit */
/*    indentation: 3 */
/*    inlineIntoMain: true */
/*    inlineLeafA: {loops = true, repeat = true, size = Some 20} */
/*    inlineLeafB: {loops = true, repeat = true, size = Some 40} */
/*    inlineNonRec: {small = 60, product = 320} */
/*    input file: mlton */
/*    keep CoreML: false */
/*    keep def use: true */
/*    keep dot: false */
/*    keep Machine: false */
/*    keep passes: [] */
/*    keep RSSA: false */
/*    keep SSA: false */
/*    keep SSA2: false */
/*    keep SXML: false */
/*    keep XML: false */
/*    extra_: false */
/*    lib dir: /usr/ports/pobj/mlton-20130715/mlton-on-20130715-release/build/lib */
/*    lib target dir: /usr/ports/pobj/mlton-20130715/mlton-on-20130715-release/build/lib/targets/self */
/*    loop passes: 1 */
/*    mark cards: true */
/*    max function size: 10000 */
/*    mlb path vars: [{var = MLTON_ROOT, path = $(LIB_MLTON_DIR)/sml}, {var = SML_LIB, path = $(LIB_MLTON_DIR)/sml}] */
/*    native commented: 0 */
/*    native live stack: false */
/*    native optimize: 1 */
/*    native move hoist: true */
/*    native copy prop: true */
/*    native copy prop cutoff: 1000 */
/*    native cutoff: 100 */
/*    native live transfer: 8 */
/*    native shuffle: true */
/*    native ieee fp: false */
/*    native split: Some 20000 */
/*    optimizationPasses: [<ssa2::default>, <ssa::default>, <sxml::default>, <xml::default>] */
/*    polyvariance: Some {hofo = true, rounds = 2, small = 30, product = 300} */
/*    prefer abs paths: false */
/*    prof passes: [] */
/*    profile: None */
/*    profile branch: false */
/*    profile C: [] */
/*    profile IL: ProfileSource */
/*    profile include/exclude: [(Seq [Star [.], Or [Seq [Seq [[$], [(], [S], [M], [L], [_], [L], [I], [B], [)]]]], Star [.]], false)] */
/*    profile raise: false */
/*    profile stack: false */
/*    profile val: false */
/*    show basis: None */
/*    show def-use: None */
/*    show types: true */
/*    target: self */
/*    target arch: AMD64 */
/*    target OS: OpenBSD */
/*    type check: false */
/*    verbosity: Pass */
/*    warn unrecognized annotation: true */
/*    warn deprecated features: true */
/*    zone cut depth: 100 */
.text
.p2align 0x4
.globl x_2069
.hidden x_2069
x_2069:
L_270235:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_270236
L_270239:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_270240+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_270240
.p2align 0x4
.long 0x451
L_270240:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_270236:
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x22C4,%r14
	je L_490564
L_270238:
	movq 0x10(%r15),%r14
	movq %r14,0x8(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%r15),%r14
	movq 0x18(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x18(%rbp)
	jmp x_2044
.p2align 0x4
L_490564:
L_270237:
	movq 0x10(%r15),%r14
	movq %r14,0x8(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%r15),%r14
	movq 0x18(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x18(%rbp)
	jmp x_2045
.text
.p2align 0x4
.globl x_2044
.hidden x_2044
x_2044:
L_270241:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_270242
L_270254:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_270255+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_270255
.p2align 0x4
.long 0x4AE
L_270255:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_270242:
	movq 0x0(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_270243+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2066
.p2align 0x4
.long 0x5EF
L_270243:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_270244
L_270252:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_270253+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_270253
.p2align 0x4
.long 0x637
L_270253:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_270244:
	movq $0x145,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x30(%rbp)
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x8(%rbp),%r15
	cmpq $0x1,%r15
	je L_490567
L_270245:
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_270246+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2069
.p2align 0x4
L_490567:
L_270251:
	movq $0x1,%r14
	xchgq %r14,%r15
L_270248:
	movq $0x1C19,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movb $0x0,%r13b
	movzbl %r13b,%r11d
	movl %r11d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x30(%rbp),%r13
	movq %r13,0x8(%r14)
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq 0x10(%rbp),%r11
	movq %r11,0x0(%r13)
	movq 0x18(%rbp),%r11
	movq %r11,0x8(%r13)
	movq $0x13D,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r14,0x8(%r11)
	addq $0x18,%r12
	movq $0x270B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r11,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x0(%rbp)
	addq $0x18,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x652
L_270246:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_270247
L_270249:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_270250+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_270250
.p2align 0x4
.long 0x653
L_270250:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_270247:
	movq 0x20(%rbp),%r15
	jmp L_270248
.text
.p2align 0x4
.globl x_2075
.hidden x_2075
x_2075:
L_270256:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_270257
L_270277:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_270278+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_270278
.p2align 0x4
.long 0x45F
L_270278:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_270257:
	movq 0x0(%rbp),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_270258+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2034
.p2align 0x4
.long 0x521
L_270258:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_270259
L_270275:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_270276+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_270276
.p2align 0x4
.long 0x4E7
L_270276:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_270259:
	movq $0x13D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x20(%rbp)
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x22DC,%r14
	je L_490571
L_270270:
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_270271+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2075
.p2align 0x4
L_490571:
L_270260:
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	addq $0x30,%rbp
	leaq (L_270261+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2034
.p2align 0x4
.long 0x459
L_270271:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_270272
L_270273:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_270274+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_270274
.p2align 0x4
.long 0x508
L_270274:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_270272:
	movq 0x28(%rbp),%r15
L_270265:
	movq $0x270B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x2
L_270261:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_270262
L_270268:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_270269+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_270269
.p2align 0x4
.long 0x51F
L_270269:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_270262:
	movq $0x13D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x30(%rbp)
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_270263+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2034
.p2align 0x4
.long 0x7B3
L_270263:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_270264
L_270266:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_270267+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_270267
.p2align 0x4
.long 0x5EE
L_270267:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_270264:
	movq $0x13D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x270B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x270B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_270265
.text
.p2align 0x4
.globl x_2071
.hidden x_2071
x_2071:
L_270279:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x18(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_271155
L_270280:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_490679
L_270281:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x22E8,%r15
	je L_490668
L_270379:
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%rax
	shrq $0x1,%rax
	subq $0x22EB,%rax
	cmpq $0x9,%rax
	ja L_490576
	leaq jumpTable_758(%rip),%rbx
	jmp *(%rbx,%rax,8)
.data
.p2align 0x4
jumpTable_758:
.quad L_490665,L_490620,L_490616,L_490615,L_490611,L_490607,L_490605,L_490596,L_490588,L_490582
.text
.p2align 0x4
L_490576:
L_270380:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r11
	movq %r11,0x30(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x233F,%r15
	je L_490581
L_270431:
	movq 0x18(%r14),%r15
	movq 0x10(%r14),%r13
	movq 0x8(%r14),%r11
	movq 0x0(%r14),%r10
	cmpq $0x1,%r15
	je L_490580
L_270432:
	movq %r15,0x38(%rbp)
	movq %r10,%r15
	movq %r11,%r14
L_270433:
	movq 0x38(%rbp),%r11
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r10
	movl %r10d,%r9d
	movslq %r9d,%r8
	cmpq %r10,%r8
	jne L_490579
L_270435:
	cmpl $0x1,%r9d
	jng L_490578
L_270448:
	cmpq $0x1,%r10
	jna L_490577
L_270450:
	cmpb $0x27,0x1(%r11)
	sete %al
	movzbl %al,%eax
	movl %eax,0x40(%rbp)
L_270437:
	movq %r15,0x58(%rbp)
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x48(%rbp)
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	leaq L_270447(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x58,%rbp
	leaq (L_270438+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_490577:
L_270449:
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_490578:
L_270436:
	movl $0x0,0x40(%rbp)
	jmp L_270437
.p2align 0x4
L_490579:
L_270434:
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_490580:
L_270451:
	movq (globalObjptr+0x109B8)(%rip),%r9
	movq %r9,0x38(%rbp)
	movq %r10,%r15
	movq %r11,%r14
	jmp L_270433
.p2align 0x4
L_490581:
L_270381:
	movq 0x8(%r14),%r15
	movq %r15,0x40(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_270382+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2077
.p2align 0x4
L_490582:
L_271038:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r11
	movq %r11,0x30(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x233F,%r15
	je L_490587
L_271131:
	movq 0x18(%r14),%r15
	movq 0x10(%r14),%r13
	movq 0x8(%r14),%r11
	movq 0x0(%r14),%r10
	cmpq $0x1,%r15
	je L_490586
L_271132:
	movq %r15,0x38(%rbp)
	movq %r10,%r15
	movq %r11,%r14
L_271133:
	movq 0x38(%rbp),%r11
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r10
	movl %r10d,%r9d
	movslq %r9d,%r8
	cmpq %r8,%r10
	jne L_490585
L_271135:
	cmpl $0x1,%r9d
	jng L_490584
L_271151:
	cmpq $0x1,%r10
	jna L_490583
L_271153:
	cmpb $0x27,0x1(%r11)
	sete %al
	movzbl %al,%eax
	movl %eax,0x40(%rbp)
L_271137:
	movq %r15,0x58(%rbp)
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x48(%rbp)
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	leaq L_271150(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x58,%rbp
	leaq (L_271138+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_490583:
L_271152:
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_490584:
L_271136:
	movl $0x0,0x40(%rbp)
	jmp L_271137
.p2align 0x4
L_490585:
L_271134:
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_490586:
L_271154:
	movq (globalObjptr+0x109B8)(%rip),%r9
	movq %r9,0x38(%rbp)
	movq %r10,%r15
	movq %r11,%r14
	jmp L_271133
.p2align 0x4
L_490587:
L_271039:
	movq 0x8(%r14),%r15
	movq %r15,0x40(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_271040+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2077
.p2align 0x4
L_490588:
L_270979:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	movq %r13,%r15
	shrq $0x1,%r15
	cmpq $0x2304,%r15
	je L_490595
L_271003:
	movq 0x10(%r14),%r11
	movq %r11,%r15
	movq 0x8(%r14),%r10
	movq %r10,0x30(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x38(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x2306,%r14
	je L_490593
L_271035:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x2353,%r15
	je L_490592
L_271037:
	movq 0x10(%r14),%r15
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r13,0x8(%r14)
	addq $0x18,%r12
	movq %r14,%r15
	movq %r11,%r14
L_271008:
	movq $0x141,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x40(%rbp)
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x30(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_490591
L_271009:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x2309,%r15
	je L_490590
	cmpq $0x230A,%r15
	je L_490589
L_271010:
	movq 0x10(%r14),%r15
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq $0x395,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r13,0x8(%r14)
	movq %r11,0x10(%r14)
	movq %r14,0x60(%rbp)
	addq $0x20,%r12
	addq $0x60,%rbp
	leaq (L_271011+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2053
.p2align 0x4
L_490589:
L_271026:
	movq 0x8(%r14),%r15
	movq %r15,0x60(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_271027+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2078
.p2align 0x4
L_490590:
L_271021:
	movq 0x8(%r14),%r15
	movq %r15,0x60(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_271022+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2078
.p2align 0x4
L_490591:
L_271031:
	movq (globalObjptr+0x25E0)(%rip),%r15
L_271013:
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x48(%rbp),%r13
	movq %r13,0x8(%r14)
	movq $0x10C3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x30(%rbp)
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	leaq L_271018(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x40(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_271014+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2020
.p2align 0x4
L_490592:
L_271036:
	movq 0x8(%r14),%r15
	movq %r15,0x48(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_271006+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2060
.p2align 0x4
L_490593:
L_271004:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x2353,%r15
	je L_490594
L_271034:
	movq 0x10(%r14),%r15
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r13,0x8(%r14)
	addq $0x18,%r12
	movq %r14,%r15
	movq %r11,%r14
	jmp L_271008
.p2align 0x4
L_490594:
L_271005:
	movq 0x8(%r14),%r15
	movq %r15,0x48(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_271006+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2060
.p2align 0x4
L_490595:
L_270980:
	movq 0x8(%r14),%r15
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_270981+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2079
.p2align 0x4
L_490596:
L_270904:
	movq 0x18(%r15),%r14
	movq 0x10(%r15),%r10
	movq %r10,0x30(%rbp)
	movq 0x8(%r15),%r11
	movq %r11,0x38(%rbp)
	movq 0x0(%r15),%r10
	movq %r10,0x40(%rbp)
	cmpq $0x1,%r14
	je L_490602
L_270905:
	movq 0x20(%r14),%r15
	movq 0x18(%r14),%r13
	movq 0x10(%r14),%r10
	movq 0x8(%r14),%r9
	movq 0x0(%r14),%r8
	movq %r8,0x48(%rbp)
	cmpq $0x1,%r15
	je L_490601
L_270906:
	movb 0x4(%r15),%dl
	movl 0x0(%r15),%ecx
	movq 0x8(%r15),%r11
	movq %r9,%r15
	movq %r10,%r14
L_270907:
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r10
	movl %r10d,%r9d
	movslq %r9d,%r8
	cmpq %r8,%r10
	jne L_490600
L_270909:
	cmpl $0x1,%r9d
	jne L_270911
L_270965:
	testl %ecx,%ecx
	jnz L_270911
L_270966:
	cmpb $0x1,%dl
	jne L_490597
L_270968:
	movq %r11,0x50(%rbp)
	movq %r13,0x58(%rbp)
	leaq L_270964(%rip),%r13
	movq %r13,0x10(%rbp)
	movq %rbp,%r13
	addq $0x18,%r13
	subq (gcState+0x560)(%rip),%r13
	movq %r13,(gcState+0x20)(%rip)
	addq $0x50,%rbp
	leaq (x_888+0x0)(%rip),%r13
	movq %r13,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1206
.p2align 0x4
L_490597:
L_270911:
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x50(%rbp)
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	leaq L_270964(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x109F0)(%rip),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_270912+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_490600:
L_270908:
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_490601:
L_270975:
	movb $0x1,%dl
	xorl %ecx,%ecx
	movq (globalObjptr+0xD808)(%rip),%r11
	movq %r9,%r15
	movq %r10,%r14
	jmp L_270907
.p2align 0x4
L_490602:
L_270976:
	movq 0x30(%rbp),%r10
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r15
	shrq $0x1,%r15
	cmpq $0x2335,%r15
	je L_490603
L_270978:
	movq 0x10(%r10),%r13
	movq 0x8(%r10),%r14
	movq 0x0(%r10),%r11
	xorq %r15,%r15
x_887:
	movq %r15,0x30(%rbp)
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq %r11,%r14
	movq %r15,%r13
L_270923:
	movq $0x141,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x48(%rbp)
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x38(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_270924+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2053
.p2align 0x4
L_490603:
L_270977:
	movq 0x0(%r10),%r15
	movq $0x0,0x30(%rbp)
x_886:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x2353,%r14
	je L_490604
L_270959:
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq %r11,%r14
	movq %r15,%r13
	jmp L_270923
.p2align 0x4
L_490604:
L_270920:
	movq 0x8(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x50,%rbp
	leaq (L_270921+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2060
.p2align 0x4
L_490605:
L_270836:
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x8(%r15),%r14
	movq 0x18(%r14),%r13
	movq %r13,0x38(%rbp)
	movq 0x10(%r14),%r13
	movq %r13,0x40(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x48(%rbp)
	movq 0x0(%r14),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x22FB,%r15
	je L_490606
L_270899:
	movq 0x10(%r13),%r15
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r11
	movq $0x3C1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	movq %r11,0x10(%r13)
	movq %r13,0x58(%rbp)
	addq $0x20,%r12
	addq $0x58,%rbp
	leaq (L_270900+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2080
.p2align 0x4
L_490606:
L_270837:
	movq 0x8(%r13),%r15
	movq %r15,0x58(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_270838+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2081
.p2align 0x4
L_490607:
L_270747:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x230B,%r15
	je L_490610
L_270772:
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x230D,%r14
	je L_490608
L_270832:
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_270833+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2082
.p2align 0x4
L_490608:
L_270773:
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq %r13,0x30(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x38(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x2317,%r15
	je L_490609
L_270825:
	movq 0x10(%r14),%r15
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq $0x3B3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r13,0x8(%r14)
	movq %r11,0x10(%r14)
	movq %r14,0x48(%rbp)
	addq $0x20,%r12
	addq $0x48,%rbp
	leaq (L_270826+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2051
.p2align 0x4
L_490609:
L_270774:
	movq 0x8(%r14),%r15
	movq %r15,0x48(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_270775+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2052
.p2align 0x4
L_490610:
L_270748:
	movq 0x8(%r14),%r15
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_270749+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2083
.p2align 0x4
L_490611:
L_270699:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x22B6,%r15
	je L_490612
L_270738:
	movq 0x10(%r14),%r15
	movq %r15,0x38(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x40(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x48(%rbp)
	addq $0x38,%rbp
	leaq (L_270739+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2084
.p2align 0x4
L_490612:
L_270700:
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x22B8,%r14
	je L_490614
L_270735:
	movq 0x0(%r15),%r14
	movq %r14,%r15
.p2align 0x4,,0x7
loop_3177:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x22B8,%r14
	je L_490613
L_270737:
	movq 0x0(%r15),%r15
	jmp loop_3177
.p2align 0x4
L_490613:
L_270736:
	movq 0x10(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	addq $0x38,%rbp
	leaq (L_270702+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2085
.p2align 0x4
L_490614:
L_270701:
	movq 0x10(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	addq $0x38,%rbp
	leaq (L_270702+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2085
.p2align 0x4
L_490615:
L_270676:
	movq 0x10(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	addq $0x48,%rbp
	leaq (L_270677+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2086
.p2align 0x4
L_490616:
L_270618:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x22F9,%r15
	je L_490619
L_270642:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq %r13,0x30(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x2328,%r14
	je L_490617
L_270675:
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq $0x20E7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	movq %r11,0x8(%r14)
	addq $0x18,%r12
L_270659:
	movq %r14,0x38(%rbp)
	movq %r15,0x40(%rbp)
	leaq L_270664(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x30(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x38,%rbp
	leaq (L_270660+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromSymbols_0
.p2align 0x4
L_490617:
L_270643:
	movq 0x18(%r15),%r14
	movq 0x10(%r15),%r13
	movq %r13,0x38(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x40(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x48(%rbp)
	cmpq $0x1,%r14
	jne L_490618
L_270674:
	movq (globalObjptr+0xCA28)(%rip),%r14
	movq %r14,%r15
L_270645:
	movq %r15,0x60(%rbp)
	leaq L_270673(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movb $0x2E,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_270646+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp split_0
.p2align 0x4
L_490618:
	movq %r14,%r15
	jmp L_270645
.p2align 0x4
L_490619:
L_270619:
	movq 0x8(%r14),%r15
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_270620+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2087
.p2align 0x4
L_490620:
L_270513:
	movq 0x8(%r15),%r11
	movq %r11,%r14
	movq 0x0(%r15),%r10
	movq %r10,0x30(%rbp)
	cmpq $0x1,%r14
	je L_490663
	cmpq $0x2,%r14
	je L_490661
	cmpq $0x3,%r14
	je L_490632
L_270514:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x22F7,%r15
	je L_490626
L_270578:
	movq 0x20(%r14),%r15
	movq 0x18(%r14),%r13
	movq 0x10(%r14),%r10
	movq 0x8(%r14),%r9
	movq 0x0(%r14),%r8
	movq %r8,0x38(%rbp)
	cmpq $0x1,%r15
	je L_490625
L_270579:
	movb 0x4(%r15),%dl
	movl 0x0(%r15),%ecx
	movq 0x8(%r15),%r11
	movq %r9,%r15
	movq %r10,%r14
L_270580:
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r10
	movl %r10d,%r9d
	movslq %r9d,%r8
	cmpq %r10,%r8
	jne L_490624
L_270582:
	cmpl $0x1,%r9d
	jne L_270584
L_270598:
	testl %ecx,%ecx
	jnz L_270584
L_270599:
	cmpb $0x1,%dl
	jne L_490621
L_270601:
	movq %r11,0x40(%rbp)
	movq %r13,0x48(%rbp)
	leaq L_270597(%rip),%r13
	movq %r13,0x10(%rbp)
	movq %rbp,%r13
	addq $0x18,%r13
	subq (gcState+0x560)(%rip),%r13
	movq %r13,(gcState+0x20)(%rip)
	addq $0x40,%rbp
	leaq (x_884+0x0)(%rip),%r13
	movq %r13,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1206
.p2align 0x4
L_490621:
L_270584:
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x40(%rbp)
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	leaq L_270597(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x109F0)(%rip),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_270585+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_490624:
L_270581:
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_490625:
L_270608:
	movb $0x1,%dl
	xorl %ecx,%ecx
	movq (globalObjptr+0xD808)(%rip),%r11
	movq %r9,%r15
	movq %r10,%r14
	jmp L_270580
.p2align 0x4
L_490626:
L_270515:
	movq 0x20(%r14),%r15
	movq 0x18(%r14),%r13
	movq 0x10(%r14),%r10
	movq 0x8(%r14),%r9
	movq 0x0(%r14),%r8
	movq %r8,0x38(%rbp)
	cmpq $0x1,%r15
	je L_490631
L_270516:
	movb 0x4(%r15),%dl
	movl 0x0(%r15),%ecx
	movq 0x8(%r15),%r11
	movq %r9,%r15
	movq %r10,%r14
L_270517:
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r10
	movl %r10d,%r9d
	movslq %r9d,%r8
	cmpq %r10,%r8
	jne L_490630
L_270519:
	cmpl $0x1,%r9d
	jne L_270521
L_270567:
	testl %ecx,%ecx
	jnz L_270521
L_270568:
	cmpb $0x1,%dl
	jne L_490627
L_270570:
	movq %r11,0x40(%rbp)
	movq %r13,0x48(%rbp)
	leaq L_270566(%rip),%r13
	movq %r13,0x10(%rbp)
	movq %rbp,%r13
	addq $0x18,%r13
	subq (gcState+0x560)(%rip),%r13
	movq %r13,(gcState+0x20)(%rip)
	addq $0x40,%rbp
	leaq (x_883+0x0)(%rip),%r13
	movq %r13,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1206
.p2align 0x4
L_490627:
L_270521:
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x40(%rbp)
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	leaq L_270566(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x109F0)(%rip),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_270522+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_490630:
L_270518:
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_490631:
L_270577:
	movb $0x1,%dl
	xorl %ecx,%ecx
	movq (globalObjptr+0xD808)(%rip),%r11
	movq %r9,%r15
	movq %r10,%r14
	jmp L_270517
.p2align 0x4
L_490632:
L_270615:
	movq 0x30(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x2333,%r14
	je L_490660
L_270617:
	movq 0x0(%r15),%r14
	movq (globalObjptr+0x2640)(%rip),%r13
	movq %r13,0x30(%rbp)
	movq %r14,%r15
x_882:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x2335,%r14
	je L_490658
L_270562:
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq %r11,%r14
L_270558:
	movq $0x141,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq $0x24D3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x1,%r11
	movq 0x30(%rbp),%r14
	xorl %ecx,%ecx
	movq %r15,%r13
	movq %r11,%r15
.p2align 0x4,,0x7
L_270533:
	incl %ecx
	jo L_490657
L_270535:
	cmpq $0x1,%r15
	je L_490633
L_270536:
	movq 0x8(%r15),%r15
	jmp L_270533
.p2align 0x4
L_490633:
L_270537:
	movq %r14,0x30(%rbp)
	movq %r13,0x38(%rbp)
L_270538:
	movslq %ecx,%rdx
	movq %rdx,0x40(%rbp)
	testq %rdx,%rdx
	jz L_490656
L_270539:
	cmpq $0x7FFFFFFF,%rdx
	ja L_490655
L_270540:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x157F,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_270541+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_270541
.p2align 0x4
.long 0x2CEA
L_270541:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq %rax,0x48(%rbp)
L_270542:
	movq 0x38(%rbp),%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3172:
	cmpq 0x40(%rbp),%r15
	jnl L_490635
L_270547:
	cmpq $0x1,%r14
	je L_490634
L_270548:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq 0x48(%rbp),%r11
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r13,0x0(%r11,%r15,8)
	incq %r15
	jmp loop_3172
.p2align 0x4
L_490634:
L_270549:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_490635:
L_270543:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_270544
L_270545:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_270546+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_270546
.p2align 0x4
.long 0x4466
L_270546:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_270544:
	movq 0x48(%rbp),%r15
	movq $0xB2F,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x1C29,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x30(%rbp)
L_270291:
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x38(%rbp)
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x155,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x40(%rbp)
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x30(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x22E6,%r14
	je L_490653
	cmpq $0x22E7,%r14
	je L_490636
L_270292:
	movq 0x8(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x50,%rbp
	leaq (L_270293+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2071
.p2align 0x4
L_490636:
L_270352:
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
.p2align 0x4,,0x7
loop_3163:
	movq 0x20(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x22E6,%r14
	je L_490638
	cmpq $0x22E7,%r14
	je L_490637
L_270353:
	movq 0x8(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x50,%rbp
	leaq (L_270293+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2071
.p2align 0x4
L_490637:
L_270358:
	movq 0x0(%r15),%r15
	movq %r15,0x20(%rbp)
	jmp loop_3163
.p2align 0x4
L_490638:
L_270354:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_270355
L_270356:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r14d
	movl %r14d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r14
	movq %r14,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_270357+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_270357
.p2align 0x4
.long 0x4B7
L_270357:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_270355:
	movq 0x20(%rbp),%r15
	movq 0x0(%r15),%r14
	movq (globalObjptr+0xF00)(%rip),%r15
	movq $0xB1B,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x1C1F,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq %r15,0x0(%r13)
	movq %r13,0x48(%rbp)
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r15,0x20(%rbp)
	addq $0x18,%r12
L_270295:
	movq $0x155,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x50(%rbp)
	movq 0x30(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0xE0F,%r13
	je L_490648
L_270296:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xE0F,%r15
	je L_490644
L_270297:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x143D,%rcx
	movq $0x2,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_270298+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_270298
.p2align 0x4
.long 0x9BD
L_270298:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq %rax,0x40(%rbp)
	movq $0x0,0x50(%rbp)
.p2align 0x4,,0x7
loop_3160:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_490643
.p2align 0x4,,0x7
L_270299:
	movq 0x50(%rbp),%r15
	cmpq $0x2,%r15
	jnl L_490641
L_270304:
	movl %r15d,%r14d
	cmpl $0x0,%r14d
	je L_490640
	cmpl $0x1,%r14d
	je L_490639
L_270305:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_490639:
L_270308:
	movq 0x20(%rbp),%r14
	movq 0x48(%rbp),%r15
L_270307:
	movq $0x155,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x40(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq 0x50(%rbp),%r14
	movq %r13,0x0(%r15,%r14,8)
	incq %r14
	movq %r14,0x50(%rbp)
	jmp loop_3160
.p2align 0x4
L_490640:
L_270306:
	movq 0x38(%rbp),%r14
	movq 0x30(%rbp),%r15
	jmp L_270307
.p2align 0x4
L_490641:
L_270300:
	movq 0x40(%rbp),%r13
	movq $0xB1B,0xFFFFFFFFFFFFFFF8(%r13)
	movq $0x1C1F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r13,0x0(%r14)
	movq 0x20(%rbp),%r13
	cmpq $0x1,%r13
	je L_490642
L_270301:
	movq 0x8(%r13),%r11
	xchgq %r11,%r15
L_270302:
	movq %r14,0x8(%rbp)
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_490642:
L_270303:
	movq %r14,0x8(%rbp)
	movq 0x18(%rbp),%r14
	movq %r14,(gcState+0x20)(%rip)
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_490643:
L_270309:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_270310+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_270310
.p2align 0x4
.long 0x7AE
L_270310:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	jmp L_270299
.p2align 0x4
L_490644:
L_270311:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_270312
L_270326:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_270327+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_270327
.p2align 0x4
.long 0x855
L_270327:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_270312:
	movq 0x48(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x265D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq %r12,(gcState+0x0)(%rip)
	movq $0x1,0x8(%r15)
	movq %r15,0x30(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x143D,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_270313+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_270313
.p2align 0x4
.long 0x4B7
L_270313:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq %rax,0x48(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3161:
	cmpq $0x1,%r15
	jnl L_490645
L_270325:
	movq 0x48(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_3161
.p2align 0x4
L_490645:
L_270314:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_270315
L_270323:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_270324+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_270324
.p2align 0x4
.long 0x9BD
L_270324:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_270315:
	movq 0x48(%rbp),%r15
	movq $0xB1B,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x265D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x30(%rbp),%r15
	movq %r15,0x8(%r14)
	movq %r14,0x48(%rbp)
	leaq L_270322(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x48,%rbp
	leaq (L_270316+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_9
.p2align 0x4
L_490648:
L_270328:
	movq 0x30(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x40(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xE0F,%r15
	je L_490651
L_270329:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x143D,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_270330+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_270330
.p2align 0x4
.long 0x445B
L_270330:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq %rax,0x30(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3162:
	cmpq $0x1,%r15
	jnl L_490649
L_270341:
	movq 0x30(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_3162
.p2align 0x4
L_490649:
L_270331:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_270332
L_270339:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_270340+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_270340
.p2align 0x4
.long 0x4B7
L_270340:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_270332:
	movq 0x30(%rbp),%r15
	movq $0xB1B,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x265D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x265D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x48(%rbp)
	leaq L_270322(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x48,%rbp
	leaq (L_270333+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_9
.p2align 0x4
L_490651:
L_270342:
	movq 0x48(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x265D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x265D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x40(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x48(%rbp)
	leaq L_270322(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x48,%rbp
	leaq (L_270343+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_9
.p2align 0x4
L_490653:
L_270351:
	movq 0x0(%r15),%r14
	movq (globalObjptr+0xF00)(%rip),%r15
	movq $0xB1B,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x1C1F,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq %r15,0x0(%r13)
	movq %r13,0x48(%rbp)
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r15,0x20(%rbp)
	addq $0x18,%r12
	jmp L_270295
.p2align 0x4
L_490655:
L_270550:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_490656:
L_270551:
	movq (globalObjptr+0x2648)(%rip),%r15
	movq %r15,0x48(%rbp)
	jmp L_270542
.p2align 0x4
L_490657:
L_270534:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_490658:
L_270554:
	movq 0x0(%r15),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x2353,%r15
	je L_490659
L_270561:
	movq 0x10(%r13),%r15
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r13
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r14,0x8(%r11)
	addq $0x18,%r12
	movq %r11,%r15
	movq %r13,%r14
	jmp L_270558
.p2align 0x4
L_490659:
L_270555:
	movq 0x8(%r13),%r15
	movq %r15,0x40(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x48(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x40,%rbp
	leaq (L_270556+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2060
.p2align 0x4
L_490660:
L_270616:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq (globalObjptr+0x2640)(%rip),%r11
	movq %r11,0x30(%rbp)
	movq %r13,%r15
L_270530:
	movq %r14,0x40(%rbp)
	movq %r15,0x48(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x40,%rbp
	leaq (L_270531+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2088
.p2align 0x4
L_490661:
L_270612:
	movq 0x30(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x2333,%r14
	je L_490662
L_270614:
	movq 0x0(%r15),%r14
	movq (globalObjptr+0x2638)(%rip),%r13
	movq %r13,0x30(%rbp)
	movq %r14,%r15
	jmp x_882
.p2align 0x4
L_490662:
L_270613:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq (globalObjptr+0x2638)(%rip),%r11
	movq %r11,0x30(%rbp)
	movq %r13,%r15
	jmp L_270530
.p2align 0x4
L_490663:
L_270609:
	movq 0x30(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x2333,%r14
	je L_490664
L_270611:
	movq 0x0(%r15),%r14
	movq $0x1,0x30(%rbp)
	movq %r14,%r15
	jmp x_882
.p2align 0x4
L_490664:
L_270610:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq $0x1,0x30(%rbp)
	movq %r13,%r15
	jmp L_270530
.p2align 0x4
L_490665:
L_270452:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x22F5,%r15
	je L_490666
L_270508:
	movq 0x28(%r14),%r15
	movq %r15,0x38(%rbp)
	movq 0x20(%r14),%r15
	movq %r15,0x40(%rbp)
	movq 0x18(%r14),%r15
	movq %r15,0x48(%rbp)
	movq 0x10(%r14),%r15
	movq %r15,0x50(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x58(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x60(%rbp)
	addq $0x38,%rbp
	leaq (L_270509+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2089
.p2align 0x4
L_490666:
L_270453:
	movq 0x18(%r14),%r15
	movq 0x10(%r14),%r13
	movq %r13,0x30(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x38(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x40(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x22FB,%r14
	je L_490667
L_270503:
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq $0x3C1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	movq %r11,0x10(%r15)
	movq %r15,0x50(%rbp)
	addq $0x20,%r12
	addq $0x50,%rbp
	leaq (L_270504+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2080
.p2align 0x4
L_490667:
L_270454:
	movq 0x8(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_270455+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2081
.p2align 0x4
L_490668:
L_270282:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq %r13,0x30(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x22E6,%r14
	je L_490678
	cmpq $0x22E7,%r14
	je L_490669
L_270283:
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_270284+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2071
.p2align 0x4
L_490669:
L_270372:
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
.p2align 0x4,,0x7
loop_3165:
	movq 0x38(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x22E6,%r14
	je L_490671
	cmpq $0x22E7,%r14
	je L_490670
L_270373:
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_270284+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2071
.p2align 0x4
L_490670:
L_270378:
	movq 0x0(%r15),%r15
	movq %r15,0x38(%rbp)
	jmp loop_3165
.p2align 0x4
L_490671:
L_270374:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_270375
L_270376:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r14d
	movl %r14d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r14
	movq %r14,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_270377+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_270377
.p2align 0x4
.long 0x986
L_270377:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_270375:
	movq 0x38(%rbp),%r14
	movq 0x0(%r14),%r15
	movq (globalObjptr+0xF00)(%rip),%r14
	movq $0xB1B,0xFFFFFFFFFFFFFFF8(%r14)
	movq $0x1C1F,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq %r14,0x0(%r13)
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq %r13,%r15
L_270286:
	movq $0x155,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x38(%rbp)
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x30(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x22E6,%r14
	je L_490676
	cmpq $0x22E7,%r14
	je L_490672
L_270287:
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_270288+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2071
.p2align 0x4
L_490672:
L_270362:
	movq 0x0(%r15),%r15
	movq %r15,0x30(%rbp)
.p2align 0x4,,0x7
loop_3164:
	movq 0x30(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x22E6,%r14
	je L_490674
	cmpq $0x22E7,%r14
	je L_490673
L_270363:
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_270288+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2071
.p2align 0x4
L_490673:
L_270368:
	movq 0x0(%r15),%r15
	movq %r15,0x30(%rbp)
	jmp loop_3164
.p2align 0x4
L_490674:
L_270364:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_270365
L_270366:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r14d
	movl %r14d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r14
	movq %r14,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_270367+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_270367
.p2align 0x4
.long 0x986
L_270367:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_270365:
	movq 0x30(%rbp),%r14
	movq 0x0(%r14),%r15
	movq (globalObjptr+0xF00)(%rip),%r14
	movq $0xB1B,0xFFFFFFFFFFFFFFF8(%r14)
	movq $0x1C1F,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq %r14,0x0(%r13)
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq %r13,%r15
L_270290:
	movq $0x155,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq $0x1C25,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x30(%rbp)
	jmp L_270291
.p2align 0x4
L_490676:
L_270361:
	movq 0x0(%r15),%r14
	movq (globalObjptr+0xF00)(%rip),%r13
	movq $0xB1B,0xFFFFFFFFFFFFFFF8(%r13)
	movq $0x1C1F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r13,0x0(%r15)
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq %r13,%r14
	jmp L_270290
.p2align 0x4
L_490678:
L_270371:
	movq 0x0(%r15),%r14
	movq (globalObjptr+0xF00)(%rip),%r15
	movq $0xB1B,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x1C1F,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq %r15,0x0(%r13)
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq %r15,%r14
	movq %r13,%r15
	jmp L_270286
.p2align 0x4
L_490679:
L_271155:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_271156+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_271156
.p2align 0x4
.long 0x45C
L_271156:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	jmp L_270281
.p2align 0x4
.long 0x445F
L_270438:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movl 0x58(%rbp),%r15d
	movl %r15d,0x44(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_270439
L_270445:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_270446+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_270446
.p2align 0x4
.long 0x4461
L_270446:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_270439:
	movq $0x13,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x8BD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x20,%r12
	movl 0x44(%rbp),%r15d
	movl %r15d,0x0(%r14)
	movl 0x40(%rbp),%r15d
	movl %r15d,0x4(%r14)
	movq 0x38(%rbp),%r15
	movq %r15,0x10(%r14)
	movq $0x8BF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq %r12,(gcState+0x0)(%rip)
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x50(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1497,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_270440+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_270440
.p2align 0x4
.long 0x4460
L_270440:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	xorq %r15,%r15
	movq %rax,%r14
.p2align 0x4,,0x7
loop_3169:
	cmpq $0x1,%r15
	jnl L_490681
L_270444:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_3169
.p2align 0x4
L_490681:
L_270441:
	movq $0x59,0xFFFFFFFFFFFFFFF8(%r14)
	movq 0x30(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0x22B6,%r13
	je L_490682
L_270443:
	movq 0x10(%r15),%r13
	movq 0x8(%r15),%r11
	movq 0x0(%r15),%r10
	movq %r14,0x30(%rbp)
	movq %r10,%r15
	movq %r11,%r14
L_270422:
	movq %r13,0x40(%rbp)
	movq %r14,0x48(%rbp)
	movq %r15,0x50(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x40,%rbp
	leaq (L_270423+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2084
.p2align 0x4
L_490682:
L_270442:
	movq 0x0(%r15),%r13
	movq %r14,0x30(%rbp)
	movq %r13,%r15
x_881:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x22B8,%r14
	je L_490684
L_270418:
	movq 0x0(%r15),%r15
.p2align 0x4,,0x7
loop_3168:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x22B8,%r14
	je L_490683
L_270420:
	movq 0x0(%r15),%r15
	jmp loop_3168
.p2align 0x4
L_490683:
L_270419:
	movq 0x10(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x40,%rbp
	leaq (L_270385+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2085
.p2align 0x4
L_490684:
L_270384:
	movq 0x10(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x40,%rbp
	leaq (L_270385+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2085
.p2align 0x4
.long 0x25
L_270447:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x7BE
L_270382:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r11
	movq %r11,0x38(%rbp)
	movq 0x30(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x22B6,%r14
	je L_490686
L_270421:
	movq 0x10(%r15),%r13
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r10
	movq %r11,0x30(%rbp)
	movq %r10,%r15
	jmp L_270422
.p2align 0x4
L_490686:
L_270383:
	movq 0x0(%r15),%r14
	movq %r11,0x30(%rbp)
	movq %r14,%r15
	jmp x_881
.p2align 0x4
.long 0x445F
L_271138:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movl 0x58(%rbp),%r15d
	movl %r15d,0x44(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_271139
L_271148:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_271149+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_271149
.p2align 0x4
.long 0x4461
L_271149:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_271139:
	movq $0x13,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x8BD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x20,%r12
	movl 0x44(%rbp),%r15d
	movl %r15d,0x0(%r14)
	movl 0x40(%rbp),%r15d
	movl %r15d,0x4(%r14)
	movq 0x38(%rbp),%r15
	movq %r15,0x10(%r14)
	movq $0x8BF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq %r12,(gcState+0x0)(%rip)
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x50(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1497,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_271140+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_271140
.p2align 0x4
.long 0x4460
L_271140:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq %rax,0x38(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3187:
	cmpq $0x1,%r15
	jnl L_490687
L_271147:
	movq 0x38(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_3187
.p2align 0x4
L_490687:
L_271141:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_271142
L_271145:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_271146+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_271146
.p2align 0x4
.long 0x986
L_271146:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_271142:
	movq 0x38(%rbp),%r14
	movq $0x59,0xFFFFFFFFFFFFFFF8(%r14)
	movq 0x30(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0x230B,%r13
	je L_490690
L_271144:
	movq 0x0(%r15),%r13
	movq %r14,0x30(%rbp)
	movq %r13,%r15
x_889:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x230D,%r14
	je L_490688
L_271125:
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x40,%rbp
	leaq (L_271126+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2082
.p2align 0x4
L_490688:
L_271066:
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq %r13,0x38(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x40(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x2317,%r15
	je L_490689
L_271118:
	movq 0x10(%r14),%r15
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq $0x3B3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r13,0x8(%r14)
	movq %r11,0x10(%r14)
	movq %r14,0x50(%rbp)
	addq $0x20,%r12
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x50,%rbp
	leaq (L_271119+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2051
.p2align 0x4
L_490689:
L_271067:
	movq 0x8(%r14),%r15
	movq %r15,0x50(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x58(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x50,%rbp
	leaq (L_271068+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2052
.p2align 0x4
L_490690:
L_271143:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq %r14,0x30(%rbp)
	movq %r11,%r15
	movq %r13,%r14
L_271043:
	movq %r14,0x40(%rbp)
	movq %r15,0x48(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x40,%rbp
	leaq (fromList_23+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2083
.p2align 0x4
.long 0x25
L_271150:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x7BE
L_271040:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_271041
L_271129:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_271130+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_271130
.p2align 0x4
.long 0x986
L_271130:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_271041:
	movq 0x30(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x230B,%r14
	je L_490693
L_271065:
	movq 0x0(%r15),%r14
	movq 0x38(%rbp),%r13
	movq %r13,0x30(%rbp)
	movq %r14,%r15
	jmp x_889
.p2align 0x4
L_490693:
L_271042:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq 0x38(%rbp),%r11
	movq %r11,0x30(%rbp)
	movq %r13,%r15
	jmp L_271043
.p2align 0x4
.long 0x4474
L_271011:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_271012
L_271019:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_271020+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_271020
.p2align 0x4
.long 0x241E
L_271020:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_271012:
	movq $0x65D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x252F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
	jmp L_271013
.p2align 0x4
.long 0x4474
L_271027:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_271028
L_271029:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_271030+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_271030
.p2align 0x4
.long 0x241E
L_271030:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_271028:
	movq $0x2531,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_271013
.p2align 0x4
.long 0x4474
L_271022:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_271023
L_271024:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_271025+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_271025
.p2align 0x4
.long 0x241E
L_271025:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_271023:
	movq $0x2531,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_271013
.p2align 0x4
.long 0x982
L_271014:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_271015
L_271016:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_271017+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_271017
.p2align 0x4
.long 0x7BB
L_271017:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_271015:
	movq $0x10C5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x40(%rbp),%r13
	movq %r13,0x8(%r15)
	movq $0x2703,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x1,%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_270983:
	incl %ecx
	jo L_490704
L_270985:
	cmpq $0x1,%r15
	je L_490698
L_270986:
	movq 0x8(%r15),%r15
	jmp L_270983
.p2align 0x4
L_490698:
L_270987:
	movq %r14,0x30(%rbp)
L_270988:
	movslq %ecx,%rdx
	movq %rdx,0x38(%rbp)
	testq %rdx,%rdx
	jz L_490703
L_270989:
	cmpq $0x7FFFFFFF,%rdx
	ja L_490702
L_270990:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x158F,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_270991+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_270991
.p2align 0x4
.long 0x4467
L_270991:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq %rax,0x40(%rbp)
L_270992:
	movq 0x30(%rbp),%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3184:
	cmpq 0x38(%rbp),%r15
	jnl L_490700
L_270997:
	cmpq $0x1,%r14
	je L_490699
L_270998:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq 0x40(%rbp),%r11
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r13,0x0(%r11,%r15,8)
	incq %r15
	jmp loop_3184
.p2align 0x4
L_490699:
L_270999:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_490700:
L_270993:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_270994
L_270995:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_270996+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_270996
.p2align 0x4
.long 0x7A7
L_270996:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_270994:
	movq 0x40(%rbp),%r15
	movq $0x12E7,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x1C2B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq %r14,0x30(%rbp)
	jmp L_270291
.p2align 0x4
L_490702:
L_271000:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_490703:
L_271001:
	movq (globalObjptr+0x2650)(%rip),%r15
	movq %r15,0x40(%rbp)
	jmp L_270992
.p2align 0x4
L_490704:
L_270984:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x25
L_271018:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x49E
L_271006:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_271007
L_271032:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_271033+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_271033
.p2align 0x4
.long 0x2354
L_271033:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_271007:
	movq 0x40(%rbp),%r15
	movq 0x48(%rbp),%r14
	jmp L_271008
.p2align 0x4
.long 0x638
L_270981:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r14
	movq %r14,0x30(%rbp)
	cmpq $0x1,%r14
	je L_490707
L_270982:
	movq 0x8(%r14),%r15
	xorl %ecx,%ecx
	jmp L_270983
.p2align 0x4
L_490707:
L_271002:
	xorl %ecx,%ecx
	jmp L_270988
.p2align 0x4
.long 0x2CD6
x_888:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_270969
L_270972:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_270973+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_270973
.p2align 0x4
.long 0x445C
L_270973:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_270969:
	movq 0x48(%rbp),%r15
	andq $0x1,%r15
	jnz L_490708
L_270970:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_490708:
L_270971:
	movq 0x48(%rbp),%r15
	shrq $0x1,%r15
	movl %r15d,%ecx
L_270918:
	movl %ecx,%r15d
	shlq $0x1,%r15
	orq $0x1,%r15
	movq 0x30(%rbp),%r10
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r14
	shrq $0x1,%r14
	cmpq $0x2335,%r14
	je L_490709
L_270960:
	movq 0x10(%r10),%r13
	movq 0x8(%r10),%r14
	movq 0x0(%r10),%r11
	jmp x_887
.p2align 0x4
L_490709:
L_270919:
	movq 0x0(%r10),%r14
	movq %r15,0x30(%rbp)
	movq %r14,%r15
	jmp x_886
.p2align 0x4
.long 0x25
L_270964:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x2331
L_270912:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r14d
	incl %r14d
	jo L_490711
L_270914:
	movl %r14d,0x0(%r15)
	movq 0x50(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x68(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq (globalObjptr+0x9D0)(%rip),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_270915+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_490711:
L_270913:
	movq 0x18(%rbp),%r14
	movq %r14,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r14,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x244B
L_270924:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_270925
L_270955:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_270956+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_270956
.p2align 0x4
.long 0x4473
L_270956:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_270925:
	movq $0x65D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x58(%rbp)
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x40(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x2302,%r14
	je L_490712
L_270953:
	movq 0x8(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_270954+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2090
.p2align 0x4
L_490712:
L_270926:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq $0x3BF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	movq %r15,0x68(%rbp)
	addq $0x18,%r12
	addq $0x68,%rbp
	leaq (L_270927+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2066
.p2align 0x4
.long 0x7B8
L_270921:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_270922
L_270957:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_270958+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_270958
.p2align 0x4
.long 0x4473
L_270958:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_270922:
	movq 0x48(%rbp),%r13
	movq 0x50(%rbp),%r14
	jmp L_270923
.p2align 0x4
.long 0x1645
L_270900:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_270901
L_270902:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_270903+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_270903
.p2align 0x4
.long 0x257A
L_270903:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_270901:
	movq $0x10C1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x58(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x60(%rbp),%r13
	movq %r13,0x10(%r15)
	movq $0x2705,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x1,%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_270840:
	incl %ecx
	jo L_490727
L_270842:
	cmpq $0x1,%r15
	je L_490715
L_270843:
	movq 0x8(%r15),%r15
	jmp L_270840
.p2align 0x4
L_490715:
L_270844:
	movq %r14,0x50(%rbp)
L_270845:
	movslq %ecx,%rdx
	movq %rdx,0x58(%rbp)
	testq %rdx,%rdx
	jz L_490726
L_270846:
	cmpq $0x7FFFFFFF,%rdx
	ja L_490725
L_270847:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x158B,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_270848+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_270848
.p2align 0x4
.long 0x446C
L_270848:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq %rax,0x60(%rbp)
L_270849:
	movq 0x50(%rbp),%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3180:
	cmpq 0x58(%rbp),%r15
	jnl L_490717
L_270893:
	cmpq $0x1,%r14
	je L_490716
L_270894:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq 0x60(%rbp),%r11
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r13,0x0(%r11,%r15,8)
	incq %r15
	jmp loop_3180
.p2align 0x4
L_490716:
L_270895:
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_490717:
L_270850:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_270851
L_270891:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_270892+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_270892
.p2align 0x4
.long 0x241D
L_270892:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_270851:
	movq 0x60(%rbp),%r15
	movq $0x11B9,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x48(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x233D,%r14
	je L_490718
L_270868:
	movq 0x10(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x58(%rbp)
	addq $0x70,%rbp
	leaq (L_270869+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2086
.p2align 0x4
L_490718:
L_270852:
	movq 0x0(%r15),%r14
	movq %r14,%r15
L_270853:
	movq $0x11BB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x60(%rbp),%r15
	movq %r15,0x8(%r14)
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x38(%rbp),%r13
	movq %r13,0x8(%r15)
	movq $0x11BD,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x48(%rbp)
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x30(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x22E6,%r14
	je L_490723
	cmpq $0x22E7,%r14
	je L_490719
L_270854:
	movq 0x8(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_270855+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2071
.p2align 0x4
L_490719:
L_270861:
	movq 0x0(%r15),%r15
	movq %r15,0x30(%rbp)
.p2align 0x4,,0x7
loop_3181:
	movq 0x30(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x22E6,%r14
	je L_490721
	cmpq $0x22E7,%r14
	je L_490720
L_270862:
	movq 0x8(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_270855+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2071
.p2align 0x4
L_490720:
L_270867:
	movq 0x0(%r15),%r15
	movq %r15,0x30(%rbp)
	jmp loop_3181
.p2align 0x4
L_490721:
L_270863:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_270864
L_270865:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r14d
	movl %r14d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r14
	movq %r14,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_270866+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_270866
.p2align 0x4
.long 0x4466
L_270866:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_270864:
	movq 0x30(%rbp),%r14
	movq 0x0(%r14),%r15
	movq (globalObjptr+0xF00)(%rip),%r14
	movq $0xB1B,0xFFFFFFFFFFFFFFF8(%r14)
	movq $0x1C1F,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq %r14,0x0(%r13)
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq %r13,%r15
L_270857:
	movq $0x155,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq $0x1C2F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x30(%rbp)
	jmp L_270291
.p2align 0x4
L_490723:
L_270860:
	movq 0x0(%r15),%r14
	movq (globalObjptr+0xF00)(%rip),%r13
	movq $0xB1B,0xFFFFFFFFFFFFFFF8(%r13)
	movq $0x1C1F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r13,0x0(%r15)
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq %r13,%r14
	jmp L_270857
.p2align 0x4
L_490725:
L_270896:
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_490726:
L_270897:
	movq (globalObjptr+0x2610)(%rip),%r15
	movq %r15,0x60(%rbp)
	jmp L_270849
.p2align 0x4
L_490727:
L_270841:
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1645
L_270838:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r14
	movq %r14,0x50(%rbp)
	cmpq $0x1,%r14
	je L_490729
L_270839:
	movq 0x8(%r14),%r15
	xorl %ecx,%ecx
	jmp L_270840
.p2align 0x4
L_490729:
L_270898:
	xorl %ecx,%ecx
	jmp L_270845
.p2align 0x4
.long 0x638
L_270833:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r14
	movq %r14,0x30(%rbp)
	cmpq $0x1,%r14
	je L_490745
L_270834:
	movq 0x8(%r14),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_270793:
	incl %ecx
	jo L_490744
L_270795:
	cmpq $0x1,%r15
	je L_490730
L_270796:
	movq 0x8(%r15),%r15
	jmp L_270793
.p2align 0x4
L_490730:
L_270797:
	movq %r14,0x30(%rbp)
L_270798:
	movslq %ecx,%rdx
	movq %rdx,0x38(%rbp)
	testq %rdx,%rdx
	jz L_490743
L_270799:
	cmpq $0x7FFFFFFF,%rdx
	ja L_490742
L_270800:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1583,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_270801+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_270801
.p2align 0x4
.long 0x4467
L_270801:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq %rax,0x40(%rbp)
L_270802:
	movq 0x30(%rbp),%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3179:
	cmpq 0x38(%rbp),%r15
	jnl L_490732
L_270807:
	cmpq $0x1,%r14
	je L_490731
L_270808:
	movq %r15,%r13
	movq %r15,%r11
	movq %r15,%r10
	movq 0x0(%r14),%r9
	movq 0x8(%r14),%r14
	movq 0x0(%r9),%r8
	movq 0x8(%r9),%rsp
	movq 0x10(%r9),%rsi
	movq 0x40(%rbp),%r9
	movq %r9,%rdi
	shrq $0x8,%rdi
	movq (gcState+0x3C8)(%rip),%rdx
	movb $0x1,0x0(%rdx,%rdi,1)
	imulq $0x18,%r13
	movq %r8,0x0(%r9,%r13,1)
	movq %r9,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%rdx,%r13,1)
	imulq $0x18,%r11
	movq %rsp,0x8(%r9,%r11,1)
	movq %r9,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%rdx,%r13,1)
	imulq $0x18,%r10
	movq %rsi,0x10(%r9,%r10,1)
	incq %r15
	jmp loop_3179
.p2align 0x4
L_490731:
L_270809:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_490732:
L_270803:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_270804
L_270805:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_270806+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_270806
.p2align 0x4
.long 0x7A7
L_270806:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_270804:
	movq 0x40(%rbp),%r15
	movq $0xB31,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x26F7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq %r14,0x30(%rbp)
L_270750:
	movq (globalObjptr+0xEF8)(%rip),%r14
	movq $0x59,0xFFFFFFFFFFFFFFF8(%r14)
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_490740
L_270751:
	movq 0x8(%r14),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_270752:
	incl %ecx
	jo L_490739
L_270754:
	cmpq $0x1,%r15
	je L_490733
L_270755:
	movq 0x8(%r15),%r15
	jmp L_270752
.p2align 0x4
L_490733:
L_270756:
L_270757:
	movslq %ecx,%rdx
	movq %rdx,0x38(%rbp)
	testq %rdx,%rdx
	jz L_490738
L_270758:
	cmpq $0x7FFFFFFF,%rdx
	ja L_490737
L_270759:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1499,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_270760+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_270760
.p2align 0x4
.long 0x4467
L_270760:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq %rax,0x40(%rbp)
L_270761:
	movq 0x30(%rbp),%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3178:
	cmpq 0x38(%rbp),%r15
	jnl L_490735
L_270766:
	cmpq $0x1,%r14
	je L_490734
L_270767:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq 0x40(%rbp),%r11
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r13,0x0(%r11,%r15,8)
	incq %r15
	jmp loop_3178
.p2align 0x4
L_490734:
L_270768:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_490735:
L_270762:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_270763
L_270764:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_270765+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_270765
.p2align 0x4
.long 0x7A7
L_270765:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_270763:
	movq 0x40(%rbp),%r15
	movq $0xB27,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x1C27,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq (globalObjptr+0xEF8)(%rip),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x30(%rbp)
	jmp L_270291
.p2align 0x4
L_490737:
L_270769:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_490738:
L_270770:
	movq (globalObjptr+0xD28)(%rip),%r15
	movq %r15,0x40(%rbp)
	jmp L_270761
.p2align 0x4
L_490739:
L_270753:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_490740:
L_270771:
	xorl %ecx,%ecx
	jmp L_270757
.p2align 0x4
L_490742:
L_270810:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_490743:
L_270811:
	movq (globalObjptr+0x25D0)(%rip),%r15
	movq %r15,0x40(%rbp)
	jmp L_270802
.p2align 0x4
L_490744:
L_270794:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_490745:
L_270835:
	xorl %ecx,%ecx
	jmp L_270798
.p2align 0x4
.long 0x49E
L_270826:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_270827
L_270830:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_270831+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_270831
.p2align 0x4
.long 0x2354
L_270831:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_270827:
	movq $0x159,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r11
	movq %r11,0x0(%r15)
	movq 0x48(%rbp),%r11
	movq %r11,0x8(%r15)
	movq $0x2535,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq 0x30(%rbp),%r15
	cmpq $0x1,%r15
	je L_490746
L_270828:
	movq 0x10(%r15),%r13
	movq 0x8(%r15),%r11
	movq 0x0(%r15),%r10
	movq %r14,0x30(%rbp)
	movq %r10,%r15
	movq %r11,%r14
x_885:
	movq $0x395,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r14,0x8(%r11)
	movq %r15,0x10(%r11)
	movq %r11,0x48(%rbp)
	addq $0x20,%r12
	addq $0x48,%rbp
	leaq (L_270778+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2053
.p2align 0x4
L_490746:
L_270829:
	movq %r14,0x40(%rbp)
	movq $0x1,0x30(%rbp)
L_270780:
	movq 0x38(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_270781+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2034
.p2align 0x4
.long 0x49E
L_270775:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_270776
L_270823:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_270824+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_270824
.p2align 0x4
.long 0x2574
L_270824:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_270776:
	movq 0x30(%rbp),%r15
	cmpq $0x1,%r15
	je L_490748
L_270777:
	movq 0x10(%r15),%r13
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r11
	movq 0x40(%rbp),%r10
	movq %r10,0x30(%rbp)
	movq %r11,%r15
	jmp x_885
.p2align 0x4
L_490748:
L_270822:
	movq $0x1,0x30(%rbp)
	jmp L_270780
.p2align 0x4
.long 0x638
L_270749:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	jmp L_270750
.p2align 0x4
.long 0x638
L_270739:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x40(%rbp),%r14
	movq %r14,0x38(%rbp)
	cmpq $0x1,%r14
	je L_490764
L_270740:
	movq 0x8(%r14),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_270741:
	incl %ecx
	jo L_490763
L_270743:
	cmpq $0x1,%r15
	je L_490750
L_270744:
	movq 0x8(%r15),%r15
	jmp L_270741
.p2align 0x4
L_490750:
L_270745:
L_270703:
	movslq %ecx,%rdx
	movq %rdx,0x40(%rbp)
	testq %rdx,%rdx
	jz L_490762
L_270704:
	cmpq $0x7FFFFFFF,%rdx
	ja L_490761
L_270705:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x158D,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_270706+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_270706
.p2align 0x4
.long 0x2CEA
L_270706:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq %rax,0x48(%rbp)
L_270707:
	movq 0x38(%rbp),%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3175:
	cmpq 0x40(%rbp),%r15
	jnl L_490752
L_270730:
	cmpq $0x1,%r14
	je L_490751
L_270731:
	movq %r15,%r13
	movq %r15,%r11
	movq 0x0(%r14),%r10
	movq 0x8(%r14),%r14
	movq 0x0(%r10),%r9
	movq 0x8(%r10),%r8
	movq 0x48(%rbp),%r10
	movq %r10,%rsp
	shrq $0x8,%rsp
	movq (gcState+0x3C8)(%rip),%rsi
	movq %rsp,%rax
	movb $0x1,0x0(%rsi,%rax,1)
	salq $0x4,%r13
	movq %r9,0x0(%r10,%r13,1)
	movq %r10,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%rsi,%r13,1)
	salq $0x4,%r11
	movq %r8,0x8(%r10,%r11,1)
	incq %r15
	jmp loop_3175
.p2align 0x4
L_490751:
L_270732:
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_490752:
L_270708:
	movq 0x48(%rbp),%r14
	movq $0xB2B,0xFFFFFFFFFFFFFFF8(%r14)
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_490760
L_270709:
	movq 0x8(%r14),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_270710:
	incl %ecx
	jo L_490759
L_270712:
	cmpq $0x1,%r15
	je L_490753
L_270713:
	movq 0x8(%r15),%r15
	jmp L_270710
.p2align 0x4
L_490753:
L_270714:
L_270715:
	movslq %ecx,%rdx
	movq %rdx,0x38(%rbp)
	testq %rdx,%rdx
	jz L_490758
L_270716:
	cmpq $0x7FFFFFFF,%rdx
	ja L_490757
L_270717:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14FB,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_270718+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_270718
.p2align 0x4
.long 0x4466
L_270718:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq %rax,0x40(%rbp)
L_270719:
	movq 0x30(%rbp),%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3176:
	cmpq 0x38(%rbp),%r15
	jnl L_490755
L_270724:
	cmpq $0x1,%r14
	je L_490754
L_270725:
	movq %r15,%r13
	movq %r15,%r11
	movq 0x0(%r14),%r10
	movq 0x8(%r14),%r14
	movq 0x0(%r10),%r9
	movq 0x8(%r10),%r8
	movq 0x40(%rbp),%r10
	movq %r10,%rsp
	shrq $0x8,%rsp
	movq (gcState+0x3C8)(%rip),%rsi
	movq %rsp,%rax
	movb $0x1,0x0(%rsi,%rax,1)
	salq $0x4,%r13
	movq %r9,0x0(%r10,%r13,1)
	movq %r10,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%rsi,%r13,1)
	salq $0x4,%r11
	movq %r8,0x8(%r10,%r11,1)
	incq %r15
	jmp loop_3176
.p2align 0x4
L_490754:
L_270726:
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_490755:
L_270720:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_270721
L_270722:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_270723+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_270723
.p2align 0x4
.long 0x4469
L_270723:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_270721:
	movq 0x40(%rbp),%r15
	movq $0xB2D,0xFFFFFFFFFFFFFFF8(%r15)
	movq (globalObjptr+0xEF8)(%rip),%r14
	movq $0x59,0xFFFFFFFFFFFFFFF8(%r14)
	movq $0x1C1B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x20,%r12
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	movq 0x48(%rbp),%r15
	movq %r15,0x10(%r13)
	movq %r13,0x30(%rbp)
	jmp L_270291
.p2align 0x4
L_490757:
L_270727:
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_490758:
L_270728:
	movq (globalObjptr+0x2630)(%rip),%r15
	movq %r15,0x40(%rbp)
	jmp L_270719
.p2align 0x4
L_490759:
L_270711:
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_490760:
L_270729:
	xorl %ecx,%ecx
	jmp L_270715
.p2align 0x4
L_490761:
L_270733:
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_490762:
L_270734:
	movq (globalObjptr+0x2628)(%rip),%r15
	movq %r15,0x48(%rbp)
	jmp L_270707
.p2align 0x4
L_490763:
L_270742:
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_490764:
L_270746:
	xorl %ecx,%ecx
	jmp L_270703
.p2align 0x4
.long 0x638
L_270702:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq $0x1,0x38(%rbp)
	xorl %ecx,%ecx
	jmp L_270703
.p2align 0x4
.long 0x49E
L_270677:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r14
	movq %r14,0x40(%rbp)
	cmpq $0x1,%r14
	je L_490772
L_270678:
	movq 0x8(%r14),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_270679:
	incl %ecx
	jo L_490771
L_270681:
	cmpq $0x1,%r15
	je L_490765
L_270682:
	movq 0x8(%r15),%r15
	jmp L_270679
.p2align 0x4
L_490765:
L_270683:
L_270684:
	movslq %ecx,%rdx
	movq %rdx,0x48(%rbp)
	testq %rdx,%rdx
	jz L_490770
L_270685:
	cmpq $0x7FFFFFFF,%rdx
	ja L_490769
L_270686:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1585,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_270687+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_270687
.p2align 0x4
.long 0x445C
L_270687:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq %rax,0x50(%rbp)
L_270688:
	movq 0x40(%rbp),%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3174:
	cmpq 0x48(%rbp),%r15
	jnl L_490767
L_270693:
	cmpq $0x1,%r14
	je L_490766
L_270694:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq 0x50(%rbp),%r11
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r13,0x0(%r11,%r15,8)
	incq %r15
	jmp loop_3174
.p2align 0x4
L_490766:
L_270695:
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_490767:
L_270689:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_270690
L_270691:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_270692+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_270692
.p2align 0x4
.long 0x445D
L_270692:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_270690:
	movq 0x50(%rbp),%r15
	movq $0x3A5,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x38(%rbp),%r13
	movq %r13,0x8(%r14)
	movq $0x3A7,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x18,%r12
	movq %r15,0x8(%r13)
	movq $0x1C1D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r15,0x30(%rbp)
	addq $0x10,%r12
	jmp L_270291
.p2align 0x4
L_490769:
L_270696:
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_490770:
L_270697:
	movq (globalObjptr+0x25D8)(%rip),%r15
	movq %r15,0x50(%rbp)
	jmp L_270688
.p2align 0x4
L_490771:
L_270680:
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_490772:
L_270698:
	xorl %ecx,%ecx
	jmp L_270684
.p2align 0x4
.long 0x638
L_270660:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_270661
L_270662:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_270663+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_270663
.p2align 0x4
.long 0x986
L_270663:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_270661:
	movq $0x145,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x38(%rbp),%r13
	movq %r13,0x8(%r15)
	movq $0x2673,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x1,%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_270622:
	incl %ecx
	jo L_490779
L_270624:
	cmpq $0x1,%r15
	je L_490773
L_270625:
	movq 0x8(%r15),%r15
	jmp L_270622
.p2align 0x4
L_490773:
L_270626:
	movq %r14,0x30(%rbp)
L_270627:
	movslq %ecx,%rdx
	movq %rdx,0x38(%rbp)
	testq %rdx,%rdx
	jz L_490778
L_270628:
	cmpq $0x7FFFFFFF,%rdx
	ja L_490777
L_270629:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1581,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_270630+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_270630
.p2align 0x4
.long 0x4467
L_270630:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq %rax,0x40(%rbp)
L_270631:
	movq 0x30(%rbp),%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3173:
	cmpq 0x38(%rbp),%r15
	jnl L_490775
L_270636:
	cmpq $0x1,%r14
	je L_490774
L_270637:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq 0x40(%rbp),%r11
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r13,0x0(%r11,%r15,8)
	incq %r15
	jmp loop_3173
.p2align 0x4
L_490774:
L_270638:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_490775:
L_270632:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_270633
L_270634:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_270635+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_270635
.p2align 0x4
.long 0x7A7
L_270635:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_270633:
	movq 0x40(%rbp),%r15
	movq $0xB29,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x1C23,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq %r14,0x30(%rbp)
	jmp L_270291
.p2align 0x4
L_490777:
L_270639:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_490778:
L_270640:
	movq (globalObjptr+0x25C0)(%rip),%r15
	movq %r15,0x40(%rbp)
	jmp L_270631
.p2align 0x4
L_490779:
L_270623:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x25
L_270664:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1645
L_270646:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_270647
L_270671:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_270672+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_270672
.p2align 0x4
.long 0x2424
L_270672:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_270647:
	movq 0x50(%rbp),%r14
	cmpq $0x1,%r14
	je L_490781
L_270648:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x50(%rbp)
	movq $0x1,0x58(%rbp)
L_270649:
	movq %r15,0x68(%rbp)
	leaq L_270669(%rip),%r15
	movq %r15,0x10(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_270650+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromString_23
.p2align 0x4
L_490781:
L_270670:
	movq $0x1,%r15
L_270658:
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x48(%rbp),%r13
	movq %r13,0x8(%r14)
	jmp L_270659
.p2align 0x4
.long 0x25
L_270673:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x638
L_270620:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r14
	movq %r14,0x30(%rbp)
	cmpq $0x1,%r14
	je L_490783
L_270621:
	movq 0x8(%r14),%r15
	xorl %ecx,%ecx
	jmp L_270622
.p2align 0x4
L_490783:
L_270641:
	xorl %ecx,%ecx
	jmp L_270627
.p2align 0x4
.long 0x7BE
x_884:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_270602
L_270605:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_270606+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_270606
.p2align 0x4
.long 0x4467
L_270606:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_270602:
	movq 0x38(%rbp),%r15
	andq $0x1,%r15
	jnz L_490784
L_270603:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_490784:
L_270604:
	movq 0x38(%rbp),%r15
	shrq $0x1,%r15
	movl %r15d,%ecx
L_270591:
	movl %ecx,%r15d
	shlq $0x1,%r15
	orq $0x1,%r15
	movq $0x1BDF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq 0x30(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0x2333,%r13
	je L_490785
L_270593:
	movq 0x0(%r15),%r13
	movq %r14,0x30(%rbp)
	movq %r13,%r15
	jmp x_882
.p2align 0x4
L_490785:
L_270592:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq %r14,0x30(%rbp)
	movq %r11,%r15
	movq %r13,%r14
	jmp L_270530
.p2align 0x4
.long 0x25
L_270597:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x2CD6
L_270585:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r14d
	incl %r14d
	jo L_490787
L_270587:
	movl %r14d,0x0(%r15)
	movq 0x40(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x58(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq (globalObjptr+0x9D0)(%rip),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_270588+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_490787:
L_270586:
	movq 0x18(%rbp),%r14
	movq %r14,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r14,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x7BE
x_883:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_270571
L_270574:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_270575+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_270575
.p2align 0x4
.long 0x4467
L_270575:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_270571:
	movq 0x38(%rbp),%r15
	andq $0x1,%r15
	jnz L_490788
L_270572:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_490788:
L_270573:
	movq 0x38(%rbp),%r15
	shrq $0x1,%r15
	movl %r15d,%ecx
L_270528:
	movl %ecx,%r15d
	shlq $0x1,%r15
	orq $0x1,%r15
	movq $0x1BE1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq 0x30(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0x2333,%r13
	je L_490789
L_270553:
	movq 0x0(%r15),%r13
	movq %r14,0x30(%rbp)
	movq %r13,%r15
	jmp x_882
.p2align 0x4
L_490789:
L_270529:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq %r14,0x30(%rbp)
	movq %r11,%r15
	movq %r13,%r14
	jmp L_270530
.p2align 0x4
.long 0x25
L_270566:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x2CD6
L_270522:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r14d
	incl %r14d
	jo L_490791
L_270524:
	movl %r14d,0x0(%r15)
	movq 0x40(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x58(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq (globalObjptr+0x9D0)(%rip),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_270525+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_490791:
L_270523:
	movq 0x18(%rbp),%r14
	movq %r14,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r14,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xDDE
L_270293:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_270295
L_270349:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_270350+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_270350
.p2align 0x4
.long 0x4B5
L_270350:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	jmp L_270295
.p2align 0x4
.long 0x511
L_270316:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_270317
L_270320:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_270321+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_270321
.p2align 0x4
.long 0x5EE
L_270321:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_270317:
	movq $0x1C1F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x20(%rbp),%r13
	cmpq $0x1,%r13
	je L_490793
L_270318:
	movq 0x8(%r13),%r15
	jmp L_270302
.p2align 0x4
L_490793:
L_270319:
	movq %r14,0x8(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x38(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x25
L_270322:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x511
L_270333:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_270334
L_270337:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_270338+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_270338
.p2align 0x4
.long 0x5EE
L_270338:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_270334:
	movq $0x1C1F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x20(%rbp),%r13
	cmpq $0x1,%r13
	je L_490795
L_270335:
	movq 0x8(%r13),%r15
	jmp L_270302
.p2align 0x4
L_490795:
L_270336:
	movq %r14,0x8(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x38(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x511
L_270343:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_270344
L_270347:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_270348+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_270348
.p2align 0x4
.long 0x5EE
L_270348:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_270344:
	movq $0x1C1F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x20(%rbp),%r13
	cmpq $0x1,%r13
	je L_490797
L_270345:
	movq 0x8(%r13),%r15
	jmp L_270302
.p2align 0x4
L_490797:
L_270346:
	movq %r14,0x8(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x38(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x7BE
L_270556:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_270557
L_270559:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_270560+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_270560
.p2align 0x4
.long 0x2574
L_270560:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_270557:
	movq 0x38(%rbp),%r15
	movq 0x40(%rbp),%r14
	jmp L_270558
.p2align 0x4
.long 0x7BE
L_270531:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r13
	movq %r13,0x38(%rbp)
	cmpq $0x1,%r13
	je L_490800
L_270532:
	movq 0x8(%r13),%r15
	movq 0x30(%rbp),%r14
	xorl %ecx,%ecx
	jmp L_270533
.p2align 0x4
L_490800:
L_270552:
	xorl %ecx,%ecx
	jmp L_270538
.p2align 0x4
.long 0x638
L_270509:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_270510
L_270511:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_270512+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_270512
.p2align 0x4
.long 0x1928
L_270512:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_270510:
	movq 0x30(%rbp),%r15
L_270471:
	movq $0x1C2D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x30(%rbp)
	addq $0x10,%r12
	jmp L_270291
.p2align 0x4
.long 0x2CD6
L_270504:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_270505
L_270506:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_270507+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_270507
.p2align 0x4
.long 0x241E
L_270507:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_270505:
	movq $0x10C1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x50(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x58(%rbp),%r13
	movq %r13,0x10(%r15)
	movq $0x2705,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x1,%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_270457:
	incl %ecx
	jo L_490809
L_270459:
	cmpq $0x1,%r15
	je L_490802
L_270460:
	movq 0x8(%r15),%r15
	jmp L_270457
.p2align 0x4
L_490802:
L_270461:
	movq %r14,0x48(%rbp)
L_270462:
	movslq %ecx,%rdx
	movq %rdx,0x50(%rbp)
	testq %rdx,%rdx
	jz L_490808
L_270463:
	cmpq $0x7FFFFFFF,%rdx
	ja L_490807
L_270464:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x158B,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_270465+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_270465
.p2align 0x4
.long 0x2578
L_270465:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq %rax,0x58(%rbp)
L_270466:
	movq 0x48(%rbp),%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3170:
	cmpq 0x50(%rbp),%r15
	jnl L_490804
L_270497:
	cmpq $0x1,%r14
	je L_490803
L_270498:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq 0x58(%rbp),%r11
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r13,0x0(%r11,%r15,8)
	incq %r15
	jmp loop_3170
.p2align 0x4
L_490803:
L_270499:
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_490804:
L_270467:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_270468
L_270495:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_270496+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_270496
.p2align 0x4
.long 0x4465
L_270496:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_270468:
	movq 0x58(%rbp),%r15
	movq $0x11B9,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x30(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x233D,%r14
	je L_490805
L_270472:
	movq 0x10(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	addq $0x68,%rbp
	leaq (L_270473+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2086
.p2align 0x4
L_490805:
L_270469:
	movq 0x0(%r15),%r14
	movq %r14,%r15
L_270470:
	movq $0x11BB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x58(%rbp),%r13
	movq %r13,0x8(%r14)
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x40(%rbp),%r13
	movq %r13,0x8(%r15)
	movq $0x11BD,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq $0x253D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x10,%r12
	jmp L_270471
.p2align 0x4
L_490807:
L_270500:
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_490808:
L_270501:
	movq (globalObjptr+0x2610)(%rip),%r15
	movq %r15,0x58(%rbp)
	jmp L_270466
.p2align 0x4
L_490809:
L_270458:
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x2CD6
L_270455:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r14
	movq %r14,0x48(%rbp)
	cmpq $0x1,%r14
	je L_490811
L_270456:
	movq 0x8(%r14),%r15
	xorl %ecx,%ecx
	jmp L_270457
.p2align 0x4
L_490811:
L_270502:
	xorl %ecx,%ecx
	jmp L_270462
.p2align 0x4
.long 0x7BE
L_270284:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_270285
L_270369:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_270370+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_270370
.p2align 0x4
.long 0x2574
L_270370:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_270285:
	movq 0x38(%rbp),%r14
	movq 0x40(%rbp),%r15
	jmp L_270286
.p2align 0x4
.long 0x983
L_270288:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_270289
L_270359:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_270360+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_270360
.p2align 0x4
.long 0x2574
L_270360:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_270289:
	movq 0x30(%rbp),%r14
	movq 0x40(%rbp),%r15
	jmp L_270290
.p2align 0x4
.long 0x7BE
L_270423:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x48(%rbp),%r14
	movq %r14,0x40(%rbp)
	cmpq $0x1,%r14
	je L_490828
L_270424:
	movq 0x8(%r14),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_270425:
	incl %ecx
	jo L_490827
L_270427:
	cmpq $0x1,%r15
	je L_490814
L_270428:
	movq 0x8(%r15),%r15
	jmp L_270425
.p2align 0x4
L_490814:
L_270429:
L_270386:
	movslq %ecx,%rdx
	movq %rdx,0x48(%rbp)
	testq %rdx,%rdx
	jz L_490826
L_270387:
	cmpq $0x7FFFFFFF,%rdx
	ja L_490825
L_270388:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x158D,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_270389+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_270389
.p2align 0x4
.long 0x445C
L_270389:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq %rax,0x50(%rbp)
L_270390:
	movq 0x40(%rbp),%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3166:
	cmpq 0x48(%rbp),%r15
	jnl L_490816
L_270413:
	cmpq $0x1,%r14
	je L_490815
L_270414:
	movq %r15,%r13
	movq %r15,%r11
	movq 0x0(%r14),%r10
	movq 0x8(%r14),%r14
	movq 0x0(%r10),%r9
	movq 0x8(%r10),%r8
	movq 0x50(%rbp),%r10
	movq %r10,%rsp
	shrq $0x8,%rsp
	movq (gcState+0x3C8)(%rip),%rsi
	movq %rsp,%rax
	movb $0x1,0x0(%rsi,%rax,1)
	salq $0x4,%r13
	movq %r9,0x0(%r10,%r13,1)
	movq %r10,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%rsi,%r13,1)
	salq $0x4,%r11
	movq %r8,0x8(%r10,%r11,1)
	incq %r15
	jmp loop_3166
.p2align 0x4
L_490815:
L_270415:
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_490816:
L_270391:
	movq 0x50(%rbp),%r14
	movq $0xB2B,0xFFFFFFFFFFFFFFF8(%r14)
	movq 0x38(%rbp),%r14
	cmpq $0x1,%r14
	je L_490824
L_270392:
	movq 0x8(%r14),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_270393:
	incl %ecx
	jo L_490823
L_270395:
	cmpq $0x1,%r15
	je L_490817
L_270396:
	movq 0x8(%r15),%r15
	jmp L_270393
.p2align 0x4
L_490817:
L_270397:
L_270398:
	movslq %ecx,%rdx
	movq %rdx,0x40(%rbp)
	testq %rdx,%rdx
	jz L_490822
L_270399:
	cmpq $0x7FFFFFFF,%rdx
	ja L_490821
L_270400:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14FB,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_270401+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_270401
.p2align 0x4
.long 0x445D
L_270401:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq %rax,0x48(%rbp)
L_270402:
	movq 0x38(%rbp),%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3167:
	cmpq 0x40(%rbp),%r15
	jnl L_490819
L_270407:
	cmpq $0x1,%r14
	je L_490818
L_270408:
	movq %r15,%r13
	movq %r15,%r11
	movq 0x0(%r14),%r10
	movq 0x8(%r14),%r14
	movq 0x0(%r10),%r9
	movq 0x8(%r10),%r8
	movq 0x48(%rbp),%r10
	movq %r10,%rsp
	shrq $0x8,%rsp
	movq (gcState+0x3C8)(%rip),%rsi
	movq %rsp,%rax
	movb $0x1,0x0(%rsi,%rax,1)
	salq $0x4,%r13
	movq %r9,0x0(%r10,%r13,1)
	movq %r10,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%rsi,%r13,1)
	salq $0x4,%r11
	movq %r8,0x8(%r10,%r11,1)
	incq %r15
	jmp loop_3167
.p2align 0x4
L_490818:
L_270409:
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_490819:
L_270403:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_270404
L_270405:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_270406+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_270406
.p2align 0x4
.long 0x445E
L_270406:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_270404:
	movq 0x48(%rbp),%r15
	movq $0xB2D,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x1C1B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x20,%r12
	movq %r15,0x0(%r14)
	movq 0x30(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x50(%rbp),%r15
	movq %r15,0x10(%r14)
	movq %r14,0x30(%rbp)
	jmp L_270291
.p2align 0x4
L_490821:
L_270410:
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_490822:
L_270411:
	movq (globalObjptr+0x2630)(%rip),%r15
	movq %r15,0x48(%rbp)
	jmp L_270402
.p2align 0x4
L_490823:
L_270394:
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_490824:
L_270412:
	xorl %ecx,%ecx
	jmp L_270398
.p2align 0x4
L_490825:
L_270416:
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_490826:
L_270417:
	movq (globalObjptr+0x2628)(%rip),%r15
	movq %r15,0x50(%rbp)
	jmp L_270390
.p2align 0x4
L_490827:
L_270426:
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_490828:
L_270430:
	xorl %ecx,%ecx
	jmp L_270386
.p2align 0x4
.long 0x7BE
L_270385:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq $0x1,0x40(%rbp)
	xorl %ecx,%ecx
	jmp L_270386
.p2align 0x4
.long 0x7BE
L_271126:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r14
	movq %r14,0x38(%rbp)
	cmpq $0x1,%r14
	je L_490843
L_271127:
	movq 0x8(%r14),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_271086:
	incl %ecx
	jo L_490842
L_271088:
	cmpq $0x1,%r15
	je L_490829
L_271089:
	movq 0x8(%r15),%r15
	jmp L_271086
.p2align 0x4
L_490829:
L_271090:
	movq %r14,0x38(%rbp)
L_271091:
	movslq %ecx,%rdx
	movq %rdx,0x40(%rbp)
	testq %rdx,%rdx
	jz L_490841
L_271092:
	cmpq $0x7FFFFFFF,%rdx
	ja L_490840
L_271093:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1583,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_271094+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_271094
.p2align 0x4
.long 0x2CEA
L_271094:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq %rax,0x48(%rbp)
L_271095:
	movq 0x38(%rbp),%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3186:
	cmpq 0x40(%rbp),%r15
	jnl L_490831
L_271100:
	cmpq $0x1,%r14
	je L_490830
L_271101:
	movq %r15,%r13
	movq %r15,%r11
	movq %r15,%r10
	movq 0x0(%r14),%r9
	movq 0x8(%r14),%r14
	movq 0x0(%r9),%r8
	movq 0x8(%r9),%rsp
	movq 0x10(%r9),%rsi
	movq 0x48(%rbp),%r9
	movq %r9,%rdi
	shrq $0x8,%rdi
	movq (gcState+0x3C8)(%rip),%rdx
	movb $0x1,0x0(%rdx,%rdi,1)
	imulq $0x18,%r13
	movq %r8,0x0(%r9,%r13,1)
	movq %r9,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%rdx,%r13,1)
	imulq $0x18,%r11
	movq %rsp,0x8(%r9,%r11,1)
	movq %r9,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%rdx,%r13,1)
	imulq $0x18,%r10
	movq %rsi,0x10(%r9,%r10,1)
	incq %r15
	jmp loop_3186
.p2align 0x4
L_490830:
L_271102:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_490831:
L_271096:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_271097
L_271098:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_271099+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_271099
.p2align 0x4
.long 0x4466
L_271099:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_271097:
	movq 0x48(%rbp),%r14
	movq $0xB31,0xFFFFFFFFFFFFFFF8(%r14)
	movq $0x26F7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq 0x30(%rbp),%r13
	xorl %ecx,%ecx
	movq $0x1,%r11
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_271045:
	incl %ecx
	jo L_490838
L_271047:
	cmpq $0x1,%r15
	je L_490832
L_271048:
	movq 0x8(%r15),%r15
	jmp L_271045
.p2align 0x4
L_490832:
L_271049:
	movq %r13,0x30(%rbp)
	movq %r14,0x38(%rbp)
L_271050:
	movslq %ecx,%rdx
	movq %rdx,0x40(%rbp)
	testq %rdx,%rdx
	jz L_490837
L_271051:
	cmpq $0x7FFFFFFF,%rdx
	ja L_490836
L_271052:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1499,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_271053+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_271053
.p2align 0x4
.long 0x2CEA
L_271053:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq %rax,0x48(%rbp)
L_271054:
	movq 0x38(%rbp),%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3185:
	cmpq 0x40(%rbp),%r15
	jnl L_490834
L_271059:
	cmpq $0x1,%r14
	je L_490833
L_271060:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq 0x48(%rbp),%r11
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r13,0x0(%r11,%r15,8)
	incq %r15
	jmp loop_3185
.p2align 0x4
L_490833:
L_271061:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_490834:
L_271055:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_271056
L_271057:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_271058+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_271058
.p2align 0x4
.long 0x4466
L_271058:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_271056:
	movq 0x48(%rbp),%r15
	movq $0xB27,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x1C27,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x30(%rbp)
	jmp L_270291
.p2align 0x4
L_490836:
L_271062:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_490837:
L_271063:
	movq (globalObjptr+0xD28)(%rip),%r15
	movq %r15,0x48(%rbp)
	jmp L_271054
.p2align 0x4
L_490838:
L_271046:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_490840:
L_271103:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_490841:
L_271104:
	movq (globalObjptr+0x25D0)(%rip),%r15
	movq %r15,0x48(%rbp)
	jmp L_271095
.p2align 0x4
L_490842:
L_271087:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_490843:
L_271128:
	xorl %ecx,%ecx
	jmp L_271091
.p2align 0x4
.long 0x2CD6
L_271119:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_271120
L_271123:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_271124+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_271124
.p2align 0x4
.long 0x2424
L_271124:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_271120:
	movq $0x159,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r11
	movq %r11,0x0(%r15)
	movq 0x50(%rbp),%r11
	movq %r11,0x8(%r15)
	movq $0x2535,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq 0x38(%rbp),%r15
	cmpq $0x1,%r15
	je L_490844
L_271121:
	movq 0x10(%r15),%r13
	movq 0x8(%r15),%r11
	movq 0x0(%r15),%r10
	movq %r14,0x38(%rbp)
	movq %r10,%r15
	movq %r11,%r14
x_890:
	movq $0x395,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r14,0x8(%r11)
	movq %r15,0x10(%r11)
	movq %r11,0x50(%rbp)
	addq $0x20,%r12
	addq $0x50,%rbp
	leaq (L_271071+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2053
.p2align 0x4
L_490844:
L_271122:
	movq %r14,0x48(%rbp)
	movq $0x1,0x38(%rbp)
L_271073:
	movq 0x40(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_271074+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2034
.p2align 0x4
.long 0x2CD6
L_271068:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_271069
L_271116:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_271117+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_271117
.p2align 0x4
.long 0x2354
L_271117:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_271069:
	movq 0x38(%rbp),%r15
	cmpq $0x1,%r15
	je L_490846
L_271070:
	movq 0x10(%r15),%r13
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r11
	movq 0x48(%rbp),%r10
	movq %r10,0x38(%rbp)
	movq %r11,%r15
	jmp x_890
.p2align 0x4
L_490846:
L_271115:
	movq $0x1,0x38(%rbp)
	jmp L_271073
.p2align 0x4
.long 0x7BE
fromList_23:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r14
	movq %r14,0x38(%rbp)
	cmpq $0x1,%r14
	je L_490848
L_271044:
	movq 0x8(%r14),%r15
	movq 0x30(%rbp),%r13
	xorl %ecx,%ecx
	jmp L_271045
.p2align 0x4
L_490848:
L_271064:
	xorl %ecx,%ecx
	jmp L_271050
.p2align 0x4
.long 0x2CD6
L_270915:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_270916
L_270962:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_270963+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_270963
.p2align 0x4
.long 0x2574
L_270963:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_270916:
	movq (globalObjptr+0x1610)(%rip),%r15
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_490849
L_270917:
	xorl %ecx,%ecx
	jmp L_270918
.p2align 0x4
L_490849:
L_270961:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x446F
L_270954:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x38(%rbp)
L_270929:
	movq (globalObjptr+0xEF8)(%rip),%r14
	movq $0x59,0xFFFFFFFFFFFFFFF8(%r14)
	movq 0x38(%rbp),%r14
	cmpq $0x1,%r14
	je L_490858
L_270930:
	movq 0x8(%r14),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_270931:
	incl %ecx
	jo L_490857
L_270933:
	cmpq $0x1,%r15
	je L_490851
L_270934:
	movq 0x8(%r15),%r15
	jmp L_270931
.p2align 0x4
L_490851:
L_270935:
L_270936:
	movslq %ecx,%rdx
	movq %rdx,0x40(%rbp)
	testq %rdx,%rdx
	jz L_490856
L_270937:
	cmpq $0x7FFFFFFF,%rdx
	ja L_490855
L_270938:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1581,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_270939+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_270939
.p2align 0x4
.long 0x4470
L_270939:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq %rax,0x50(%rbp)
L_270940:
	movq 0x38(%rbp),%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3183:
	cmpq 0x40(%rbp),%r15
	jnl L_490853
L_270945:
	cmpq $0x1,%r14
	je L_490852
L_270946:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq 0x50(%rbp),%r11
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r13,0x0(%r11,%r15,8)
	incq %r15
	jmp loop_3183
.p2align 0x4
L_490852:
L_270947:
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_490853:
L_270941:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_270942
L_270943:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_270944+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_270944
.p2align 0x4
.long 0x4471
L_270944:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_270942:
	movq 0x50(%rbp),%r15
	movq $0xB29,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x1C21,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x30,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x48(%rbp),%r13
	movq %r13,0x8(%r14)
	movq (globalObjptr+0xEF8)(%rip),%r13
	movq %r13,0x10(%r14)
	movq 0x58(%rbp),%r13
	movq %r13,0x18(%r14)
	movq %r15,0x20(%r14)
	movq %r14,0x30(%rbp)
	jmp L_270291
.p2align 0x4
L_490855:
L_270948:
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_490856:
L_270949:
	movq (globalObjptr+0x25C8)(%rip),%r15
	movq %r15,0x50(%rbp)
	jmp L_270940
.p2align 0x4
L_490857:
L_270932:
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_490858:
L_270950:
	xorl %ecx,%ecx
	jmp L_270936
.p2align 0x4
.long 0x446F
L_270927:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_270928
L_270951:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_270952+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_270952
.p2align 0x4
.long 0x4472
L_270952:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_270928:
	movq $0x145,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x26F9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq %r14,0x38(%rbp)
	jmp L_270929
.p2align 0x4
.long 0x2569
L_270869:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r14
	movq %r14,0x48(%rbp)
	cmpq $0x1,%r14
	je L_490867
L_270870:
	movq 0x8(%r14),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_270871:
	incl %ecx
	jo L_490866
L_270873:
	cmpq $0x1,%r15
	je L_490860
L_270874:
	movq 0x8(%r15),%r15
	jmp L_270871
.p2align 0x4
L_490860:
L_270875:
L_270876:
	movslq %ecx,%rdx
	movq %rdx,0x68(%rbp)
	testq %rdx,%rdx
	jz L_490865
L_270877:
	cmpq $0x7FFFFFFF,%rdx
	ja L_490864
L_270878:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1585,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_270879+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_270879
.p2align 0x4
.long 0x446D
L_270879:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq %rax,0x70(%rbp)
L_270880:
	movq 0x48(%rbp),%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3182:
	cmpq 0x68(%rbp),%r15
	jnl L_490862
L_270885:
	cmpq $0x1,%r14
	je L_490861
L_270886:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq 0x70(%rbp),%r11
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r13,0x0(%r11,%r15,8)
	incq %r15
	jmp loop_3182
.p2align 0x4
L_490861:
L_270887:
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_490862:
L_270881:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_270882
L_270883:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_270884+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_270884
.p2align 0x4
.long 0x446E
L_270884:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_270882:
	movq 0x70(%rbp),%r14
	movq $0x3A5,0xFFFFFFFFFFFFFFF8(%r14)
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x58(%rbp),%r13
	movq %r13,0x8(%r15)
	movq $0x3A7,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x18,%r12
	movq %r14,0x8(%r13)
	movq %r13,%r15
	jmp L_270853
.p2align 0x4
L_490864:
L_270888:
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_490865:
L_270889:
	movq (globalObjptr+0x25D8)(%rip),%r15
	movq %r15,0x70(%rbp)
	jmp L_270880
.p2align 0x4
L_490866:
L_270872:
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_490867:
L_270890:
	xorl %ecx,%ecx
	jmp L_270876
.p2align 0x4
.long 0xFAB
L_270855:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_270856
L_270858:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_270859+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_270859
.p2align 0x4
.long 0x4461
L_270859:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_270856:
	movq 0x30(%rbp),%r14
	movq 0x38(%rbp),%r15
	jmp L_270857
.p2align 0x4
.long 0x49E
L_270778:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_270779
L_270820:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_270821+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_270821
.p2align 0x4
.long 0x2354
L_270821:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_270779:
	movq $0x65D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x40(%rbp)
	movq %r15,0x30(%rbp)
	jmp L_270780
.p2align 0x4
.long 0x982
L_270781:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_270782
L_270818:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_270819+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_270819
.p2align 0x4
.long 0x2354
L_270819:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_270782:
	movq $0x13D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x50(%rbp)
	addq $0x18,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x48(%rbp),%r13
	movq %r13,0x8(%r14)
	movq $0xC67,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x58(%rbp)
	addq $0x10,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14)
	cmpq $0x1,%r13
	je L_490873
L_270783:
	movq 0x8(%r13),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_270784:
	incl %ecx
	movl %ecx,0x38(%rbp)
	jo L_490872
L_270786:
	cmpq $0x1,%r15
	je L_490870
L_270787:
	movq 0x8(%r15),%r15
	jmp L_270784
.p2align 0x4
L_490870:
L_270788:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_270789
L_270815:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_270816+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_270816
.p2align 0x4
.long 0x446B
L_270816:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_270789:
	movl 0x38(%rbp),%ecx
L_270790:
	movl %ecx,0x68(%rbp)
	movq $0x3735,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x60(%rbp)
	leaq L_270814(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x60,%rbp
	leaq (L_270791+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_9
.p2align 0x4
L_490872:
L_270785:
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_490873:
L_270817:
	xorl %ecx,%ecx
	jmp L_270790
.p2align 0x4
.long 0x4468
L_270650:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_270651
L_270667:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_270668+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_270668
.p2align 0x4
.long 0x257A
L_270668:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_270651:
	movq $0x20E7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x50(%rbp),%r14
	cmpq $0x1,%r14
	je L_490875
L_270652:
	movq %r15,0x58(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x50(%rbp)
	jmp L_270649
.p2align 0x4
L_490875:
L_270653:
	movq 0x58(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq $0x1,0x58(%rbp)
.p2align 0x4,,0x7
L_270654:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_490877
.p2align 0x4,,0x7
L_270655:
	movq $0x20E7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x38(%rbp),%r14
	cmpq $0x1,%r14
	je L_270658
L_270656:
	movq %r15,0x58(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x38(%rbp)
	movq %r15,0x50(%rbp)
	jmp L_270654
.p2align 0x4
L_490877:
L_270665:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_270666+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_270666
.p2align 0x4
.long 0x241E
L_270666:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	jmp L_270655
.p2align 0x4
.long 0x25
L_270669:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x7BE
L_270588:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_270589
L_270595:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_270596+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_270596
.p2align 0x4
.long 0x1928
L_270596:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_270589:
	movq (globalObjptr+0x1610)(%rip),%r15
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_490879
L_270590:
	xorl %ecx,%ecx
	jmp L_270591
.p2align 0x4
L_490879:
L_270594:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x7BE
L_270525:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_270526
L_270564:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_270565+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_270565
.p2align 0x4
.long 0x1928
L_270565:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_270526:
	movq (globalObjptr+0x1610)(%rip),%r15
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_490881
L_270527:
	xorl %ecx,%ecx
	jmp L_270528
.p2align 0x4
L_490881:
L_270563:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4462
L_270473:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r14
	movq %r14,0x30(%rbp)
	cmpq $0x1,%r14
	je L_490890
L_270474:
	movq 0x8(%r14),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_270475:
	incl %ecx
	jo L_490889
L_270477:
	cmpq $0x1,%r15
	je L_490883
L_270478:
	movq 0x8(%r15),%r15
	jmp L_270475
.p2align 0x4
L_490883:
L_270479:
L_270480:
	movslq %ecx,%rdx
	movq %rdx,0x60(%rbp)
	testq %rdx,%rdx
	jz L_490888
L_270481:
	cmpq $0x7FFFFFFF,%rdx
	ja L_490887
L_270482:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1585,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_270483+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_270483
.p2align 0x4
.long 0x4463
L_270483:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq %rax,0x68(%rbp)
L_270484:
	movq 0x30(%rbp),%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3171:
	cmpq 0x60(%rbp),%r15
	jnl L_490885
L_270489:
	cmpq $0x1,%r14
	je L_490884
L_270490:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq 0x68(%rbp),%r11
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r13,0x0(%r11,%r15,8)
	incq %r15
	jmp loop_3171
.p2align 0x4
L_490884:
L_270491:
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_490885:
L_270485:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_270486
L_270487:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_270488+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_270488
.p2align 0x4
.long 0x4464
L_270488:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_270486:
	movq 0x68(%rbp),%r14
	movq $0x3A5,0xFFFFFFFFFFFFFFF8(%r14)
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x50(%rbp),%r13
	movq %r13,0x8(%r15)
	movq $0x3A7,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x18,%r12
	movq %r14,0x8(%r13)
	movq %r13,%r15
	jmp L_270470
.p2align 0x4
L_490887:
L_270492:
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_490888:
L_270493:
	movq (globalObjptr+0x25D8)(%rip),%r15
	movq %r15,0x68(%rbp)
	jmp L_270484
.p2align 0x4
L_490889:
L_270476:
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_490890:
L_270494:
	xorl %ecx,%ecx
	jmp L_270480
.p2align 0x4
.long 0x2CD6
L_271071:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_271072
L_271113:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_271114+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_271114
.p2align 0x4
.long 0x2424
L_271114:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_271072:
	movq $0x65D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x48(%rbp)
	movq %r15,0x38(%rbp)
	jmp L_271073
.p2align 0x4
.long 0x445F
L_271074:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_271075
L_271111:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_271112+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_271112
.p2align 0x4
.long 0x2424
L_271112:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_271075:
	movq $0x13D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x58(%rbp)
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x50(%rbp),%r13
	movq %r13,0x8(%r14)
	movq $0xC67,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x60(%rbp)
	addq $0x10,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14)
	cmpq $0x1,%r13
	je L_490895
L_271076:
	movq 0x8(%r13),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_271077:
	incl %ecx
	movl %ecx,0x40(%rbp)
	jo L_490894
L_271079:
	cmpq $0x1,%r15
	je L_490892
L_271080:
	movq 0x8(%r15),%r15
	jmp L_271077
.p2align 0x4
L_490892:
L_271081:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_271082
L_271108:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_271109+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_271109
.p2align 0x4
.long 0x4476
L_271109:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_271082:
	movl 0x40(%rbp),%ecx
L_271083:
	movl %ecx,0x70(%rbp)
	movq $0x3735,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x68(%rbp)
	leaq L_271107(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x68,%rbp
	leaq (L_271084+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_9
.p2align 0x4
L_490894:
L_271078:
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_490895:
L_271110:
	xorl %ecx,%ecx
	jmp L_271083
.p2align 0x4
.long 0x446A
L_270791:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_270792
L_270812:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_270813+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_270813
.p2align 0x4
.long 0x445D
L_270813:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_270792:
	movq $0x10C9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x38(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x50(%rbp),%r13
	movq %r13,0x10(%r15)
	movq $0x26FF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x1,%r15
	xorl %ecx,%ecx
	jmp L_270793
.p2align 0x4
.long 0x25
L_270814:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4475
L_271084:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_271085
L_271105:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_271106+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_271106
.p2align 0x4
.long 0x4465
L_271106:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_271085:
	movq $0x10C9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x40(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x58(%rbp),%r13
	movq %r13,0x10(%r15)
	movq $0x26FF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x1,%r15
	xorl %ecx,%ecx
	jmp L_271086
.p2align 0x4
.long 0x25
L_271107:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl x_2077
.hidden x_2077
x_2077:
L_271157:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x18(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_271261
L_271158:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_490904
L_271159:
	movq 0x0(%rbp),%r11
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0x2341,%r15
	je L_490903
L_271245:
	movq 0x18(%r11),%r15
	movq 0x10(%r11),%r13
	movq 0x8(%r11),%r14
	movq 0x0(%r11),%r10
	cmpq $0x1,%r15
	je L_490902
L_271246:
	movq %r15,0x20(%rbp)
	movq %r10,%r15
L_271247:
	movq 0x20(%rbp),%r11
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r10
	movl %r10d,%r9d
	movslq %r9d,%r8
	cmpq %r8,%r10
	jne L_490901
L_271249:
	cmpl $0x1,%r9d
	jng L_490900
L_271257:
	cmpq $0x1,%r10
	jna L_490899
L_271259:
	cmpb $0x27,0x1(%r11)
	sete %al
	movzbl %al,%eax
	movl %eax,0x28(%rbp)
L_271251:
	movq %r15,0x40(%rbp)
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x30(%rbp)
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	leaq L_271256(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x40,%rbp
	leaq (L_271252+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_490899:
L_271258:
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_490900:
L_271250:
	movl $0x0,0x28(%rbp)
	jmp L_271251
.p2align 0x4
L_490901:
L_271248:
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_490902:
L_271260:
	movq (globalObjptr+0x109B8)(%rip),%r11
	movq %r11,0x20(%rbp)
	movq %r10,%r15
	jmp L_271247
.p2align 0x4
L_490903:
L_271160:
	movq 0x8(%r11),%r15
	movq %r15,0x28(%rbp)
	movq 0x0(%r11),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (fromList_24+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2091
.p2align 0x4
L_490904:
L_271261:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_271262+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_271262
.p2align 0x4
.long 0x45C
L_271262:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	jmp L_271159
.p2align 0x4
.long 0x7BC
L_271252:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movl 0x40(%rbp),%r15d
	movl %r15d,0x2C(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_271253
L_271254:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_271255+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_271255
.p2align 0x4
.long 0x7B6
L_271255:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_271253:
	movq $0x13,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x8BD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x20,%r12
	movl 0x2C(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movl 0x28(%rbp),%r13d
	movl %r13d,0x4(%r14)
	movq 0x20(%rbp),%r13
	movq %r13,0x10(%r14)
	movq $0x8BF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x20ED,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x1,%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_271162:
	incl %ecx
	jo L_490921
L_271164:
	cmpq $0x1,%r15
	je L_490906
L_271165:
	movq 0x8(%r15),%r15
	jmp L_271162
.p2align 0x4
L_490906:
L_271166:
	movq %r14,0x20(%rbp)
L_271167:
	movslq %ecx,%rdx
	movq %rdx,0x28(%rbp)
	testq %rdx,%rdx
	jz L_490920
L_271168:
	cmpq $0x7FFFFFFF,%rdx
	ja L_490919
L_271169:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1497,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_271170+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_271170
.p2align 0x4
.long 0x4477
L_271170:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq %rax,0x30(%rbp)
L_271171:
	movq 0x20(%rbp),%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3188:
	cmpq 0x28(%rbp),%r15
	jnl L_490908
L_271239:
	cmpq $0x1,%r14
	je L_490907
L_271240:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq 0x30(%rbp),%r11
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r13,0x0(%r11,%r15,8)
	incq %r15
	jmp loop_3188
.p2align 0x4
L_490907:
L_271241:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_490908:
L_271172:
	movq 0x30(%rbp),%r15
	movq $0x59,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq %r14,0x20(%rbp)
	movl %r14d,%r15d
	movl %r15d,0x28(%rbp)
	movslq %r15d,%r13
	cmpq %r13,%r14
	je L_490909
L_271173:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_490909:
L_271174:
	cmpl $0x0,0x28(%rbp)
	jl L_490918
L_271175:
	movl $0x0,0x2C(%rbp)
.p2align 0x4,,0x7
loop_3189:
	movl 0x2C(%rbp),%r14d
	cmpl 0x28(%rbp),%r14d
	jnl L_490917
L_271177:
	movslq %r14d,%r15
	movq 0x30(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
loop_3190:
	cmpl 0x2C(%rbp),%ecx
	je L_490916
L_271178:
	movslq %ecx,%r14
	cmpq 0x20(%rbp),%r14
	jnb L_490915
L_271180:
	movq 0x8(%r15),%r10
	movq 0x10(%r10),%r9
	movq %r9,0x38(%rbp)
	movq 0x30(%rbp),%r10
	movq 0x0(%r10,%r14,8),%r8
	movq 0x8(%r8),%rsp
	movq 0x10(%rsp),%rsi
	cmpq %rsi,%r9
	je L_271191
L_271181:
	movq 0xFFFFFFFFFFFFFFF0(%r9),%r13
	cmpq 0xFFFFFFFFFFFFFFF0(%rsi),%r13
	jne L_271183
L_271186:
	xorq %r11,%r11
	movq %rsi,%r14
.p2align 0x4,,0x7
vectorEqualLoop_210:
	cmpq %r11,%r13
	je L_490912
L_271187:
	movq 0x38(%rbp),%r9
	movb 0x0(%r9,%r11,1),%r10b
	cmpb %r10b,0x0(%r14,%r11,1)
	jne L_490910
L_271189:
	incq %r11
	jmp vectorEqualLoop_210
.p2align 0x4
L_490910:
L_271183:
	incl %ecx
	jo L_490911
L_271185:
	jmp loop_3190
.p2align 0x4
L_490911:
L_271184:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_490912:
L_271191:
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	leaq L_271223(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x2620)(%rip),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_271192+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_490915:
L_271179:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_490916:
.p2align 0x4,,0x7
L_271221:
	incl 0x2C(%rbp)
	jmp loop_3189
.p2align 0x4
L_490917:
L_271176:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x30(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_490918:
L_271238:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_490919:
L_271242:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_490920:
L_271243:
	movq (globalObjptr+0xD20)(%rip),%r15
	movq %r15,0x30(%rbp)
	jmp L_271171
.p2align 0x4
L_490921:
L_271163:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x25
L_271256:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x498
fromList_24:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r14
	movq %r14,0x20(%rbp)
	cmpq $0x1,%r14
	je L_490923
L_271161:
	movq 0x8(%r14),%r15
	xorl %ecx,%ecx
	jmp L_271162
.p2align 0x4
L_490923:
L_271244:
	xorl %ecx,%ecx
	jmp L_271167
.p2align 0x4
.long 0x49F
L_271192:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_271193+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x25
L_271223:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x49F
L_271193:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_271194+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x2CD1
L_271194:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_271195
L_271234:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_271235+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_271235
.p2align 0x4
.long 0x447B
L_271235:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_271195:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x50(%rbp)
	addq $0x18,%r12
	movq 0x48(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_271196:
	addl 0x0(%r15),%ecx
	movl %ecx,0x38(%rbp)
	jo L_490927
L_271198:
	cmpq $0x1,%r14
	je L_490924
L_271199:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_271196
.p2align 0x4
L_490924:
L_271200:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_271201
L_271232:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_271233+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_271233
.p2align 0x4
.long 0x244C
L_271233:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_271201:
	movl 0x38(%rbp),%ecx
	testl %ecx,%ecx
	jz L_490925
L_271202:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
L_271203:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x38(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0xE040)(%rip),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_271204+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_490925:
L_271231:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_271203
.p2align 0x4
L_490927:
L_271197:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x49F
L_271204:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_271205
L_271229:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_271230+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_271230
.p2align 0x4
.long 0x447B
L_271230:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_271205:
	movq $0x3B47,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x58(%rbp)
	movl 0x28(%rbp),%r15d
	movl %r15d,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_271206+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
.long 0x4478
L_271206:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq %r15,0x58(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x60(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0x68(%rbp)
	movq (globalObjptr+0xD0F8)(%rip),%r15
	movq %r15,0x70(%rbp)
	addq $0x58,%rbp
	leaq (L_271207+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
.long 0x4478
L_271207:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_271208
L_271227:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_271228+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_271228
.p2align 0x4
.long 0x447A
L_271228:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_271208:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x58(%rbp)
	addq $0x18,%r12
	movq 0x48(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_271209:
	addl 0x0(%r15),%ecx
	movl %ecx,0x48(%rbp)
	jo L_490934
L_271211:
	cmpq $0x1,%r14
	je L_490930
L_271212:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_271209
.p2align 0x4
L_490930:
L_271213:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_271214
L_271225:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_271226+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_271226
.p2align 0x4
.long 0x4479
L_271226:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_271214:
	movl 0x48(%rbp),%ecx
	testl %ecx,%ecx
	jz L_490932
L_271215:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
L_271216:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_490931
L_271218:
	movl %r13d,0x0(%r15)
	movq 0x38(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq %r14,0x40(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x58(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x40,%rbp
	leaq (L_271219+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_490931:
L_271217:
	movq 0x18(%rbp),%r14
	movq %r14,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r14,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_490932:
L_271224:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_271216
.p2align 0x4
L_490934:
L_271210:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x8F8
L_271219:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq (globalObjptr+0x1608)(%rip),%r15
	movq (globalObjptr+0x1610)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	jne L_271221
L_271222:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl x_2091
.hidden x_2091
x_2091:
L_271263:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x18(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_271303
L_271264:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_490941
L_271265:
	movq 0x0(%rbp),%r11
	movq 0x18(%r11),%r15
	movq 0x10(%r11),%r13
	movq 0x8(%r11),%r14
	movq 0x0(%r11),%r10
	cmpq $0x1,%r10
	je L_490940
L_271266:
	movq %r10,0x20(%rbp)
L_271267:
	movq 0x20(%rbp),%r11
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r10
	movl %r10d,%r9d
	movslq %r9d,%r8
	cmpq %r10,%r8
	jne L_490939
L_271269:
	cmpl $0x1,%r9d
	jng L_490938
L_271299:
	cmpq $0x1,%r10
	jna L_490937
L_271301:
	cmpb $0x27,0x1(%r11)
	sete %al
	movzbl %al,%eax
	movl %eax,0x28(%rbp)
L_271271:
	movq %r15,0x40(%rbp)
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x30(%rbp)
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	leaq L_271298(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x40,%rbp
	leaq (L_271272+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_490937:
L_271300:
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_490938:
L_271270:
	movl $0x0,0x28(%rbp)
	jmp L_271271
.p2align 0x4
L_490939:
L_271268:
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_490940:
L_271302:
	movq (globalObjptr+0x109B8)(%rip),%r11
	movq %r11,0x20(%rbp)
	jmp L_271267
.p2align 0x4
L_490941:
L_271303:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_271304+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_271304
.p2align 0x4
.long 0x45C
L_271304:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	jmp L_271265
.p2align 0x4
.long 0x7BC
L_271272:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movl 0x40(%rbp),%r15d
	movl %r15d,0x2C(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_271273
L_271296:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_271297+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_271297
.p2align 0x4
.long 0x7B6
L_271297:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_271273:
	movq $0x13,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x8BD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x20,%r12
	movl 0x2C(%rbp),%r11d
	movl %r11d,0x0(%r14)
	movl 0x28(%rbp),%r11d
	movl %r11d,0x4(%r14)
	movq 0x20(%rbp),%r11
	movq %r11,0x10(%r14)
	movq $0x8BF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,0x38(%rbp)
	movq %r14,0x8(%r11)
	addq $0x18,%r12
	movq 0x30(%rbp),%r10
	movq %r10,0x0(%r11)
	movq 0x8(%rbp),%r11
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0x2341,%r15
	je L_490947
L_271280:
	movq 0x18(%r11),%r15
	movq 0x10(%r11),%r13
	movq 0x8(%r11),%r14
	movq 0x0(%r11),%r10
	cmpq $0x1,%r15
	je L_490946
L_271281:
	movq %r15,0x20(%rbp)
	movq %r10,%r15
L_271282:
	movq 0x20(%rbp),%r11
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r10
	movl %r10d,%r9d
	movslq %r9d,%r8
	cmpq %r10,%r8
	jne L_490945
L_271284:
	cmpl $0x1,%r9d
	jng L_490944
L_271292:
	cmpq $0x1,%r10
	jna L_490943
L_271294:
	cmpb $0x27,0x1(%r11)
	sete %al
	movzbl %al,%eax
	movl %eax,0x28(%rbp)
L_271286:
	movq %r15,0x48(%rbp)
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x30(%rbp)
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	leaq L_271291(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x48,%rbp
	leaq (L_271287+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_490943:
L_271293:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_490944:
L_271285:
	movl $0x0,0x28(%rbp)
	jmp L_271286
.p2align 0x4
L_490945:
L_271283:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_490946:
L_271295:
	movq (globalObjptr+0x109B8)(%rip),%r11
	movq %r11,0x20(%rbp)
	movq %r10,%r15
	jmp L_271282
.p2align 0x4
L_490947:
L_271274:
	movq 0x8(%r11),%r15
	movq %r15,0x48(%rbp)
	movq 0x0(%r11),%r15
	movq %r15,0x50(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x48,%rbp
	leaq (L_271275+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2091
.p2align 0x4
.long 0x25
L_271298:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x75D
L_271287:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movl 0x48(%rbp),%r15d
	movl %r15d,0x2C(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_271288
L_271289:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_271290+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_271290
.p2align 0x4
.long 0x7C0
L_271290:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_271288:
	movq $0x13,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x8BD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x20,%r12
	movl 0x2C(%rbp),%r15d
	movl %r15d,0x0(%r14)
	movl 0x28(%rbp),%r15d
	movl %r15d,0x4(%r14)
	movq 0x20(%rbp),%r15
	movq %r15,0x10(%r14)
	movq $0x8BF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x20ED,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq %r14,%r15
L_271277:
	movq $0x20ED,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x38(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x25
L_271291:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x78B
L_271275:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_271276
L_271278:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_271279+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_271279
.p2align 0x4
.long 0x7B5
L_271279:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_271276:
	movq 0x20(%rbp),%r15
	jmp L_271277
.text
.p2align 0x4
.globl x_2085
.hidden x_2085
x_2085:
L_271305:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_271306
L_271326:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_271327+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_271327
.p2align 0x4
.long 0x45B
L_271327:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_271306:
	movq 0x0(%rbp),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_271307+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2050
.p2align 0x4
.long 0x4E5
L_271307:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_271308
L_271324:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_271325+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_271325
.p2align 0x4
.long 0x4E9
L_271325:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_271308:
	movq $0x159,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x28(%rbp)
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x8(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_271309+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2046
.p2align 0x4
.long 0x50B
L_271309:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_271310
L_271322:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_271323+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_271323
.p2align 0x4
.long 0x51F
L_271323:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_271310:
	movq $0x10CB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x30(%rbp)
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x20(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_490955
L_271311:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x22B8,%r15
	je L_490954
L_271318:
	movq 0x0(%r14),%r15
.p2align 0x4,,0x7
loop_3191:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x22B8,%r14
	je L_490953
L_271320:
	movq 0x0(%r15),%r15
	jmp loop_3191
.p2align 0x4
L_490953:
L_271319:
	movq 0x10(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	addq $0x40,%rbp
	leaq (L_271313+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2085
.p2align 0x4
L_490954:
L_271312:
	movq 0x10(%r14),%r15
	movq %r15,0x40(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x48(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x50(%rbp)
	addq $0x40,%rbp
	leaq (L_271313+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2085
.p2align 0x4
L_490955:
L_271321:
	movq $0x1,%r15
L_271315:
	movq $0x10CD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x30(%rbp),%r13
	movq %r13,0x8(%r14)
	movq $0x26FD,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r13,0x0(%rbp)
	addq $0x18,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x5F1
L_271313:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_271314
L_271316:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_271317+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_271317
.p2align 0x4
.long 0x489
L_271317:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_271314:
	movq 0x38(%rbp),%r15
	jmp L_271315
.text
.p2align 0x4
.globl x_2084
.hidden x_2084
x_2084:
L_271328:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_271329
L_271355:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_271356+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_271356
.p2align 0x4
.long 0x45B
L_271356:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_271329:
	movq 0x0(%rbp),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_271330+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2050
.p2align 0x4
.long 0x4E5
L_271330:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_271331
L_271353:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_271354+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_271354
.p2align 0x4
.long 0x4E9
L_271354:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_271331:
	movq $0x159,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x28(%rbp)
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x8(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_271332+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2034
.p2align 0x4
.long 0x50B
L_271332:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_271333
L_271351:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_271352+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_271352
.p2align 0x4
.long 0x51F
L_271352:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_271333:
	movq $0x13D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x30(%rbp)
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r15
	cmpq $0x1,%r15
	je L_490963
L_271334:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x22B6,%r14
	je L_490960
L_271345:
	movq 0x10(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	addq $0x40,%rbp
	leaq (L_271346+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2084
.p2align 0x4
L_490960:
L_271335:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x22B8,%r15
	je L_490962
L_271342:
	movq 0x0(%r14),%r14
	movq %r14,%r15
.p2align 0x4,,0x7
loop_3192:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x22B8,%r14
	je L_490961
L_271344:
	movq 0x0(%r15),%r15
	jmp loop_3192
.p2align 0x4
L_490961:
L_271343:
	movq 0x10(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	addq $0x40,%rbp
	leaq (L_271337+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2085
.p2align 0x4
L_490962:
L_271336:
	movq 0x10(%r14),%r15
	movq %r15,0x40(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x48(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x50(%rbp)
	addq $0x40,%rbp
	leaq (L_271337+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2085
.p2align 0x4
L_490963:
L_271350:
	movq $0x1,%r13
	movq $0x1,%r14
	xchgq %r13,%r15
L_271339:
	movq %r15,0x0(%rbp)
	movq $0x10CF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x30(%rbp),%r13
	movq %r13,0x8(%r15)
	movq $0x26FB,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	movq %r13,0x8(%rbp)
	addq $0x18,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x5F1
L_271346:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_271347
L_271348:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_271349+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_271349
.p2align 0x4
.long 0x5F4
L_271349:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_271347:
	movq 0x38(%rbp),%r15
	movq 0x40(%rbp),%r14
	jmp L_271339
.p2align 0x4
.long 0x5F1
L_271337:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_271338
L_271340:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_271341+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_271341
.p2align 0x4
.long 0x489
L_271341:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_271338:
	movq 0x38(%rbp),%r15
	movq $0x1,%r14
	jmp L_271339
.text
.p2align 0x4
.globl x_2081
.hidden x_2081
x_2081:
L_271357:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_271358
L_271374:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_271375+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_271375
.p2align 0x4
.long 0x45F
L_271375:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_271358:
	movq 0x0(%rbp),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_271359+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2080
.p2align 0x4
.long 0x521
L_271359:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_271360
L_271372:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_271373+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_271373
.p2align 0x4
.long 0x4E9
L_271373:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_271360:
	movq $0x10C1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x22FB,%r14
	je L_490968
L_271367:
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq $0x3C1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	movq %r11,0x10(%r15)
	movq %r15,0x38(%rbp)
	addq $0x20,%r12
	addq $0x38,%rbp
	leaq (L_271368+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2080
.p2align 0x4
L_490968:
L_271361:
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_271362+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2081
.p2align 0x4
.long 0x51A
L_271368:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_271369
L_271370:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_271371+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_271371
.p2align 0x4
.long 0x5F4
L_271371:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_271369:
	movq $0x10C1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x10(%r15)
	movq $0x2705,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq %r14,%r15
L_271364:
	movq $0x2705,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x51A
L_271362:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_271363
L_271365:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_271366+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_271366
.p2align 0x4
.long 0x488
L_271366:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_271363:
	movq 0x30(%rbp),%r15
	jmp L_271364
.text
.p2align 0x4
.globl x_2080
.hidden x_2080
x_2080:
L_271376:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x10(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_271491
L_271377:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_490979
L_271378:
	movq 0x0(%rbp),%r11
	movq 0x10(%r11),%r10
	movq %r10,0x18(%rbp)
	movq 0x8(%r11),%r10
	movq %r10,0x20(%rbp)
	movq 0x0(%r11),%r15
	cmpq $0x1,%r15
	je L_490977
L_271379:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x233F,%r14
	je L_490976
L_271471:
	movq 0x18(%r15),%r14
	movq 0x10(%r15),%r13
	movq 0x8(%r15),%r11
	movq 0x0(%r15),%r10
	cmpq $0x1,%r14
	je L_490975
L_271472:
	movq %r14,0x28(%rbp)
	movq %r10,%r15
	movq %r11,%r14
L_271473:
	movq 0x28(%rbp),%r11
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r10
	movl %r10d,%r9d
	movslq %r9d,%r8
	cmpq %r10,%r8
	jne L_490974
L_271475:
	cmpl $0x1,%r9d
	jng L_490973
L_271486:
	cmpq $0x1,%r10
	jna L_490972
L_271488:
	cmpb $0x27,0x1(%r11)
	sete %al
	movzbl %al,%eax
	movl %eax,0x30(%rbp)
L_271477:
	movq %r15,0x48(%rbp)
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x38(%rbp)
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	leaq L_271485(%rip),%r15
	movq %r15,0x8(%rbp)
	movq %rbp,%r15
	addq $0x10,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x48,%rbp
	leaq (L_271478+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_490972:
L_271487:
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_490973:
L_271476:
	movl $0x0,0x30(%rbp)
	jmp L_271477
.p2align 0x4
L_490974:
L_271474:
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_490975:
L_271489:
	movq (globalObjptr+0x109B8)(%rip),%r9
	movq %r9,0x28(%rbp)
	movq %r10,%r15
	movq %r11,%r14
	jmp L_271473
.p2align 0x4
L_490976:
L_271380:
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_271381+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2077
.p2align 0x4
L_490977:
L_271490:
	movq (globalObjptr+0xEF8)(%rip),%r15
	movq $0x59,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x28(%rbp)
L_271382:
	movq 0x20(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x30(%rbp)
	movq 0x0(%r14),%r13
	movq 0x18(%r13),%r11
	movq %r11,0x38(%rbp)
	movq 0x10(%r13),%r11
	movq %r11,0x40(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x48(%rbp)
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_490978
L_271383:
L_271384:
	movq %r15,0x60(%rbp)
	leaq L_271469(%rip),%r15
	movq %r15,0x8(%rbp)
	movq %rbp,%r15
	addq $0x10,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movb $0x2E,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_271385+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp split_0
.p2align 0x4
L_490978:
L_271470:
	movq (globalObjptr+0xCA28)(%rip),%r15
	jmp L_271384
.p2align 0x4
L_490979:
L_271491:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_271492+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_271492
.p2align 0x4
.long 0x452
L_271492:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_271378
.p2align 0x4
.long 0x8E8
L_271478:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movl 0x48(%rbp),%r15d
	movl %r15d,0x34(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_271479
L_271483:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_271484+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_271484
.p2align 0x4
.long 0x5E6
L_271484:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_271479:
	movq $0x13,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x8BD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x20,%r12
	movl 0x34(%rbp),%r15d
	movl %r15d,0x0(%r14)
	movl 0x30(%rbp),%r15d
	movl %r15d,0x4(%r14)
	movq 0x28(%rbp),%r15
	movq %r15,0x10(%r14)
	movq $0x8BF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq %r12,(gcState+0x0)(%rip)
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x40(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1497,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_271480+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_271480
.p2align 0x4
.long 0x872
L_271480:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	xorq %r15,%r15
	movq %rax,%r14
.p2align 0x4,,0x7
loop_3194:
	cmpq $0x1,%r15
	jnl L_490981
L_271482:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_3194
.p2align 0x4
L_490981:
L_271481:
	movq $0x59,0xFFFFFFFFFFFFFFF8(%r14)
	movq %r14,0x28(%rbp)
	jmp L_271382
.p2align 0x4
.long 0x72E
L_271485:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x519
L_271381:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_271382
.p2align 0x4
.long 0xA7C
L_271385:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_271386
L_271467:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_271468+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_271468
.p2align 0x4
.long 0x4AD
L_271468:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_271386:
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_490983
L_271387:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	movq $0x1,0x50(%rbp)
L_271388:
	movq %r15,0x60(%rbp)
	leaq L_271465(%rip),%r15
	movq %r15,0x8(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_271389+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromString_23
.p2align 0x4
L_490983:
L_271466:
	movq $0x1,%r15
L_271397:
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x20(%rbp)
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x38(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x30(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x48(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x50(%rbp)
L_271398:
	movq %r15,%r14
	andq $0x3,%r14
	jnz x_891
L_271459:
	movq 0x0(%r15),%r14
	cmpq $0x1,0x8(%r15)
	jne x_2092
L_271460:
	movq %r14,%r15
L_271405:
	movq $0x141,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x30(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x20(%rbp),%r11
	movq %r11,0x0(%r13)
	movq 0x18(%rbp),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x22FD,%r15
	je L_490997
L_271425:
	movq 0x0(%r13),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	movq %r13,%r14
	shrq $0x1,%r14
	cmpq $0x22FF,%r14
	je L_490993
L_271443:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x2306,%r15
	je L_490991
L_271452:
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x2353,%r14
	je L_490990
L_271454:
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq %r11,%r14
L_271448:
	movq $0x141,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq $0x1,%r15
	movq %r13,%r14
L_271434:
	movq $0x10D5,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq $0x26F3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x1,%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_271408:
	incl %ecx
	jo L_490989
L_271410:
	cmpq $0x1,%r15
	je L_490984
L_271411:
	movq 0x8(%r15),%r15
	jmp L_271408
.p2align 0x4
L_490984:
L_271412:
	movq %r14,0x18(%rbp)
L_271413:
	movslq %ecx,%rdx
	movq %rdx,0x20(%rbp)
	testq %rdx,%rdx
	jz L_490988
L_271414:
	cmpq $0x7FFFFFFF,%rdx
	ja L_490987
L_271415:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x149B,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_271416+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_271416
.p2align 0x4
.long 0xC18
L_271416:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq %rax,%r15
L_271417:
	movq 0x18(%rbp),%r13
	xorq %r14,%r14
.p2align 0x4,,0x7
loop_3193:
	cmpq 0x20(%rbp),%r14
	jnl L_490986
L_271419:
	cmpq $0x1,%r13
	je L_490985
L_271420:
	movq 0x0(%r13),%r11
	movq 0x8(%r13),%r13
	movq %r15,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r11,0x0(%r15,%r14,8)
	incq %r14
	jmp loop_3193
.p2align 0x4
L_490985:
L_271421:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_490986:
L_271418:
	movq $0xB1D,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,(gcState+0x20)(%rip)
	movq %r15,0x10(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_490987:
L_271422:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_490988:
L_271423:
	movq (globalObjptr+0xD30)(%rip),%r15
	jmp L_271417
.p2align 0x4
L_490989:
L_271409:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_490990:
L_271453:
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x40,%rbp
	leaq (L_271446+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2060
.p2align 0x4
L_490991:
L_271444:
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x2353,%r14
	je L_490992
L_271451:
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq %r11,%r14
	jmp L_271448
.p2align 0x4
L_490992:
L_271445:
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x40,%rbp
	leaq (L_271446+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2060
.p2align 0x4
L_490993:
L_271426:
	movq 0x8(%r15),%r11
	movq %r11,%r14
	movq 0x0(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x2306,%r15
	je L_490995
L_271440:
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x2353,%r14
	je L_490994
L_271442:
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq %r11,%r14
L_271431:
	movq $0x141,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x18(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_271432+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2053
.p2align 0x4
L_490994:
L_271441:
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x40,%rbp
	leaq (L_271429+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2060
.p2align 0x4
L_490995:
L_271427:
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x2353,%r14
	je L_490996
L_271439:
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq %r11,%r14
	jmp L_271431
.p2align 0x4
L_490996:
L_271428:
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x40,%rbp
	leaq (L_271429+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2060
.p2align 0x4
L_490997:
L_271406:
	movq 0x8(%r13),%r15
	movq %r15,0x40(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x48(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x40,%rbp
	leaq (fromList_25+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2094
.p2align 0x4
x_2092:
x_891:
	leaq L_271458(%rip),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0x109D0)(%rip),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_271399+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x72E
L_271469:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x8BC
L_271389:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_271390
L_271463:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_271464+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_271464
.p2align 0x4
.long 0x8C0
L_271464:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_271390:
	movq $0x20E7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_490999
L_271391:
	movq %r15,0x50(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	jmp L_271388
.p2align 0x4
L_490999:
L_271392:
	movq 0x50(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq $0x1,0x50(%rbp)
.p2align 0x4,,0x7
L_271393:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_491001
.p2align 0x4,,0x7
L_271394:
	movq $0x20E7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_271397
L_271395:
	movq %r15,0x50(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x48(%rbp)
	jmp L_271393
.p2align 0x4
L_491001:
L_271461:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_271462+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_271462
.p2align 0x4
.long 0x9A6
L_271462:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	jmp L_271394
.p2align 0x4
.long 0x72E
L_271465:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x5F1
L_271446:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_271447
L_271449:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_271450+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_271450
.p2align 0x4
.long 0x71F
L_271450:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_271447:
	movq 0x18(%rbp),%r15
	movq 0x20(%rbp),%r14
	jmp L_271448
.p2align 0x4
.long 0x6FF
L_271432:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_271433
L_271435:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_271436+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_271436
.p2align 0x4
.long 0x5E7
L_271436:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_271433:
	movq $0x65D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x38(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x20(%rbp),%r14
	jmp L_271434
.p2align 0x4
.long 0x8FF
L_271429:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_271430
L_271437:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_271438+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_271438
.p2align 0x4
.long 0x5E7
L_271438:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_271430:
	movq 0x20(%rbp),%r15
	movq 0x38(%rbp),%r14
	jmp L_271431
.p2align 0x4
.long 0x5F1
fromList_25:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r14
	movq %r14,0x18(%rbp)
	cmpq $0x1,%r14
	je L_491006
L_271407:
	movq 0x8(%r14),%r15
	xorl %ecx,%ecx
	jmp L_271408
.p2align 0x4
L_491006:
L_271424:
	xorl %ecx,%ecx
	jmp L_271413
.p2align 0x4
.long 0x447C
L_271399:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	incl %r13d
	jo L_491007
L_271401:
	movl %r13d,0x0(%r14)
	movq (globalObjptr+0x9D0)(%rip),%r14
	movq %r14,0x58(%rbp)
	movq %r15,0x60(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x70(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x58,%rbp
	leaq (L_271402+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_491007:
L_271400:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x72E
L_271458:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x443A
L_271402:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_271403
L_271456:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_271457+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_271457
.p2align 0x4
.long 0xF7A
L_271457:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_271403:
	movq (globalObjptr+0x1610)(%rip),%r14
	movq (globalObjptr+0x1608)(%rip),%r13
	movl 0x0(%r13),%r11d
	cmpl %r11d,0x0(%r14)
	je L_491008
L_271404:
	movq 0x48(%rbp),%r15
	jmp L_271405
.p2align 0x4
L_491008:
L_271455:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl x_2094
.hidden x_2094
x_2094:
L_271493:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_271561
L_271494:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_491025
L_271495:
	movq 0x0(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x22FF,%r15
	je L_491021
L_271549:
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x2306,%r14
	je L_491019
L_271558:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x2353,%r15
	je L_491018
L_271560:
	movq 0x10(%r14),%r15
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r14
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	movq %r11,%r14
L_271554:
	movq $0x141,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq $0x1,%r14
	movq %r13,%r15
L_271504:
	movq $0x10D5,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x10(%rbp)
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x22FD,%r15
	je L_491017
L_271511:
	movq 0x0(%r13),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	movq %r13,%r14
	shrq $0x1,%r14
	cmpq $0x22FF,%r14
	je L_491013
L_271529:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x2306,%r15
	je L_491011
L_271538:
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x2353,%r14
	je L_491010
L_271540:
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq %r11,%r14
L_271534:
	movq $0x141,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq $0x1,%r15
	movq %r13,%r14
L_271520:
	movq $0x10D5,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq $0x26F3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
L_271508:
	movq $0x26F3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_491010:
L_271539:
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_271532+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2060
.p2align 0x4
L_491011:
L_271530:
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x2353,%r14
	je L_491012
L_271537:
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq %r11,%r14
	jmp L_271534
.p2align 0x4
L_491012:
L_271531:
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_271532+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2060
.p2align 0x4
L_491013:
L_271512:
	movq 0x8(%r15),%r11
	movq %r11,%r14
	movq 0x0(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x2306,%r15
	je L_491015
L_271526:
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x2353,%r14
	je L_491014
L_271528:
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq %r11,%r14
L_271517:
	movq $0x141,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x18(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_271518+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2053
.p2align 0x4
L_491014:
L_271527:
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_271515+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2060
.p2align 0x4
L_491015:
L_271513:
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x2353,%r14
	je L_491016
L_271525:
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq %r11,%r14
	jmp L_271517
.p2align 0x4
L_491016:
L_271514:
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_271515+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2060
.p2align 0x4
L_491017:
L_271505:
	movq 0x8(%r13),%r15
	movq %r15,0x20(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_271506+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2094
.p2align 0x4
L_491018:
L_271559:
	movq 0x8(%r14),%r15
	movq %r15,0x18(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x20(%rbp)
	addq $0x18,%rbp
	leaq (L_271552+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2060
.p2align 0x4
L_491019:
L_271550:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x2353,%r15
	je L_491020
L_271557:
	movq 0x10(%r14),%r15
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r14
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	movq %r11,%r14
	jmp L_271554
.p2align 0x4
L_491020:
L_271551:
	movq 0x8(%r14),%r15
	movq %r15,0x18(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x20(%rbp)
	addq $0x18,%rbp
	leaq (L_271552+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2060
.p2align 0x4
L_491021:
L_271496:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq %r13,0x10(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x2306,%r14
	je L_491023
L_271546:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x2353,%r15
	je L_491022
L_271548:
	movq 0x10(%r14),%r15
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r14
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	movq %r11,%r14
L_271501:
	movq $0x141,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x18(%rbp)
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x10(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_271502+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2053
.p2align 0x4
L_491022:
L_271547:
	movq 0x8(%r14),%r15
	movq %r15,0x20(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_271499+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2060
.p2align 0x4
L_491023:
L_271497:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x2353,%r15
	je L_491024
L_271545:
	movq 0x10(%r14),%r15
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r14
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	movq %r11,%r14
	jmp L_271501
.p2align 0x4
L_491024:
L_271498:
	movq 0x8(%r14),%r15
	movq %r15,0x20(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_271499+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2060
.p2align 0x4
L_491025:
L_271561:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_271562+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_271562
.p2align 0x4
.long 0x45F
L_271562:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_271495
.p2align 0x4
.long 0x2B
L_271532:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_271533
L_271535:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_271536+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_271536
.p2align 0x4
.long 0x4B1
L_271536:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_271533:
	movq 0x18(%rbp),%r15
	movq 0x20(%rbp),%r14
	jmp L_271534
.p2align 0x4
.long 0x2
L_271518:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_271519
L_271521:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_271522+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_271522
.p2align 0x4
.long 0x51F
L_271522:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_271519:
	movq $0x65D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x28(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x20(%rbp),%r14
	jmp L_271520
.p2align 0x4
.long 0x490
L_271515:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_271516
L_271523:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_271524+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_271524
.p2align 0x4
.long 0x51F
L_271524:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_271516:
	movq 0x20(%rbp),%r15
	movq 0x28(%rbp),%r14
	jmp L_271517
.p2align 0x4
.long 0x2B
L_271506:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_271507
L_271509:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_271510+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_271510
.p2align 0x4
.long 0x2C
L_271510:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_271507:
	movq 0x18(%rbp),%r15
	jmp L_271508
.p2align 0x4
.long 0x521
L_271552:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_271553
L_271555:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_271556+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_271556
.p2align 0x4
.long 0x4E7
L_271556:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_271553:
	movq 0x10(%rbp),%r14
	movq 0x18(%rbp),%r15
	jmp L_271554
.p2align 0x4
.long 0x4E0
L_271502:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_271503
L_271541:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_271542+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_271542
.p2align 0x4
.long 0x4E9
L_271542:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_271503:
	movq $0x65D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x20(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x18(%rbp),%r15
	jmp L_271504
.p2align 0x4
.long 0x4E5
L_271499:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_271500
L_271543:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_271544+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_271544
.p2align 0x4
.long 0x4E9
L_271544:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_271500:
	movq 0x18(%rbp),%r14
	movq 0x20(%rbp),%r15
	jmp L_271501
.text
.p2align 0x4
.globl x_2086
.hidden x_2086
x_2086:
L_271563:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x10(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_271640
L_271564:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_491041
L_271565:
	movq 0x0(%rbp),%r11
	movq 0x18(%r11),%r10
	movq %r10,0x18(%rbp)
	movq 0x10(%r11),%r10
	movq %r10,0x20(%rbp)
	movq 0x8(%r11),%r10
	movq %r10,0x28(%rbp)
	movq 0x0(%r11),%r15
	cmpq $0x1,%r15
	je L_491039
L_271566:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x233F,%r14
	je L_491038
L_271620:
	movq 0x18(%r15),%r14
	movq 0x10(%r15),%r13
	movq 0x8(%r15),%r11
	movq 0x0(%r15),%r10
	cmpq $0x1,%r14
	je L_491037
L_271621:
	movq %r14,0x30(%rbp)
	movq %r10,%r15
	movq %r11,%r14
L_271622:
	movq 0x30(%rbp),%r11
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r10
	movl %r10d,%r9d
	movslq %r9d,%r8
	cmpq %r10,%r8
	jne L_491036
L_271624:
	cmpl $0x1,%r9d
	jng L_491035
L_271635:
	cmpq $0x1,%r10
	jna L_491034
L_271637:
	cmpb $0x27,0x1(%r11)
	sete %al
	movzbl %al,%eax
	movl %eax,0x38(%rbp)
L_271626:
	movq %r15,0x50(%rbp)
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x40(%rbp)
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	leaq L_271634(%rip),%r15
	movq %r15,0x8(%rbp)
	movq %rbp,%r15
	addq $0x10,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x50,%rbp
	leaq (L_271627+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_491034:
L_271636:
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_491035:
L_271625:
	movl $0x0,0x38(%rbp)
	jmp L_271626
.p2align 0x4
L_491036:
L_271623:
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_491037:
L_271638:
	movq (globalObjptr+0x109B8)(%rip),%r9
	movq %r9,0x30(%rbp)
	movq %r10,%r15
	movq %r11,%r14
	jmp L_271622
.p2align 0x4
L_491038:
L_271567:
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_271568+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2077
.p2align 0x4
L_491039:
L_271639:
	movq (globalObjptr+0xEF8)(%rip),%r15
	movq $0x59,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x30(%rbp)
L_271569:
	movq 0x28(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x38(%rbp)
	movq 0x0(%r14),%r13
	movq 0x18(%r13),%r11
	movq %r11,0x40(%rbp)
	movq 0x10(%r13),%r11
	movq %r11,0x48(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x50(%rbp)
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_491040
L_271570:
L_271571:
	movq %r15,0x68(%rbp)
	leaq L_271618(%rip),%r15
	movq %r15,0x8(%rbp)
	movq %rbp,%r15
	addq $0x10,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movb $0x2E,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_271572+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp split_0
.p2align 0x4
L_491040:
L_271619:
	movq (globalObjptr+0xCA28)(%rip),%r15
	jmp L_271571
.p2align 0x4
L_491041:
L_271640:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_271641+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_271641
.p2align 0x4
.long 0x452
L_271641:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_271565
.p2align 0x4
.long 0x5E9
L_271627:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movl 0x50(%rbp),%r15d
	movl %r15d,0x3C(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_271628
L_271632:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_271633+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_271633
.p2align 0x4
.long 0x845
L_271633:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_271628:
	movq $0x13,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x8BD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x20,%r12
	movl 0x3C(%rbp),%r15d
	movl %r15d,0x0(%r14)
	movl 0x38(%rbp),%r15d
	movl %r15d,0x4(%r14)
	movq 0x30(%rbp),%r15
	movq %r15,0x10(%r14)
	movq $0x8BF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq %r12,(gcState+0x0)(%rip)
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x48(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1497,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_271629+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_271629
.p2align 0x4
.long 0xF7A
L_271629:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	xorq %r15,%r15
	movq %rax,%r14
.p2align 0x4,,0x7
loop_3195:
	cmpq $0x1,%r15
	jnl L_491043
L_271631:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_3195
.p2align 0x4
L_491043:
L_271630:
	movq $0x59,0xFFFFFFFFFFFFFFF8(%r14)
	movq %r14,0x30(%rbp)
	jmp L_271569
.p2align 0x4
.long 0x72E
L_271634:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x71D
L_271568:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	jmp L_271569
.p2align 0x4
.long 0x212D
L_271572:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_271573
L_271616:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_271617+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_271617
.p2align 0x4
.long 0x9A6
L_271617:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_271573:
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_491045
L_271574:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	movq $0x1,0x58(%rbp)
L_271575:
	movq %r15,0x68(%rbp)
	leaq L_271614(%rip),%r15
	movq %r15,0x8(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_271576+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromString_23
.p2align 0x4
L_491045:
L_271615:
	movq $0x1,%r15
L_271584:
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x28(%rbp)
	addq $0x18,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x40(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x38(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x50(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x58(%rbp)
L_271585:
	movq %r15,%r14
	andq $0x3,%r14
	jnz x_892
L_271608:
	movq 0x0(%r15),%r14
	cmpq $0x1,0x8(%r15)
	jne x_2095
L_271609:
	movq %r14,%r15
L_271592:
	movq $0x141,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x38(%rbp)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x20(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_271593+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2053
.p2align 0x4
x_2095:
x_892:
	leaq L_271607(%rip),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0x109D0)(%rip),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_271586+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x72E
L_271618:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x912
L_271576:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_271577
L_271612:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_271613+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_271613
.p2align 0x4
.long 0x91D
L_271613:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_271577:
	movq $0x20E7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_491047
L_271578:
	movq %r15,0x58(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	jmp L_271575
.p2align 0x4
L_491047:
L_271579:
	movq 0x58(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq $0x1,0x58(%rbp)
.p2align 0x4,,0x7
L_271580:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_491049
.p2align 0x4,,0x7
L_271581:
	movq $0x20E7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_271584
L_271582:
	movq %r15,0x58(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x50(%rbp)
	jmp L_271580
.p2align 0x4
L_491049:
L_271610:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_271611+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_271611
.p2align 0x4
.long 0x8C0
L_271611:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	jmp L_271581
.p2align 0x4
.long 0x72E
L_271614:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x604
L_271593:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_271594
L_271602:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_271603+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_271603
.p2align 0x4
.long 0x5E7
L_271603:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_271594:
	movq $0x65D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x40(%rbp)
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_491051
L_271595:
	movq 0x18(%r15),%r14
	movq 0x10(%r15),%r13
	movq 0x8(%r15),%r11
	movq 0x0(%r15),%r10
	movq $0x3A3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	movq %r11,0x10(%r15)
	movq %r10,0x18(%r15)
	movq %r15,0x50(%rbp)
	addq $0x28,%r12
	addq $0x50,%rbp
	leaq (L_271596+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2086
.p2align 0x4
L_491051:
L_271601:
	movq $0x1,%r14
	xchgq %r14,%r15
L_271598:
	movq $0x10C7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x20,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x38(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x40(%rbp),%r13
	movq %r13,0x10(%r14)
	movq $0x2701,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r13,0x0(%rbp)
	addq $0x18,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3A63
L_271586:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	incl %r13d
	jo L_491053
L_271588:
	movl %r13d,0x0(%r14)
	movq (globalObjptr+0x9D0)(%rip),%r14
	movq %r14,0x60(%rbp)
	movq %r15,0x68(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x78(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x60,%rbp
	leaq (L_271589+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_491053:
L_271587:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x72E
L_271607:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x512
L_271596:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_271597
L_271599:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_271600+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_271600
.p2align 0x4
.long 0x3AA2
L_271600:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_271597:
	movq 0x18(%rbp),%r15
	jmp L_271598
.p2align 0x4
.long 0xDD8
L_271589:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_271590
L_271605:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_271606+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_271606
.p2align 0x4
.long 0x9A2
L_271606:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_271590:
	movq (globalObjptr+0x1608)(%rip),%r14
	movq (globalObjptr+0x1610)(%rip),%r13
	movl 0x0(%r13),%r11d
	cmpl %r11d,0x0(%r14)
	je L_491055
L_271591:
	movq 0x50(%rbp),%r15
	jmp L_271592
.p2align 0x4
L_491055:
L_271604:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl x_2089
.hidden x_2089
x_2089:
L_271642:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x38(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_271727
L_271643:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_491064
L_271644:
	movq 0x0(%rbp),%r11
	cmpq $0x1,%r11
	je L_491062
L_271645:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0x233F,%r15
	je L_491061
L_271707:
	movq 0x18(%r11),%r15
	movq 0x10(%r11),%r13
	movq 0x8(%r11),%r14
	movq 0x0(%r11),%r10
	cmpq $0x1,%r15
	je L_491060
L_271708:
	movq %r15,0x40(%rbp)
	movq %r10,%r15
L_271709:
	movq 0x40(%rbp),%r11
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r10
	movl %r10d,%r9d
	movslq %r9d,%r8
	cmpq %r8,%r10
	jne L_491059
L_271711:
	cmpl $0x1,%r9d
	jng L_491058
L_271722:
	cmpq $0x1,%r10
	jna L_491057
L_271724:
	cmpb $0x27,0x1(%r11)
	sete %al
	movzbl %al,%eax
	movl %eax,0x48(%rbp)
L_271713:
	movq %r15,0x60(%rbp)
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x50(%rbp)
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	leaq L_271721(%rip),%r15
	movq %r15,0x30(%rbp)
	movq %rbp,%r15
	addq $0x38,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x60,%rbp
	leaq (L_271714+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_491057:
L_271723:
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_491058:
L_271712:
	movl $0x0,0x48(%rbp)
	jmp L_271713
.p2align 0x4
L_491059:
L_271710:
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_491060:
L_271725:
	movq (globalObjptr+0x109B8)(%rip),%r11
	movq %r11,0x40(%rbp)
	movq %r10,%r15
	jmp L_271709
.p2align 0x4
L_491061:
L_271646:
	movq 0x8(%r11),%r15
	movq %r15,0x48(%rbp)
	movq 0x0(%r11),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_271647+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2077
.p2align 0x4
L_491062:
L_271726:
	movq (globalObjptr+0xEF8)(%rip),%r15
	movq $0x59,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x40(%rbp)
L_271648:
	movq 0x8(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x48(%rbp)
	movq 0x0(%r14),%r13
	movq 0x18(%r13),%r11
	movq %r11,0x50(%rbp)
	movq 0x10(%r13),%r11
	movq %r11,0x58(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x60(%rbp)
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_491063
L_271649:
L_271650:
	movq %r15,0x78(%rbp)
	leaq L_271705(%rip),%r15
	movq %r15,0x30(%rbp)
	movq %rbp,%r15
	addq $0x38,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movb $0x2E,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_271651+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp split_0
.p2align 0x4
L_491063:
L_271706:
	movq (globalObjptr+0xCA28)(%rip),%r15
	jmp L_271650
.p2align 0x4
L_491064:
L_271727:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_271728+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_271728
.p2align 0x4
.long 0x976
L_271728:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_271644
.p2align 0x4
.long 0x1104
L_271714:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movl 0x60(%rbp),%r15d
	movl %r15d,0x4C(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_271715
L_271719:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_271720+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_271720
.p2align 0x4
.long 0x4487
L_271720:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_271715:
	movq $0x13,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x8BD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x20,%r12
	movl 0x4C(%rbp),%r15d
	movl %r15d,0x0(%r14)
	movl 0x48(%rbp),%r15d
	movl %r15d,0x4(%r14)
	movq 0x40(%rbp),%r15
	movq %r15,0x10(%r14)
	movq $0x8BF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq %r12,(gcState+0x0)(%rip)
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x58(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1497,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_271716+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_271716
.p2align 0x4
.long 0x11F4
L_271716:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	xorq %r15,%r15
	movq %rax,%r14
.p2align 0x4,,0x7
loop_3196:
	cmpq $0x1,%r15
	jnl L_491066
L_271718:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x58(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_3196
.p2align 0x4
L_491066:
L_271717:
	movq $0x59,0xFFFFFFFFFFFFFFF8(%r14)
	movq %r14,0x40(%rbp)
	jmp L_271648
.p2align 0x4
.long 0x651
L_271721:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x28C3
L_271647:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	jmp L_271648
.p2align 0x4
.long 0x447D
L_271651:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_271652
L_271703:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_271704+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_271704
.p2align 0x4
.long 0x4486
L_271704:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_271652:
	movq 0x68(%rbp),%r14
	cmpq $0x1,%r14
	je L_491068
L_271653:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x68(%rbp)
	movq $0x1,0x70(%rbp)
L_271654:
	movq %r15,0x80(%rbp)
	leaq L_271701(%rip),%r15
	movq %r15,0x30(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_271655+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromString_23
.p2align 0x4
L_491068:
L_271702:
	movq $0x1,%r15
L_271663:
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x60(%rbp)
	addq $0x18,%r12
	movq 0x58(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x50(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x48(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x68(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x70(%rbp)
L_271664:
	movq %r15,%r14
	andq $0x3,%r14
	jnz x_893
L_271695:
	movq 0x0(%r15),%r14
	cmpq $0x1,0x8(%r15)
	jne x_2097
L_271696:
	movq %r14,%r15
L_271671:
	movq $0x141,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x48(%rbp)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x60(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x38(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x10(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_271672+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2056
.p2align 0x4
x_2097:
x_893:
	leaq L_271694(%rip),%r15
	movq %r15,0x30(%rbp)
	movq (globalObjptr+0x109D0)(%rip),%r15
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_271665+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x651
L_271705:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x447E
L_271655:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x78(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_271656
L_271699:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_271700+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_271700
.p2align 0x4
.long 0x4485
L_271700:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_271656:
	movq $0x20E7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x68(%rbp),%r14
	cmpq $0x1,%r14
	je L_491070
L_271657:
	movq %r15,0x70(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x68(%rbp)
	jmp L_271654
.p2align 0x4
L_491070:
L_271658:
	movq 0x70(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq $0x1,0x70(%rbp)
.p2align 0x4,,0x7
L_271659:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_491072
.p2align 0x4,,0x7
L_271660:
	movq $0x20E7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x60(%rbp),%r14
	cmpq $0x1,%r14
	je L_271663
L_271661:
	movq %r15,0x70(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x60(%rbp)
	movq %r15,0x68(%rbp)
	jmp L_271659
.p2align 0x4
L_491072:
L_271697:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_271698+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_271698
.p2align 0x4
.long 0x4484
L_271698:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	jmp L_271660
.p2align 0x4
.long 0x651
L_271701:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xC1C
L_271672:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_271673
L_271689:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_271690+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_271690
.p2align 0x4
.long 0xA98
L_271690:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_271673:
	movq $0x145,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x60(%rbp)
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x40(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_491075
L_271675:
	testl %r13d,%r13d
	jz L_491074
L_271676:
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x40(%rbp)
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	leaq L_271687(%rip),%r15
	movq %r15,0x30(%rbp)
	movq %rbp,%r15
	addq $0x38,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x109F8)(%rip),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_271677+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_491074:
L_271683:
	movq $0x253B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x0(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_491075:
L_271674:
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x447F
L_271665:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	incl %r13d
	jo L_491077
L_271667:
	movl %r13d,0x0(%r14)
	movq (globalObjptr+0x9D0)(%rip),%r14
	movq %r14,0x78(%rbp)
	movq %r15,0x80(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x90(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x78,%rbp
	leaq (L_271668+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_491077:
L_271666:
	movq 0x38(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x651
L_271694:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4481
L_271677:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	incl %r13d
	jo L_491078
L_271679:
	movl %r13d,0x0(%r14)
	movq (globalObjptr+0x9D0)(%rip),%r14
	movq %r14,0x70(%rbp)
	movq %r15,0x78(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x88(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x70,%rbp
	leaq (L_271680+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_491078:
L_271678:
	movq 0x38(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x651
L_271687:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4480
L_271668:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_271669
L_271692:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_271693+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_271693
.p2align 0x4
.long 0x4483
L_271693:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_271669:
	movq (globalObjptr+0x1610)(%rip),%r14
	movq (globalObjptr+0x1608)(%rip),%r13
	movl 0x0(%r13),%r11d
	cmpl %r11d,0x0(%r14)
	je L_491079
L_271670:
	movq 0x68(%rbp),%r15
	jmp L_271671
.p2align 0x4
L_491079:
L_271691:
	movq 0x38(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x127B
L_271680:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_271681
L_271685:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_271686+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_271686
.p2align 0x4
.long 0x4482
L_271686:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_271681:
	movq (globalObjptr+0x1608)(%rip),%r15
	movq (globalObjptr+0x1610)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	jne L_271683
L_271684:
	movq 0x38(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl x_2088
.hidden x_2088
x_2088:
L_271729:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_271757
L_271730:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_491088
L_271731:
	movq 0x0(%rbp),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x2335,%r15
	je L_491086
L_271756:
	movq 0x10(%r13),%r15
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r11
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq %r11,%r15
	movq %r13,%r14
L_271736:
	movq $0x141,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x10(%rbp)
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x2333,%r15
	je L_491085
L_271743:
	movq 0x0(%r13),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x2335,%r14
	je L_491083
L_271752:
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq %r11,%r14
L_271748:
	movq $0x141,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq $0x24D3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
L_271740:
	movq $0x24D3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_491083:
L_271744:
	movq 0x0(%r15),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x2353,%r15
	je L_491084
L_271751:
	movq 0x10(%r13),%r15
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r13
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r14,0x8(%r11)
	addq $0x18,%r12
	movq %r11,%r15
	movq %r13,%r14
	jmp L_271748
.p2align 0x4
L_491084:
L_271745:
	movq 0x8(%r13),%r15
	movq %r15,0x20(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_271746+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2060
.p2align 0x4
L_491085:
L_271737:
	movq 0x8(%r13),%r15
	movq %r15,0x20(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_271738+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2088
.p2align 0x4
L_491086:
L_271732:
	movq 0x0(%r13),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x2353,%r14
	je L_491087
L_271755:
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq %r15,%r14
	movq %r11,%r15
	jmp L_271736
.p2align 0x4
L_491087:
L_271733:
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	addq $0x18,%rbp
	leaq (L_271734+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2060
.p2align 0x4
L_491088:
L_271757:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_271758+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_271758
.p2align 0x4
.long 0x45F
L_271758:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_271731
.p2align 0x4
.long 0x2B
L_271746:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_271747
L_271749:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_271750+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_271750
.p2align 0x4
.long 0x4B1
L_271750:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_271747:
	movq 0x18(%rbp),%r15
	movq 0x20(%rbp),%r14
	jmp L_271748
.p2align 0x4
.long 0x2B
L_271738:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_271739
L_271741:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_271742+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_271742
.p2align 0x4
.long 0x2C
L_271742:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_271739:
	movq 0x18(%rbp),%r15
	jmp L_271740
.p2align 0x4
.long 0x521
L_271734:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_271735
L_271753:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_271754+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_271754
.p2align 0x4
.long 0x4E7
L_271754:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_271735:
	movq 0x10(%rbp),%r14
	movq 0x18(%rbp),%r15
	jmp L_271736
.text
.p2align 0x4
.globl x_2087
.hidden x_2087
x_2087:
L_271759:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x18(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_271835
L_271760:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_491095
L_271761:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x2328,%r15
	je L_491093
L_271834:
	movq 0x10(%r14),%r15
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq $0x20E7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r11,0x8(%r15)
	addq $0x18,%r12
L_271778:
	movq %r15,0x28(%rbp)
	movq %r14,0x30(%rbp)
	leaq L_271823(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x20(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x28,%rbp
	leaq (L_271779+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromSymbols_0
.p2align 0x4
L_491093:
L_271762:
	movq 0x18(%r14),%r15
	movq 0x10(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x30(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x38(%rbp)
	cmpq $0x1,%r15
	je L_491094
L_271763:
L_271764:
	movq %r15,0x50(%rbp)
	leaq L_271832(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movb $0x2E,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_271765+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp split_0
.p2align 0x4
L_491094:
L_271833:
	movq (globalObjptr+0xCA28)(%rip),%r15
	jmp L_271764
.p2align 0x4
L_491095:
L_271835:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_271836+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_271836
.p2align 0x4
.long 0x45C
L_271836:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	jmp L_271761
.p2align 0x4
.long 0x498
L_271779:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_271780
L_271821:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_271822+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_271822
.p2align 0x4
.long 0x497
L_271822:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_271780:
	movq $0x145,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x30(%rbp)
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x22F9,%r14
	je L_491099
L_271787:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x2328,%r15
	je L_491097
L_271820:
	movq 0x10(%r14),%r15
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq $0x20E7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r11,0x8(%r15)
	addq $0x18,%r12
L_271804:
	movq %r15,0x40(%rbp)
	movq %r14,0x48(%rbp)
	leaq L_271809(%rip),%r15
	movq %r15,0x10(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x40,%rbp
	leaq (L_271805+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromSymbols_0
.p2align 0x4
L_491097:
L_271788:
	movq 0x18(%r14),%r15
	movq 0x10(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x38(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x40(%rbp)
	cmpq $0x1,%r15
	je L_491098
L_271789:
L_271790:
	movq %r15,0x58(%rbp)
	leaq L_271818(%rip),%r15
	movq %r15,0x10(%rbp)
	movb $0x2E,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_271791+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp split_0
.p2align 0x4
L_491098:
L_271819:
	movq (globalObjptr+0xCA28)(%rip),%r15
	jmp L_271790
.p2align 0x4
L_491099:
L_271781:
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x40,%rbp
	leaq (L_271782+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2087
.p2align 0x4
.long 0x25
L_271823:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x49E
L_271765:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_271766
L_271830:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_271831+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_271831
.p2align 0x4
.long 0x2574
L_271831:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_271766:
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_491101
L_271767:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x40(%rbp)
	movq $0x1,0x48(%rbp)
L_271768:
	movq %r15,0x58(%rbp)
	leaq L_271828(%rip),%r15
	movq %r15,0x10(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_271769+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromString_23
.p2align 0x4
L_491101:
L_271829:
	movq $0x1,%r15
L_271777:
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x38(%rbp),%r13
	movq %r13,0x8(%r14)
	xchgq %r14,%r15
	jmp L_271778
.p2align 0x4
.long 0x25
L_271832:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x69B
L_271805:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_271806
L_271807:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_271808+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_271808
.p2align 0x4
.long 0x4FC
L_271808:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_271806:
	movq $0x145,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x2673,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq %r14,%r15
L_271784:
	movq $0x2673,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x25
L_271809:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4B4
L_271791:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_271792
L_271816:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_271817+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_271817
.p2align 0x4
.long 0x4B5
L_271817:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_271792:
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_491104
L_271793:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	movq $0x1,0x50(%rbp)
L_271794:
	movq %r15,0x60(%rbp)
	leaq L_271814(%rip),%r15
	movq %r15,0x10(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_271795+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromString_23
.p2align 0x4
L_491104:
L_271815:
	movq $0x1,%r15
L_271803:
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x40(%rbp),%r13
	movq %r13,0x8(%r14)
	xchgq %r14,%r15
	jmp L_271804
.p2align 0x4
.long 0x25
L_271818:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x69B
L_271782:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_271783
L_271785:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_271786+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_271786
.p2align 0x4
.long 0x600
L_271786:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_271783:
	movq 0x20(%rbp),%r15
	jmp L_271784
.p2align 0x4
.long 0x1645
L_271769:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_271770
L_271826:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_271827+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_271827
.p2align 0x4
.long 0x2424
L_271827:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_271770:
	movq $0x20E7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_491107
L_271771:
	movq %r15,0x48(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x40(%rbp)
	jmp L_271768
.p2align 0x4
L_491107:
L_271772:
	movq 0x48(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq $0x1,0x48(%rbp)
.p2align 0x4,,0x7
L_271773:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_491109
.p2align 0x4,,0x7
L_271774:
	movq $0x20E7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_271777
L_271775:
	movq %r15,0x48(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x40(%rbp)
	jmp L_271773
.p2align 0x4
L_491109:
L_271824:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_271825+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_271825
.p2align 0x4
.long 0x2354
L_271825:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	jmp L_271774
.p2align 0x4
.long 0x25
L_271828:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4B3
L_271795:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_271796
L_271812:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_271813+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_271813
.p2align 0x4
.long 0x4B6
L_271813:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_271796:
	movq $0x20E7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_491111
L_271797:
	movq %r15,0x50(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	jmp L_271794
.p2align 0x4
L_491111:
L_271798:
	movq 0x50(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq $0x1,0x50(%rbp)
.p2align 0x4,,0x7
L_271799:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_491113
.p2align 0x4,,0x7
L_271800:
	movq $0x20E7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_271803
L_271801:
	movq %r15,0x50(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x48(%rbp)
	jmp L_271799
.p2align 0x4
L_491113:
L_271810:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_271811+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_271811
.p2align 0x4
.long 0x7AC
L_271811:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	jmp L_271800
.p2align 0x4
.long 0x25
L_271814:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl fromSymbols_0
.hidden fromSymbols_0
fromSymbols_0:
L_271837:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_271838
L_271908:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_271909+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_271909
.p2align 0x4
.long 0x45B
L_271909:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_271838:
	movq 0x0(%rbp),%r15
	cmpq $0x1,%r15
	je L_491115
L_271839:
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	movq %r14,0x28(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_271840+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp file_0
.p2align 0x4
L_491115:
L_271893:
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_491129
L_271894:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	movq %r13,0x10(%rbp)
	movq $0x1,0x18(%rbp)
.p2align 0x4,,0x7
L_271895:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_491128
.p2align 0x4,,0x7
L_271896:
	movq $0x141,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x2713,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x18(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x8(%rbp),%r13
	cmpq $0x1,%r13
	je L_491116
L_271897:
	movq %r14,0x18(%rbp)
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movq %r13,0x8(%rbp)
	movq %r14,0x10(%rbp)
	jmp L_271895
.p2align 0x4
L_491116:
L_271898:
	movq %r15,0x10(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq $0x1,0x18(%rbp)
.p2align 0x4,,0x7
L_271899:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_491127
.p2align 0x4,,0x7
L_271900:
	movq $0x2713,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_491117
L_271901:
	movq %r15,0x18(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x10(%rbp)
	jmp L_271899
.p2align 0x4
L_491117:
L_271902:
	movq 0x18(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq $0x1,0x18(%rbp)
.p2align 0x4,,0x7
L_271856:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_491126
.p2align 0x4,,0x7
L_271857:
	movq $0x2713,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_491118
L_271858:
	movq %r15,0x18(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x10(%rbp)
	jmp L_271856
.p2align 0x4
L_491118:
L_271859:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_491125
L_271860:
	movq 0x8(%r15),%r14
	movq %r14,0x8(%rbp)
	movq 0x0(%r15),%r15
	movq %r15,0x18(%rbp)
	movq $0x1,0x20(%rbp)
.p2align 0x4,,0x7
L_271861:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_491124
.p2align 0x4,,0x7
L_271862:
	movq $0x2713,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_491119
L_271863:
	movq %r15,0x20(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x18(%rbp)
	jmp L_271861
.p2align 0x4
L_491119:
L_271864:
	movq 0x20(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq $0x1,0x20(%rbp)
.p2align 0x4,,0x7
L_271865:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_491123
.p2align 0x4,,0x7
L_271866:
	movq $0x1BD3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_491120
L_271867:
	movq %r15,0x20(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x18(%rbp)
	jmp L_271865
.p2align 0x4
L_491120:
L_271868:
	movq 0x20(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq $0x1,0x20(%rbp)
.p2align 0x4,,0x7
L_271869:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_491122
.p2align 0x4,,0x7
L_271870:
	movq $0x1BD3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_491121
L_271871:
	movq %r15,0x20(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x18(%rbp)
	jmp L_271869
.p2align 0x4
L_491121:
L_271873:
	movq $0x143,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%r14)
	movq %r14,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_491122:
L_271874:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_271875+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_271875
.p2align 0x4
.long 0x63C
L_271875:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	jmp L_271870
.p2align 0x4
L_491123:
L_271876:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_271877+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_271877
.p2align 0x4
.long 0x63C
L_271877:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	jmp L_271866
.p2align 0x4
L_491124:
L_271878:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_271879+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_271879
.p2align 0x4
.long 0x63C
L_271879:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	jmp L_271862
.p2align 0x4
L_491125:
L_271880:
	movq $0x1,%r13
	xchgq %r13,%r15
	jmp L_271873
.p2align 0x4
L_491126:
L_271881:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_271882+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_271882
.p2align 0x4
.long 0x4AE
L_271882:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	jmp L_271857
.p2align 0x4
L_491127:
L_271903:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_271904+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_271904
.p2align 0x4
.long 0x4AE
L_271904:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	jmp L_271900
.p2align 0x4
L_491128:
L_271905:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_271906+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_271906
.p2align 0x4
.long 0x4AE
L_271906:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	jmp L_271896
.p2align 0x4
L_491129:
L_271892:
	movq (globalObjptr+0xA10)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x555
L_271840:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x18(%rbp),%r15
	movl 0x0(%r15),%r14d
	movl %r14d,0x20(%rbp)
	movl 0x4(%r15),%r14d
	movq 0x8(%rbp),%r15
	cmpq $0x1,%r15
	je L_271892
L_271841:
	movl %r14d,0x24(%rbp)
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r14,0x18(%rbp)
	movq $0x1,0x28(%rbp)
.p2align 0x4,,0x7
L_271842:
	movq 0x18(%rbp),%r14
	movq 0x10(%r14),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movl %r15d,%ecx
	movslq %ecx,%r14
	cmpq %r14,%r15
	jne L_491140
L_271844:
	movl $0x0,0x30(%rbp)
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_3197:
	cmpl %ecx,%ebx
	jnl L_491133
L_271887:
	movl %ebx,%r14d
	incl %r14d
	movslq %ebx,%r13
	cmpq %r15,%r13
	jnb L_491132
L_271889:
	movl 0x30(%rbp),%r13d
	incl %r13d
	jo L_491131
L_271890:
	movl %r13d,0x30(%rbp)
	movl %r14d,%ebx
	jmp loop_3197
.p2align 0x4
L_491131:
L_271847:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_491132:
L_271888:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_491133:
L_271845:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_491139
.p2align 0x4,,0x7
L_271846:
	movl 0x24(%rbp),%r15d
	movl %r15d,%r14d
	addl 0x30(%rbp),%r14d
	jo L_271847
L_271848:
	movq $0x389,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movl 0x20(%rbp),%r11d
	movl %r11d,0x0(%r13)
	movl %r15d,0x4(%r13)
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%r13)
	movq $0x389,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movl %r14d,0x4(%r10)
	addq $0x18,%r12
	movl %r11d,0x0(%r10)
	movq %r15,0x8(%r10)
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r10,0x8(%r15)
	addq $0x18,%r12
	movq $0x141,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x18,%r12
	movq 0x18(%rbp),%r15
	movq %r15,0x8(%r13)
	incl %r14d
	jo L_271847
L_271849:
	movq $0x2713,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r13,0x0(%r15)
	movq 0x28(%rbp),%r11
	movq %r11,0x8(%r15)
	movq 0x8(%rbp),%r11
	cmpq $0x1,%r11
	je L_491134
L_271850:
	movq %r15,0x28(%rbp)
	movl %r14d,0x24(%rbp)
	movq 0x0(%r11),%r15
	movq 0x8(%r11),%r11
	movq %r11,0x8(%rbp)
	movq %r15,0x18(%rbp)
	jmp L_271842
.p2align 0x4
L_491134:
L_271851:
	movq %r13,0x10(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq $0x1,0x18(%rbp)
.p2align 0x4,,0x7
L_271852:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_491136
.p2align 0x4,,0x7
L_271853:
	movq $0x2713,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_491135
L_271854:
	movq %r15,0x18(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x10(%rbp)
	jmp L_271852
.p2align 0x4
L_491135:
L_271855:
	movq 0x18(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq $0x1,0x18(%rbp)
	jmp L_271856
.p2align 0x4
L_491136:
L_271883:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_271884+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_271884
.p2align 0x4
.long 0x4AE
L_271884:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	jmp L_271853
.p2align 0x4
L_491139:
L_271885:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_271886+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_271886
.p2align 0x4
.long 0xF77
L_271886:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_271846
.p2align 0x4
L_491140:
L_271843:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl x_2083
.hidden x_2083
x_2083:
L_271910:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x18(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_272046
L_271911:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_491144
L_271912:
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x230D,%r14
	je L_491142
L_272042:
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_272043+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2082
.p2align 0x4
L_491142:
L_271913:
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x28(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x2317,%r15
	je L_491143
L_272035:
	movq 0x10(%r14),%r15
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq $0x3B3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r13,0x8(%r14)
	movq %r11,0x10(%r14)
	movq %r14,0x38(%rbp)
	addq $0x20,%r12
	addq $0x38,%rbp
	leaq (L_272036+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2051
.p2align 0x4
L_491143:
L_271914:
	movq 0x8(%r14),%r15
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_271915+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2052
.p2align 0x4
L_491144:
L_272046:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_272047+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272047
.p2align 0x4
.long 0x45C
L_272047:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	jmp L_271912
.p2align 0x4
.long 0x498
L_272043:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r14
	movq %r14,0x20(%rbp)
	cmpq $0x1,%r14
	je L_491156
L_272044:
	movq 0x8(%r14),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_271933:
	incl %ecx
	jo L_491155
L_271935:
	cmpq $0x1,%r15
	je L_491146
L_271936:
	movq 0x8(%r15),%r15
	jmp L_271933
.p2align 0x4
L_491146:
L_271937:
	movq %r14,0x20(%rbp)
L_271938:
	movslq %ecx,%rdx
	movq %rdx,0x28(%rbp)
	testq %rdx,%rdx
	jz L_491154
L_271939:
	cmpq $0x7FFFFFFF,%rdx
	ja L_491153
L_271940:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1583,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_271941+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_271941
.p2align 0x4
.long 0x4477
L_271941:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq %rax,0x30(%rbp)
L_271942:
	movq 0x20(%rbp),%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3198:
	cmpq 0x28(%rbp),%r15
	jnl L_491148
L_272017:
	cmpq $0x1,%r14
	je L_491147
L_272018:
	movq %r15,%r13
	movq %r15,%r11
	movq %r15,%r10
	movq 0x0(%r14),%r9
	movq 0x8(%r14),%r14
	movq 0x0(%r9),%r8
	movq 0x8(%r9),%rsp
	movq 0x10(%r9),%rsi
	movq 0x30(%rbp),%r9
	movq %r9,%rdi
	shrq $0x8,%rdi
	movq (gcState+0x3C8)(%rip),%rdx
	movb $0x1,0x0(%rdx,%rdi,1)
	imulq $0x18,%r13
	movq %r8,0x0(%r9,%r13,1)
	movq %r9,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%rdx,%r13,1)
	imulq $0x18,%r11
	movq %rsp,0x8(%r9,%r11,1)
	movq %r9,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%rdx,%r13,1)
	imulq $0x18,%r10
	movq %rsi,0x10(%r9,%r10,1)
	incq %r15
	jmp loop_3198
.p2align 0x4
L_491147:
L_272019:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_491148:
L_271943:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_271944
L_272015:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_272016+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272016
.p2align 0x4
.long 0x1DA4
L_272016:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_271944:
	movq 0x30(%rbp),%r15
	movq $0xB31,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x230B,%r14
	je L_491151
L_271951:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x230D,%r15
	je L_491149
L_272011:
	movq 0x8(%r14),%r15
	movq %r15,0x40(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x48(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x40,%rbp
	leaq (L_272012+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2082
.p2align 0x4
L_491149:
L_271952:
	movq 0x10(%r14),%r15
	movq 0x8(%r14),%r13
	movq %r13,0x20(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x2317,%r14
	je L_491150
L_272004:
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq $0x3B3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	movq %r11,0x10(%r15)
	movq %r15,0x40(%rbp)
	addq $0x20,%r12
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x40,%rbp
	leaq (L_272005+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2051
.p2align 0x4
L_491150:
L_271953:
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x40,%rbp
	leaq (L_271954+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2052
.p2align 0x4
L_491151:
L_271945:
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x40,%rbp
	leaq (L_271946+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2083
.p2align 0x4
L_491153:
L_272020:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_491154:
L_272021:
	movq (globalObjptr+0x25D0)(%rip),%r15
	movq %r15,0x30(%rbp)
	jmp L_271942
.p2align 0x4
L_491155:
L_271934:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_491156:
L_272045:
	xorl %ecx,%ecx
	jmp L_271938
.p2align 0x4
.long 0x638
L_272036:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_272037
L_272040:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_272041+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272041
.p2align 0x4
.long 0x986
L_272041:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_272037:
	movq $0x159,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r11
	movq %r11,0x0(%r15)
	movq 0x38(%rbp),%r11
	movq %r11,0x8(%r15)
	movq $0x2535,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je L_491157
L_272038:
	movq 0x10(%r15),%r13
	movq 0x8(%r15),%r11
	movq 0x0(%r15),%r10
	movq %r14,0x20(%rbp)
	movq %r10,%r15
	movq %r11,%r14
x_894:
	movq $0x395,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r14,0x8(%r11)
	movq %r15,0x10(%r11)
	movq %r11,0x38(%rbp)
	addq $0x20,%r12
	addq $0x38,%rbp
	leaq (L_271918+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2053
.p2align 0x4
L_491157:
L_272039:
	movq %r14,0x30(%rbp)
	movq $0x1,0x20(%rbp)
L_271920:
	movq 0x28(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_271921+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2034
.p2align 0x4
.long 0x638
L_271915:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_271916
L_272033:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_272034+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272034
.p2align 0x4
.long 0x1928
L_272034:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_271916:
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je L_491159
L_271917:
	movq 0x10(%r15),%r13
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r11
	movq 0x30(%rbp),%r10
	movq %r10,0x20(%rbp)
	movq %r11,%r15
	jmp x_894
.p2align 0x4
L_491159:
L_272032:
	movq $0x1,0x20(%rbp)
	jmp L_271920
.p2align 0x4
.long 0x69B
L_272012:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r14
	movq %r14,0x20(%rbp)
	cmpq $0x1,%r14
	je L_491168
L_272013:
	movq 0x8(%r14),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_271972:
	incl %ecx
	jo L_491167
L_271974:
	cmpq $0x1,%r15
	je L_491161
L_271975:
	movq 0x8(%r15),%r15
	jmp L_271972
.p2align 0x4
L_491161:
L_271976:
	movq %r14,0x20(%rbp)
L_271977:
	movslq %ecx,%rdx
	movq %rdx,0x28(%rbp)
	testq %rdx,%rdx
	jz L_491166
L_271978:
	cmpq $0x7FFFFFFF,%rdx
	ja L_491165
L_271979:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1583,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_271980+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_271980
.p2align 0x4
.long 0x600
L_271980:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq %rax,0x38(%rbp)
L_271981:
	movq 0x20(%rbp),%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3199:
	cmpq 0x28(%rbp),%r15
	jnl L_491163
L_271986:
	cmpq $0x1,%r14
	je L_491162
L_271987:
	movq %r15,%r13
	movq %r15,%r11
	movq %r15,%r10
	movq 0x0(%r14),%r9
	movq 0x8(%r14),%r14
	movq 0x0(%r9),%r8
	movq 0x8(%r9),%rsp
	movq 0x10(%r9),%rsi
	movq 0x38(%rbp),%r9
	movq %r9,%rdi
	shrq $0x8,%rdi
	movq (gcState+0x3C8)(%rip),%rdx
	movb $0x1,0x0(%rdx,%rdi,1)
	imulq $0x18,%r13
	movq %r8,0x0(%r9,%r13,1)
	movq %r9,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%rdx,%r13,1)
	imulq $0x18,%r11
	movq %rsp,0x8(%r9,%r11,1)
	movq %r9,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%rdx,%r13,1)
	imulq $0x18,%r10
	movq %rsi,0x10(%r9,%r10,1)
	incq %r15
	jmp loop_3199
.p2align 0x4
L_491162:
L_271988:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_491163:
L_271982:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_271983
L_271984:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_271985+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_271985
.p2align 0x4
.long 0x6AE
L_271985:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_271983:
	movq 0x38(%rbp),%r15
	movq $0xB31,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x26F7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq %r14,%r15
L_271948:
	movq $0x26F7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_491165:
L_271989:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_491166:
L_271990:
	movq (globalObjptr+0x25D0)(%rip),%r15
	movq %r15,0x38(%rbp)
	jmp L_271981
.p2align 0x4
L_491167:
L_271973:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_491168:
L_272014:
	xorl %ecx,%ecx
	jmp L_271977
.p2align 0x4
.long 0x6FF
L_272005:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_272006
L_272009:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_272010+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272010
.p2align 0x4
.long 0x4B7
L_272010:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_272006:
	movq $0x159,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r11
	movq %r11,0x0(%r15)
	movq 0x40(%rbp),%r11
	movq %r11,0x8(%r15)
	movq $0x2535,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je L_491169
L_272007:
	movq 0x10(%r15),%r13
	movq 0x8(%r15),%r11
	movq 0x0(%r15),%r10
	movq %r14,0x20(%rbp)
	movq %r10,%r15
	movq %r11,%r14
x_895:
	movq $0x395,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r14,0x8(%r11)
	movq %r15,0x10(%r11)
	movq %r11,0x40(%rbp)
	addq $0x20,%r12
	addq $0x40,%rbp
	leaq (L_271957+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2053
.p2align 0x4
L_491169:
L_272008:
	movq %r14,0x38(%rbp)
	movq $0x1,0x20(%rbp)
L_271959:
	movq 0x28(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_271960+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2034
.p2align 0x4
.long 0x6FF
L_271954:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_271955
L_272002:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_272003+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272003
.p2align 0x4
.long 0x5EE
L_272003:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_271955:
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je L_491171
L_271956:
	movq 0x10(%r15),%r13
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r11
	movq 0x38(%rbp),%r10
	movq %r10,0x20(%rbp)
	movq %r11,%r15
	jmp x_895
.p2align 0x4
L_491171:
L_272001:
	movq $0x1,0x20(%rbp)
	jmp L_271959
.p2align 0x4
.long 0x69B
L_271946:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_271947
L_271949:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_271950+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_271950
.p2align 0x4
.long 0x600
L_271950:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_271947:
	movq 0x20(%rbp),%r15
	jmp L_271948
.p2align 0x4
.long 0x638
L_271918:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_271919
L_272030:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_272031+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272031
.p2align 0x4
.long 0x986
L_272031:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_271919:
	movq $0x65D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x30(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_271920
.p2align 0x4
.long 0x7BC
L_271921:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_271922
L_272028:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_272029+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272029
.p2align 0x4
.long 0x986
L_272029:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_271922:
	movq $0x13D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x40(%rbp)
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x38(%rbp),%r13
	movq %r13,0x8(%r14)
	movq $0xC67,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x48(%rbp)
	addq $0x10,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	cmpq $0x1,%r13
	je L_491178
L_271923:
	movq 0x8(%r13),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_271924:
	incl %ecx
	movl %ecx,0x28(%rbp)
	jo L_491177
L_271926:
	cmpq $0x1,%r15
	je L_491175
L_271927:
	movq 0x8(%r15),%r15
	jmp L_271924
.p2align 0x4
L_491175:
L_271928:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_271929
L_272025:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_272026+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272026
.p2align 0x4
.long 0x8A0
L_272026:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_271929:
	movl 0x28(%rbp),%ecx
L_271930:
	movl %ecx,0x58(%rbp)
	movq $0x3735,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x50(%rbp)
	leaq L_272024(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x50,%rbp
	leaq (L_271931+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_9
.p2align 0x4
L_491177:
L_271925:
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_491178:
L_272027:
	xorl %ecx,%ecx
	jmp L_271930
.p2align 0x4
.long 0x6FF
L_271957:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_271958
L_271999:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_272000+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272000
.p2align 0x4
.long 0x4B7
L_272000:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_271958:
	movq $0x65D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x38(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_271959
.p2align 0x4
.long 0x75D
L_271960:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_271961
L_271997:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_271998+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_271998
.p2align 0x4
.long 0x4B7
L_271998:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_271961:
	movq $0x13D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x48(%rbp)
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x40(%rbp),%r13
	movq %r13,0x8(%r14)
	movq $0xC67,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x50(%rbp)
	addq $0x10,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r14)
	cmpq $0x1,%r13
	je L_491184
L_271962:
	movq 0x8(%r13),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_271963:
	incl %ecx
	movl %ecx,0x28(%rbp)
	jo L_491183
L_271965:
	cmpq $0x1,%r15
	je L_491181
L_271966:
	movq 0x8(%r15),%r15
	jmp L_271963
.p2align 0x4
L_491181:
L_271967:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_271968
L_271994:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_271995+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_271995
.p2align 0x4
.long 0x4488
L_271995:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_271968:
	movl 0x28(%rbp),%ecx
L_271969:
	movl %ecx,0x60(%rbp)
	movq $0x3735,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x58(%rbp)
	leaq L_271993(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x58,%rbp
	leaq (L_271970+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_9
.p2align 0x4
L_491183:
L_271964:
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_491184:
L_271996:
	xorl %ecx,%ecx
	jmp L_271969
.p2align 0x4
.long 0x7A6
L_271931:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_271932
L_272022:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_272023+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272023
.p2align 0x4
.long 0x7A7
L_272023:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_271932:
	movq $0x10C9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x28(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x40(%rbp),%r13
	movq %r13,0x10(%r15)
	movq $0x26FF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x1,%r15
	xorl %ecx,%ecx
	jmp L_271933
.p2align 0x4
.long 0x25
L_272024:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xA7D
L_271970:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_271971
L_271991:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_271992+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_271992
.p2align 0x4
.long 0x701
L_271992:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_271971:
	movq $0x10C9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x28(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x48(%rbp),%r13
	movq %r13,0x10(%r15)
	movq $0x26FF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x1,%r15
	xorl %ecx,%ecx
	jmp L_271972
.p2align 0x4
.long 0x25
L_271993:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl x_2082
.hidden x_2082
x_2082:
L_272048:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x18(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_272136
L_272049:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_491189
L_272050:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x2317,%r15
	je L_491188
L_272129:
	movq 0x10(%r14),%r15
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq $0x3B3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r13,0x8(%r14)
	movq %r11,0x10(%r14)
	movq %r14,0x38(%rbp)
	addq $0x20,%r12
	addq $0x38,%rbp
	leaq (L_272130+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2051
.p2align 0x4
L_491188:
L_272051:
	movq 0x8(%r14),%r15
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_272052+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2052
.p2align 0x4
L_491189:
L_272136:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_272137+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272137
.p2align 0x4
.long 0x45C
L_272137:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	jmp L_272050
.p2align 0x4
.long 0x638
L_272130:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_272131
L_272134:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_272135+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272135
.p2align 0x4
.long 0x986
L_272135:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_272131:
	movq $0x159,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r11
	movq %r11,0x0(%r15)
	movq 0x38(%rbp),%r11
	movq %r11,0x8(%r15)
	movq $0x2535,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_491191
L_272132:
	movq 0x10(%r15),%r13
	movq 0x8(%r15),%r11
	movq 0x0(%r15),%r10
	movq %r14,0x28(%rbp)
	movq %r10,%r15
	movq %r11,%r14
x_896:
	movq $0x395,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r14,0x8(%r11)
	movq %r15,0x10(%r11)
	movq %r11,0x38(%rbp)
	addq $0x20,%r12
	addq $0x38,%rbp
	leaq (L_272055+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2053
.p2align 0x4
L_491191:
L_272133:
	movq %r14,0x30(%rbp)
	movq $0x1,0x28(%rbp)
L_272057:
	movq 0x20(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_272058+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2034
.p2align 0x4
.long 0x638
L_272052:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_272053
L_272127:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_272128+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272128
.p2align 0x4
.long 0x1928
L_272128:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_272053:
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_491193
L_272054:
	movq 0x10(%r15),%r13
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r11
	movq 0x30(%rbp),%r10
	movq %r10,0x28(%rbp)
	movq %r11,%r15
	jmp x_896
.p2align 0x4
L_491193:
L_272126:
	movq $0x1,0x28(%rbp)
	jmp L_272057
.p2align 0x4
.long 0x638
L_272055:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_272056
L_272124:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_272125+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272125
.p2align 0x4
.long 0x986
L_272125:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_272056:
	movq $0x65D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x30(%rbp)
	movq %r15,0x28(%rbp)
	jmp L_272057
.p2align 0x4
.long 0x8F9
L_272058:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_272059
L_272122:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_272123+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272123
.p2align 0x4
.long 0x986
L_272123:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_272059:
	movq $0x13D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x40(%rbp)
	addq $0x18,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x38(%rbp),%r13
	movq %r13,0x8(%r14)
	movq $0xC67,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x48(%rbp)
	addq $0x10,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	cmpq $0x1,%r13
	je L_491199
L_272060:
	movq 0x8(%r13),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_272061:
	incl %ecx
	movl %ecx,0x20(%rbp)
	jo L_491198
L_272063:
	cmpq $0x1,%r15
	je L_491196
L_272064:
	movq 0x8(%r15),%r15
	jmp L_272061
.p2align 0x4
L_491196:
L_272065:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_272066
L_272119:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_272120+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272120
.p2align 0x4
.long 0x3A5E
L_272120:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_272066:
	movl 0x20(%rbp),%ecx
L_272067:
	movl %ecx,0x58(%rbp)
	movq $0x3735,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x50(%rbp)
	leaq L_272118(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x50,%rbp
	leaq (L_272068+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_9
.p2align 0x4
L_491198:
L_272062:
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_491199:
L_272121:
	xorl %ecx,%ecx
	jmp L_272067
.p2align 0x4
.long 0x2CD3
L_272068:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_272069
L_272116:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_272117+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272117
.p2align 0x4
.long 0x7A7
L_272117:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_272069:
	movq $0x10C9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x30(%rbp)
	addq $0x20,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x230D,%r14
	je L_491201
L_272111:
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x40,%rbp
	leaq (L_272112+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2082
.p2align 0x4
L_491201:
L_272070:
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x28(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x2317,%r15
	je L_491202
L_272104:
	movq 0x10(%r14),%r15
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq $0x3B3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r13,0x8(%r14)
	movq %r11,0x10(%r14)
	movq %r14,0x40(%rbp)
	addq $0x20,%r12
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x40,%rbp
	leaq (L_272105+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2051
.p2align 0x4
L_491202:
L_272071:
	movq 0x8(%r14),%r15
	movq %r15,0x40(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x48(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x40,%rbp
	leaq (L_272072+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2052
.p2align 0x4
.long 0x25
L_272118:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x69B
L_272112:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_272113
L_272114:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_272115+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272115
.p2align 0x4
.long 0x600
L_272115:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_272113:
	movq 0x20(%rbp),%r15
L_272090:
	movq $0x26FF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x6FF
L_272105:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_272106
L_272109:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_272110+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272110
.p2align 0x4
.long 0x4B7
L_272110:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_272106:
	movq $0x159,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r11
	movq %r11,0x0(%r15)
	movq 0x40(%rbp),%r11
	movq %r11,0x8(%r15)
	movq $0x2535,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je L_491205
L_272107:
	movq 0x10(%r15),%r13
	movq 0x8(%r15),%r11
	movq 0x0(%r15),%r10
	movq %r14,0x20(%rbp)
	movq %r10,%r15
	movq %r11,%r14
x_897:
	movq $0x395,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r14,0x8(%r11)
	movq %r15,0x10(%r11)
	movq %r11,0x40(%rbp)
	addq $0x20,%r12
	addq $0x40,%rbp
	leaq (L_272075+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2053
.p2align 0x4
L_491205:
L_272108:
	movq %r14,0x38(%rbp)
	movq $0x1,0x20(%rbp)
L_272077:
	movq 0x28(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_272078+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2034
.p2align 0x4
.long 0x6FF
L_272072:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_272073
L_272102:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_272103+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272103
.p2align 0x4
.long 0x5EE
L_272103:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_272073:
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je L_491207
L_272074:
	movq 0x10(%r15),%r13
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r11
	movq 0x38(%rbp),%r10
	movq %r10,0x20(%rbp)
	movq %r11,%r15
	jmp x_897
.p2align 0x4
L_491207:
L_272101:
	movq $0x1,0x20(%rbp)
	jmp L_272077
.p2align 0x4
.long 0x6FF
L_272075:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_272076
L_272099:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_272100+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272100
.p2align 0x4
.long 0x4B7
L_272100:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_272076:
	movq $0x65D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x38(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_272077
.p2align 0x4
.long 0x75D
L_272078:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_272079
L_272097:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_272098+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272098
.p2align 0x4
.long 0x4B7
L_272098:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_272079:
	movq $0x13D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x48(%rbp)
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x40(%rbp),%r13
	movq %r13,0x8(%r14)
	movq $0xC67,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x50(%rbp)
	addq $0x10,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r14)
	cmpq $0x1,%r13
	je L_491213
L_272080:
	movq 0x8(%r13),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_272081:
	incl %ecx
	movl %ecx,0x28(%rbp)
	jo L_491212
L_272083:
	cmpq $0x1,%r15
	je L_491210
L_272084:
	movq 0x8(%r15),%r15
	jmp L_272081
.p2align 0x4
L_491210:
L_272085:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_272086
L_272094:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_272095+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272095
.p2align 0x4
.long 0x4488
L_272095:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_272086:
	movl 0x28(%rbp),%ecx
L_272087:
	movl %ecx,0x60(%rbp)
	movq $0x3735,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x58(%rbp)
	leaq L_272093(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x58,%rbp
	leaq (L_272088+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_9
.p2align 0x4
L_491212:
L_272082:
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_491213:
L_272096:
	xorl %ecx,%ecx
	jmp L_272087
.p2align 0x4
.long 0xA7D
L_272088:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_272089
L_272091:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_272092+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272092
.p2align 0x4
.long 0x701
L_272092:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_272089:
	movq $0x10C9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x10(%r15)
	movq $0x26FF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq %r14,%r15
	jmp L_272090
.p2align 0x4
.long 0x25
L_272093:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl x_2090
.hidden x_2090
x_2090:
L_272138:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_272139
L_272155:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_272156+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272156
.p2align 0x4
.long 0x45F
L_272156:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_272139:
	movq 0x0(%rbp),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_272140+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2066
.p2align 0x4
.long 0x521
L_272140:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_272141
L_272153:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_272154+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272154
.p2align 0x4
.long 0x4E7
L_272154:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_272141:
	movq $0x145,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x20(%rbp)
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x2302,%r14
	je L_491217
L_272148:
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_272149+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2090
.p2align 0x4
L_491217:
L_272142:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq $0x3BF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	movq %r15,0x30(%rbp)
	addq $0x18,%r12
	addq $0x30,%rbp
	leaq (L_272143+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2066
.p2align 0x4
.long 0x459
L_272149:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_272150
L_272151:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_272152+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272152
.p2align 0x4
.long 0x508
L_272152:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_272150:
	movq 0x28(%rbp),%r15
L_272145:
	movq $0x26F9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x459
L_272143:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_272144
L_272146:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_272147+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272147
.p2align 0x4
.long 0x4FC
L_272147:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_272144:
	movq $0x145,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x26F9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq %r14,%r15
	jmp L_272145
.text
.p2align 0x4
.globl x_2079
.hidden x_2079
x_2079:
L_272157:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x18(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_272235
L_272158:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_491227
L_272159:
	movq 0x0(%rbp),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x20(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x2306,%r14
	je L_491225
L_272232:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x2353,%r15
	je L_491224
L_272234:
	movq 0x10(%r14),%r15
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r14
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	movq %r11,%r14
L_272164:
	movq $0x141,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x30(%rbp)
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x28(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_491223
L_272165:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x2309,%r15
	je L_491222
	cmpq $0x230A,%r15
	je L_491221
L_272166:
	movq 0x10(%r14),%r15
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq $0x395,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r13,0x8(%r14)
	movq %r11,0x10(%r14)
	movq %r14,0x50(%rbp)
	addq $0x20,%r12
	addq $0x50,%rbp
	leaq (L_272167+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2053
.p2align 0x4
L_491221:
L_272223:
	movq 0x8(%r14),%r15
	movq %r15,0x50(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_272224+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2078
.p2align 0x4
L_491222:
L_272218:
	movq 0x8(%r14),%r15
	movq %r15,0x50(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_272219+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2078
.p2align 0x4
L_491223:
L_272228:
	movq (globalObjptr+0x25E0)(%rip),%r15
L_272169:
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x38(%rbp),%r13
	movq %r13,0x8(%r14)
	movq $0x10C3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x28(%rbp)
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	leaq L_272215(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x30(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_272170+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2020
.p2align 0x4
L_491224:
L_272233:
	movq 0x8(%r14),%r15
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_272162+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2060
.p2align 0x4
L_491225:
L_272160:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x2353,%r15
	je L_491226
L_272231:
	movq 0x10(%r14),%r15
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r14
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	movq %r11,%r14
	jmp L_272164
.p2align 0x4
L_491226:
L_272161:
	movq 0x8(%r14),%r15
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_272162+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2060
.p2align 0x4
L_491227:
L_272235:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_272236+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272236
.p2align 0x4
.long 0x45C
L_272236:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	jmp L_272159
.p2align 0x4
.long 0x1B55
L_272167:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_272168
L_272216:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_272217+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272217
.p2align 0x4
.long 0x2354
L_272217:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_272168:
	movq $0x65D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x252F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
	jmp L_272169
.p2align 0x4
.long 0x1B55
L_272224:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_272225
L_272226:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_272227+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272227
.p2align 0x4
.long 0x2354
L_272227:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_272225:
	movq $0x2531,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_272169
.p2align 0x4
.long 0x1B55
L_272219:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_272220
L_272221:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_272222+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272222
.p2align 0x4
.long 0x2354
L_272222:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_272220:
	movq $0x2531,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_272169
.p2align 0x4
.long 0x8F9
L_272170:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_272171
L_272213:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_272214+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272214
.p2align 0x4
.long 0x4386
L_272214:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_272171:
	movq $0x10C5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x20(%rbp)
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x30(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x8(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x2304,%r15
	je L_491238
L_272178:
	movq 0x10(%r14),%r15
	movq 0x8(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x30(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x2306,%r14
	je L_491236
L_272210:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x2353,%r15
	je L_491235
L_272212:
	movq 0x10(%r14),%r15
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r14
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	movq %r11,%r14
L_272183:
	movq $0x141,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x38(%rbp)
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x28(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_491234
L_272184:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x2309,%r15
	je L_491233
	cmpq $0x230A,%r15
	je L_491232
L_272185:
	movq 0x10(%r14),%r15
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq $0x395,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r13,0x8(%r14)
	movq %r11,0x10(%r14)
	movq %r14,0x58(%rbp)
	addq $0x20,%r12
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x58,%rbp
	leaq (L_272186+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2053
.p2align 0x4
L_491232:
L_272201:
	movq 0x8(%r14),%r15
	movq %r15,0x58(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x60(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x58,%rbp
	leaq (L_272202+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2078
.p2align 0x4
L_491233:
L_272196:
	movq 0x8(%r14),%r15
	movq %r15,0x58(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x60(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x58,%rbp
	leaq (L_272197+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2078
.p2align 0x4
L_491234:
L_272206:
	movq (globalObjptr+0x25E0)(%rip),%r15
L_272188:
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x40(%rbp),%r13
	movq %r13,0x8(%r14)
	movq $0x10C3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x28(%rbp)
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	leaq L_272193(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x38(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_272189+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2020
.p2align 0x4
L_491235:
L_272211:
	movq 0x8(%r14),%r15
	movq %r15,0x40(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x48(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x40,%rbp
	leaq (L_272181+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2060
.p2align 0x4
L_491236:
L_272179:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x2353,%r15
	je L_491237
L_272209:
	movq 0x10(%r14),%r15
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r14
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	movq %r11,%r14
	jmp L_272183
.p2align 0x4
L_491237:
L_272180:
	movq 0x8(%r14),%r15
	movq %r15,0x40(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x48(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x40,%rbp
	leaq (L_272181+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2060
.p2align 0x4
L_491238:
L_272172:
	movq 0x8(%r14),%r15
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x38(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x30,%rbp
	leaq (L_272173+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2079
.p2align 0x4
.long 0x25
L_272215:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x638
L_272162:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_272163
L_272229:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_272230+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272230
.p2align 0x4
.long 0x986
L_272230:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_272163:
	movq 0x30(%rbp),%r14
	movq 0x38(%rbp),%r15
	jmp L_272164
.p2align 0x4
.long 0x852
L_272186:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_272187
L_272194:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_272195+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272195
.p2align 0x4
.long 0x7AC
L_272195:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_272187:
	movq $0x65D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x252F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
	jmp L_272188
.p2align 0x4
.long 0x852
L_272202:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_272203
L_272204:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_272205+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272205
.p2align 0x4
.long 0x7AC
L_272205:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_272203:
	movq $0x2531,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_272188
.p2align 0x4
.long 0x852
L_272197:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_272198
L_272199:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_272200+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272200
.p2align 0x4
.long 0x7AC
L_272200:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_272198:
	movq $0x2531,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_272188
.p2align 0x4
.long 0x511
L_272189:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_272190
L_272191:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_272192+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272192
.p2align 0x4
.long 0x815
L_272192:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_272190:
	movq $0x10C5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x2703,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq %r14,%r15
L_272175:
	movq $0x2703,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x25
L_272193:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x6FF
L_272181:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_272182
L_272207:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_272208+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272208
.p2align 0x4
.long 0x4B7
L_272208:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_272182:
	movq 0x38(%rbp),%r14
	movq 0x40(%rbp),%r15
	jmp L_272183
.p2align 0x4
.long 0x459
L_272173:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_272174
L_272176:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_272177+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272177
.p2align 0x4
.long 0x508
L_272177:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_272174:
	movq 0x28(%rbp),%r15
	jmp L_272175
.text
.p2align 0x4
.globl x_2078
.hidden x_2078
x_2078:
L_272237:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x18(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_272323
L_272238:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_491249
L_272239:
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x2328,%r14
	je L_491247
L_272322:
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq $0x20E7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq %r15,0x30(%rbp)
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r11,0x8(%r15)
	movq %r13,0x20(%rbp)
	movq %r15,0x28(%rbp)
	addq $0x18,%r12
L_272256:
	leaq L_272311(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x20(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_272257+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp file_0
.p2align 0x4
L_491247:
L_272240:
	movq 0x18(%r15),%r14
	movq 0x10(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x28(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x30(%rbp)
	cmpq $0x1,%r14
	jne L_491248
L_272321:
	movq (globalObjptr+0xCA28)(%rip),%r14
	movq %r14,%r15
L_272242:
	movq %r15,0x48(%rbp)
	leaq L_272320(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movb $0x2E,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_272243+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp split_0
.p2align 0x4
L_491248:
	movq %r14,%r15
	jmp L_272242
.p2align 0x4
L_491249:
L_272323:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_272324+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272324
.p2align 0x4
.long 0x45C
L_272324:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	jmp L_272239
.p2align 0x4
.long 0x6FF
L_272257:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x20(%rbp),%r15
	movl 0x0(%r15),%r14d
	movl %r14d,0x40(%rbp)
	movl 0x4(%r15),%r14d
	movq 0x30(%rbp),%r15
	cmpq $0x1,%r15
	je L_491270
L_272258:
	movl %r14d,0x44(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r15
	movq %r15,0x30(%rbp)
	movq $0x1,0x48(%rbp)
.p2align 0x4,,0x7
L_272259:
	movq 0x30(%rbp),%r14
	movq 0x10(%r14),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movl %r15d,%ecx
	movslq %ecx,%r14
	cmpq %r15,%r14
	jne L_491269
L_272261:
	movl $0x0,0x50(%rbp)
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_3200:
	cmpl %ecx,%ebx
	jnl L_491253
L_272305:
	movl %ebx,%r14d
	incl %r14d
	movslq %ebx,%r13
	cmpq %r15,%r13
	jnb L_491252
L_272307:
	movl 0x50(%rbp),%r13d
	incl %r13d
	jo L_491251
L_272309:
	movl %r13d,0x50(%rbp)
	movl %r14d,%ebx
	jmp loop_3200
.p2align 0x4
L_491251:
L_272308:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_491252:
L_272306:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_491253:
L_272262:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_491268
.p2align 0x4,,0x7
L_272263:
	movl 0x44(%rbp),%r15d
	movl %r15d,%r14d
	addl 0x50(%rbp),%r14d
	jo L_491267
L_272265:
	movq $0x389,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movl 0x40(%rbp),%r11d
	movl %r11d,0x0(%r13)
	movl %r15d,0x4(%r13)
	movq 0x38(%rbp),%r15
	movq %r15,0x8(%r13)
	movq $0x389,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movl %r14d,0x4(%r10)
	addq $0x18,%r12
	movl %r11d,0x0(%r10)
	movq %r15,0x8(%r10)
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r10,0x8(%r15)
	addq $0x18,%r12
	movq $0x141,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x18,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x8(%r13)
	incl %r14d
	jo L_491266
L_272267:
	movq $0x2713,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r13,0x0(%r15)
	movq 0x48(%rbp),%r11
	movq %r11,0x8(%r15)
	movq 0x20(%rbp),%r11
	cmpq $0x1,%r11
	je L_491254
L_272268:
	movq %r15,0x48(%rbp)
	movl %r14d,0x44(%rbp)
	movq 0x0(%r11),%r15
	movq 0x8(%r11),%r11
	movq %r11,0x20(%rbp)
	movq %r15,0x30(%rbp)
	jmp L_272259
.p2align 0x4
L_491254:
L_272269:
	movq %r13,0x30(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq $0x1,0x38(%rbp)
.p2align 0x4,,0x7
L_272270:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_491265
.p2align 0x4,,0x7
L_272271:
	movq $0x2713,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_491255
L_272272:
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x30(%rbp)
	jmp L_272270
.p2align 0x4
L_491255:
L_272273:
	movq 0x38(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq $0x1,0x38(%rbp)
.p2align 0x4,,0x7
L_272274:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_491264
.p2align 0x4,,0x7
L_272275:
	movq $0x2713,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_491256
L_272276:
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x30(%rbp)
	jmp L_272274
.p2align 0x4
L_491256:
L_272277:
	movq 0x38(%rbp),%r15
	cmpq $0x1,%r15
	je L_491263
L_272278:
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r15
	movq %r15,0x38(%rbp)
	movq $0x1,0x40(%rbp)
.p2align 0x4,,0x7
L_272279:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_491262
.p2align 0x4,,0x7
L_272280:
	movq $0x2713,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_491257
L_272281:
	movq %r15,0x40(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x38(%rbp)
	jmp L_272279
.p2align 0x4
L_491257:
L_272282:
	movq 0x40(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq $0x1,0x40(%rbp)
.p2align 0x4,,0x7
L_272283:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_491261
.p2align 0x4,,0x7
L_272284:
	movq $0x1BD3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_491258
L_272285:
	movq %r15,0x40(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x38(%rbp)
	jmp L_272283
.p2align 0x4
L_491258:
L_272286:
	movq 0x40(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq $0x1,0x40(%rbp)
.p2align 0x4,,0x7
L_272287:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_491260
.p2align 0x4,,0x7
L_272288:
	movq $0x1BD3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_491259
L_272289:
	movq %r15,0x40(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x38(%rbp)
	jmp L_272287
.p2align 0x4
L_491259:
L_272291:
	movq $0x143,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x8(%r14)
	movq %r14,0x8(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_491260:
L_272292:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_272293+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272293
.p2align 0x4
.long 0x4B7
L_272293:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_272288
.p2align 0x4
L_491261:
L_272294:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_272295+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272295
.p2align 0x4
.long 0x4B7
L_272295:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_272284
.p2align 0x4
L_491262:
L_272296:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_272297+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272297
.p2align 0x4
.long 0x4B7
L_272297:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_272280
.p2align 0x4
L_491263:
L_272298:
	movq $0x1,%r13
	xchgq %r13,%r15
	jmp L_272291
.p2align 0x4
L_491264:
L_272299:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_272300+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272300
.p2align 0x4
.long 0x5EE
L_272300:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_272275
.p2align 0x4
L_491265:
L_272301:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_272302+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272302
.p2align 0x4
.long 0x5EE
L_272302:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_272271
.p2align 0x4
L_491266:
L_272266:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_491267:
L_272264:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_491268:
L_272303:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_272304+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272304
.p2align 0x4
.long 0x4489
L_272304:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	jmp L_272263
.p2align 0x4
L_491269:
L_272260:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_491270:
L_272310:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x25
L_272311:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x7BE
L_272243:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_272244
L_272318:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_272319+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272319
.p2align 0x4
.long 0x986
L_272319:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_272244:
	movq 0x38(%rbp),%r14
	cmpq $0x1,%r14
	je L_491271
L_272245:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x38(%rbp)
	movq $0x1,0x40(%rbp)
L_272246:
	movq %r15,0x50(%rbp)
	leaq L_272316(%rip),%r15
	movq %r15,0x10(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_272247+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromString_23
.p2align 0x4
L_491271:
L_272317:
	movq $0x1,%r15
L_272255:
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x30(%rbp),%r11
	movq %r11,0x8(%r14)
	movq %r15,0x30(%rbp)
	movq %r13,0x20(%rbp)
	movq %r14,0x28(%rbp)
	jmp L_272256
.p2align 0x4
.long 0x25
L_272320:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x2CD6
L_272247:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_272248
L_272314:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_272315+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272315
.p2align 0x4
.long 0x2354
L_272315:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_272248:
	movq $0x20E7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x38(%rbp),%r14
	cmpq $0x1,%r14
	je L_491273
L_272249:
	movq %r15,0x40(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x38(%rbp)
	jmp L_272246
.p2align 0x4
L_491273:
L_272250:
	movq 0x40(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq $0x1,0x40(%rbp)
.p2align 0x4,,0x7
L_272251:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_491275
.p2align 0x4,,0x7
L_272252:
	movq $0x20E7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_272255
L_272253:
	movq %r15,0x40(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x38(%rbp)
	jmp L_272251
.p2align 0x4
L_491275:
L_272312:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_272313+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272313
.p2align 0x4
.long 0x2574
L_272313:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_272252
.p2align 0x4
.long 0x25
L_272316:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl x_2072
.hidden x_2072
x_2072:
L_272325:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_272326
L_272346:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_272347+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272347
.p2align 0x4
.long 0x45F
L_272347:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_272326:
	movq 0x0(%rbp),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_272327+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2034
.p2align 0x4
.long 0x521
L_272327:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_272328
L_272344:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_272345+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272345
.p2align 0x4
.long 0x4E7
L_272345:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_272328:
	movq $0x13D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x20(%rbp)
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x22E3,%r14
	je L_491278
L_272335:
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	addq $0x30,%rbp
	leaq (L_272336+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2034
.p2align 0x4
L_491278:
L_272329:
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_272330+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2072
.p2align 0x4
.long 0x2
L_272336:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_272337
L_272342:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_272343+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272343
.p2align 0x4
.long 0x51F
L_272343:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_272337:
	movq $0x13D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x30(%rbp)
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_272338+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2034
.p2align 0x4
.long 0x459
L_272330:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_272331
L_272333:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_272334+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272334
.p2align 0x4
.long 0x508
L_272334:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_272331:
	movq 0x28(%rbp),%r15
L_272332:
	movq $0x270B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x7B3
L_272338:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_272339
L_272340:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_272341+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272341
.p2align 0x4
.long 0x5EE
L_272341:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_272339:
	movq $0x13D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x270B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x270B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_272332
.text
.p2align 0x4
.globl x_2076
.hidden x_2076
x_2076:
L_272348:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x30(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_272437
L_272349:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_491303
L_272350:
	movq 0x0(%rbp),%r9
	movq 0xFFFFFFFFFFFFFFF8(%r9),%r15
	shrq $0x1,%r15
	cmpq $0x2353,%r15
	je L_491302
L_272434:
	movq 0x0(%r9),%r15
	movq 0x8(%rbp),%r9
	cmpq $0x1,%r9
	je L_491283
L_272435:
	movq %r15,0x38(%rbp)
	movq 0x20(%r9),%r15
	movq 0x18(%r9),%r10
	movq 0x10(%r9),%r11
	movq 0x8(%r9),%r13
	movq 0x0(%r9),%r14
L_272355:
	movq %r15,0x48(%rbp)
	movq %r10,0x50(%rbp)
	movq %r11,0x58(%rbp)
	movq %r13,0x60(%rbp)
	movq %r14,0x68(%rbp)
	addq $0x48,%rbp
	leaq (L_272356+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2076
.p2align 0x4
L_491283:
L_272436:
	movq $0x1,0x38(%rbp)
L_272358:
	movq 0x10(%r15),%r14
	movq %r14,0x40(%rbp)
	cmpq %r14,(globalObjptr+0xE948)(%rip)
	je L_272425
L_272359:
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movq %r13,0x48(%rbp)
	cmpq $0x8,%r13
	jne vectorEqual_78
L_272416:
	xorq %r15,%r15
.p2align 0x4,,0x7
vectorEqualLoop_214:
	cmpq 0x48(%rbp),%r15
	je L_491299
L_272417:
	movq 0x40(%rbp),%r14
	movq (globalObjptr+0xE948)(%rip),%r11
	movb 0x0(%r11,%r15,1),%r13b
	cmpb %r13b,0x0(%r14,%r15,1)
	jne L_491284
L_272422:
	incq %r15
	jmp vectorEqualLoop_214
.p2align 0x4
L_491284:
L_272418:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb vectorEqual_78
L_272420:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_272421+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272421
.p2align 0x4
.long 0x448C
L_272421:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
vectorEqual_78:
	movq (globalObjptr+0xE928)(%rip),%r14
	cmpq %r14,0x40(%rbp)
	je L_272412
L_272361:
	cmpq $0x6,0x48(%rbp)
	jne vectorEqual_79
L_272403:
	xorq %r15,%r15
.p2align 0x4,,0x7
vectorEqualLoop_213:
	cmpq 0x48(%rbp),%r15
	je L_491296
L_272404:
	movq 0x40(%rbp),%r14
	movq (globalObjptr+0xE928)(%rip),%r11
	movb 0x0(%r11,%r15,1),%r13b
	cmpb %r13b,0x0(%r14,%r15,1)
	jne L_491285
L_272409:
	incq %r15
	jmp vectorEqualLoop_213
.p2align 0x4
L_491285:
L_272405:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb vectorEqual_79
L_272407:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_272408+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272408
.p2align 0x4
.long 0x448C
L_272408:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
vectorEqual_79:
	movq 0x40(%rbp),%r14
	cmpq %r14,(globalObjptr+0xE940)(%rip)
	je L_272399
L_272363:
	cmpq $0x7,0x48(%rbp)
	jne vectorEqual_80
L_272390:
	xorq %r15,%r15
.p2align 0x4,,0x7
vectorEqualLoop_212:
	cmpq 0x48(%rbp),%r15
	je L_491293
L_272391:
	movq (globalObjptr+0xE940)(%rip),%r14
	movq 0x40(%rbp),%r11
	movb 0x0(%r11,%r15,1),%r13b
	cmpb %r13b,0x0(%r14,%r15,1)
	jne L_491286
L_272396:
	incq %r15
	jmp vectorEqualLoop_212
.p2align 0x4
L_491286:
L_272392:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb vectorEqual_80
L_272394:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_272395+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272395
.p2align 0x4
.long 0x448C
L_272395:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
vectorEqual_80:
	movq (globalObjptr+0xD768)(%rip),%r14
	cmpq %r14,0x40(%rbp)
	je L_272386
L_272365:
	cmpq $0x5,0x48(%rbp)
	jne L_272367
L_272377:
	xorq %r15,%r15
.p2align 0x4,,0x7
vectorEqualLoop_211:
	cmpq %r15,0x48(%rbp)
	je L_491289
L_272378:
	movq (globalObjptr+0xD768)(%rip),%r14
	movq 0x40(%rbp),%r11
	movb 0x0(%r11,%r15,1),%r13b
	cmpb %r13b,0x0(%r14,%r15,1)
	jne L_491287
L_272383:
	incq %r15
	jmp vectorEqualLoop_211
.p2align 0x4
L_491287:
L_272379:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_272367
L_272381:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_272382+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272382
.p2align 0x4
.long 0x448B
L_272382:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_272367:
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x48(%rbp)
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x10A00)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x58(%rbp)
	leaq L_272376(%rip),%r15
	movq %r15,0x28(%rbp)
	movq %rbp,%r15
	addq $0x30,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x58,%rbp
	leaq (L_272368+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_491289:
L_272384:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_272386
L_272387:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_272388+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272388
.p2align 0x4
.long 0x7BA
L_272388:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_272386:
	movq $0x2519,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movb $0x3,%r14b
	movzbl %r14b,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_491293:
L_272397:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_272399
L_272400:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_272401+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272401
.p2align 0x4
.long 0x7BA
L_272401:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_272399:
	movq $0x2519,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movb $0x1,%r14b
	movzbl %r14b,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_491296:
L_272410:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_272412
L_272413:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_272414+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272414
.p2align 0x4
.long 0x7BA
L_272414:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_272412:
	movq $0x2519,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movb $0x0,%r14b
	movzbl %r14b,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_491299:
L_272423:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_272425
L_272426:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_272427+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272427
.p2align 0x4
.long 0x7BA
L_272427:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_272425:
	movq $0x2519,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movb $0x2,%r14b
	movzbl %r14b,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_491302:
L_272351:
	movq 0x8(%r9),%r15
	movq %r15,0x40(%rbp)
	movq 0x0(%r9),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_272352+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2060
.p2align 0x4
L_491303:
L_272437:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_272438+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272438
.p2align 0x4
.long 0x97B
L_272438:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_272350
.p2align 0x4
.long 0x37A0
L_272356:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_272357
L_272429:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_272430+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272430
.p2align 0x4
.long 0x448B
L_272430:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_272357:
	movq 0x38(%rbp),%r15
	movq 0x40(%rbp),%r14
	movq %r14,0x38(%rbp)
	jmp L_272358
.p2align 0x4
.long 0x448A
L_272368:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x40(%rbp)
	leaq L_272375(%rip),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_272369+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x920
L_272376:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1B8C
L_272352:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_272353
L_272432:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_272433+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272433
.p2align 0x4
.long 0x4EA
L_272433:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_272353:
	movq 0x8(%rbp),%r9
	cmpq $0x1,%r9
	je L_491306
L_272354:
	movq 0x20(%r9),%r15
	movq 0x18(%r9),%r10
	movq 0x10(%r9),%r11
	movq 0x8(%r9),%r13
	movq 0x0(%r9),%r14
	movq 0x40(%rbp),%r9
	movq %r9,0x38(%rbp)
	jmp L_272355
.p2align 0x4
L_491306:
L_272431:
	movq $0x1,0x38(%rbp)
	movq 0x40(%rbp),%r15
	jmp L_272358
.p2align 0x4
.long 0x448A
L_272369:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	incl %r13d
	jo L_491308
L_272371:
	movl %r13d,0x0(%r14)
	movq %r15,0x50(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x60(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq (globalObjptr+0x9D0)(%rip),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_272372+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_491308:
L_272370:
	movq 0x30(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x920
L_272375:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x78B
L_272372:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq (globalObjptr+0x1608)(%rip),%r15
	movq (globalObjptr+0x1610)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_491309
L_272373:
	movq 0x30(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x38(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_491309:
L_272374:
	movq 0x30(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl x_2070
.hidden x_2070
x_2070:
L_272439:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x30(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_272543
L_272440:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_491334
L_272441:
	movq 0x0(%rbp),%r9
	movq 0xFFFFFFFFFFFFFFF8(%r9),%r15
	shrq $0x1,%r15
	cmpq $0x2353,%r15
	je L_491333
L_272540:
	movq 0x0(%r9),%r15
	movq 0x8(%rbp),%r9
	cmpq $0x1,%r9
	je L_491310
L_272541:
	movq %r15,0x38(%rbp)
	movq 0x20(%r9),%r15
	movq 0x18(%r9),%r10
	movq 0x10(%r9),%r11
	movq 0x8(%r9),%r13
	movq 0x0(%r9),%r14
L_272446:
	movq %r15,0x48(%rbp)
	movq %r10,0x50(%rbp)
	movq %r11,0x58(%rbp)
	movq %r13,0x60(%rbp)
	movq %r14,0x68(%rbp)
	addq $0x48,%rbp
	leaq (L_272447+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2070
.p2align 0x4
L_491310:
L_272542:
	movq $0x1,0x38(%rbp)
L_272449:
	movq 0x10(%r15),%r14
	movq %r14,0x40(%rbp)
	cmpq %r14,(globalObjptr+0xE948)(%rip)
	je L_272531
L_272450:
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movq %r13,0x48(%rbp)
	cmpq $0x8,%r13
	jne vectorEqual_81
L_272522:
	xorq %r15,%r15
.p2align 0x4,,0x7
vectorEqualLoop_219:
	cmpq 0x48(%rbp),%r15
	je L_491330
L_272523:
	movq 0x40(%rbp),%r14
	movq (globalObjptr+0xE948)(%rip),%r11
	movb 0x0(%r11,%r15,1),%r13b
	cmpb %r13b,0x0(%r14,%r15,1)
	jne L_491311
L_272528:
	incq %r15
	jmp vectorEqualLoop_219
.p2align 0x4
L_491311:
L_272524:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb vectorEqual_81
L_272526:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_272527+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272527
.p2align 0x4
.long 0x448C
L_272527:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
vectorEqual_81:
	movq 0x40(%rbp),%r14
	cmpq %r14,(globalObjptr+0xE928)(%rip)
	je L_272518
L_272452:
	cmpq $0x6,0x48(%rbp)
	jne vectorEqual_82
L_272509:
	xorq %r15,%r15
.p2align 0x4,,0x7
vectorEqualLoop_218:
	cmpq %r15,0x48(%rbp)
	je L_491327
L_272510:
	movq 0x40(%rbp),%r14
	movq (globalObjptr+0xE928)(%rip),%r11
	movb 0x0(%r11,%r15,1),%r13b
	cmpb %r13b,0x0(%r14,%r15,1)
	jne L_491312
L_272515:
	incq %r15
	jmp vectorEqualLoop_218
.p2align 0x4
L_491312:
L_272511:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb vectorEqual_82
L_272513:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_272514+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272514
.p2align 0x4
.long 0x448C
L_272514:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
vectorEqual_82:
	movq 0x40(%rbp),%r14
	cmpq %r14,(globalObjptr+0xE8E0)(%rip)
	je L_272505
L_272454:
	cmpq $0x7,0x48(%rbp)
	sete %al
	movzbl %al,%eax
	movl %eax,0x50(%rbp)
	jne vectorEqual_83
L_272496:
	xorq %r15,%r15
.p2align 0x4,,0x7
vectorEqualLoop_217:
	cmpq %r15,0x48(%rbp)
	je L_491324
L_272497:
	movq 0x40(%rbp),%r14
	movq (globalObjptr+0xE8E0)(%rip),%r11
	movb 0x0(%r11,%r15,1),%r13b
	cmpb %r13b,0x0(%r14,%r15,1)
	jne L_491313
L_272502:
	incq %r15
	jmp vectorEqualLoop_217
.p2align 0x4
L_491313:
L_272498:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb vectorEqual_83
L_272500:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_272501+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272501
.p2align 0x4
.long 0x448D
L_272501:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
vectorEqual_83:
	movq 0x40(%rbp),%r14
	cmpq %r14,(globalObjptr+0xE940)(%rip)
	je L_272492
L_272456:
	movl 0x50(%rbp),%r14d
	testl %r14d,%r14d
	jz vectorEqual_84
L_272483:
	xorq %r15,%r15
.p2align 0x4,,0x7
vectorEqualLoop_216:
	cmpq %r15,0x48(%rbp)
	je L_491321
L_272484:
	movq (globalObjptr+0xE940)(%rip),%r14
	movq 0x40(%rbp),%r11
	movb 0x0(%r11,%r15,1),%r13b
	cmpb %r13b,0x0(%r14,%r15,1)
	jne L_491314
L_272489:
	incq %r15
	jmp vectorEqualLoop_216
.p2align 0x4
L_491314:
L_272485:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb vectorEqual_84
L_272487:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_272488+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272488
.p2align 0x4
.long 0x448C
L_272488:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
vectorEqual_84:
	movq 0x40(%rbp),%r14
	cmpq %r14,(globalObjptr+0xE950)(%rip)
	je L_272479
L_272458:
	cmpq $0x5,0x48(%rbp)
	jne L_272460
L_272470:
	xorq %r15,%r15
.p2align 0x4,,0x7
vectorEqualLoop_215:
	cmpq %r15,0x48(%rbp)
	je L_491317
L_272471:
	movq 0x40(%rbp),%r14
	movq (globalObjptr+0xE950)(%rip),%r11
	movb 0x0(%r11,%r15,1),%r13b
	cmpb %r13b,0x0(%r14,%r15,1)
	jne L_491315
L_272476:
	incq %r15
	jmp vectorEqualLoop_215
.p2align 0x4
L_491315:
L_272472:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_272460
L_272474:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_272475+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272475
.p2align 0x4
.long 0x448B
L_272475:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_272460:
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x48(%rbp)
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x10A00)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x58(%rbp)
	leaq L_272469(%rip),%r15
	movq %r15,0x28(%rbp)
	movq %rbp,%r15
	addq $0x30,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x58,%rbp
	leaq (L_272461+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_491317:
L_272477:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_272479
L_272480:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_272481+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272481
.p2align 0x4
.long 0x7BA
L_272481:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_272479:
	movq $0x20F9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movb $0x4,%r14b
	movzbl %r14b,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_491321:
L_272490:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_272492
L_272493:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_272494+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272494
.p2align 0x4
.long 0x7BA
L_272494:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_272492:
	movq $0x20F9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movb $0x2,%r14b
	movzbl %r14b,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_491324:
L_272503:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_272505
L_272506:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_272507+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272507
.p2align 0x4
.long 0x7BA
L_272507:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_272505:
	movq $0x20F9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movb $0x0,%r14b
	movzbl %r14b,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_491327:
L_272516:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_272518
L_272519:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_272520+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272520
.p2align 0x4
.long 0x7BA
L_272520:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_272518:
	movq $0x20F9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movb $0x1,%r14b
	movzbl %r14b,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_491330:
L_272529:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_272531
L_272532:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_272533+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272533
.p2align 0x4
.long 0x7BA
L_272533:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_272531:
	movq $0x20F9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movb $0x3,%r14b
	movzbl %r14b,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_491333:
L_272442:
	movq 0x8(%r9),%r15
	movq %r15,0x40(%rbp)
	movq 0x0(%r9),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_272443+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2060
.p2align 0x4
L_491334:
L_272543:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_272544+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272544
.p2align 0x4
.long 0x97B
L_272544:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_272441
.p2align 0x4
.long 0x37A0
L_272447:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_272448
L_272535:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_272536+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272536
.p2align 0x4
.long 0x448B
L_272536:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_272448:
	movq 0x38(%rbp),%r15
	movq 0x40(%rbp),%r14
	movq %r14,0x38(%rbp)
	jmp L_272449
.p2align 0x4
.long 0x448A
L_272461:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x40(%rbp)
	leaq L_272468(%rip),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_272462+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x920
L_272469:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1B8C
L_272443:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_272444
L_272538:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_272539+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_272539
.p2align 0x4
.long 0x4EA
L_272539:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_272444:
	movq 0x8(%rbp),%r9
	cmpq $0x1,%r9
	je L_491337
L_272445:
	movq 0x20(%r9),%r15
	movq 0x18(%r9),%r10
	movq 0x10(%r9),%r11
	movq 0x8(%r9),%r13
	movq 0x0(%r9),%r14
	movq 0x40(%rbp),%r9
	movq %r9,0x38(%rbp)
	jmp L_272446
.p2align 0x4
L_491337:
L_272537:
	movq $0x1,0x38(%rbp)
	movq 0x40(%rbp),%r15
	jmp L_272449
.p2align 0x4
.long 0x448A
L_272462:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	incl %r13d
	jo L_491339
L_272464:
	movl %r13d,0x0(%r14)
	movq %r15,0x50(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x60(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq (globalObjptr+0x9D0)(%rip),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_272465+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_491339:
L_272463:
	movq 0x30(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x920
L_272468:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x78B
L_272465:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq (globalObjptr+0x1610)(%rip),%r15
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_491340
L_272466:
	movq 0x30(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x38(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_491340:
L_272467:
	movq 0x30(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
