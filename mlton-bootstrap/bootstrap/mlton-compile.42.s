/* MLton 20130715 (built Mon Jun 13 11:54:01 AEST 2016 on ports.extensibl.com) */
/*   created this file on Mon Jun 13 12:09:12 2016. */
/* Do not edit this file. */
/* Flag settings:  */
/*    align: 8 */
/*    atMLtons: (mlton-compile, @MLton, --) */
/*    chunk: chunk per function */
/*    closureConvertGlobalize: true */
/*    closureConvertShrink: true */
/*    codegen: amd64 */
/*    contifyIntoMain: false */
/*    debug: false */
/*    defaultChar: char8 */
/*    defaultWideChar: widechar32 */
/*    defaultInt: int32 */
/*    defaultReal: real64 */
/*    defaultWord: word32 */
/*    diag passes: [] */
/*    drop passes: [] */
/*    elaborate allowConstant (default): false */
/*    elaborate allowConstant (enabled): true */
/*    elaborate allowFFI (default): false */
/*    elaborate allowFFI (enabled): true */
/*    elaborate allowPrim (default): false */
/*    elaborate allowPrim (enabled): true */
/*    elaborate allowOverload (default): false */
/*    elaborate allowOverload (enabled): true */
/*    elaborate allowRebindEquals (default): false */
/*    elaborate allowRebindEquals (enabled): true */
/*    elaborate deadCode (default): false */
/*    elaborate deadCode (enabled): true */
/*    elaborate forceUsed (default): false */
/*    elaborate forceUsed (enabled): true */
/*    elaborate ffiStr (default):  */
/*    elaborate ffiStr (enabled): true */
/*    elaborate nonexhaustiveExnMatch (default): default */
/*    elaborate nonexhaustiveExnMatch (enabled): true */
/*    elaborate nonexhaustiveMatch (default): warn */
/*    elaborate nonexhaustiveMatch (enabled): true */
/*    elaborate redundantMatch (default): warn */
/*    elaborate redundantMatch (enabled): true */
/*    elaborate resolveScope (default): strdec */
/*    elaborate resolveScope (enabled): true */
/*    elaborate sequenceNonUnit (default): warn */
/*    elaborate sequenceNonUnit (enabled): true */
/*    elaborate warnUnused (default): true */
/*    elaborate warnUnused (enabled): true */
/*    elaborate only: false */
/*    emit main: true */
/*    export header: None */
/*    exn history: false */
/*    generated output format: executable */
/*    gc check: Limit */
/*    indentation: 3 */
/*    inlineIntoMain: true */
/*    inlineLeafA: {loops = true, repeat = true, size = Some 20} */
/*    inlineLeafB: {loops = true, repeat = true, size = Some 40} */
/*    inlineNonRec: {small = 60, product = 320} */
/*    input file: mlton */
/*    keep CoreML: false */
/*    keep def use: true */
/*    keep dot: false */
/*    keep Machine: false */
/*    keep passes: [] */
/*    keep RSSA: false */
/*    keep SSA: false */
/*    keep SSA2: false */
/*    keep SXML: false */
/*    keep XML: false */
/*    extra_: false */
/*    lib dir: /usr/ports/pobj/mlton-20130715/mlton-on-20130715-release/build/lib */
/*    lib target dir: /usr/ports/pobj/mlton-20130715/mlton-on-20130715-release/build/lib/targets/self */
/*    loop passes: 1 */
/*    mark cards: true */
/*    max function size: 10000 */
/*    mlb path vars: [{var = MLTON_ROOT, path = $(LIB_MLTON_DIR)/sml}, {var = SML_LIB, path = $(LIB_MLTON_DIR)/sml}] */
/*    native commented: 0 */
/*    native live stack: false */
/*    native optimize: 1 */
/*    native move hoist: true */
/*    native copy prop: true */
/*    native copy prop cutoff: 1000 */
/*    native cutoff: 100 */
/*    native live transfer: 8 */
/*    native shuffle: true */
/*    native ieee fp: false */
/*    native split: Some 20000 */
/*    optimizationPasses: [<ssa2::default>, <ssa::default>, <sxml::default>, <xml::default>] */
/*    polyvariance: Some {hofo = true, rounds = 2, small = 30, product = 300} */
/*    prefer abs paths: false */
/*    prof passes: [] */
/*    profile: None */
/*    profile branch: false */
/*    profile C: [] */
/*    profile IL: ProfileSource */
/*    profile include/exclude: [(Seq [Star [.], Or [Seq [Seq [[$], [(], [S], [M], [L], [_], [L], [I], [B], [)]]]], Star [.]], false)] */
/*    profile raise: false */
/*    profile stack: false */
/*    profile val: false */
/*    show basis: None */
/*    show def-use: None */
/*    show types: true */
/*    target: self */
/*    target arch: AMD64 */
/*    target OS: OpenBSD */
/*    type check: false */
/*    verbosity: Pass */
/*    warn unrecognized annotation: true */
/*    warn deprecated features: true */
/*    zone cut depth: 100 */
.text
.p2align 0x4
.globl sourceSeqIndex_0
.hidden sourceSeqIndex_0
sourceSeqIndex_0:
L_134966:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_135065
L_134967:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_429905
L_134968:
	movq 0x8(%rbp),%r14
	movq 0x20(%r14),%r13
	movq %r13,0x10(%rbp)
	movq 0x18(%r14),%r13
	movq %r13,0x18(%rbp)
	movq 0x10(%r14),%r13
	movq %r13,0x20(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x30(%rbp)
	movq $0xC59,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x38(%rbp)
	addq $0x10,%r12
	movq 0x0(%rbp),%r13
	movq %r13,0x0(%r14)
	cmpq $0x1,%r13
	je L_429904
L_134969:
	movq 0x8(%r13),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_134970:
	incl %ecx
	movl %ecx,0x40(%rbp)
	jo L_429903
L_134972:
	cmpq $0x1,%r15
	je L_429901
L_134973:
	movq 0x8(%r15),%r15
	jmp L_134970
.p2align 0x4
L_429901:
L_134974:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_134975
L_135062:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_135063+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_135063
.p2align 0x4
.long 0x516
L_135063:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_134975:
	movl 0x40(%rbp),%ecx
L_134976:
	movl %ecx,0x48(%rbp)
	movq $0x3743,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_134977+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_8
.p2align 0x4
L_429903:
L_134971:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_429904:
L_135064:
	xorl %ecx,%ecx
	jmp L_134976
.p2align 0x4
L_429905:
L_135065:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_135066+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_135066
.p2align 0x4
.long 0x45F
L_135066:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_134968
.p2align 0x4
.long 0x4A7
L_134977:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_134978
L_135060:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_135061+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_135061
.p2align 0x4
.long 0x4B0
L_135061:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_134978:
	movq 0x38(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_429908
L_134981:
	movl %r13d,%r14d
	decl %r14d
	jo L_134971
L_134982:
	movl %r13d,0x48(%rbp)
	movq $0x3745,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movl %r14d,0x0(%r13)
	addq $0x18,%r12
	movl $0x0,0x4(%r13)
	movq %r15,0x8(%r13)
	movq %r13,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_134983+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_8
.p2align 0x4
L_429908:
L_134980:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4A7
L_134983:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq %r14,0x40(%rbp)
	movl %r14d,%ecx
	movslq %ecx,%r15
	cmpq %r14,%r15
	jne L_134980
L_134985:
	cmpl $0x0,%ecx
	jl L_135037
L_134986:
	movl $0x0,0x48(%rbp)
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_1414:
	cmpl %ecx,%ebx
	jnl L_429910
L_135058:
	movslq %ebx,%r15
	movl 0x48(%rbp),%r14d
	imull $0x1F,%r14d
	movq 0x38(%rbp),%r13
	addl 0x0(%r13,%r15,4),%r14d
	movl %r14d,0x48(%rbp)
	incl %ebx
	jmp loop_1414
.p2align 0x4
L_429910:
L_134987:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_134988
L_135056:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_135057+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_135057
.p2align 0x4
.long 0x1CF3
L_135057:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_134988:
	movq 0x10(%rbp),%r13
	movq 0x0(%r13),%r15
	movq (globalObjptr+0xAE0)(%rip),%r13
	movq 0x0(%r13),%r14
	incq %r14
	jo L_429940
L_134990:
	movq %r14,0x0(%r13)
	movq 0x18(%rbp),%r13
	movl 0x0(%r13),%r11d
	andl 0x48(%rbp),%r11d
	cmpl $0x0,%r11d
	jl L_134971
L_134991:
	movslq %r11d,%r13
	movq %r13,0x50(%rbp)
	cmpq 0xFFFFFFFFFFFFFFF0(%r15),%r13
	jnb L_134993
L_134994:
	movq 0x0(%r15,%r13,8),%r11
	movq %r11,0x58(%rbp)
	cmpq $0x1,%r11
	je L_135004
L_134995:
	movq 0x8(%r11),%r14
	movq 0x0(%r11),%r15
.p2align 0x4,,0x7
L_134996:
	movq (globalObjptr+0xAE8)(%rip),%r10
	movq 0x0(%r10),%r13
	incq %r13
	jo L_429936
L_134998:
	movq %r13,0x0(%r10)
	movq 0x8(%r15),%r13
	cmpq %r13,0x38(%rbp)
	je L_135052
L_134999:
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r10
	cmpq %r10,0x40(%rbp)
	jne L_429932
L_135042:
	xorq %r11,%r11
.p2align 0x4,,0x7
vectorEqualLoop_132:
	cmpq %r11,0x40(%rbp)
	je L_429931
L_135043:
	movq 0x38(%rbp),%r10
	movl 0x0(%r13,%r11,4),%r9d
	cmpl %r9d,0x0(%r10,%r11,4)
	jne L_429911
L_135050:
	incq %r11
	jmp vectorEqualLoop_132
.p2align 0x4
L_429911:
L_135044:
	cmpq $0x1,%r14
	je L_429912
L_135045:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_134996
.p2align 0x4
L_429912:
L_135046:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_135004
L_135048:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_135049+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_135049
.p2align 0x4
.long 0x1CF2
L_135049:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_135004:
	movq 0x20(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x2623,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r13,0x0(%r15)
	movq 0x28(%rbp),%rdx
	movl 0x0(%rdx),%r15d
	movl %r15d,%r13d
	movl %r13d,0x40(%rbp)
	incl %r15d
	jo L_134971
L_135005:
	movl %r15d,0x0(%rdx)
	movq $0xFA3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl %r13d,0x0(%r15)
	movl 0x48(%rbp),%r13d
	movl %r13d,0x4(%r15)
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	movl 0x0(%r14),%r13d
	incl %r13d
	jo L_134971
L_135006:
	movl %r13d,0x0(%r14)
	movq 0x10(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x28FB,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r15,0x0(%r9)
	addq $0x18,%r12
	movq 0x58(%rbp),%r15
	movq %r15,0x8(%r9)
	movq 0x50(%rbp),%r15
	cmpq 0xFFFFFFFFFFFFFFF0(%r11),%r15
	jnb L_134993
L_135008:
	movq %r11,%r8
	shrq $0x8,%r8
	movb $0x1,0x0(%r10,%r8,1)
	movq %r9,0x0(%r11,%r15,8)
	movq 0x0(%r13),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r11
	movl %r11d,%r10d
	movslq %r10d,%r9
	cmpq %r9,%r11
	jne L_134980
L_135010:
	movl 0x0(%r14),%r15d
	imull $0x4,%r15d
	jo L_134971
L_135011:
	cmpl %r15d,%r10d
	jnl L_429924
L_135013:
	addl %r10d,%r10d
	jo L_134971
L_135014:
	movq 0x18(%rbp),%r15
	movl 0x0(%r15),%r14d
	shll $0x1,%r14d
	orl $0x1,%r14d
	movl %r14d,0x20(%rbp)
	movslq %r10d,%rdx
	movq %rdx,0x28(%rbp)
	cmpq $0x7FFFFFFF,%rdx
	ja L_429922
L_135015:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xC8F,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_135016+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_135016
.p2align 0x4
.long 0x1CF1
L_135016:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq %rax,0x30(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_1415:
	cmpq 0x28(%rbp),%r15
	jnl L_429913
L_135038:
	movq 0x30(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_1415
.p2align 0x4
L_429913:
L_135017:
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movl %r13d,0x24(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_134980
L_135019:
	cmpl $0x0,%r13d
	jl L_429920
L_135020:
	movl $0x0,0x44(%rbp)
.p2align 0x4,,0x7
loop_1416:
	movl 0x44(%rbp),%r15d
	cmpl 0x24(%rbp),%r15d
	jnl L_429919
L_135022:
	movslq %r15d,%r14
	movq 0x38(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	cmpq $0x1,%r13
	je L_135031
L_135023:
	movq 0x8(%r13),%r15
	movq %r15,0x48(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x50(%rbp)
L_135024:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_429917
.p2align 0x4,,0x7
L_135025:
	movq 0x50(%rbp),%r15
	movl 0x4(%r15),%r14d
	andl 0x20(%rbp),%r14d
	cmpl $0x0,%r14d
	jl L_134971
L_135026:
	movslq %r14d,%r13
	cmpq 0x28(%rbp),%r13
	jnb L_429915
L_135028:
	movq 0x30(%rbp),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq $0x28FB,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r15,0x0(%r10)
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r10,0x0(%r14,%r13,8)
	movq 0x48(%rbp),%r15
	cmpq $0x1,%r15
	je L_429914
L_135029:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x48(%rbp)
	movq %r14,0x50(%rbp)
	jmp L_135024
.p2align 0x4
L_429914:
L_135031:
	incl 0x44(%rbp)
	jmp loop_1416
.p2align 0x4
L_429915:
L_134993:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_429917:
L_135033:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_135034+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_135034
.p2align 0x4
.long 0x967
L_135034:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	jmp L_135025
.p2align 0x4
L_429919:
L_135021:
	movq 0x10(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x18(%rbp),%r14
	movl 0x20(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movl 0x40(%rbp),%r14d
	movl %r14d,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_429920:
L_135037:
	movq (globalObjptr+0x4F8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_429922:
L_135039:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_429924:
L_135012:
	movl 0x40(%rbp),%r15d
	movl %r15d,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_429931:
L_135052:
	movl 0x0(%r15),%r14d
	movl %r14d,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_429932:
L_135000:
	cmpq $0x1,%r14
	je L_429933
L_135001:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_134996
.p2align 0x4
L_429933:
L_135002:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_135004
L_135040:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_135041+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_135041
.p2align 0x4
.long 0x1CF2
L_135041:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	jmp L_135004
.p2align 0x4
L_429936:
L_134997:
	movq (globalObjptr+0xAF0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_429940:
L_134989:
	movq (globalObjptr+0xAF8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl maybeSplit_0
.hidden maybeSplit_0
maybeSplit_0:
L_135067:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_135068
L_135174:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_135175+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_135175
.p2align 0x4
.long 0x1D0B
L_135175:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_135068:
	movl 0x8(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_429944
L_135069:
	movq 0x18(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x20(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_429944:
L_135070:
	movq 0x80(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_135071+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x1CF4
L_135071:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movl 0x88(%rbp),%r15d
	movl %r15d,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_135072
L_135172:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_135173+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_135173
.p2align 0x4
.long 0x1D0A
L_135173:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_135072:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x80(%rbp)
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x8(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xEC10)(%rip),%r15
	movq %r15,0x18(%r13)
	movq 0x78(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x90(%rbp)
	movq 0x10(%rbp),%r15
	cmpq $0x1,%r15
	je L_429952
L_135073:
	movq 0x8(%r15),%r14
	movq %r14,0x8(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x78(%rbp)
	movq $0x1,0x98(%rbp)
.p2align 0x4,,0x7
L_135074:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_429951
.p2align 0x4,,0x7
L_135075:
	movq $0x2149,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x98(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_429946
L_135076:
	movq %r15,0x98(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x78(%rbp)
	jmp L_135074
.p2align 0x4
L_429946:
L_135077:
	movq 0x98(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq $0x1,0x98(%rbp)
.p2align 0x4,,0x7
L_135078:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_429950
.p2align 0x4,,0x7
L_135079:
	movq 0x78(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x10A2,%r14
	je L_429948
L_135164:
	movq 0x0(%r15),%r14
	movl 0x0(%r14),%r13d
	movq $0x1B59,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r13d,0x0(%r15)
	addq $0x18,%r12
	movl $0x0,0x4(%r15)
	movq 0x98(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_429947
L_135165:
	movq %r15,0x98(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x78(%rbp)
	jmp L_135078
.p2align 0x4
L_429947:
L_135166:
L_135083:
	movq %r15,0xA0(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0xA8(%rbp)
	addq $0xA0,%rbp
	leaq (L_135084+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sourceSeqIndex_0
.p2align 0x4
L_429948:
L_135080:
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_429949
L_135081:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	movq %r13,0x78(%rbp)
	jmp L_135078
.p2align 0x4
L_429949:
L_135082:
	movq 0x98(%rbp),%r13
	xchgq %r13,%r15
	jmp L_135083
.p2align 0x4
L_429950:
L_135167:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_135168+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_135168
.p2align 0x4
.long 0x1D09
L_135168:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	jmp L_135079
.p2align 0x4
L_429951:
L_135169:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_135170+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_135170
.p2align 0x4
.long 0x1D09
L_135170:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	jmp L_135075
.p2align 0x4
L_429952:
L_135171:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_135083
.p2align 0x4
.long 0x1CF5
L_135084:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movl 0xA0(%rbp),%r15d
	movl %r15d,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_135085
L_135162:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_135163+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_135163
.p2align 0x4
.long 0x1D08
L_135163:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_135085:
	movq $0x1161,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x8(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x80(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x90(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x25EB,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	movq 0x70(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r13),%r11
	movq 0x8(%r13),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_429954
L_135086:
	movq %r14,0x98(%rbp)
	movq 0x0(%r9),%r15
	movq %r15,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_135087+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_429954:
L_135157:
	movq %r11,0x8(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_135158+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x1CF6
L_135087:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_135088
L_135155:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_135156+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_135156
.p2align 0x4
.long 0x1D07
L_135156:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_135088:
	movq $0x493,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x70(%rbp)
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x5,0x8(%r15)
	movq 0x68(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r13),%r11
	movq 0x8(%r13),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_429956
L_135089:
	movq %r14,0x98(%rbp)
	movq 0x0(%r9),%r15
	movq %r15,0x90(%rbp)
	addq $0x90,%rbp
	leaq (word_43+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_429956:
L_135150:
	movq %r11,0x8(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_135151+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x1
L_135158:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (bug_410+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x1CF7
word_43:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_135090
L_135148:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_135149+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_135149
.p2align 0x4
.long 0x1D06
L_135149:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_135090:
	movq $0x1EA3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x493,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq %r14,0x0(%r13)
	movq $0x37D3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x90(%rbp)
	movl $0x2,0x98(%rbp)
	addq $0x90,%rbp
	leaq (L_135091+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_16
.p2align 0x4
.long 0x1
L_135151:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (bug_409+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x1
bug_410:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_135159
L_135160:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_135161+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_135161
.p2align 0x4
.long 0x451
L_135161:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_135159:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1CF8
L_135091:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_135092+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1609
.p2align 0x4
.long 0x1
bug_409:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_135152
L_135153:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_135154+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_135154
.p2align 0x4
.long 0x451
L_135154:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_135152:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1CF9
L_135092:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movb 0x90(%rbp),%r15b
	movb %r15b,0x59(%rbp)
	movzbq %r15b,%r14
	movb $0xB,%r15b
	movzbq %r15b,%r13
	shlq $0x8,%r13
	orq %r13,%r14
	shlq $0x3,%r14
	orq $0x5,%r14
	movq %r14,0x90(%rbp)
	movl $0x2,0x98(%rbp)
	addq $0x90,%rbp
	leaq (L_135093+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_17
.p2align 0x4
.long 0x1CF9
L_135093:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_135094
L_135146:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_135147+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_135147
.p2align 0x4
.long 0x1D05
L_135147:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_135094:
	movq $0x1159,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x68(%rbp)
	addq $0x18,%r12
	movw $0x0,%r14w
	movzwl %r14w,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1243,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x70(%rbp)
	addq $0x50,%r12
	movq $0x0,0x0(%r14)
	movl $0x0,0x8(%r14)
	movl $0x1,0xC(%r14)
	movl $0x0,0x10(%r14)
	movl $0x0,0x14(%r14)
	movl $0x0,0x18(%r14)
	movl $0x0,0x1C(%r14)
	movb $0x1,%r13b
	movzbl %r13b,%r11d
	movb $0x1,%r13b
	movzbl %r13b,%r10d
	shll $0x8,%r10d
	orl %r10d,%r11d
	movl %r11d,0x20(%r14)
	movl $0x0,0x24(%r14)
	movq (globalObjptr+0xF398)(%rip),%r13
	movq %r13,0x28(%r14)
	movq (globalObjptr+0xC68)(%rip),%r13
	movq %r13,0x30(%r14)
	movq %r15,0x38(%r14)
	movq 0x8(%rbp),%r15
	movq %r15,0x40(%r14)
	movb 0x58(%rbp),%r15b
	cmpb $0x4,%r15b
	je L_429962
	cmpb $0x6,%r15b
	je L_429961
L_135095:
	movq (globalObjptr+0x7488)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_429961:
L_135144:
	movq 0x30(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_135145+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_429962:
L_135096:
	movl $0x1,%ecx
L_135097:
	movslq %ecx,%r15
	shlq $0x1,%r15
	orq $0x1,%r15
	movq %r15,0x30(%rbp)
	movq 0x50(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r13),%r11
	movq 0x8(%r13),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_429963
L_135098:
	movq %r14,0x98(%rbp)
	movq 0x0(%r9),%r15
	movq %r15,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_135099+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_429963:
L_135139:
	movq %r11,0x8(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_135140+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x1D04
L_135145:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movl 0x90(%rbp),%ecx
	movl %ecx,0x30(%rbp)
	jmp L_135097
.p2align 0x4
.long 0x1CFA
L_135099:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x48(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x58(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x60(%rbp)
	movq %r15,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_135100+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x1
L_135140:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (bug_408+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x1CFB
L_135100:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movl 0x90(%rbp),%r15d
	movl %r15d,0x48(%rbp)
	movl %r15d,0x90(%rbp)
	movq $0x3,0x98(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0xA0(%rbp)
	addq $0x90,%rbp
	leaq (L_135101+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x1
bug_408:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_135141
L_135142:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_135143+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_135143
.p2align 0x4
.long 0x451
L_135143:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_135141:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1CFC
L_135101:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq %r15,0x90(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x98(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0xA0(%rbp)
	addq $0x90,%rbp
	leaq (L_135102+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x1CFD
L_135102:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_135103
L_135137:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_135138+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_135138
.p2align 0x4
.long 0x1D03
L_135138:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_135103:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x211B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x48(%rbp)
	addq $0x10,%r12
	movq %r12,(gcState+0x0)(%rip)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1433,%rcx
	movq $0x2,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_135104+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_135104
.p2align 0x4
.long 0x1CFE
L_135104:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq %rax,0x30(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_1417:
	cmpq $0x2,%r15
	jnl L_429968
L_135132:
	movl %r15d,%r14d
	cmpl $0x0,%r14d
	je L_429967
	cmpl $0x1,%r14d
	je L_429966
L_135133:
	movq (globalObjptr+0x4A8)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_429966:
L_135136:
	movq 0x48(%rbp),%r14
L_135135:
	movq 0x30(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r14,0x0(%r13,%r15,8)
	incq %r15
	jmp loop_1417
.p2align 0x4
L_429967:
L_135134:
	movq $0x2,%r14
	jmp L_135135
.p2align 0x4
L_429968:
L_135105:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_135106
L_135130:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_135131+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_135131
.p2align 0x4
.long 0x1D02
L_135131:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_135106:
	movq 0x30(%rbp),%r15
	movq $0x907,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x213D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x48(%rbp)
	addq $0x20,%r12
	movq %r15,0x0(%r14)
	movq 0x70(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x80(%rbp),%r15
	movq %r15,0x10(%r14)
	movq 0x10(%rbp),%r15
	cmpq $0x1,%r15
	je L_429975
L_135107:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x10(%rbp)
	movq %r14,0x30(%rbp)
	movq $0x1,0x50(%rbp)
.p2align 0x4,,0x7
L_135108:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_429974
.p2align 0x4,,0x7
L_135109:
	movq $0x2149,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_429969
L_135110:
	movq %r15,0x50(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x30(%rbp)
	jmp L_135108
.p2align 0x4
L_429969:
L_135111:
	movq 0x50(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq $0x1,0x50(%rbp)
.p2align 0x4,,0x7
L_135112:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_429973
.p2align 0x4,,0x7
L_135113:
	movq 0x30(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x10A2,%r14
	je L_429971
L_135122:
	movq 0x0(%r15),%r14
	movl 0x0(%r14),%r13d
	movq $0x1B59,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r13d,0x0(%r15)
	addq $0x18,%r12
	movl $0x0,0x4(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_429970
L_135123:
	movq %r15,0x50(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x30(%rbp)
	jmp L_135112
.p2align 0x4
L_429970:
L_135124:
L_135117:
	movq %r15,0xA0(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x98(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0xA8(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0xB0(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0x90,%rbp
	leaq (L_135118+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1606
.p2align 0x4
L_429971:
L_135114:
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_429972
L_135115:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r13,0x30(%rbp)
	jmp L_135112
.p2align 0x4
L_429972:
L_135116:
	movq 0x50(%rbp),%r13
	xchgq %r13,%r15
	jmp L_135117
.p2align 0x4
L_429973:
L_135125:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_135126+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_135126
.p2align 0x4
.long 0x1D01
L_135126:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	jmp L_135113
.p2align 0x4
L_429974:
L_135127:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_135128+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_135128
.p2align 0x4
.long 0x1D01
L_135128:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	jmp L_135109
.p2align 0x4
L_429975:
L_135129:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_135117
.p2align 0x4
.long 0x1CFF
L_135118:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_135119
L_135120:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_135121+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_135121
.p2align 0x4
.long 0x1D00
L_135121:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_135119:
	movq (globalObjptr+0xF20)(%rip),%r15
	movq $0x31,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x212F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x50,%r12
	movq $0x0,0x0(%r14)
	movl $0x0,0x8(%r14)
	movl $0x0,0xC(%r14)
	movl $0x0,0x10(%r14)
	movl $0x0,0x14(%r14)
	movl $0x1,0x18(%r14)
	movl $0x0,0x1C(%r14)
	movb $0x1,%r13b
	movzbl %r13b,%r11d
	movb $0x1,%r13b
	movzbl %r13b,%r10d
	shll $0x8,%r10d
	orl %r10d,%r11d
	movl %r11d,0x20(%r14)
	movl $0x0,0x24(%r14)
	movq 0x8(%rbp),%r13
	movq %r13,0x28(%r14)
	movq 0x68(%rbp),%r13
	movq %r13,0x30(%r14)
	movq (globalObjptr+0xC68)(%rip),%r13
	movq %r13,0x38(%r14)
	movq (globalObjptr+0xF398)(%rip),%r13
	movq %r13,0x40(%r14)
	movq %r14,0x18(%rbp)
	movq $0x1,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	movq 0x80(%rbp),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x20(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl x_1609
.hidden x_1609
x_1609:
L_135176:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x10(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_135177
L_135225:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_135226+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_135226
.p2align 0x4
.long 0x452
L_135226:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_135177:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	movq %r14,%r13
	andq $0x3,%r13
	cmpq $0x1,%r13
	je L_429987
	cmpq $0x2,%r13
	je L_429986
L_135178:
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x0(%r15)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x205C,%r15
	je L_429984
	cmpq $0x205D,%r15
	je L_429982
	cmpq $0x205E,%r15
	je L_429980
L_135179:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_429979
L_135180:
	movq 0x0(%r11),%r14
	movq %r14,0x28(%rbp)
	leaq L_135189(%rip),%r14
	movq %r14,0x8(%rbp)
	movq %rbp,%r14
	addq $0x10,%r14
	subq (gcState+0x560)(%rip),%r14
	movq %r14,(gcState+0x20)(%rip)
	addq $0x28,%rbp
	leaq (L_135181+0x0)(%rip),%r14
	movq %r14,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_429979:
L_135190:
	movq %r15,0x28(%rbp)
	leaq L_135189(%rip),%r15
	movq %r15,0x8(%rbp)
	movq %rbp,%r15
	addq $0x10,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_135191+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_429980:
L_135215:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_429981
L_135216:
	movq 0x0(%r11),%r14
	movq %r14,0x28(%rbp)
	leaq L_135189(%rip),%r14
	movq %r14,0x8(%rbp)
	movq %rbp,%r14
	addq $0x10,%r14
	subq (gcState+0x560)(%rip),%r14
	movq %r14,(gcState+0x20)(%rip)
	addq $0x28,%rbp
	leaq (L_135217+0x0)(%rip),%r14
	movq %r14,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_429981:
L_135218:
	movq %r15,0x28(%rbp)
	leaq L_135189(%rip),%r15
	movq %r15,0x8(%rbp)
	movq %rbp,%r15
	addq $0x10,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_135219+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_429982:
L_135203:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_429983
L_135204:
	movq 0x0(%r11),%r14
	movq %r14,0x28(%rbp)
	leaq L_135189(%rip),%r14
	movq %r14,0x8(%rbp)
	movq %rbp,%r14
	addq $0x10,%r14
	subq (gcState+0x560)(%rip),%r14
	movq %r14,(gcState+0x20)(%rip)
	addq $0x28,%rbp
	leaq (L_135205+0x0)(%rip),%r14
	movq %r14,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_429983:
L_135210:
	movq %r15,0x28(%rbp)
	leaq L_135189(%rip),%r15
	movq %r15,0x8(%rbp)
	movq %rbp,%r15
	addq $0x10,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_135211+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_429984:
L_135195:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_429985
L_135196:
	movq 0x0(%r11),%r14
	movq %r14,0x28(%rbp)
	leaq L_135189(%rip),%r14
	movq %r14,0x8(%rbp)
	movq %rbp,%r14
	addq $0x10,%r14
	subq (gcState+0x560)(%rip),%r14
	movq %r14,(gcState+0x20)(%rip)
	addq $0x28,%rbp
	leaq (L_135197+0x0)(%rip),%r14
	movq %r14,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_429985:
L_135198:
	movq %r15,0x28(%rbp)
	leaq L_135189(%rip),%r15
	movq %r15,0x8(%rbp)
	movq %rbp,%r15
	addq $0x10,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_135199+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_429986:
L_135224:
	shrq $0x2,%r14
	movb %r14b,%r13b
	movb %r13b,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_429987:
L_135223:
	movq $0x12,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xB26
L_135181:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl 0x28(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	cmpl $0x8,%r15d
	je L_429992
	cmpl $0x10,%r15d
	je L_429991
	cmpl $0x20,%r15d
	je L_429990
	cmpl $0x40,%r15d
	je L_429989
L_135182:
	movq (globalObjptr+0x18E8)(%rip),%r15
L_135183:
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq 0x0(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_429989:
L_135188:
	xorb %dl,%dl
L_135185:
	movzbq %dl,%r15
	shlq $0x2,%r15
	orq $0x2,%r15
	movq 0x0(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	movb %dl,0x0(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_429990:
L_135187:
	movb $0x1,%dl
	jmp L_135185
.p2align 0x4
L_429991:
L_135186:
	movb $0x2,%dl
	jmp L_135185
.p2align 0x4
L_429992:
L_135184:
	movb $0x3,%dl
	jmp L_135185
.p2align 0x4
.long 0x72E
L_135189:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	jmp L_135183
.p2align 0x4
.long 0xB26
L_135191:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (bug_411+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0xB26
L_135217:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl 0x28(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	cmpl $0x8,%r15d
	je L_429996
	cmpl $0x10,%r15d
	je L_429995
	cmpl $0x20,%r15d
	je L_429994
	cmpl $0x40,%r15d
	je L_429993
	jmp L_135182
.p2align 0x4
L_429993:
L_135209:
	movb $0x7,%dl
	jmp L_135185
.p2align 0x4
L_429994:
L_135208:
	movb $0x8,%dl
	jmp L_135185
.p2align 0x4
L_429995:
L_135207:
	movb $0x9,%dl
	jmp L_135185
.p2align 0x4
L_429996:
L_135206:
	movb $0xA,%dl
	jmp L_135185
.p2align 0x4
.long 0xB26
L_135219:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (bug_414+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0xB26
L_135205:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl 0x28(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	cmpl $0x8,%r15d
	je L_135206
	cmpl $0x10,%r15d
	je L_135207
	cmpl $0x20,%r15d
	je L_135208
	cmpl $0x40,%r15d
	je L_135209
	jmp L_135182
.p2align 0x4
.long 0xB26
L_135211:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (bug_413+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0xB26
L_135197:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl 0x28(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	cmpl $0x8,%r15d
	je L_135184
	cmpl $0x10,%r15d
	je L_135186
	cmpl $0x20,%r15d
	je L_135187
	cmpl $0x40,%r15d
	je L_135188
	jmp L_135182
.p2align 0x4
.long 0xB26
L_135199:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (bug_412+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0xB26
bug_411:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_135192
L_135193:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_135194+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_135194
.p2align 0x4
.long 0xB28
L_135194:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_135192:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_135183
.p2align 0x4
.long 0xB26
bug_414:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_135220
L_135221:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_135222+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_135222
.p2align 0x4
.long 0xB28
L_135222:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_135220:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_135183
.p2align 0x4
.long 0xB26
bug_413:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_135212
L_135213:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_135214+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_135214
.p2align 0x4
.long 0xB28
L_135214:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_135212:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_135183
.p2align 0x4
.long 0xB26
bug_412:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_135200
L_135201:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_135202+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_135202
.p2align 0x4
.long 0xB28
L_135202:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_135200:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_135183
.text
.p2align 0x4
.globl tabulate_17
.hidden tabulate_17
tabulate_17:
L_135227:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_135228
L_135259:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_135260+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_135260
.p2align 0x4
.long 0x457
L_135260:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_135228:
	movslq 0x8(%rbp),%rdx
	movq %rdx,0x10(%rbp)
	testq %rdx,%rdx
	jz L_430027
L_135229:
	cmpq $0x7FFFFFFF,%rdx
	ja L_430026
L_135230:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1489,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_135231+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_135231
.p2align 0x4
.long 0x452
L_135231:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq %rax,%r15
L_135232:
	xorq %r14,%r14
.p2align 0x4,,0x7
loop_1418:
	cmpq 0x10(%rbp),%r14
	jnl L_430025
L_135234:
	movl %r14d,%r13d
	movq 0x0(%rbp),%r11
	movq %r11,%r10
	andq $0x7,%r10
	cmpq $0x1,%r10
	je L_430024
	cmpq $0x2,%r10
	je L_430023
	cmpq $0x3,%r10
	je L_430022
	cmpq $0x5,%r10
	je L_430019
	cmpq $0x6,%r10
	je L_430014
	cmpq $0x7,%r10
	je L_430010
L_135235:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r10
	shrq $0x1,%r10
	cmpq $0x1BA4,%r10
	je L_430009
L_135238:
	movslq %r13d,%r10
	imulq $0x18,%r10
	movq 0x0(%r11),%r13
	movb 0x0(%r13,%r10,1),%dl
L_135237:
	movb %dl,0x0(%r15,%r14,1)
	incq %r14
	jmp loop_1418
.p2align 0x4
L_430009:
L_135236:
	movslq %r13d,%r10
	imulq $0x18,%r10
	movq 0x0(%r11),%r13
	movb 0x0(%r13,%r10,1),%dl
	jmp L_135237
.p2align 0x4
L_430010:
L_135252:
	movq %r11,%r10
	shrq $0x13,%r10
	movb %r10b,%r9b
	movq %r11,%r10
	shrq $0xB,%r10
	movb %r10b,%r8b
	shrq $0x3,%r11
	movb %r11b,%r10b
	cmpl $0x0,%r13d
	je L_430013
	cmpl $0x1,%r13d
	je L_430012
	cmpl $0x2,%r13d
	je L_430011
L_135253:
	movq (globalObjptr+0x4C0)(%rip),%r13
	movq %r13,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_430011:
L_135256:
	movb %r8b,%dl
	jmp L_135237
.p2align 0x4
L_430012:
L_135255:
	movb %r10b,%dl
	jmp L_135237
.p2align 0x4
L_430013:
	movb %r9b,%dl
	jmp L_135237
.p2align 0x4
L_430014:
L_135246:
	movq %r11,%r10
	shrq $0x13,%r10
	movb %r10b,%r9b
	movq %r11,%r10
	shrq $0xB,%r10
	movb %r10b,%r8b
	shrq $0x3,%r11
	movb %r11b,%r10b
	cmpl $0x0,%r13d
	je L_430018
	cmpl $0x1,%r13d
	je L_430017
	cmpl $0x2,%r13d
	je L_430016
	cmpl $0x3,%r13d
	je L_430015
L_135247:
	movq (globalObjptr+0x590)(%rip),%r13
	movq %r13,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_430015:
L_135251:
	movb %r8b,%dl
	jmp L_135237
.p2align 0x4
L_430016:
	movb %r9b,%dl
	jmp L_135237
.p2align 0x4
L_430017:
L_135249:
	movb %r10b,%dl
	jmp L_135237
.p2align 0x4
L_430018:
L_135248:
	movb $0xB,%dl
	jmp L_135237
.p2align 0x4
L_430019:
L_135242:
	movq %r11,%r10
	shrq $0xB,%r10
	movb %r10b,%r9b
	shrq $0x3,%r11
	movb %r11b,%r10b
	cmpl $0x0,%r13d
	je L_430021
	cmpl $0x1,%r13d
	je L_430020
L_135243:
	movq (globalObjptr+0x4A8)(%rip),%r13
	movq %r13,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_430020:
L_135245:
	movb %r10b,%dl
	jmp L_135237
.p2align 0x4
L_430021:
	movb %r9b,%dl
	jmp L_135237
.p2align 0x4
L_430022:
L_135241:
	shrq $0x3,%r11
	movb %r11b,%dl
	jmp L_135237
.p2align 0x4
L_430023:
L_135240:
	shrq $0x3,%r11
	movb %r11b,%dl
	jmp L_135237
.p2align 0x4
L_430024:
L_135239:
	movq (globalObjptr+0x4A0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_430025:
L_135233:
	movq $0xB13,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_430026:
L_135257:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_430027:
L_135258:
	movq (globalObjptr+0xCB8)(%rip),%r15
	jmp L_135232
.text
.p2align 0x4
.globl x_1606
.hidden x_1606
x_1606:
L_135261:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_135262
L_135427:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_135428+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_135428
.p2align 0x4
.long 0x657
L_135428:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_135262:
	movq 0x38(%rbp),%r15
	movq 0x8(%r15),%r14
	movl 0x4(%r14),%r13d
	movl %r13d,0x40(%rbp)
	movq 0x30(%r14),%r13
	movq %r13,0x48(%rbp)
	movl 0x0(%r14),%r13d
	movl %r13d,0x44(%rbp)
	movq 0x28(%r14),%r13
	movq %r13,0x50(%rbp)
	movq 0x20(%r14),%r13
	movq %r13,0x58(%rbp)
	movq 0x18(%r14),%r13
	movq %r13,0x60(%rbp)
	movq 0x10(%r14),%r13
	movq %r13,0x68(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x70(%rbp)
	movq 0x8(%rbp),%r15
	cmpq $0x1,%r15
	je L_430058
L_135263:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x8(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq %r14,0x10(%rbp)
	movl $0x1,0x78(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq $0x1,0x18(%rbp)
.p2align 0x4,,0x7
L_135264:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_430057
.p2align 0x4,,0x7
L_135266:
	movq 0x10(%rbp),%r15
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_135267
L_135377:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1092,%r14
	je L_430045
	cmpq $0x1094,%r14
	je L_430043
L_135267:
	movq $0x218B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_430029
L_135268:
	movq %r15,0x18(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x10(%rbp)
	movl $0x1,0x78(%rbp)
	jmp L_135264
.p2align 0x4
L_430029:
L_135269:
	movq %r15,0x8(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x10(%rbp)
	movl $0x1,%ecx
L_135270:
	movl 0x40(%rbp),%r15d
	testl %r15d,%r15d
	jz L_135272
L_135356:
	testl %ecx,%ecx
	jz L_430030
L_135358:
	movq 0x48(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_135359+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sourceSeqIndex_0
.p2align 0x4
L_430030:
L_135272:
	movl 0x44(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_430039
L_135273:
	movq 0x8(%rbp),%r15
L_135274:
	cmpq $0x1,%r15
	je L_430038
L_135275:
	movq %r15,%r13
	movq 0x8(%r15),%r15
	movq 0x20(%rbp),%r14
	movq 0x28(%rbp),%r10
	movq 0x30(%rbp),%r11
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_135276:
	incl %ecx
	jo L_430037
L_135278:
	cmpq $0x1,%r15
	je L_430031
L_135279:
	movq 0x8(%r15),%r15
	jmp L_135276
.p2align 0x4
L_430031:
L_135280:
	movq %r13,0x8(%rbp)
	movq %r14,0x10(%rbp)
	movq %r10,0x18(%rbp)
	movq %r11,0x20(%rbp)
L_135281:
	movslq %ecx,%rdx
	movq %rdx,0x28(%rbp)
	testq %rdx,%rdx
	jz L_430036
L_135282:
	cmpq $0x7FFFFFFF,%rdx
	ja L_430035
L_135283:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1437,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_135284+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_135284
.p2align 0x4
.long 0x1D0C
L_135284:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq %rax,0x30(%rbp)
L_135285:
	movq 0x8(%rbp),%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_1419:
	cmpq 0x28(%rbp),%r15
	jnl L_430033
L_135290:
	cmpq $0x1,%r14
	je L_430032
L_135291:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq 0x30(%rbp),%r11
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r13,0x0(%r11,%r15,8)
	incq %r15
	jmp loop_1419
.p2align 0x4
L_430032:
L_135292:
	movq (globalObjptr+0x4B0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_430033:
L_135286:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_135287
L_135288:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_135289+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_135289
.p2align 0x4
.long 0x1D0D
L_135289:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_135287:
	movq 0x30(%rbp),%r15
	movq $0x33,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x35,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x30,%r12
	movq 0x0(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq 0x10(%rbp),%r15
	movq %r15,0x10(%r14)
	movq 0x18(%rbp),%r15
	movq %r15,0x18(%r14)
	movq 0x20(%rbp),%r15
	movq %r15,0x20(%r14)
	movq 0x70(%rbp),%r15
	movq 0x0(%r15),%r13
	movq $0x21A7,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq %r11,0x0(%r15)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_430035:
L_135293:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_430036:
L_135294:
	movq (globalObjptr+0xD68)(%rip),%r15
	movq %r15,0x30(%rbp)
	jmp L_135285
.p2align 0x4
L_430037:
L_135277:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_430038:
L_135295:
	movq %r15,0x8(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x20(%rbp)
	xorl %ecx,%ecx
	jmp L_135281
.p2align 0x4
L_430039:
L_135297:
	movq 0x28(%rbp),%r15
	cmpq $0x2,%r15
	je gcState_0
L_135298:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_135299
L_135300:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1098,%r14
	je gcState_1
L_135299:
	movq 0x8(%rbp),%r15
	jmp L_135274
.p2align 0x4
gcState_1:
gcState_0:
	movq 0x50(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r13),%r11
	movq 0x8(%r13),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_430040
L_135302:
	movq %r14,0x88(%rbp)
	movq 0x0(%r9),%r15
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_135303+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_430040:
L_135350:
	movq %r11,0x8(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_135351+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_430043:
L_135421:
	movq $0x218B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_430044
L_135422:
	movq %r15,0x18(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x10(%rbp)
	movl $0x1,0x78(%rbp)
	jmp L_135264
.p2align 0x4
L_430044:
L_135423:
	movq %r15,0x8(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x10(%rbp)
	movl $0x1,%ecx
	jmp L_135270
.p2align 0x4
L_430045:
L_135378:
	movq 0x10(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x88(%rbp)
	movl 0x40(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_430052
L_135379:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE42,%r15
	je L_430048
L_135389:
	movq 0x18(%rbp),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_135390:
	movq 0x38(%rbp),%r14
	cmpq $0x1,%r14
	je L_430047
L_135391:
	movq 0x8(%r14),%r13
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_430046
L_135392:
	movq %r15,0x18(%rbp)
	movq %r13,0x38(%rbp)
	movl %ecx,0x78(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x10(%rbp)
	jmp L_135264
.p2align 0x4
L_430046:
L_135393:
	movq %r15,0x8(%rbp)
	movq %r13,0x10(%rbp)
	jmp L_135270
.p2align 0x4
L_430047:
L_135394:
	movq (globalObjptr+0x7480)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_430048:
L_135380:
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movl $0x0,0x18(%rbp)
.p2align 0x4,,0x7
L_135381:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_430051
.p2align 0x4,,0x7
L_135382:
	movq 0x80(%rbp),%r15
	cmpq $0x1,%r15
	je L_430050
L_135383:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movl 0x0(%r13),%r11d
	movq $0x1B59,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r11d,0x0(%r15)
	addq $0x18,%r12
	movl $0x0,0x4(%r15)
	movq 0x38(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x8(%rbp),%r13
	cmpq $0x1,%r13
	je L_430049
L_135384:
	movq %r15,0x38(%rbp)
	movq %r14,0x80(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x8(%rbp)
	movl 0x18(%rbp),%r14d
	movl %r14d,0x78(%rbp)
	movq 0x10(%rbp),%r14
	movq %r14,0x18(%rbp)
	movq %r15,0x10(%rbp)
	jmp L_135264
.p2align 0x4
L_430049:
L_135385:
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x10(%rbp)
	movl 0x18(%rbp),%ecx
	jmp L_135270
.p2align 0x4
L_430050:
L_135386:
	movq (globalObjptr+0x7478)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_430051:
L_135387:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_135388+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_135388
.p2align 0x4
.long 0x1D24
L_135388:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	jmp L_135382
.p2align 0x4
L_430052:
L_135395:
	movl 0x78(%rbp),%r15d
	testl %r15d,%r15d
	jz L_135397
L_135400:
	cmpq $0x1,0x38(%rbp)
	jne L_430054
L_135397:
	movq 0x88(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xE42,%r15
	je L_430053
L_135399:
	movq 0x18(%rbp),%r15
	movl $0x1,%ecx
	jmp L_135390
.p2align 0x4
L_430053:
L_135398:
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movl $0x1,0x18(%rbp)
	jmp L_135381
.p2align 0x4
L_430054:
L_135401:
	movq 0x48(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_135402+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sourceSeqIndex_0
.p2align 0x4
L_430057:
L_135424:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_135425+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_135425
.p2align 0x4
.long 0x1D2B
L_135425:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	jmp L_135266
.p2align 0x4
L_430058:
L_135426:
	movq $0x1,0x8(%rbp)
	movl $0x1,%ecx
	jmp L_135270
.p2align 0x4
.long 0x1D1E
L_135359:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movl 0x80(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_135360
L_135375:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_135376+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_135376
.p2align 0x4
.long 0x1D23
L_135376:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_135360:
	movq 0x18(%rbp),%r15
	movq 0x18(%r15),%r14
	movb 0x4(%r15),%r13b
	movq 0x10(%r15),%r11
	movq %r11,0x78(%rbp)
	movq 0x8(%r15),%r10
	movl 0x0(%r15),%r9d
	testl %r9d,%r9d
	jnz L_430061
L_135361:
	cmpb $0x1,%r13b
	jne L_430060
L_135363:
	movslq 0x38(%rbp),%r15
	shlq $0x1,%r15
	orq $0x1,%r15
	movq %r15,0x18(%rbp)
	movq 0x8(%r10),%r15
	movq %r15,0x80(%rbp)
	movq 0x0(%r10),%r15
	movq %r15,0x88(%rbp)
	movq %r11,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_135364+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_430060:
L_135327:
	movq (globalObjptr+0x7470)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_430061:
L_135373:
	movq $0x13,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq (globalObjptr+0x18A8)(%rip),%r13
	movl 0x0(%r13),%r10d
	movl %r10d,%r9d
	incl %r10d
	jo L_135277
L_135374:
	movl %r10d,0x0(%r13)
	movq $0xF8B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movl %r9d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r15,0x8(%r13)
	movq $0xF8D,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r13,0x8(%r10)
	addq $0x18,%r12
	movl 0x38(%rbp),%r13d
	movl %r13d,0x0(%r10)
	movl $0x0,0x4(%r10)
	movq 0x0(%r14),%r13
	movq $0x2625,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r10,0x0(%r8)
	movq %r13,0x8(%r8)
	addq $0x18,%r12
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r8,0x0(%r14)
	movq $0x2123,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %r9d,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,%r15
L_135368:
	movq $0x218B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x8(%r14)
	movl 0x44(%rbp),%r13d
	testl %r13d,%r13d
	jnz L_430062
L_135369:
	movq %r14,%r15
	jmp L_135274
.p2align 0x4
L_430062:
L_135370:
	movq %r14,0x8(%rbp)
	jmp L_135297
.p2align 0x4
.long 0x1D0E
L_135303:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_135304
L_135348:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_135349+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_135349
.p2align 0x4
.long 0x1D1D
L_135349:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_135304:
	movq $0x37CF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq $0x5,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x80(%rbp)
	movl $0x1,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_135305+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_16
.p2align 0x4
.long 0x1
L_135351:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (bug_415+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x1D25
L_135402:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movl 0x98(%rbp),%r15d
	movl %r15d,0x78(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_135403
L_135418:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_135419+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_135419
.p2align 0x4
.long 0x1D2A
L_135419:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_135403:
	movq 0x10(%rbp),%r15
	movq 0x18(%r15),%r14
	movb 0x4(%r15),%r13b
	movq 0x10(%r15),%r11
	movq %r11,0x90(%rbp)
	movq 0x8(%r15),%r10
	movl 0x0(%r15),%r9d
	testl %r9d,%r9d
	jnz L_430067
L_135404:
	cmpb $0x1,%r13b
	jne L_135327
L_135406:
	movslq 0x78(%rbp),%r15
	shlq $0x1,%r15
	orq $0x1,%r15
	movq %r15,0x10(%rbp)
	movq 0x8(%r10),%r15
	movq %r15,0x98(%rbp)
	movq 0x0(%r10),%r15
	movq %r15,0xA0(%rbp)
	movq %r11,0xB0(%rbp)
	addq $0xB0,%rbp
	leaq (L_135407+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_430067:
L_135416:
	movq $0x13,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq (globalObjptr+0x18A8)(%rip),%r13
	movl 0x0(%r13),%r10d
	movl %r10d,%r9d
	incl %r10d
	jo L_135277
L_135417:
	movl %r10d,0x0(%r13)
	movq $0xF8B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movl %r9d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r15,0x8(%r13)
	movq $0xF8D,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r13,0x8(%r10)
	addq $0x18,%r12
	movl 0x78(%rbp),%r13d
	movl %r13d,0x0(%r10)
	movl $0x0,0x4(%r10)
	movq 0x0(%r14),%r13
	movq $0x2625,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r10,0x0(%r8)
	movq %r13,0x8(%r8)
	addq $0x18,%r12
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r8,0x0(%r14)
	movq $0x2123,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %r9d,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,%r15
L_135411:
	movq $0x218B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x88(%rbp),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE42,%r15
	je L_430068
L_135413:
	xorl %ecx,%ecx
	movq %r14,%r15
	jmp L_135390
.p2align 0x4
L_430068:
L_135412:
	movq %r14,0x10(%rbp)
	movl $0x0,0x18(%rbp)
	jmp L_135381
.p2align 0x4
.long 0x1D1F
L_135364:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movl 0x98(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	movl %r15d,0x98(%rbp)
	movq $0x3,0xA0(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0xA8(%rbp)
	addq $0x98,%rbp
	leaq (L_135365+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x1D0E
L_135305:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x18(%rbp)
	movb $0xB,%r15b
	movzbq %r15b,%r14
	shlq $0x3,%r14
	orq $0x2,%r14
	movq %r14,0x80(%rbp)
	movl $0x1,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_135306+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_17
.p2align 0x4
.long 0x1
bug_415:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_135352
L_135353:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_135354+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_135354
.p2align 0x4
.long 0x451
L_135354:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_135352:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1D26
L_135407:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movl 0xB0(%rbp),%r15d
	movl %r15d,0x78(%rbp)
	movl %r15d,0xB0(%rbp)
	movq $0x3,0xB8(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xB0,%rbp
	leaq (L_135408+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x1D20
L_135365:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x18(%rbp),%r14
	movq %r14,0x90(%rbp)
	movq 0x88(%rbp),%r14
	movq %r14,0x98(%rbp)
	movq %r15,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_135366+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x1D0F
L_135306:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_135307
L_135346:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_135347+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_135347
.p2align 0x4
.long 0x1D1C
L_135347:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_135307:
	movq $0x1159,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x50(%rbp)
	addq $0x18,%r12
	movw $0x0,%r14w
	movzwl %r14w,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1243,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x78(%rbp)
	addq $0x50,%r12
	movq $0x0,0x0(%r14)
	movl $0x0,0x8(%r14)
	movl $0x1,0xC(%r14)
	movl $0x0,0x10(%r14)
	movl $0x0,0x14(%r14)
	movl $0x0,0x18(%r14)
	movl $0x0,0x1C(%r14)
	movb $0x1,%r13b
	movzbl %r13b,%r11d
	movb $0x1,%r13b
	movzbl %r13b,%r10d
	shll $0x8,%r10d
	orl %r10d,%r11d
	movl %r11d,0x20(%r14)
	movl $0x0,0x24(%r14)
	movq (globalObjptr+0xF3A0)(%rip),%r13
	movq %r13,0x28(%r14)
	movq (globalObjptr+0xC68)(%rip),%r13
	movq %r13,0x30(%r14)
	movq %r15,0x38(%r14)
	movq 0x18(%rbp),%r15
	movq %r15,0x40(%r14)
	movq 0x58(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_135308+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x1D27
L_135408:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movq 0xB0(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x10(%rbp),%r14
	movq %r14,0xA8(%rbp)
	movq 0xA0(%rbp),%r14
	movq %r14,0xB0(%rbp)
	movq %r15,0xA0(%rbp)
	addq $0xA0,%rbp
	leaq (L_135409+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x1D21
L_135366:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_135367
L_135371:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_135372+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_135372
.p2align 0x4
.long 0x1D22
L_135372:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_135367:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x211B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x212B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalWord64+0x12A0)(%rip),%r13
	movq %r13,0x0(%r14)
	movq %r14,%r15
	jmp L_135368
.p2align 0x4
.long 0x1D10
L_135308:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movl 0x88(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_135309
L_135344:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_135345+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_135345
.p2align 0x4
.long 0x1D1B
L_135345:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_135309:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x58(%rbp)
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x38(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xEC10)(%rip),%r15
	movq %r15,0x18(%r13)
	movq 0x10(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x88,%rbp
	leaq (L_135310+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sourceSeqIndex_0
.p2align 0x4
.long 0x1D28
L_135409:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_135410
L_135414:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_135415+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_135415
.p2align 0x4
.long 0x1D29
L_135415:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_135410:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x90(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x211B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x212B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalWord64+0x12A0)(%rip),%r13
	movq %r13,0x0(%r14)
	movq %r14,%r15
	jmp L_135411
.p2align 0x4
.long 0x1D11
L_135310:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movl 0x88(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_135311
L_135342:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_135343+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_135343
.p2align 0x4
.long 0x1D1A
L_135343:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_135311:
	movq $0x1161,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x38(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x68(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x25EB,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	movl 0x40(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_430079
L_135312:
	movq (globalObjptr+0xF48)(%rip),%r15
	movq $0x33,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x10(%rbp)
L_135313:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1433,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_135314+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_135314
.p2align 0x4
.long 0x1D12
L_135314:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq %rax,0x38(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_1420:
	cmpq $0x1,%r15
	jnl L_430076
L_135321:
	movq 0x38(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x2,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_1420
.p2align 0x4
L_430076:
L_135315:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_135316
L_135319:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_135320+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_135320
.p2align 0x4
.long 0x1D13
L_135320:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_135316:
	movq 0x38(%rbp),%r10
	movq $0x907,0xFFFFFFFFFFFFFFF8(%r10)
	movq $0x213D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq %r10,0x0(%r15)
	movq 0x78(%rbp),%r10
	movq %r10,0x8(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x10(%r15)
	movq $0x35,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x30,%r12
	movq 0x10(%rbp),%r10
	movq %r10,0x8(%r13)
	movq 0x20(%rbp),%r10
	movq %r10,0x10(%r13)
	movq 0x28(%rbp),%r10
	movq %r10,0x18(%r13)
	movq 0x30(%rbp),%r10
	movq %r10,0x20(%r13)
	movq 0x70(%rbp),%r10
	movq 0x0(%r10),%r15
	movq $0x21A7,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r15,0x8(%r11)
	addq $0x18,%r12
	movq %r10,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r15,1)
	movq %r11,0x0(%r10)
	movq (globalObjptr+0xF20)(%rip),%r11
	movq $0x31,0xFFFFFFFFFFFFFFF8(%r11)
	movq $0x212F,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	addq $0x50,%r12
	movq $0x0,0x0(%r10)
	movl $0x0,0x8(%r10)
	movl $0x0,0xC(%r10)
	movl $0x0,0x10(%r10)
	movl $0x0,0x14(%r10)
	movl $0x1,0x18(%r10)
	movl $0x0,0x1C(%r10)
	movb $0x1,%r9b
	movzbl %r9b,%ecx
	movb $0x1,%r9b
	movzbl %r9b,%r8d
	shll $0x8,%r8d
	orl %r8d,%ecx
	movl %ecx,0x20(%r10)
	movl $0x0,0x24(%r10)
	movq 0x18(%rbp),%r9
	movq %r9,0x28(%r10)
	movq 0x50(%rbp),%r9
	movq %r9,0x30(%r10)
	movq (globalObjptr+0xC68)(%rip),%r9
	movq %r9,0x38(%r10)
	movq (globalObjptr+0xF3A0)(%rip),%r9
	movq %r9,0x40(%r10)
	movq 0x8(%rbp),%r13
	cmpq $0x1,%r13
	je L_430077
L_135317:
	movq 0x8(%r13),%r15
	xorl %ecx,%ecx
	jmp L_135276
.p2align 0x4
L_430077:
L_135318:
	movq %r10,0x18(%rbp)
	movq %r14,0x10(%rbp)
	movq %r11,0x20(%rbp)
	xorl %ecx,%ecx
	jmp L_135281
.p2align 0x4
L_430079:
L_135322:
	movq 0x48(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x90(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_135323+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sourceSeqIndex_0
.p2align 0x4
.long 0x1D14
L_135323:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movl 0x88(%rbp),%r15d
	movl %r15d,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_135324
L_135340:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_135341+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_135341
.p2align 0x4
.long 0x1D19
L_135341:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_135324:
	movq 0x38(%rbp),%r15
	movq 0x18(%r15),%r14
	movb 0x4(%r15),%r13b
	movq 0x10(%r15),%r11
	movq %r11,0x40(%rbp)
	movq 0x8(%r15),%r10
	movl 0x0(%r15),%r9d
	testl %r9d,%r9d
	jnz L_430082
L_135325:
	cmpb $0x1,%r13b
	jne L_135327
L_135328:
	movslq 0x10(%rbp),%r15
	shlq $0x1,%r15
	orq $0x1,%r15
	movq %r15,0x38(%rbp)
	movq 0x8(%r10),%r15
	movq %r15,0x48(%rbp)
	movq 0x0(%r10),%r15
	movq %r15,0x60(%rbp)
	movq %r11,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_135329+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_430082:
L_135338:
	movq $0x13,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq (globalObjptr+0x18A8)(%rip),%r13
	movl 0x0(%r13),%r10d
	movl %r10d,%r9d
	incl %r10d
	jo L_135277
L_135339:
	movl %r10d,0x0(%r13)
	movq $0xF8B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movl %r9d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r15,0x8(%r13)
	movq $0xF8D,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r13,0x8(%r10)
	addq $0x18,%r12
	movl 0x10(%rbp),%r13d
	movl %r13d,0x0(%r10)
	movl $0x0,0x4(%r10)
	movq 0x0(%r14),%r13
	movq $0x2625,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r10,0x0(%r8)
	movq %r13,0x8(%r8)
	addq $0x18,%r12
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r8,0x0(%r14)
	movq $0x2123,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %r9d,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
new1_22:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1437,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_135333+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_135333
.p2align 0x4
.long 0x1D12
L_135333:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	xorq %r15,%r15
	movq %rax,%r14
.p2align 0x4,,0x7
loop_1421:
	cmpq $0x1,%r15
	jnl L_430083
L_135335:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_1421
.p2align 0x4
L_430083:
L_135334:
	movq $0x33,0xFFFFFFFFFFFFFFF8(%r14)
	movq %r14,0x10(%rbp)
	jmp L_135313
.p2align 0x4
.long 0x1D15
L_135329:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movl 0x88(%rbp),%r15d
	movl %r15d,0x10(%rbp)
	movl %r15d,0x88(%rbp)
	movq $0x3,0x90(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x88,%rbp
	leaq (L_135330+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x1D16
L_135330:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq %r15,0x88(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x88,%rbp
	leaq (L_135331+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x1D17
L_135331:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_135332
L_135336:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_135337+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_135337
.p2align 0x4
.long 0x1D18
L_135337:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_135332:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x211B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x212B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalWord64+0x12A0)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x10(%rbp)
	jmp new1_22
.text
.p2align 0x4
.globl concat_4
.hidden concat_4
concat_4:
L_135429:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_135430
L_135473:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_135474+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_135474
.p2align 0x4
.long 0x451
L_135474:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_135430:
	movq 0x0(%rbp),%r15
	cmpq $0x1,%r15
	je L_430102
L_135431:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_135432:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_430101
.p2align 0x4,,0x7
L_135433:
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq $0xF45,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x18,%r12
	movq %r15,0x8(%r13)
	movq $0x2995,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r13,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_430087
L_135434:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_135432
.p2align 0x4
L_430087:
L_135435:
	movq %r13,0x8(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_135436:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_430100
.p2align 0x4,,0x7
L_135437:
	movq $0x2995,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_430088
L_135438:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_135436
.p2align 0x4
L_430088:
L_135439:
	movq 0x10(%rbp),%r13
	cmpq $0x1,%r13
	je L_430095
L_135440:
	movq 0x8(%rbp),%r11
	xorq %r15,%r15
	xchgq %r11,%r14
.p2align 0x4,,0x7
L_135441:
	addq 0x0(%r14),%r15
	movq %r15,0x18(%rbp)
	cmpq $0x1,%r13
	je L_430089
L_135442:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	jmp L_135441
.p2align 0x4
L_430089:
L_135443:
	testq %r15,%r15
	jz L_430094
L_135444:
	cmpq $0x7FFFFFFF,%r15
	ja L_430093
L_135445:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1437,%rcx
	movq %r15,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_135446+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_135446
.p2align 0x4
.long 0x49B
L_135446:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq %rax,%r15
L_135447:
	movq 0x10(%rbp),%r10
	movq 0x8(%rbp),%r11
	xorq %r13,%r13
	xorq %r14,%r14
.p2align 0x4,,0x7
loop_1422:
	cmpq 0x18(%rbp),%r14
	jnl L_430092
.p2align 0x4,,0x7
loop_1423:
	cmpq 0x0(%r11),%r13
	jl L_430091
L_135450:
	cmpq $0x1,%r10
	je L_430090
L_135451:
	movq 0x0(%r10),%r9
	movq 0x8(%r10),%r10
	xorq %r13,%r13
	movq %r9,%r11
	jmp loop_1423
.p2align 0x4
L_430090:
L_135452:
	movq (globalObjptr+0x5B8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_430091:
L_135453:
	movq 0x8(%r11),%r9
	movq 0x0(%r9,%r13,8),%r8
	incq %r13
	movq %r15,%r9
	shrq $0x8,%r9
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r9,1)
	movq %r8,0x0(%r15,%r14,8)
	incq %r14
	jmp loop_1422
.p2align 0x4
L_430092:
L_135448:
	movq $0x33,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_430093:
L_135455:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_430094:
L_135456:
	movq (globalObjptr+0x618)(%rip),%r14
	xchgq %r14,%r15
	jmp L_135447
.p2align 0x4
L_430095:
L_135457:
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%rdx
	movq %rdx,0x18(%rbp)
	cmpq %rdx,0xFFFFFFFFFFFFFFF0(%r13)
	movq %r13,0x10(%rbp)
	je L_430099
L_135458:
	testq %rdx,%rdx
	jz L_430098
L_135459:
	cmpq $0x7FFFFFFF,%rdx
	ja L_135455
L_135460:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1437,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_135461+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_135461
.p2align 0x4
.long 0x4A4
L_135461:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq %rax,%r15
L_135462:
	xorq %r14,%r14
.p2align 0x4,,0x7
loop_1424:
	cmpq 0x18(%rbp),%r14
	jnl L_430096
L_135464:
	movq 0x10(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r11
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r11,0x0(%r15,%r14,8)
	incq %r14
	jmp loop_1424
.p2align 0x4
L_430096:
L_135463:
	movq $0x33,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_430098:
L_135466:
	movq (globalObjptr+0x620)(%rip),%r15
	jmp L_135462
.p2align 0x4
L_430099:
L_135467:
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_430100:
L_135468:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_135469+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_135469
.p2align 0x4
.long 0x45B
L_135469:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_135437
.p2align 0x4
L_430101:
L_135470:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_135471+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_135471
.p2align 0x4
.long 0x45B
L_135471:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_135433
.p2align 0x4
L_430102:
L_135472:
	movq (globalObjptr+0x628)(%rip),%r14
	movq $0x33,0xFFFFFFFFFFFFFFF8(%r14)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl x_1200
.hidden x_1200
x_1200:
L_135475:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_135476
L_135489:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_135490+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_135490
.p2align 0x4
.long 0x4E8
L_135490:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_135476:
	movq 0x10(%rbp),%r15
loop_1425:
	movq 0x8(%r15),%r14
	cmpq $0x1,%r14
	je L_430108
	cmpq $0x2,%r14
	je L_430104
L_135477:
	movq 0x8(%r14),%r15
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x30(%rbp)
	movb 0x0(%rbp),%r15b
	movb %r15b,0x20(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_135478+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1200
.p2align 0x4
L_430104:
L_135483:
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movw 0x0(%r13),%r15w
	movw %r15w,%r11w
	andw $0x1,%r11w
	jnz L_430107
L_135484:
	movzbw 0x0(%rbp),%r15w
	shlw $0x1,%r15w
	orw $0x1,%r15w
	movw %r15w,0x0(%r13)
	movw 0x0(%r14),%r15w
	movw %r15w,%r14w
	andw $0x3,%r14w
	cmpw $0x1,%r14w
	je L_430106
	cmpw $0x2,%r14w
	je L_430105
L_135485:
	movl $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_430105:
L_135487:
	shrw $0x2,%r15w
	movb %r15b,%r14b
	cmpb 0x0(%rbp),%r14b
	sete %al
	movzbl %al,%eax
	movl %eax,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_430106:
L_135480:
	movl $0x0,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_430107:
L_135488:
	shrw $0x1,%r15w
	movb %r15b,%r14b
	cmpb %r14b,0x0(%rbp)
	sete %al
	movzbl %al,%eax
	movl %eax,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_430108:
L_135482:
	movzbw 0x0(%rbp),%r15w
	shlw $0x2,%r15w
	orw $0x2,%r15w
	movw %r15w,0x0(%rbp)
	jmp up_2
.p2align 0x4
.long 0x4E5
L_135478:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movl 0x20(%rbp),%r14d
	movl %r14d,0x4(%rbp)
	testl %r14d,%r14d
	jz L_135480
L_135481:
	movq 0x10(%rbp),%r15
	jmp loop_1425
.text
.p2align 0x4
.globl x_1333
.hidden x_1333
x_1333:
L_135491:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_135492
L_135505:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_135506+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_135506
.p2align 0x4
.long 0x45B
L_135506:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_135492:
	movq 0x10(%rbp),%r15
loop_1426:
	movq 0x8(%r15),%r14
	cmpq $0x1,%r14
	je up_3
	cmpq $0x2,%r14
	je L_430111
L_135493:
	movq 0x8(%r14),%r15
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x30(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_135494+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1333
.p2align 0x4
L_430111:
L_135499:
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	jne L_430114
L_135501:
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	movq 0x0(%r14),%r15
	cmpq $0x1,%r15
	je L_430113
	cmpq $0x2,%r15
	je L_430112
L_135502:
	movq 0x10(%r11),%r14
	cmpq %r14,0x10(%r15)
	sete %al
	movzbl %al,%eax
	movl %eax,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_430112:
L_135504:
	movl $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_430113:
L_135496:
	movl $0x0,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_430114:
L_135500:
	movq 0x0(%rbp),%r14
	movq 0x10(%r14),%r13
	cmpq %r13,0x10(%r15)
	sete %al
	movzbl %al,%eax
	movl %eax,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x51E
L_135494:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movl 0x20(%rbp),%r14d
	movl %r14d,0x18(%rbp)
	testl %r14d,%r14d
	jz L_135496
L_135497:
	movq 0x10(%rbp),%r15
	jmp loop_1426
.text
.p2align 0x4
.globl up_3
.hidden up_3
up_3:
L_135507:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_135508
L_135536:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_135537+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_135537
.p2align 0x4
.long 0x45F
L_135537:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_135508:
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r14
	movq 0x10(%r15),%r11
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_135522
	cmpq $0x2,%r15
	je L_430122
L_135509:
	movq 0x0(%rbp),%r10
	cmpq $0x1,%r10
	je setTop_4
	cmpq $0x2,%r10
	je L_135522
L_135510:
	movq 0x10(%r15),%r9
	cmpq %r9,0x10(%r10)
	je L_135522
setTop_4:
	cmpq $0x1,0x0(%r14)
	jne L_430119
L_135514:
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r14
	movb $0x1,0x0(%r14,%r15,1)
	movq $0x1,0x0(%r13)
	movq $0x1,0x0(%rbp)
	movq %r11,%r13
continue_4:
	movq 0x0(%r13),%r14
	cmpq $0x1,%r14
	je L_430118
L_135515:
	movq 0x8(%r14),%r13
	movq %r13,0x8(%rbp)
	movq 0x0(%r14),%r14
	movq %r14,%r15
L_135516:
	movq %r15,0x20(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_135517+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp up_3
.p2align 0x4
L_430118:
L_135522:
	movl $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_430119:
L_135513:
	movl $0x0,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_430122:
L_135528:
	movq 0x0(%rbp),%r15
	cmpq $0x1,%r15
	je setTop_4
	cmpq $0x2,%r15
	je L_135522
L_135529:
	movq %r13,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r15,0x0(%r13)
	movq 0x0(%r14),%r13
	cmpq $0x1,%r13
	je continue_10
L_135530:
	movq 0x10(%r15),%r14
	cmpq %r14,0x10(%r13)
	jne L_135513
	movq %r11,%r13
	jmp continue_4
.p2align 0x4
continue_10:
	movq %r11,%r13
	jmp continue_4
.p2align 0x4
.long 0x5AF
L_135517:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movl 0x18(%rbp),%r14d
	movl %r14d,0x10(%rbp)
	testl %r14d,%r14d
	jz L_135513
L_135519:
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_135522
L_135520:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_135516
.text
.p2align 0x4
.globl toString_546
.hidden toString_546
toString_546:
L_135538:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_135947
L_135539:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_430186
L_135540:
	movq 0x8(%rbp),%r15
	movq 0x38(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x28(%r15),%r14
	movq 0x20(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x18(%r15),%r13
	movq %r13,0x28(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x30(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x38(%rbp)
	movq 0x0(%r15),%r13
	movq 0x0(%rbp),%r15
	cmpq $0x1,%r15
	je L_430185
	cmpq $0x2,%r15
	je L_430184
	cmpq $0x3,%r15
	je L_430183
	cmpq $0x5,%r15
	je L_430182
L_135541:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%rax
	shrq $0x1,%rax
	subq $0xF59,%rax
	cmpq $0x7,%rax
	ja L_430129
	leaq jumpTable_295(%rip),%rbx
	jmp *(%rbx,%rax,8)
.data
.p2align 0x4
jumpTable_295:
.quad L_430174,L_430165,L_430157,L_430156,L_430147,L_430146,L_430138,L_430130
.text
.p2align 0x4
L_430129:
L_135542:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x8(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_135543+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_430130:
L_135881:
	movq 0x0(%rbp),%r15
	movq 0x20(%r15),%r14
	movb 0x0(%r15),%r13b
	movb %r13b,0x20(%rbp)
	movq 0x18(%r15),%r13
	movq %r13,0x28(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x30(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x38(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,%r13
	andq $0x7,%r13
	cmpq $0x2,%r13
	je L_135938
	cmpq $0x5,%r13
	je L_430136
	cmpq $0x6,%r13
	je L_430134
L_135882:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_135883
L_135934:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0xF53,%r13
	je L_430132
	cmpq $0xF54,%r13
	je L_430131
L_135883:
	movq 0x0(%r14),%r15
	movq %r15,0x40(%rbp)
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_135884+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_430131:
L_135936:
	movq (globalObjptr+0xAFD8)(%rip),%r15
	movq %r15,0x10(%rbp)
L_135894:
	movq 0x38(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_135895+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_546
.p2align 0x4
L_430132:
L_135935:
	movq (globalObjptr+0xAC88)(%rip),%r15
	movq %r15,0x10(%rbp)
	jmp L_135894
.p2align 0x4
L_430134:
L_135940:
	shrq $0x3,%r15
	movb %r15b,%r14b
	testb %r14b,%r14b
	jnz L_430135
L_135941:
	movq (globalObjptr+0xD088)(%rip),%r15
	movq %r15,0x10(%rbp)
	jmp L_135894
.p2align 0x4
L_430135:
L_135942:
	movq (globalObjptr+0xD080)(%rip),%r15
	movq %r15,0x10(%rbp)
	jmp L_135894
.p2align 0x4
L_430136:
L_135938:
	movq (globalObjptr+0xAFD8)(%rip),%r15
	movq %r15,0x10(%rbp)
	jmp L_135894
.p2align 0x4
L_430138:
L_135851:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,%r13
	andq $0x7,%r13
	cmpq $0x2,%r13
	je L_135876
	cmpq $0x5,%r13
	je L_430144
	cmpq $0x6,%r13
	je L_430142
L_135852:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_135853
L_135872:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0xF53,%r13
	je L_430140
	cmpq $0xF54,%r13
	je L_430139
L_135853:
	movq 0x0(%r14),%r15
	movq %r15,0x20(%rbp)
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_135854+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_430139:
L_135874:
	movq (globalObjptr+0xAFD8)(%rip),%r15
	movq %r15,0x10(%rbp)
L_135864:
	movq 0x18(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_135865+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_546
.p2align 0x4
L_430140:
L_135873:
	movq (globalObjptr+0xAC88)(%rip),%r15
	movq %r15,0x10(%rbp)
	jmp L_135864
.p2align 0x4
L_430142:
L_135878:
	shrq $0x3,%r15
	movb %r15b,%r14b
	testb %r14b,%r14b
	jnz L_430143
L_135879:
	movq (globalObjptr+0xD088)(%rip),%r15
	movq %r15,0x10(%rbp)
	jmp L_135864
.p2align 0x4
L_430143:
L_135880:
	movq (globalObjptr+0xD080)(%rip),%r15
	movq %r15,0x10(%rbp)
	jmp L_135864
.p2align 0x4
L_430144:
L_135876:
	movq (globalObjptr+0xAFD8)(%rip),%r15
	movq %r15,0x10(%rbp)
	jmp L_135864
.p2align 0x4
L_430146:
L_135804:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	movq $0x5,0x28(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_135805+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_546
.p2align 0x4
L_430147:
L_135737:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x8(%rbp)
	movl 0x0(%r14),%r15d
	testl %r15d,%r15d
	jnz L_430148
L_135738:
	movl 0x4(%r14),%r15d
	movl %r15d,0x8(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_135739+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_430148:
L_135757:
	movq 0x8(%r14),%r15
	movq 0x8(%r15),%r14
	movq %r14,%r13
	andq $0x7,%r13
	cmpq $0x2,%r13
	je L_135799
	cmpq $0x5,%r13
	je L_430154
	cmpq $0x6,%r13
	je L_430152
L_135758:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_430151
L_135795:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xF53,%r13
	je L_430150
	cmpq $0xF54,%r13
	je L_430149
	movq %r15,%r14
L_135759:
	movq 0x0(%r14),%r15
	movq %r15,0x18(%rbp)
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_135760+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_430149:
L_135797:
	movq (globalObjptr+0xAFD8)(%rip),%r15
	movq %r15,0x10(%rbp)
L_135770:
	movq 0x8(%rbp),%r15
	movl 0x4(%r15),%r14d
	movl %r14d,0x20(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_135771+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_430150:
L_135796:
	movq (globalObjptr+0xAC88)(%rip),%r15
	movq %r15,0x10(%rbp)
	jmp L_135770
.p2align 0x4
L_430151:
	movq %r15,%r14
	jmp L_135759
.p2align 0x4
L_430152:
L_135801:
	shrq $0x3,%r14
	movb %r14b,%r15b
	testb %r15b,%r15b
	jnz L_430153
L_135802:
	movq (globalObjptr+0xD088)(%rip),%r15
	movq %r15,0x10(%rbp)
	jmp L_135770
.p2align 0x4
L_430153:
L_135803:
	movq (globalObjptr+0xD080)(%rip),%r15
	movq %r15,0x10(%rbp)
	jmp L_135770
.p2align 0x4
L_430154:
L_135799:
	movq (globalObjptr+0xAFD8)(%rip),%r15
	movq %r15,0x10(%rbp)
	jmp L_135770
.p2align 0x4
L_430156:
L_135721:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x8(%rbp)
	movq 0x10(%r14),%r15
	movq %r15,0x30(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x18(%rbp)
	movq %r13,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_135722+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_33
.p2align 0x4
L_430157:
L_135665:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x28(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,%r13
	andq $0x7,%r13
	cmpq $0x2,%r13
	je L_135716
	cmpq $0x5,%r13
	je L_430163
	cmpq $0x6,%r13
	je L_430161
L_135666:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_135667
L_135712:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0xF53,%r13
	je L_430159
	cmpq $0xF54,%r13
	je L_430158
L_135667:
	movq 0x0(%r14),%r15
	movq %r15,0x30(%rbp)
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_135668+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_430158:
L_135714:
	movq (globalObjptr+0xAFD8)(%rip),%r15
	movq %r15,0x10(%rbp)
L_135678:
	movq 0x28(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_135679+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_546
.p2align 0x4
L_430159:
L_135713:
	movq (globalObjptr+0xAC88)(%rip),%r15
	movq %r15,0x10(%rbp)
	jmp L_135678
.p2align 0x4
L_430161:
L_135718:
	shrq $0x3,%r15
	movb %r15b,%r14b
	testb %r14b,%r14b
	jnz L_430162
L_135719:
	movq (globalObjptr+0xD088)(%rip),%r15
	movq %r15,0x10(%rbp)
	jmp L_135678
.p2align 0x4
L_430162:
L_135720:
	movq (globalObjptr+0xD080)(%rip),%r15
	movq %r15,0x10(%rbp)
	jmp L_135678
.p2align 0x4
L_430163:
L_135716:
	movq (globalObjptr+0xAFD8)(%rip),%r15
	movq %r15,0x10(%rbp)
	jmp L_135678
.p2align 0x4
L_430165:
L_135617:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r13,0x8(%rbp)
	movq $0x11F9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x10(%rbp)
	addq $0x18,%r12
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	movq 0x8(%r14),%r15
	movq %r15,%r13
	andq $0x7,%r13
	cmpq $0x2,%r13
	je L_135660
	cmpq $0x5,%r13
	je L_430172
	cmpq $0x6,%r13
	je L_430170
L_135618:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_135619
L_135656:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0xF53,%r13
	je L_430168
	cmpq $0xF54,%r13
	je L_430166
L_135619:
	movq 0x0(%r14),%r15
	movq %r15,0x18(%rbp)
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_135620+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_430166:
L_135658:
	movq (globalObjptr+0xDDD8)(%rip),%r15
	movq %r15,0x18(%rbp)
L_135630:
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,%r15
	andq $0x1,%r15
	jz L_430167
L_135648:
	shrq $0x1,%r14
	movl %r14d,%r15d
	movl %r15d,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_135649+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_430167:
L_135631:
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (toString_229+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_1
.p2align 0x4
L_430168:
L_135657:
	movq (globalObjptr+0xDDD0)(%rip),%r15
	movq %r15,0x18(%rbp)
	jmp L_135630
.p2align 0x4
L_430170:
L_135662:
	shrq $0x3,%r15
	movb %r15b,%r14b
	testb %r14b,%r14b
	jnz L_430171
L_135663:
	movq (globalObjptr+0xDDE0)(%rip),%r15
	movq %r15,0x18(%rbp)
	jmp L_135630
.p2align 0x4
L_430171:
L_135664:
	movq (globalObjptr+0xDDE8)(%rip),%r15
	movq %r15,0x18(%rbp)
	jmp L_135630
.p2align 0x4
L_430172:
L_135660:
	movq (globalObjptr+0xDDD8)(%rip),%r15
	movq %r15,0x18(%rbp)
	jmp L_135630
.p2align 0x4
L_430174:
L_135561:
	movq 0x8(%r13),%r15
	movq %r15,0x8(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x10(%rbp)
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r13
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r11
	movq %r11,0x18(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,%r13
	andq $0x7,%r13
	cmpq $0x2,%r13
	je L_135612
	cmpq $0x5,%r13
	je L_430180
	cmpq $0x6,%r13
	je L_430178
L_135562:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_135563
L_135608:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0xF53,%r13
	je L_430176
	cmpq $0xF54,%r13
	je L_430175
L_135563:
	movq 0x0(%r14),%r15
	movq %r15,0x20(%rbp)
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_135564+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_430175:
L_135610:
	movq (globalObjptr+0xAFD8)(%rip),%r15
	movq %r15,0x20(%rbp)
L_135574:
	movq 0x18(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_135575+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_430176:
L_135609:
	movq (globalObjptr+0xAC88)(%rip),%r15
	movq %r15,0x20(%rbp)
	jmp L_135574
.p2align 0x4
L_430178:
L_135614:
	shrq $0x3,%r15
	movb %r15b,%r14b
	testb %r14b,%r14b
	jnz L_430179
L_135615:
	movq (globalObjptr+0xD088)(%rip),%r15
	movq %r15,0x20(%rbp)
	jmp L_135574
.p2align 0x4
L_430179:
L_135616:
	movq (globalObjptr+0xD080)(%rip),%r15
	movq %r15,0x20(%rbp)
	jmp L_135574
.p2align 0x4
L_430180:
L_135612:
	movq (globalObjptr+0xAFD8)(%rip),%r15
	movq %r15,0x20(%rbp)
	jmp L_135574
.p2align 0x4
L_430182:
L_135946:
	movq (globalObjptr+0xEA08)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_430183:
L_135945:
	movq (globalObjptr+0xD168)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_430184:
L_135944:
	movq (globalObjptr+0xE450)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_430185:
L_135943:
	movq (globalObjptr+0xE9E0)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_430186:
L_135947:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_135948+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_135948
.p2align 0x4
.long 0x45F
L_135948:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_135540
.p2align 0x4
.long 0x4A0
L_135543:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movl 0x48(%rbp),%r15d
	movl %r15d,0x10(%rbp)
	cmpl $0x8,%r15d
	je L_430191
	cmpl $0x10,%r15d
	je L_430190
	cmpl $0x20,%r15d
	je L_430189
	cmpl $0x40,%r15d
	je L_430188
L_135544:
	movq (globalObjptr+0x1710)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_430188:
L_135556:
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x8(%rbp)
	movq 0x38(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_135557+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1197
.p2align 0x4
L_430189:
L_135551:
	movq 0x8(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x8(%rbp)
	movq 0x38(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_135552+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1197
.p2align 0x4
L_430190:
L_135550:
	movq (globalObjptr+0xEDB8)(%rip),%r14
	movq %r14,0x10(%rbp)
simple_16:
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x38(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_135546+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1197
.p2align 0x4
L_430191:
L_135545:
	movq (globalObjptr+0xD660)(%rip),%r14
	movq %r14,0x10(%rbp)
	jmp simple_16
.p2align 0x4
.long 0xA9F
L_135884:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movl 0x50(%rbp),%r15d
	movl %r15d,0x24(%rbp)
	cmpl $0x8,%r15d
	je L_430195
	cmpl $0x10,%r15d
	je L_430194
	cmpl $0x20,%r15d
	je L_430193
	cmpl $0x40,%r15d
	je L_430192
L_135885:
	movq 0x40(%rbp),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_135886+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1197
.p2align 0x4
L_430192:
L_135933:
	movq (globalObjptr+0xDFA8)(%rip),%r15
	movq %r15,0x10(%rbp)
	jmp L_135894
.p2align 0x4
L_430193:
L_135932:
	movq (globalObjptr+0xD0F0)(%rip),%r14
	movq %r14,0x10(%rbp)
	jmp L_135894
.p2align 0x4
L_430194:
L_135931:
	movq (globalObjptr+0xDFB0)(%rip),%r14
	movq %r14,0x10(%rbp)
	jmp L_135894
.p2align 0x4
L_430195:
L_135893:
	movq (globalObjptr+0xCE30)(%rip),%r14
	movq %r14,0x10(%rbp)
	jmp L_135894
.p2align 0x4
.long 0x5F5
L_135895:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_135896+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_546
.p2align 0x4
.long 0x4A5
L_135854:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movl 0x30(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	cmpl $0x8,%r15d
	je L_430199
	cmpl $0x10,%r15d
	je L_430198
	cmpl $0x20,%r15d
	je L_430197
	cmpl $0x40,%r15d
	je L_430196
L_135855:
	movq 0x20(%rbp),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_135856+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1197
.p2align 0x4
L_430196:
L_135871:
	movq (globalObjptr+0xDFA8)(%rip),%r15
	movq %r15,0x10(%rbp)
	jmp L_135864
.p2align 0x4
L_430197:
L_135870:
	movq (globalObjptr+0xD0F0)(%rip),%r14
	movq %r14,0x10(%rbp)
	jmp L_135864
.p2align 0x4
L_430198:
L_135869:
	movq (globalObjptr+0xDFB0)(%rip),%r14
	movq %r14,0x10(%rbp)
	jmp L_135864
.p2align 0x4
L_430199:
L_135863:
	movq (globalObjptr+0xCE30)(%rip),%r14
	movq %r14,0x10(%rbp)
	jmp L_135864
.p2align 0x4
.long 0x2B
L_135865:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_135866
L_135867:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_135868+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_135868
.p2align 0x4
.long 0x2C
L_135868:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_135866:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xD0F8)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x490
L_135805:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_135806
L_135849:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_135850+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_135850
.p2align 0x4
.long 0x4B1
L_135850:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_135806:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x28(%rbp)
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,%r15
	andq $0x7,%r15
	cmpq $0x2,%r15
	je L_135844
	cmpq $0x5,%r15
	je L_430206
	cmpq $0x6,%r15
	je L_430204
L_135807:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_135808
L_135840:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xF53,%r15
	je L_430202
	cmpq $0xF54,%r15
	je L_430201
L_135808:
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq %r14,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_135809+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_430201:
L_135842:
	movq (globalObjptr+0xAFD8)(%rip),%r15
	movq %r15,0x30(%rbp)
L_135819:
	movq 0x28(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq (globalObjptr+0xE1E8)(%rip),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_135820+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3781
.p2align 0x4
L_430202:
L_135841:
	movq (globalObjptr+0xAC88)(%rip),%r15
	movq %r15,0x30(%rbp)
	jmp L_135819
.p2align 0x4
L_430204:
L_135846:
	shrq $0x3,%r14
	movb %r14b,%r15b
	testb %r15b,%r15b
	jnz L_430205
L_135847:
	movq (globalObjptr+0xD088)(%rip),%r15
	movq %r15,0x30(%rbp)
	jmp L_135819
.p2align 0x4
L_430205:
L_135848:
	movq (globalObjptr+0xD080)(%rip),%r15
	movq %r15,0x30(%rbp)
	jmp L_135819
.p2align 0x4
L_430206:
L_135844:
	movq (globalObjptr+0xAFD8)(%rip),%r15
	movq %r15,0x30(%rbp)
	jmp L_135819
.p2align 0x4
.long 0x1
L_135739:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq $0x1,0x10(%rbp)
	movq (globalObjptr+0xE1E8)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x10,%rbp
	leaq (L_135740+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3781
.p2align 0x4
.long 0x742
L_135760:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movl 0x40(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	cmpl $0x8,%r15d
	je L_430212
	cmpl $0x10,%r15d
	je L_430211
	cmpl $0x20,%r15d
	je L_430210
	cmpl $0x40,%r15d
	je L_430209
L_135761:
	movq 0x18(%rbp),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_135762+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1197
.p2align 0x4
L_430209:
L_135794:
	movq (globalObjptr+0xDFA8)(%rip),%r15
	movq %r15,0x10(%rbp)
	jmp L_135770
.p2align 0x4
L_430210:
L_135793:
	movq (globalObjptr+0xD0F0)(%rip),%r14
	movq %r14,0x10(%rbp)
	jmp L_135770
.p2align 0x4
L_430211:
L_135792:
	movq (globalObjptr+0xDFB0)(%rip),%r14
	movq %r14,0x10(%rbp)
	jmp L_135770
.p2align 0x4
L_430212:
L_135769:
	movq (globalObjptr+0xCE30)(%rip),%r14
	movq %r14,0x10(%rbp)
	jmp L_135770
.p2align 0x4
.long 0x2B
L_135771:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_135772
L_135790:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_135791+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_135791
.p2align 0x4
.long 0x2C
L_135791:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_135772:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xE1E8)(%rip),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_135773+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3781
.p2align 0x4
.long 0x5EF
L_135722:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl 0x28(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	cmpl $0x0,%r15d
	jl L_430214
L_135723:
	movl %r15d,0x28(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_135724+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_430214:
L_135731:
	negl %r15d
	jo L_430215
L_135732:
	movl %r15d,0x28(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_135733+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_430215:
L_135599:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4EC
L_135668:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movl 0x40(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	cmpl $0x8,%r15d
	je L_430219
	cmpl $0x10,%r15d
	je L_430218
	cmpl $0x20,%r15d
	je L_430217
	cmpl $0x40,%r15d
	je L_430216
L_135669:
	movq 0x30(%rbp),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_135670+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1197
.p2align 0x4
L_430216:
L_135711:
	movq (globalObjptr+0xDFA8)(%rip),%r15
	movq %r15,0x10(%rbp)
	jmp L_135678
.p2align 0x4
L_430217:
L_135710:
	movq (globalObjptr+0xD0F0)(%rip),%r14
	movq %r14,0x10(%rbp)
	jmp L_135678
.p2align 0x4
L_430218:
L_135709:
	movq (globalObjptr+0xDFB0)(%rip),%r14
	movq %r14,0x10(%rbp)
	jmp L_135678
.p2align 0x4
L_430219:
L_135677:
	movq (globalObjptr+0xCE30)(%rip),%r14
	movq %r14,0x10(%rbp)
	jmp L_135678
.p2align 0x4
.long 0x8A9
L_135679:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_135680+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
.long 0x4EC
L_135620:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movl 0x40(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	cmpl $0x8,%r15d
	je L_430223
	cmpl $0x10,%r15d
	je L_430222
	cmpl $0x20,%r15d
	je L_430221
	cmpl $0x40,%r15d
	je L_430220
L_135621:
	movq 0x18(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_135622+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1197
.p2align 0x4
L_430220:
L_135655:
	movq (globalObjptr+0xDDC8)(%rip),%r15
	movq %r15,0x18(%rbp)
	jmp L_135630
.p2align 0x4
L_430221:
L_135654:
	movq (globalObjptr+0xDDC0)(%rip),%r14
	movq %r14,0x18(%rbp)
	jmp L_135630
.p2align 0x4
L_430222:
L_135653:
	movq (globalObjptr+0xDDB8)(%rip),%r14
	movq %r14,0x18(%rbp)
	jmp L_135630
.p2align 0x4
L_430223:
L_135629:
	movq (globalObjptr+0xDDA0)(%rip),%r14
	movq %r14,0x18(%rbp)
	jmp L_135630
.p2align 0x4
.long 0x48F
L_135649:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_135650
L_135651:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_135652+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_135652
.p2align 0x4
.long 0x5E5
L_135652:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_135650:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xAF18)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x1
toString_229:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (rev_227+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x4A5
L_135564:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movl 0x30(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	cmpl $0x8,%r15d
	je L_430228
	cmpl $0x10,%r15d
	je L_430227
	cmpl $0x20,%r15d
	je L_430226
	cmpl $0x40,%r15d
	je L_430225
L_135565:
	movq 0x8(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_135566+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1197
.p2align 0x4
L_430225:
L_135607:
	movq (globalObjptr+0xDFA8)(%rip),%r15
	movq %r15,0x20(%rbp)
	jmp L_135574
.p2align 0x4
L_430226:
L_135606:
	movq (globalObjptr+0xD0F0)(%rip),%r14
	movq %r14,0x20(%rbp)
	jmp L_135574
.p2align 0x4
L_430227:
L_135605:
	movq (globalObjptr+0xDFB0)(%rip),%r14
	movq %r14,0x20(%rbp)
	jmp L_135574
.p2align 0x4
L_430228:
L_135573:
	movq (globalObjptr+0xCE30)(%rip),%r14
	movq %r14,0x20(%rbp)
	jmp L_135574
.p2align 0x4
.long 0x2
L_135575:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movl 0x30(%rbp),%r15d
	movl %r15d,0x18(%rbp)
	cmpl $0x0,%r15d
	jl L_430229
L_135576:
	movl %r15d,0x30(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_135577+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_430229:
L_135598:
	negl %r15d
	jo L_135599
L_135600:
	movl %r15d,0x30(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_135601+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0x1
L_135557:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_135558
L_135559:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_135560+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_135560
.p2align 0x4
.long 0x451
L_135560:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_135558:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x5338)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xDEA0)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x1
L_135552:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_135553
L_135554:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_135555+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_135555
.p2align 0x4
.long 0x451
L_135555:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_135553:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xDEA0)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x2B
L_135546:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_135547
L_135548:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_135549+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_135549
.p2align 0x4
.long 0x2C
L_135549:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_135547:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xEDA8)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xEDB0)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x1
L_135886:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_135887
L_135891:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_135892+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_135892
.p2align 0x4
.long 0x451
L_135892:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_135887:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xDD98)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_423+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0xA43
L_135896:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x30(%rbp)
	movb 0x20(%rbp),%r15b
	cmpb $0x1,%r15b
	je L_430237
	cmpb $0x2,%r15b
	je L_430236
	cmpb $0x3,%r15b
	je L_430235
L_135897:
	movq (globalObjptr+0xD660)(%rip),%r15
	movq %r15,0x20(%rbp)
L_135898:
	movq 0x28(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_135899+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_430235:
L_135930:
	movq (globalObjptr+0xD7F0)(%rip),%r15
	movq %r15,0x20(%rbp)
	jmp L_135898
.p2align 0x4
L_430236:
L_135929:
	movq (globalObjptr+0xD800)(%rip),%r14
	movq %r14,0x20(%rbp)
	jmp L_135898
.p2align 0x4
L_430237:
L_135928:
	movq (globalObjptr+0xD668)(%rip),%r14
	movq %r14,0x20(%rbp)
	jmp L_135898
.p2align 0x4
.long 0x1
L_135856:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_135857
L_135861:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_135862+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_135862
.p2align 0x4
.long 0x451
L_135862:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_135857:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xDD98)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_422+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x796
L_135809:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movl 0x38(%rbp),%r15d
	movl %r15d,0x18(%rbp)
	cmpl $0x8,%r15d
	je L_430242
	cmpl $0x10,%r15d
	je L_430241
	cmpl $0x20,%r15d
	je L_430240
	cmpl $0x40,%r15d
	je L_430239
L_135810:
	movq 0x20(%rbp),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_135811+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1197
.p2align 0x4
L_430239:
L_135839:
	movq (globalObjptr+0xDFA8)(%rip),%r15
	movq %r15,0x30(%rbp)
	jmp L_135819
.p2align 0x4
L_430240:
L_135838:
	movq (globalObjptr+0xD0F0)(%rip),%r14
	movq %r14,0x30(%rbp)
	jmp L_135819
.p2align 0x4
L_430241:
L_135837:
	movq (globalObjptr+0xDFB0)(%rip),%r14
	movq %r14,0x30(%rbp)
	jmp L_135819
.p2align 0x4
L_430242:
L_135818:
	movq (globalObjptr+0xCE30)(%rip),%r14
	movq %r14,0x30(%rbp)
	jmp L_135819
.p2align 0x4
.long 0x69B
L_135820:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq %r15,0x0(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_135821:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_430246
.p2align 0x4,,0x7
L_135822:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_430243
L_135823:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_135821
.p2align 0x4
L_430243:
L_135824:
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xB10)(%rip),%r15
	movq %r15,0x10(%rbp)
.p2align 0x4,,0x7
L_135825:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_430245
.p2align 0x4,,0x7
L_135826:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_430244
L_135827:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_135825
.p2align 0x4
L_430244:
L_135828:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq (globalObjptr+0xD0F8)(%rip),%r15
	movq %r15,0x0(%r13)
	movq %r13,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_135829+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_430245:
L_135833:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_135834+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_135834
.p2align 0x4
.long 0x45B
L_135834:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_135826
.p2align 0x4
L_430246:
L_135835:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_135836+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_135836
.p2align 0x4
.long 0x45B
L_135836:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_135822
.p2align 0x4
.long 0x4AF
L_135740:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq $0x1,0x10(%rbp)
	movq 0x0(%rbp),%r14
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
.p2align 0x4,,0x7
L_135741:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_430250
.p2align 0x4,,0x7
L_135742:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_430247
L_135743:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_135741
.p2align 0x4
L_430247:
L_135744:
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xB10)(%rip),%r15
	movq %r15,0x10(%rbp)
.p2align 0x4,,0x7
L_135745:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_430249
.p2align 0x4,,0x7
L_135746:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_430248
L_135747:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_135745
.p2align 0x4
L_430248:
L_135748:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq (globalObjptr+0xD0F8)(%rip),%r15
	movq %r15,0x0(%r13)
	movq %r13,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_135749+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_430249:
L_135753:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_135754+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_135754
.p2align 0x4
.long 0x45B
L_135754:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_135746
.p2align 0x4
L_430250:
L_135755:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_135756+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_135756
.p2align 0x4
.long 0x45B
L_135756:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_135742
.p2align 0x4
.long 0x1
L_135762:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_135763
L_135767:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_135768+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_135768
.p2align 0x4
.long 0x451
L_135768:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_135763:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xDD98)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_420+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x2B
L_135773:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq %r15,0x0(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_135774:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_430255
.p2align 0x4,,0x7
L_135775:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_430252
L_135776:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_135774
.p2align 0x4
L_430252:
L_135777:
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xB10)(%rip),%r15
	movq %r15,0x10(%rbp)
.p2align 0x4,,0x7
L_135778:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_430254
.p2align 0x4,,0x7
L_135779:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_430253
L_135780:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_135778
.p2align 0x4
L_430253:
L_135781:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq (globalObjptr+0xD0F8)(%rip),%r15
	movq %r15,0x0(%r13)
	movq %r13,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_135782+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_430254:
L_135786:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_135787+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_135787
.p2align 0x4
.long 0x45B
L_135787:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_135779
.p2align 0x4
L_430255:
L_135788:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_135789+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_135789
.p2align 0x4
.long 0x45B
L_135789:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_135775
.p2align 0x4
.long 0x4E0
L_135724:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0x808)(%rip),%r15
	movl 0x0(%r15),%r14d
	testl %r14d,%r14d
	jz L_430256
L_135725:
	movq 0x8(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_135726+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_430256:
L_135730:
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4E0
L_135733:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_135734
L_135735:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_135736+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_135736
.p2align 0x4
.long 0x4E7
L_135736:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_135734:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xD3C0)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_135724+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x1
L_135670:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_135671
L_135675:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_135676+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_135676
.p2align 0x4
.long 0x451
L_135676:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_135671:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xDD98)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_419+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x4E2
L_135680:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movl 0x38(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	cmpl $0x0,%r15d
	jl L_430259
L_135681:
	movl %r15d,0x38(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_135682+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_430259:
L_135703:
	negl %r15d
	jo L_135599
L_135704:
	movl %r15d,0x38(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_135705+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0x1
L_135622:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_135623
L_135627:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_135628+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_135628
.p2align 0x4
.long 0x451
L_135628:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_135623:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xDD98)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_417+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x1
rev_227:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_430264
L_135632:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_135633:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_430263
.p2align 0x4,,0x7
L_135634:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_430262
L_135635:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_135633
.p2align 0x4
L_430262:
L_135637:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_135638+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_430263:
L_135645:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_135646+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_135646
.p2align 0x4
.long 0x45B
L_135646:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_135634
.p2align 0x4
L_430264:
L_135647:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_135637
.p2align 0x4
.long 0x1
L_135566:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_135567
L_135571:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_135572+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_135572
.p2align 0x4
.long 0x451
L_135572:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_135567:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xDD98)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_416+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x459
L_135577:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_135578
L_135596:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_135597+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_135597
.p2align 0x4
.long 0x508
L_135597:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_135578:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq %r15,0x30(%rbp)
	movq (globalObjptr+0xE1E8)(%rip),%r15
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_135579+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3781
.p2align 0x4
.long 0x459
L_135601:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_135602
L_135603:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_135604+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_135604
.p2align 0x4
.long 0x508
L_135604:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_135602:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xD3C0)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_135577+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x1
bug_423:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_135888
L_135889:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_135890+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_135890
.p2align 0x4
.long 0x451
L_135890:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_135888:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x987
L_135899:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movl 0x48(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	cmpl $0x0,%r15d
	jl L_430269
L_135900:
	movl %r15d,0x48(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_135901+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_430269:
L_135922:
	negl %r15d
	jo L_135599
L_135923:
	movl %r15d,0x48(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_135924+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0x1
bug_422:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_135858
L_135859:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_135860+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_135860
.p2align 0x4
.long 0x451
L_135860:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_135858:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_135811:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_135812
L_135816:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_135817+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_135817
.p2align 0x4
.long 0x451
L_135817:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_135812:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xDD98)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_421+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x1
L_135829:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_135830
L_135831:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_135832+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_135832
.p2align 0x4
.long 0x451
L_135832:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_135830:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xE3A0)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x1
L_135749:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_135750
L_135751:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_135752+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_135752
.p2align 0x4
.long 0x451
L_135752:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_135750:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xF3A8)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x1
bug_420:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_135764
L_135765:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_135766+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_135766
.p2align 0x4
.long 0x451
L_135766:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_135764:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_135782:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_135783
L_135784:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_135785+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_135785
.p2align 0x4
.long 0x451
L_135785:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_135783:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xF3B0)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x2B
L_135726:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_135727
L_135728:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_135729+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_135729
.p2align 0x4
.long 0x2C
L_135729:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_135727:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x5480)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xEDC8)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x1
bug_419:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_135672
L_135673:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_135674+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_135674
.p2align 0x4
.long 0x451
L_135674:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_135672:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x50B
L_135682:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_135683
L_135701:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_135702+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_135702
.p2align 0x4
.long 0x4F2
L_135702:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_135683:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x20(%rbp)
	movq (globalObjptr+0xE1E8)(%rip),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_135684+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3781
.p2align 0x4
.long 0x50B
L_135705:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_135706
L_135707:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_135708+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_135708
.p2align 0x4
.long 0x4F2
L_135708:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_135706:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xD3C0)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_135682+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x1
bug_417:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_135624
L_135625:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_135626+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_135626
.p2align 0x4
.long 0x451
L_135626:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_135624:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_135638:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_135639
L_135643:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_135644+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_135644
.p2align 0x4
.long 0x451
L_135644:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_135639:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x24F0)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xDD80)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_418+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x1
bug_416:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_135568
L_135569:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_135570+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_135570
.p2align 0x4
.long 0x451
L_135570:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_135568:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x459
L_135579:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq %r15,0x0(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_135580:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_430287
.p2align 0x4,,0x7
L_135581:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_430284
L_135582:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_135580
.p2align 0x4
L_430284:
L_135583:
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xB10)(%rip),%r15
	movq %r15,0x10(%rbp)
.p2align 0x4,,0x7
L_135584:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_430286
.p2align 0x4,,0x7
L_135585:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_430285
L_135586:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_135584
.p2align 0x4
L_430285:
L_135587:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq (globalObjptr+0xD0F8)(%rip),%r15
	movq %r15,0x0(%r13)
	movq %r13,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_135588+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_430286:
L_135592:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_135593+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_135593
.p2align 0x4
.long 0x45B
L_135593:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_135585
.p2align 0x4
L_430287:
L_135594:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_135595+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_135595
.p2align 0x4
.long 0x45B
L_135595:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_135581
.p2align 0x4
.long 0xA8E
L_135901:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_135902
L_135920:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_135921+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_135921
.p2align 0x4
.long 0xA8F
L_135921:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_135902:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x38(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x20(%rbp)
	movq (globalObjptr+0xE1E8)(%rip),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_135903+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3781
.p2align 0x4
.long 0xA8E
L_135924:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_135925
L_135926:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_135927+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_135927
.p2align 0x4
.long 0xA8F
L_135927:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_135925:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xD3C0)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_135901+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x1
bug_421:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_135813
L_135814:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_135815+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_135815
.p2align 0x4
.long 0x451
L_135815:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_135813:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x2B
L_135684:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq %r15,0x0(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_135685:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_430294
.p2align 0x4,,0x7
L_135686:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_430291
L_135687:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_135685
.p2align 0x4
L_430291:
L_135688:
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xB10)(%rip),%r15
	movq %r15,0x10(%rbp)
.p2align 0x4,,0x7
L_135689:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_430293
.p2align 0x4,,0x7
L_135690:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_430292
L_135691:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_135689
.p2align 0x4
L_430292:
L_135692:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq (globalObjptr+0xD0F8)(%rip),%r15
	movq %r15,0x0(%r13)
	movq %r13,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_135693+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_430293:
L_135697:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_135698+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_135698
.p2align 0x4
.long 0x45B
L_135698:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_135690
.p2align 0x4
L_430294:
L_135699:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_135700+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_135700
.p2align 0x4
.long 0x45B
L_135700:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_135686
.p2align 0x4
.long 0x1
bug_418:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_135640
L_135641:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_135642+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_135642
.p2align 0x4
.long 0x451
L_135642:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_135640:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_135588:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_135589
L_135590:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_135591+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_135591
.p2align 0x4
.long 0x451
L_135591:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_135589:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xE890)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x2B
L_135903:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq %r15,0x0(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_135904:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_430300
.p2align 0x4,,0x7
L_135905:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_430297
L_135906:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_135904
.p2align 0x4
L_430297:
L_135907:
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xB10)(%rip),%r15
	movq %r15,0x10(%rbp)
.p2align 0x4,,0x7
L_135908:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_430299
.p2align 0x4,,0x7
L_135909:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_430298
L_135910:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_135908
.p2align 0x4
L_430298:
L_135911:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq (globalObjptr+0xD0F8)(%rip),%r15
	movq %r15,0x0(%r13)
	movq %r13,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_135912+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_430299:
L_135916:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_135917+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_135917
.p2align 0x4
.long 0x45B
L_135917:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_135909
.p2align 0x4
L_430300:
L_135918:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_135919+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_135919
.p2align 0x4
.long 0x45B
L_135919:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_135905
.p2align 0x4
.long 0x1
L_135693:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_135694
L_135695:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_135696+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_135696
.p2align 0x4
.long 0x451
L_135696:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_135694:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xE9B8)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x1
L_135912:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_135913
L_135914:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_135915+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_135915
.p2align 0x4
.long 0x451
L_135915:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_135913:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xE9C8)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	jmp concat_0
.text
.p2align 0x4
.globl push_0
.hidden push_0
push_0:
L_135949:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_135950
L_136042:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_136043+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_136043
.p2align 0x4
.long 0x45B
L_136043:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_135950:
	movq 0x10(%rbp),%r15
	movq 0x40(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x38(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x30(%r15),%r13
	movq %r13,0x28(%rbp)
	movq 0x28(%r15),%r13
	movq %r13,0x30(%rbp)
	movq 0x20(%r15),%r13
	movq %r13,0x38(%rbp)
	movq 0x18(%r15),%r13
	movq %r13,0x40(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x48(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x50(%rbp)
	movl 0x0(%r15),%r13d
	movl %r13d,0x58(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1EB2,%r15
	je L_430303
L_136041:
	movq 0x0(%r14),%r15
	movq %r15,0x70(%rbp)
	movq (globalObjptr+0xEDD8)(%rip),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_135952+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_430303:
L_135951:
	movq 0x0(%r14),%r15
	movq %r15,0x70(%rbp)
	movq (globalObjptr+0xEDD8)(%rip),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_135952+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x100E
L_135952:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_135953+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1316
.p2align 0x4
.long 0x1002
L_135953:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq %r15,0x68(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x68,%rbp
	leaq (L_135954+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x1D2C
L_135954:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x30(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x8(%r15),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x28(%rbp)
	movq 0x0(%r13),%r10
	movq %r10,0x60(%rbp)
	movq 0x0(%r11),%r15
	cmpq $0x1,%r15
	je L_430305
L_135955:
	movq 0x0(%r15),%r13
	movq %r13,0x70(%rbp)
	movq %r14,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_135956+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_430305:
L_136036:
	movq 0x60(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_136037+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x1D2D
L_135956:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x38(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_135957+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
.long 0x1
L_136037:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (bug_425+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x1D2E
L_135957:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movl 0x78(%rbp),%r15d
	movl %r15d,0x10(%rbp)
	cmpl $0x0,%r15d
	jl L_430306
L_135958:
	movl %r15d,0x70(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_135959+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_430306:
L_136030:
	negl %r15d
	jo L_430307
L_136031:
	movl %r15d,0x70(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_136032+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_430307:
L_136004:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
bug_425:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_136038
L_136039:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_136040+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_136040
.p2align 0x4
.long 0x451
L_136040:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_136038:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1D2F
L_135959:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_135960
L_136028:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_136029+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_136029
.p2align 0x4
.long 0x1D39
L_136029:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_135960:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq %r15,0x70(%rbp)
	movq (globalObjptr+0xE1E8)(%rip),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_135961+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3781
.p2align 0x4
.long 0x1D2F
L_136032:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_136033
L_136034:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_136035+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_136035
.p2align 0x4
.long 0x1D39
L_136035:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_136033:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xD3C0)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_135959+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x1D2F
L_135961:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xAFD8)(%rip),%r15
	movq %r15,0x30(%rbp)
	movq $0x1,0x38(%rbp)
.p2align 0x4,,0x7
L_135962:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_430314
.p2align 0x4,,0x7
L_135963:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_430311
L_135964:
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x30(%rbp)
	jmp L_135962
.p2align 0x4
L_430311:
L_135965:
	movq 0x38(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xB10)(%rip),%r15
	movq %r15,0x38(%rbp)
.p2align 0x4,,0x7
L_135966:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_430313
.p2align 0x4,,0x7
L_135967:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_430312
L_135968:
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x30(%rbp)
	jmp L_135966
.p2align 0x4
L_430312:
L_135969:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq (globalObjptr+0xD0F8)(%rip),%r15
	movq %r15,0x0(%r13)
	movq %r13,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_135970+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_430313:
L_136024:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_136025+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_136025
.p2align 0x4
.long 0x1CF0
L_136025:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_135967
.p2align 0x4
L_430314:
L_136026:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_136027+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_136027
.p2align 0x4
.long 0x1CF0
L_136027:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_135963
.p2align 0x4
.long 0x1D2F
L_135970:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_135971
L_136022:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_136023+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_136023
.p2align 0x4
.long 0x1D39
L_136023:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_135971:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xE890)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_135972+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x1D2F
L_135972:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_135973
L_136020:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_136021+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_136021
.p2align 0x4
.long 0x1D39
L_136021:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_135973:
	movq $0x1EB9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x70(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_135974+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_546
.p2align 0x4
.long 0x1D30
L_135974:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_135975
L_136018:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_136019+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_136019
.p2align 0x4
.long 0x1D38
L_136019:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_135975:
	movq $0x1EA9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x38(%rbp)
	addq $0x10,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_430317
L_135976:
	movq 0x0(%r14),%r15
	movq %r15,0x68(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_135977+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_430317:
L_136013:
	movq 0x60(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_136014+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x1D31
L_135977:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_135978
L_136011:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_136012+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_136012
.p2align 0x4
.long 0x1D37
L_136012:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_135978:
	movq $0x493,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x68(%rbp)
	movl $0x0,0x70(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x78(%rbp)
	movl $0x1,0x80(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x68,%rbp
	leaq (L_135979+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp move_4
.p2align 0x4
.long 0x1
L_136014:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (bug_424+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x1D32
L_135979:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x18(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x1EB2,%r13
	je L_430320
L_136010:
	movq 0x0(%r14),%r13
	movq %r13,0x70(%rbp)
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_135981+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_430320:
L_135980:
	movq 0x0(%r14),%r13
	movq %r13,0x70(%rbp)
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_135981+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x1
bug_424:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_136015
L_136016:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_136017+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_136017
.p2align 0x4
.long 0x451
L_136017:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_136015:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1D32
L_135981:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x0(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_135982+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
.long 0x1D33
L_135982:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movl 0x68(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	cmpl $0x0,%r15d
	jl L_430322
L_135983:
	movl %r15d,0x68(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_135984+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_430322:
L_136003:
	negl %r15d
	jo L_136004
L_136005:
	movl %r15d,0x68(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_136006+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0x1D34
L_135984:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x18(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1EB2,%r14
	je L_430324
L_136002:
	movq 0x0(%r15),%r14
	movq %r14,0x70(%rbp)
	movq (globalObjptr+0xED60)(%rip),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_135986+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_430324:
L_135985:
	movq 0x0(%r15),%r14
	movq %r14,0x70(%rbp)
	movq (globalObjptr+0xED60)(%rip),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_135986+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x1D34
L_136006:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_136007
L_136008:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_136009+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_136009
.p2align 0x4
.long 0x1D36
L_136009:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_136007:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xD3C0)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_135984+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x1D35
L_135986:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x18(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1EB2,%r14
	je L_430326
L_136001:
	movq 0x0(%r15),%r14
	movq %r14,0x70(%rbp)
	movq (globalObjptr+0xED68)(%rip),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_135988+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_430326:
L_135987:
	movq 0x0(%r15),%r14
	movq %r14,0x70(%rbp)
	movq (globalObjptr+0xED68)(%rip),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_135988+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x1D35
L_135988:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x18(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1EB2,%r14
	je L_430327
L_136000:
	movq 0x0(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (loop_1427+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_430327:
L_135989:
	movq 0x0(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (loop_1427+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x1D34
loop_1427:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x18(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1EB2,%r14
	je L_430328
L_135999:
	movq 0x0(%r15),%r14
	movq %r14,0x70(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_135991+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_430328:
L_135990:
	movq 0x0(%r15),%r14
	movq %r14,0x70(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_135991+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x1D34
L_135991:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x18(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1EB2,%r14
	je L_430329
L_135998:
	movq 0x0(%r15),%r14
	movq %r14,0x70(%rbp)
	movq (globalObjptr+0xA1A8)(%rip),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_135993+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_430329:
L_135992:
	movq 0x0(%r15),%r14
	movq %r14,0x70(%rbp)
	movq (globalObjptr+0xA1A8)(%rip),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_135993+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x1D34
L_135993:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movl 0x58(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_430330
L_135994:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_430330:
L_135995:
	movq 0x18(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1EB2,%r14
	je L_430331
L_135997:
	movq 0x0(%r15),%r14
	movq %r14,0x8(%rbp)
	movq (globalObjptr+0xEE28)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp output_0
.p2align 0x4
L_430331:
L_135996:
	movq 0x0(%r15),%r14
	movq %r14,0x8(%rbp)
	movq (globalObjptr+0xEE28)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp output_0
.text
.p2align 0x4
.globl move_4
.hidden move_4
move_4:
L_136044:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_136177
L_136045:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_430333
L_136046:
	movq 0x28(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x10(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x40(%rbp)
	movq 0x8(%r14),%r13
	movl 0x0(%r14),%r11d
	testl %r11d,%r11d
	jz L_430332
L_136049:
	movq %r13,0x60(%rbp)
	movb $0x0,%r15b
	movzbq %r15b,%r14
	shlq $0x3,%r14
	orq $0x6,%r14
	movq %r14,0x28(%rbp)
	movq $0x11,0x50(%rbp)
	movq $0x11,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_136050+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1182
.p2align 0x4
L_430332:
L_136048:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xB00)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xAEC8)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	jmp concat_0
.p2align 0x4
L_430333:
L_136177:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_136178+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_136178
.p2align 0x4
.long 0x1D40
L_136178:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_136046
.p2align 0x4
.long 0x1D3A
L_136050:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_136051
L_136175:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_136176+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_136176
.p2align 0x4
.long 0x1D3F
L_136176:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_136051:
	movq $0x493,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x50(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_136052+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_1
.p2align 0x4
.long 0x1D3A
L_136052:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movl 0x50(%rbp),%r15d
	movl %r15d,0xC(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_136053
L_136173:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_136174+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_136174
.p2align 0x4
.long 0x1D3E
L_136174:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_136053:
	movl 0xC(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_430336
L_136054:
	movq $0x1EA3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x493,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq %r14,0x0(%r13)
	movq %r13,0x48(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_136055+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_1
.p2align 0x4
L_430336:
L_136059:
	movl 0x18(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_430345
L_136060:
	movl 0x8(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_430337
L_136061:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xB00)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xAEC8)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	jmp concat_0
.p2align 0x4
L_430337:
L_136062:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,%r15
	andq $0x7,%r15
	cmpq $0x2,%r15
	je L_136094
	cmpq $0x5,%r15
	je L_430343
	cmpq $0x6,%r15
	je L_430341
L_136063:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_136064
L_136090:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xF53,%r15
	je L_430339
	cmpq $0xF54,%r15
	je L_430338
L_136064:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x8(%rbp)
	movq %r14,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_136065+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_430338:
L_136092:
	movq (globalObjptr+0xAFD8)(%rip),%r15
	movq %r15,0x18(%rbp)
L_136076:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xB10)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xF3B8)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_136077+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_430339:
L_136091:
	movq (globalObjptr+0xAC88)(%rip),%r15
	movq %r15,0x18(%rbp)
	jmp L_136076
.p2align 0x4
L_430341:
L_136096:
	shrq $0x3,%r14
	movb %r14b,%r15b
	testb %r15b,%r15b
	jnz L_430342
L_136097:
	movq (globalObjptr+0xD088)(%rip),%r15
	movq %r15,0x18(%rbp)
	jmp L_136076
.p2align 0x4
L_430342:
L_136098:
	movq (globalObjptr+0xD080)(%rip),%r15
	movq %r15,0x18(%rbp)
	jmp L_136076
.p2align 0x4
L_430343:
L_136094:
	movq (globalObjptr+0xAFD8)(%rip),%r15
	movq %r15,0x18(%rbp)
	jmp L_136076
.p2align 0x4
L_430345:
L_136099:
	movl 0x8(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_430353
L_136100:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,%r15
	andq $0x7,%r15
	cmpq $0x2,%r15
	je L_136128
	cmpq $0x5,%r15
	je L_430351
	cmpq $0x6,%r15
	je L_430349
L_136101:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_136102
L_136124:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xF53,%r15
	je L_430347
	cmpq $0xF54,%r15
	je L_430346
L_136102:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x8(%rbp)
	movq %r14,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_136103+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_430346:
L_136126:
	movq (globalObjptr+0xAFD8)(%rip),%r15
	movq %r15,0x18(%rbp)
L_136114:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xB10)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xF3B8)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_136115+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_430347:
L_136125:
	movq (globalObjptr+0xAC88)(%rip),%r15
	movq %r15,0x18(%rbp)
	jmp L_136114
.p2align 0x4
L_430349:
L_136130:
	shrq $0x3,%r14
	movb %r14b,%r15b
	testb %r15b,%r15b
	jnz L_430350
L_136131:
	movq (globalObjptr+0xD088)(%rip),%r15
	movq %r15,0x18(%rbp)
	jmp L_136114
.p2align 0x4
L_430350:
L_136132:
	movq (globalObjptr+0xD080)(%rip),%r15
	movq %r15,0x18(%rbp)
	jmp L_136114
.p2align 0x4
L_430351:
L_136128:
	movq (globalObjptr+0xAFD8)(%rip),%r15
	movq %r15,0x18(%rbp)
	jmp L_136114
.p2align 0x4
L_430353:
L_136133:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,%r15
	andq $0x7,%r15
	cmpq $0x2,%r15
	je L_136165
	cmpq $0x5,%r15
	je L_430359
	cmpq $0x6,%r15
	je L_430357
L_136134:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_136135
L_136161:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xF53,%r15
	je L_430355
	cmpq $0xF54,%r15
	je L_430354
L_136135:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x8(%rbp)
	movq %r14,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_136136+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_430354:
L_136163:
	movq (globalObjptr+0xAFD8)(%rip),%r15
	movq %r15,0x18(%rbp)
L_136147:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xB10)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xF3B8)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_136148+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_430355:
L_136162:
	movq (globalObjptr+0xAC88)(%rip),%r15
	movq %r15,0x18(%rbp)
	jmp L_136147
.p2align 0x4
L_430357:
L_136167:
	shrq $0x3,%r14
	movb %r14b,%r15b
	testb %r15b,%r15b
	jnz L_430358
L_136168:
	movq (globalObjptr+0xD088)(%rip),%r15
	movq %r15,0x18(%rbp)
	jmp L_136147
.p2align 0x4
L_430358:
L_136169:
	movq (globalObjptr+0xD080)(%rip),%r15
	movq %r15,0x18(%rbp)
	jmp L_136147
.p2align 0x4
L_430359:
L_136165:
	movq (globalObjptr+0xAFD8)(%rip),%r15
	movq %r15,0x18(%rbp)
	jmp L_136147
.p2align 0x4
.long 0x1D3B
L_136055:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movl 0x48(%rbp),%r15d
	movl %r15d,0xC(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_136056
L_136170:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_136171+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_136171
.p2align 0x4
.long 0x1D3D
L_136171:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_136056:
	movl 0xC(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_136059
	jmp L_136048
.p2align 0x4
.long 0xA81
L_136065:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movl 0x40(%rbp),%r15d
	movl %r15d,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_136066
L_136088:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_136089+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_136089
.p2align 0x4
.long 0xA2A
L_136089:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_136066:
	movl 0x18(%rbp),%r15d
	cmpl $0x8,%r15d
	je L_430367
	cmpl $0x10,%r15d
	je L_430366
	cmpl $0x20,%r15d
	je L_430365
	cmpl $0x40,%r15d
	je L_430364
L_136067:
	movq 0x30(%rbp),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_136068+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1197
.p2align 0x4
L_430364:
L_136087:
	movq (globalObjptr+0xDFA8)(%rip),%r15
	movq %r15,0x18(%rbp)
	jmp L_136076
.p2align 0x4
L_430365:
L_136086:
	movq (globalObjptr+0xD0F0)(%rip),%r14
	movq %r14,0x18(%rbp)
	jmp L_136076
.p2align 0x4
L_430366:
L_136085:
	movq (globalObjptr+0xDFB0)(%rip),%r14
	movq %r14,0x18(%rbp)
	jmp L_136076
.p2align 0x4
L_430367:
L_136075:
	movq (globalObjptr+0xCE30)(%rip),%r14
	movq %r14,0x18(%rbp)
	jmp L_136076
.p2align 0x4
.long 0x519
L_136077:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_136078
L_136083:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_136084+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_136084
.p2align 0x4
.long 0x51C
L_136084:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_136078:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xB10)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xF3C0)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_136079+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x1D3C
L_136103:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movl 0x48(%rbp),%r15d
	movl %r15d,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_136104
L_136122:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_136123+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_136123
.p2align 0x4
.long 0xB9F
L_136123:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_136104:
	movl 0x18(%rbp),%r15d
	cmpl $0x8,%r15d
	je L_430373
	cmpl $0x10,%r15d
	je L_430372
	cmpl $0x20,%r15d
	je L_430371
	cmpl $0x40,%r15d
	je L_430370
L_136105:
	movq 0x38(%rbp),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_136106+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1197
.p2align 0x4
L_430370:
L_136121:
	movq (globalObjptr+0xDFA8)(%rip),%r15
	movq %r15,0x18(%rbp)
	jmp L_136114
.p2align 0x4
L_430371:
L_136120:
	movq (globalObjptr+0xD0F0)(%rip),%r14
	movq %r14,0x18(%rbp)
	jmp L_136114
.p2align 0x4
L_430372:
L_136119:
	movq (globalObjptr+0xDFB0)(%rip),%r14
	movq %r14,0x18(%rbp)
	jmp L_136114
.p2align 0x4
L_430373:
L_136113:
	movq (globalObjptr+0xCE30)(%rip),%r14
	movq %r14,0x18(%rbp)
	jmp L_136114
.p2align 0x4
.long 0x490
L_136115:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_136116
L_136117:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_136118+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_136118
.p2align 0x4
.long 0x4B1
L_136118:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_136116:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x1AC0)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xE1E8)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xF3C8)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x1D3C
L_136136:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movl 0x48(%rbp),%r15d
	movl %r15d,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_136137
L_136159:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_136160+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_136160
.p2align 0x4
.long 0xB9F
L_136160:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_136137:
	movl 0x18(%rbp),%r15d
	cmpl $0x8,%r15d
	je L_430379
	cmpl $0x10,%r15d
	je L_430378
	cmpl $0x20,%r15d
	je L_430377
	cmpl $0x40,%r15d
	je L_430376
L_136138:
	movq 0x38(%rbp),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_136139+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1197
.p2align 0x4
L_430376:
L_136158:
	movq (globalObjptr+0xDFA8)(%rip),%r15
	movq %r15,0x18(%rbp)
	jmp L_136147
.p2align 0x4
L_430377:
L_136157:
	movq (globalObjptr+0xD0F0)(%rip),%r14
	movq %r14,0x18(%rbp)
	jmp L_136147
.p2align 0x4
L_430378:
L_136156:
	movq (globalObjptr+0xDFB0)(%rip),%r14
	movq %r14,0x18(%rbp)
	jmp L_136147
.p2align 0x4
L_430379:
L_136146:
	movq (globalObjptr+0xCE30)(%rip),%r14
	movq %r14,0x18(%rbp)
	jmp L_136147
.p2align 0x4
.long 0x490
L_136148:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_136149
L_136154:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_136155+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_136155
.p2align 0x4
.long 0x4B1
L_136155:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_136149:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xB10)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xF3B8)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_136150+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x1
L_136068:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_136069
L_136073:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_136074+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_136074
.p2align 0x4
.long 0x451
L_136074:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_136069:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xDD98)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_426+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x459
L_136079:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_136080
L_136081:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_136082+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_136082
.p2align 0x4
.long 0x508
L_136082:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_136080:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xB00)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xAEC8)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x1
L_136106:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_136107
L_136111:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_136112+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_136112
.p2align 0x4
.long 0x451
L_136112:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_136107:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xDD98)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_427+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x1
L_136139:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_136140
L_136144:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_136145+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_136145
.p2align 0x4
.long 0x451
L_136145:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_136140:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xDD98)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_428+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x519
L_136150:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_136151
L_136152:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_136153+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_136153
.p2align 0x4
.long 0x51C
L_136153:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_136151:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x1AC0)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xE1E8)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xF3D0)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x1
bug_426:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_136070
L_136071:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_136072+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_136072
.p2align 0x4
.long 0x451
L_136072:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_136070:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
bug_427:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_136108
L_136109:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_136110+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_136110
.p2align 0x4
.long 0x451
L_136110:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_136108:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
bug_428:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_136141
L_136142:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_136143+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_136143
.p2align 0x4
.long 0x451
L_136143:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_136141:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl fetchOperand_0
.hidden fetchOperand_0
fetchOperand_0:
L_136179:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_136180
L_136258:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_136259+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_136259
.p2align 0x4
.long 0x45F
L_136259:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_136180:
	movq 0x8(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x28(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq %r14,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_136181+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp ty_1
.p2align 0x4
.long 0x654
L_136181:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x18(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x8(%r15),%r14
	movl 0x0(%r15),%r13d
	testl %r13d,%r13d
	jz L_430391
L_136184:
	movq %r14,0x50(%rbp)
	movb $0x0,%r15b
	movzbq %r15b,%r14
	shlq $0x3,%r14
	orq $0x6,%r14
	movq %r14,0x18(%rbp)
	movq $0x11,0x40(%rbp)
	movq $0x11,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_136185+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1182
.p2align 0x4
L_430391:
L_136183:
	movq 0x20(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp toString_546
.p2align 0x4
.long 0x103B
L_136185:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_136186
L_136256:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_136257+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_136257
.p2align 0x4
.long 0xFB9
L_136257:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_136186:
	movq $0x493,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x40(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_136187+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_1
.p2align 0x4
.long 0x103B
L_136187:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movl 0x40(%rbp),%r15d
	movl %r15d,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_136188
L_136254:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_136255+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_136255
.p2align 0x4
.long 0x103C
L_136255:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_136188:
	movl 0x18(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_430393
L_136189:
	movq $0x1EA3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x493,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq %r14,0x0(%r13)
	movq %r13,0x38(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_136190+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_1
.p2align 0x4
L_430393:
L_136247:
	movq 0x0(%rbp),%r15
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_136183
L_136248:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xF59,%r14
	je L_136196
	cmpq $0xF5B,%r14
	je L_136196
	cmpq $0xF5E,%r14
	je L_136196
	cmpq $0xF5F,%r14
	je L_430395
	cmpq $0xF60,%r14
	je L_430394
	jmp L_136183
.p2align 0x4
L_430394:
L_136196:
	movq 0x0(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_136197+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_546
.p2align 0x4
L_430395:
L_136252:
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r15
.p2align 0x4,,0x7
L_136238:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_136183
L_136239:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xF59,%r14
	je L_136196
	cmpq $0xF5B,%r14
	je L_136196
	cmpq $0xF5E,%r14
	je L_136196
	cmpq $0xF5F,%r14
	je L_430397
	cmpq $0xF60,%r14
	je L_136196
	jmp L_136183
.p2align 0x4
L_430397:
L_136243:
	movq 0x0(%r15),%r15
	jmp L_136238
.p2align 0x4
.long 0x1933
L_136190:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movl 0x38(%rbp),%r15d
	movl %r15d,0x8(%rbp)
	testl %r15d,%r15d
	jz L_136183
L_136193:
	movq 0x0(%rbp),%r15
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_136183
L_136194:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xF59,%r14
	je L_136196
	cmpq $0xF5B,%r14
	je L_136196
	cmpq $0xF5E,%r14
	je L_136196
	cmpq $0xF5F,%r14
	je L_430408
	cmpq $0xF60,%r14
	je L_136196
	jmp L_136183
.p2align 0x4
L_430408:
L_136236:
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r15
	jmp L_136238
.p2align 0x4
.long 0x1A74
L_136197:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_136198+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp ty_1
.p2align 0x4
.long 0x462
L_136198:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_136199
L_136232:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_136233+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_136233
.p2align 0x4
.long 0x463
L_136233:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_136199:
	movq 0x10(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,%r15
	andq $0x7,%r15
	cmpq $0x2,%r15
	je L_136227
	cmpq $0x5,%r15
	je L_430419
	cmpq $0x6,%r15
	je L_430417
L_136200:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_136201
L_136223:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xF53,%r15
	je L_430415
	cmpq $0xF54,%r15
	je L_430414
L_136201:
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	movq %r14,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_136202+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_430414:
L_136225:
	movq (globalObjptr+0xAFD8)(%rip),%r15
	movq %r15,0x10(%rbp)
L_136213:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xB10)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xF3B8)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_136214+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_430415:
L_136224:
	movq (globalObjptr+0xAC88)(%rip),%r15
	movq %r15,0x10(%rbp)
	jmp L_136213
.p2align 0x4
L_430417:
L_136229:
	shrq $0x3,%r14
	movb %r14b,%r15b
	testb %r15b,%r15b
	jnz L_430418
L_136230:
	movq (globalObjptr+0xD088)(%rip),%r15
	movq %r15,0x10(%rbp)
	jmp L_136213
.p2align 0x4
L_430418:
L_136231:
	movq (globalObjptr+0xD080)(%rip),%r15
	movq %r15,0x10(%rbp)
	jmp L_136213
.p2align 0x4
L_430419:
L_136227:
	movq (globalObjptr+0xAFD8)(%rip),%r15
	movq %r15,0x10(%rbp)
	jmp L_136213
.p2align 0x4
.long 0x5E2
L_136202:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movl 0x38(%rbp),%r15d
	movl %r15d,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_136203
L_136221:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_136222+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_136222
.p2align 0x4
.long 0xBC9
L_136222:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_136203:
	movl 0x10(%rbp),%r15d
	cmpl $0x8,%r15d
	je L_430425
	cmpl $0x10,%r15d
	je L_430424
	cmpl $0x20,%r15d
	je L_430423
	cmpl $0x40,%r15d
	je L_430422
L_136204:
	movq 0x18(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_136205+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1197
.p2align 0x4
L_430422:
L_136220:
	movq (globalObjptr+0xDFA8)(%rip),%r15
	movq %r15,0x10(%rbp)
	jmp L_136213
.p2align 0x4
L_430423:
L_136219:
	movq (globalObjptr+0xD0F0)(%rip),%r14
	movq %r14,0x10(%rbp)
	jmp L_136213
.p2align 0x4
L_430424:
L_136218:
	movq (globalObjptr+0xDFB0)(%rip),%r14
	movq %r14,0x10(%rbp)
	jmp L_136213
.p2align 0x4
L_430425:
L_136212:
	movq (globalObjptr+0xCE30)(%rip),%r14
	movq %r14,0x10(%rbp)
	jmp L_136213
.p2align 0x4
.long 0x2B
L_136214:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_136215
L_136216:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_136217+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_136217
.p2align 0x4
.long 0x2C
L_136217:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_136215:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xB10)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xF3C0)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x1
L_136205:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_136206
L_136210:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_136211+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_136211
.p2align 0x4
.long 0x451
L_136211:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_136206:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xDD98)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_429+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x1
bug_429:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_136207
L_136208:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_136209+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_136209
.p2align 0x4
.long 0x451
L_136209:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_136207:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl usesStack_0
.hidden usesStack_0
usesStack_0:
loopS_16:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_136261
L_136297:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_136298+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_136298
.p2align 0x4
.long 0x451
L_136298:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_136261:
	movq 0x0(%rbp),%r15
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_136262
L_136263:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xF59,%r14
	je L_136265
	cmpq $0xF5B,%r14
	je L_430442
	cmpq $0xF5F,%r14
	je L_430431
	cmpq $0xF60,%r14
	je L_430430
L_136262:
	movl $0x0,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_430430:
L_136296:
	movq 0x0(%rbp),%r14
	movq 0x8(%r14),%r15
	movq 0x10(%r14),%r14
	movq %r14,0x0(%rbp)
L_136282:
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_136283+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp usesStack_0
.p2align 0x4
L_430431:
L_136295:
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r15
.p2align 0x4,,0x7
L_136275:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_136262
L_136276:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xF59,%r14
	je L_136265
	cmpq $0xF5B,%r14
	je L_430434
	cmpq $0xF5F,%r14
	je L_430433
	cmpq $0xF60,%r14
	je L_430432
	jmp L_136262
.p2align 0x4
L_430432:
L_136281:
	movq 0x10(%r15),%r14
	movq %r14,0x0(%rbp)
	movq 0x8(%r15),%r15
	jmp L_136282
.p2align 0x4
L_430433:
L_136280:
	movq 0x0(%r15),%r15
	jmp L_136275
.p2align 0x4
L_430434:
L_136278:
	movq 0x0(%r15),%r15
.p2align 0x4,,0x7
L_136268:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_136262
L_136269:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xF59,%r14
	je L_430438
	cmpq $0xF5B,%r14
	je L_430437
	cmpq $0xF5F,%r14
	je L_430436
	cmpq $0xF60,%r14
	je L_430435
	jmp L_136262
.p2align 0x4
L_430435:
L_136293:
	movq 0x10(%r15),%r14
	movq %r14,0x0(%rbp)
	movq 0x8(%r15),%r15
	jmp L_136282
.p2align 0x4
L_430436:
L_136273:
	movq 0x0(%r15),%r15
	jmp L_136275
.p2align 0x4
L_430437:
L_136271:
	movq 0x0(%r15),%r15
	jmp L_136268
.p2align 0x4
L_430438:
L_136265:
	movl $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_430442:
L_136266:
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r15
	jmp L_136268
.p2align 0x4
.long 0x4AF
L_136283:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movl 0x10(%rbp),%r15d
	movl %r15d,0x8(%rbp)
	testl %r15d,%r15d
	jnz L_136265
L_136285:
	movq 0x0(%rbp),%r15
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_136262
L_136286:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xF59,%r14
	je L_136265
	cmpq $0xF5B,%r14
	je L_430448
	cmpq $0xF5F,%r14
	je L_430447
	cmpq $0xF60,%r14
	je L_430446
	jmp L_136262
.p2align 0x4
L_430446:
L_136291:
	movq 0x0(%rbp),%r14
	movq 0x8(%r14),%r15
	movq 0x10(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_136282
.p2align 0x4
L_430447:
L_136290:
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r15
	jmp L_136275
.p2align 0x4
L_430448:
L_136288:
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r15
	jmp L_136268
.text
.p2align 0x4
.globl x_1317
.hidden x_1317
x_1317:
L_136299:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_136300
L_136313:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_136314+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_136314
.p2align 0x4
.long 0x45B
L_136314:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_136300:
	movq 0x10(%rbp),%r15
loop_1428:
	movq 0x8(%r15),%r14
	cmpq $0x1,%r14
	je up_1
	cmpq $0x2,%r14
	je L_430452
L_136301:
	movq 0x8(%r14),%r15
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x30(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_136302+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1317
.p2align 0x4
L_430452:
L_136307:
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	jne L_430455
L_136309:
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	movq 0x0(%r14),%r15
	cmpq $0x1,%r15
	je L_430454
	cmpq $0x2,%r15
	je L_430453
L_136310:
	movq 0x10(%r15),%r14
	cmpq %r14,0x10(%r11)
	sete %al
	movzbl %al,%eax
	movl %eax,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_430453:
L_136312:
	movl $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_430454:
L_136304:
	movl $0x0,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_430455:
L_136308:
	movq 0x0(%rbp),%r14
	movq 0x10(%r15),%r13
	cmpq %r13,0x10(%r14)
	sete %al
	movzbl %al,%eax
	movl %eax,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x51E
L_136302:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movl 0x20(%rbp),%r14d
	movl %r14d,0x18(%rbp)
	testl %r14d,%r14d
	jz L_136304
L_136305:
	movq 0x10(%rbp),%r15
	jmp loop_1428
.text
.p2align 0x4
.globl insert_0
.hidden insert_0
insert_0:
L_136315:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_136316
L_136396:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_136397+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_136397
.p2align 0x4
.long 0x45F
L_136397:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_136316:
	movq 0x8(%rbp),%r15
	movq 0x58(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x50(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x48(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x40(%r15),%r13
	movq %r13,0x28(%rbp)
	movq 0x38(%r15),%r13
	movq %r13,0x30(%rbp)
	movq 0x30(%r15),%r13
	movq %r13,0x38(%rbp)
	movq 0x28(%r15),%r13
	movq %r13,0x40(%rbp)
	movq 0x20(%r15),%r13
	movq %r13,0x48(%rbp)
	movq 0x18(%r15),%r13
	movq %r13,0x50(%rbp)
	movl 0x0(%r15),%r13d
	movl %r13d,0x58(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x60(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x68(%rbp)
	movq %r14,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_136317+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x1D41
L_136317:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movl 0x78(%rbp),%r15d
	movl %r15d,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_136318
L_136394:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_136395+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_136395
.p2align 0x4
.long 0x1D63
L_136395:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_136318:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x70(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x78(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x80(%rbp)
	addq $0x28,%r12
	movl 0x8(%rbp),%r11d
	movl %r11d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	movq (globalObjptr+0xEC10)(%rip),%r15
	movq %r15,0x18(%r13)
	movq 0x10(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_136319+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x1D42
L_136319:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movl 0x90(%rbp),%r15d
	movl %r15d,0xC(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_136320
L_136392:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_136393+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_136393
.p2align 0x4
.long 0x1D0B
L_136393:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_136320:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x88(%rbp)
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0xC(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xEC10)(%rip),%r15
	movq %r15,0x18(%r13)
	movq 0x10(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_136321+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x1D43
L_136321:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movl 0x98(%rbp),%r15d
	movl %r15d,0xC(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_136322
L_136390:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_136391+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_136391
.p2align 0x4
.long 0x1D62
L_136391:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_136322:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x90(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x98(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0xA0(%rbp)
	addq $0x28,%r12
	movl 0xC(%rbp),%r11d
	movl %r11d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	movq (globalObjptr+0xEC10)(%rip),%r15
	movq %r15,0x18(%r13)
	movq 0x18(%rbp),%r14
	movb 0x0(%r14),%r15b
	cmpb $0x1,%r15b
	je L_430463
	cmpb $0x2,%r15b
	je L_430462
L_136323:
	movq (globalObjptr+0xF48)(%rip),%r15
	movq $0x33,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x48(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%r15),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x18(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x20(%rbp)
	movq %r14,0xB0(%rbp)
	addq $0xB0,%rbp
	leaq (L_136324+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_430462:
L_136383:
	movq (globalObjptr+0xF48)(%rip),%r15
	movq $0x33,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x48(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%r15),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x18(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x20(%rbp)
	movq %r14,0xB0(%rbp)
	addq $0xB0,%rbp
	leaq (L_136384+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_430463:
L_136346:
	movq 0x20(%rbp),%r13
	movq %r13,0xB0(%rbp)
	addq $0xB0,%rbp
	leaq (L_136347+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x1D44
L_136324:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movl 0xB0(%rbp),%r15d
	movl %r15d,0xC(%rbp)
	movl %r15d,0xB0(%rbp)
	movq $0x3,0xB8(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xB0,%rbp
	leaq (L_136325+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x1D5E
L_136384:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movl 0xB0(%rbp),%r15d
	movl %r15d,0x8(%rbp)
	movl %r15d,0xB0(%rbp)
	movq $0x3,0xB8(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xB0,%rbp
	leaq (L_136385+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x1D4C
L_136347:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movl 0xB0(%rbp),%r15d
	movl %r15d,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_136348
L_136381:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_136382+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_136382
.p2align 0x4
.long 0x1D5D
L_136382:
	addq $0xFFFFFFFFFFFFFF50,%rbp
L_136348:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x8(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xCE38)(%rip),%r15
	movq %r15,0x18(%r13)
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x8(%r11)
	addq $0x18,%r12
	movq %r13,0x0(%r11)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r14,1)
	movq %r11,0x0(%r15)
	movq $0x1143,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x2115,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x18(%rbp)
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq 0x10(%rbp),%r15
	movq %r15,0xB0(%rbp)
	addq $0xB0,%rbp
	leaq (L_136349+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x1D45
L_136325:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movq 0xB0(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq %r15,0xB0(%rbp)
	movq $0x3,0xB8(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xB0,%rbp
	leaq (L_136326+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x1D5F
L_136385:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movq 0xB0(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq %r15,0xB0(%rbp)
	movq $0x1,0xB8(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xB0,%rbp
	leaq (L_136386+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x1D4D
L_136349:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movl 0xB0(%rbp),%r15d
	movl %r15d,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_136350
L_136379:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_136380+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_136380
.p2align 0x4
.long 0x1D5C
L_136380:
	addq $0xFFFFFFFFFFFFFF50,%rbp
L_136350:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x20(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x28(%rbp)
	addq $0x28,%r12
	movl 0x8(%rbp),%r11d
	movl %r11d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	movq (globalObjptr+0xEC10)(%rip),%r15
	movq %r15,0x18(%r13)
	movq (globalObjptr+0xF20)(%rip),%r15
	movq $0x31,0xFFFFFFFFFFFFFFF8(%r15)
	movq (globalObjptr+0xF48)(%rip),%r15
	movq $0x33,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x38(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x30(%rbp)
	movq 0x0(%r14),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x70(%rbp)
	movq 0x0(%r11),%r10
	movq %r10,0x78(%rbp)
	movq %r13,0xB0(%rbp)
	addq $0xB0,%rbp
	leaq (L_136351+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x1D46
L_136326:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movq 0xB0(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_136327
L_136344:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_136345+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_136345
.p2align 0x4
.long 0x1D4B
L_136345:
	addq $0xFFFFFFFFFFFFFF50,%rbp
L_136327:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x211B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq (globalObjptr+0xF48)(%rip),%r13
	movq %r13,0x10(%rbp)
	movq 0x70(%rbp),%r14
	movq 0x78(%rbp),%r13
	movl 0x8(%rbp),%ecx
	movq %r15,0x8(%rbp)
	movq %r13,%r15
L_136328:
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x18(%rbp)
	movl %ecx,0x0(%r13)
	movq %r14,0x8(%r13)
	movq %r15,0x10(%r13)
	addq $0x28,%r12
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xEC10)(%rip),%r15
	movq %r15,0x18(%r13)
	movl 0x58(%rbp),%r15d
	movl %r15d,0xB0(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0xB8(%rbp)
	addq $0xB0,%rbp
	leaq (L_136329+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp gc_0
.p2align 0x4
.long 0x1D60
L_136386:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movq 0xB0(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_136387
L_136388:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_136389+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_136389
.p2align 0x4
.long 0x1D61
L_136389:
	addq $0xFFFFFFFFFFFFFF50,%rbp
L_136387:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x211B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq (globalObjptr+0xF48)(%rip),%r13
	movq %r13,0x10(%rbp)
	movq 0x90(%rbp),%r14
	movq 0x98(%rbp),%r13
	movl 0xC(%rbp),%ecx
	movq %r15,0x8(%rbp)
	movq %r13,%r15
	jmp L_136328
.p2align 0x4
.long 0x1D4E
L_136351:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movl 0xB0(%rbp),%r15d
	movl %r15d,0xC(%rbp)
	movl %r15d,0xB0(%rbp)
	movq $0x3,0xB8(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xB0,%rbp
	leaq (L_136352+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x1D47
L_136329:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movl 0xB0(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0x28(%rbp)
	movb 0xC0(%rbp),%r15b
	movb %r15b,0x24(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0x38(%rbp)
	movl 0xD8(%rbp),%r15d
	movl %r15d,0x48(%rbp)
	movb 0xDC(%rbp),%r15b
	movb %r15b,0x25(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_136330
L_136342:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_136343+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_136343
.p2align 0x4
.long 0x1D4A
L_136343:
	addq $0xFFFFFFFFFFFFFF50,%rbp
L_136330:
	movq $0x1243,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x50,%r12
	movq %r12,(gcState+0x0)(%rip)
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movl 0x20(%rbp),%r14d
	movl %r14d,0x8(%r15)
	movl %r14d,0xC(%r15)
	movl %r14d,0x10(%r15)
	movl 0x48(%rbp),%r13d
	movl %r13d,0x14(%r15)
	movl %r14d,0x18(%r15)
	movl %r14d,0x1C(%r15)
	movzbl 0x24(%rbp),%r14d
	movzbl 0x25(%rbp),%r13d
	shll $0x8,%r13d
	orl %r13d,%r14d
	movl %r14d,0x20(%r15)
	movl $0x0,0x24(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x28(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x30(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x38(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x40(%r15)
	movq %r15,0x70(%rbp)
	movq (globalObjptr+0xF20)(%rip),%r15
	movq $0x31,0xFFFFFFFFFFFFFFF8(%r15)
	movq (globalObjptr+0xF48)(%rip),%r15
	movq $0x33,0xFFFFFFFFFFFFFFF8(%r15)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1433,%rcx
	movq $0x3,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_136331+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_136331
.p2align 0x4
.long 0x1D48
L_136331:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movq %rax,0x78(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_1429:
	cmpq $0x3,%r15
	jnl L_430472
L_136336:
	movl %r15d,%r14d
	cmpl $0x0,%r14d
	je L_430471
	cmpl $0x1,%r14d
	je L_430470
	cmpl $0x2,%r14d
	je L_430469
L_136337:
	movq (globalObjptr+0x4C0)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_430469:
L_136341:
	movq 0x8(%rbp),%r14
L_136339:
	movq 0x78(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r14,0x0(%r13,%r15,8)
	incq %r15
	jmp loop_1429
.p2align 0x4
L_430470:
L_136340:
	movq 0x0(%rbp),%r14
	jmp L_136339
.p2align 0x4
L_430471:
L_136338:
	movq $0x2,%r14
	jmp L_136339
.p2align 0x4
L_430472:
L_136332:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_136333
L_136334:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_136335+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_136335
.p2align 0x4
.long 0x1D49
L_136335:
	addq $0xFFFFFFFFFFFFFF50,%rbp
L_136333:
	movq 0x78(%rbp),%r15
	movq $0x907,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x213D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x20,%r12
	movq %r15,0x0(%r14)
	movq 0x70(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x88(%rbp),%r15
	movq %r15,0x10(%r14)
	movq $0x35,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x30,%r12
	movq (globalObjptr+0xF48)(%rip),%r14
	movq %r14,0x8(%r13)
	movq 0x80(%rbp),%r14
	movq %r14,0x10(%r13)
	movq $0x1,0x18(%r13)
	movq (globalObjptr+0xF20)(%rip),%r11
	movq %r11,0x20(%r13)
	movq $0x31,0xFFFFFFFFFFFFFFF8(%r11)
	movq $0x212F,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	addq $0x50,%r12
	movq 0x50(%rbp),%r9
	movq %r9,0x0(%r10)
	movl 0x20(%rbp),%r9d
	movl %r9d,0x8(%r10)
	movl %r9d,0xC(%r10)
	movl 0x48(%rbp),%r8d
	movl %r8d,0x10(%r10)
	movl %r9d,0x14(%r10)
	movl %r9d,0x18(%r10)
	movl %r9d,0x1C(%r10)
	movzbl 0x25(%rbp),%r9d
	movzbl 0x24(%rbp),%r8d
	shll $0x8,%r8d
	orl %r8d,%r9d
	movl %r9d,0x20(%r10)
	movl $0x0,0x24(%r10)
	movq 0x58(%rbp),%r9
	movq %r9,0x28(%r10)
	movq 0x38(%rbp),%r9
	movq %r9,0x30(%r10)
	movq 0x30(%rbp),%r9
	movq %r9,0x38(%r10)
	movq 0x28(%rbp),%r9
	movq %r9,0x40(%r10)
	movq (globalObjptr+0xF40)(%rip),%r9
	movq $0x907,0xFFFFFFFFFFFFFFF8(%r9)
	movq $0x2139,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	addq $0x18,%r12
	movq %r9,0x0(%r8)
	movq 0xA0(%rbp),%r9
	movq %r9,0x8(%r8)
	movq $0x35,0x0(%r12)
	movq %r12,%rsp
	addq $0x8,%rsp
	movq %r8,0x0(%rsp)
	movq %r10,0x18(%rsp)
	addq $0x30,%r12
	movq 0x10(%rbp),%r10
	movq %r10,0x8(%rsp)
	movq %r15,0x10(%rsp)
	movq %r11,0x20(%rsp)
	movq $0x31,0xFFFFFFFFFFFFFFF8(%r11)
	movq $0x35,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x30,%r12
	movq 0x68(%rbp),%r10
	movq %r10,0x0(%r15)
	movq 0x60(%rbp),%r10
	movq %r10,0x8(%r15)
	movq %r9,0x10(%r15)
	movq $0x1,0x18(%r15)
	movq %r11,0x20(%r15)
	movq 0x40(%rbp),%r11
	movq 0x0(%r11),%r10
	movq $0x21A7,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r15,0x0(%r9)
	movq %r10,0x8(%r9)
	addq $0x18,%r12
	movq $0x21A7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %rsp,0x0(%r15)
	movq %r9,0x8(%r15)
	addq $0x18,%r12
	movq $0x21A7,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r13,0x0(%r10)
	movq %r15,0x8(%r10)
	addq $0x18,%r12
	movq %r11,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r10,0x0(%r11)
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1D4E
L_136352:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movq 0xB0(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq %r15,0xB0(%rbp)
	movq $0x1,0xB8(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xB0,%rbp
	leaq (L_136353+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x1D4E
L_136353:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movq 0xB0(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_136354
L_136377:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_136378+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_136378
.p2align 0x4
.long 0x1D5B
L_136378:
	addq $0xFFFFFFFFFFFFFF50,%rbp
L_136354:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0xBB3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x90(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0xA0(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0xB0(%rbp)
	addq $0xB0,%rbp
	leaq (L_136355+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x1D4F
L_136355:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movl 0xB0(%rbp),%r15d
	movl %r15d,0xC(%rbp)
	movl %r15d,0xB0(%rbp)
	movq $0x3,0xB8(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xB0,%rbp
	leaq (L_136356+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x1D50
L_136356:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movq 0xB0(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq %r15,0xB0(%rbp)
	movq $0x3,0xB8(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xB0,%rbp
	leaq (L_136357+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x1D51
L_136357:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movq 0xB0(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_136358
L_136375:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_136376+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_136376
.p2align 0x4
.long 0x1D5A
L_136376:
	addq $0xFFFFFFFFFFFFFF50,%rbp
L_136358:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0xBB3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x80(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x3979,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x90(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0xB0(%rbp)
	movl $0x2,0xB8(%rbp)
	addq $0xB0,%rbp
	leaq (L_136359+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_27
.p2align 0x4
.long 0x1D52
L_136359:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movq 0xB0(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_136360
L_136373:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_136374+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_136374
.p2align 0x4
.long 0x1D59
L_136374:
	addq $0xFFFFFFFFFFFFFF50,%rbp
L_136360:
	movq $0x2133,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x10(%r15)
	movq $0x35,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x30,%r12
	movq (globalObjptr+0xF48)(%rip),%r15
	movq %r15,0x8(%r14)
	movq 0x28(%rbp),%r15
	movq %r15,0x10(%r14)
	movq $0x1,0x18(%r14)
	movq (globalObjptr+0xF20)(%rip),%r15
	movq %r15,0x20(%r14)
	movq 0x40(%rbp),%r15
	movq 0x0(%r15),%r13
	movq $0x21A7,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq %r11,0x0(%r15)
	movq 0x48(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%r15),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x70(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x78(%rbp)
	movq %r14,0xB0(%rbp)
	addq $0xB0,%rbp
	leaq (L_136361+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x1D53
L_136361:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movl 0xB0(%rbp),%r15d
	movl %r15d,0xC(%rbp)
	movl %r15d,0xB0(%rbp)
	movq $0x3,0xB8(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xB0,%rbp
	leaq (L_136362+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x1D54
L_136362:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movq 0xB0(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq %r15,0xB0(%rbp)
	movq $0x1,0xB8(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xB0,%rbp
	leaq (L_136363+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x1D55
L_136363:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movq 0xB0(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_136364
L_136371:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_136372+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_136372
.p2align 0x4
.long 0x1D58
L_136372:
	addq $0xFFFFFFFFFFFFFF50,%rbp
L_136364:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x211B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x212B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq %r12,(gcState+0x0)(%rip)
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x30(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1437,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_136365+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_136365
.p2align 0x4
.long 0x1D56
L_136365:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movq %rax,0x28(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_1430:
	cmpq $0x1,%r15
	jnl L_430478
L_136370:
	movq 0x28(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_1430
.p2align 0x4
L_430478:
L_136366:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_136367
L_136368:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_136369+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_136369
.p2align 0x4
.long 0x1D57
L_136369:
	addq $0xFFFFFFFFFFFFFF50,%rbp
L_136367:
	movq 0x28(%rbp),%r13
	movq $0x33,0xFFFFFFFFFFFFFFF8(%r13)
	movq 0x10(%rbp),%r14
	movq 0x20(%rbp),%r15
	movl 0x8(%rbp),%ecx
	movq %r13,0x10(%rbp)
	movq 0x18(%rbp),%r13
	movq %r13,0x8(%rbp)
	jmp L_136328
.text
.p2align 0x4
.globl gc_0
.hidden gc_0
gc_0:
L_136398:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_136399
L_136427:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_136428+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_136428
.p2align 0x4
.long 0x494
L_136428:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_136399:
	movq 0x8(%rbp),%r14
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r15
	movl 0x0(%rbp),%r14d
	testl %r14d,%r14d
	jnz x_1610
L_136400:
x_488:
	movl 0x0(%r15),%r14d
	movl %r14d,0x0(%rbp)
	movb 0x4(%r15),%r14b
	movb %r14b,0x4(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x8(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x8(%r15),%r14
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r11
	movq 0x0(%r11),%r10
	movq 0x8(%r11),%r9
	movq 0x0(%r9),%r8
	cmpq $0x1,%r8
	je L_430481
L_136401:
	movq %r13,0x30(%rbp)
	movq 0x0(%r8),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_136402+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_430481:
L_136421:
	movq %r10,0x8(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_136422+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
x_1610:
	movq %r13,%r15
	jmp x_488
.p2align 0x4
.long 0x5EF
L_136402:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_136403
L_136419:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_136420+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_136420
.p2align 0x4
.long 0x4E9
L_136420:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_136403:
	movq $0x493,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x28(%rbp)
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x5,0x8(%r15)
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r13),%r11
	movq 0x8(%r13),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_430483
L_136404:
	movq %r14,0x40(%rbp)
	movq 0x0(%r9),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (word_44+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_430483:
L_136414:
	movq %r11,0x8(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_136415+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x1
L_136422:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (bug_431+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x785
word_44:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_136405
L_136412:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_136413+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_136413
.p2align 0x4
.long 0x4F1
L_136413:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_136405:
	movq $0x1EA3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x493,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq %r14,0x0(%r13)
	movq $0x37CD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x20,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0x18(%rbp)
	movl $0x3,0x20(%rbp)
	addq $0x18,%rbp
	leaq (L_136406+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_16
.p2align 0x4
.long 0x1
L_136415:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (bug_430+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x1
bug_431:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_136423
L_136424:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_136425+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_136425
.p2align 0x4
.long 0x451
L_136425:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_136423:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x521
L_136406:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_136407+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1609
.p2align 0x4
.long 0x1
bug_430:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_136416
L_136417:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_136418+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_136418
.p2align 0x4
.long 0x451
L_136418:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_136416:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x2B
L_136407:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movb 0x20(%rbp),%r15b
	movb %r15b,0x5(%rbp)
	movzbq %r15b,%r14
	movzbq 0x4(%rbp),%r15
	shlq $0x8,%r15
	orq %r15,%r14
	movb $0xB,%r15b
	movzbq %r15b,%r13
	shlq $0x10,%r13
	orq %r13,%r14
	shlq $0x3,%r14
	orq $0x7,%r14
	movq %r14,0x20(%rbp)
	movl $0x3,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_136408+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_17
.p2align 0x4
.long 0x2B
L_136408:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_136409
L_136410:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_136411+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_136411
.p2align 0x4
.long 0x4E8
L_136411:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_136409:
	movq $0x1159,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movw $0x0,%r14w
	movzwl %r14w,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xD978)(%rip),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xC68)(%rip),%r15
	movq %r15,0x18(%rbp)
	movl 0x0(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	movb $0x1,0x2C(%rbp)
	movq $0x0,0x30(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x38(%rbp)
	movb $0x1,0x10(%rbp)
	movl $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl primApp_0
.hidden primApp_0
primApp_0:
L_136429:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_136430
L_136464:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_136465+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_136465
.p2align 0x4
.long 0x63C
L_136465:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_136430:
	movq 0x20(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	addq $0x50,%rbp
	leaq (L_136431+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0xA9F
L_136431:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movl 0x50(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_136432
L_136462:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_136463+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_136463
.p2align 0x4
.long 0xAA2
L_136463:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_136432:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movq %r12,(gcState+0x0)(%rip)
	movl 0x20(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xCE38)(%rip),%r15
	movq %r15,0x18(%r13)
	movq %r13,0x48(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1433,%rcx
	movq $0x2,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_136433+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_136433
.p2align 0x4
.long 0x1A1C
L_136433:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq %rax,0x20(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_1431:
	cmpq $0x2,%r15
	jnl L_430492
L_136457:
	movl %r15d,%r14d
	cmpl $0x0,%r14d
	je L_430491
	cmpl $0x1,%r14d
	je L_430490
L_136458:
	movq (globalObjptr+0x4A8)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_430490:
L_136461:
	movq 0x8(%rbp),%r14
L_136460:
	movq 0x20(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r14,0x0(%r13,%r15,8)
	incq %r15
	jmp loop_1431
.p2align 0x4
L_430491:
L_136459:
	movq 0x10(%rbp),%r14
	jmp L_136460
.p2align 0x4
L_430492:
L_136434:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_136435
L_136455:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_136456+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_136456
.p2align 0x4
.long 0x4AD
L_136456:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_136435:
	movq 0x20(%rbp),%r15
	movq $0x907,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x23BB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x28(%rbp),%r11
	movq %r11,0x8(%r14)
	movq $0x2127,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r10,0x50(%rbp)
	movq %r14,0x8(%r10)
	addq $0x20,%r12
	movq %r15,0x0(%r10)
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%r10)
	movq $0x1143,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r13,0x0(%r15)
	movq %r11,0x8(%r15)
	movq $0x2115,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x58(%rbp)
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq 0x30(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x60(%rbp)
	movq 0x0(%r14),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x68(%rbp)
	movq 0x0(%r11),%r10
	movq %r10,0x70(%rbp)
	movq %r13,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_136436+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x1D64
L_136436:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movl 0x80(%rbp),%r15d
	movl %r15d,0x48(%rbp)
	movl %r15d,0x80(%rbp)
	movq $0x3,0x88(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x80,%rbp
	leaq (L_136437+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x1D64
L_136437:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq %r15,0x80(%rbp)
	movq $0x1,0x88(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x80,%rbp
	leaq (L_136438+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x1D64
L_136438:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_136439
L_136453:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_136454+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_136454
.p2align 0x4
.long 0x1D69
L_136454:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_136439:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0xBB3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x78(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x38(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_136440+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x1D65
L_136440:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movl 0x88(%rbp),%r15d
	movl %r15d,0x48(%rbp)
	movl %r15d,0x88(%rbp)
	movq $0x3,0x90(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x88,%rbp
	leaq (L_136441+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x1D66
L_136441:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq %r15,0x88(%rbp)
	movq $0x3,0x90(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x88,%rbp
	leaq (L_136442+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x1D67
L_136442:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_136443
L_136451:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_136452+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_136452
.p2align 0x4
.long 0x1D68
L_136452:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_136443:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0xBB3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x40(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x3979,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x68(%rbp)
	movl $0x2,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_136444+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_27
.p2align 0x4
.long 0xED3
L_136444:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_136445
L_136449:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_136450+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_136450
.p2align 0x4
.long 0xEF5
L_136450:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_136445:
	movq $0x2133,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq %r12,(gcState+0x0)(%rip)
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0x68(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1437,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_136446+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_136446
.p2align 0x4
.long 0x1C9A
L_136446:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	xorq %r15,%r15
	movq %rax,%r14
.p2align 0x4,,0x7
loop_1432:
	cmpq $0x1,%r15
	jnl L_430497
L_136448:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_1432
.p2align 0x4
L_430497:
L_136447:
	movq $0x33,0xFFFFFFFFFFFFFFF8(%r14)
	movq %r14,0x8(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl heapCheck_0
.hidden heapCheck_0
heapCheck_0:
L_136466:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_136467
L_136575:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_136576+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_136576
.p2align 0x4
.long 0x1D82
L_136576:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_136467:
	movq 0x0(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_136468+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp insert_0
.p2align 0x4
.long 0x1D6A
L_136468:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_136469
L_136573:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_136574+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_136574
.p2align 0x4
.long 0x1D81
L_136574:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_136469:
	movq $0x17D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x68(%rbp)
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x50(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_136470+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x1D6B
L_136470:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movl 0x78(%rbp),%r15d
	movl %r15d,0xC(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_136471
L_136571:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_136572+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_136572
.p2align 0x4
.long 0x1D80
L_136572:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_136471:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movq %r12,(gcState+0x0)(%rip)
	movl 0xC(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xCE38)(%rip),%r15
	movq %r15,0x18(%r13)
	movq %r13,0x50(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1433,%rcx
	movq $0x2,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_136472+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_136472
.p2align 0x4
.long 0x1D6C
L_136472:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq %rax,0x58(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_1433:
	cmpq $0x2,%r15
	jnl L_430503
L_136566:
	movl %r15d,%r14d
	cmpl $0x0,%r14d
	je L_430502
	cmpl $0x1,%r14d
	je L_430501
L_136567:
	movq (globalObjptr+0x4A8)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_430501:
L_136570:
	movq (globalWord64+0x100)(%rip),%r14
L_136569:
	movq 0x58(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r14,0x0(%r13,%r15,8)
	incq %r15
	jmp loop_1433
.p2align 0x4
L_430502:
L_136568:
	movq (globalWord64+0xFD0)(%rip),%r14
	jmp L_136569
.p2align 0x4
L_430503:
L_136473:
	movq 0x58(%rbp),%r15
	movq $0x907,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x48(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x8(%r15),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x78(%rbp)
	movq 0x0(%r13),%r10
	movq %r10,0x80(%rbp)
	movq 0x0(%r11),%r15
	cmpq $0x1,%r15
	je L_430504
L_136474:
	movq 0x0(%r15),%r13
	movq %r13,0x90(%rbp)
	movq %r14,0x98(%rbp)
	addq $0x90,%rbp
	leaq (word_45+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_430504:
L_136561:
	movq 0x80(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_136562+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x1D6D
word_45:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_136475
L_136559:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_136560+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_136560
.p2align 0x4
.long 0x1D7F
L_136560:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_136475:
	movq $0x1EA3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x493,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq %r14,0x0(%r13)
	movq $0x23BB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x2127,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x88(%rbp)
	movq %r15,0x8(%r14)
	addq $0x20,%r12
	movq 0x58(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0xA,0x10(%r14)
	movq 0x78(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_430506
L_136476:
	movq 0x0(%r14),%r15
	movq %r15,0x98(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0xA0(%rbp)
	addq $0x98,%rbp
	leaq (word_46+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_430506:
L_136554:
	movq 0x80(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_136555+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x1
L_136562:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (bug_433+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x1D6E
word_46:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_136477
L_136552:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_136553+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_136553
.p2align 0x4
.long 0x1D7E
L_136553:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_136477:
	movq $0x1EA3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x493,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq %r14,0x0(%r13)
	movq $0x1143,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x2115,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0xA8(%rbp)
	addq $0x10,%r12
	movq 0x68(%rbp),%r15
	movq %r15,0x98(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0xA0(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0xB0(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0xB8(%rbp)
	addq $0x98,%rbp
	leaq (L_136478+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp primApp_0
.p2align 0x4
.long 0x1
L_136555:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (bug_432+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x1
bug_433:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_136563
L_136564:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_136565+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_136565
.p2align 0x4
.long 0x451
L_136565:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_136563:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1D6F
L_136478:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_136479
L_136550:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_136551+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_136551
.p2align 0x4
.long 0x1D7D
L_136551:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_136479:
	movq $0x2621,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r12,(gcState+0x0)(%rip)
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq %r15,0x48(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1437,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_136480+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_136480
.p2align 0x4
.long 0x1D70
L_136480:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq %rax,0x40(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_1434:
	cmpq $0x1,%r15
	jnl L_430510
L_136549:
	movq 0x40(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x88(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_1434
.p2align 0x4
L_430510:
L_136481:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_136482
L_136547:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_136548+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_136548
.p2align 0x4
.long 0x1D7C
L_136548:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_136482:
	movq 0x40(%rbp),%r15
	movq $0x33,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x2621,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x48(%rbp),%r15
	movq %r15,0x8(%r14)
	movq %r14,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_136483+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_4
.p2align 0x4
.long 0x1
bug_432:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_136556
L_136557:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_136558+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_136558
.p2align 0x4
.long 0x451
L_136558:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_136556:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1D71
L_136483:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_136484
L_136545:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_136546+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_136546
.p2align 0x4
.long 0x1D7B
L_136546:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_136484:
	movl 0x30(%rbp),%r11d
	testl %r11d,%r11d
	jnz L_430516
L_136485:
	movl 0x18(%rbp),%r11d
	testl %r11d,%r11d
	jnz L_430515
L_136486:
	movq 0x28(%rbp),%r11
	movq 0x20(%r11),%r15
	movq 0x18(%r11),%r13
	movq 0x10(%r11),%r14
	movq 0x8(%r11),%r10
	movq 0x0(%r11),%r9
	movq %r9,0x10(%rbp)
	movl 0x8(%rbp),%r11d
	testl %r11d,%r11d
	jz L_430514
L_136493:
L_136490:
	movq $0x35,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x10(%r11)
	movq %r13,0x18(%r11)
	movq %r15,0x20(%r11)
	movq %r14,0x0(%rbp)
	addq $0x30,%r12
	movq 0x38(%rbp),%r15
	movq %r15,0x0(%r11)
	movq 0x40(%rbp),%r15
	movq %r15,0x8(%r11)
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x21A7,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r11,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x0(%r15)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_430514:
L_136487:
	movq %r10,0x50(%rbp)
	movq (globalObjptr+0xF20)(%rip),%r15
	movq $0x31,0xFFFFFFFFFFFFFFF8(%r15)
	addq $0x50,%rbp
	leaq (L_136488+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_430515:
L_136494:
	movq 0x28(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	movq (globalObjptr+0xF20)(%rip),%r15
	movq $0x31,0xFFFFFFFFFFFFFFF8(%r15)
	addq $0x70,%rbp
	leaq (L_136495+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_430516:
L_136510:
	movq 0x28(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	movq (globalObjptr+0xF20)(%rip),%r15
	movq $0x31,0xFFFFFFFFFFFFFFF8(%r15)
	addq $0x70,%rbp
	leaq (L_136511+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x1A68
L_136488:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movl 0x50(%rbp),%r15d
	movl %r15d,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_136489
L_136491:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_136492+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_136492
.p2align 0x4
.long 0x1D72
L_136492:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_136489:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0x17,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	movq %r13,0x10(%r14)
	addq $0x28,%r12
	movl 0x18(%rbp),%r11d
	movl %r11d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0xEC10)(%rip),%r11
	movq %r11,0x18(%r14)
	movq $0x1,%r13
	movq (globalObjptr+0xF20)(%rip),%r15
	jmp L_136490
.p2align 0x4
.long 0x1D73
L_136495:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movl 0x70(%rbp),%r15d
	movl %r15d,0xC(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_136496
L_136508:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_136509+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_136509
.p2align 0x4
.long 0x1D74
L_136509:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_136496:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0xC(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xEC10)(%rip),%r15
	movq %r15,0x18(%r13)
	movq $0x35,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x30,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r13,0x10(%r15)
	movq $0x1,0x18(%r15)
	movq (globalObjptr+0xF20)(%rip),%r14
	movq %r14,0x20(%r15)
	movq 0x18(%rbp),%r14
	movq 0x0(%r14),%r11
	movq $0x21A7,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r10,0x0(%r14)
	movq $0x17D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x30(%rbp)
	movq 0x10(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq (globalWord64+0xFB8)(%rip),%r15
	movq %r15,0x38(%rbp)
	movq (globalWord64+0xFA0)(%rip),%r15
	movq %r15,0x40(%rbp)
	movq $0x11,0x48(%rbp)
	addq $0x30,%rbp
	leaq (L_136497+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp primApp_0
.p2align 0x4
.long 0x1D75
L_136511:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movl 0x70(%rbp),%r15d
	movl %r15d,0xC(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_136512
L_136543:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_136544+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_136544
.p2align 0x4
.long 0x1D7A
L_136544:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_136512:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0xC(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xEC10)(%rip),%r15
	movq %r15,0x18(%r13)
	movq $0x35,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x30,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r13,0x10(%r15)
	movq $0x1,0x18(%r15)
	movq (globalObjptr+0xF20)(%rip),%r14
	movq %r14,0x20(%r15)
	movq 0x10(%rbp),%r14
	movq 0x0(%r14),%r11
	movq $0x21A7,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r10,0x0(%r14)
	movq $0x17D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x70(%rbp)
	movq 0x20(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x90(%rbp)
	movl 0x0(%r15),%r14d
	movl %r14d,0x18(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq (globalObjptr+0x51E0)(%rip),%r15
	movq %r15,0x78(%rbp)
	movq (globalWord64+0xE8)(%rip),%r15
	movq %r15,0x80(%rbp)
	movq $0xB,0x88(%rbp)
	addq $0x70,%rbp
	leaq (L_136513+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp primApp_0
.p2align 0x4
.long 0x459
L_136497:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_136498
L_136506:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_136507+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_136507
.p2align 0x4
.long 0x4B1
L_136507:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_136498:
	movq 0x20(%rbp),%r11
	movq 0x20(%r11),%r15
	movq 0x18(%r11),%r13
	movq 0x10(%r11),%r14
	movq 0x8(%r11),%r10
	movq 0x0(%r11),%r9
	movq %r9,0x28(%rbp)
	movl 0x8(%rbp),%r11d
	testl %r11d,%r11d
	jz L_430521
L_136505:
L_136502:
	movq $0x35,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x10(%r11)
	movq %r13,0x18(%r11)
	movq %r15,0x20(%r11)
	movq %r14,0x0(%rbp)
	addq $0x30,%r12
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%r11)
	movq 0x18(%rbp),%r15
	movq %r15,0x8(%r11)
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x21A7,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r11,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x0(%r15)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_430521:
L_136499:
	movq %r10,0x38(%rbp)
	movq (globalObjptr+0xF20)(%rip),%r15
	movq $0x31,0xFFFFFFFFFFFFFFF8(%r15)
	addq $0x38,%rbp
	leaq (L_136500+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x1D76
L_136513:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_136514
L_136541:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_136542+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_136542
.p2align 0x4
.long 0x1D79
L_136542:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_136514:
	movl 0x8(%rbp),%r15d
	testl %r15d,%r15d
	jz L_136516
L_136538:
	movl 0x18(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_430525
L_136539:
	movl $0x1,%ecx
L_136517:
	movq 0x28(%rbp),%r11
	movq 0x20(%r11),%r15
	movq 0x18(%r11),%r13
	movq 0x10(%r11),%r14
	movq 0x8(%r11),%r10
	movq 0x0(%r11),%r9
	movq %r9,0x38(%rbp)
	testl %ecx,%ecx
	jz L_430524
L_136537:
L_136521:
	movq $0x35,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x18(%r11)
	movq %r15,0x20(%r11)
	addq $0x30,%r12
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%r11)
	movq 0x20(%rbp),%r15
	movq %r15,0x8(%r11)
	movq %r14,0x10(%r11)
	movq 0x38(%rbp),%r15
	movq 0x0(%r15),%r13
	movq $0x21A7,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r11,0x0(%r10)
	movq %r13,0x8(%r10)
	addq $0x18,%r12
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r10,0x0(%r15)
	movl 0x18(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_430523
L_136522:
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_430523:
L_136523:
	movq $0x17D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x20(%rbp)
	movq 0x30(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	movq (globalWord64+0xFB8)(%rip),%r15
	movq %r15,0x28(%rbp)
	movq (globalWord64+0xFA0)(%rip),%r15
	movq %r15,0x30(%rbp)
	movq $0x11,0x38(%rbp)
	addq $0x20,%rbp
	leaq (L_136524+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp primApp_0
.p2align 0x4
L_430524:
L_136518:
	movq %r10,0x70(%rbp)
	movq (globalObjptr+0xF20)(%rip),%r15
	movq $0x31,0xFFFFFFFFFFFFFFF8(%r15)
	addq $0x70,%rbp
	leaq (L_136519+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_430525:
L_136516:
	xorl %ecx,%ecx
	jmp L_136517
.p2align 0x4
.long 0x4E2
L_136500:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movl 0x38(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_136501
L_136503:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_136504+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_136504
.p2align 0x4
.long 0x4F2
L_136504:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_136501:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0x17,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	movq %r13,0x10(%r14)
	addq $0x28,%r12
	movl 0x20(%rbp),%r11d
	movl %r11d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0xEC10)(%rip),%r11
	movq %r11,0x18(%r14)
	movq $0x1,%r13
	movq (globalObjptr+0xF20)(%rip),%r15
	jmp L_136502
.p2align 0x4
.long 0x2B
L_136524:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_136525
L_136533:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_136534+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_136534
.p2align 0x4
.long 0x4B1
L_136534:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_136525:
	movq 0x10(%rbp),%r11
	movq 0x20(%r11),%r15
	movq 0x18(%r11),%r13
	movq 0x10(%r11),%r14
	movq 0x8(%r11),%r10
	movq 0x0(%r11),%r9
	movq %r9,0x28(%rbp)
	movl 0x8(%rbp),%r11d
	testl %r11d,%r11d
	jz L_430529
L_136532:
L_136529:
	movq $0x35,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x10(%r11)
	movq %r13,0x18(%r11)
	movq %r15,0x20(%r11)
	movq %r14,0x0(%rbp)
	addq $0x30,%r12
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%r11)
	movq 0x20(%rbp),%r15
	movq %r15,0x8(%r11)
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x21A7,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r11,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x0(%r15)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_430529:
L_136526:
	movq %r10,0x38(%rbp)
	movq (globalObjptr+0xF20)(%rip),%r15
	movq $0x31,0xFFFFFFFFFFFFFFF8(%r15)
	addq $0x38,%rbp
	leaq (L_136527+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x1D77
L_136519:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movl 0x70(%rbp),%r15d
	movl %r15d,0xC(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_136520
L_136535:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_136536+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_136536
.p2align 0x4
.long 0x1D78
L_136536:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_136520:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0x17,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	movq %r13,0x10(%r14)
	addq $0x28,%r12
	movl 0xC(%rbp),%r11d
	movl %r11d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0xEC10)(%rip),%r11
	movq %r11,0x18(%r14)
	movq $0x1,%r13
	movq (globalObjptr+0xF20)(%rip),%r15
	jmp L_136521
.p2align 0x4
.long 0x71D
L_136527:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movl 0x38(%rbp),%r15d
	movl %r15d,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_136528
L_136530:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_136531+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_136531
.p2align 0x4
.long 0x789
L_136531:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_136528:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0x17,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	movq %r13,0x10(%r14)
	addq $0x28,%r12
	movl 0x30(%rbp),%r11d
	movl %r11d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0xEC10)(%rip),%r11
	movq %r11,0x18(%r14)
	movq $0x1,%r13
	movq (globalObjptr+0xF20)(%rip),%r15
	jmp L_136529
.text
.p2align 0x4
.globl maxPath_0
.hidden maxPath_0
maxPath_0:
L_136577:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_136660
L_136578:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_430538
L_136579:
	movq 0x8(%rbp),%r14
	movq 0x58(%r14),%r13
	movq %r13,0x10(%rbp)
	movq 0x50(%r14),%r13
	movq %r13,0x18(%rbp)
	movq 0x48(%r14),%r13
	movq %r13,0x20(%rbp)
	movq 0x40(%r14),%r15
	movq 0x38(%r14),%r13
	movq 0x30(%r14),%r11
	movq %r11,0x28(%rbp)
	movslq 0x0(%rbp),%r14
	movq %r14,0x30(%rbp)
	cmpq 0xFFFFFFFFFFFFFFF0(%r11),%r14
	jnb L_136581
L_136582:
	movq 0x0(%r11,%r14,8),%r10
	cmpq $0x1,%r10
	jne L_430536
L_136584:
	cmpq 0xFFFFFFFFFFFFFFF0(%r13),%r14
	jnb L_136581
L_136586:
	movq 0x0(%r13,%r14,8),%r11
	movq %r11,0x38(%rbp)
	cmpq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	jnb L_430534
L_136588:
	movq 0x0(%r15,%r14,8),%r13
	movq 0x0(%r13),%r11
	movq 0x0(%r11),%r9
	cmpq $0x1,%r9
	je L_430533
L_136589:
	movq 0x8(%r9),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r9),%r15
	movq $0x1,0x48(%rbp)
L_136590:
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x58(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_136591+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_3
.p2align 0x4
L_430533:
L_136659:
	movq $0x1,%r15
L_136633:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x38(%rbp),%r15
	movq %r15,0x8(%r14)
	movq %r14,0x40(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_136634+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1183
.p2align 0x4
L_430534:
L_136581:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_430536:
L_136583:
	movq 0x0(%r10),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_430538:
L_136660:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_136661+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_136661
.p2align 0x4
.long 0x494
L_136661:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_136579
.p2align 0x4
.long 0xBBA
L_136591:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_136592
L_136657:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_136658+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_136658
.p2align 0x4
.long 0x1D84
L_136658:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_136592:
	movq 0x50(%rbp),%r15
	andq $0x1,%r15
	jnz L_430540
L_136593:
	movq (globalObjptr+0xDFE0)(%rip),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_136594+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_430540:
L_136623:
	movq 0x50(%rbp),%r15
	shrq $0x1,%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x18(%rbp),%r13
	cmpq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	jnb L_136581
L_136625:
	movl 0x0(%r13,%r15,4),%r11d
	testl %r11d,%r11d
	jnz L_430541
L_136626:
	movl %r14d,0x58(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_136627+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp maxPath_0
.p2align 0x4
L_430541:
L_136654:
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_430542
L_136655:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x40(%rbp)
	jmp L_136590
.p2align 0x4
L_430542:
L_136656:
	movq 0x48(%rbp),%r15
	jmp L_136633
.p2align 0x4
.long 0x12AC
L_136634:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_136635
L_136636:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_136637+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_136637
.p2align 0x4
.long 0x5F3
L_136637:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_136635:
	movq $0x1B51,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq 0x30(%rbp),%r11
	movq %r15,0x0(%r13,%r11,8)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_136594:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_136595+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0xBBA
L_136627:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_136628
L_136652:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_136653+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_136653
.p2align 0x4
.long 0x1D83
L_136653:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_136628:
	movq 0x48(%rbp),%r14
	movq %r14,%r15
	movq 0x50(%rbp),%r13
	andq %r13,%r15
	andq $0x1,%r15
	jz L_430549
L_136629:
	cmpq %r14,%r13
	jl L_430547
L_136630:
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_430546
L_136631:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x40(%rbp)
	movq %r13,0x48(%rbp)
	jmp L_136590
.p2align 0x4
L_430546:
L_136632:
	movq %r13,%r15
	jmp L_136633
.p2align 0x4
L_430547:
L_136638:
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_430548
L_136639:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x40(%rbp)
	jmp L_136590
.p2align 0x4
L_430548:
L_136640:
	movq 0x48(%rbp),%r15
	jmp L_136633
.p2align 0x4
L_430549:
L_136641:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_136642
L_136650:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_136651+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_136651
.p2align 0x4
.long 0x1D83
L_136651:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_136642:
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0x50(%rbp),%rsi
	movq %rsi,%r14
	xchgq %r14,%rsi
	movq 0x48(%rbp),%rdi
	xorq %rax,%rax
	call IntInf_compare
L_136643:
	cmpl $0x0,%eax
	jg L_430551
L_136644:
	movq 0x40(%rbp),%r13
	cmpq $0x1,%r13
	je L_430550
L_136645:
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x40(%rbp)
	movq %r14,0x48(%rbp)
	jmp L_136590
.p2align 0x4
L_430550:
L_136646:
	movq %r14,%r15
	jmp L_136633
.p2align 0x4
L_430551:
L_136647:
	movq 0x40(%rbp),%r13
	cmpq $0x1,%r13
	je L_430552
L_136648:
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x40(%rbp)
	jmp L_136590
.p2align 0x4
L_430552:
L_136649:
	movq 0x48(%rbp),%r15
	jmp L_136633
.p2align 0x4
.long 0x4AF
L_136595:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xF3D8)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_136596+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5AF
L_136596:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_136597+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x51E
L_136597:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_136598
L_136621:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_136622+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_136622
.p2align 0x4
.long 0x4AE
L_136622:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_136598:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_136599:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_430558
L_136601:
	cmpq $0x1,%r14
	je L_430555
L_136602:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_136599
.p2align 0x4
L_430555:
L_136603:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_136604
L_136619:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_136620+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_136620
.p2align 0x4
.long 0x4E6
L_136620:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_136604:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_430556
L_136605:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
toString_230:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	addq $0x8,%rbp
	leaq (rev_228+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_430556:
L_136618:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_230
.p2align 0x4
L_430558:
L_136600:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
rev_228:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_430562
L_136606:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_136607:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_430561
.p2align 0x4,,0x7
L_136608:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_430560
L_136609:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_136607
.p2align 0x4
L_430560:
L_136611:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_434+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_430561:
L_136615:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_136616+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_136616
.p2align 0x4
.long 0x45B
L_136616:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_136608
.p2align 0x4
L_430562:
L_136617:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_136611
.p2align 0x4
.long 0x1
bug_434:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_136612
L_136613:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_136614+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_136614
.p2align 0x4
.long 0x451
L_136614:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_136612:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl parallelMove_0
.hidden parallelMove_0
parallelMove_0:
L_136662:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_136663
L_136797:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_136798+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_136798
.p2align 0x4
.long 0x45B
L_136798:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_136663:
	movq 0x10(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x38(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_136665
L_136666:
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r11d
	movslq %r11d,%r10
	cmpq %r10,%r14
	jne L_430584
L_136668:
	cmpl %r11d,%r13d
	jne L_136670
L_136671:
	cmpl $0x0,%r13d
	jl L_430582
L_136672:
	movq $0x1,0x10(%rbp)
	movl $0x0,0x3C(%rbp)
.p2align 0x4,,0x7
loop_1435:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_430581
.p2align 0x4,,0x7
L_136673:
	movl 0x3C(%rbp),%r15d
	cmpl 0x38(%rbp),%r15d
	jnl L_430564
L_136793:
	movl %r15d,%r14d
	incl %r14d
	movslq %r15d,%r13
	movl %r14d,0x3C(%rbp)
	movq 0x0(%rbp),%r15
	movq 0x0(%r15,%r13,8),%r14
	movq 0x8(%rbp),%r15
	movq 0x0(%r15,%r13,8),%r11
	movq $0x11F7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r11,0x8(%r15)
	addq $0x18,%r12
	movq $0x23BD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%r14)
	movq %r14,0x10(%rbp)
	jmp loop_1435
.p2align 0x4
L_430564:
L_136674:
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_430565
L_136675:
	movq 0x8(%r14),%r13
	movq %r13,0x38(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x40(%rbp)
	movq $0x1,0x48(%rbp)
L_136676:
	movq 0x40(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movq $0x11F7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r15,0x58(%rbp)
	addq $0x18,%r12
	movq 0x18(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_136677+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_2
.p2align 0x4
L_430565:
L_136792:
	xorl %ecx,%ecx
	movq $0x1,%r13
	movq $0x1,%r11
	movq %r11,%r15
	xchgq %r13,%r14
L_136705:
	cmpq $0x1,%r15
	je L_430570
L_136706:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq %r11,0x38(%rbp)
	movq 0x8(%r11),%r15
	movq %r15,0x40(%rbp)
	testl %ecx,%ecx
	jnz L_430567
L_136707:
	cmpq $0x1,%r13
	je L_430566
L_136708:
	movq %r14,0x58(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x48(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x50(%rbp)
	movq $0x1,0x60(%rbp)
L_136709:
	movq 0x50(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x70(%rbp)
	movq %r14,0x80(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x80,%rbp
	leaq (L_136710+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp interfere_0
.p2align 0x4
L_430566:
L_136741:
	movq %r14,0x40(%rbp)
	movq $0x1,0x48(%rbp)
L_136715:
	movq 0x30(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_136716+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_2
.p2align 0x4
L_430567:
L_136742:
	movq %r14,0x50(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq %r13,0x38(%rbp)
	movl $0x0,0x48(%rbp)
	movq $0x1,0x58(%rbp)
L_136682:
	movq 0x40(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x60(%rbp)
	movq 0x38(%rbp),%r14
	cmpq $0x1,%r14
	je L_430568
L_136683:
	movq 0x8(%r14),%r13
	movq %r13,0x68(%rbp)
	movq 0x0(%r14),%r15
L_136684:
	movq 0x0(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x78,%rbp
	leaq (L_136685+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp interfere_0
.p2align 0x4
L_430568:
L_136690:
	movq 0x58(%rbp),%r14
	cmpq $0x1,%r14
	je L_430569
L_136691:
	movq 0x8(%r14),%r13
	movq %r13,0x68(%rbp)
	movq 0x0(%r14),%r15
L_136692:
	movq 0x0(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x78,%rbp
	leaq (L_136693+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp interfere_0
.p2align 0x4
L_430569:
L_136698:
	movq 0x30(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_136699+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_2
.p2align 0x4
L_430570:
L_136743:
	cmpq $0x1,%r14
	je L_430580
L_136744:
	movq 0x8(%r14),%r15
	movq %r15,0x0(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_136745:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_430579
.p2align 0x4,,0x7
L_136746:
	movq $0x23BF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_430571
L_136747:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_136745
.p2align 0x4
L_430571:
L_136748:
	movq %r15,0x0(%rbp)
L_136749:
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_430578
L_136750:
	movq 0x8(%r14),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_136751:
	incl %ecx
	jo L_430577
L_136753:
	cmpq $0x1,%r15
	je L_430572
L_136754:
	movq 0x8(%r15),%r15
	jmp L_136751
.p2align 0x4
L_430572:
L_136755:
L_136756:
	movslq %ecx,%rdx
	movq %rdx,0x8(%rbp)
	testq %rdx,%rdx
	jz L_430576
L_136757:
	cmpq $0x7FFFFFFF,%rdx
	ja L_430575
L_136758:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14A7,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_136759+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_136759
.p2align 0x4
.long 0x457
L_136759:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq %rax,%r15
L_136760:
	movq 0x0(%rbp),%r13
	xorq %r14,%r14
.p2align 0x4,,0x7
loop_1436:
	cmpq 0x8(%rbp),%r14
	jnl L_430574
L_136762:
	cmpq $0x1,%r13
	je L_430573
L_136763:
	movq 0x0(%r13),%r11
	movq 0x8(%r13),%r13
	movq %r15,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r11,0x0(%r15,%r14,8)
	incq %r14
	jmp loop_1436
.p2align 0x4
L_430573:
L_136764:
	movq (globalObjptr+0x4B0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_430574:
L_136761:
	movq $0xB3D,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_430575:
L_136765:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_430576:
L_136766:
	movq (globalObjptr+0xD88)(%rip),%r15
	jmp L_136760
.p2align 0x4
L_430577:
L_136752:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_430578:
L_136767:
	xorl %ecx,%ecx
	jmp L_136756
.p2align 0x4
L_430579:
L_136768:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_136769+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_136769
.p2align 0x4
.long 0x45B
L_136769:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_136746
.p2align 0x4
L_430580:
L_136770:
	movq $0x1,0x0(%rbp)
	jmp L_136749
.p2align 0x4
L_430581:
L_136794:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_136795+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_136795
.p2align 0x4
.long 0x634
L_136795:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_136673
.p2align 0x4
L_430582:
L_136670:
	movq (globalObjptr+0xCF8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_430584:
L_136665:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x911
L_136677:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movl 0x58(%rbp),%r15d
	movl %r15d,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_136678
L_136790:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_136791+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_136791
.p2align 0x4
.long 0x9A4
L_136791:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_136678:
	movl 0x50(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_430588
L_136679:
	movq $0x23BD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x38(%rbp),%r14
	cmpq $0x1,%r14
	je L_430587
L_136680:
	movq %r15,0x48(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x38(%rbp)
	movq %r15,0x40(%rbp)
	jmp L_136676
.p2align 0x4
L_430587:
L_136681:
	movq 0x48(%rbp),%r15
	movq %r15,0x38(%rbp)
	movl $0x0,0x48(%rbp)
	movq $0x1,0x50(%rbp)
	movq $0x1,0x58(%rbp)
	jmp L_136682
.p2align 0x4
L_430588:
L_136785:
	movq 0x38(%rbp),%r15
	cmpq $0x1,%r15
	je L_430589
L_136786:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x38(%rbp)
	movq %r14,0x40(%rbp)
	jmp L_136676
.p2align 0x4
L_430589:
L_136787:
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_430590
L_136788:
	movq 0x8(%r14),%r15
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x40(%rbp)
	movl $0x0,0x48(%rbp)
	movq $0x1,0x50(%rbp)
	movq $0x1,0x58(%rbp)
	jmp L_136682
.p2align 0x4
L_430590:
L_136789:
	xorl %ecx,%ecx
	movq $0x1,%r13
	movq $0x1,%r11
	xchgq %r11,%r15
	xchgq %r13,%r14
	jmp L_136705
.p2align 0x4
.long 0x1D87
L_136710:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movl 0x80(%rbp),%r15d
	movl %r15d,0x78(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_136711
L_136739:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_136740+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_136740
.p2align 0x4
.long 0x1D8B
L_136740:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_136711:
	movl 0x78(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_430593
L_136712:
	movq $0x23BD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_430592
L_136713:
	movq %r15,0x60(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	movq %r15,0x50(%rbp)
	jmp L_136709
.p2align 0x4
L_430592:
L_136714:
	movq %r15,0x48(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x40(%rbp)
	jmp L_136715
.p2align 0x4
L_430593:
L_136725:
	movq 0x68(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_136726+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp ty_1
.p2align 0x4
.long 0x767
L_136716:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movl 0x58(%rbp),%r15d
	movl %r15d,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_136717
L_136723:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_136724+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_136724
.p2align 0x4
.long 0x7AE
L_136724:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_136717:
	movl 0x50(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_430596
L_136718:
	movq $0x1EC7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
L_136719:
	movq $0x23BF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x40(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x48(%rbp),%r15
	cmpq $0x1,%r15
	je L_430595
L_136720:
	movq %r14,0x50(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movl $0x0,0x48(%rbp)
	movq $0x1,0x58(%rbp)
	jmp L_136682
.p2align 0x4
L_430595:
L_136721:
	xorl %ecx,%ecx
	movq $0x1,%r13
	xchgq %r13,%r15
	jmp L_136705
.p2align 0x4
L_430596:
L_136722:
	movq $0x1,%r15
	jmp L_136719
.p2align 0x4
.long 0x1D85
L_136685:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movl 0x78(%rbp),%r15d
	movl %r15d,0x4C(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_136686
L_136782:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_136783+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_136783
.p2align 0x4
.long 0x1D8D
L_136783:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_136686:
	movl 0x4C(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_430599
L_136687:
	movq 0x68(%rbp),%r14
	cmpq $0x1,%r14
	je L_136690
L_136688:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x68(%rbp)
	jmp L_136684
.p2align 0x4
L_430599:
L_136775:
	movq $0x23BD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x38(%rbp),%r14
	cmpq $0x1,%r14
	je L_430600
L_136776:
	movq %r15,0x58(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x38(%rbp)
	movq %r15,0x40(%rbp)
	jmp L_136682
.p2align 0x4
L_430600:
L_136777:
	movl 0x48(%rbp),%ecx
	movq 0x50(%rbp),%r13
	xchgq %r13,%r14
	jmp L_136705
.p2align 0x4
.long 0x1D85
L_136693:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movl 0x78(%rbp),%r15d
	movl %r15d,0x4C(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_136694
L_136778:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_136779+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_136779
.p2align 0x4
.long 0x1D8D
L_136779:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_136694:
	movl 0x4C(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_136775
L_136695:
	movq 0x68(%rbp),%r14
	cmpq $0x1,%r14
	je L_136698
L_136696:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x68(%rbp)
	jmp L_136692
.p2align 0x4
.long 0x1D86
L_136699:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movl 0x68(%rbp),%r15d
	movl %r15d,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_136700
L_136772:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_136773+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_136773
.p2align 0x4
.long 0x1D8C
L_136773:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_136700:
	movl 0x48(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_430606
L_136701:
	movq $0x1EC7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
L_136702:
	movq $0x23BF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x50(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x38(%rbp),%r15
	cmpq $0x1,%r15
	je L_430605
L_136703:
	movq %r14,0x50(%rbp)
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x38(%rbp)
	movq %r14,0x40(%rbp)
	movl $0x1,0x48(%rbp)
	jmp L_136682
.p2align 0x4
L_430605:
L_136704:
	movl $0x1,%ecx
	movq 0x58(%rbp),%r13
	xchgq %r13,%r15
	jmp L_136705
.p2align 0x4
L_430606:
L_136771:
	movq $0x1,%r15
	jmp L_136702
.p2align 0x4
.long 0x1D88
L_136726:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_136727
L_136737:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_136738+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_136738
.p2align 0x4
.long 0x1B4C
L_136738:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_136727:
	movq $0x1CD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x0,0x0(%r15)
	movq $0x1EB5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x50(%rbp),%r15
	movq %r15,0x8(%r14)
	movq $0x11F7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r14,0x0(%r15)
	movq 0x70(%rbp),%r13
	movq %r13,0x8(%r15)
	movq $0x23BD,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x78(%rbp)
	movq %r15,0x0(%r13)
	addq $0x18,%r12
	movq 0x60(%rbp),%r15
	movq %r15,0x8(%r13)
	movq $0x11F7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x80(%rbp)
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x98(%rbp)
	movq %r15,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_136728+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_2
.p2align 0x4
.long 0x1D89
L_136728:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movl 0x90(%rbp),%r15d
	movl %r15d,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_136729
L_136735:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_136736+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_136736
.p2align 0x4
.long 0x1D8A
L_136736:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_136729:
	movl 0x50(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_430610
L_136730:
	movq $0x1EC7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x80(%rbp),%r14
	movq %r14,0x0(%r15)
L_136731:
	movq $0x23BF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x58(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x48(%rbp),%r15
	cmpq $0x1,%r15
	je L_430609
L_136732:
	movq %r14,0x58(%rbp)
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x48(%rbp)
	movq %r14,0x50(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x60(%rbp)
	jmp L_136709
.p2align 0x4
L_430609:
L_136733:
	movq %r14,0x40(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x48(%rbp)
	jmp L_136715
.p2align 0x4
L_430610:
L_136734:
	movq $0x1,%r15
	jmp L_136731
.text
.p2align 0x4
.globl equals_2
.hidden equals_2
equals_2:
loopS_17:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_136959
L_136799:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_430662
L_136800:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	cmpq $0x3,%r13
	je L_430659
L_136801:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_136802
L_136803:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%rax
	shrq $0x1,%rax
	subq $0xF59,%rax
	cmpq $0x7,%rax
	ja L_430612
	leaq jumpTable_296(%rip),%rbx
	jmp *(%rbx,%rax,8)
.data
.p2align 0x4
jumpTable_296:
.quad L_430654,L_430634,L_430631,L_430628,L_430623,L_430621,L_430618,L_430615
.text
.p2align 0x4
L_430612:
L_136804:
	movq 0x0(%r13),%r15
	movq %r15,0x0(%rbp)
L_136806:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_136802
L_136807:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xF58,%r15
	jne L_430613
L_136808:
	movq 0x0(%r14),%r15
	movq %r15,0x8(%rbp)
	movq 0x0(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x20(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_136809+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_0
.p2align 0x4
L_430613:
L_136802:
	movl $0x0,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_430615:
L_136957:
	movq 0x10(%r13),%r11
	movq %r11,0x10(%rbp)
	movq 0x8(%r13),%r15
	xchgq %r14,%r15
L_136929:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_136802
L_136930:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0xF60,%r13
	jne L_136802
L_136931:
	movq 0x10(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x8(%r15),%r13
	movq $0x11F7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r15,0x28(%rbp)
	addq $0x18,%r12
	movq 0x8(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_136932+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_2
.p2align 0x4
L_430618:
L_136908:
	movq 0x8(%r13),%r15
	movq 0x0(%r13),%r11
	movq %r11,0x10(%rbp)
	xchgq %r14,%r15
L_136910:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_136802
L_136911:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0xF5F,%r13
	jne L_136802
L_136912:
	movq %r14,0x30(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	addq $0x28,%rbp
	leaq (L_136913+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_1
.p2align 0x4
L_430621:
L_136905:
	andq $0x3,%r14
	jnz L_136802
L_136906:
	jmp L_136802
.p2align 0x4
L_430623:
L_136894:
	movq 0x0(%r13),%r15
	xchgq %r14,%r15
L_136896:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_136802
L_136897:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0xF5D,%r13
	jne L_136802
L_136898:
	movq 0x8(%r14),%r13
	movl 0x0(%r14),%r11d
	movq 0x0(%r15),%r10
	movq 0x8(%r10),%r9
	movl 0x0(%r10),%r8d
	movl 0x4(%r10),%esp
	cmpl %esp,0x4(%r14)
	jne L_136802
L_136900:
	cmpl %r8d,%r11d
	jne L_136802
L_136902:
	movq %r9,0x0(%rbp)
	movq %r13,0x8(%rbp)
	jmp equals_1
.p2align 0x4
L_430628:
L_136889:
	movq 0x0(%r13),%r15
	xchgq %r14,%r15
L_136891:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_136802
L_136892:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0xF5C,%r13
	jne L_136802
L_136893:
	movq 0x0(%r15),%r13
	movq 0x10(%r13),%r11
	cmpq %r11,0x10(%r14)
	sete %al
	movzbl %al,%eax
	movl %eax,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_430631:
L_136880:
	movq 0x8(%r13),%r11
	movq %r11,0x10(%rbp)
	movq 0x0(%r13),%r15
	xchgq %r14,%r15
L_136882:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_136802
L_136883:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0xF5B,%r13
	jne L_136802
L_136884:
	movq 0x8(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r15),%r13
	movq $0x11F7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r15,0x28(%rbp)
	addq $0x18,%r12
	movq 0x8(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_136885+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_2
.p2align 0x4
L_430634:
L_136821:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r13
	movq %r13,%r15
	movq %r14,%r13
	movq %r11,%r14
L_136823:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_136802
L_136824:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xF5A,%r11
	jne L_136802
L_136825:
	movq 0x8(%r13),%r11
	movq %r11,0x10(%rbp)
	movq 0x8(%rbp),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x18(%rbp)
	movq 0x0(%r15),%r11
	movq 0x0(%r13),%r15
	movq 0x0(%r15),%r10
	movq %r11,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	jne L_136802
L_136826:
	shrq $0x1,%r11
	movl %r11d,%r15d
	movq %r10,%r13
	andq $0x1,%r13
	cmpq $0x1,%r13
	jne L_136802
L_136827:
	shrq $0x1,%r10
	movl %r10d,%r13d
	cmpl %r13d,%r15d
	jne L_136802
L_136829:
	movq 0x8(%r14),%r15
	movq %r15,%r13
	andq $0x7,%r13
	cmpq $0x2,%r13
	je L_136875
	cmpq $0x5,%r13
	je L_430647
	cmpq $0x6,%r13
	je L_430645
L_136830:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_136831
L_136871:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0xF53,%r13
	je L_430643
	cmpq $0xF54,%r13
	je L_430635
L_136831:
	movq 0x0(%r14),%r15
	movq %r15,0x20(%rbp)
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_136832+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_430635:
L_136873:
	movb $0xB,0x20(%rbp)
L_136842:
	movq 0x10(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,%r15
	andq $0x7,%r15
	cmpq $0x2,%r15
	je L_136863
	cmpq $0x5,%r15
	je L_430641
	cmpq $0x6,%r15
	je L_430639
L_136843:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_136844
L_136859:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xF53,%r15
	je L_430637
	cmpq $0xF54,%r15
	je L_430636
L_136844:
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq %r14,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_136845+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_430636:
L_136861:
	movb $0xB,%dl
L_136855:
	cmpb %dl,0x20(%rbp)
	sete %al
	movzbl %al,%eax
	movl %eax,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_430637:
L_136860:
	movb $0x6,%dl
	jmp L_136855
.p2align 0x4
L_430639:
L_136865:
	shrq $0x3,%r14
	movb %r14b,%dl
	testb %dl,%dl
	jnz L_430640
L_136866:
	movb $0x4,%dl
	jmp L_136855
.p2align 0x4
L_430640:
L_136867:
	movb $0x5,%dl
	jmp L_136855
.p2align 0x4
L_430641:
L_136863:
	movb $0xB,%dl
	jmp L_136855
.p2align 0x4
L_430643:
L_136872:
	movb $0x6,0x20(%rbp)
	jmp L_136842
.p2align 0x4
L_430645:
L_136877:
	shrq $0x3,%r15
	movb %r15b,%r14b
	testb %r14b,%r14b
	jnz L_430646
L_136878:
	movb $0x4,0x20(%rbp)
	jmp L_136842
.p2align 0x4
L_430646:
L_136879:
	movb $0x5,0x20(%rbp)
	jmp L_136842
.p2align 0x4
L_430647:
L_136875:
	movb $0xB,0x20(%rbp)
	jmp L_136842
.p2align 0x4
L_430654:
L_136813:
	movq 0x0(%r13),%r15
	xchgq %r14,%r15
L_136815:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_136802
L_136816:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0xF59,%r13
	jne L_136802
L_136817:
	movq 0x0(%r14),%r13
	movq 0x0(%r15),%r11
	movq 0x0(%r11),%r10
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0x8(%r14),%rsi
	movq 0x8(%r11),%rdi
	xorq %rax,%rax
	movq %r10,%rbx
	call IntInf_equal
L_136818:
	testl %eax,%eax
	jz L_136802
L_136820:
	movq %rbx,0x0(%rbp)
	movq %r13,0x8(%rbp)
	jmp equals_1
.p2align 0x4
L_430659:
	movq %r14,%r15
L_136948:
	cmpq $0x3,%r15
	je L_430661
L_136949:
	andq $0x3,%r15
	jnz L_136802
L_136950:
	jmp L_136802
.p2align 0x4
L_430661:
L_136951:
	movl $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_430662:
L_136959:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_136960+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_136960
.p2align 0x4
.long 0x45F
L_136960:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_136800
.p2align 0x4
.long 0x5AF
L_136809:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movl 0x18(%rbp),%r15d
	movl %r15d,0x10(%rbp)
	testl %r15d,%r15d
	jz L_136802
L_136811:
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%rsi
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%rdi
	xorq %rax,%rax
	call IntInf_equal
L_136812:
	movl %eax,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x5EF
L_136932:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl 0x28(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_136933
L_136952:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_136953+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_136953
.p2align 0x4
.long 0x4E1
L_136953:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_136933:
	movl 0x20(%rbp),%r15d
	testl %r15d,%r15d
	jz L_136802
L_136935:
	movq 0x10(%rbp),%r15
	cmpq $0x3,%r15
	je L_430675
L_136936:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_136802
L_136937:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%rax
	shrq $0x1,%rax
	subq $0xF59,%rax
	cmpq $0x7,%rax
	ja L_430665
	leaq jumpTable_297(%rip),%rbx
	jmp *(%rbx,%rax,8)
.data
.p2align 0x4
jumpTable_297:
.quad L_430673,L_430672,L_430671,L_430670,L_430669,L_430668,L_430667,L_430666
.text
.p2align 0x4
L_430665:
L_136938:
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x0(%rbp)
	movq 0x18(%rbp),%r14
	jmp L_136806
.p2align 0x4
L_430666:
L_136946:
	movq 0x10(%rbp),%r13
	movq 0x8(%r13),%r14
	movq 0x10(%r13),%r13
	movq %r13,0x10(%rbp)
	movq 0x18(%rbp),%r15
	jmp L_136929
.p2align 0x4
L_430667:
L_136945:
	movq 0x10(%rbp),%r13
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r13
	movq %r13,0x10(%rbp)
	movq 0x18(%rbp),%r15
	jmp L_136910
.p2align 0x4
L_430668:
L_136944:
	movq 0x18(%rbp),%r14
	jmp L_136905
.p2align 0x4
L_430669:
L_136943:
	movq 0x10(%rbp),%r13
	movq 0x0(%r13),%r14
	movq 0x18(%rbp),%r15
	jmp L_136896
.p2align 0x4
L_430670:
L_136942:
	movq 0x10(%rbp),%r13
	movq 0x0(%r13),%r14
	movq 0x18(%rbp),%r15
	jmp L_136891
.p2align 0x4
L_430671:
L_136941:
	movq 0x10(%rbp),%r13
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movq %r13,0x10(%rbp)
	movq 0x18(%rbp),%r15
	jmp L_136882
.p2align 0x4
L_430672:
L_136940:
	movq 0x10(%rbp),%r11
	movq 0x8(%r11),%r14
	movq 0x0(%r11),%r15
	movq 0x18(%rbp),%r13
	jmp L_136823
.p2align 0x4
L_430673:
L_136939:
	movq 0x10(%rbp),%r13
	movq 0x0(%r13),%r14
	movq 0x18(%rbp),%r15
	jmp L_136815
.p2align 0x4
L_430675:
L_136947:
	movq 0x18(%rbp),%r14
	xchgq %r14,%r15
	jmp L_136948
.p2align 0x4
.long 0x5EF
L_136913:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl 0x28(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_136914
L_136955:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_136956+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_136956
.p2align 0x4
.long 0x4E1
L_136956:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_136914:
	movl 0x20(%rbp),%r15d
	testl %r15d,%r15d
	jz L_136802
L_136916:
	movq 0x10(%rbp),%r15
	cmpq $0x3,%r15
	je L_430688
L_136917:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_136802
L_136918:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%rax
	shrq $0x1,%rax
	subq $0xF59,%rax
	cmpq $0x7,%rax
	ja L_430678
	leaq jumpTable_298(%rip),%rbx
	jmp *(%rbx,%rax,8)
.data
.p2align 0x4
jumpTable_298:
.quad L_430686,L_430685,L_430684,L_430683,L_430682,L_430681,L_430680,L_430679
.text
.p2align 0x4
L_430678:
L_136919:
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x0(%rbp)
	movq 0x18(%rbp),%r14
	jmp L_136806
.p2align 0x4
L_430679:
L_136927:
	movq 0x10(%rbp),%r13
	movq 0x8(%r13),%r14
	movq 0x10(%r13),%r13
	movq %r13,0x10(%rbp)
	movq 0x18(%rbp),%r15
	jmp L_136929
.p2align 0x4
L_430680:
L_136926:
	movq 0x10(%rbp),%r13
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r13
	movq %r13,0x10(%rbp)
	movq 0x18(%rbp),%r15
	jmp L_136910
.p2align 0x4
L_430681:
L_136925:
	movq 0x18(%rbp),%r14
	jmp L_136905
.p2align 0x4
L_430682:
L_136924:
	movq 0x10(%rbp),%r13
	movq 0x0(%r13),%r14
	movq 0x18(%rbp),%r15
	jmp L_136896
.p2align 0x4
L_430683:
L_136923:
	movq 0x10(%rbp),%r13
	movq 0x0(%r13),%r14
	movq 0x18(%rbp),%r15
	jmp L_136891
.p2align 0x4
L_430684:
L_136922:
	movq 0x10(%rbp),%r13
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movq %r13,0x10(%rbp)
	movq 0x18(%rbp),%r15
	jmp L_136882
.p2align 0x4
L_430685:
L_136921:
	movq 0x10(%rbp),%r11
	movq 0x8(%r11),%r14
	movq 0x0(%r11),%r15
	movq 0x18(%rbp),%r13
	jmp L_136823
.p2align 0x4
L_430686:
L_136920:
	movq 0x10(%rbp),%r13
	movq 0x0(%r13),%r14
	movq 0x18(%rbp),%r15
	jmp L_136815
.p2align 0x4
L_430688:
L_136954:
	movq 0x18(%rbp),%r14
	xchgq %r14,%r15
	jmp L_136948
.p2align 0x4
.long 0x490
L_136885:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl 0x28(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	testl %r15d,%r15d
	jz L_136802
L_136887:
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0x10(%rbp),%rsi
	movq 0x18(%rbp),%rdi
	xorq %rax,%rax
	call IntInf_equal
L_136888:
	movl %eax,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x8A9
L_136832:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movl 0x30(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	cmpl $0x8,%r15d
	je L_430695
	cmpl $0x10,%r15d
	je L_430694
	cmpl $0x20,%r15d
	je L_430693
	cmpl $0x40,%r15d
	je L_430692
L_136833:
	movq 0x20(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_136834+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1197
.p2align 0x4
L_430692:
L_136870:
	movb $0x0,0x20(%rbp)
	jmp L_136842
.p2align 0x4
L_430693:
L_136869:
	movb $0x1,0x20(%rbp)
	jmp L_136842
.p2align 0x4
L_430694:
L_136868:
	movb $0x2,0x20(%rbp)
	jmp L_136842
.p2align 0x4
L_430695:
L_136841:
	movb $0x3,0x20(%rbp)
	jmp L_136842
.p2align 0x4
.long 0x71E
L_136845:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movl 0x38(%rbp),%r15d
	movl %r15d,0x24(%rbp)
	cmpl $0x8,%r15d
	je L_430699
	cmpl $0x10,%r15d
	je L_430698
	cmpl $0x20,%r15d
	je L_430697
	cmpl $0x40,%r15d
	je L_430696
L_136846:
	movq 0x28(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_136847+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1197
.p2align 0x4
L_430696:
L_136858:
	xorb %dl,%dl
	jmp L_136855
.p2align 0x4
L_430697:
L_136857:
	movb $0x1,%dl
	jmp L_136855
.p2align 0x4
L_430698:
L_136856:
	movb $0x2,%dl
	jmp L_136855
.p2align 0x4
L_430699:
L_136854:
	movb $0x3,%dl
	jmp L_136855
.p2align 0x4
.long 0x1
L_136834:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_136835
L_136839:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_136840+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_136840
.p2align 0x4
.long 0x451
L_136840:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_136835:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xDD98)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_435+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x1
L_136847:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_136848
L_136852:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_136853+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_136853
.p2align 0x4
.long 0x451
L_136853:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_136848:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xDD98)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_436+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x1
bug_435:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_136836
L_136837:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_136838+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_136838
.p2align 0x4
.long 0x451
L_136838:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_136836:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
bug_436:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_136849
L_136850:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_136851+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_136851
.p2align 0x4
.long 0x451
L_136851:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_136849:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl foreach_2
.hidden foreach_2
foreach_2:
L_136961:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_136962
L_137509:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_137510+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_137510
.p2align 0x4
.long 0x45F
L_137510:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_136962:
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x10(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_136964
L_136965:
	cmpl $0x0,%r13d
	jl L_430807
L_136966:
	movl $0x0,0x14(%rbp)
.p2align 0x4,,0x7
loop_1437:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_430806
.p2align 0x4,,0x7
L_136967:
	movl 0x14(%rbp),%r15d
	cmpl 0x10(%rbp),%r15d
	jnl L_430805
L_136969:
	movslq %r15d,%r14
	movq %r14,%r15
	salq $0x4,%r15
	movq 0x8(%rbp),%r13
	movq 0x0(%r13,%r15,1),%r11
	movq %r11,0x18(%rbp)
	salq $0x4,%r14
	movq 0x8(%r13,%r14,1),%r15
	movq %r15,0x20(%rbp)
	movq 0x0(%rbp),%r15
	cmpq $0x1,%r15
	je L_430804
L_136970:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%rax
	shrq $0x1,%rax
	subq $0x1950,%rax
	cmpq $0x13,%rax
	ja L_430704
	leaq jumpTable_299(%rip),%rbx
	jmp *(%rbx,%rax,8)
.data
.p2align 0x4
jumpTable_299:
.quad L_430803,L_430802,L_430801,L_430800,L_430779,L_430777,L_430775,L_430774,L_430744,L_430743,L_430741,L_430740,L_430739,L_430738,L_430737,L_430724,L_430722,L_430709,L_430708,L_430706
.text
.p2align 0x4
L_430704:
L_136971:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x18(%r15),%r14
	movq 0x0(%r14),%r13
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x18(%r15),%r11
	movq 0x0(%r14),%r15
	cmpq $0x1,%r15
	jne L_430705
L_136996:
	movq %r11,0x50(%rbp)
	movq %r13,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_136997+0x0)(%rip),%r14
	movq %r14,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unique_0
.p2align 0x4
L_430705:
L_136972:
L_136973:
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_136974+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_430706:
L_137474:
	movq 0x0(%rbp),%r15
	movq 0x28(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movq $0x53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x58(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x20(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_430707
L_137476:
	movl %r13d,0x70(%rbp)
	movq $0x37FF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq %r14,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_137477+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_11
.p2align 0x4
L_430707:
L_136964:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_430708:
L_137430:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq (globalObjptr+0xF3F0)(%rip),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_137431+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_430709:
L_137405:
	movq 0x0(%rbp),%r11
	movq 0x8(%r11),%r14
	movq 0x0(%r11),%r10
	movq %r10,0x28(%rbp)
	movq $0x138F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movb $0x2,%r11b
	movzbl %r11b,%ecx
	movl %ecx,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x4B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movl $0x0,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq $0x1391,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq 0x20(%rbp),%r10
	movq %r10,0x0(%r11)
	movq $0x447,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	addq $0x10,%r12
	movq $0x1,0x0(%r10)
	movq $0x53,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	addq $0x10,%r12
	movl $0x0,0x0(%r9)
	movl $0x0,0x4(%r9)
	movq $0x1393,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r8,0x30(%rbp)
	movq %r13,0x0(%r8)
	movq %r9,0x8(%r8)
	movq %r10,0x10(%r8)
	movq %r11,0x18(%r8)
	movq %r15,0x20(%r8)
	addq $0x30,%r12
	movq 0x18(%rbp),%r11
	movq 0x10(%r11),%r10
	movq %r10,0x38(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_430721
L_137406:
	movq %r15,0x0(%r11)
	movq 0x0(%r10),%r11
	cmpq $0x1,%r11
	je L_430720
L_137407:
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r11
	xorl %ecx,%ecx
	movq %r11,%r15
.p2align 0x4,,0x7
L_137409:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_430719
L_137422:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xD2D,%r11
	jne L_430718
L_137423:
	cmpq %r14,0x0(%r13)
	movq %r14,(localObjptr+0x0)(%rip)
	je L_430715
L_137410:
	incl %ecx
	movl %ecx,0x18(%rbp)
	jo L_430714
L_137411:
	cmpq $0x1,%r15
	je L_430710
L_137412:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x0)(%rip),%r14
	jmp L_137409
.p2align 0x4
L_430710:
L_137413:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_430713
.p2align 0x4,,0x7
L_137414:
	movl 0x18(%rbp),%ecx
L_137415:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_430712
L_137416:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_137418
L_137419:
	movl %ecx,0x0(%r15)
L_137418:
	movq $0x1A5B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x38(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
.p2align 0x4,,0x7
L_136988:
	incl 0x14(%rbp)
	jmp loop_1437
.p2align 0x4
L_430712:
L_137061:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_430713:
L_137420:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_137421+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_137421
.p2align 0x4
.long 0x5AA
L_137421:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_137414
.p2align 0x4
L_430714:
L_136984:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_430715:
L_137425:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_137061
L_137426:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_137078
L_137428:
	movl %ecx,0x0(%r15)
L_137078:
	movq (globalObjptr+0x578)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_430718:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_137410
.p2align 0x4
L_430719:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_137410
.p2align 0x4
L_430720:
L_137429:
	xorl %ecx,%ecx
	jmp L_137415
.p2align 0x4
L_430721:
L_137050:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_430722:
L_137368:
	movq 0x0(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x20(%r15),%r14
	movq 0x0(%r14),%r13
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x18(%r15),%r11
	movq 0x0(%r14),%r15
	cmpq $0x1,%r15
	jne L_430723
L_137403:
	movq %r11,0x58(%rbp)
	movq %r13,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_137404+0x0)(%rip),%r14
	movq %r14,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unique_0
.p2align 0x4
L_430723:
L_137369:
L_137370:
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_137371+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_430724:
L_137343:
	movq 0x0(%rbp),%r11
	movq 0x8(%r11),%r14
	movq 0x0(%r11),%r10
	movq %r10,0x28(%rbp)
	movq 0x18(%rbp),%r11
	movq 0x10(%r11),%r10
	movq %r10,0x30(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_137050
L_137344:
	movq %r15,0x0(%r11)
	movq 0x0(%r10),%r11
	cmpq $0x1,%r11
	je L_430735
L_137345:
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r11
	xorl %ecx,%ecx
	movq %r11,%r15
.p2align 0x4,,0x7
L_137347:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_430734
L_137360:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xD1A,%r11
	jne L_430733
L_137361:
	cmpq 0x0(%r13),%r14
	movq %r14,(localObjptr+0x0)(%rip)
	je L_430730
L_137348:
	incl %ecx
	movl %ecx,0x18(%rbp)
	jo L_136984
L_137349:
	cmpq $0x1,%r15
	je L_430725
L_137350:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x0)(%rip),%r14
	jmp L_137347
.p2align 0x4
L_430725:
L_137351:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_430728
.p2align 0x4,,0x7
L_137352:
	movl 0x18(%rbp),%ecx
L_137353:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_137061
L_137354:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_137356
L_137357:
	movl %ecx,0x0(%r15)
L_137356:
	movq $0x1A35,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	jmp L_136988
.p2align 0x4
L_430728:
L_137358:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_137359+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_137359
.p2align 0x4
.long 0x575
L_137359:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_137352
.p2align 0x4
L_430730:
L_137363:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_137061
L_137364:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_137078
L_137366:
	movl %ecx,0x0(%r15)
	jmp L_137078
.p2align 0x4
L_430733:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_137348
.p2align 0x4
L_430734:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_137348
.p2align 0x4
L_430735:
L_137367:
	xorl %ecx,%ecx
	jmp L_137353
.p2align 0x4
L_430737:
L_137304:
	movq 0x0(%rbp),%r15
	movq 0x28(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_137305+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_60
.p2align 0x4
L_430738:
L_137303:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq $0x33F3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_136987+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_6
.p2align 0x4
L_430739:
L_137298:
	movq 0x0(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x18(%rbp),%r15
	movl 0x0(%r15),%r14d
	movl %r14d,0x50(%rbp)
	movq $0x1D69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq %r14,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_137299+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lookup_1
.p2align 0x4
L_430740:
L_137297:
	movq 0x0(%rbp),%r15
	movq 0x18(%r15),%r14
	movq 0x10(%r15),%r13
	movq 0x8(%r15),%r11
	movq 0x0(%r15),%r10
	movq $0x33EF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r10,0x0(%r15)
	movq %r11,0x8(%r15)
	movq %r13,0x10(%r15)
	movq %r14,0x18(%r15)
	addq $0x28,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_136987+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_6
.p2align 0x4
L_430741:
L_137270:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x18(%r15),%r14
	movq 0x0(%r14),%r13
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x18(%r15),%r11
	movq 0x0(%r14),%r15
	cmpq $0x1,%r15
	jne L_430742
L_137295:
	movq %r11,0x50(%rbp)
	movq %r13,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_137296+0x0)(%rip),%r14
	movq %r14,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unique_0
.p2align 0x4
L_430742:
L_137271:
L_137272:
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_137273+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_430743:
L_137269:
	movq 0x0(%rbp),%r15
	movq 0x18(%r15),%r14
	movq 0x10(%r15),%r13
	movq 0x8(%r15),%r11
	movq 0x0(%r15),%r10
	movq $0x33ED,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r10,0x0(%r15)
	movq %r11,0x8(%r15)
	movq %r13,0x10(%r15)
	movq %r14,0x18(%r15)
	addq $0x28,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_136987+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_6
.p2align 0x4
L_430744:
L_137190:
	movq 0x0(%rbp),%r13
	movq 0x38(%r13),%r15
	movq 0x30(%r13),%r11
	movq %r11,0x28(%rbp)
	movq 0x28(%r13),%r11
	movq %r11,0x30(%rbp)
	movq 0x20(%r13),%r11
	movq %r11,0x38(%rbp)
	movq 0x18(%r13),%r11
	movq %r11,0x40(%rbp)
	movq 0x10(%r13),%r11
	movq %r11,0x48(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x50(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x58(%rbp)
	movq 0x20(%rbp),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r11
	movl %r11d,%r10d
	movl %r10d,0x60(%rbp)
	movslq %r10d,%r14
	cmpq %r11,%r14
	jne L_136964
L_137192:
	movq 0x8(%r15),%r13
	movq %r13,0x68(%rbp)
	movq 0x0(%r15),%r14
	movq 0x18(%rbp),%r11
	movq 0x10(%r11),%r10
	movq %r10,0x70(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_137050
L_137193:
	movq %r15,0x0(%r11)
	movq 0x0(%r10),%r11
	cmpq $0x1,%r11
	je L_430771
L_137194:
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r11
	movl $0x0,0x64(%rbp)
	movq %r11,%r15
.p2align 0x4,,0x7
L_137196:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_430770
L_137258:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xCE8,%r11
	jne L_430769
L_137259:
	movq 0x8(%r13),%r11
	movq %r11,0x78(%rbp)
	cmpq 0x0(%r13),%r14
	movq %r14,(localObjptr+0x8)(%rip)
	je L_430765
L_137197:
	movl 0x64(%rbp),%r11d
	incl %r11d
	movl %r11d,0x78(%rbp)
	jo L_136984
L_137198:
	cmpq $0x1,%r15
	je L_430745
L_137199:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movl %r11d,0x64(%rbp)
	movq (localObjptr+0x8)(%rip),%r14
	jmp L_137196
.p2align 0x4
L_430745:
L_137200:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_137201
L_137256:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_137257+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_137257
.p2align 0x4
.long 0x1D93
L_137257:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_137201:
	movl 0x78(%rbp),%ecx
L_137202:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_137061
L_137203:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_137205
L_137255:
	movl %ecx,0x0(%r15)
L_137205:
	movq $0x13ED,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x0,0x0(%r15)
	movq $0x19D1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x68(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq 0x70(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r10,0x0(%r13)
L_137206:
	movq 0x0(%r15),%r14
	andq $0x1,%r14
	jz L_430747
L_137207:
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x18(%r15),%r11
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	jne L_430746
L_137223:
	movq %r11,0x30(%rbp)
	movq %r14,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_137224+0x0)(%rip),%r14
	movq %r14,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unique_0
.p2align 0x4
L_430746:
L_137208:
L_137209:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (toString_231+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_430747:
L_137225:
	movl 0x60(%rbp),%r15d
	shlq $0x1,%r15
	orq $0x1,%r15
	movq %r15,0x18(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_137050
L_137226:
	movq %r15,0x0(%r13)
	movq 0x70(%rbp),%r13
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_430759
L_137227:
	movq 0x0(%r11),%r14
	movq 0x8(%r11),%r11
	movl $0x0,0x28(%rbp)
	movq %r11,%r15
.p2align 0x4,,0x7
L_137229:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_137230
L_137243:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xCE8,%r13
	jne L_137230
L_137244:
	movq 0x8(%r14),%r13
	movq %r13,0x60(%rbp)
	movq 0x30(%rbp),%r13
	cmpq %r13,0x0(%r14)
	je L_430753
L_137230:
	movl 0x28(%rbp),%r13d
	incl %r13d
	movl %r13d,0x2C(%rbp)
	jo L_136984
L_137231:
	cmpq $0x1,%r15
	je L_430748
L_137232:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movl %r13d,0x28(%rbp)
	jmp L_137229
.p2align 0x4
L_430748:
L_137233:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_137234
L_137241:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_137242+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_137242
.p2align 0x4
.long 0x1D91
L_137242:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_137234:
	movl 0x2C(%rbp),%ecx
L_137235:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_137061
L_137236:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_137238
L_137240:
	movl %ecx,0x0(%r15)
L_137238:
	movq $0x13ED,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x19D1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x38(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x70(%rbp),%r15
	movq 0x0(%r15),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq %r11,0x0(%r15)
L_137239:
	movq $0x33EB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x28,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_136987+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_6
.p2align 0x4
L_430753:
L_137246:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_137247
L_137252:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_137253+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_137253
.p2align 0x4
.long 0x1D92
L_137253:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_137247:
	movl 0x28(%rbp),%r14d
	movslq %r14d,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_137061
L_137248:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %r14d,0x0(%r13)
	jl L_430754
L_137249:
	movq 0x60(%rbp),%r15
L_137250:
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_137239
.p2align 0x4
L_430754:
L_137251:
	movq (globalObjptr+0x1078)(%rip),%r14
	movl 0x28(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movq 0x60(%rbp),%r15
	jmp L_137250
.p2align 0x4
L_430759:
L_137254:
	xorl %ecx,%ecx
	jmp L_137235
.p2align 0x4
L_430765:
L_137261:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_137262
L_137266:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_137267+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_137267
.p2align 0x4
.long 0x15F0
L_137267:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_137262:
	movl 0x64(%rbp),%r14d
	movslq %r14d,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_137061
L_137263:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %r14d,0x0(%r13)
	jl L_430766
L_137264:
	movq 0x78(%rbp),%r15
	jmp L_137206
.p2align 0x4
L_430766:
L_137265:
	movq (globalObjptr+0x1078)(%rip),%r14
	movl 0x64(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movq 0x78(%rbp),%r15
	jmp L_137206
.p2align 0x4
L_430769:
	movq %r14,(localObjptr+0x8)(%rip)
	jmp L_137197
.p2align 0x4
L_430770:
	movq %r14,(localObjptr+0x8)(%rip)
	jmp L_137197
.p2align 0x4
L_430771:
L_137268:
	xorl %ecx,%ecx
	jmp L_137202
.p2align 0x4
L_430774:
L_137185:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x18(%rbp),%r15
	movl 0x0(%r15),%r14d
	movl %r14d,0x48(%rbp)
	movq $0x1D69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq %r14,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_137186+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lookup_1
.p2align 0x4
L_430775:
L_137161:
	movq 0x0(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x20(%r15),%r14
	movq 0x0(%r14),%r13
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x18(%r15),%r11
	movq 0x0(%r14),%r15
	cmpq $0x1,%r15
	jne L_430776
L_137183:
	movq %r11,0x58(%rbp)
	movq %r13,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_137184+0x0)(%rip),%r14
	movq %r14,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unique_0
.p2align 0x4
L_430776:
L_137162:
L_137163:
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_137164+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_430777:
L_137130:
	movq 0x0(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x20(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_136964
L_137132:
	movl %r13d,0x58(%rbp)
	movq $0x37FD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq %r14,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_137133+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_11
.p2align 0x4
L_430779:
L_137087:
	movq 0x0(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x30(%rbp)
	movq 0x20(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%ecx
	movslq %ecx,%r14
	cmpq %r15,%r14
	jne L_136964
L_137089:
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_1438:
	cmpl %ecx,%ebx
	je L_430797
L_137090:
	movslq %ebx,%r14
	cmpq %r15,%r14
	jnb L_430796
L_137092:
	movq 0x20(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r11
	movq 0x8(%r11),%r10
	movq 0xFFFFFFFFFFFFFFF0(%r10),%r9
	movl %r9d,%r8d
	movslq %r8d,%rsp
	cmpq %rsp,%r9
	jne L_136964
L_137094:
	testl %r8d,%r8d
	jnz L_430781
L_137124:
	incl %ebx
	jo L_136984
L_137125:
	jmp loop_1438
.p2align 0x4
L_430781:
L_137095:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_430794
.p2align 0x4,,0x7
L_137096:
	xorl %ecx,%ecx
L_137097:
	movq $0x13AF,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x38(%rbp)
	movl %ecx,0x0(%r13)
	addq $0x18,%r12
	movl $0x0,0x4(%r13)
	movq 0x20(%rbp),%r11
	movq %r11,0x8(%r13)
	movq 0x18(%rbp),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x40(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_137050
L_137098:
	movq %r15,0x0(%r13)
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_430792
L_137099:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_137101:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_137102
L_137114:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xD19,%r13
	jne L_137102
L_137115:
	movq 0x0(%r14),%r13
	cmpq %r13,0x28(%rbp)
	je L_430787
L_137102:
	incl %ecx
	movl %ecx,0x18(%rbp)
	jo L_136984
L_137103:
	cmpq $0x1,%r15
	je L_430782
L_137104:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_137101
.p2align 0x4
L_430782:
L_137105:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_430785
.p2align 0x4,,0x7
L_137106:
	movl 0x18(%rbp),%ecx
L_137107:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_137061
L_137108:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_137110
L_137111:
	movl %ecx,0x0(%r15)
L_137110:
	movq $0x1A33,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x40(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	jmp L_136988
.p2align 0x4
L_430785:
L_137112:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_137113+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_137113
.p2align 0x4
.long 0x5B4
L_137113:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_137106
.p2align 0x4
L_430787:
L_137117:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_137061
L_137118:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_137078
L_137120:
	movl %ecx,0x0(%r15)
	jmp L_137078
.p2align 0x4
L_430792:
L_137121:
	xorl %ecx,%ecx
	jmp L_137107
.p2align 0x4
L_430794:
L_137122:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_137123+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_137123
.p2align 0x4
.long 0x554
L_137123:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_137096
.p2align 0x4
L_430796:
L_137091:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_430797:
L_137126:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_430798
.p2align 0x4,,0x7
L_137127:
	movl $0x1,%ecx
	jmp L_137097
.p2align 0x4
L_430798:
L_137128:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_137129+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_137129
.p2align 0x4
.long 0x554
L_137129:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_137127
.p2align 0x4
L_430800:
L_137041:
	movq 0x0(%rbp),%r15
	movq 0x20(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	addq $0x50,%rbp
	leaq (L_137042+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_430801:
L_137040:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq $0x33E3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_136987+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_6
.p2align 0x4
L_430802:
L_137025:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq $0x47B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq $0x2CD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x28(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x71,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x30(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq $0x33F7,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x10(%r11)
	addq $0x30,%r12
	movq %r13,0x0(%r11)
	movq %r14,0x8(%r11)
	movq 0x18(%rbp),%r15
	movq %r15,0x18(%r11)
	movq %r13,0x20(%r11)
	movq %r11,0x40(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_137026+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_6
.p2align 0x4
L_430803:
L_136998:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq (globalObjptr+0xF3E0)(%rip),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_136999+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_430804:
L_137505:
	movq 0x18(%rbp),%r14
	movq 0x10(%r14),%r13
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq $0x1,0x0(%r13)
	movq 0x20(%rbp),%r14
	movq %r14,0x28(%rbp)
	movq $0x1,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_136987+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_6
.p2align 0x4
L_430805:
L_136968:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_430806:
L_137506:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_137507+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_137507
.p2align 0x4
.long 0x45D
L_137507:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_136967
.p2align 0x4
L_430807:
L_137508:
	movq (globalObjptr+0x4F8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x528
L_136997:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x40(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp L_136973
.p2align 0x4
.long 0x55F
L_136974:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_136975
L_136994:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_136995+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_136995
.p2align 0x4
.long 0x563
L_136995:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_136975:
	movq 0x20(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_136964
L_136977:
	movl %r13d,0x50(%rbp)
	movq $0x3B75,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x20,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x30(%rbp),%r13
	movq %r13,0x8(%r14)
	movq %r15,0x10(%r14)
	movq %r14,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_136978+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
.long 0x549
L_137477:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_137478
L_137503:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_137504+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_137504
.p2align 0x4
.long 0x53D
L_137504:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_137478:
	movq $0x138B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x68(%rbp)
	addq $0x18,%r12
	movq 0x58(%rbp),%r11
	movq %r11,0x0(%r13)
	movq 0x60(%rbp),%r11
	movq %r11,0x8(%r13)
	movq 0x18(%rbp),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x70(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_137050
L_137479:
	movq %r15,0x0(%r13)
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_430822
L_137480:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_137482:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_137483
L_137495:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xD31,%r13
	jne L_137483
L_137496:
	movq 0x0(%r14),%r13
	cmpq %r13,0x28(%rbp)
	je L_430817
L_137483:
	incl %ecx
	movl %ecx,0x58(%rbp)
	jo L_136984
L_137484:
	cmpq $0x1,%r15
	je L_430812
L_137485:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_137482
.p2align 0x4
L_430812:
L_137486:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_137487
L_137493:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_137494+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_137494
.p2align 0x4
.long 0x1D9C
L_137494:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_137487:
	movl 0x58(%rbp),%ecx
L_137488:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_137061
L_137489:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_137491
L_137492:
	movl %ecx,0x0(%r15)
L_137491:
	movq $0x1A63,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x70(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	movq $0xD83,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x38(%rbp),%r13
	movq %r13,0x10(%r15)
	movq $0x33E1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x10(%r13)
	addq $0x28,%r12
	movq 0x48(%rbp),%r15
	movq %r15,0x0(%r13)
	movq 0x50(%rbp),%r15
	movq %r15,0x8(%r13)
	movq %r14,0x18(%r13)
	movq 0x20(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq %r13,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_136987+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_6
.p2align 0x4
L_430817:
L_137498:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_137061
L_137499:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_137078
L_137501:
	movl %ecx,0x0(%r15)
	jmp L_137078
.p2align 0x4
L_430822:
L_137502:
	xorl %ecx,%ecx
	jmp L_137488
.p2align 0x4
.long 0x526
L_137431:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x20(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x40(%rbp)
	movq 0x18(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x48(%rbp)
	movq 0x18(%r14),%r11
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_430825
L_137432:
L_137433:
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_137434+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_430825:
L_137472:
	movq %r11,0x58(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_137473+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unique_0
.p2align 0x4
.long 0x57A
L_137404:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x48(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp L_137370
.p2align 0x4
.long 0x57E
L_137371:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq (globalObjptr+0xA160)(%rip),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_137372+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x57A
L_137305:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x58(%rbp)
	movq 0x18(%r15),%r11
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	jne L_430826
L_137341:
	movq %r11,0x68(%rbp)
	movq %r14,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_137342+0x0)(%rip),%r14
	movq %r14,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unique_0
.p2align 0x4
L_430826:
L_137306:
L_137307:
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_137308+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x523
L_136987:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_136988
.p2align 0x4
.long 0x55F
L_137299:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_137300
L_137301:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_137302+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_137302
.p2align 0x4
.long 0x563
L_137302:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_137300:
	movq $0x33F1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x28,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_136987+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_6
.p2align 0x4
.long 0x528
L_137296:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x40(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp L_137272
.p2align 0x4
.long 0x55F
L_137273:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq (globalObjptr+0xAEC8)(%rip),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_137274+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x459
L_137224:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x20(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp L_137209
.p2align 0x4
.long 0x1
toString_231:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (rev_229+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x576
L_137186:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_137187
L_137188:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_137189+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_137189
.p2align 0x4
.long 0x554
L_137189:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_137187:
	movq $0x33E9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_136987+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_6
.p2align 0x4
.long 0x597
L_137184:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x48(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp L_137163
.p2align 0x4
.long 0x528
L_137164:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq (globalObjptr+0xA160)(%rip),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_137165+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x57E
L_137133:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_137134
L_137159:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_137160+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_137160
.p2align 0x4
.long 0x59F
L_137160:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_137134:
	movq 0x18(%rbp),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x50(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_137050
L_137135:
	movq %r15,0x0(%r13)
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_430839
L_137136:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_137138:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_137139
L_137151:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xD0A,%r13
	jne L_137139
L_137152:
	movq 0x0(%r14),%r13
	cmpq %r13,0x28(%rbp)
	je L_430834
L_137139:
	incl %ecx
	movl %ecx,0x58(%rbp)
	jo L_136984
L_137140:
	cmpq $0x1,%r15
	je L_430829
L_137141:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_137138
.p2align 0x4
L_430829:
L_137142:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_137143
L_137149:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_137150+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_137150
.p2align 0x4
.long 0x1D90
L_137150:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_137143:
	movl 0x58(%rbp),%ecx
L_137144:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_137061
L_137145:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_137147
L_137148:
	movl %ecx,0x0(%r15)
L_137147:
	movq $0x1A15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x50(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	movq $0x33E5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_136987+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_6
.p2align 0x4
L_430834:
L_137154:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_137061
L_137155:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_137078
L_137157:
	movl %ecx,0x0(%r15)
	jmp L_137078
.p2align 0x4
L_430839:
L_137158:
	xorl %ecx,%ecx
	jmp L_137144
.p2align 0x4
.long 0x57E
L_137042:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movl 0x50(%rbp),%r15d
	movl %r15d,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_137043
L_137085:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_137086+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_137086
.p2align 0x4
.long 0x58C
L_137086:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_137043:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x50(%rbp)
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x48(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xF3E8)(%rip),%r15
	movq %r15,0x18(%r13)
	movq $0x1,0x60(%rbp)
	movl $0x0,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_137044+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_5
.p2align 0x4
.long 0x56E
L_137026:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_137027
L_137038:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_137039+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_137039
.p2align 0x4
.long 0x578
L_137039:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_137027:
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_430843
L_137028:
	movq 0x8(%r14),%r15
	movq %r15,0x18(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x20(%rbp)
L_137029:
	movq 0x20(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	movq $0x3DBF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_137030+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp remove_0
.p2align 0x4
L_430843:
L_137034:
	movq 0x28(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq $0x1,0x0(%r15)
	jmp L_136988
.p2align 0x4
.long 0x526
L_136999:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x20(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x40(%rbp)
	movq 0x18(%r15),%r11
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	jne L_430845
L_137023:
	movq %r11,0x50(%rbp)
	movq %r14,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_137024+0x0)(%rip),%r14
	movq %r14,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unique_0
.p2align 0x4
L_430845:
L_137000:
L_137001:
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_137002+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0xEAD
L_136978:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq %r15,0x48(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x50(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0x58(%rbp)
	movq (globalObjptr+0xD0F8)(%rip),%r15
	movq %r15,0x60(%rbp)
	addq $0x48,%rbp
	leaq (L_136979+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
.long 0x57D
L_137434:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xAEC8)(%rip),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_137435+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x100B
L_137473:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x48(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp L_137433
.p2align 0x4
.long 0x57A
L_137372:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_137373+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_75
.p2align 0x4
.long 0x11B3
L_137342:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x58(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp L_137307
.p2align 0x4
.long 0x5B7
L_137308:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_137309+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x540
L_137274:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_137275
L_137293:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_137294+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_137294
.p2align 0x4
.long 0x530
L_137294:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_137275:
	movq 0x20(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_136964
L_137277:
	movl %r13d,0x58(%rbp)
	movq $0x3C39,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x20,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x30(%rbp),%r13
	movq %r13,0x8(%r14)
	movq %r15,0x10(%r14)
	movq %r14,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_137278+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
.long 0x1
rev_229:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_430850
L_137210:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_137211:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_430849
.p2align 0x4,,0x7
L_137212:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_430848
L_137213:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_137211
.p2align 0x4
L_430848:
L_137215:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_137216+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_430849:
L_137220:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_137221+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_137221
.p2align 0x4
.long 0x45B
L_137221:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_137212
.p2align 0x4
L_430850:
L_137222:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_137215
.p2align 0x4
.long 0x57E
L_137165:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_137166
L_137181:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_137182+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_137182
.p2align 0x4
.long 0x59F
L_137182:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_137166:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x50(%rbp)
	addq $0x18,%r12
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_137167:
	addl 0x0(%r15),%ecx
	movl %ecx,0x18(%rbp)
	jo L_136984
L_137168:
	cmpq $0x1,%r14
	je L_430851
L_137169:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_137167
.p2align 0x4
L_430851:
L_137170:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_137171
L_137179:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_137180+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_137180
.p2align 0x4
.long 0x5A0
L_137180:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_137171:
	movl 0x18(%rbp),%ecx
	testl %ecx,%ecx
	jz L_430852
L_137172:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
x_491:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x58(%rbp)
	movq $0x3E37,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x60(%rbp)
	movq (globalObjptr+0x9D8)(%rip),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_137173+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3780
.p2align 0x4
L_430852:
L_137178:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp x_491
.p2align 0x4
.long 0xEAE
L_137044:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_137045
L_137083:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_137084+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_137084
.p2align 0x4
.long 0x566
L_137084:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_137045:
	movq $0x10A7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x58(%rbp)
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_136964
L_137047:
	movl %r13d,0x70(%rbp)
	movq $0x37F9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq %r14,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_137048+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_11
.p2align 0x4
.long 0x526
L_137030:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_137031
L_137035:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_137036+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_137036
.p2align 0x4
.long 0x563
L_137036:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_137031:
	movq 0x20(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_137034
L_137032:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x18(%rbp)
	movq %r14,0x20(%rbp)
	jmp L_137029
.p2align 0x4
.long 0x57D
L_137024:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x40(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp L_137001
.p2align 0x4
.long 0x57F
L_137002:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xAEC8)(%rip),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_137003+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0xEAD
L_136979:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_136980
L_136992:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_136993+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_136993
.p2align 0x4
.long 0x539
L_136993:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_136980:
	movq 0x20(%rbp),%r15
	movl 0x0(%r15),%r14d
	movq $0x1B65,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movl $0x2,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r15,0x8(%r13)
	movq $0xC3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r14d,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x4(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_136981+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3782
.p2align 0x4
.long 0x57E
L_137435:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_137436+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_101
.p2align 0x4
.long 0x5B7
L_137373:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r14),%r13
	cmpq $0x1,0x8(%r13)
	je L_430861
L_137374:
	movq (globalObjptr+0xDF00)(%rip),%r15
L_137375:
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_137376+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_430861:
L_137402:
	movq (globalObjptr+0xDF08)(%rip),%r15
	jmp L_137375
.p2align 0x4
.long 0x5B8
L_137309:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_137310
L_137339:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_137340+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_137340
.p2align 0x4
.long 0x566
L_137340:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_137310:
	movq 0x50(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_136964
L_137312:
	movl %r13d,0x60(%rbp)
	movq $0x3C51,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_137313+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
.long 0x1C92
L_137278:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xDF80)(%rip),%r14
	movq %r14,0x50(%rbp)
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_137279+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp alignPrefix_0
.p2align 0x4
.long 0x1
L_137216:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xEFF8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (bug_437+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x528
L_137173:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x50(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_137174+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x549
L_137048:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_137049
L_137081:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_137082+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_137082
.p2align 0x4
.long 0x53D
L_137082:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_137049:
	movq $0x4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0xFFFFFFFF,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x2791,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x711,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl $0x0,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq $0x139D,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,0x68(%rbp)
	movq %r13,0x0(%r11)
	movq %r15,0x8(%r11)
	addq $0x28,%r12
	movq 0x58(%rbp),%r13
	movq %r13,0x10(%r11)
	movq 0x60(%rbp),%r13
	movq %r13,0x18(%r11)
	movq 0x18(%rbp),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x70(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_137050
L_137051:
	movq %r15,0x0(%r13)
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_430874
L_137052:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_137054:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_137055
L_137072:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xD26,%r13
	jne L_137055
L_137073:
	movq 0x0(%r14),%r13
	cmpq %r13,0x28(%rbp)
	je L_430869
L_137055:
	incl %ecx
	movl %ecx,0x18(%rbp)
	jo L_136984
L_137056:
	cmpq $0x1,%r15
	je L_430864
L_137057:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_137054
.p2align 0x4
L_430864:
L_137058:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_137059
L_137070:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_137071+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_137071
.p2align 0x4
.long 0x1D8F
L_137071:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_137059:
	movl 0x18(%rbp),%ecx
L_137060:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_137061
L_137062:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_137064
L_137069:
	movl %ecx,0x0(%r15)
L_137064:
	movq $0x1A4D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x70(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	movq $0x1,0x60(%rbp)
	movl $0x0,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_137065+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
L_430869:
L_137075:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_137061
L_137076:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_137078
L_137079:
	movl %ecx,0x0(%r15)
	jmp L_137078
.p2align 0x4
L_430874:
L_137080:
	xorl %ecx,%ecx
	jmp L_137060
.p2align 0x4
.long 0x540
L_137003:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_137004+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_101
.p2align 0x4
.long 0x5C0
L_136981:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movl 0x48(%rbp),%r15d
	movl %r15d,0x18(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_136982
L_136990:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_136991+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_136991
.p2align 0x4
.long 0x544
L_136991:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_136982:
	movl 0x18(%rbp),%ecx
	testl %ecx,%ecx
	jz L_430878
L_136983:
	decl %ecx
	jo L_136984
L_136985:
	movq $0x1B67,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl $0x1,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
x_489:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x50(%rbp)
	movq $0x3E37,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x58(%rbp)
	movq (globalObjptr+0x9D8)(%rip),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_136986+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3780
.p2align 0x4
L_430878:
L_136989:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp x_489
.p2align 0x4
.long 0x529
L_137436:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r14
	movq 0x10(%r14),%r13
	movq 0x0(%r13),%r15
	movq %r14,0x18(%rbp)
	cmpq $0x1,%r15
	je L_430881
L_137437:
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movl $0x0,0x28(%rbp)
	movq $0x1,0x50(%rbp)
	movq %r14,%r15
L_137438:
	movq 0x8(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x18(%r15),%r13
	movq 0x0(%r14),%r15
	cmpq $0x1,%r15
	je L_430880
L_137439:
L_137440:
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_137441+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_430880:
L_137469:
	movq %r13,0x68(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_137470+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unique_0
.p2align 0x4
L_430881:
L_137471:
	movq $0x1,%r15
L_137450:
	movq %r15,0x58(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x60(%rbp)
	movq (globalObjptr+0x9F40)(%rip),%r15
	movq %r15,0x68(%rbp)
	movq (globalObjptr+0xDD28)(%rip),%r15
	movq %r15,0x70(%rbp)
	addq $0x58,%rbp
	leaq (L_137451+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
.long 0x5B7
L_137376:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_137377
L_137400:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_137401+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_137401
.p2align 0x4
.long 0x1D99
L_137401:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_137377:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xDF08)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq %r14,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_137378+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp record_3
.p2align 0x4
.long 0x57A
L_137313:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq %r15,0x58(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x60(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0x68(%rbp)
	movq (globalObjptr+0xD0F8)(%rip),%r15
	movq %r15,0x70(%rbp)
	addq $0x58,%rbp
	leaq (L_137314+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
.long 0x1C92
L_137279:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x20(%rbp)
	movl 0x58(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_137280
L_137291:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_137292+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_137292
.p2align 0x4
.long 0x1C93
L_137292:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_137280:
	movq $0xC3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x28(%rbp),%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x20(%rbp),%r13
	movq %r13,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x30(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x18(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_137281:
	addl 0x0(%r15),%ecx
	movl %ecx,0x18(%rbp)
	jo L_136984
L_137282:
	cmpq $0x1,%r14
	je L_430883
L_137283:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_137281
.p2align 0x4
L_430883:
L_137284:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_137285
L_137289:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_137290+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_137290
.p2align 0x4
.long 0x5C1
L_137290:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_137285:
	movl 0x18(%rbp),%ecx
	testl %ecx,%ecx
	jz L_430884
L_137286:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
x_492:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x50(%rbp)
	movq $0x3E37,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x58(%rbp)
	movq (globalObjptr+0x9D8)(%rip),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_137287+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3780
.p2align 0x4
L_430884:
L_137288:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp x_492
.p2align 0x4
.long 0x1
bug_437:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_137217
L_137218:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_137219+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_137219
.p2align 0x4
.long 0x451
L_137219:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_137217:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x528
L_137174:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_137175
L_137176:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_137177+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_137177
.p2align 0x4
.long 0xF84
L_137177:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_137175:
	movq $0x33E7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x28,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_136987+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_6
.p2align 0x4
.long 0x1373
L_137065:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_137066
L_137067:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_137068+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_137068
.p2align 0x4
.long 0x1D8E
L_137068:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_137066:
	movq $0x1D79,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0xD81,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x20,%r12
	movq %r14,0x8(%r13)
	movq 0x48(%rbp),%r15
	movq %r15,0x10(%r13)
	movq $0x33F5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x10(%r15)
	addq $0x20,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_136987+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_6
.p2align 0x4
.long 0x163C
L_137004:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r14
	movq %r14,0x18(%rbp)
	movq 0x20(%r14),%r11
	movb 0x0(%r11),%r13b
	cmpb $0x1,%r13b
	je L_430892
	cmpb $0x2,%r13b
	je L_430891
L_137005:
	movq (globalObjptr+0xA248)(%rip),%r15
L_137006:
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_137007+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_430891:
L_137022:
	movq (globalObjptr+0xEF38)(%rip),%r15
	jmp L_137006
.p2align 0x4
L_430892:
L_137021:
	movq (globalObjptr+0xA250)(%rip),%r15
	jmp L_137006
.p2align 0x4
.long 0x5C0
L_136986:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x20(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_136987+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x5B8
L_137441:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_137442
L_137467:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_137468+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_137468
.p2align 0x4
.long 0x1D9A
L_137468:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_137442:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movl 0x28(%rbp),%r14d
	incl %r14d
	jo L_136984
L_137443:
	movq 0x18(%rbp),%r13
	cmpq $0x1,%r13
	je L_430893
L_137444:
	movl %r14d,0x28(%rbp)
	movq %r15,0x50(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x18(%rbp)
	jmp L_137438
.p2align 0x4
L_430893:
L_137445:
	movq 0x50(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq $0x1,0x40(%rbp)
.p2align 0x4,,0x7
L_137446:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_430895
.p2align 0x4,,0x7
L_137447:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_137450
L_137448:
	movq %r15,0x40(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	movq %r15,0x28(%rbp)
	jmp L_137446
.p2align 0x4
L_430895:
L_137465:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_137466+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_137466
.p2align 0x4
.long 0x59F
L_137466:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	jmp L_137447
.p2align 0x4
.long 0x1D9B
L_137470:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x58(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp L_137440
.p2align 0x4
.long 0xF80
L_137451:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_137452
L_137463:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_137464+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_137464
.p2align 0x4
.long 0x58B
L_137464:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_137452:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x28(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x38(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_137453:
	addl 0x0(%r15),%ecx
	movl %ecx,0x18(%rbp)
	jo L_136984
L_137454:
	cmpq $0x1,%r14
	je L_430898
L_137455:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_137453
.p2align 0x4
L_430898:
L_137456:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_137457
L_137461:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_137462+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_137462
.p2align 0x4
.long 0x578
L_137462:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_137457:
	movl 0x18(%rbp),%ecx
	testl %ecx,%ecx
	jz L_430899
L_137458:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
x_495:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x48(%rbp)
	movq $0x3E37,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x50(%rbp)
	movq (globalObjptr+0x9D8)(%rip),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_137459+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3780
.p2align 0x4
L_430899:
L_137460:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp x_495
.p2align 0x4
.long 0x5B7
L_137378:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq (globalObjptr+0xA160)(%rip),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_137379+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x57A
L_137314:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_137315
L_137337:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_137338+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_137338
.p2align 0x4
.long 0x566
L_137338:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_137315:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xE3B8)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq %r14,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_137316+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp record_3
.p2align 0x4
.long 0x5C0
L_137287:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x20(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_136987+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x163C
L_137007:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_137008
L_137019:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_137020+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_137020
.p2align 0x4
.long 0x58F
L_137020:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_137008:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x28(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x38(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_137009:
	addl 0x0(%r15),%ecx
	movl %ecx,0x18(%rbp)
	jo L_136984
L_137010:
	cmpq $0x1,%r14
	je L_430904
L_137011:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_137009
.p2align 0x4
L_430904:
L_137012:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_137013
L_137017:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_137018+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_137018
.p2align 0x4
.long 0x578
L_137018:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_137013:
	movl 0x18(%rbp),%ecx
	testl %ecx,%ecx
	jz L_430905
L_137014:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
x_490:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x48(%rbp)
	movq $0x3E37,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x50(%rbp)
	movq (globalObjptr+0x9D8)(%rip),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_137015+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3780
.p2align 0x4
L_430905:
L_137016:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp x_490
.p2align 0x4
.long 0x568
L_137459:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x20(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_136987+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x5B8
L_137379:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_137380
L_137398:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_137399+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_137399
.p2align 0x4
.long 0x566
L_137399:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_137380:
	movq 0x20(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_136964
L_137382:
	movl %r13d,0x68(%rbp)
	movq $0x3B79,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x20,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x38(%rbp),%r13
	movq %r13,0x8(%r14)
	movq %r15,0x10(%r14)
	movq %r14,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_137383+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
.long 0x57A
L_137316:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_137317
L_137335:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_137336+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_137336
.p2align 0x4
.long 0x566
L_137336:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_137317:
	movq 0x20(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_136964
L_137319:
	movl %r13d,0x68(%rbp)
	movq $0x3B7F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x28,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x30(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x40(%rbp),%r13
	movq %r13,0x10(%r14)
	movq %r15,0x18(%r14)
	movq %r14,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_137320+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
.long 0x568
L_137015:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x20(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_136987+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x1D97
L_137383:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq %r15,0x60(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x68(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0x70(%rbp)
	movq (globalObjptr+0xD0F8)(%rip),%r15
	movq %r15,0x78(%rbp)
	addq $0x60,%rbp
	leaq (L_137384+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
.long 0x1D94
L_137320:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq %r15,0x60(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x68(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0x70(%rbp)
	movq (globalObjptr+0xD0F8)(%rip),%r15
	movq %r15,0x78(%rbp)
	addq $0x60,%rbp
	leaq (L_137321+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
.long 0x1D97
L_137384:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_137385
L_137396:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_137397+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_137397
.p2align 0x4
.long 0x1D98
L_137397:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_137385:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x30(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x48(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_137386:
	addl 0x0(%r15),%ecx
	movl %ecx,0x18(%rbp)
	jo L_136984
L_137387:
	cmpq $0x1,%r14
	je L_430913
L_137388:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_137386
.p2align 0x4
L_430913:
L_137389:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_137390
L_137394:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_137395+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_137395
.p2align 0x4
.long 0xCA1
L_137395:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_137390:
	movl 0x18(%rbp),%ecx
	testl %ecx,%ecx
	jz L_430914
L_137391:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
x_494:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x58(%rbp)
	movq $0x3E37,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x60(%rbp)
	movq (globalObjptr+0x9D8)(%rip),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_137392+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3780
.p2align 0x4
L_430914:
L_137393:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp x_494
.p2align 0x4
.long 0x1D94
L_137321:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_137322
L_137333:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_137334+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_137334
.p2align 0x4
.long 0x1D96
L_137334:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_137322:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x30(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x18(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_137323:
	addl 0x0(%r15),%ecx
	movl %ecx,0x18(%rbp)
	jo L_136984
L_137324:
	cmpq $0x1,%r14
	je L_430918
L_137325:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_137323
.p2align 0x4
L_430918:
L_137326:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_137327
L_137331:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_137332+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_137332
.p2align 0x4
.long 0x1D95
L_137332:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_137327:
	movl 0x18(%rbp),%ecx
	testl %ecx,%ecx
	jz L_430919
L_137328:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
x_493:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x60(%rbp)
	movq $0x3E37,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x68(%rbp)
	movq (globalObjptr+0x9D8)(%rip),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_137329+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3780
.p2align 0x4
L_430919:
L_137330:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp x_493
.p2align 0x4
.long 0x59B
L_137392:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x20(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_136987+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x5CC
L_137329:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x20(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_136987+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
