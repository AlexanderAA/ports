/* MLton 20130715 (built Mon Jun 13 11:54:01 AEST 2016 on ports.extensibl.com) */
/*   created this file on Mon Jun 13 12:08:47 2016. */
/* Do not edit this file. */
/* Flag settings:  */
/*    align: 8 */
/*    atMLtons: (mlton-compile, @MLton, --) */
/*    chunk: chunk per function */
/*    closureConvertGlobalize: true */
/*    closureConvertShrink: true */
/*    codegen: amd64 */
/*    contifyIntoMain: false */
/*    debug: false */
/*    defaultChar: char8 */
/*    defaultWideChar: widechar32 */
/*    defaultInt: int32 */
/*    defaultReal: real64 */
/*    defaultWord: word32 */
/*    diag passes: [] */
/*    drop passes: [] */
/*    elaborate allowConstant (default): false */
/*    elaborate allowConstant (enabled): true */
/*    elaborate allowFFI (default): false */
/*    elaborate allowFFI (enabled): true */
/*    elaborate allowPrim (default): false */
/*    elaborate allowPrim (enabled): true */
/*    elaborate allowOverload (default): false */
/*    elaborate allowOverload (enabled): true */
/*    elaborate allowRebindEquals (default): false */
/*    elaborate allowRebindEquals (enabled): true */
/*    elaborate deadCode (default): false */
/*    elaborate deadCode (enabled): true */
/*    elaborate forceUsed (default): false */
/*    elaborate forceUsed (enabled): true */
/*    elaborate ffiStr (default):  */
/*    elaborate ffiStr (enabled): true */
/*    elaborate nonexhaustiveExnMatch (default): default */
/*    elaborate nonexhaustiveExnMatch (enabled): true */
/*    elaborate nonexhaustiveMatch (default): warn */
/*    elaborate nonexhaustiveMatch (enabled): true */
/*    elaborate redundantMatch (default): warn */
/*    elaborate redundantMatch (enabled): true */
/*    elaborate resolveScope (default): strdec */
/*    elaborate resolveScope (enabled): true */
/*    elaborate sequenceNonUnit (default): warn */
/*    elaborate sequenceNonUnit (enabled): true */
/*    elaborate warnUnused (default): true */
/*    elaborate warnUnused (enabled): true */
/*    elaborate only: false */
/*    emit main: true */
/*    export header: None */
/*    exn history: false */
/*    generated output format: executable */
/*    gc check: Limit */
/*    indentation: 3 */
/*    inlineIntoMain: true */
/*    inlineLeafA: {loops = true, repeat = true, size = Some 20} */
/*    inlineLeafB: {loops = true, repeat = true, size = Some 40} */
/*    inlineNonRec: {small = 60, product = 320} */
/*    input file: mlton */
/*    keep CoreML: false */
/*    keep def use: true */
/*    keep dot: false */
/*    keep Machine: false */
/*    keep passes: [] */
/*    keep RSSA: false */
/*    keep SSA: false */
/*    keep SSA2: false */
/*    keep SXML: false */
/*    keep XML: false */
/*    extra_: false */
/*    lib dir: /usr/ports/pobj/mlton-20130715/mlton-on-20130715-release/build/lib */
/*    lib target dir: /usr/ports/pobj/mlton-20130715/mlton-on-20130715-release/build/lib/targets/self */
/*    loop passes: 1 */
/*    mark cards: true */
/*    max function size: 10000 */
/*    mlb path vars: [{var = MLTON_ROOT, path = $(LIB_MLTON_DIR)/sml}, {var = SML_LIB, path = $(LIB_MLTON_DIR)/sml}] */
/*    native commented: 0 */
/*    native live stack: false */
/*    native optimize: 1 */
/*    native move hoist: true */
/*    native copy prop: true */
/*    native copy prop cutoff: 1000 */
/*    native cutoff: 100 */
/*    native live transfer: 8 */
/*    native shuffle: true */
/*    native ieee fp: false */
/*    native split: Some 20000 */
/*    optimizationPasses: [<ssa2::default>, <ssa::default>, <sxml::default>, <xml::default>] */
/*    polyvariance: Some {hofo = true, rounds = 2, small = 30, product = 300} */
/*    prefer abs paths: false */
/*    prof passes: [] */
/*    profile: None */
/*    profile branch: false */
/*    profile C: [] */
/*    profile IL: ProfileSource */
/*    profile include/exclude: [(Seq [Star [.], Or [Seq [Seq [[$], [(], [S], [M], [L], [_], [L], [I], [B], [)]]]], Star [.]], false)] */
/*    profile raise: false */
/*    profile stack: false */
/*    profile val: false */
/*    show basis: None */
/*    show def-use: None */
/*    show types: true */
/*    target: self */
/*    target arch: AMD64 */
/*    target OS: OpenBSD */
/*    type check: false */
/*    verbosity: Pass */
/*    warn unrecognized annotation: true */
/*    warn deprecated features: true */
/*    zone cut depth: 100 */
.text
.p2align 0x4
.globl reader_0
.hidden reader_0
reader_0:
L_35325:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_35326
L_35500:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_35501+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35501
.p2align 0x4
.long 0x4AE
L_35501:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_35326:
	movq 0x18(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1F2E,%r14
	je L_387358
	cmpq $0x1F2F,%r14
	je L_387357
	cmpq $0x1F30,%r14
	je L_387356
L_35327:
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq $0x1,0x28(%rbp)
	movl $0x0,0x30(%rbp)
.p2align 0x4,,0x7
L_35328:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_387355
.p2align 0x4,,0x7
L_35329:
	movq 0x20(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_35331
L_35332:
	movl 0x30(%rbp),%ecx
	cmpl %r13d,%ecx
	jnl L_387352
L_35419:
	movslq %ecx,%r13
	cmpq %r15,%r13
	jnb L_35359
L_35421:
	movb 0x0(%r14,%r13,1),%dl
	movl %ecx,%r14d
	incl %r14d
	movq 0x28(%rbp),%r15
	movl %ecx,0x20(%rbp)
	movl %r14d,%ecx
L_35422:
	movzbq %dl,%r14
	movq 0x10(%rbp),%r13
	cmpq 0xFFFFFFFFFFFFFFF0(%r13),%r14
	jnb L_35359
L_35424:
	movl 0x0(%r13,%r14,4),%r11d
	testl %r11d,%r11d
	jz L_387339
L_35454:
	movq $0x1B5F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movzbl %dl,%r15d
	movl %r15d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x18(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0x1F2E,%r13
	je L_387333
	cmpq $0x1F2F,%r13
	je L_387327
	cmpq $0x1F30,%r13
	je L_387290
L_35455:
	movq %r14,0x28(%rbp)
	movl %ecx,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	jmp L_35328
.p2align 0x4
L_387290:
L_35482:
	movq %r14,0x28(%rbp)
	movl %ecx,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
.p2align 0x4,,0x7
L_35483:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_387326
.p2align 0x4,,0x7
L_35484:
	movq 0x20(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_35331
L_35486:
	movl 0x30(%rbp),%ecx
	cmpl %r13d,%ecx
	jnl L_387292
L_35490:
	movslq %ecx,%r13
	cmpq %r15,%r13
	jnb L_387291
L_35492:
	movb 0x0(%r14,%r13,1),%dl
	movl %ecx,%r14d
	incl %r14d
	movq 0x28(%rbp),%r15
	movl %ecx,0x20(%rbp)
	movl %r14d,%ecx
	jmp L_35422
.p2align 0x4
L_387291:
L_35359:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_387292:
L_35487:
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_387324
L_35488:
	movq 0x8(%r15),%r13
	movq %r13,0x10(%rbp)
	movb 0x0(%r15),%r13b
	movb %r13b,0x20(%rbp)
	movq $0x1,0x28(%rbp)
	movl %ecx,0x24(%rbp)
.p2align 0x4,,0x7
L_35335:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_387323
.p2align 0x4,,0x7
L_35336:
	movq $0x1B5F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movzbl 0x20(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_387293
L_35337:
	movq %r15,0x28(%rbp)
	movb 0x0(%r14),%r15b
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movb %r15b,0x20(%rbp)
	jmp L_35335
.p2align 0x4
L_387293:
L_35338:
	movq %r15,0x10(%rbp)
	movl 0x24(%rbp),%r15d
	movl %r15d,0x20(%rbp)
L_35339:
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_387322
L_35340:
	movq 0x8(%r14),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_35341:
	incl %ecx
	cmpq $0x1,%r15
	je L_387294
L_35342:
	movq 0x8(%r15),%r15
	jmp L_35341
.p2align 0x4
L_387294:
L_35343:
L_35344:
	movslq %ecx,%rdx
	movq %rdx,0x28(%rbp)
	testq %rdx,%rdx
	jz L_387321
L_35345:
	cmpq $0x7FFFFFFF,%rdx
	ja L_387320
L_35346:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x51,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_35347+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35347
.p2align 0x4
.long 0x75C
L_35347:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq %rax,%r15
L_35348:
	movq 0x10(%rbp),%r13
	xorq %r14,%r14
.p2align 0x4,,0x7
loop_480:
	cmpq 0x28(%rbp),%r14
	jnl L_387296
L_35408:
	cmpq $0x1,%r13
	je L_387295
L_35409:
	movq 0x8(%r13),%r11
	movb 0x0(%r13),%r10b
	movb %r10b,0x0(%r15,%r14,1)
	incq %r14
	movq %r11,%r13
	jmp loop_480
.p2align 0x4
L_387295:
L_35411:
	movq (globalObjptr+0x5A0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_387296:
L_35349:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_35350
L_35406:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_35407+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35407
.p2align 0x4
.long 0x5E1
L_35407:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_35350:
	movl 0x20(%rbp),%ecx
L_35351:
	movq 0x18(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1F2E,%r14
	je L_387315
	cmpq $0x1F2F,%r14
	je L_387311
	cmpq $0x1F30,%r14
	je L_387307
L_35352:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_387306
L_35354:
	cmpl %r13d,%ecx
	jnl L_387305
L_35357:
	movslq %ecx,%r13
	cmpq %r15,%r13
	jnb L_35359
L_35360:
	movb 0x0(%r14,%r13,1),%dl
	movl %ecx,%ebx
	incl %ebx
L_35361:
	cmpb $0x2B,%dl
	je L_387302
	cmpb $0x2D,%dl
	je L_387300
	cmpb $0x7E,%dl
	je L_387298
L_35362:
	movq 0x8(%rbp),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x1F2B,%r15
	je L_387297
L_35365:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
L_35366:
	movl %ecx,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq %r15,0x10(%rbp)
	jmp x_1277
.p2align 0x4
L_387297:
L_35363:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
L_35364:
	movl %ecx,0x0(%rbp)
	movq $0xA0F,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r13,0x8(%rbp)
	addq $0x18,%r12
	jmp reader_1
.p2align 0x4
L_387298:
L_35382:
	movq 0x8(%rbp),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x1F2B,%r15
	je L_387299
L_35384:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
	movl %ebx,%ecx
L_35381:
	movl %ecx,0x10(%rbp)
	movq %r14,0x18(%rbp)
	movq %r15,0x20(%rbp)
	addq $0x10,%rbp
	leaq (L_35373+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1277
.p2align 0x4
L_387299:
L_35383:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
	movl %ebx,%ecx
L_35372:
	movl %ecx,0x10(%rbp)
	movq $0xA0F,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r13,0x18(%rbp)
	addq $0x18,%r12
	addq $0x10,%rbp
	leaq (L_35373+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp reader_1
.p2align 0x4
L_387300:
L_35370:
	movq 0x8(%rbp),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x1F2B,%r15
	je L_387301
L_35380:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
	movl %ebx,%ecx
	jmp L_35381
.p2align 0x4
L_387301:
L_35371:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
	movl %ebx,%ecx
	jmp L_35372
.p2align 0x4
L_387302:
L_35367:
	movq 0x8(%rbp),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x1F2B,%r15
	je L_387303
L_35369:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
	movl %ebx,%ecx
	jmp L_35366
.p2align 0x4
L_387303:
L_35368:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
	movl %ebx,%ecx
	jmp L_35364
.p2align 0x4
L_387305:
L_35356:
	movq $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_387306:
L_35331:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_387307:
L_35399:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_35331
L_35401:
	cmpl %r13d,%ecx
	jnl L_35356
L_35403:
	movslq %ecx,%r13
	cmpq %r15,%r13
	jnb L_35359
L_35405:
	movb 0x0(%r14,%r13,1),%dl
	movl %ecx,%ebx
	incl %ebx
	jmp L_35361
.p2align 0x4
L_387311:
L_35392:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_35331
L_35394:
	cmpl %r13d,%ecx
	jnl L_35356
L_35396:
	movslq %ecx,%r13
	cmpq %r15,%r13
	jnb L_35359
L_35398:
	movb 0x0(%r14,%r13,1),%dl
	movl %ecx,%ebx
	incl %ebx
	jmp L_35361
.p2align 0x4
L_387315:
L_35385:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_35331
L_35387:
	cmpl %r13d,%ecx
	jnl L_35356
L_35389:
	movslq %ecx,%r13
	cmpq %r15,%r13
	jnb L_35359
L_35391:
	movb 0x0(%r14,%r13,1),%dl
	movl %ecx,%ebx
	incl %ebx
	jmp L_35361
.p2align 0x4
L_387320:
L_35413:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_387321:
L_35414:
	movq (globalObjptr+0x598)(%rip),%r15
	jmp L_35348
.p2align 0x4
L_387322:
L_35415:
	xorl %ecx,%ecx
	jmp L_35344
.p2align 0x4
L_387323:
L_35416:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_35417+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35417
.p2align 0x4
.long 0x644
L_35417:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_35336
.p2align 0x4
L_387324:
L_35489:
	movq $0x1,0x10(%rbp)
	movl %ecx,0x20(%rbp)
	jmp L_35339
.p2align 0x4
L_387326:
L_35493:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_35494+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35494
.p2align 0x4
.long 0x5F6
L_35494:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_35484
.p2align 0x4
L_387327:
L_35469:
	movq %r14,0x28(%rbp)
	movl %ecx,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
.p2align 0x4,,0x7
L_35470:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_387332
.p2align 0x4,,0x7
L_35471:
	movq 0x20(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_35331
L_35473:
	movl 0x30(%rbp),%ecx
	cmpl %r13d,%ecx
	jnl L_387329
L_35477:
	movslq %ecx,%r13
	cmpq %r15,%r13
	jnb L_35359
L_35479:
	movb 0x0(%r14,%r13,1),%dl
	movl %ecx,%r14d
	incl %r14d
	movq 0x28(%rbp),%r15
	movl %ecx,0x20(%rbp)
	movl %r14d,%ecx
	jmp L_35422
.p2align 0x4
L_387329:
L_35474:
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_387330
L_35475:
	movq 0x8(%r15),%r13
	movq %r13,0x10(%rbp)
	movb 0x0(%r15),%r13b
	movb %r13b,0x20(%rbp)
	movq $0x1,0x28(%rbp)
	movl %ecx,0x24(%rbp)
	jmp L_35335
.p2align 0x4
L_387330:
L_35476:
	movq $0x1,0x10(%rbp)
	movl %ecx,0x20(%rbp)
	jmp L_35339
.p2align 0x4
L_387332:
L_35480:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_35481+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35481
.p2align 0x4
.long 0x5F6
L_35481:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_35471
.p2align 0x4
L_387333:
L_35456:
	movq %r14,0x28(%rbp)
	movl %ecx,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
.p2align 0x4,,0x7
L_35457:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_387338
.p2align 0x4,,0x7
L_35458:
	movq 0x20(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_35331
L_35460:
	movl 0x30(%rbp),%ecx
	cmpl %r13d,%ecx
	jnl L_387335
L_35464:
	movslq %ecx,%r13
	cmpq %r15,%r13
	jnb L_35359
L_35466:
	movb 0x0(%r14,%r13,1),%dl
	movl %ecx,%r14d
	incl %r14d
	movq 0x28(%rbp),%r15
	movl %ecx,0x20(%rbp)
	movl %r14d,%ecx
	jmp L_35422
.p2align 0x4
L_387335:
L_35461:
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_387336
L_35462:
	movq 0x8(%r15),%r13
	movq %r13,0x10(%rbp)
	movb 0x0(%r15),%r13b
	movb %r13b,0x20(%rbp)
	movq $0x1,0x28(%rbp)
	movl %ecx,0x24(%rbp)
	jmp L_35335
.p2align 0x4
L_387336:
L_35463:
	movq $0x1,0x10(%rbp)
	movl %ecx,0x20(%rbp)
	jmp L_35339
.p2align 0x4
L_387338:
L_35467:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_35468+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35468
.p2align 0x4
.long 0x5F6
L_35468:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_35458
.p2align 0x4
L_387339:
L_35425:
	cmpq $0x1,%r15
	je L_387349
L_35426:
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	movb 0x0(%r15),%r14b
	movb %r14b,0x24(%rbp)
	movq $0x1,0x28(%rbp)
.p2align 0x4,,0x7
L_35427:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_387348
.p2align 0x4,,0x7
L_35428:
	movq $0x1B5F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movzbl 0x24(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_387340
L_35429:
	movq %r15,0x28(%rbp)
	movb 0x0(%r14),%r15b
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movb %r15b,0x24(%rbp)
	jmp L_35427
.p2align 0x4
L_387340:
L_35430:
	movq %r15,0x10(%rbp)
L_35431:
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_387347
L_35432:
	movq 0x8(%r14),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_35433:
	incl %ecx
	cmpq $0x1,%r15
	je L_387341
L_35434:
	movq 0x8(%r15),%r15
	jmp L_35433
.p2align 0x4
L_387341:
L_35435:
L_35436:
	movslq %ecx,%rdx
	movq %rdx,0x28(%rbp)
	testq %rdx,%rdx
	jz L_387346
L_35437:
	cmpq $0x7FFFFFFF,%rdx
	ja L_35413
L_35438:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x51,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_35439+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35439
.p2align 0x4
.long 0x75C
L_35439:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq %rax,%r15
L_35440:
	movq 0x10(%rbp),%r13
	xorq %r14,%r14
.p2align 0x4,,0x7
loop_481:
	cmpq 0x28(%rbp),%r14
	jnl L_387343
L_35445:
	cmpq $0x1,%r13
	je L_35411
L_35446:
	movq 0x8(%r13),%r11
	movb 0x0(%r13),%r10b
	movb %r10b,0x0(%r15,%r14,1)
	incq %r14
	movq %r11,%r13
	jmp loop_481
.p2align 0x4
L_387343:
L_35441:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_35442
L_35443:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_35444+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35444
.p2align 0x4
.long 0x5E1
L_35444:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_35442:
	movl 0x20(%rbp),%ecx
	jmp L_35351
.p2align 0x4
L_387346:
L_35449:
	movq (globalObjptr+0x598)(%rip),%r15
	jmp L_35440
.p2align 0x4
L_387347:
L_35450:
	xorl %ecx,%ecx
	jmp L_35436
.p2align 0x4
L_387348:
L_35451:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_35452+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35452
.p2align 0x4
.long 0x644
L_35452:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_35428
.p2align 0x4
L_387349:
L_35453:
	movq $0x1,0x10(%rbp)
	jmp L_35431
.p2align 0x4
L_387352:
L_35333:
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_387353
L_35334:
	movq 0x8(%r15),%r13
	movq %r13,0x10(%rbp)
	movb 0x0(%r15),%r13b
	movb %r13b,0x20(%rbp)
	movq $0x1,0x28(%rbp)
	movl %ecx,0x24(%rbp)
	jmp L_35335
.p2align 0x4
L_387353:
L_35418:
	movq $0x1,0x10(%rbp)
	movl %ecx,0x20(%rbp)
	jmp L_35339
.p2align 0x4
L_387355:
L_35495:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_35496+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35496
.p2align 0x4
.long 0x5F6
L_35496:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_35329
.p2align 0x4
L_387356:
L_35499:
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq $0x1,0x28(%rbp)
	movl $0x0,0x30(%rbp)
	jmp L_35483
.p2align 0x4
L_387357:
L_35498:
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq $0x1,0x28(%rbp)
	movl $0x0,0x30(%rbp)
	jmp L_35470
.p2align 0x4
L_387358:
L_35497:
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq $0x1,0x28(%rbp)
	movl $0x0,0x30(%rbp)
	jmp L_35457
.p2align 0x4
.long 0x4AF
L_35373:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq $0x1,%r15
	je L_35356
L_35374:
	movq 0x0(%r15),%r15
	movq %r15,0x8(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_35375+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigNeg_0
.p2align 0x4
.long 0x1
L_35375:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_35376
L_35377:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_35378+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35378
.p2align 0x4
.long 0x451
L_35378:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_35376:
	movq $0x1B4F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl reader_1
.hidden reader_1
reader_1:
L_35502:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_35503
L_35545:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_35546+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35546
.p2align 0x4
.long 0x494
L_35546:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_35503:
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x8(%r15),%r14
	movq 0x18(%r14),%r13
	movq %r13,0x30(%rbp)
	movl 0x8(%r14),%r13d
	movl %r13d,0x4(%rbp)
	movq 0x10(%r14),%r13
	movq %r13,0x18(%rbp)
	movl 0x0(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_35504+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1278
.p2align 0x4
.long 0x490
L_35504:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_35505
L_35543:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_35544+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35544
.p2align 0x4
.long 0x4E7
L_35544:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_35505:
	movq 0x8(%rbp),%r15
	cmpq $0x1,%r15
	je L_387366
L_35506:
	movl 0x8(%r15),%r14d
	movq 0x0(%r15),%r13
	movl 0x4(%rbp),%r15d
	decl %r15d
	jo L_387365
L_35508:
	movl %r14d,0x20(%rbp)
	movl %r15d,0x24(%rbp)
	movq %r13,0x28(%rbp)
loop_482:
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r13,0x30(%rbp)
	cmpl $0x0,0x24(%rbp)
	jng L_387363
L_35535:
	movq %r14,0x48(%rbp)
	movl 0x20(%rbp),%r15d
	movl %r15d,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_35536+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1278
.p2align 0x4
L_387363:
L_35509:
	movl $0x1,%ecx
L_35510:
	movq 0x28(%rbp),%r15
	shlq $0x1,%r15
	orq $0x1,%r15
	movq %r15,0x18(%rbp)
	movl 0x20(%rbp),%r15d
	movl %ecx,%ebx
	movl %r15d,%ecx
loop_483:
	movq 0x10(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x28(%rbp)
	testl %ebx,%ebx
	jz L_387364
L_35513:
	movl %ecx,0x50(%rbp)
	movq 0x18(%r14),%r15
	movq %r15,0x58(%rbp)
	movl 0x8(%r14),%r15d
	movl %r15d,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x38(%rbp)
	movq 0x10(%r14),%r15
	movq %r15,0x40(%rbp)
	addq $0x50,%rbp
	leaq (L_35514+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1278
.p2align 0x4
L_387364:
L_35512:
	movq $0x1B4F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_387365:
L_35507:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_387366:
L_35542:
	movq $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x964
L_35536:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_35537
L_35540:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_35541+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35541
.p2align 0x4
.long 0x5F7
L_35541:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_35537:
	movq 0x38(%rbp),%r15
	cmpq $0x1,%r15
	je L_387368
L_35538:
	movl 0x8(%r15),%r14d
	movl %r14d,0x20(%rbp)
	decl 0x24(%rbp)
	movq 0x30(%rbp),%r14
	movq 0x28(%rbp),%r13
	imulq %r13,%r14
	addq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	jmp loop_482
.p2align 0x4
L_387368:
L_35539:
	xorl %ecx,%ecx
	jmp L_35510
.p2align 0x4
.long 0x95D
L_35514:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_35515
L_35533:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_35534+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35534
.p2align 0x4
.long 0x963
L_35534:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_35515:
	movq 0x48(%rbp),%r15
	cmpq $0x1,%r15
	je L_35512
L_35516:
	movl 0x8(%r15),%r14d
	movq 0x0(%r15),%r13
	movl 0x30(%rbp),%r15d
	decl %r15d
	jo L_35507
L_35517:
	movq %r13,0x48(%rbp)
	movq 0x38(%rbp),%r13
	movq %r13,0x30(%rbp)
	movl %r14d,0x38(%rbp)
	movl %r15d,0x3C(%rbp)
loop_484:
	movq 0x40(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r13,0x50(%rbp)
	cmpl $0x0,0x3C(%rbp)
	jng L_387370
L_35528:
	movq %r14,0x68(%rbp)
	movl 0x38(%rbp),%r15d
	movl %r15d,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_35529+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1278
.p2align 0x4
L_387370:
L_35518:
	movl $0x1,0x3C(%rbp)
L_35519:
	movq 0x30(%rbp),%r15
	shlq $0x1,%r15
	orq $0x1,%r15
	movq %r15,0x60(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x58,%rbp
	leaq (L_35520+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1182
.p2align 0x4
.long 0x962
L_35529:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq $0x1,%r15
	je L_387374
L_35530:
	movl 0x8(%r15),%r14d
	movl %r14d,0x38(%rbp)
	movq 0x0(%r15),%r14
	decl 0x3C(%rbp)
	movq 0x30(%rbp),%r15
	movq 0x50(%rbp),%r13
	imulq %r13,%r15
	movq %r15,0x30(%rbp)
	movq 0x48(%rbp),%r15
	imulq %r13,%r15
	addq %r15,%r14
	movq %r14,0x48(%rbp)
	jmp loop_484
.p2align 0x4
L_387374:
L_35531:
	movl $0x0,0x3C(%rbp)
	jmp L_35519
.p2align 0x4
.long 0x95E
L_35520:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_35521
L_35526:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_35527+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35527
.p2align 0x4
.long 0x961
L_35527:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_35521:
	movq 0x48(%rbp),%r15
	shlq $0x1,%r15
	orq $0x1,%r15
	movq $0x2D5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x18(%rbp),%r15
	movq %r15,0x8(%r14)
	movq %r14,0x48(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_35522+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1183
.p2align 0x4
.long 0x95F
L_35522:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_35523
L_35524:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_35525+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35525
.p2align 0x4
.long 0x960
L_35525:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_35523:
	movl 0x38(%rbp),%ecx
	movl 0x3C(%rbp),%ebx
	jmp loop_483
.text
.p2align 0x4
.globl x_1278
.hidden x_1278
x_1278:
L_35547:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_35632
L_35548:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_387421
L_35549:
	movq 0x8(%rbp),%r15
	movb 0x0(%r15),%r14b
	movq 0x8(%r15),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x1F2E,%r15
	je L_387414
	cmpq $0x1F2F,%r15
	je L_387407
	cmpq $0x1F30,%r15
	je L_387400
L_35550:
	movq 0x0(%r13),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r10,%r13
	jne L_387399
L_35553:
	movl 0x0(%rbp),%ecx
	cmpl %r11d,%ecx
	jnl L_35555
L_35556:
	movslq %ecx,%r11
	cmpq %r13,%r11
	jnb L_387397
L_35559:
	movb 0x0(%r15,%r11,1),%dl
	incl %ecx
	cmpb $0x1,%r14b
	je L_387393
	cmpb $0x2,%r14b
	je L_387390
	cmpb $0x3,%r14b
	je L_387386
L_35560:
L_35561:
	cmpb $0x30,%dl
	jb L_35568
L_35562:
	cmpb $0x39,%dl
	ja L_387378
L_35563:
	movzbl %dl,%r14d
	subl $0x30,%r14d
	jo L_387377
L_35565:
	movslq %r14d,%r15
L_35566:
	movq $0x2967,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movl %ecx,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0xC(%r14)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_387377:
L_35564:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_387378:
L_35568:
	cmpb $0x61,%dl
	jb L_35573
L_35569:
	cmpb $0x66,%dl
	ja L_387380
L_35570:
	movzbl %dl,%r14d
	subl $0x57,%r14d
	jo L_35564
L_35571:
	movslq %r14d,%r15
	jmp L_35566
.p2align 0x4
L_387380:
L_35573:
	cmpb $0x41,%dl
	jb L_35555
L_35574:
	cmpb $0x46,%dl
	ja L_387382
L_35575:
	movzbl %dl,%r14d
	subl $0x37,%r14d
	jo L_35564
L_35576:
	movslq %r14d,%r15
	jmp L_35566
.p2align 0x4
L_387382:
L_35555:
	movq $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_387386:
L_35592:
L_35593:
	cmpb $0x30,%dl
	jb L_35555
L_35594:
	cmpb $0x39,%dl
	ja L_35555
L_35595:
	movzbl %dl,%r14d
	subl $0x30,%r14d
	jo L_35564
L_35596:
	movslq %r14d,%r15
	jmp L_35566
.p2align 0x4
L_387390:
L_35588:
L_35589:
	cmpb $0x30,%dl
	je L_387392
	cmpb $0x31,%dl
	je L_387391
	jmp L_35555
.p2align 0x4
L_387391:
L_35591:
	movq $0x1,%r15
	jmp L_35566
.p2align 0x4
L_387392:
L_35590:
	xorq %r15,%r15
	jmp L_35566
.p2align 0x4
L_387393:
L_35581:
L_35582:
	cmpb $0x30,%dl
	jb L_35555
L_35583:
	cmpb $0x37,%dl
	ja L_35555
L_35584:
	movzbl %dl,%r14d
	subl $0x30,%r14d
	jo L_35564
L_35585:
	movslq %r14d,%r15
	jmp L_35566
.p2align 0x4
L_387397:
L_35558:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_387399:
L_35552:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_387400:
L_35621:
	movq 0x0(%r13),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r13,%r10
	jne L_35552
L_35623:
	movl 0x0(%rbp),%ecx
	cmpl %r11d,%ecx
	jnl L_35555
L_35625:
	movslq %ecx,%r11
	cmpq %r13,%r11
	jnb L_35558
L_35627:
	movb 0x0(%r15,%r11,1),%dl
	incl %ecx
	cmpb $0x1,%r14b
	je L_35582
	cmpb $0x2,%r14b
	je L_35589
	cmpb $0x3,%r14b
	je L_35593
L_35628:
	jmp L_35561
.p2align 0x4
L_387407:
L_35610:
	movq 0x0(%r13),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r10,%r13
	jne L_35552
L_35612:
	movl 0x0(%rbp),%ecx
	cmpl %r11d,%ecx
	jnl L_35555
L_35614:
	movslq %ecx,%r11
	cmpq %r13,%r11
	jnb L_35558
L_35616:
	movb 0x0(%r15,%r11,1),%dl
	incl %ecx
	cmpb $0x1,%r14b
	je L_35582
	cmpb $0x2,%r14b
	je L_35589
	cmpb $0x3,%r14b
	je L_35593
L_35617:
	jmp L_35561
.p2align 0x4
L_387414:
L_35599:
	movq 0x0(%r13),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r13,%r10
	jne L_35552
L_35601:
	movl 0x0(%rbp),%ecx
	cmpl %r11d,%ecx
	jnl L_35555
L_35603:
	movslq %ecx,%r11
	cmpq %r13,%r11
	jnb L_35558
L_35605:
	movb 0x0(%r15,%r11,1),%dl
	incl %ecx
	cmpb $0x1,%r14b
	je L_35582
	cmpb $0x2,%r14b
	je L_35589
	cmpb $0x3,%r14b
	je L_35593
L_35606:
	jmp L_35561
.p2align 0x4
L_387421:
L_35632:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_35633+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35633
.p2align 0x4
.long 0x494
L_35633:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_35549
.text
.p2align 0x4
.globl x_1277
.hidden x_1277
x_1277:
L_35634:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_35712
L_35635:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_387456
L_35636:
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1F2E,%r14
	je L_387452
	cmpq $0x1F2F,%r14
	je L_387448
	cmpq $0x1F30,%r14
	je L_387444
L_35637:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_35639
L_35640:
	movl 0x0(%rbp),%ecx
	cmpl %r13d,%ecx
	jnl L_387442
L_35643:
	movslq %ecx,%r13
	cmpq %r15,%r13
	jnb L_35645
L_35646:
	movb 0x0(%r14,%r13,1),%dl
	incl %ecx
L_35647:
	cmpb $0x30,%dl
	jne L_387440
L_35649:
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1F2E,%r14
	je L_387436
	cmpq $0x1F2F,%r14
	je L_387432
	cmpq $0x1F30,%r14
	je L_387428
L_35650:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_387427
L_35652:
	cmpl %r13d,%ecx
	jnl L_387426
L_35655:
	movslq %ecx,%r13
	cmpq %r15,%r13
	jnb L_387425
L_35657:
	movb 0x0(%r14,%r13,1),%dl
	incl %ecx
L_35658:
	cmpb $0x78,%dl
	je L_35662
L_35659:
	cmpb $0x58,%dl
	je L_387423
L_35660:
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp reader_1
.p2align 0x4
L_387423:
L_35662:
	movl %ecx,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_35663+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp reader_1
.p2align 0x4
L_387425:
L_35645:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_387426:
L_35654:
	movq $0x1B4F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_387427:
L_35639:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_387428:
L_35684:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_35639
L_35686:
	cmpl %r13d,%ecx
	jnl L_35654
L_35688:
	movslq %ecx,%r13
	cmpq %r15,%r13
	jnb L_35645
L_35690:
	movb 0x0(%r14,%r13,1),%dl
	incl %ecx
	jmp L_35658
.p2align 0x4
L_387432:
L_35677:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_35639
L_35679:
	cmpl %r13d,%ecx
	jnl L_35654
L_35681:
	movslq %ecx,%r13
	cmpq %r15,%r13
	jnb L_35645
L_35683:
	movb 0x0(%r14,%r13,1),%dl
	incl %ecx
	jmp L_35658
.p2align 0x4
L_387436:
L_35670:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_35639
L_35672:
	cmpl %r13d,%ecx
	jnl L_35654
L_35674:
	movslq %ecx,%r13
	cmpq %r15,%r13
	jnb L_35645
L_35676:
	movb 0x0(%r14,%r13,1),%dl
	incl %ecx
	jmp L_35658
.p2align 0x4
L_387440:
L_35648:
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp reader_1
.p2align 0x4
L_387442:
L_35642:
	movq $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_387444:
L_35705:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_35639
L_35707:
	movl 0x0(%rbp),%ecx
	cmpl %r13d,%ecx
	jnl L_35642
L_35709:
	movslq %ecx,%r13
	cmpq %r15,%r13
	jnb L_35645
L_35711:
	movb 0x0(%r14,%r13,1),%dl
	incl %ecx
	jmp L_35647
.p2align 0x4
L_387448:
L_35698:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_35639
L_35700:
	movl 0x0(%rbp),%ecx
	cmpl %r13d,%ecx
	jnl L_35642
L_35702:
	movslq %ecx,%r13
	cmpq %r15,%r13
	jnb L_35645
L_35704:
	movb 0x0(%r14,%r13,1),%dl
	incl %ecx
	jmp L_35647
.p2align 0x4
L_387452:
L_35691:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_35639
L_35693:
	movl 0x0(%rbp),%ecx
	cmpl %r13d,%ecx
	jnl L_35642
L_35695:
	movslq %ecx,%r13
	cmpq %r15,%r13
	jnb L_35645
L_35697:
	movb 0x0(%r14,%r13,1),%dl
	incl %ecx
	jmp L_35647
.p2align 0x4
L_387456:
L_35712:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_35713+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35713
.p2align 0x4
.long 0x4E8
L_35713:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_35636
.p2align 0x4
.long 0x1
L_35663:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_35664
L_35667:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_35668+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35668
.p2align 0x4
.long 0x451
L_35668:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_35664:
	movq 0x0(%rbp),%r15
	cmpq $0x1,%r15
	je L_387458
L_35665:
	movq 0x0(%r15),%r14
	movq $0x1B4F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_387458:
L_35666:
	movq $0x1B4F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl x_1205
.hidden x_1205
x_1205:
L_35714:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_35715
L_35782:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_35783+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35783
.p2align 0x4
.long 0x451
L_35783:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_35715:
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq %r14,0x8(%rbp)
	movl %r14d,%r15d
	movl %r15d,0x10(%rbp)
	movslq %r15d,%r13
	cmpq %r14,%r13
	je L_387460
L_35716:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_387460:
L_35717:
	cmpl $0x0,0x10(%rbp)
	jng L_35719
L_35720:
	cmpq $0x0,0x8(%rbp)
	jna L_35722
L_35723:
	movq 0x0(%rbp),%r14
	movb 0x0(%r14),%r15b
	cmpb $0x66,%r15b
	je L_387475
	cmpb $0x74,%r15b
	je L_387461
L_35719:
	movq $0x0,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_387461:
L_35755:
	movq $0x1,0x18(%rbp)
	movl $0x1,0x14(%rbp)
	movl $0x3,0x20(%rbp)
.p2align 0x4,,0x7
loop_486:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_387474
.p2align 0x4,,0x7
L_35756:
	movl 0x20(%rbp),%r15d
	cmpl $0x0,%r15d
	jng L_387464
L_35775:
	movl 0x14(%rbp),%r14d
	cmpl 0x10(%rbp),%r14d
	jnl L_35719
L_35777:
	movslq %r14d,%r13
	cmpq 0x8(%rbp),%r13
	jnb L_387462
L_35779:
	movq 0x0(%rbp),%r11
	movb 0x0(%r11,%r13,1),%r10b
	incl %r14d
	movl %r14d,0x14(%rbp)
	decl %r15d
	movl %r15d,0x20(%rbp)
	movq $0x1B5F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movzbl %r10b,%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x18(%rbp)
	jmp loop_486
.p2align 0x4
L_387462:
L_35722:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_387464:
L_35757:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_35764
L_35758:
	movq 0x8(%r14),%r13
	movq %r13,0x0(%rbp)
	movb 0x0(%r14),%r13b
	movb %r13b,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_35759:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_387472
.p2align 0x4,,0x7
L_35760:
	movq $0x1B5F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movzbl 0x8(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_387465
L_35761:
	movq %r15,0x10(%rbp)
	movb 0x0(%r14),%r15b
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movb %r15b,0x8(%rbp)
	jmp L_35759
.p2align 0x4
L_387465:
L_35763:
	movq 0x10(%rbp),%r15
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_35764
L_35765:
	movq 0x8(%r15),%r13
	movb 0x0(%r15),%r11b
L_35766:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_35764
L_35767:
	movb 0x0(%r13),%r15b
	cmpq $0x1,0x8(%r13)
	jne L_387469
L_35768:
	cmpb $0x72,0x8(%rbp)
	jne L_35719
L_35769:
	cmpb $0x75,%r11b
	jne L_35719
L_35770:
	cmpb $0x65,%r15b
	jne L_35719
L_35771:
	movl $0x1,%ecx
L_35744:
	movl %ecx,%r15d
	shlq $0x1,%r15
	orq $0x1,%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_387469:
L_35764:
	movq (globalObjptr+0x730)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_387472:
L_35772:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_35773+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35773
.p2align 0x4
.long 0x65A
L_35773:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_35760
.p2align 0x4
L_387474:
L_35780:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_35781+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35781
.p2align 0x4
.long 0x965
L_35781:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	jmp L_35756
.p2align 0x4
L_387475:
L_35724:
	movq $0x1,0x18(%rbp)
	movl $0x1,0x14(%rbp)
	movl $0x4,0x20(%rbp)
.p2align 0x4,,0x7
loop_485:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_387490
.p2align 0x4,,0x7
L_35725:
	movl 0x20(%rbp),%r15d
	cmpl $0x0,%r15d
	jng L_387478
L_35748:
	movl 0x14(%rbp),%r14d
	cmpl 0x10(%rbp),%r14d
	jnl L_35719
L_35750:
	movslq %r14d,%r13
	cmpq 0x8(%rbp),%r13
	jnb L_35722
L_35752:
	movq 0x0(%rbp),%r11
	movb 0x0(%r11,%r13,1),%r10b
	incl %r14d
	movl %r14d,0x14(%rbp)
	decl %r15d
	movl %r15d,0x20(%rbp)
	movq $0x1B5F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movzbl %r10b,%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x18(%rbp)
	jmp loop_485
.p2align 0x4
L_387478:
L_35726:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_35733
L_35727:
	movq 0x8(%r14),%r13
	movq %r13,0x0(%rbp)
	movb 0x0(%r14),%r13b
	movb %r13b,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_35728:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_387488
.p2align 0x4,,0x7
L_35729:
	movq $0x1B5F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movzbl 0x8(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_387479
L_35730:
	movq %r15,0x10(%rbp)
	movb 0x0(%r14),%r15b
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movb %r15b,0x8(%rbp)
	jmp L_35728
.p2align 0x4
L_387479:
L_35732:
	movq 0x10(%rbp),%r15
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_35733
L_35734:
	movq 0x8(%r15),%r13
	movb 0x0(%r15),%r11b
L_35735:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_35733
L_35736:
	movq 0x8(%r13),%r15
	movb 0x0(%r13),%r10b
L_35737:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_35733
L_35738:
	movb 0x0(%r15),%r13b
	cmpq $0x1,0x8(%r15)
	jne L_387484
L_35739:
	cmpb $0x61,0x8(%rbp)
	jne L_35719
L_35740:
	cmpb $0x6C,%r11b
	jne L_35719
L_35741:
	cmpb $0x73,%r10b
	jne L_35719
L_35742:
	cmpb $0x65,%r13b
	jne L_35719
L_35743:
	xorl %ecx,%ecx
	jmp L_35744
.p2align 0x4
L_387484:
L_35733:
	movq (globalObjptr+0x738)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_387488:
L_35745:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_35746+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35746
.p2align 0x4
.long 0x65A
L_35746:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_35729
.p2align 0x4
L_387490:
L_35753:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_35754+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35754
.p2align 0x4
.long 0x965
L_35754:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	jmp L_35725
.text
.p2align 0x4
.globl openIn_0
.hidden openIn_0
openIn_0:
L_35784:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x18(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_35785
L_35809:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_35810+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35810
.p2align 0x4
.long 0x45C
L_35810:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_35785:
	movq 0x8(%rbp),%r13
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r11
	movq %r11,0x20(%rbp)
	movq $0x1,%r15
	xorl %ebx,%ebx
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_35786:
	orl %ecx,%ebx
	movl %ebx,0x8(%rbp)
	cmpq $0x1,%r15
	je L_387494
L_35787:
	movl 0x0(%r15),%r13d
	movq 0x8(%r15),%r15
	movl %ebx,%ecx
	movl %r13d,%ebx
	jmp L_35786
.p2align 0x4
L_387494:
L_35788:
	movq %r14,0x30(%rbp)
	leaq L_35801(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x0(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (fromString_2+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x966
fromString_2:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_35789
L_35807:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_35808+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35808
.p2align 0x4
.long 0x509
L_35808:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_35789:
	movq 0x28(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	decq %r15
	jo L_387499
L_35792:
	movb 0x0(%r14,%r15,1),%r13b
	testb %r13b,%r13b
	jz L_387496
L_35793:
	movq (globalObjptr+0x750)(%rip),%r15
L_35791:
	movq $0x1419,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movq 0x0(%rbp),%r15
	movq %r15,0x0(%r14)
	movq (globalObjptr+0xE5D0)(%rip),%r15
	movq %r15,0x8(%r14)
	movq $0x1933,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	addq $0x10,%r12
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_387496:
L_35794:
	movq $0x1B59,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x8(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x1,0x8(%r15)
	xorl %ebx,%ebx
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_35795:
	orl %ecx,%ebx
	movl %ebx,0x8(%rbp)
	cmpq $0x1,%r15
	je L_387497
L_35796:
	movl 0x0(%r15),%r14d
	movq 0x8(%r15),%r15
	movl %ebx,%ecx
	movl %r14d,%ebx
	jmp L_35795
.p2align 0x4
L_387497:
L_35797:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_35798
L_35805:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_35806+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35806
.p2align 0x4
.long 0x509
L_35806:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_35798:
	movq $0x3E51,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x8(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x30(%rbp)
	movl $0x0,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_35799+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1279
.p2align 0x4
L_387499:
L_35790:
	movq $0x3,%r15
	jmp L_35791
.p2align 0x4
.long 0x25
L_35801:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_35802
L_35803:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_35804+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35804
.p2align 0x4
.long 0x45C
L_35804:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_35802:
	movq 0x8(%rbp),%r15
	jmp L_35791
.p2align 0x4
.long 0x966
L_35799:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movl 0x30(%rbp),%r15d
	movl %r15d,0x8(%rbp)
	movq 0x0(%rbp),%r14
	movq %r14,0x28(%rbp)
	movl %r15d,0x30(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x28,%rbp
	leaq (L_35800+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp newIn_0
.p2align 0x4
.long 0x491
L_35800:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq 0x30(%rbp),%r14
	movq 0x38(%rbp),%r13
	movq %r13,0x28(%rbp)
	movq 0x40(%rbp),%r11
	movq %r11,0x30(%rbp)
	movq 0x48(%rbp),%r10
	movq %r10,0x38(%rbp)
	movq 0x18(%rbp),%r9
	movq %r9,(gcState+0x20)(%rip)
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq %r13,0x10(%rbp)
	movq %r11,0x18(%rbp)
	movq %r10,0x20(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl x_1279
.hidden x_1279
x_1279:
L_35811:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x18(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_35812
L_35974:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_35975+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35975
.p2align 0x4
.long 0x492
L_35975:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_35812:
	incl (gcState+0x44)(%rip)
	movq 0x0(%rbp),%r15
	movq %r15,%r14
	andq $0x1,%r14
	cmpq $0x1,%r14
	je L_387549
L_35813:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1F25,%r14
	je L_387548
	cmpq $0x1F26,%r14
	je L_387547
	cmpq $0x1F27,%r14
	je L_387546
	cmpq $0x1F28,%r14
	je L_387545
	cmpq $0x1F29,%r14
	je L_387543
	cmpq $0x1F2A,%r14
	je L_387502
L_35814:
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	leaq L_35953(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x28,%rbp
	leaq (fromString_3+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_387502:
L_35970:
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0x0(%r15),%rsi
	movq 0x8(%r15),%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_35971+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_Process_execp
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35971
.p2align 0x4
.long 0x492
L_35971:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl %eax,%ecx
x_67:
	cmpl $0xFFFFFFFF,%ecx
	je L_387504
L_35825:
	movl (gcState+0x44)(%rip),%r15d
	testl %r15d,%r15d
	jz L_387503
L_35826:
	movl %ecx,0x0(%rbp)
	decl %r15d
	movl %r15d,(gcState+0x44)(%rip)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_387503:
L_35819:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x740)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_387504:
L_35828:
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_35829+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_Error_getErrno
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35829
.p2align 0x4
.long 0x492
L_35829:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl (gcState+0x44)(%rip),%r15d
	testl %r15d,%r15d
	jz L_35819
L_35830:
	decl %r15d
	movl %r15d,(gcState+0x44)(%rip)
	movl 0x8(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_387511
L_35831:
	movl %eax,0x20(%rbp)
L_35832:
	movq (c_stackP+0x0)(%rip),%rsp
	movl 0x20(%rbp),%edi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_35833+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_Error_strError
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35833
.p2align 0x4
.long 0x48B
L_35833:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq %rax,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_35834
L_35849:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_35850+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35850
.p2align 0x4
.long 0x474
L_35850:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_35834:
	movq 0x28(%rbp),%r15
	movq %r15,0x30(%rbp)
	testq %r15,%r15
	jz L_387509
L_35835:
	xorl %ecx,%ecx
.p2align 0x4,,0x7
loop_487:
	movslq %ecx,%r15
	movq %r15,0x28(%rbp)
	movq 0x30(%rbp),%r13
	movb 0x0(%r13,%r15,1),%r14b
	testb %r14b,%r14b
	jz L_387505
L_35836:
	incl %ecx
	jmp loop_487
.p2align 0x4
L_387505:
L_35837:
	movq 0x28(%rbp),%rdx
	cmpq $0x7FFFFFFF,%rdx
	ja L_387508
L_35838:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x51,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_35839+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35839
.p2align 0x4
.long 0x475
L_35839:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq %rax,0x38(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_488:
	cmpq 0x28(%rbp),%r15
	jnl L_387506
L_35845:
	movl %r15d,%r14d
	movslq %r14d,%r13
	movq 0x38(%rbp),%r14
	movq 0x30(%rbp),%r10
	movb 0x0(%r10,%r13,1),%r11b
	movb %r11b,0x0(%r14,%r15,1)
	incq %r15
	jmp loop_488
.p2align 0x4
L_387506:
L_35840:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_35841
L_35843:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_35844+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35844
.p2align 0x4
.long 0x7BA
L_35844:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_35841:
	movq 0x38(%rbp),%r15
	movq $0x7,0xFFFFFFFFFFFFFFF8(%r15)
L_35842:
	movl 0x20(%rbp),%r14d
	shlq $0x1,%r14
	orq $0x1,%r14
	movq $0x141B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq $0x1931,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	addq $0x10,%r12
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_387508:
L_35847:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_387509:
L_35848:
	movq (globalObjptr+0xDBE8)(%rip),%r15
	jmp L_35842
.p2align 0x4
L_387511:
	movl %eax,%ecx
L_35852:
	cmpl $0x4,%ecx
	je L_387512
L_35853:
	movl %ecx,0x20(%rbp)
	jmp L_35832
.p2align 0x4
L_387512:
L_35854:
	movl (gcState+0x44)(%rip),%r15d
	testl %r15d,%r15d
	jz L_387530
L_35855:
	incl %r15d
	movl %r15d,(gcState+0x44)(%rip)
	movq 0x0(%rbp),%r15
	movq %r15,%r14
	andq $0x1,%r14
	cmpq $0x1,%r14
	je L_387529
L_35856:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1F25,%r14
	je L_387528
	cmpq $0x1F26,%r14
	je L_387527
	cmpq $0x1F27,%r14
	je L_387526
	cmpq $0x1F28,%r14
	je L_387525
	cmpq $0x1F29,%r14
	je L_387523
	cmpq $0x1F2A,%r14
	je L_387513
L_35857:
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	leaq L_35891(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x28,%rbp
	leaq (fromString_4+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_387513:
L_35908:
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0x0(%r15),%rsi
	movq 0x8(%r15),%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_35909+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_Process_execp
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35909
.p2align 0x4
.long 0x649
L_35909:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl %eax,%ecx
x_68:
	cmpl $0xFFFFFFFF,%ecx
	je L_387515
L_35867:
	movl (gcState+0x44)(%rip),%r15d
	testl %r15d,%r15d
	jz L_35819
L_35868:
	movl %ecx,0x0(%rbp)
	decl %r15d
	movl %r15d,(gcState+0x44)(%rip)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_387515:
L_35870:
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_35871+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_Error_getErrno
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35871
.p2align 0x4
.long 0x649
L_35871:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl %eax,%r15d
	movl %r15d,0x20(%rbp)
	movl %eax,(cReturnTemp+0x0)(%rip)
	movl (gcState+0x44)(%rip),%r14d
	testl %r14d,%r14d
	jz L_35819
L_35872:
	decl %r14d
	movl %r14d,(gcState+0x44)(%rip)
	movq (c_stackP+0x0)(%rip),%rsp
	movl %r15d,%edi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_35873+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_Error_strError
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35873
.p2align 0x4
.long 0x48B
L_35873:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq %rax,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_35874
L_35888:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_35889+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35889
.p2align 0x4
.long 0x474
L_35889:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_35874:
	movq 0x28(%rbp),%r15
	movq %r15,0x30(%rbp)
	testq %r15,%r15
	jz L_387520
L_35875:
	xorl %ecx,%ecx
.p2align 0x4,,0x7
loop_489:
	movslq %ecx,%r15
	movq %r15,0x28(%rbp)
	movq 0x30(%rbp),%r13
	movb 0x0(%r13,%r15,1),%r14b
	testb %r14b,%r14b
	jz L_387516
L_35876:
	incl %ecx
	jmp loop_489
.p2align 0x4
L_387516:
L_35877:
	movq 0x28(%rbp),%rdx
	cmpq $0x7FFFFFFF,%rdx
	ja L_35847
L_35878:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x51,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_35879+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35879
.p2align 0x4
.long 0x475
L_35879:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq %rax,0x38(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_490:
	cmpq 0x28(%rbp),%r15
	jnl L_387517
L_35885:
	movl %r15d,%r14d
	movslq %r14d,%r13
	movq 0x38(%rbp),%r14
	movq 0x30(%rbp),%r10
	movb 0x0(%r10,%r13,1),%r11b
	movb %r11b,0x0(%r14,%r15,1)
	incq %r15
	jmp loop_490
.p2align 0x4
L_387517:
L_35880:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_35881
L_35883:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_35884+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35884
.p2align 0x4
.long 0x7BA
L_35884:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_35881:
	movq 0x38(%rbp),%r15
	movq $0x7,0xFFFFFFFFFFFFFFF8(%r15)
L_35882:
	movl 0x20(%rbp),%r14d
	shlq $0x1,%r14
	orq $0x1,%r14
	movq $0x141B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq $0x1931,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	addq $0x10,%r12
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_387520:
L_35887:
	movq (globalObjptr+0xDBE8)(%rip),%r15
	jmp L_35882
.p2align 0x4
L_387523:
L_35903:
	movl 0x4(%r15),%r14d
	movl 0x0(%r15),%r13d
	cmpl $0x0,%r14d
	jg L_387524
L_35904:
	movq (c_stackP+0x0)(%rip),%rsp
	movl %r13d,%edx
	movq (globalObjptr+0x758)(%rip),%rsi
	movl %r14d,%edi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_35905+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_Process_waitpid
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35905
.p2align 0x4
.long 0x649
L_35905:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl %eax,%ecx
	jmp x_68
.p2align 0x4
L_387524:
L_35906:
	movq (c_stackP+0x0)(%rip),%rsp
	movl %r13d,%edx
	movq (globalObjptr+0x758)(%rip),%rsi
	movl %r14d,%edi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_35907+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_Process_waitpid
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35907
.p2align 0x4
.long 0x649
L_35907:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl %eax,%ecx
	jmp x_68
.p2align 0x4
L_387525:
L_35901:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r14d
	movl %r14d,%edx
	movl 0x0(%r15),%esi
	movq 0x8(%r15),%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_35902+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_FileSys_open3
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35902
.p2align 0x4
.long 0x649
L_35902:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl %eax,%ecx
	jmp x_68
.p2align 0x4
L_387526:
L_35896:
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	leaq L_35891(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x28,%rbp
	leaq (fromString_5+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_387527:
L_35894:
	movq (c_stackP+0x0)(%rip),%rsp
	movl 0x0(%r15),%edx
	movl 0x4(%r15),%esi
	movq 0x8(%r15),%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_35895+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_FileSys_open3
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35895
.p2align 0x4
.long 0x649
L_35895:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl %eax,%ecx
	jmp x_68
.p2align 0x4
L_387528:
L_35892:
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0x0(%r15),%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_35893+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_FileSys_Dirstream_closeDir
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35893
.p2align 0x4
.long 0x649
L_35893:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl %eax,%ecx
	jmp x_68
.p2align 0x4
L_387529:
L_35910:
	shrq $0x1,%r15
	movl %r15d,%r14d
	movq (c_stackP+0x0)(%rip),%rsp
	movl %r14d,%edi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_35911+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_IO_close
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35911
.p2align 0x4
.long 0x649
L_35911:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl %eax,%ecx
	jmp x_68
.p2align 0x4
L_387530:
L_35912:
	incl %r15d
	movl %r15d,(gcState+0x44)(%rip)
	movq 0x0(%rbp),%r15
	movq %r15,%r14
	andq $0x1,%r14
	cmpq $0x1,%r14
	je L_387541
L_35913:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1F25,%r14
	je L_387540
	cmpq $0x1F26,%r14
	je L_387539
	cmpq $0x1F27,%r14
	je L_387538
	cmpq $0x1F28,%r14
	je L_387537
	cmpq $0x1F29,%r14
	je L_387535
	cmpq $0x1F2A,%r14
	je L_387531
L_35914:
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	leaq L_35931(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x28,%rbp
	leaq (fromString_6+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_387531:
L_35948:
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0x0(%r15),%rsi
	movq 0x8(%r15),%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_35949+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_Process_execp
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35949
.p2align 0x4
.long 0x492
L_35949:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl %eax,%ecx
x_69:
	cmpl $0xFFFFFFFF,%ecx
	je L_387533
L_35924:
	movl (gcState+0x44)(%rip),%r15d
	testl %r15d,%r15d
	jz L_35819
L_35925:
	movl %ecx,0x0(%rbp)
	decl %r15d
	movl %r15d,(gcState+0x44)(%rip)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_387533:
L_35927:
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_35928+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_Error_getErrno
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35928
.p2align 0x4
.long 0x492
L_35928:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl (gcState+0x44)(%rip),%r15d
	testl %r15d,%r15d
	jz L_35819
L_35929:
	decl %r15d
	movl %r15d,(gcState+0x44)(%rip)
	movl %eax,%ecx
	jmp L_35852
.p2align 0x4
L_387535:
L_35943:
	movl 0x4(%r15),%r14d
	movl 0x0(%r15),%r13d
	cmpl $0x0,%r14d
	jg L_387536
L_35944:
	movq (c_stackP+0x0)(%rip),%rsp
	movl %r13d,%edx
	movq (globalObjptr+0x758)(%rip),%rsi
	movl %r14d,%edi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_35945+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_Process_waitpid
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35945
.p2align 0x4
.long 0x492
L_35945:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl %eax,%ecx
	jmp x_69
.p2align 0x4
L_387536:
L_35946:
	movq (c_stackP+0x0)(%rip),%rsp
	movl %r13d,%edx
	movq (globalObjptr+0x758)(%rip),%rsi
	movl %r14d,%edi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_35947+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_Process_waitpid
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35947
.p2align 0x4
.long 0x492
L_35947:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl %eax,%ecx
	jmp x_69
.p2align 0x4
L_387537:
L_35941:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r14d
	movl %r14d,%edx
	movl 0x0(%r15),%esi
	movq 0x8(%r15),%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_35942+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_FileSys_open3
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35942
.p2align 0x4
.long 0x492
L_35942:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl %eax,%ecx
	jmp x_69
.p2align 0x4
L_387538:
L_35936:
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	leaq L_35931(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x28,%rbp
	leaq (fromString_7+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_387539:
L_35934:
	movq (c_stackP+0x0)(%rip),%rsp
	movl 0x0(%r15),%edx
	movl 0x4(%r15),%esi
	movq 0x8(%r15),%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_35935+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_FileSys_open3
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35935
.p2align 0x4
.long 0x492
L_35935:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl %eax,%ecx
	jmp x_69
.p2align 0x4
L_387540:
L_35932:
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0x0(%r15),%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_35933+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_FileSys_Dirstream_closeDir
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35933
.p2align 0x4
.long 0x492
L_35933:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl %eax,%ecx
	jmp x_69
.p2align 0x4
L_387541:
L_35950:
	shrq $0x1,%r15
	movl %r15d,%r14d
	movq (c_stackP+0x0)(%rip),%rsp
	movl %r14d,%edi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_35951+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_IO_close
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35951
.p2align 0x4
.long 0x492
L_35951:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl %eax,%ecx
	jmp x_69
.p2align 0x4
L_387543:
L_35965:
	movl 0x4(%r15),%r14d
	movl 0x0(%r15),%r13d
	cmpl $0x0,%r14d
	jg L_387544
L_35966:
	movq (c_stackP+0x0)(%rip),%rsp
	movl %r13d,%edx
	movq (globalObjptr+0x758)(%rip),%rsi
	movl %r14d,%edi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_35967+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_Process_waitpid
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35967
.p2align 0x4
.long 0x492
L_35967:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl %eax,%ecx
	jmp x_67
.p2align 0x4
L_387544:
L_35968:
	movq (c_stackP+0x0)(%rip),%rsp
	movl %r13d,%edx
	movq (globalObjptr+0x758)(%rip),%rsi
	movl %r14d,%edi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_35969+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_Process_waitpid
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35969
.p2align 0x4
.long 0x492
L_35969:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl %eax,%ecx
	jmp x_67
.p2align 0x4
L_387545:
L_35963:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r14d
	movl %r14d,%edx
	movl 0x0(%r15),%esi
	movq 0x8(%r15),%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_35964+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_FileSys_open3
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35964
.p2align 0x4
.long 0x492
L_35964:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl %eax,%ecx
	jmp x_67
.p2align 0x4
L_387546:
L_35958:
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	leaq L_35953(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x28,%rbp
	leaq (fromString_8+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_387547:
L_35956:
	movq (c_stackP+0x0)(%rip),%rsp
	movl 0x0(%r15),%edx
	movl 0x4(%r15),%esi
	movq 0x8(%r15),%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_35957+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_FileSys_open3
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35957
.p2align 0x4
.long 0x492
L_35957:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl %eax,%ecx
	jmp x_67
.p2align 0x4
L_387548:
L_35954:
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0x0(%r15),%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_35955+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_FileSys_Dirstream_closeDir
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35955
.p2align 0x4
.long 0x492
L_35955:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl %eax,%ecx
	jmp x_67
.p2align 0x4
L_387549:
L_35972:
	shrq $0x1,%r15
	movl %r15d,%r14d
	movq (c_stackP+0x0)(%rip),%rsp
	movl %r14d,%edi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_35973+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_IO_close
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35973
.p2align 0x4
.long 0x492
L_35973:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl %eax,%ecx
	jmp x_67
.p2align 0x4
.long 0x491
fromString_3:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%rdi
	movq %rdi,0x20(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%rdi),%r15
	decq %r15
	jo L_387553
L_35820:
	movb 0x0(%rdi,%r15,1),%r14b
	testb %r14b,%r14b
	jnz L_387551
L_35823:
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_35824+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_FileSys_unlink
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35824
.p2align 0x4
.long 0x492
L_35824:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl %eax,%ecx
	jmp x_67
.p2align 0x4
L_387551:
L_35822:
	movq (globalObjptr+0x750)(%rip),%r15
L_35816:
	movl (gcState+0x44)(%rip),%r14d
	testl %r14d,%r14d
	jz L_35819
L_35817:
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	decl %r14d
	movl %r14d,(gcState+0x44)(%rip)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_387553:
L_35815:
	movq $0x3,%r15
	jmp L_35816
.p2align 0x4
.long 0x25
L_35953:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	jmp L_35816
.p2align 0x4
.long 0x473
fromString_4:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%rdi
	movq %rdi,0x20(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%rdi),%r15
	decq %r15
	jo L_387556
L_35862:
	movb 0x0(%rdi,%r15,1),%r14b
	testb %r14b,%r14b
	jnz L_387554
L_35865:
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_35866+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_FileSys_unlink
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35866
.p2align 0x4
.long 0x649
L_35866:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl %eax,%ecx
	jmp x_68
.p2align 0x4
L_387554:
L_35864:
	movq (globalObjptr+0x750)(%rip),%r15
L_35859:
	movl (gcState+0x44)(%rip),%r14d
	testl %r14d,%r14d
	jz L_35819
L_35860:
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	decl %r14d
	movl %r14d,(gcState+0x44)(%rip)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_387556:
L_35858:
	movq $0x3,%r15
	jmp L_35859
.p2align 0x4
.long 0x25
L_35891:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	jmp L_35859
.p2align 0x4
.long 0x473
fromString_5:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%rdi
	movq %rdi,0x20(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%rdi),%r15
	decq %r15
	jo L_35858
L_35897:
	movb 0x0(%rdi,%r15,1),%r14b
	testb %r14b,%r14b
	jnz L_35864
L_35899:
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_35900+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_FileSys_chdir
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35900
.p2align 0x4
.long 0x649
L_35900:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl %eax,%ecx
	jmp x_68
.p2align 0x4
.long 0x491
fromString_6:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%rdi
	movq %rdi,0x8(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%rdi),%r15
	decq %r15
	jo L_387561
L_35919:
	movb 0x0(%rdi,%r15,1),%r14b
	testb %r14b,%r14b
	jnz L_387559
L_35922:
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_35923+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_FileSys_unlink
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35923
.p2align 0x4
.long 0x492
L_35923:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl %eax,%ecx
	jmp x_69
.p2align 0x4
L_387559:
L_35921:
	movq (globalObjptr+0x750)(%rip),%r15
L_35916:
	movl (gcState+0x44)(%rip),%r14d
	testl %r14d,%r14d
	jz L_35819
L_35917:
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	decl %r14d
	movl %r14d,(gcState+0x44)(%rip)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_387561:
L_35915:
	movq $0x3,%r15
	jmp L_35916
.p2align 0x4
.long 0x25
L_35931:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	jmp L_35916
.p2align 0x4
.long 0x491
fromString_7:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%rdi
	movq %rdi,0x8(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%rdi),%r15
	decq %r15
	jo L_35915
L_35937:
	movb 0x0(%rdi,%r15,1),%r14b
	testb %r14b,%r14b
	jnz L_35921
L_35939:
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_35940+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_FileSys_chdir
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35940
.p2align 0x4
.long 0x492
L_35940:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl %eax,%ecx
	jmp x_69
.p2align 0x4
.long 0x491
fromString_8:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%rdi
	movq %rdi,0x20(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%rdi),%r15
	decq %r15
	jo L_35815
L_35959:
	movb 0x0(%rdi,%r15,1),%r14b
	testb %r14b,%r14b
	jnz L_35822
L_35961:
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_35962+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_FileSys_chdir
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_35962
.p2align 0x4
.long 0x492
L_35962:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl %eax,%ecx
	jmp x_67
.text
.p2align 0x4
.globl add_2
.hidden add_2
add_2:
L_35976:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_35977
L_36053:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_36054+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36054
.p2align 0x4
.long 0x4AE
L_36054:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_35977:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movq %r15,0x30(%rbp)
	movl %r15d,%ecx
	movslq %ecx,%r14
	cmpq %r15,%r14
	jne L_35979
L_35980:
	movl $0x0,0x38(%rbp)
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_491:
	cmpl %ecx,%ebx
	jnl L_387567
L_36050:
	movl %ebx,%r15d
	incl %r15d
	movslq %ebx,%r14
	cmpq 0x30(%rbp),%r14
	jnb L_387566
L_36052:
	movq 0x28(%rbp),%r13
	movzbl 0x0(%r13,%r14,1),%r11d
	movl 0x38(%rbp),%r14d
	imull $0x1F,%r14d
	addl %r14d,%r11d
	movl %r11d,0x38(%rbp)
	movl %r15d,%ebx
	jmp loop_491
.p2align 0x4
L_387566:
L_35987:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_387567:
L_35981:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_35982
L_36048:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_36049+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36049
.p2align 0x4
.long 0x968
L_36049:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_35982:
	movq 0x18(%rbp),%r13
	movq 0x0(%r13),%r15
	movq (globalObjptr+0xAE0)(%rip),%r13
	movq 0x0(%r13),%r14
	incq %r14
	jo L_387596
L_35984:
	movq %r14,0x0(%r13)
	movq 0x10(%rbp),%r13
	movl 0x0(%r13),%r11d
	andl 0x38(%rbp),%r11d
	cmpl $0x0,%r11d
	jl L_35999
L_35985:
	movslq %r11d,%r13
	movq %r13,0x40(%rbp)
	cmpq 0xFFFFFFFFFFFFFFF0(%r15),%r13
	jnb L_35987
L_35988:
	movq 0x0(%r15,%r13,8),%r11
	movq %r11,0x48(%rbp)
	cmpq $0x1,%r11
	je L_35998
L_35989:
	movq 0x8(%r11),%r14
	movq 0x0(%r11),%r15
.p2align 0x4,,0x7
L_35990:
	movq (globalObjptr+0xAE8)(%rip),%r11
	movq 0x0(%r11),%r13
	incq %r13
	jo L_387592
L_35992:
	movq %r13,0x0(%r11)
	movq 0x10(%r15),%r11
	cmpq %r11,0x28(%rbp)
	je L_387591
L_35993:
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r10
	cmpq %r10,0x30(%rbp)
	jne L_387588
L_36035:
	xorq %r13,%r13
	movq %r11,%r15
.p2align 0x4,,0x7
vectorEqualLoop_122:
	cmpq %r13,0x30(%rbp)
	je L_387587
L_36036:
	movq 0x28(%rbp),%r11
	movb 0x0(%r15,%r13,1),%r10b
	cmpb %r10b,0x0(%r11,%r13,1)
	jne L_387568
L_36043:
	incq %r13
	jmp vectorEqualLoop_122
.p2align 0x4
L_387568:
L_36037:
	cmpq $0x1,%r14
	je L_387569
L_36038:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_35990
.p2align 0x4
L_387569:
L_36039:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_35998
L_36041:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_36042+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36042
.p2align 0x4
.long 0x4EE
L_36042:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_35998:
	movq $0xF9B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movl 0x38(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%rdx
	movq %rdx,0x10(%r15)
	movq 0x8(%rbp),%r14
	movl 0x0(%r14),%r13d
	incl %r13d
	jo L_35999
L_36000:
	movl %r13d,0x0(%r14)
	movq 0x18(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x28FF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	addq $0x18,%r12
	movq 0x48(%rbp),%r15
	movq %r15,0x8(%r10)
	movq 0x40(%rbp),%r15
	cmpq 0xFFFFFFFFFFFFFFF0(%r11),%r15
	jnb L_35987
L_36002:
	movq %r11,%r9
	shrq $0x8,%r9
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r9,1)
	movq %r10,0x0(%r11,%r15,8)
	movq 0x0(%r13),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r11
	movl %r11d,%r10d
	movslq %r10d,%r9
	cmpq %r9,%r11
	jne L_35979
L_36004:
	movl 0x0(%r14),%r15d
	imull $0x4,%r15d
	jo L_35999
L_36005:
	cmpl %r15d,%r10d
	jnl L_387581
L_36007:
	addl %r10d,%r10d
	jo L_35999
L_36008:
	movq 0x10(%rbp),%r15
	movl 0x0(%r15),%r14d
	shll $0x1,%r14d
	orl $0x1,%r14d
	movl %r14d,0x20(%rbp)
	movslq %r10d,%rdx
	movq %rdx,0x28(%rbp)
	cmpq $0x7FFFFFFF,%rdx
	ja L_387579
L_36009:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x8B5,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_36010+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36010
.p2align 0x4
.long 0x8B8
L_36010:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq %rax,0x30(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_492:
	cmpq 0x28(%rbp),%r15
	jnl L_387570
L_36031:
	movq 0x30(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_492
.p2align 0x4
L_387570:
L_36011:
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movl %r13d,0x24(%rbp)
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_387578
L_36013:
	cmpl $0x0,%r13d
	jl L_387577
L_36014:
	movl $0x0,0x40(%rbp)
.p2align 0x4,,0x7
loop_493:
	movl 0x40(%rbp),%r15d
	cmpl 0x24(%rbp),%r15d
	jnl L_387576
L_36016:
	movslq %r15d,%r14
	movq 0x38(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	cmpq $0x1,%r13
	je L_36025
L_36017:
	movq 0x8(%r13),%r15
	movq %r15,0x48(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x50(%rbp)
L_36018:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_387574
.p2align 0x4,,0x7
L_36019:
	movq 0x50(%rbp),%r15
	movl 0x0(%r15),%r14d
	andl 0x20(%rbp),%r14d
	cmpl $0x0,%r14d
	jl L_387573
L_36020:
	movslq %r14d,%r13
	cmpq 0x28(%rbp),%r13
	jnb L_35987
L_36022:
	movq 0x30(%rbp),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq $0x28FF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r15,0x0(%r10)
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r10,0x0(%r14,%r13,8)
	movq 0x48(%rbp),%r15
	cmpq $0x1,%r15
	je L_387571
L_36023:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x48(%rbp)
	movq %r14,0x50(%rbp)
	jmp L_36018
.p2align 0x4
L_387571:
L_36025:
	incl 0x40(%rbp)
	jmp loop_493
.p2align 0x4
L_387573:
L_35999:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_387574:
L_36027:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_36028+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36028
.p2align 0x4
.long 0x967
L_36028:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	jmp L_36019
.p2align 0x4
L_387576:
L_36015:
	movq 0x18(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x10(%rbp),%r14
	movl 0x20(%rbp),%r13d
	movl %r13d,0x0(%r14)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_387577:
L_36030:
	movq (globalObjptr+0x4F8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_387578:
L_35979:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_387579:
L_36032:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_387581:
L_36006:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_387587:
L_36044:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_387588:
L_35994:
	cmpq $0x1,%r14
	je L_387589
L_35995:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_35990
.p2align 0x4
L_387589:
L_35996:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_35998
L_36033:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_36034+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36034
.p2align 0x4
.long 0x4EE
L_36034:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	jmp L_35998
.p2align 0x4
L_387591:
L_36045:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_387592:
L_35991:
	movq (globalObjptr+0xAF0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_387596:
L_35983:
	movq (globalObjptr+0xAF8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl x_1210
.hidden x_1210
x_1210:
L_36055:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x38(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_36056
L_36152:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_36153+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36153
.p2align 0x4
.long 0x976
L_36153:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_36056:
	movq 0x28(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,%r15
	andq $0x1,%r15
	jz L_36058
L_36059:
	shrq $0x1,%r14
	movl %r14d,%r15d
	testl %r15d,%r15d
	jnz L_387627
L_36060:
	movq $0x1,0x28(%rbp)
.p2align 0x4,,0x7
loop_494:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_387626
.p2align 0x4,,0x7
L_36061:
	movq 0x18(%rbp),%r15
	movq 0x10(%rbp),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	jnl L_387621
.p2align 0x4,,0x7
x_70:
	movq 0x18(%rbp),%r15
	movl 0x0(%r15),%r14d
	movl %r14d,0x48(%rbp)
	movq 0x10(%rbp),%r15
	movl 0x0(%r15),%ecx
	movl %r14d,0x4C(%rbp)
.p2align 0x4,,0x7
loop_495:
	movl 0x4C(%rbp),%r15d
	cmpl %ecx,%r15d
	jnl L_387612
L_36091:
	movq 0x20(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movq %r13,0x50(%rbp)
	movslq %r15d,%r11
	cmpq %r13,%r11
	jnb L_387610
L_36096:
	cmpb $0xA,0x0(%r14,%r11,1)
	je L_387600
L_36097:
	incl %r15d
	movl %r15d,0x4C(%rbp)
	jmp loop_495
.p2align 0x4
L_387600:
L_36098:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_36099
L_36124:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r14d
	movl %r14d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r14
	movq %r14,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_36125+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36125
.p2align 0x4
.long 0x972
L_36125:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_36099:
	movl 0x4C(%rbp),%r15d
	incl %r15d
	movl %r15d,%r14d
	movl %r15d,0x10(%rbp)
	movl 0x48(%rbp),%r15d
	subl %r15d,%r14d
	jo L_387608
L_36100:
	movslq %r15d,%r13
	movq %r13,0x40(%rbp)
	movslq %r14d,%rdx
	movq %rdx,0x58(%rbp)
	movq 0x50(%rbp),%r15
	cmpq %r13,%r15
	jb L_36087
L_36101:
	subq %r13,%r15
	cmpq %rdx,%r15
	jb L_387606
L_36102:
	testq %rdx,%rdx
	jz L_387605
L_36103:
	cmpq $0x7FFFFFFF,%rdx
	ja L_387604
L_36104:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x51,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_36105+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36105
.p2align 0x4
.long 0x96E
L_36105:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq %rax,%r15
L_36106:
	xorq %r14,%r14
.p2align 0x4,,0x7
loop_497:
	cmpq 0x58(%rbp),%r14
	jnl L_387601
L_36119:
	movq %r14,%r13
	addq 0x40(%rbp),%r13
	movq 0x20(%rbp),%r10
	movb 0x0(%r10,%r13,1),%r11b
	movb %r11b,0x0(%r15,%r14,1)
	incq %r14
	jmp loop_497
.p2align 0x4
L_387601:
L_36107:
	movq $0x7,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x18(%rbp),%r14
	movl 0x10(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movq %r15,0x18(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq $0x1,0x20(%rbp)
.p2align 0x4,,0x7
L_36108:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_387603
.p2align 0x4,,0x7
L_36109:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_387602
L_36110:
	movq %r15,0x20(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x18(%rbp)
	jmp L_36108
.p2align 0x4
L_387602:
L_36111:
	movq %r15,0x48(%rbp)
	leaq L_36113(%rip),%r15
	movq %r15,0x30(%rbp)
	movq %rbp,%r15
	addq $0x38,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x48,%rbp
	leaq (L_36112+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_387603:
L_36117:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_36118+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36118
.p2align 0x4
.long 0x971
L_36118:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_36109
.p2align 0x4
L_387604:
L_36084:
	movq $0x5,%r15
L_36070:
	movq 0x8(%rbp),%r14
	movq 0x20(%r14),%r13
	movq $0x1419,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movq (globalObjptr+0xE5D8)(%rip),%r15
	movq %r15,0x8(%r14)
	movq $0x1933,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	addq $0x10,%r12
	movq 0x38(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_387605:
L_36121:
	movq (globalObjptr+0x6F8)(%rip),%r15
	jmp L_36106
.p2align 0x4
L_387606:
L_36087:
	movq $0x6,%r15
	jmp L_36070
.p2align 0x4
L_387608:
L_36069:
	movq $0x3,%r15
	jmp L_36070
.p2align 0x4
L_387610:
L_36092:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_36087
L_36094:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r13d
	movl %r13d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r13
	movq %r13,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_36095+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36095
.p2align 0x4
.long 0x96D
L_36095:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_36087
.p2align 0x4
L_387612:
L_36067:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_387620
.p2align 0x4,,0x7
L_36068:
	movl 0x4C(%rbp),%r15d
	movl 0x48(%rbp),%r14d
	subl %r14d,%r15d
	jo L_36069
L_36071:
	movq 0x20(%rbp),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r11
	movslq %r14d,%r13
	movq %r13,0x50(%rbp)
	movslq %r15d,%r14
	movq %r14,0x58(%rbp)
	cmpq %r13,%r11
	jb L_36087
L_36072:
	subq %r13,%r11
	cmpq %r14,%r11
	jb L_36087
L_36073:
	testq %r14,%r14
	jnz L_387615
L_36085:
	movq (globalObjptr+0x6F8)(%rip),%r15
	movq %r15,0x60(%rbp)
.p2align 0x4,,0x7
L_36077:
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_496:
	cmpq 0x58(%rbp),%r15
	jnl L_387613
L_36082:
	movq 0x50(%rbp),%r14
	addq %r15,%r14
	movq 0x60(%rbp),%r13
	movq 0x20(%rbp),%r10
	movb 0x0(%r10,%r14,1),%r11b
	movb %r11b,0x0(%r13,%r15,1)
	incq %r15
	jmp loop_496
.p2align 0x4
L_387613:
L_36078:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_387614
.p2align 0x4,,0x7
L_36079:
	movq 0x60(%rbp),%r15
	movq $0x7,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x18(%rbp),%r14
	movl 0x4C(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x28(%rbp),%r15
	movq %r15,0x8(%r14)
	movq %r14,0x28(%rbp)
	jmp loop_494
.p2align 0x4
L_387614:
L_36080:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_36081+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36081
.p2align 0x4
.long 0x96B
L_36081:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_36079
.p2align 0x4
L_387615:
L_36074:
	movq 0x58(%rbp),%rdx
	cmpq $0x7FFFFFFF,%rdx
	ja L_36084
L_36075:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x51,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_36076+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36076
.p2align 0x4
.long 0x96A
L_36076:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq %rax,0x60(%rbp)
	jmp L_36077
.p2align 0x4
L_387620:
L_36089:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r14d
	movl %r14d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r14
	movq %r14,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_36090+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36090
.p2align 0x4
.long 0x96C
L_36090:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	jmp L_36068
.p2align 0x4
L_387621:
L_36062:
	movq 0x8(%rbp),%r15
	movq 0x18(%r15),%r14
	movq 0x20(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r11
	shrq $0x1,%r11
	cmpq $0x24B3,%r11
	je L_387624
	cmpq $0x24B4,%r11
	je L_387622
L_36063:
	movq %r13,0x60(%rbp)
	movq 0x20(%r14),%r13
	movq %r13,0x68(%rbp)
	movq 0x18(%r14),%r13
	movq %r13,0x70(%rbp)
	movq 0x10(%r14),%r13
	movq %r13,0x78(%rbp)
	movl 0x0(%r14),%r13d
	movl %r13d,0x80(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x88(%rbp)
	leaq L_36113(%rip),%r14
	movq %r14,0x30(%rbp)
	movq %rbp,%r14
	addq $0x38,%r14
	subq (gcState+0x560)(%rip),%r14
	movq %r14,(gcState+0x20)(%rip)
	movq $0x0,0x50(%rbp)
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_36064+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1217
.p2align 0x4
L_387622:
L_36139:
	movq 0x0(%r14),%r11
	movq 0x8(%r14),%r10
	movl 0x0(%r10),%r9d
	testl %r9d,%r9d
	jnz L_387623
L_36140:
	movq 0x8(%r11),%r14
	movq %r14,0x48(%rbp)
	movl 0x0(%r11),%r14d
	movl %r13d,%r11d
	movq $0x3E47,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movl %r11d,0x0(%r13)
	movl %r14d,0x8(%r13)
	addq $0x20,%r12
	movl $0x0,0x4(%r13)
	movl $0x0,0xC(%r13)
	movq %r15,0x10(%r13)
	movq %r13,0x58(%rbp)
	leaq L_36113(%rip),%r15
	movq %r15,0x30(%rbp)
	movq %rbp,%r15
	addq $0x38,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movl $0x1,0x60(%rbp)
	addq $0x58,%rbp
	leaq (x_72+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1213
.p2align 0x4
L_387623:
L_36138:
	movq $0xE,%r15
	jmp L_36070
.p2align 0x4
L_387624:
L_36129:
	movl 0x0(%r14),%r11d
	movq 0x8(%r14),%r10
	movq %r10,0x48(%rbp)
	movq 0x10(%r14),%r10
	movl 0x0(%r10),%r9d
	testl %r9d,%r9d
	jnz L_36138
L_36130:
	movl %r13d,%r14d
	movq $0x3E45,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movl %r14d,0x0(%r13)
	movl %r11d,0x8(%r13)
	addq $0x20,%r12
	movl $0x0,0x4(%r13)
	movl $0x0,0xC(%r13)
	movq %r15,0x10(%r13)
	movq %r13,0x58(%rbp)
	leaq L_36113(%rip),%r15
	movq %r15,0x30(%rbp)
	movq %rbp,%r15
	addq $0x38,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movl $0x1,0x60(%rbp)
	addq $0x58,%rbp
	leaq (x_71+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1213
.p2align 0x4
L_387626:
L_36149:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_36150+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36150
.p2align 0x4
.long 0x975
L_36150:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_36061
.p2align 0x4
L_387627:
L_36058:
	movq 0x38(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x96F
L_36112:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x38(%rbp),%r14
	movq %r14,(gcState+0x20)(%rip)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x651
L_36113:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_36114
L_36115:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_36116+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36116
.p2align 0x4
.long 0x970
L_36116:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_36114:
	movq 0x10(%rbp),%r15
	jmp L_36070
.p2align 0x4
.long 0x969
L_36064:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movl 0x50(%rbp),%ecx
	movl %ecx,0x48(%rbp)
L_36065:
	testl %ecx,%ecx
	jz L_387631
L_36066:
	movq 0x18(%rbp),%r15
	movl $0x0,0x0(%r15)
	movq 0x10(%rbp),%r15
	movl %ecx,0x0(%r15)
	jmp x_70
.p2align 0x4
L_387631:
L_36126:
	movq 0x0(%rbp),%r15
	movq (globalWord64+0x40)(%rip),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_36058
L_36127:
	movq %r15,0x10(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq $0x1,0x20(%rbp)
	jmp L_36108
.p2align 0x4
.long 0x973
x_72:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_36141
L_36145:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_36146+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36146
.p2align 0x4
.long 0x974
L_36146:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_36141:
	movq 0x50(%rbp),%r15
	movl %r15d,%ecx
	movslq %ecx,%r14
	cmpq %r15,%r14
	jne L_36069
L_36143:
	movq 0x48(%rbp),%r15
	addq 0x0(%r15),%r14
	jo L_36069
L_36144:
	movq %r14,0x0(%r15)
	jmp L_36065
.p2align 0x4
.long 0x973
x_71:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_36131
L_36135:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_36136+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36136
.p2align 0x4
.long 0x974
L_36136:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_36131:
	movq 0x50(%rbp),%r15
	movl %r15d,%ecx
	movslq %ecx,%r14
	cmpq %r14,%r15
	jne L_36069
L_36133:
	movq 0x48(%rbp),%r15
	addq 0x0(%r15),%r14
	jo L_36069
L_36134:
	movq %r14,0x0(%r15)
	jmp L_36065
.text
.p2align 0x4
.globl tokens_0
.hidden tokens_0
tokens_0:
L_36154:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_36155
L_36210:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_36211+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36211
.p2align 0x4
.long 0x451
L_36211:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_36155:
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
	movq $0x0,0x18(%rbp)
	movq $0x0,0x20(%rbp)
.p2align 0x4,,0x7
loop_498:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_387658
.p2align 0x4,,0x7
L_36156:
	movq 0x20(%rbp),%r15
	cmpq 0x8(%rbp),%r15
	jnl L_387643
L_36197:
	movq 0x0(%rbp),%r14
	movb 0x0(%r14,%r15,1),%r13b
	cmpb $0xD,%r13b
	ja L_387641
L_36198:
	cmpb $0x9,%r13b
	jb L_387640
L_36200:
	movq 0x20(%rbp),%r15
	movq %r15,%r14
	incq %r14
	movq 0x18(%rbp),%r13
	cmpq %r15,%r13
	je L_387639
L_36201:
	subq %r13,%r15
	movq $0x225,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x8(%r11)
	addq $0x20,%r12
	movq %r13,0x0(%r11)
	movq %r14,0x18(%rbp)
	movq %r14,0x20(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x10(%r11)
	movq $0x295B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x10(%rbp)
	jmp loop_498
.p2align 0x4
L_387639:
L_36202:
	movq %r14,0x18(%rbp)
	movq %r14,0x20(%rbp)
	jmp loop_498
.p2align 0x4
L_387640:
L_36204:
	incq 0x20(%rbp)
	jmp loop_498
.p2align 0x4
L_387641:
L_36205:
	cmpb $0x20,%r13b
	je L_36200
	jmp L_36204
.p2align 0x4
L_387643:
L_36157:
	movq 0x18(%rbp),%r14
	cmpq %r15,%r14
	je L_387656
L_36158:
	subq %r14,%r15
	movq $0x225,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x20,%r12
	movq %r14,0x0(%r13)
	movq 0x0(%rbp),%r15
	movq %r15,0x10(%r13)
	movq %r13,0x8(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_36159:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_387655
.p2align 0x4,,0x7
L_36160:
	movq $0x295B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_387644
L_36161:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_36159
.p2align 0x4
L_387644:
L_36162:
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_36163:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_387654
.p2align 0x4,,0x7
L_36164:
	movq 0x8(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x18(%rbp)
	movq 0x10(%r14),%r15
	movq %r15,0x20(%rbp)
	movq 0x8(%r14),%r11
	movq %r11,0x28(%rbp)
	testq %r13,%r13
	jnz L_36166
L_36187:
	cmpq %r11,0xFFFFFFFFFFFFFFF0(%r15)
	jne L_387648
L_36189:
L_36173:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x10(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x0(%rbp),%r13
	cmpq $0x1,%r13
	je L_387645
L_36174:
	movq %r14,0x10(%rbp)
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movq %r13,0x0(%rbp)
	movq %r14,0x8(%rbp)
	jmp L_36163
.p2align 0x4
L_387645:
L_36175:
	movq %r15,0x8(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_36176:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_387647
.p2align 0x4,,0x7
L_36177:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_387646
L_36178:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_36176
.p2align 0x4
L_387646:
L_36179:
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_387647:
L_36180:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_36181+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36181
.p2align 0x4
.long 0x45B
L_36181:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_36177
.p2align 0x4
L_387648:
L_36166:
	movq 0x28(%rbp),%r15
	testq %r15,%r15
	jnz L_387651
L_36186:
	movq (globalObjptr+0x5A8)(%rip),%r15
	movq %r15,0x8(%rbp)
.p2align 0x4,,0x7
L_36170:
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_499:
	cmpq 0x28(%rbp),%r15
	jnl L_387649
L_36184:
	movq 0x18(%rbp),%r14
	addq %r15,%r14
	movq 0x8(%rbp),%r13
	movq 0x20(%rbp),%r10
	movb 0x0(%r10,%r14,1),%r11b
	movb %r11b,0x0(%r13,%r15,1)
	incq %r15
	jmp loop_499
.p2align 0x4
L_387649:
L_36171:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_387650
.p2align 0x4,,0x7
L_36172:
	movq 0x8(%rbp),%r15
	movq $0x7,0xFFFFFFFFFFFFFFF8(%r15)
	jmp L_36173
.p2align 0x4
L_387650:
L_36182:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_36183+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36183
.p2align 0x4
.long 0x45B
L_36183:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_36172
.p2align 0x4
L_387651:
L_36167:
	movq 0x28(%rbp),%rdx
	cmpq $0x7FFFFFFF,%rdx
	ja L_387652
L_36168:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x51,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_36169+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36169
.p2align 0x4
.long 0x977
L_36169:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq %rax,0x8(%rbp)
	jmp L_36170
.p2align 0x4
L_387652:
L_36185:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_387654:
L_36190:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_36191+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36191
.p2align 0x4
.long 0x45B
L_36191:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_36164
.p2align 0x4
L_387655:
L_36192:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_36193+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36193
.p2align 0x4
.long 0x45B
L_36193:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_36160
.p2align 0x4
L_387656:
L_36194:
	movq 0x10(%rbp),%r13
	cmpq $0x1,%r13
	je L_387657
L_36195:
	movq 0x8(%r13),%r11
	movq %r11,0x0(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x8(%rbp)
	movq $0x1,0x10(%rbp)
	jmp L_36159
.p2align 0x4
L_387657:
L_36196:
	movq $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_387658:
L_36208:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_36209+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36209
.p2align 0x4
.long 0x48E
L_36209:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	jmp L_36156
.text
.p2align 0x4
.globl closeIn_0
.hidden closeIn_0
closeIn_0:
L_36212:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x30(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_36213
L_36246:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_36247+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36247
.p2align 0x4
.long 0x97B
L_36247:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_36213:
	movq 0x20(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_387670
L_36214:
	movq 0x8(%r14),%r15
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x40(%rbp)
	movq $0x1,0x48(%rbp)
.p2align 0x4,,0x7
L_36215:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_387669
.p2align 0x4,,0x7
L_36216:
	movq 0x40(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x18(%rbp),%r13
	cmpq %r13,0x18(%r14)
	je L_387666
L_36217:
	movq $0x1B5D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x48(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x38(%rbp),%r15
	cmpq $0x1,%r15
	je L_387660
L_36218:
	movq %r14,0x48(%rbp)
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x38(%rbp)
	movq %r14,0x40(%rbp)
	jmp L_36215
.p2align 0x4
L_387660:
L_36219:
	movq 0x48(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq $0x1,0x48(%rbp)
.p2align 0x4,,0x7
L_36220:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_387665
.p2align 0x4,,0x7
L_36221:
	movq $0x1B5D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x38(%rbp),%r14
	cmpq $0x1,%r14
	je L_387661
L_36222:
	movq %r15,0x48(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x38(%rbp)
	movq %r15,0x40(%rbp)
	jmp L_36220
.p2align 0x4
L_387661:
L_36224:
	movq 0x20(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	andq $0x1,%r14
	jnz L_387662
L_36225:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_387662:
L_36226:
	movq 0x18(%rbp),%r15
	movq 0x10(%rbp),%r14
	movl 0x0(%r14),%r13d
	movl %r13d,0x0(%r15)
	movq 0x0(%rbp),%r15
	movq $0x0,0x0(%r15)
	movq 0x8(%rbp),%r15
	movq 0x28(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x24B0,%r15
	je L_387664
L_36228:
	movq 0x8(%r14),%r15
	movl 0x0(%r14),%r13d
	movl 0x0(%r15),%r14d
	testl %r14d,%r14d
	jnz L_387663
L_36229:
	movl $0x1,0x0(%r15)
	movl %r13d,%r15d
	shlq $0x1,%r15
	orq $0x1,%r15
	movq %r15,0x40(%rbp)
	leaq L_36231(%rip),%r15
	movq %r15,0x28(%rbp)
	movq %rbp,%r15
	addq $0x30,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movl $0x1,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_36230+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1279
.p2align 0x4
L_387663:
L_36235:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_387664:
L_36227:
	movq 0x0(%r14),%r15
	movl $0x1,0x0(%r15)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_387665:
L_36236:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_36237+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36237
.p2align 0x4
.long 0x97A
L_36237:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	jmp L_36221
.p2align 0x4
L_387666:
L_36238:
	movq 0x38(%rbp),%r14
	cmpq $0x1,%r14
	je L_387667
L_36239:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq %r14,0x38(%rbp)
	movq %r13,0x40(%rbp)
	jmp L_36215
.p2align 0x4
L_387667:
L_36240:
	movq 0x48(%rbp),%r13
	cmpq $0x1,%r13
	je L_387668
L_36241:
	movq 0x8(%r13),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x40(%rbp)
	movq $0x1,0x48(%rbp)
	jmp L_36220
.p2align 0x4
L_387668:
L_36242:
	movq $0x1,%r11
	xchgq %r11,%r15
	jmp L_36224
.p2align 0x4
L_387669:
L_36243:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_36244+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36244
.p2align 0x4
.long 0x97A
L_36244:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	jmp L_36216
.p2align 0x4
L_387670:
L_36245:
	movq $0x1,%r15
	jmp L_36224
.p2align 0x4
.long 0x978
L_36230:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movl 0x40(%rbp),%r15d
	movl %r15d,0x10(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x920
L_36231:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_36232
L_36233:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_36234+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36234
.p2align 0x4
.long 0x979
L_36234:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_36232:
	movq 0x8(%rbp),%r15
	movq 0x20(%r15),%r14
	movq $0x1419,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x20,%r12
	movq (globalObjptr+0xE5E0)(%rip),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x10(%r15)
	movq $0x1933,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	addq $0x10,%r12
	movq 0x30(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl layout_34
.hidden layout_34
layout_34:
L_36248:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_36249
L_36502:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_36503+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36503
.p2align 0x4
.long 0x45F
L_36503:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_36249:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%rbp),%r15
	cmpq $0x1,%r15
	je L_387678
	cmpq $0x2,%r15
	je L_387677
L_36250:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xDC1,%r14
	je L_387676
	cmpq $0xDC2,%r14
	je L_387675
	cmpq $0xDC3,%r14
	je L_387674
	cmpq $0xDC4,%r14
	je L_387673
L_36251:
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	movq (globalObjptr+0xE5E8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_36252+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_387673:
L_36360:
	movq 0x0(%r15),%r14
	movq %r14,0x8(%rbp)
	movq (globalObjptr+0xDD28)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_36361+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_387674:
L_36329:
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	movq (globalObjptr+0xE600)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_36330+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_387675:
L_36298:
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	movq (globalObjptr+0xE5F8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_36299+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_387676:
L_36267:
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq (globalObjptr+0xE5F0)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_36268+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_387677:
L_36501:
	movq (globalObjptr+0xE620)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp str_3
.p2align 0x4
L_387678:
L_36500:
	movq (globalObjptr+0xE618)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4E5
L_36252:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_36253+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_34
.p2align 0x4
.long 0x521
L_36361:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq $0x1,0x18(%rbp)
	movl $0xFF,%ecx
.p2align 0x4,,0x7
loop_500:
	cmpl $0x0,%ecx
	jl L_387687
L_36362:
	movl %ecx,%r15d
	decl %r15d
	movl %r15d,0x20(%rbp)
	cmpl $0xFF,%ecx
	ja L_387686
L_36363:
	movb %cl,%r15b
	movb %r15b,0x24(%rbp)
	movq 0x8(%rbp),%r14
	movq %r14,%r13
	andq $0x3,%r13
	cmpq $0x1,%r13
	je L_36371
	cmpq $0x2,%r13
	je L_387682
L_36364:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x24A9,%r13
	je L_387681
	cmpq $0x24AA,%r13
	je L_387680
L_36365:
	movq 0x0(%r14),%r13
	movq %r13,0x38(%rbp)
	movb %r15b,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_36366+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp contains_0
.p2align 0x4
L_387680:
L_36381:
	movq 0x0(%r14),%r13
	movq %r13,0x38(%rbp)
	movb %r15b,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_36382+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp cp_0
.p2align 0x4
L_387681:
L_36375:
	movq 0x8(%r14),%r13
	movq %r13,0x40(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x28(%rbp)
	movb %r15b,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_36376+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp cp_0
.p2align 0x4
L_387682:
L_36384:
	shrq $0x2,%r14
	movb %r14b,%r13b
	cmpb %r15b,%r13b
	je L_387683
.p2align 0x4,,0x7
L_36369:
	movl 0x20(%rbp),%ecx
	jmp loop_500
.p2align 0x4
L_387683:
.p2align 0x4,,0x7
L_36371:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_387684
.p2align 0x4,,0x7
L_36372:
	movq $0x1B5F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movzbl 0x24(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x18(%rbp)
	movl 0x20(%rbp),%ecx
	jmp loop_500
.p2align 0x4
L_387684:
L_36373:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_36374+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36374
.p2align 0x4
.long 0x4E1
L_36374:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	jmp L_36372
.p2align 0x4
L_387686:
L_36387:
	movq $0x7,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_387687:
L_36388:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_387712
L_36389:
	movq 0x8(%r14),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_36390:
	incl %ecx
	cmpq $0x1,%r15
	je L_387688
L_36391:
	movq 0x8(%r15),%r15
	jmp L_36390
.p2align 0x4
L_387688:
L_36392:
L_36393:
	movslq %ecx,%rdx
	movq %rdx,0x20(%rbp)
	testq %rdx,%rdx
	jz L_387711
L_36394:
	cmpq $0x7FFFFFFF,%rdx
	ja L_36457
L_36395:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x51,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_36396+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36396
.p2align 0x4
.long 0x45E
L_36396:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq %rax,0x28(%rbp)
L_36397:
	movq 0x18(%rbp),%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_501:
	cmpq 0x20(%rbp),%r15
	jnl L_387690
L_36494:
	cmpq $0x1,%r14
	je L_387689
L_36495:
	movq 0x8(%r14),%r13
	movq 0x28(%rbp),%r11
	movb 0x0(%r14),%r10b
	movb %r10b,0x0(%r11,%r15,1)
	incq %r15
	movq %r13,%r14
	jmp loop_501
.p2align 0x4
L_387689:
L_36455:
	movq (globalObjptr+0x5A0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_387690:
L_36398:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_36399
L_36492:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_36493+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36493
.p2align 0x4
.long 0x8B1
L_36493:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_36399:
	movq 0x28(%rbp),%r15
	movq $0x7,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_387708
L_36401:
	cmpl $0x100,%r13d
	je L_387707
L_36402:
	cmpl $0x2A,%r13d
	jnl L_387693
L_36480:
	cmpl $0x1,%r13d
	jne L_387692
L_36483:
	cmpq $0x0,%r14
	jna L_387691
L_36485:
	movb 0x0(%r15),%r14b
	movb %r14b,0x38(%rbp)
	movq (globalObjptr+0xE610)(%rip),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (not_5+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp contains_0
.p2align 0x4
L_387691:
L_36473:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_387692:
L_36482:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x488)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xDD28)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_36435+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_387693:
L_36403:
	movq $0x1,0x18(%rbp)
	xorl %ecx,%ecx
loop_502:
	cmpl $0x55,%ecx
	jnl L_387695
L_36471:
	movl %ecx,%r15d
	incl %r15d
	movl %r15d,0x20(%rbp)
	movslq %ecx,%r15
	cmpq $0x55,%r15
	jnb L_36473
L_36474:
	movq (globalObjptr+0xE2A8)(%rip),%r14
	movb 0x0(%r14,%r15,1),%r13b
	movb %r13b,0x24(%rbp)
	movb %r13b,0x38(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (not_4+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp contains_0
.p2align 0x4
L_387695:
L_36404:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_387706
L_36405:
	movb 0x0(%r15),%r14b
	movq 0x8(%r15),%r15
	movq %r15,0x18(%rbp)
	movb %r14b,0x20(%rbp)
	movq $0x1,0x28(%rbp)
.p2align 0x4,,0x7
L_36406:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_387705
.p2align 0x4,,0x7
L_36407:
	movq $0x1B5F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movzbl 0x20(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_387696
L_36408:
	movq %r15,0x28(%rbp)
	movb 0x0(%r14),%r15b
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	movb %r15b,0x20(%rbp)
	jmp L_36406
.p2align 0x4
L_387696:
L_36409:
	movq %r15,0x18(%rbp)
L_36410:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_387704
L_36411:
	movq 0x8(%r14),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_36412:
	incl %ecx
	cmpq $0x1,%r15
	je L_387697
L_36413:
	movq 0x8(%r15),%r15
	jmp L_36412
.p2align 0x4
L_387697:
L_36414:
L_36415:
	movslq %ecx,%rdx
	movq %rdx,0x20(%rbp)
	testq %rdx,%rdx
	jz L_387703
L_36416:
	cmpq $0x7FFFFFFF,%rdx
	ja L_387702
L_36417:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x51,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_36418+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36418
.p2align 0x4
.long 0x45E
L_36418:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq %rax,0x28(%rbp)
L_36419:
	movq 0x18(%rbp),%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_503:
	cmpq 0x20(%rbp),%r15
	jnl L_387699
L_36462:
	cmpq $0x1,%r14
	je L_36455
L_36463:
	movq 0x8(%r14),%r13
	movq 0x28(%rbp),%r11
	movb 0x0(%r14),%r10b
	movb %r10b,0x0(%r11,%r15,1)
	incq %r15
	movq %r13,%r14
	jmp loop_503
.p2align 0x4
L_387699:
L_36420:
	movq 0x28(%rbp),%r15
	movq $0x7,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	decq %r14
	movq %r14,0x20(%rbp)
	movq $0x1,0x18(%rbp)
.p2align 0x4,,0x7
loop_504:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_387701
.p2align 0x4,,0x7
L_36421:
	movq 0x20(%rbp),%r15
	cmpq $0x0,%r15
	jl L_387700
L_36422:
	movq %r15,%r14
	decq %r14
	movq 0x28(%rbp),%r13
	movb 0x0(%r13,%r15,1),%r11b
	movq %r14,0x20(%rbp)
	movq $0x1B5F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movzbl %r11b,%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x18(%rbp)
	jmp loop_504
.p2align 0x4
L_387700:
L_36423:
	movq 0x18(%rbp),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (fromList_5+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3811
.p2align 0x4
L_387701:
L_36460:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_36461+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36461
.p2align 0x4
.long 0x4F2
L_36461:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_36421
.p2align 0x4
L_387702:
L_36457:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_387703:
L_36466:
	movq (globalObjptr+0x598)(%rip),%r15
	movq %r15,0x28(%rbp)
	jmp L_36419
.p2align 0x4
L_387704:
L_36467:
	xorl %ecx,%ecx
	jmp L_36415
.p2align 0x4
L_387705:
L_36468:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_36469+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36469
.p2align 0x4
.long 0x4F2
L_36469:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_36407
.p2align 0x4
L_387706:
L_36470:
	movq $0x1,0x18(%rbp)
	jmp L_36410
.p2align 0x4
L_387707:
L_36491:
	movq (globalObjptr+0xA050)(%rip),%r14
	xchgq %r14,%r15
L_36436:
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_36437+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_387708:
L_36400:
	movq (globalObjptr+0x4D8)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_387711:
L_36498:
	movq (globalObjptr+0x598)(%rip),%r15
	movq %r15,0x28(%rbp)
	jmp L_36397
.p2align 0x4
L_387712:
L_36499:
	xorl %ecx,%ecx
	jmp L_36393
.p2align 0x4
.long 0x4E5
L_36330:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r14
	movq %r14,0x18(%rbp)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_387713
L_36331:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movl $0x0,0x20(%rbp)
	movq $0x1,0x28(%rbp)
L_36332:
	movq %r15,0x38(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_36333+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_34
.p2align 0x4
L_387713:
L_36359:
	movq $0x1,%r15
L_36342:
	movq %r15,0x28(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x30(%rbp)
	movq (globalObjptr+0x9F40)(%rip),%r15
	movq %r15,0x38(%rbp)
	movq (globalObjptr+0xDD28)(%rip),%r15
	movq %r15,0x40(%rbp)
	addq $0x28,%rbp
	leaq (L_36343+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
.long 0x4E5
L_36299:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r14
	movq %r14,0x18(%rbp)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_387714
L_36300:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movl $0x0,0x20(%rbp)
	movq $0x1,0x28(%rbp)
L_36301:
	movq %r15,0x38(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_36302+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_34
.p2align 0x4
L_387714:
L_36328:
	movq $0x1,%r15
L_36311:
	movq %r15,0x28(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x30(%rbp)
	movq (globalObjptr+0x9F40)(%rip),%r15
	movq %r15,0x38(%rbp)
	movq (globalObjptr+0xDD28)(%rip),%r15
	movq %r15,0x40(%rbp)
	addq $0x28,%rbp
	leaq (L_36312+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
.long 0x4A5
L_36268:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_36269+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_34
.p2align 0x4
.long 0x48F
L_36253:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_36254
L_36265:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_36266+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36266
.p2align 0x4
.long 0x5E5
L_36266:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_36254:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x28(%rbp)
	addq $0x18,%r12
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_36255:
	addl 0x0(%r15),%ecx
	movl %ecx,0x30(%rbp)
	jo L_387718
L_36257:
	cmpq $0x1,%r14
	je L_387715
L_36258:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_36255
.p2align 0x4
L_387715:
L_36259:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_36260
L_36263:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_36264+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36264
.p2align 0x4
.long 0x5E4
L_36264:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_36260:
	movl 0x30(%rbp),%r15d
	testl %r15d,%r15d
	jz L_387716
L_36261:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_387716:
L_36262:
	movq (globalObjptr+0x9D0)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_387718:
L_36256:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x5EC
L_36366:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movl 0x30(%rbp),%ecx
	movl %ecx,0x28(%rbp)
L_36367:
	testl %ecx,%ecx
	jnz L_36371
	jmp L_36369
.p2align 0x4
.long 0x5EC
L_36382:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movl 0x30(%rbp),%ecx
	movl %ecx,0x28(%rbp)
	jmp L_36367
.p2align 0x4
.long 0x97C
L_36376:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movl 0x38(%rbp),%r15d
	testl %r15d,%r15d
	movl %r15d,0x30(%rbp)
	jnz L_36369
L_36377:
	movb 0x24(%rbp),%r15b
	movb %r15b,0x30(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (not_3+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp contains_0
.p2align 0x4
.long 0x50B
not_5:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movl 0x38(%rbp),%r15d
	movl %r15d,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_36486
L_36489:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_36490+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36490
.p2align 0x4
.long 0x8B1
L_36490:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_36486:
	movl 0x18(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_36482
L_36487:
	movq 0x28(%rbp),%r15
	jmp L_36436
.p2align 0x4
.long 0x2B
L_36435:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	jmp L_36436
.p2align 0x4
.long 0x4E2
not_4:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movl 0x38(%rbp),%r15d
	movl %r15d,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_36475
L_36478:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_36479+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36479
.p2align 0x4
.long 0x97D
L_36479:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_36475:
	movl 0x30(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_387724
L_36476:
	movq $0x1B5F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movzbl 0x24(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x18(%rbp)
	movl 0x20(%rbp),%ecx
	jmp loop_502
.p2align 0x4
L_387724:
L_36477:
	movl 0x20(%rbp),%ecx
	jmp loop_502
.p2align 0x4
.long 0x2B
fromList_5:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r14
	movq %r14,0x18(%rbp)
	cmpq $0x1,%r14
	je L_387732
L_36424:
	movq 0x8(%r14),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_36425:
	incl %ecx
	cmpq $0x1,%r15
	je L_387726
L_36426:
	movq 0x8(%r15),%r15
	jmp L_36425
.p2align 0x4
L_387726:
L_36427:
L_36428:
	movslq %ecx,%rdx
	movq %rdx,0x20(%rbp)
	testq %rdx,%rdx
	jz L_387731
L_36429:
	cmpq $0x7FFFFFFF,%rdx
	ja L_36457
L_36430:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x51,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_36431+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36431
.p2align 0x4
.long 0x45E
L_36431:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq %rax,0x28(%rbp)
L_36432:
	movq 0x18(%rbp),%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_505:
	cmpq 0x20(%rbp),%r15
	jnl L_387728
L_36452:
	cmpq $0x1,%r14
	je L_36455
L_36453:
	movq 0x8(%r14),%r13
	movq 0x28(%rbp),%r11
	movb 0x0(%r14),%r10b
	movb %r10b,0x0(%r11,%r15,1)
	incq %r15
	movq %r13,%r14
	jmp loop_505
.p2align 0x4
L_387728:
L_36433:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_36434
L_36450:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_36451+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36451
.p2align 0x4
.long 0x8B1
L_36451:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_36434:
	movq 0x28(%rbp),%r15
	movq $0x7,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x488)(%rip),%r15
	movq %r15,0x8(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0xE608)(%rip),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_36435+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_387731:
L_36458:
	movq (globalObjptr+0x598)(%rip),%r15
	movq %r15,0x28(%rbp)
	jmp L_36432
.p2align 0x4
L_387732:
L_36459:
	xorl %ecx,%ecx
	jmp L_36428
.p2align 0x4
.long 0x2B
L_36437:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq (globalObjptr+0x9F40)(%rip),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_36438+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x97C
L_36333:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_36334
L_36357:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_36358+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36358
.p2align 0x4
.long 0x73B
L_36358:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_36334:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movl 0x20(%rbp),%r14d
	incl %r14d
	jo L_36256
L_36335:
	movq 0x10(%rbp),%r13
	cmpq $0x1,%r13
	je L_387733
L_36336:
	movl %r14d,0x20(%rbp)
	movq %r15,0x28(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x10(%rbp)
	jmp L_36332
.p2align 0x4
L_387733:
L_36337:
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq $0x1,0x30(%rbp)
.p2align 0x4,,0x7
L_36338:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_387735
.p2align 0x4,,0x7
L_36339:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_36342
L_36340:
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x28(%rbp)
	jmp L_36338
.p2align 0x4
L_387735:
L_36355:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_36356+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36356
.p2align 0x4
.long 0x71F
L_36356:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_36339
.p2align 0x4
.long 0x48F
L_36343:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_36344
L_36353:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_36354+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36354
.p2align 0x4
.long 0x5E5
L_36354:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_36344:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x28(%rbp)
	addq $0x18,%r12
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_36345:
	addl 0x0(%r15),%ecx
	movl %ecx,0x30(%rbp)
	jo L_36256
L_36346:
	cmpq $0x1,%r14
	je L_387738
L_36347:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_36345
.p2align 0x4
L_387738:
L_36348:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_36349
L_36351:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_36352+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36352
.p2align 0x4
.long 0x5E4
L_36352:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_36349:
	movl 0x30(%rbp),%r15d
	testl %r15d,%r15d
	jz L_36262
L_36350:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x97C
L_36302:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_36303
L_36326:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_36327+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36327
.p2align 0x4
.long 0x73B
L_36327:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_36303:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movl 0x20(%rbp),%r14d
	incl %r14d
	jo L_36256
L_36304:
	movq 0x10(%rbp),%r13
	cmpq $0x1,%r13
	je L_387743
L_36305:
	movl %r14d,0x20(%rbp)
	movq %r15,0x28(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x10(%rbp)
	jmp L_36301
.p2align 0x4
L_387743:
L_36306:
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq $0x1,0x30(%rbp)
.p2align 0x4,,0x7
L_36307:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_387745
.p2align 0x4,,0x7
L_36308:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_36311
L_36309:
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x28(%rbp)
	jmp L_36307
.p2align 0x4
L_387745:
L_36324:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_36325+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36325
.p2align 0x4
.long 0x71F
L_36325:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_36308
.p2align 0x4
.long 0x48F
L_36312:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_36313
L_36322:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_36323+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36323
.p2align 0x4
.long 0x5E5
L_36323:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_36313:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x28(%rbp)
	addq $0x18,%r12
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_36314:
	addl 0x0(%r15),%ecx
	movl %ecx,0x30(%rbp)
	jo L_36256
L_36315:
	cmpq $0x1,%r14
	je L_387748
L_36316:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_36314
.p2align 0x4
L_387748:
L_36317:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_36318
L_36320:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_36321+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36321
.p2align 0x4
.long 0x5E4
L_36321:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_36318:
	movl 0x30(%rbp),%r15d
	testl %r15d,%r15d
	jz L_36262
L_36319:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4E2
L_36269:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xE5F0)(%rip),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_36270+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5EC
not_3:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movl 0x30(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	testl %r15d,%r15d
	jnz L_36369
	jmp L_36371
.p2align 0x4
.long 0x490
L_36438:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_36439
L_36448:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_36449+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36449
.p2align 0x4
.long 0x4B1
L_36449:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_36439:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x28(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_36440:
	addl 0x0(%r15),%ecx
	movl %ecx,0x30(%rbp)
	jo L_36256
L_36441:
	cmpq $0x1,%r14
	je L_387754
L_36442:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_36440
.p2align 0x4
L_387754:
L_36443:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_36444
L_36446:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_36447+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36447
.p2align 0x4
.long 0x5E4
L_36447:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_36444:
	movl 0x30(%rbp),%r15d
	testl %r15d,%r15d
	jz L_36262
L_36445:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4A6
L_36270:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x18(%rbp),%r15
	movl 0x0(%r15),%r14d
	movl %r14d,0x40(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_36271+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0x6FF
L_36271:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_36272+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x6FF
L_36272:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_36273
L_36296:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_36297+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36297
.p2align 0x4
.long 0x5EE
L_36297:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_36273:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x40(%rbp)
	addq $0x18,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_36274:
	addl 0x0(%r15),%ecx
	movl %ecx,0x30(%rbp)
	jo L_36256
L_36275:
	cmpq $0x1,%r14
	je L_387759
L_36276:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_36274
.p2align 0x4
L_387759:
L_36277:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_36278
L_36294:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_36295+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36295
.p2align 0x4
.long 0x79E
L_36295:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_36278:
	movl 0x30(%rbp),%ecx
	testl %ecx,%ecx
	jz L_387760
L_36279:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
L_36280:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x38(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x40(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0x48(%rbp)
	movq (globalObjptr+0xD0F8)(%rip),%r15
	movq %r15,0x50(%rbp)
	addq $0x38,%rbp
	leaq (L_36281+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
L_387760:
L_36293:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_36280
.p2align 0x4
.long 0x51A
L_36281:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_36282
L_36291:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_36292+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36292
.p2align 0x4
.long 0x488
L_36292:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_36282:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x38(%rbp)
	addq $0x18,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_36283:
	addl 0x0(%r15),%ecx
	movl %ecx,0x40(%rbp)
	jo L_36256
L_36284:
	cmpq $0x1,%r14
	je L_387764
L_36285:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_36283
.p2align 0x4
L_387764:
L_36286:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_36287
L_36289:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_36290+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36290
.p2align 0x4
.long 0x51B
L_36290:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_36287:
	movl 0x40(%rbp),%r15d
	testl %r15d,%r15d
	jz L_36262
L_36288:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl cp_0
.hidden cp_0
cp_0:
L_36504:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_36505
L_36595:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_36596+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36596
.p2align 0x4
.long 0x494
L_36596:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_36505:
	movq 0x8(%rbp),%r13
	cmpq $0x1,%r13
	je L_36516
L_36506:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
.p2align 0x4,,0x7
L_36507:
	movq %r15,%rax
	subq $0x1,%rax
	cmpq $0xC,%rax
	ja L_387769
	leaq jumpTable_51(%rip),%rbx
	jmp *(%rbx,%rax,8)
.data
.p2align 0x4
jumpTable_51:
.quad L_387814,L_387810,L_387807,L_36508,L_387803,L_387798,L_387791,L_36508,L_387788,L_387785,L_387778,L_36508,L_387773
.text
.p2align 0x4
L_387769:
L_36508:
	movl 0x0(%r15),%r13d
	movzbl 0x0(%rbp),%r11d
	cmpl 0x4(%r15),%r11d
	jl L_36513
L_36509:
	cmpl %r11d,%r13d
	jnl L_387771
L_36513:
	cmpq $0x1,%r14
	je L_387770
L_36514:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_36507
.p2align 0x4
L_387770:
L_36516:
	movl $0x0,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_387771:
L_36511:
	movl $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_387773:
L_36585:
	movb 0x0(%rbp),%r13b
	cmpb $0x61,%r13b
	jb L_387776
L_36586:
	cmpb $0x7A,%r13b
	jna L_36511
L_36588:
	cmpq $0x1,%r14
	je L_36516
L_36589:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_36507
.p2align 0x4
L_387776:
L_36591:
	cmpq $0x1,%r14
	je L_36516
L_36592:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_36507
.p2align 0x4
L_387778:
L_36572:
	movb 0x0(%rbp),%r15b
	cmpb $0x41,%r15b
	jb L_387782
L_36573:
	cmpb $0x61,%r15b
	jb L_387780
L_36574:
	cmpb $0x66,%r15b
	jna L_36511
	jmp L_36513
.p2align 0x4
L_387780:
L_36577:
	cmpb $0x46,%r15b
	jna L_36511
	jmp L_36513
.p2align 0x4
L_387782:
L_36580:
	cmpb $0x30,%r15b
	jb L_36513
L_36581:
	cmpb $0x39,%r15b
	jna L_36511
	jmp L_36513
.p2align 0x4
L_387785:
L_36567:
	movb 0x0(%rbp),%r15b
	cmpb $0x20,%r15b
	jb L_36513
L_36568:
	cmpb $0x7E,%r15b
	jna L_36511
	jmp L_36513
.p2align 0x4
L_387788:
L_36562:
	movb 0x0(%rbp),%r15b
	cmpb $0x20,%r15b
	jb L_36511
L_36563:
	cmpb $0x7F,%r15b
	je L_36511
	jmp L_36513
.p2align 0x4
L_387791:
L_36549:
	movb 0x0(%rbp),%r15b
	cmpb $0x41,%r15b
	jb L_387795
L_36550:
	cmpb $0x61,%r15b
	jb L_387793
L_36551:
	cmpb $0x7A,%r15b
	jna L_36511
	jmp L_36513
.p2align 0x4
L_387793:
L_36554:
	cmpb $0x5A,%r15b
	jna L_36511
	jmp L_36513
.p2align 0x4
L_387795:
L_36557:
	cmpb $0x30,%r15b
	jb L_36513
L_36558:
	cmpb $0x39,%r15b
	jna L_36511
	jmp L_36513
.p2align 0x4
L_387798:
L_36540:
	movb 0x0(%rbp),%r15b
	cmpb $0x61,%r15b
	jb L_387800
L_36541:
	cmpb $0x7A,%r15b
	jna L_36511
	jmp L_36513
.p2align 0x4
L_387800:
L_36544:
	cmpb $0x41,%r15b
	jb L_36513
L_36545:
	cmpb $0x5A,%r15b
	jna L_36511
	jmp L_36513
.p2align 0x4
L_387803:
L_36535:
	movb 0x0(%rbp),%r15b
	cmpb $0x21,%r15b
	jb L_36513
L_36536:
	cmpb $0x7E,%r15b
	jna L_36511
	jmp L_36513
.p2align 0x4
L_387807:
L_36530:
	movb 0x0(%rbp),%r15b
	cmpb $0x5A,%r15b
	ja L_36513
L_36531:
	cmpb $0x41,%r15b
	jnb L_36511
	jmp L_36513
.p2align 0x4
L_387810:
L_36523:
	movb 0x0(%rbp),%r15b
	cmpb $0xD,%r15b
	ja L_387812
L_36524:
	cmpb $0x9,%r15b
	jnb L_36511
	jmp L_36513
.p2align 0x4
L_387812:
L_36527:
	cmpb $0x20,%r15b
	je L_36511
	jmp L_36513
.p2align 0x4
L_387814:
L_36518:
	movb 0x0(%rbp),%r15b
	cmpb $0x39,%r15b
	ja L_36513
L_36519:
	cmpb $0x30,%r15b
	jnb L_36511
	jmp L_36513
.text
.p2align 0x4
.globl loop_3811
.hidden loop_3811
loop_3811:
L_36597:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_36598
L_36602:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_36603+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36603
.p2align 0x4
.long 0x451
L_36603:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_36598:
	movq 0x0(%rbp),%r15
	cmpq $0x1,%r15
	je L_387819
L_36599:
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movb 0x0(%r15),%r14b
	movb %r14b,0x8(%rbp)
	addq $0x18,%rbp
	leaq (L_36600+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3811
.p2align 0x4
L_387819:
L_36601:
	movq $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x25
L_36600:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq %r15,0x0(%rbp)
	jmp loopP_0
.text
.p2align 0x4
.globl loopP_0
.hidden loopP_0
loopP_0:
L_36604:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_36615
L_36605:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_387823
L_36606:
	movq 0x0(%rbp),%r15
	cmpq $0x1,%r15
	je L_387822
L_36607:
	movq 0x8(%r15),%r14
	movb 0x0(%r15),%r13b
	movb %r13b,0x9(%rbp)
	movb 0x8(%rbp),%r15b
	cmpb %r13b,%r15b
	jb L_387821
L_36608:
	movq %r14,0x18(%rbp)
	movb %r15b,0x20(%rbp)
	addq $0x18,%rbp
	leaq (L_36609+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loopP_0
.p2align 0x4
L_387821:
L_36613:
	movq $0x1B5F,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movzbl 0x9(%rbp),%r14d
	movl %r14d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq $0x1B5F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x8(%r14)
	addq $0x18,%r12
	movzbl %r15b,%r13d
	movl %r13d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_387822:
L_36614:
	movq $0x1B5F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movzbl 0x8(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x1,0x8(%r14)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_387823:
L_36615:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_36616+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36616
.p2align 0x4
.long 0x457
L_36616:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_36606
.p2align 0x4
.long 0x25
L_36609:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_36610
L_36611:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_36612+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36612
.p2align 0x4
.long 0x24
L_36612:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_36610:
	movq $0x1B5F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movzbl 0x9(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl alignPrefix_0
.hidden alignPrefix_0
alignPrefix_0:
L_36617:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_36664
L_36618:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_387828
L_36619:
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_387827
L_36620:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq %r11,0x10(%rbp)
	cmpq $0x1,%r13
	je L_387826
L_36621:
	movq 0x8(%r13),%r14
	movq %r14,0x8(%rbp)
	movq 0x0(%r13),%r13
	movq $0x1,0x18(%rbp)
	movq %r13,%r15
L_36622:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq 0x0(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_36623+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_387826:
L_36662:
	movq $0x1,%r15
L_36639:
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_36640+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3782
.p2align 0x4
L_387827:
L_36663:
	movq $0x1,0x0(%rbp)
	movl $0x0,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_387828:
L_36664:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_36665+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36665
.p2align 0x4
.long 0x45F
L_36665:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_36619
.p2align 0x4
.long 0x4DD
L_36623:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_36624
L_36660:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_36661+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36661
.p2align 0x4
.long 0x4DE
L_36661:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_36624:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x30(%rbp)
	addq $0x18,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%r13)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_36625:
	addl 0x0(%r15),%ecx
	movl %ecx,0x20(%rbp)
	jo L_387836
L_36627:
	cmpq $0x1,%r14
	je L_387830
L_36628:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_36625
.p2align 0x4
L_387830:
L_36629:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_36630
L_36658:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_36659+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36659
.p2align 0x4
.long 0x97F
L_36659:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_36630:
	movl 0x20(%rbp),%ecx
	testl %ecx,%ecx
	jz L_387834
L_36631:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
L_36632:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x8(%rbp),%r13
	cmpq $0x1,%r13
	je L_387831
L_36633:
	movq %r15,0x18(%rbp)
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movq %r13,0x8(%rbp)
	movq %r14,%r15
	jmp L_36622
.p2align 0x4
L_387831:
L_36634:
	movq %r14,0x20(%rbp)
	movq $0x1,0x28(%rbp)
.p2align 0x4,,0x7
L_36635:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_387833
.p2align 0x4,,0x7
L_36636:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_36639
L_36637:
	movq %r15,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_36635
.p2align 0x4
L_387833:
L_36655:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_36656+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36656
.p2align 0x4
.long 0x51F
L_36656:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_36636
.p2align 0x4
L_387834:
L_36657:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_36632
.p2align 0x4
L_387836:
L_36626:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x2B
L_36640:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movl 0x20(%rbp),%r15d
	movl %r15d,0x18(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_36641
L_36653:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_36654+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36654
.p2align 0x4
.long 0x97E
L_36654:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_36641:
	movl 0x18(%rbp),%ecx
	testl %ecx,%ecx
	jz L_387839
L_36642:
	decl %ecx
	jo L_36626
L_36643:
	movq $0x1B67,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
L_36644:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl %ecx,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x1B65,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movl $0xFFFFFFFE,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_36645+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3782
.p2align 0x4
L_387839:
L_36652:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_36644
.p2align 0x4
.long 0x1
L_36645:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movl 0x8(%rbp),%r15d
	movl %r15d,0x0(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_36646
L_36650:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_36651+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36651
.p2align 0x4
.long 0x494
L_36651:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_36646:
	movl 0x0(%rbp),%r15d
	testl %r15d,%r15d
	jz L_387842
L_36647:
	decl %r15d
	jo L_36626
L_36648:
	movq $0x1B67,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x8(%rbp),%r13
	movq %r13,0x8(%r14)
	movq %r14,0x0(%rbp)
	movl %r15d,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_387842:
L_36649:
	movq $0x1,0x0(%rbp)
	movl $0x0,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl layout_13
.hidden layout_13
layout_13:
L_36666:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x18(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_36922
L_36667:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_387953
L_36668:
	movq 0x8(%rbp),%r15
	movq 0x38(%r15),%r14
	movq 0x30(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x28(%r15),%r13
	movq 0x20(%r15),%r11
	movq %r11,0x28(%rbp)
	movq 0x18(%r15),%r11
	movq %r11,0x30(%rbp)
	movq 0x10(%r15),%r11
	movq %r11,0x38(%rbp)
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r11
	movq %r11,0x40(%rbp)
	movq 0x8(%r15),%r11
	cmpq $0x1,%r11
	je L_387952
L_36669:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE82,%r15
	je L_387950
	cmpq $0xE83,%r15
	je L_387939
	cmpq $0xE84,%r15
	je L_387937
	cmpq $0xE85,%r15
	je L_387936
	cmpq $0xE86,%r15
	je L_387846
	cmpq $0xE87,%r15
	je L_387844
L_36670:
	movq %r13,0x58(%rbp)
	movq 0x0(%r11),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_36671+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_387844:
L_36872:
	movq 0x10(%r11),%r15
	movq %r15,0x28(%rbp)
	movq 0x0(%r11),%r15
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r11),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x38(%rbp)
	movq 0x18(%r14),%r10
	movq 0x0(%r13),%r14
	cmpq $0x1,%r14
	jne L_387845
L_36919:
	movq %r10,0x48(%rbp)
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_36920+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unique_0
.p2align 0x4
L_387845:
L_36873:
	movq %r14,%r15
L_36874:
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_36875+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_387846:
L_36729:
	movq 0x0(%r11),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x23D9,%r14
	je L_387918
	cmpq $0x23DA,%r14
	je L_387900
	cmpq $0x23DB,%r14
	je L_387882
	cmpq $0x23DC,%r14
	je L_387864
L_36730:
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r14),%r15
	cmpq $0x1,%r15
	je L_387863
L_36731:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0x148E,%r13
	je L_387862
L_36734:
	movq 0x0(%r15),%r13
	movq %r13,0x28(%rbp)
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq $0x1,0x0(%r14)
	movq 0xFFFFFFFFFFFFFFF8(%r13),%rax
	shrq $0x1,%rax
	subq $0x2078,%rax
	cmpq $0xD,%rax
	ja L_387847
	leaq jumpTable_52(%rip),%rbx
	jmp *(%rbx,%rax,8)
.data
.p2align 0x4
jumpTable_52:
.quad L_387861,L_387860,L_387859,L_387858,L_387857,L_387856,L_387855,L_387854,L_387853,L_387852,L_387851,L_387850,L_387849,L_387848
.text
.p2align 0x4
L_387847:
L_36735:
	movq 0x28(%rbp),%r15
	movq 0x38(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x80(%rbp)
	leaq L_36740(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x48,%rbp
	leaq (L_36736+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1247
.p2align 0x4
L_387848:
L_36757:
	movq 0x28(%rbp),%r15
	movq 0x30(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x78(%rbp)
	leaq L_36740(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x48,%rbp
	leaq (L_36736+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1248
.p2align 0x4
L_387849:
L_36756:
	movq 0x28(%rbp),%r15
	movq 0x40(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x88(%rbp)
	leaq L_36740(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x48,%rbp
	leaq (L_36736+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1249
.p2align 0x4
L_387850:
L_36755:
	movq 0x28(%rbp),%r15
	movq 0x38(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x80(%rbp)
	leaq L_36740(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x48,%rbp
	leaq (L_36736+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1250
.p2align 0x4
L_387851:
L_36754:
	movq 0x28(%rbp),%r15
	movq 0x48(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x40(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x90(%rbp)
	leaq L_36740(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x48,%rbp
	leaq (L_36736+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1251
.p2align 0x4
L_387852:
L_36753:
	movq 0x28(%rbp),%r15
	movq 0x50(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x48(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x40(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x90(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x98(%rbp)
	leaq L_36740(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x48,%rbp
	leaq (L_36736+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1252
.p2align 0x4
L_387853:
L_36752:
	movq 0x28(%rbp),%r15
	movq 0x30(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x78(%rbp)
	leaq L_36740(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x48,%rbp
	leaq (L_36736+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1253
.p2align 0x4
L_387854:
L_36751:
	movq 0x28(%rbp),%r15
	movq 0x40(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x88(%rbp)
	leaq L_36740(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x48,%rbp
	leaq (L_36736+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1254
.p2align 0x4
L_387855:
L_36750:
	movq 0x28(%rbp),%r15
	movq 0x50(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x48(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x40(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x90(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x98(%rbp)
	leaq L_36740(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x48,%rbp
	leaq (L_36736+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1255
.p2align 0x4
L_387856:
L_36749:
	movq 0x28(%rbp),%r15
	movq 0x48(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x40(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x90(%rbp)
	leaq L_36740(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x48,%rbp
	leaq (L_36736+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1256
.p2align 0x4
L_387857:
L_36748:
	movq 0x28(%rbp),%r15
	movq 0x38(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x80(%rbp)
	leaq L_36740(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x48,%rbp
	leaq (L_36736+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1257
.p2align 0x4
L_387858:
L_36747:
	movq 0x28(%rbp),%r15
	movq 0x40(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x88(%rbp)
	leaq L_36740(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x48,%rbp
	leaq (L_36736+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1258
.p2align 0x4
L_387859:
L_36746:
	movq 0x28(%rbp),%r15
	movq 0x30(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x78(%rbp)
	leaq L_36740(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x48,%rbp
	leaq (L_36736+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1259
.p2align 0x4
L_387860:
L_36745:
	movq 0x28(%rbp),%r15
	movq 0x50(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x48(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x40(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x90(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x98(%rbp)
	leaq L_36740(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x48,%rbp
	leaq (L_36736+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1260
.p2align 0x4
L_387861:
L_36744:
	movq 0x28(%rbp),%r15
	movq 0x48(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x40(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x90(%rbp)
	leaq L_36740(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x48,%rbp
	leaq (L_36736+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1261
.p2align 0x4
L_387862:
L_36732:
	movq 0x0(%r15),%r13
	movq %r13,%r15
L_36733:
	movq %r15,0x0(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x38(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp layout_32
.p2align 0x4
L_387863:
L_36759:
	movq $0x12,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_387864:
L_36844:
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r14),%r15
	cmpq $0x1,%r15
	je L_36759
L_36845:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0x148E,%r13
	je L_387880
L_36847:
	movq 0x0(%r15),%r13
	movq %r13,0x28(%rbp)
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq $0x1,0x0(%r14)
	movq 0xFFFFFFFFFFFFFFF8(%r13),%rax
	shrq $0x1,%rax
	subq $0x2078,%rax
	cmpq $0xD,%rax
	ja L_387865
	leaq jumpTable_53(%rip),%rbx
	jmp *(%rbx,%rax,8)
.data
.p2align 0x4
jumpTable_53:
.quad L_387879,L_387878,L_387877,L_387876,L_387875,L_387874,L_387873,L_387872,L_387871,L_387870,L_387869,L_387868,L_387867,L_387866
.text
.p2align 0x4
L_387865:
L_36848:
	movq 0x28(%rbp),%r15
	movq 0x38(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x80(%rbp)
	leaq L_36853(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x48,%rbp
	leaq (L_36849+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1247
.p2align 0x4
L_387866:
L_36870:
	movq 0x28(%rbp),%r15
	movq 0x30(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x78(%rbp)
	leaq L_36853(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x48,%rbp
	leaq (L_36849+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1248
.p2align 0x4
L_387867:
L_36869:
	movq 0x28(%rbp),%r15
	movq 0x40(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x88(%rbp)
	leaq L_36853(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x48,%rbp
	leaq (L_36849+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1249
.p2align 0x4
L_387868:
L_36868:
	movq 0x28(%rbp),%r15
	movq 0x38(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x80(%rbp)
	leaq L_36853(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x48,%rbp
	leaq (L_36849+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1250
.p2align 0x4
L_387869:
L_36867:
	movq 0x28(%rbp),%r15
	movq 0x48(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x40(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x90(%rbp)
	leaq L_36853(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x48,%rbp
	leaq (L_36849+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1251
.p2align 0x4
L_387870:
L_36866:
	movq 0x28(%rbp),%r15
	movq 0x50(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x48(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x40(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x90(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x98(%rbp)
	leaq L_36853(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x48,%rbp
	leaq (L_36849+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1252
.p2align 0x4
L_387871:
L_36865:
	movq 0x28(%rbp),%r15
	movq 0x30(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x78(%rbp)
	leaq L_36853(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x48,%rbp
	leaq (L_36849+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1253
.p2align 0x4
L_387872:
L_36864:
	movq 0x28(%rbp),%r15
	movq 0x40(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x88(%rbp)
	leaq L_36853(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x48,%rbp
	leaq (L_36849+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1254
.p2align 0x4
L_387873:
L_36863:
	movq 0x28(%rbp),%r15
	movq 0x50(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x48(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x40(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x90(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x98(%rbp)
	leaq L_36853(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x48,%rbp
	leaq (L_36849+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1255
.p2align 0x4
L_387874:
L_36862:
	movq 0x28(%rbp),%r15
	movq 0x48(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x40(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x90(%rbp)
	leaq L_36853(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x48,%rbp
	leaq (L_36849+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1256
.p2align 0x4
L_387875:
L_36861:
	movq 0x28(%rbp),%r15
	movq 0x38(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x80(%rbp)
	leaq L_36853(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x48,%rbp
	leaq (L_36849+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1257
.p2align 0x4
L_387876:
L_36860:
	movq 0x28(%rbp),%r15
	movq 0x40(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x88(%rbp)
	leaq L_36853(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x48,%rbp
	leaq (L_36849+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1258
.p2align 0x4
L_387877:
L_36859:
	movq 0x28(%rbp),%r15
	movq 0x30(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x78(%rbp)
	leaq L_36853(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x48,%rbp
	leaq (L_36849+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1259
.p2align 0x4
L_387878:
L_36858:
	movq 0x28(%rbp),%r15
	movq 0x50(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x48(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x40(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x90(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x98(%rbp)
	leaq L_36853(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x48,%rbp
	leaq (L_36849+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1260
.p2align 0x4
L_387879:
L_36857:
	movq 0x28(%rbp),%r15
	movq 0x48(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x40(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x90(%rbp)
	leaq L_36853(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x48,%rbp
	leaq (L_36849+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1261
.p2align 0x4
L_387880:
L_36846:
	movq 0x0(%r15),%r13
	movq %r13,%r15
	jmp L_36733
.p2align 0x4
L_387882:
L_36816:
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r14),%r15
	cmpq $0x1,%r15
	je L_36759
L_36817:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0x148E,%r13
	je L_387898
L_36819:
	movq 0x0(%r15),%r13
	movq %r13,0x28(%rbp)
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq $0x1,0x0(%r14)
	movq 0xFFFFFFFFFFFFFFF8(%r13),%rax
	shrq $0x1,%rax
	subq $0x2078,%rax
	cmpq $0xD,%rax
	ja L_387883
	leaq jumpTable_54(%rip),%rbx
	jmp *(%rbx,%rax,8)
.data
.p2align 0x4
jumpTable_54:
.quad L_387897,L_387896,L_387895,L_387894,L_387893,L_387892,L_387891,L_387890,L_387889,L_387888,L_387887,L_387886,L_387885,L_387884
.text
.p2align 0x4
L_387883:
L_36820:
	movq 0x28(%rbp),%r15
	movq 0x38(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x80(%rbp)
	leaq L_36825(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x48,%rbp
	leaq (L_36821+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1247
.p2align 0x4
L_387884:
L_36842:
	movq 0x28(%rbp),%r15
	movq 0x30(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x78(%rbp)
	leaq L_36825(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x48,%rbp
	leaq (L_36821+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1248
.p2align 0x4
L_387885:
L_36841:
	movq 0x28(%rbp),%r15
	movq 0x40(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x88(%rbp)
	leaq L_36825(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x48,%rbp
	leaq (L_36821+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1249
.p2align 0x4
L_387886:
L_36840:
	movq 0x28(%rbp),%r15
	movq 0x38(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x80(%rbp)
	leaq L_36825(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x48,%rbp
	leaq (L_36821+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1250
.p2align 0x4
L_387887:
L_36839:
	movq 0x28(%rbp),%r15
	movq 0x48(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x40(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x90(%rbp)
	leaq L_36825(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x48,%rbp
	leaq (L_36821+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1251
.p2align 0x4
L_387888:
L_36838:
	movq 0x28(%rbp),%r15
	movq 0x50(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x48(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x40(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x90(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x98(%rbp)
	leaq L_36825(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x48,%rbp
	leaq (L_36821+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1252
.p2align 0x4
L_387889:
L_36837:
	movq 0x28(%rbp),%r15
	movq 0x30(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x78(%rbp)
	leaq L_36825(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x48,%rbp
	leaq (L_36821+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1253
.p2align 0x4
L_387890:
L_36836:
	movq 0x28(%rbp),%r15
	movq 0x40(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x88(%rbp)
	leaq L_36825(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x48,%rbp
	leaq (L_36821+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1254
.p2align 0x4
L_387891:
L_36835:
	movq 0x28(%rbp),%r15
	movq 0x50(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x48(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x40(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x90(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x98(%rbp)
	leaq L_36825(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x48,%rbp
	leaq (L_36821+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1255
.p2align 0x4
L_387892:
L_36834:
	movq 0x28(%rbp),%r15
	movq 0x48(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x40(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x90(%rbp)
	leaq L_36825(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x48,%rbp
	leaq (L_36821+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1256
.p2align 0x4
L_387893:
L_36833:
	movq 0x28(%rbp),%r15
	movq 0x38(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x80(%rbp)
	leaq L_36825(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x48,%rbp
	leaq (L_36821+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1257
.p2align 0x4
L_387894:
L_36832:
	movq 0x28(%rbp),%r15
	movq 0x40(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x88(%rbp)
	leaq L_36825(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x48,%rbp
	leaq (L_36821+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1258
.p2align 0x4
L_387895:
L_36831:
	movq 0x28(%rbp),%r15
	movq 0x30(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x78(%rbp)
	leaq L_36825(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x48,%rbp
	leaq (L_36821+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1259
.p2align 0x4
L_387896:
L_36830:
	movq 0x28(%rbp),%r15
	movq 0x50(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x48(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x40(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x90(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x98(%rbp)
	leaq L_36825(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x48,%rbp
	leaq (L_36821+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1260
.p2align 0x4
L_387897:
L_36829:
	movq 0x28(%rbp),%r15
	movq 0x48(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x40(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x90(%rbp)
	leaq L_36825(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x48,%rbp
	leaq (L_36821+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1261
.p2align 0x4
L_387898:
L_36818:
	movq 0x0(%r15),%r13
	movq %r13,%r15
	jmp L_36733
.p2align 0x4
L_387900:
L_36788:
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r14),%r15
	cmpq $0x1,%r15
	je L_36759
L_36789:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0x148E,%r13
	je L_387916
L_36791:
	movq 0x0(%r15),%r13
	movq %r13,0x28(%rbp)
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq $0x1,0x0(%r14)
	movq 0xFFFFFFFFFFFFFFF8(%r13),%rax
	shrq $0x1,%rax
	subq $0x2078,%rax
	cmpq $0xD,%rax
	ja L_387901
	leaq jumpTable_55(%rip),%rbx
	jmp *(%rbx,%rax,8)
.data
.p2align 0x4
jumpTable_55:
.quad L_387915,L_387914,L_387913,L_387912,L_387911,L_387910,L_387909,L_387908,L_387907,L_387906,L_387905,L_387904,L_387903,L_387902
.text
.p2align 0x4
L_387901:
L_36792:
	movq 0x28(%rbp),%r15
	movq 0x38(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x80(%rbp)
	leaq L_36797(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x48,%rbp
	leaq (L_36793+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1247
.p2align 0x4
L_387902:
L_36814:
	movq 0x28(%rbp),%r15
	movq 0x30(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x78(%rbp)
	leaq L_36797(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x48,%rbp
	leaq (L_36793+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1248
.p2align 0x4
L_387903:
L_36813:
	movq 0x28(%rbp),%r15
	movq 0x40(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x88(%rbp)
	leaq L_36797(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x48,%rbp
	leaq (L_36793+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1249
.p2align 0x4
L_387904:
L_36812:
	movq 0x28(%rbp),%r15
	movq 0x38(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x80(%rbp)
	leaq L_36797(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x48,%rbp
	leaq (L_36793+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1250
.p2align 0x4
L_387905:
L_36811:
	movq 0x28(%rbp),%r15
	movq 0x48(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x40(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x90(%rbp)
	leaq L_36797(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x48,%rbp
	leaq (L_36793+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1251
.p2align 0x4
L_387906:
L_36810:
	movq 0x28(%rbp),%r15
	movq 0x50(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x48(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x40(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x90(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x98(%rbp)
	leaq L_36797(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x48,%rbp
	leaq (L_36793+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1252
.p2align 0x4
L_387907:
L_36809:
	movq 0x28(%rbp),%r15
	movq 0x30(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x78(%rbp)
	leaq L_36797(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x48,%rbp
	leaq (L_36793+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1253
.p2align 0x4
L_387908:
L_36808:
	movq 0x28(%rbp),%r15
	movq 0x40(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x88(%rbp)
	leaq L_36797(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x48,%rbp
	leaq (L_36793+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1254
.p2align 0x4
L_387909:
L_36807:
	movq 0x28(%rbp),%r15
	movq 0x50(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x48(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x40(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x90(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x98(%rbp)
	leaq L_36797(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x48,%rbp
	leaq (L_36793+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1255
.p2align 0x4
L_387910:
L_36806:
	movq 0x28(%rbp),%r15
	movq 0x48(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x40(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x90(%rbp)
	leaq L_36797(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x48,%rbp
	leaq (L_36793+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1256
.p2align 0x4
L_387911:
L_36805:
	movq 0x28(%rbp),%r15
	movq 0x38(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x80(%rbp)
	leaq L_36797(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x48,%rbp
	leaq (L_36793+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1257
.p2align 0x4
L_387912:
L_36804:
	movq 0x28(%rbp),%r15
	movq 0x40(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x88(%rbp)
	leaq L_36797(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x48,%rbp
	leaq (L_36793+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1258
.p2align 0x4
L_387913:
L_36803:
	movq 0x28(%rbp),%r15
	movq 0x30(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x78(%rbp)
	leaq L_36797(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x48,%rbp
	leaq (L_36793+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1259
.p2align 0x4
L_387914:
L_36802:
	movq 0x28(%rbp),%r15
	movq 0x50(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x48(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x40(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x90(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x98(%rbp)
	leaq L_36797(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x48,%rbp
	leaq (L_36793+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1260
.p2align 0x4
L_387915:
L_36801:
	movq 0x28(%rbp),%r15
	movq 0x48(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x40(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x90(%rbp)
	leaq L_36797(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x48,%rbp
	leaq (L_36793+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1261
.p2align 0x4
L_387916:
L_36790:
	movq 0x0(%r15),%r13
	movq %r13,%r15
	jmp L_36733
.p2align 0x4
L_387918:
L_36760:
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r14),%r15
	cmpq $0x1,%r15
	je L_36759
L_36761:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0x148E,%r13
	je L_387934
L_36763:
	movq 0x0(%r15),%r13
	movq %r13,0x28(%rbp)
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq $0x1,0x0(%r14)
	movq 0xFFFFFFFFFFFFFFF8(%r13),%rax
	shrq $0x1,%rax
	subq $0x2078,%rax
	cmpq $0xD,%rax
	ja L_387919
	leaq jumpTable_56(%rip),%rbx
	jmp *(%rbx,%rax,8)
.data
.p2align 0x4
jumpTable_56:
.quad L_387933,L_387932,L_387931,L_387930,L_387929,L_387928,L_387927,L_387926,L_387925,L_387924,L_387923,L_387922,L_387921,L_387920
.text
.p2align 0x4
L_387919:
L_36764:
	movq 0x28(%rbp),%r15
	movq 0x38(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x80(%rbp)
	leaq L_36769(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x48,%rbp
	leaq (L_36765+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1247
.p2align 0x4
L_387920:
L_36786:
	movq 0x28(%rbp),%r15
	movq 0x30(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x78(%rbp)
	leaq L_36769(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x48,%rbp
	leaq (L_36765+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1248
.p2align 0x4
L_387921:
L_36785:
	movq 0x28(%rbp),%r15
	movq 0x40(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x88(%rbp)
	leaq L_36769(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x48,%rbp
	leaq (L_36765+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1249
.p2align 0x4
L_387922:
L_36784:
	movq 0x28(%rbp),%r15
	movq 0x38(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x80(%rbp)
	leaq L_36769(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x48,%rbp
	leaq (L_36765+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1250
.p2align 0x4
L_387923:
L_36783:
	movq 0x28(%rbp),%r15
	movq 0x48(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x40(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x90(%rbp)
	leaq L_36769(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x48,%rbp
	leaq (L_36765+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1251
.p2align 0x4
L_387924:
L_36782:
	movq 0x28(%rbp),%r15
	movq 0x50(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x48(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x40(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x90(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x98(%rbp)
	leaq L_36769(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x48,%rbp
	leaq (L_36765+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1252
.p2align 0x4
L_387925:
L_36781:
	movq 0x28(%rbp),%r15
	movq 0x30(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x78(%rbp)
	leaq L_36769(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x48,%rbp
	leaq (L_36765+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1253
.p2align 0x4
L_387926:
L_36780:
	movq 0x28(%rbp),%r15
	movq 0x40(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x88(%rbp)
	leaq L_36769(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x48,%rbp
	leaq (L_36765+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1254
.p2align 0x4
L_387927:
L_36779:
	movq 0x28(%rbp),%r15
	movq 0x50(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x48(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x40(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x90(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x98(%rbp)
	leaq L_36769(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x48,%rbp
	leaq (L_36765+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1255
.p2align 0x4
L_387928:
L_36778:
	movq 0x28(%rbp),%r15
	movq 0x48(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x40(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x90(%rbp)
	leaq L_36769(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x48,%rbp
	leaq (L_36765+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1256
.p2align 0x4
L_387929:
L_36777:
	movq 0x28(%rbp),%r15
	movq 0x38(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x80(%rbp)
	leaq L_36769(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x48,%rbp
	leaq (L_36765+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1257
.p2align 0x4
L_387930:
L_36776:
	movq 0x28(%rbp),%r15
	movq 0x40(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x88(%rbp)
	leaq L_36769(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x48,%rbp
	leaq (L_36765+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1258
.p2align 0x4
L_387931:
L_36775:
	movq 0x28(%rbp),%r15
	movq 0x30(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x78(%rbp)
	leaq L_36769(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x48,%rbp
	leaq (L_36765+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1259
.p2align 0x4
L_387932:
L_36774:
	movq 0x28(%rbp),%r15
	movq 0x50(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x48(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x40(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x90(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x98(%rbp)
	leaq L_36769(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x48,%rbp
	leaq (L_36765+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1260
.p2align 0x4
L_387933:
L_36773:
	movq 0x28(%rbp),%r15
	movq 0x48(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x40(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x90(%rbp)
	leaq L_36769(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x48,%rbp
	leaq (L_36765+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1261
.p2align 0x4
L_387934:
L_36762:
	movq 0x0(%r15),%r13
	movq %r13,%r15
	jmp L_36733
.p2align 0x4
L_387936:
L_36711:
	movq %r13,0x58(%rbp)
	movq 0x8(%r11),%r15
	movq %r15,0x20(%rbp)
	movq 0x0(%r11),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_36712+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_387937:
L_36707:
	movq 0x0(%r11),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_387938
L_36709:
	movl %r13d,0x30(%rbp)
	movq $0x3BBB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_36710+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
L_387938:
L_36675:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_387939:
L_36678:
	movq 0x0(%r11),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1261,%r14
	je L_387949
L_36696:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x28(%rbp)
	cmpq %rdx,%r15
	movq %r14,0x20(%rbp)
	jne L_36675
L_36698:
	testq %rdx,%rdx
	jz L_387947
L_36699:
	cmpq $0x7FFFFFFF,%rdx
	ja L_387946
L_36700:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x150F,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_36701+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36701
.p2align 0x4
.long 0x7B6
L_36701:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq %rax,%r15
L_36702:
	xorq %r14,%r14
.p2align 0x4,,0x7
loop_507:
	cmpq 0x28(%rbp),%r14
	jnl L_387940
L_36704:
	movl %r14d,%r13d
	movq %r14,%r11
	movq %r14,%r10
	movslq %r13d,%r9
	movq 0x20(%rbp),%r8
	movq 0x0(%r8,%r9,8),%rsp
	movl %r13d,%r9d
	shlq $0x1,%r9
	orq $0x1,%r9
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r13,1)
	salq $0x4,%r11
	movq %rsp,0x0(%r15,%r11,1)
	movq %r15,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%r8,%r13,1)
	salq $0x4,%r10
	movq %r9,0x8(%r15,%r10,1)
	incq %r14
	jmp loop_507
.p2align 0x4
L_387940:
L_36703:
	movq $0xC7F,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x20(%rbp)
L_36680:
	movq 0x20(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%ecx
	movslq %ecx,%r13
	cmpq %r14,%r13
	jne L_36675
L_36682:
	decl %ecx
	jo L_36683
L_36684:
	movq $0x1,0x28(%rbp)
loop_506:
	cmpl $0x0,%ecx
	jl L_387943
L_36685:
	movl %ecx,%r15d
	decl %r15d
	movl %r15d,0x38(%rbp)
	movslq %ecx,%r15
	movq %r15,%r14
	salq $0x4,%r14
	movq 0x20(%rbp),%r13
	movq 0x0(%r13,%r14,1),%r11
	movq %r11,0x40(%rbp)
	salq $0x4,%r15
	movq 0x8(%r13,%r15,1),%r14
	movq %r14,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	je L_387941
L_36686:
	movq 0x10(%r14),%r15
	movq %r15,0x48(%rbp)
L_36687:
	movq 0x40(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_36688+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_13
.p2align 0x4
L_387941:
L_36692:
	shrq $0x1,%r14
	movl %r14d,%r15d
	incl %r15d
	jo L_387942
L_36693:
	movl %r15d,0x50(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_36694+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_387942:
L_36683:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_387943:
L_36695:
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp record_3
.p2align 0x4
L_387946:
L_36705:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_387947:
L_36706:
	movq (globalObjptr+0x1C08)(%rip),%r15
	jmp L_36702
.p2align 0x4
L_387949:
L_36679:
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	jmp L_36680
.p2align 0x4
L_387950:
L_36673:
	movq 0x0(%r11),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_36675
L_36676:
	movl %r13d,0x30(%rbp)
	movq $0x3C15,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_36677+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
L_387952:
L_36921:
	movq (globalObjptr+0xAF18)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp str_3
.p2align 0x4
L_387953:
L_36922:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_36923+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36923
.p2align 0x4
.long 0x45C
L_36923:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	jmp L_36668
.p2align 0x4
.long 0x6DA
L_36671:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_36672+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x49E
L_36920:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x38(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp L_36874
.p2align 0x4
.long 0x7BE
L_36875:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_36876
L_36917:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_36918+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36918
.p2align 0x4
.long 0x986
L_36918:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_36876:
	movq 0x20(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movl 0x0(%r13),%r11d
	testl %r11d,%r11d
	jz L_36878
L_36905:
	movq 0x28(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r10,%r13
	jne L_36675
L_36907:
	cmpl $0x0,%r11d
	jng L_387955
L_36909:
	movl %r11d,0x50(%rbp)
	movq $0x3BBD,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x18,%r12
	movq %r15,0x8(%r13)
	movq %r13,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_36910+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
L_387955:
L_36878:
	movq 0x30(%rbp),%r15
	cmpq $0x1,%r15
	je L_387956
L_36879:
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0x9D0)(%rip),%r15
	movq %r15,0x28(%rbp)
L_36880:
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_36881+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_387956:
L_36904:
	movq $0x1,%r13
	xorl %ecx,%ecx
	movq (globalObjptr+0x9D0)(%rip),%r14
	xchgq %r13,%r15
L_36890:
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movl %ecx,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movl $0x0,0x4(%r13)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,0x20(%rbp)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r11)
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_36891:
	addl 0x0(%r14),%ecx
	movl %ecx,0x28(%rbp)
	jo L_36683
L_36892:
	cmpq $0x1,%r15
	je L_387957
L_36893:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_36891
.p2align 0x4
L_387957:
L_36894:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_36895
L_36897:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_36898+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36898
.p2align 0x4
.long 0x4E6
L_36898:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_36895:
	movl 0x28(%rbp),%r15d
	testl %r15d,%r15d
	jz L_387958
L_36896:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_387958:
L_36724:
	movq (globalObjptr+0x9D0)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x511
L_36736:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_36737
L_36738:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_36739+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36739
.p2align 0x4
.long 0x7C0
L_36739:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_36737:
	movq $0x291D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r15,0x0(%r13)
	movq %r14,%r15
	jmp L_36733
.p2align 0x4
.long 0x25
L_36740:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_36741
L_36742:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_36743+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36743
.p2align 0x4
.long 0x4FC
L_36743:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_36741:
	movq $0x291F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x30(%rbp),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x511
L_36849:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_36850
L_36851:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_36852+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36852
.p2align 0x4
.long 0x7C0
L_36852:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_36850:
	movq $0x291D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r15,0x0(%r13)
	movq %r14,%r15
	jmp L_36733
.p2align 0x4
.long 0x25
L_36853:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_36854
L_36855:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_36856+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36856
.p2align 0x4
.long 0x4FC
L_36856:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_36854:
	movq $0x291F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x30(%rbp),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x511
L_36821:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_36822
L_36823:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_36824+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36824
.p2align 0x4
.long 0x7C0
L_36824:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_36822:
	movq $0x291D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r15,0x0(%r13)
	movq %r14,%r15
	jmp L_36733
.p2align 0x4
.long 0x25
L_36825:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_36826
L_36827:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_36828+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36828
.p2align 0x4
.long 0x4FC
L_36828:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_36826:
	movq $0x291F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x30(%rbp),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x511
L_36793:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_36794
L_36795:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_36796+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36796
.p2align 0x4
.long 0x7C0
L_36796:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_36794:
	movq $0x291D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r15,0x0(%r13)
	movq %r14,%r15
	jmp L_36733
.p2align 0x4
.long 0x25
L_36797:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_36798
L_36799:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_36800+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36800
.p2align 0x4
.long 0x4FC
L_36800:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_36798:
	movq $0x291F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x30(%rbp),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x511
L_36765:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_36766
L_36767:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_36768+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36768
.p2align 0x4
.long 0x7C0
L_36768:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_36766:
	movq $0x291D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r15,0x0(%r13)
	movq %r14,%r15
	jmp L_36733
.p2align 0x4
.long 0x25
L_36769:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_36770
L_36771:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_36772+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36772
.p2align 0x4
.long 0x4FC
L_36772:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_36770:
	movq $0x291F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x30(%rbp),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x7B9
L_36712:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_36713+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x473
L_36710:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0x9F40)(%rip),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDD28)(%rip),%r15
	movq %r15,0x18(%rbp)
	jmp x_1218
.p2align 0x4
.long 0x980
L_36688:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_36689
L_36690:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_36691+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36691
.p2align 0x4
.long 0x981
L_36691:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_36689:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x8(%r14)
	movq %r14,0x28(%rbp)
	movl 0x38(%rbp),%ecx
	jmp loop_506
.p2align 0x4
.long 0x982
L_36694:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	jmp L_36687
.p2align 0x4
.long 0x473
L_36677:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xD0F8)(%rip),%r15
	movq %r15,0x18(%rbp)
	jmp x_1218
.p2align 0x4
.long 0x6DA
L_36672:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x10(%rbp)
	jmp maybeConstrain_0
.p2align 0x4
.long 0x8F7
L_36910:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq %r15,0x48(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x50(%rbp)
	movq (globalObjptr+0x9F40)(%rip),%r15
	movq %r15,0x58(%rbp)
	movq (globalObjptr+0xDD28)(%rip),%r15
	movq %r15,0x60(%rbp)
	addq $0x48,%rbp
	leaq (L_36911+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
.long 0x983
L_36881:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_36882+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_13
.p2align 0x4
.long 0x7B9
L_36713:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x30,%rbp
	leaq (L_36714+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp maybeConstrain_0
.p2align 0x4
.long 0x8F7
L_36911:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_36912
L_36915:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_36916+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36916
.p2align 0x4
.long 0x985
L_36916:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_36912:
	movq 0x30(%rbp),%r15
	cmpq $0x1,%r15
	je L_387975
L_36913:
	movq 0x20(%rbp),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_36880
.p2align 0x4
L_387975:
L_36914:
	movq $0x1,%r13
	xorl %ecx,%ecx
	movq 0x20(%rbp),%r14
	xchgq %r13,%r15
	jmp L_36890
.p2align 0x4
.long 0x7B4
L_36882:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_36883
L_36902:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_36903+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36903
.p2align 0x4
.long 0x5EE
L_36903:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_36883:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x40(%rbp)
	addq $0x18,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_36884:
	addl 0x0(%r15),%ecx
	movl %ecx,0x20(%rbp)
	jo L_36683
L_36885:
	cmpq $0x1,%r14
	je L_387977
L_36886:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_36884
.p2align 0x4
L_387977:
L_36887:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_36888
L_36900:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_36901+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36901
.p2align 0x4
.long 0x984
L_36901:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_36888:
	movl 0x20(%rbp),%ecx
	testl %ecx,%ecx
	jz L_387978
L_36889:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x28(%rbp),%r14
	jmp L_36890
.p2align 0x4
L_387978:
L_36899:
	movq $0x1,%r15
	xorl %r13d,%r13d
	movq 0x28(%rbp),%r14
	xchgl %r13d,%ecx
	jmp L_36890
.p2align 0x4
.long 0x496
L_36714:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq (globalObjptr+0xDF90)(%rip),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_36715+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x638
L_36715:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_36716+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_13
.p2align 0x4
.long 0x5F1
L_36716:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_36717
L_36727:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_36728+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36728
.p2align 0x4
.long 0x4FC
L_36728:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_36717:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x38(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_36718:
	addl 0x0(%r15),%ecx
	movl %ecx,0x20(%rbp)
	jo L_36683
L_36719:
	cmpq $0x1,%r14
	je L_387982
L_36720:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_36718
.p2align 0x4
L_387982:
L_36721:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_36722
L_36725:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_36726+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36726
.p2align 0x4
.long 0x7BA
L_36726:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_36722:
	movl 0x20(%rbp),%r15d
	testl %r15d,%r15d
	jz L_36724
L_36723:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl get_14
.hidden get_14
get_14:
L_36924:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_37075
L_36925:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_388013
L_36926:
	movq 0x8(%rbp),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x10(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x18(%rbp)
	movq 0x0(%rbp),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x20(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_388012
L_36928:
	movq %r15,0x0(%r13)
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_388011
L_36929:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_36931:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_36932
L_37067:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xCB2,%r13
	jne L_36932
L_37068:
	movq 0x8(%r14),%r13
	movq (globalObjptr+0x588)(%rip),%r11
	cmpq %r11,0x0(%r14)
	je L_388006
L_36932:
	incl %ecx
	movl %ecx,0x28(%rbp)
	jo L_388005
L_36934:
	cmpq $0x1,%r15
	je L_387987
L_36935:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_36931
.p2align 0x4
L_387987:
L_36936:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_36937
L_37065:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_37066+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37066
.p2align 0x4
.long 0x810
L_37066:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_36937:
	movl 0x28(%rbp),%ecx
L_36938:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_388003
L_36940:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_36942
L_37064:
	movl %ecx,0x0(%r15)
L_36942:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,%r15
	andq $0x7,%r15
	cmpq $0x1,%r15
	je L_388001
	cmpq $0x2,%r15
	je L_388000
	cmpq $0x3,%r15
	je L_387999
	cmpq $0x5,%r15
	je L_387997
L_36943:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xEB0,%r15
	je L_387996
	cmpq $0xEB1,%r15
	je L_387995
	cmpq $0xEB2,%r15
	je L_387992
	cmpq $0xEB3,%r15
	je L_387991
	cmpq $0xEB4,%r15
	je L_387989
	cmpq $0xEB5,%r15
	je L_387988
L_36944:
	movq 0x0(%r14),%r15
	movq %r15,0x30(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_36945+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1197
.p2align 0x4
L_387988:
L_37042:
	movq 0x0(%r14),%r15
	movq %r15,0x30(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_37043+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_14
.p2align 0x4
L_387989:
L_37037:
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r13
	movq 0x0(%r14),%r15
	movq 0x8(%r15),%r11
	movq %r11,0x18(%rbp)
	movq 0x18(%r15),%r10
	movq 0x0(%r11),%r15
	cmpq $0x1,%r15
	jne L_387990
L_37040:
	movq %r10,0x30(%rbp)
	movq %r13,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_37041+0x0)(%rip),%r14
	movq %r14,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unique_0
.p2align 0x4
L_387990:
L_37038:
L_37039:
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_36948+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_387991:
L_37023:
	movq 0x0(%r14),%r15
	movq %r15,0x30(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_37024+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_14
.p2align 0x4
L_387992:
L_36984:
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_387994
L_36986:
	testl %r13d,%r13d
	jz L_387993
L_36987:
	movl %r13d,0x38(%rbp)
	movq $0x3C2D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_36988+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
L_387993:
L_37022:
	movq (globalObjptr+0xCD50)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_36948+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_387994:
L_36985:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_387995:
L_36970:
	movq 0x0(%r14),%r15
	movq %r15,0x30(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_36971+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_14
.p2align 0x4
L_387996:
L_36955:
	movq 0x0(%r14),%r15
	movq %r15,0x30(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_36956+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_14
.p2align 0x4
L_387997:
L_37059:
	shrq $0x3,%r14
	movb %r14b,%r13b
	testb %r13b,%r13b
	jnz L_387998
L_37060:
	movq (globalObjptr+0xD860)(%rip),%r15
L_37061:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0xBAE8)(%rip),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_37062+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_387998:
L_37063:
	movq (globalObjptr+0xD878)(%rip),%r15
	jmp L_37061
.p2align 0x4
L_387999:
L_37058:
	movq (globalObjptr+0xCD98)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_36948+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_388000:
L_37057:
	movq (globalObjptr+0xBAF8)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_36948+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_388001:
L_37056:
	movq (globalObjptr+0xE638)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_36948+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_388003:
L_36939:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_388005:
L_36933:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_388006:
L_37070:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_36939
L_37071:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_388007
L_37073:
	movl %ecx,0x0(%r15)
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_388007:
L_37072:
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_388011:
L_37074:
	xorl %ecx,%ecx
	jmp L_36938
.p2align 0x4
L_388012:
L_36927:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_388013:
L_37075:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_37076+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37076
.p2align 0x4
.long 0x45F
L_37076:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_36926
.p2align 0x4
.long 0x459
L_36945:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_36946
L_36953:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_36954+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36954
.p2align 0x4
.long 0x508
L_36954:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_36946:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xDBC0)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_36947+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x459
L_37043:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq (globalObjptr+0xE630)(%rip),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_37044+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x519
L_37041:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x18(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp L_37039
.p2align 0x4
.long 0x459
L_36948:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_36949
L_36951:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_36952+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36952
.p2align 0x4
.long 0x508
L_36952:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_36949:
	movq 0x28(%rbp),%r15
L_36950:
	movq $0x1965,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	movq %r15,0x0(%rbp)
	addq $0x18,%r12
	movq (globalObjptr+0x588)(%rip),%r15
	movq %r15,0x0(%r14)
	movq 0x20(%rbp),%r15
	movq 0x0(%r15),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq %r11,0x0(%r15)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x459
L_37024:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq (globalObjptr+0xE1F0)(%rip),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_37025+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x459
L_36988:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_36989
L_37020:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_37021+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37021
.p2align 0x4
.long 0x508
L_37021:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_36989:
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_388017
L_36990:
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq (globalObjptr+0xE628)(%rip),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_36991+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_388017:
L_37019:
	movq $0x1,%r14
	xorl %ecx,%ecx
	xchgq %r14,%r15
L_36999:
	testl %ecx,%ecx
	jz L_388018
L_37000:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
paren_11:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x28(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0xD0F8)(%rip),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_37001+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_388018:
L_37014:
	movq $0x1,%r15
	xorl %ecx,%ecx
	jmp paren_11
.p2align 0x4
.long 0x459
L_36971:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq (globalObjptr+0xE340)(%rip),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_36972+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x459
L_36956:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq (globalObjptr+0xE338)(%rip),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_36957+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x459
L_37062:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_36948+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x459
L_36947:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_36948+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5ED
L_37044:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_37045
L_37054:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_37055+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37055
.p2align 0x4
.long 0x4FC
L_37055:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_37045:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x38(%rbp)
	addq $0x18,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_37046:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_36933
L_37047:
	cmpq $0x1,%r14
	je L_388020
L_37048:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_37046
.p2align 0x4
L_388020:
L_37049:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_37050
L_37052:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_37053+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37053
.p2align 0x4
.long 0x7B5
L_37053:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_37050:
	movl 0x28(%rbp),%r15d
	testl %r15d,%r15d
	jz L_388021
L_37051:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,%r15
	jmp L_36950
.p2align 0x4
L_388021:
L_36965:
	movq (globalObjptr+0x9D0)(%rip),%r15
	jmp L_36950
.p2align 0x4
.long 0x5ED
L_37025:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_37026
L_37035:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_37036+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37036
.p2align 0x4
.long 0x4FC
L_37036:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_37026:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x38(%rbp)
	addq $0x18,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_37027:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_36933
L_37028:
	cmpq $0x1,%r14
	je L_388025
L_37029:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_37027
.p2align 0x4
L_388025:
L_37030:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_37031
L_37033:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_37034+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37034
.p2align 0x4
.long 0x7B5
L_37034:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_37031:
	movl 0x28(%rbp),%r15d
	testl %r15d,%r15d
	jz L_36965
L_37032:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,%r15
	jmp L_36950
.p2align 0x4
.long 0x75D
L_36991:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x30(%rbp),%r14
	movq %r14,0x48(%rbp)
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_36992+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3787
.p2align 0x4
.long 0x5ED
L_37001:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_37002+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5ED
L_36972:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_36973
L_36982:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_36983+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36983
.p2align 0x4
.long 0x4FC
L_36983:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_36973:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x38(%rbp)
	addq $0x18,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_36974:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_36933
L_36975:
	cmpq $0x1,%r14
	je L_388030
L_36976:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_36974
.p2align 0x4
L_388030:
L_36977:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_36978
L_36980:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_36981+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36981
.p2align 0x4
.long 0x7B5
L_36981:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_36978:
	movl 0x28(%rbp),%r15d
	testl %r15d,%r15d
	jz L_36965
L_36979:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,%r15
	jmp L_36950
.p2align 0x4
.long 0x5ED
L_36957:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_36958
L_36968:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_36969+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36969
.p2align 0x4
.long 0x4FC
L_36969:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_36958:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x38(%rbp)
	addq $0x18,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_36959:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_36933
L_36960:
	cmpq $0x1,%r14
	je L_388035
L_36961:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_36959
.p2align 0x4
L_388035:
L_36962:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_36963
L_36966:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_36967+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_36967
.p2align 0x4
.long 0x7B5
L_36967:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_36963:
	movl 0x28(%rbp),%r15d
	testl %r15d,%r15d
	jz L_36965
L_36964:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,%r15
	jmp L_36950
.p2align 0x4
.long 0x7CB
L_36992:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_36993
L_37017:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_37018+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37018
.p2align 0x4
.long 0x815
L_37018:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_36993:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x30(%rbp)
	addq $0x18,%r12
	movq 0x38(%rbp),%r15
	movq %r15,0x0(%r13)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_36994:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_36933
L_36995:
	cmpq $0x1,%r14
	je L_388040
L_36996:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_36994
.p2align 0x4
L_388040:
L_36997:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_36998
L_37015:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_37016+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37016
.p2align 0x4
.long 0x600
L_37016:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_36998:
	movq 0x30(%rbp),%r15
	movl 0x28(%rbp),%ecx
	jmp L_36999
.p2align 0x4
.long 0x6FF
L_37002:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_37003
L_37012:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_37013+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37013
.p2align 0x4
.long 0x5EE
L_37013:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_37003:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x40(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_37004:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_36933
L_37005:
	cmpq $0x1,%r14
	je L_388044
L_37006:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_37004
.p2align 0x4
L_388044:
L_37007:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_37008
L_37010:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_37011+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37011
.p2align 0x4
.long 0x784
L_37011:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_37008:
	movl 0x28(%rbp),%r15d
	testl %r15d,%r15d
	jz L_36965
L_37009:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,%r15
	jmp L_36950
.text
.p2align 0x4
.globl layout_30
.hidden layout_30
layout_30:
L_37077:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_37078
L_37254:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_37255+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37255
.p2align 0x4
.long 0x45F
L_37255:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_37078:
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_388053
L_37081:
	decl %r13d
	jo L_388052
L_37083:
	movl %r13d,0x28(%rbp)
	movq $0x1,0x20(%rbp)
.p2align 0x4,,0x7
loop_508:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_388051
.p2align 0x4,,0x7
L_37084:
	movl 0x28(%rbp),%r15d
	cmpl $0x0,%r15d
	jl L_388049
L_37085:
	movl %r15d,%r14d
	decl %r14d
	movslq %r15d,%r13
	movl %r14d,0x28(%rbp)
	movq 0x18(%rbp),%r15
	movq 0x0(%r15,%r13,8),%r14
	movq $0x2701,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x20(%rbp)
	jmp loop_508
.p2align 0x4
L_388049:
L_37086:
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_388050
L_37087:
	movq 0x8(%r14),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x28(%rbp)
	movq (globalObjptr+0x1730)(%rip),%r14
	movq %r14,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_37088+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_388050:
L_37251:
	movq $0x1,0x0(%rbp)
	movl $0x0,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_388051:
L_37252:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_37253+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37253
.p2align 0x4
.long 0x650
L_37253:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_37084
.p2align 0x4
L_388052:
L_37082:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_388053:
L_37080:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4E2
L_37088:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_37089+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4E2
L_37089:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_37090+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x987
L_37090:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_37091
L_37249:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_37250+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37250
.p2align 0x4
.long 0x4B0
L_37250:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_37091:
	movq 0x30(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_37080
L_37093:
	cmpl $0x0,%r13d
	je L_388057
	cmpl $0x1,%r13d
	je L_388055
L_37094:
	movl %r13d,0x50(%rbp)
	movq $0x3BEF,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq %r15,0x0(%r13)
	movq %r13,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_37095+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
L_388055:
L_37233:
	cmpq $0x0,%r14
	jna L_388056
L_37235:
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_37236+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_388056:
L_37199:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_388057:
L_37105:
	movq 0x10(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_37106+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_15
.p2align 0x4
.long 0x78F
L_37095:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq %r15,0x48(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x50(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0x58(%rbp)
	movq (globalObjptr+0xD0F8)(%rip),%r15
	movq %r15,0x60(%rbp)
	addq $0x48,%rbp
	leaq (L_37096+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
.long 0x78F
L_37236:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_37237+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4A6
L_37106:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_37107+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x78F
L_37096:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_37097+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4A8
L_37237:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_37238
L_37247:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_37248+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37248
.p2align 0x4
.long 0x86E
L_37248:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_37238:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x48(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_37239:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_37082
L_37240:
	cmpq $0x1,%r14
	je L_388060
L_37241:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_37239
.p2align 0x4
L_388060:
L_37242:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_37243
L_37245:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_37246+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37246
.p2align 0x4
.long 0x98F
L_37246:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_37243:
	movl 0x28(%rbp),%r15d
	testl %r15d,%r15d
	jz L_388061
L_37244:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,0x28(%rbp)
	jmp L_37105
.p2align 0x4
L_388061:
L_37227:
	movq (globalObjptr+0x9D0)(%rip),%r15
	movq %r15,0x28(%rbp)
	jmp L_37105
.p2align 0x4
.long 0x4A7
L_37107:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq (globalObjptr+0xCD40)(%rip),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_37108+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4A8
L_37097:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_37098
L_37230:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_37231+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37231
.p2align 0x4
.long 0x86E
L_37231:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_37098:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x48(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_37099:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_37082
L_37100:
	cmpq $0x1,%r14
	je L_388065
L_37101:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_37099
.p2align 0x4
L_388065:
L_37102:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_37103
L_37228:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_37229+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37229
.p2align 0x4
.long 0x98F
L_37229:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_37103:
	movl 0x28(%rbp),%r15d
	testl %r15d,%r15d
	jz L_37227
L_37104:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,0x28(%rbp)
	jmp L_37105
.p2align 0x4
.long 0x4A8
L_37108:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_37109
L_37225:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_37226+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37226
.p2align 0x4
.long 0x86E
L_37226:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_37109:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x48(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x20(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_37110:
	addl 0x0(%r15),%ecx
	movl %ecx,0x20(%rbp)
	jo L_37082
L_37111:
	cmpq $0x1,%r14
	je L_388070
L_37112:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_37110
.p2align 0x4
L_388070:
L_37113:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_37114
L_37223:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_37224+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37224
.p2align 0x4
.long 0x98E
L_37224:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_37114:
	movl 0x20(%rbp),%ecx
	testl %ecx,%ecx
	jz L_388071
L_37115:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
L_37116:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x20(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x28(%rbp)
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_37117+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_388071:
L_37222:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_37116
.p2align 0x4
.long 0x4A6
L_37117:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_37118
L_37220:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_37221+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37221
.p2align 0x4
.long 0x720
L_37221:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_37118:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x28(%rbp),%r13
	movq %r13,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x38(%rbp)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_37119:
	addl 0x0(%r15),%ecx
	movl %ecx,0x20(%rbp)
	jo L_37082
L_37120:
	cmpq $0x1,%r14
	je L_388075
L_37121:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_37119
.p2align 0x4
L_388075:
L_37122:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_37123
L_37218:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_37219+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37219
.p2align 0x4
.long 0x5F7
L_37219:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_37123:
	movl 0x20(%rbp),%ecx
	testl %ecx,%ecx
	jz L_388077
L_37124:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
L_37125:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x20(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_388076
L_37126:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x18(%rbp)
	movq %r14,0x28(%rbp)
	movq $0x1,0x30(%rbp)
L_37127:
	movq (globalObjptr+0xE2C0)(%rip),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_37128+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_388076:
L_37216:
	movq $0x1,%r14
	xchgq %r14,%r15
L_37171:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_37172+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3782
.p2align 0x4
L_388077:
L_37217:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_37125
.p2align 0x4
.long 0x4A7
L_37128:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_37129+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1
L_37172:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movl 0x8(%rbp),%r15d
	movl %r15d,0x0(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_37173
L_37177:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_37178+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37178
.p2align 0x4
.long 0x494
L_37178:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_37173:
	movl 0x0(%rbp),%r15d
	testl %r15d,%r15d
	jz L_388082
L_37174:
	decl %r15d
	jo L_37082
L_37175:
	movq $0x1B67,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movl $0x1,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x8(%rbp),%r13
	movq %r13,0x8(%r14)
	movq %r14,0x0(%rbp)
	movl %r15d,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_388082:
L_37176:
	movq $0x1,0x0(%rbp)
	movl $0x0,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x988
L_37129:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_37130
L_37214:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_37215+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37215
.p2align 0x4
.long 0x859
L_37215:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_37130:
	movq 0x40(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_37080
L_37132:
	cmpl $0x0,%r13d
	je L_388086
	cmpl $0x1,%r13d
	je L_388084
L_37133:
	movl %r13d,0x60(%rbp)
	movq $0x3BEF,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq %r15,0x0(%r13)
	movq %r13,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_37134+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
L_388084:
L_37197:
	cmpq $0x0,%r14
	jna L_37199
L_37200:
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_37201+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_388086:
L_37144:
	movq 0x10(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_37145+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_15
.p2align 0x4
.long 0x989
L_37134:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq %r15,0x58(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x60(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0x68(%rbp)
	movq (globalObjptr+0xD0F8)(%rip),%r15
	movq %r15,0x70(%rbp)
	addq $0x58,%rbp
	leaq (L_37135+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
.long 0x989
L_37201:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_37202+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4A8
L_37145:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_37146+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x989
L_37135:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_37136+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x98A
L_37202:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_37203
L_37212:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_37213+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37213
.p2align 0x4
.long 0x98C
L_37213:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_37203:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x58(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x40(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_37204:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_37082
L_37205:
	cmpq $0x1,%r14
	je L_388089
L_37206:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_37204
.p2align 0x4
L_388089:
L_37207:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_37208
L_37210:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_37211+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37211
.p2align 0x4
.long 0x98D
L_37211:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_37208:
	movl 0x28(%rbp),%r15d
	testl %r15d,%r15d
	jz L_388090
L_37209:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x58(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,0x28(%rbp)
	jmp L_37144
.p2align 0x4
L_388090:
L_37191:
	movq (globalObjptr+0x9D0)(%rip),%r15
	movq %r15,0x28(%rbp)
	jmp L_37144
.p2align 0x4
.long 0x8BA
L_37146:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq (globalObjptr+0xCD40)(%rip),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_37147+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x98A
L_37136:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_37137
L_37194:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_37195+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37195
.p2align 0x4
.long 0x98C
L_37195:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_37137:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x58(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x40(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_37138:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_37082
L_37139:
	cmpq $0x1,%r14
	je L_388094
L_37140:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_37138
.p2align 0x4
L_388094:
L_37141:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_37142
L_37192:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_37193+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37193
.p2align 0x4
.long 0x98D
L_37193:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_37142:
	movl 0x28(%rbp),%r15d
	testl %r15d,%r15d
	jz L_37191
L_37143:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x58(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,0x28(%rbp)
	jmp L_37144
.p2align 0x4
.long 0x98A
L_37147:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_37148
L_37189:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_37190+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37190
.p2align 0x4
.long 0x98C
L_37190:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_37148:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x58(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x38(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_37149:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_37082
L_37150:
	cmpq $0x1,%r14
	je L_388099
L_37151:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_37149
.p2align 0x4
L_388099:
L_37152:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_37153
L_37187:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_37188+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37188
.p2align 0x4
.long 0x8AE
L_37188:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_37153:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_388100
L_37154:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
L_37155:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x28(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x38(%rbp)
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_37156+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_388100:
L_37186:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_37155
.p2align 0x4
.long 0x4A8
L_37156:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_37157
L_37184:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_37185+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37185
.p2align 0x4
.long 0x86E
L_37185:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_37157:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x38(%rbp),%r13
	movq %r13,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x48(%rbp)
	addq $0x18,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_37158:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_37082
L_37159:
	cmpq $0x1,%r14
	je L_388104
L_37160:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_37158
.p2align 0x4
L_388104:
L_37161:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_37162
L_37182:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_37183+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37183
.p2align 0x4
.long 0x98B
L_37183:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_37162:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_388108
L_37163:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
L_37164:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x18(%rbp),%r13
	cmpq $0x1,%r13
	je L_388105
L_37165:
	movq %r15,0x30(%rbp)
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movq %r13,0x18(%rbp)
	movq %r14,0x28(%rbp)
	jmp L_37127
.p2align 0x4
L_388105:
L_37166:
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq %r14,0x30(%rbp)
	movq $0x1,0x38(%rbp)
.p2align 0x4,,0x7
L_37167:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_388107
.p2align 0x4,,0x7
L_37168:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_37171
L_37169:
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x30(%rbp)
	jmp L_37167
.p2align 0x4
L_388107:
L_37179:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_37180+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37180
.p2align 0x4
.long 0x5EE
L_37180:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_37168
.p2align 0x4
L_388108:
L_37181:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_37164
.text
.p2align 0x4
.globl layout_15
.hidden layout_15
layout_15:
loopS_1:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_37256
L_37452:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_37453+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37453
.p2align 0x4
.long 0x45F
L_37453:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_37256:
	movq 0x0(%rbp),%r15
.p2align 0x4,,0x7
loop_509:
	movq 0x8(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x10(%rbp)
	movq 0x0(%r14),%r13
	movq 0x8(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xDEB,%r15
	je L_388122
	cmpq $0xDEC,%r15
	je L_388112
L_37257:
	movq 0x0(%r14),%r15
	movq 0x8(%r15),%r11
	movq 0x10(%r11),%r10
	movq %r10,0x0(%rbp)
	jmp str_3
.p2align 0x4
L_388112:
L_37355:
	movq 0x8(%r14),%r8
	movq %r8,0x10(%rbp)
	movq 0x0(%r14),%r10
	movq 0x8(%r10),%r8
	movq 0x0(%r8),%r15
	movq 0x8(%r8),%r11
	movq 0x8(%r13),%r8
	movq 0x0(%r8),%r14
	movq 0x8(%r8),%rsp
	cmpq $0x1,%r15
	je L_388121
L_37356:
	movq 0x8(%r15),%r9
	movq 0x0(%r15),%r8
	movq %r14,%r15
	movq %r8,%r14
	movq %rsp,%r13
.p2align 0x4,,0x7
L_37358:
	movq %r15,%r8
	andq $0x3,%r8
	jnz L_388120
L_37398:
	movq 0x8(%r15),%r8
	movq 0x8(%r14),%rsp
	movq 0x0(%r15),%rsi
	movq 0x8(%rsi),%rdi
	movq 0x8(%rdi),%rdx
	cmpq %rdx,0x8(%rsp)
	jne L_388119
L_37400:
	cmpq $0x1,%r9
	je L_388113
L_37401:
	movq 0x0(%r9),%r14
	movq 0x8(%r9),%r9
	movq %r8,%r15
	jmp L_37358
.p2align 0x4
L_388113:
L_37402:
	movq %r8,%r15
	movq %r13,%r14
	movq %r11,%r13
	movq %r10,%r11
L_37403:
	cmpq $0x1,%r15
	jne L_37359
L_37404:
	movq 0x8(%r14),%r15
	movq 0x8(%r13),%r10
	movq 0x8(%r10),%r9
	cmpq %r9,0x8(%r15)
	jne L_388117
L_37406:
	movq 0x10(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq %r14,0x18(%rbp)
	movl %r14d,%r15d
	movslq %r15d,%r13
	cmpq %r13,%r14
	jne L_388116
L_37408:
	cmpl $0x2,%r15d
	je L_388114
L_37409:
	movq (globalObjptr+0x1718)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_388114:
L_37410:
	cmpq $0x0,0x18(%rbp)
	jna L_388115
L_37412:
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_37413+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_15
.p2align 0x4
L_388115:
L_37353:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_388116:
L_37263:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_388117:
L_37359:
	movq %r11,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_37360+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_26
.p2align 0x4
L_388119:
	movq %r10,%r11
	jmp L_37359
.p2align 0x4
L_388120:
	movq %r10,%r11
	jmp L_37359
.p2align 0x4
L_388121:
L_37451:
	movq %r14,%r15
	movq %rsp,%r14
	movq %r11,%r13
	movq %r10,%r11
	jmp L_37403
.p2align 0x4
L_388122:
L_37258:
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xDED,%r14
	je L_388128
L_37292:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movq %r14,0x10(%rbp)
	movl %r15d,%r14d
	movl %r14d,0x18(%rbp)
	movslq %r14d,%r13
	cmpq %r15,%r13
	jne L_37263
L_37294:
	cmpl $0x0,%r14d
	je L_388126
	cmpl $0x1,%r14d
	je L_388124
L_37295:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_37296
L_37348:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r14d
	movl %r14d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r14
	movq %r14,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_37349+0x0)(%rip),%r14
	movq %r14,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37349
.p2align 0x4
.long 0x49B
L_37349:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_37296:
	movq $0x3BE7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x8(%rbp)
	movl 0x18(%rbp),%r15d
	movl %r15d,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_37297+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
L_388124:
L_37351:
	cmpq $0x0,%r15
	jna L_37353
L_37354:
	movq 0x10(%rbp),%r14
	movq 0x0(%r14),%r15
	jmp loop_509
.p2align 0x4
L_388126:
L_37350:
	movq (globalObjptr+0xCD50)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp str_3
.p2align 0x4
L_388128:
L_37259:
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	movq (globalObjptr+0xDD60)(%rip),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_37260+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4F4
L_37413:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xE358)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_37414+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4E5
L_37360:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	movl 0x28(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_37361
L_37396:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_37397+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37397
.p2align 0x4
.long 0x4E1
L_37397:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_37361:
	movq $0xC3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x28(%rbp)
	addq $0x18,%r12
	movl 0x20(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_37263
L_37363:
	cmpl $0x0,%r13d
	je L_388132
	cmpl $0x1,%r13d
	je L_388130
L_37364:
	movl %r13d,0x40(%rbp)
	movq $0x3BE5,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq 0x8(%rbp),%r11
	movq %r11,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r13,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_37365+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
L_388130:
L_37380:
	cmpq $0x0,%r14
	jna L_37353
L_37382:
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_37383+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_15
.p2align 0x4
L_388132:
L_37379:
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_37297:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_37298
L_37346:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_37347+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37347
.p2align 0x4
.long 0x451
L_37347:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_37298:
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_388136
L_37299:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq %r11,0x8(%rbp)
	cmpq $0x1,%r13
	je L_388135
L_37300:
	movq 0x8(%r13),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%r13),%r13
	movq $0x1,0x18(%rbp)
	movq %r13,%r15
L_37301:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq (globalObjptr+0xE350)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_37302+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_388135:
L_37344:
	movq 0x0(%rbp),%r15
x_73:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_37317+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3782
.p2align 0x4
L_388136:
L_37345:
	movq $0x1,%r15
	jmp x_73
.p2align 0x4
.long 0x5EF
L_37260:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_37261
L_37290:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_37291+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37291
.p2align 0x4
.long 0x4E9
L_37291:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_37261:
	movq 0x18(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_37263
L_37264:
	movl %r13d,0x38(%rbp)
	movq $0x3BED,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x20,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x10(%rbp),%r13
	movq %r13,0x8(%r14)
	movq %r15,0x10(%r14)
	movq %r14,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_37265+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
.long 0x517
L_37414:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq $0x1,0x18(%rbp)
	jna L_37353
L_37416:
	movq 0x10(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_37417+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_15
.p2align 0x4
.long 0x51A
L_37365:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq %r15,0x38(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x40(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0x48(%rbp)
	movq (globalObjptr+0xD0F8)(%rip),%r15
	movq %r15,0x50(%rbp)
	addq $0x38,%rbp
	leaq (L_37366+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
.long 0x51A
L_37383:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_37384+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4A5
L_37302:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_37303
L_37342:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_37343+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37343
.p2align 0x4
.long 0x637
L_37343:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_37303:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x30(%rbp)
	addq $0x18,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%r13)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_37304:
	addl 0x0(%r15),%ecx
	movl %ecx,0x20(%rbp)
	jo L_388147
L_37305:
	cmpq $0x1,%r14
	je L_388141
L_37306:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_37304
.p2align 0x4
L_388141:
L_37307:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_37308
L_37340:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_37341+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37341
.p2align 0x4
.long 0x75B
L_37341:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_37308:
	movl 0x20(%rbp),%ecx
	testl %ecx,%ecx
	jz L_388145
L_37309:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
L_37310:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x10(%rbp),%r13
	cmpq $0x1,%r13
	je L_388142
L_37311:
	movq %r15,0x18(%rbp)
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movq %r13,0x10(%rbp)
	movq %r14,%r15
	jmp L_37301
.p2align 0x4
L_388142:
L_37312:
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq %r14,0x18(%rbp)
	movq $0x1,0x20(%rbp)
.p2align 0x4,,0x7
L_37313:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_388144
.p2align 0x4,,0x7
L_37314:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_388143
L_37315:
	movq %r15,0x20(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x18(%rbp)
	jmp L_37313
.p2align 0x4
L_388143:
L_37316:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x8(%rbp),%r11
	movq %r11,0x0(%r13)
	movq %r13,%r15
	jmp x_73
.p2align 0x4
L_388144:
L_37337:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_37338+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37338
.p2align 0x4
.long 0x4E9
L_37338:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	jmp L_37314
.p2align 0x4
L_388145:
L_37339:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_37310
.p2align 0x4
L_388147:
L_37270:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_37317:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movl 0x8(%rbp),%r15d
	movl %r15d,0x0(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_37318
L_37335:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_37336+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37336
.p2align 0x4
.long 0x494
L_37336:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_37318:
	movl 0x0(%rbp),%ecx
	testl %ecx,%ecx
	jz L_388150
L_37319:
	decl %ecx
	jo L_37270
L_37320:
	movq $0x1B67,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x8(%rbp),%r14
	movq %r14,0x8(%r15)
paren_12:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x0(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0xD0F8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_37321+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_388150:
L_37334:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp paren_12
.p2align 0x4
.long 0x459
L_37265:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r14
	movq %r14,0x30(%rbp)
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_37266+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp separateRight_0
.p2align 0x4
.long 0x5ED
L_37417:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_37418
L_37449:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_37450+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37450
.p2align 0x4
.long 0x4FC
L_37450:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_37418:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x38(%rbp)
	addq $0x18,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_37419:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_37270
L_37420:
	cmpq $0x1,%r14
	je L_388152
L_37421:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_37419
.p2align 0x4
L_388152:
L_37422:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_37423
L_37447:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_37448+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37448
.p2align 0x4
.long 0x7B5
L_37448:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_37423:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_388153
L_37424:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
L_37425:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_37426+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3782
.p2align 0x4
L_388153:
L_37446:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_37425
.p2align 0x4
.long 0x51A
L_37366:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_37367+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5F1
L_37384:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_37385
L_37394:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_37395+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37395
.p2align 0x4
.long 0x489
L_37395:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_37385:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x40(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_37386:
	addl 0x0(%r15),%ecx
	movl %ecx,0x48(%rbp)
	jo L_37270
L_37387:
	cmpq $0x1,%r14
	je L_388157
L_37388:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_37386
.p2align 0x4
L_388157:
L_37389:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_37390
L_37392:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_37393+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37393
.p2align 0x4
.long 0x5F2
L_37393:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_37390:
	movl 0x48(%rbp),%r15d
	testl %r15d,%r15d
	jz L_388158
L_37391:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_388158:
L_37282:
	movq (globalObjptr+0x9D0)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4AF
L_37321:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_37322+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x459
L_37266:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_37267+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3782
.p2align 0x4
.long 0x1
L_37426:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movl 0x8(%rbp),%r15d
	movl %r15d,0x0(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_37427
L_37444:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_37445+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37445
.p2align 0x4
.long 0x494
L_37445:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_37427:
	movl 0x0(%rbp),%ecx
	testl %ecx,%ecx
	jz L_388163
L_37428:
	decl %ecx
	jo L_37270
L_37429:
	movq $0x1B67,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x8(%rbp),%r14
	movq %r14,0x8(%r15)
paren_13:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x0(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0xD0F8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_37430+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_388163:
L_37443:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp paren_13
.p2align 0x4
.long 0x5F1
L_37367:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_37368
L_37377:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_37378+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37378
.p2align 0x4
.long 0x489
L_37378:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_37368:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x40(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_37369:
	addl 0x0(%r15),%ecx
	movl %ecx,0x48(%rbp)
	jo L_37270
L_37370:
	cmpq $0x1,%r14
	je L_388165
L_37371:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_37369
.p2align 0x4
L_388165:
L_37372:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_37373
L_37375:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_37376+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37376
.p2align 0x4
.long 0x5F2
L_37376:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_37373:
	movl 0x48(%rbp),%r15d
	testl %r15d,%r15d
	jz L_37282
L_37374:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x5AF
L_37322:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_37323
L_37332:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_37333+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37333
.p2align 0x4
.long 0x45B
L_37333:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_37323:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x0(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x18(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_37324:
	addl 0x0(%r15),%ecx
	movl %ecx,0x20(%rbp)
	jo L_37270
L_37325:
	cmpq $0x1,%r14
	je L_388170
L_37326:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_37324
.p2align 0x4
L_388170:
L_37327:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_37328
L_37330:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_37331+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37331
.p2align 0x4
.long 0x49C
L_37331:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_37328:
	movl 0x20(%rbp),%r15d
	testl %r15d,%r15d
	jz L_37282
L_37329:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x459
L_37267:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movl 0x30(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_37268
L_37288:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_37289+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37289
.p2align 0x4
.long 0x600
L_37289:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_37268:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_388176
L_37269:
	decl %ecx
	jo L_37270
L_37271:
	movq $0x1B67,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
L_37272:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x28(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0xA058)(%rip),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_37273+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_388176:
L_37287:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_37272
.p2align 0x4
.long 0x4AF
L_37430:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_37431+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5ED
L_37273:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq (globalObjptr+0xA2F0)(%rip),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_37274+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5AF
L_37431:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_37432
L_37441:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_37442+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37442
.p2align 0x4
.long 0x45B
L_37442:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_37432:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x0(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x18(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_37433:
	addl 0x0(%r15),%ecx
	movl %ecx,0x20(%rbp)
	jo L_37270
L_37434:
	cmpq $0x1,%r14
	je L_388178
L_37435:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_37433
.p2align 0x4
L_388178:
L_37436:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_37437
L_37439:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_37440+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37440
.p2align 0x4
.long 0x49C
L_37440:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_37437:
	movl 0x20(%rbp),%r15d
	testl %r15d,%r15d
	jz L_37282
L_37438:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x6FF
L_37274:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_37275
L_37285:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_37286+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37286
.p2align 0x4
.long 0x5EE
L_37286:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_37275:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x40(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x20(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_37276:
	addl 0x0(%r15),%ecx
	movl %ecx,0x48(%rbp)
	jo L_37270
L_37277:
	cmpq $0x1,%r14
	je L_388183
L_37278:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_37276
.p2align 0x4
L_388183:
L_37279:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_37280
L_37283:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_37284+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37284
.p2align 0x4
.long 0x5F2
L_37284:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_37280:
	movl 0x48(%rbp),%r15d
	testl %r15d,%r15d
	jz L_37282
L_37281:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl x_1245
.hidden x_1245
x_1245:
L_37454:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_37455
L_37570:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_37571+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37571
.p2align 0x4
.long 0x45B
L_37571:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_37455:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_37456+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5EF
L_37456:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_37457
L_37568:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_37569+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37569
.p2align 0x4
.long 0x4E9
L_37569:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_37457:
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1297,%r15
	je L_388189
L_37496:
	movq 0x0(%r14),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xAEC8)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_37497+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_388189:
L_37458:
	movq 0x0(%r14),%r15
	movq %r15,0x18(%rbp)
	cmpq $0x1,%r15
	je L_388190
L_37459:
	movq (globalObjptr+0xDF68)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_37460+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_388190:
L_37495:
	movq $0x1,%r15
	xorl %ecx,%ecx
L_37470:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x10(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_37471:
	addl 0x0(%r14),%ecx
	movl %ecx,0x18(%rbp)
	jo L_37464
L_37472:
	cmpq $0x1,%r15
	je L_388191
L_37473:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_37471
.p2align 0x4
L_388191:
L_37474:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_37475
L_37488:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_37489+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37489
.p2align 0x4
.long 0x49B
L_37489:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_37475:
	movl 0x18(%rbp),%ecx
	testl %ecx,%ecx
	jz L_388196
L_37476:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
L_37477:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x10(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_37478:
	addl 0x0(%r14),%ecx
	movl %ecx,0x18(%rbp)
	jo L_388195
L_37479:
	cmpq $0x1,%r15
	je L_388192
L_37480:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_37478
.p2align 0x4
L_388192:
L_37481:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_37482
L_37485:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_37486+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37486
.p2align 0x4
.long 0x4A4
L_37486:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_37482:
	movl 0x18(%rbp),%r15d
	testl %r15d,%r15d
	jz L_388193
L_37483:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r14,0x0(%rbp)
	movl %r15d,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_388193:
L_37484:
	movq $0x1,0x0(%rbp)
	movl $0x0,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_388195:
L_37464:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_388196:
L_37487:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_37477
.p2align 0x4
.long 0x517
L_37497:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_37498
L_37566:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_37567+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37567
.p2align 0x4
.long 0x4E9
L_37567:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_37498:
	movq 0x10(%rbp),%r14
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r11
	movq %r11,0x28(%rbp)
	cmpq $0x1,%r13
	je L_388200
L_37499:
	movq 0x8(%r13),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%r13),%r13
	movq $0x1,0x30(%rbp)
	movq %r13,%r15
L_37500:
	movq 0x8(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_37501+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_388200:
L_37565:
	movq $0x1,%r15
	xorl %ecx,%ecx
L_37527:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x10(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq 0x28(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_37528+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4A5
L_37460:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_37461+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_15
.p2align 0x4
.long 0x4EC
L_37501:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_37502
L_37563:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_37564+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37564
.p2align 0x4
.long 0x4EB
L_37564:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_37502:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_388202
L_37503:
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	jmp L_37500
.p2align 0x4
L_388202:
L_37504:
	movq 0x30(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq $0x1,0x38(%rbp)
.p2align 0x4,,0x7
L_37505:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_388204
.p2align 0x4,,0x7
L_37506:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_388203
L_37507:
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x30(%rbp)
	jmp L_37505
.p2align 0x4
L_388203:
L_37508:
	movq (globalObjptr+0xA050)(%rip),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_37509+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_388204:
L_37561:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_37562+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37562
.p2align 0x4
.long 0x4EB
L_37562:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_37506
.p2align 0x4
.long 0x4A5
L_37528:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_37529
L_37549:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_37550+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37550
.p2align 0x4
.long 0x637
L_37550:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_37529:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x30(%rbp)
	addq $0x18,%r12
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_37530:
	addl 0x0(%r15),%ecx
	movl %ecx,0x10(%rbp)
	jo L_37464
L_37531:
	cmpq $0x1,%r14
	je L_388206
L_37532:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_37530
.p2align 0x4
L_388206:
L_37533:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_37534
L_37547:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_37548+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37548
.p2align 0x4
.long 0x991
L_37548:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_37534:
	movl 0x10(%rbp),%ecx
	testl %ecx,%ecx
	jz L_388211
L_37535:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
L_37536:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x10(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_37537:
	addl 0x0(%r14),%ecx
	movl %ecx,0x18(%rbp)
	jo L_37464
L_37538:
	cmpq $0x1,%r15
	je L_388207
L_37539:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_37537
.p2align 0x4
L_388207:
L_37540:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_37541
L_37544:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_37545+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37545
.p2align 0x4
.long 0x63A
L_37545:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_37541:
	movl 0x18(%rbp),%ecx
	testl %ecx,%ecx
	jz L_388208
L_37542:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_37470
.p2align 0x4
L_388208:
L_37543:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_37470
.p2align 0x4
L_388211:
L_37546:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_37536
.p2align 0x4
.long 0x638
L_37461:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_37462
L_37493:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_37494+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37494
.p2align 0x4
.long 0x518
L_37494:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_37462:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x18(%rbp)
	addq $0x18,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_37463:
	addl 0x0(%r15),%ecx
	movl %ecx,0x10(%rbp)
	jo L_37464
L_37465:
	cmpq $0x1,%r14
	je L_388215
L_37466:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_37463
.p2align 0x4
L_388215:
L_37467:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_37468
L_37491:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_37492+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37492
.p2align 0x4
.long 0x72F
L_37492:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_37468:
	movl 0x10(%rbp),%ecx
	testl %ecx,%ecx
	jz L_388216
L_37469:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_37470
.p2align 0x4
L_388216:
L_37490:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_37470
.p2align 0x4
.long 0x836
L_37509:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x38(%rbp),%r14
	movq %r14,0x40(%rbp)
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_37510+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3787
.p2align 0x4
.long 0x990
L_37510:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_37511
L_37559:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_37560+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37560
.p2align 0x4
.long 0x4F0
L_37560:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_37511:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x38(%rbp)
	addq $0x18,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x0(%r13)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_37512:
	addl 0x0(%r15),%ecx
	movl %ecx,0x10(%rbp)
	jo L_37464
L_37513:
	cmpq $0x1,%r14
	je L_388220
L_37514:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_37512
.p2align 0x4
L_388220:
L_37515:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_37516
L_37557:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_37558+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37558
.p2align 0x4
.long 0x50F
L_37558:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_37516:
	movl 0x10(%rbp),%ecx
	testl %ecx,%ecx
	jz L_388221
L_37517:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
L_37518:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x10(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0xA050)(%rip),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_37519+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_388221:
L_37556:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_37518
.p2align 0x4
.long 0x4E3
L_37519:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_37520
L_37554:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_37555+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37555
.p2align 0x4
.long 0x4F0
L_37555:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_37520:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x38(%rbp)
	addq $0x18,%r12
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_37521:
	addl 0x0(%r15),%ecx
	movl %ecx,0x10(%rbp)
	jo L_37464
L_37522:
	cmpq $0x1,%r14
	je L_388225
L_37523:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_37521
.p2align 0x4
L_388225:
L_37524:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_37525
L_37552:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_37553+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37553
.p2align 0x4
.long 0x50F
L_37553:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_37525:
	movl 0x10(%rbp),%ecx
	testl %ecx,%ecx
	jz L_388226
L_37526:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_37527
.p2align 0x4
L_388226:
L_37551:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_37527
.text
.p2align 0x4
.globl layout_29
.hidden layout_29
layout_29:
L_37572:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_37573
L_37788:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_37789+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37789
.p2align 0x4
.long 0x45B
L_37789:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_37573:
	movq 0x10(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x30(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movl %r15d,%r14d
	movslq %r14d,%r11
	cmpq %r15,%r11
	jne L_37575
L_37576:
	decl %r14d
	jo L_388235
L_37578:
	movl %r14d,0x38(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
loop_510:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_388234
.p2align 0x4,,0x7
L_37579:
	movl 0x38(%rbp),%r15d
	cmpl $0x0,%r15d
	jl L_388230
L_37580:
	movl %r15d,%r14d
	decl %r14d
	movslq %r15d,%r13
	movl %r14d,0x38(%rbp)
	movq 0x30(%rbp),%r15
	movq 0x0(%r15,%r13,8),%r14
	movq $0x2705,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x10(%rbp)
	jmp loop_510
.p2align 0x4
L_388230:
L_37581:
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_388231
L_37582:
	movq 0x8(%r14),%r13
	movq %r13,0x30(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x38(%rbp)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r14)
	movq (globalObjptr+0x13C8)(%rip),%r13
	movq %r13,0x8(%r14)
	movq %r14,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_37583+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_388231:
L_37785:
	movq $0x1,%r13
	xorl %ecx,%ecx
	movq %r13,%r15
L_37679:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x30(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq 0x28(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r10,%r13
	jne L_388233
L_37681:
	testl %r11d,%r11d
	jz L_388232
L_37682:
	movq (globalObjptr+0xE640)(%rip),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_37683+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_388232:
L_37705:
	movq $0x1,%r15
	xorl %ecx,%ecx
L_37692:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_37693+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3782
.p2align 0x4
L_388233:
L_37575:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_388234:
L_37786:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_37787+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37787
.p2align 0x4
.long 0x73D
L_37787:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_37579
.p2align 0x4
L_388235:
L_37577:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x5F0
L_37583:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_37584+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x6FF
L_37683:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_37684+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_30
.p2align 0x4
.long 0x1
L_37693:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movl 0x8(%rbp),%r15d
	movl %r15d,0x0(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_37694
L_37698:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_37699+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37699
.p2align 0x4
.long 0x494
L_37699:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_37694:
	movl 0x0(%rbp),%r15d
	testl %r15d,%r15d
	jz L_388239
L_37695:
	decl %r15d
	jo L_37577
L_37696:
	movq $0x1B67,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movl $0x1,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x8(%rbp),%r13
	movq %r13,0x8(%r14)
	movq %r14,0x0(%rbp)
	movl %r15d,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_388239:
L_37697:
	movq $0x1,0x0(%rbp)
	movl $0x0,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x5F0
L_37584:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x38(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_37585+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x7BF
L_37684:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	movl 0x50(%rbp),%r15d
	movl %r15d,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_37685
L_37703:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_37704+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37704
.p2align 0x4
.long 0x99C
L_37704:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_37685:
	movq $0xC3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x48(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x50(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x38(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_37686:
	addl 0x0(%r15),%ecx
	movl %ecx,0x38(%rbp)
	jo L_37577
L_37687:
	cmpq $0x1,%r14
	je L_388241
L_37688:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_37686
.p2align 0x4
L_388241:
L_37689:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_37690
L_37701:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_37702+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37702
.p2align 0x4
.long 0x99B
L_37702:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_37690:
	movl 0x38(%rbp),%ecx
	testl %ecx,%ecx
	jz L_388242
L_37691:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_37692
.p2align 0x4
L_388242:
L_37700:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_37692
.p2align 0x4
.long 0x992
L_37585:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_37586
L_37783:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_37784+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37784
.p2align 0x4
.long 0x9A6
L_37784:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_37586:
	movq 0x48(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_37575
L_37588:
	cmpl $0x0,%r13d
	je L_388248
	cmpl $0x1,%r13d
	je L_388246
L_37589:
	movl %r13d,0x68(%rbp)
	movq $0x3BE3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq %r15,0x0(%r13)
	movq %r13,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_37590+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
L_388246:
L_37767:
	cmpq $0x0,%r14
	jna L_388247
L_37769:
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_37770+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_388247:
L_37731:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_388248:
L_37600:
	movq 0x50(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_37575
L_37602:
	movl %r13d,0x58(%rbp)
	movq $0x3BF1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_37603+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
.long 0x993
L_37590:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq %r15,0x60(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x68(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0x70(%rbp)
	movq (globalObjptr+0xD0F8)(%rip),%r15
	movq %r15,0x78(%rbp)
	addq $0x60,%rbp
	leaq (L_37591+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
.long 0x993
L_37770:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_37771+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4AA
L_37603:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq (globalObjptr+0xDF80)(%rip),%r14
	movq %r14,0x50(%rbp)
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_37604+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp alignPrefix_0
.p2align 0x4
.long 0x993
L_37591:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_37592+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x8BC
L_37771:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_37772
L_37781:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_37782+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37782
.p2align 0x4
.long 0x8C0
L_37782:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_37772:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x58(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x60(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x48(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_37773:
	addl 0x0(%r15),%ecx
	movl %ecx,0x38(%rbp)
	jo L_37577
L_37774:
	cmpq $0x1,%r14
	je L_388252
L_37775:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_37773
.p2align 0x4
L_388252:
L_37776:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_37777
L_37779:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_37780+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37780
.p2align 0x4
.long 0x9A5
L_37780:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_37777:
	movl 0x38(%rbp),%r15d
	testl %r15d,%r15d
	jz L_388253
L_37778:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x60(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,0x38(%rbp)
	jmp L_37600
.p2align 0x4
L_388253:
L_37761:
	movq (globalObjptr+0x9D0)(%rip),%r15
	movq %r15,0x38(%rbp)
	jmp L_37600
.p2align 0x4
.long 0x4AA
L_37604:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	movl 0x58(%rbp),%r15d
	movl %r15d,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_37605
L_37759:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_37760+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37760
.p2align 0x4
.long 0x9A4
L_37760:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_37605:
	movq $0xC3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x58(%rbp)
	addq $0x18,%r12
	movl 0x50(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_37606+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x8BC
L_37592:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_37593
L_37764:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_37765+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37765
.p2align 0x4
.long 0x8C0
L_37765:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_37593:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x58(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x60(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x48(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_37594:
	addl 0x0(%r15),%ecx
	movl %ecx,0x38(%rbp)
	jo L_37577
L_37595:
	cmpq $0x1,%r14
	je L_388258
L_37596:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_37594
.p2align 0x4
L_388258:
L_37597:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_37598
L_37762:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_37763+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37763
.p2align 0x4
.long 0x9A5
L_37763:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_37598:
	movl 0x38(%rbp),%r15d
	testl %r15d,%r15d
	jz L_37761
L_37599:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x60(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,0x38(%rbp)
	jmp L_37600
.p2align 0x4
.long 0x994
L_37606:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq (globalObjptr+0xCD40)(%rip),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_37607+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x995
L_37607:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_37608
L_37757:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_37758+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37758
.p2align 0x4
.long 0x8C0
L_37758:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_37608:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x60(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x40(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_37609:
	addl 0x0(%r15),%ecx
	movl %ecx,0x38(%rbp)
	jo L_37577
L_37610:
	cmpq $0x1,%r14
	je L_388263
L_37611:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_37609
.p2align 0x4
L_388263:
L_37612:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_37613
L_37755:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_37756+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37756
.p2align 0x4
.long 0x9A3
L_37756:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_37613:
	movl 0x38(%rbp),%ecx
	testl %ecx,%ecx
	jz L_388264
L_37614:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
L_37615:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x38(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x40(%rbp)
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_37616+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_388264:
L_37754:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_37615
.p2align 0x4
.long 0x4AA
L_37616:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_37617
L_37752:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_37753+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37753
.p2align 0x4
.long 0x4AD
L_37753:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_37617:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x40(%rbp),%r13
	movq %r13,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x50(%rbp)
	addq $0x18,%r12
	movq 0x38(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_37618:
	addl 0x0(%r15),%ecx
	movl %ecx,0x38(%rbp)
	jo L_37577
L_37619:
	cmpq $0x1,%r14
	je L_388268
L_37620:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_37618
.p2align 0x4
L_388268:
L_37621:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_37622
L_37750:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_37751+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37751
.p2align 0x4
.long 0x9A2
L_37751:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_37622:
	movl 0x38(%rbp),%ecx
	testl %ecx,%ecx
	jz L_388270
L_37623:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
L_37624:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x38(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq 0x30(%rbp),%r15
	cmpq $0x1,%r15
	je L_388269
L_37625:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x30(%rbp)
	movq %r14,0x40(%rbp)
	movq $0x1,0x48(%rbp)
L_37626:
	movq (globalObjptr+0xE2C0)(%rip),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_37627+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_388269:
L_37748:
	movq $0x1,%r14
	xchgq %r14,%r15
L_37674:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x38(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_37675+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3782
.p2align 0x4
L_388270:
L_37749:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_37624
.p2align 0x4
.long 0x911
L_37627:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x40(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_37628+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5ED
L_37675:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movl 0x38(%rbp),%r15d
	movl %r15d,0x30(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_37676
L_37707:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_37708+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37708
.p2align 0x4
.long 0x815
L_37708:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_37676:
	movl 0x30(%rbp),%ecx
	testl %ecx,%ecx
	jz L_388275
L_37677:
	decl %ecx
	jo L_37577
L_37678:
	movq $0x1B67,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl $0x1,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_37679
.p2align 0x4
L_388275:
L_37706:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_37679
.p2align 0x4
.long 0x996
L_37628:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_37629
L_37746:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_37747+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37747
.p2align 0x4
.long 0x91D
L_37747:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_37629:
	movq 0x58(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_37575
L_37631:
	cmpl $0x0,%r13d
	je L_388279
	cmpl $0x1,%r13d
	je L_388277
L_37632:
	movl %r13d,0x78(%rbp)
	movq $0x3BE3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq %r15,0x0(%r13)
	movq %r13,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_37633+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
L_388277:
L_37729:
	cmpq $0x0,%r14
	jna L_37731
L_37732:
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_37733+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_388279:
L_37643:
	movq 0x60(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_37575
L_37645:
	movl %r13d,0x68(%rbp)
	movq $0x3BF1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_37646+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
.long 0x997
L_37633:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq %r15,0x70(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x78(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0x80(%rbp)
	movq (globalObjptr+0xD0F8)(%rip),%r15
	movq %r15,0x88(%rbp)
	addq $0x70,%rbp
	leaq (L_37634+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
.long 0x997
L_37733:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_37734+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x8BC
L_37646:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq (globalObjptr+0xDF80)(%rip),%r14
	movq %r14,0x60(%rbp)
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_37647+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp alignPrefix_0
.p2align 0x4
.long 0x997
L_37634:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_37635+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x998
L_37734:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_37735
L_37744:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_37745+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37745
.p2align 0x4
.long 0x99F
L_37745:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_37735:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x68(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x70(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x58(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_37736:
	addl 0x0(%r15),%ecx
	movl %ecx,0x40(%rbp)
	jo L_37577
L_37737:
	cmpq $0x1,%r14
	je L_388283
L_37738:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_37736
.p2align 0x4
L_388283:
L_37739:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_37740
L_37742:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_37743+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37743
.p2align 0x4
.long 0x9A1
L_37743:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_37740:
	movl 0x40(%rbp),%r15d
	testl %r15d,%r15d
	jz L_388284
L_37741:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x70(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,0x40(%rbp)
	jmp L_37643
.p2align 0x4
L_388284:
L_37723:
	movq (globalObjptr+0x9D0)(%rip),%r15
	movq %r15,0x40(%rbp)
	jmp L_37643
.p2align 0x4
.long 0x8BC
L_37647:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	movl 0x68(%rbp),%r15d
	movl %r15d,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_37648
L_37721:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_37722+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37722
.p2align 0x4
.long 0x9A0
L_37722:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_37648:
	movq $0xC3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x68(%rbp)
	addq $0x18,%r12
	movl 0x60(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_37649+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x998
L_37635:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_37636
L_37726:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_37727+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37727
.p2align 0x4
.long 0x99F
L_37727:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_37636:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x68(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x70(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x58(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_37637:
	addl 0x0(%r15),%ecx
	movl %ecx,0x40(%rbp)
	jo L_37577
L_37638:
	cmpq $0x1,%r14
	je L_388289
L_37639:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_37637
.p2align 0x4
L_388289:
L_37640:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_37641
L_37724:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_37725+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37725
.p2align 0x4
.long 0x9A1
L_37725:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_37641:
	movl 0x40(%rbp),%r15d
	testl %r15d,%r15d
	jz L_37723
L_37642:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x70(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,0x40(%rbp)
	jmp L_37643
.p2align 0x4
.long 0x999
L_37649:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq (globalObjptr+0xCD40)(%rip),%r15
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_37650+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x99A
L_37650:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_37651
L_37719:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_37720+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37720
.p2align 0x4
.long 0x99F
L_37720:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_37651:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x60(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x58(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x70(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x50(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_37652:
	addl 0x0(%r15),%ecx
	movl %ecx,0x40(%rbp)
	jo L_37577
L_37653:
	cmpq $0x1,%r14
	je L_388294
L_37654:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_37652
.p2align 0x4
L_388294:
L_37655:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_37656
L_37717:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_37718+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37718
.p2align 0x4
.long 0x99E
L_37718:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_37656:
	movl 0x40(%rbp),%ecx
	testl %ecx,%ecx
	jz L_388295
L_37657:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
L_37658:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x40(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x50(%rbp)
	addq $0x18,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_37659+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_388295:
L_37716:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_37658
.p2align 0x4
.long 0x8BC
L_37659:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_37660
L_37714:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_37715+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37715
.p2align 0x4
.long 0x8C0
L_37715:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_37660:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x58(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x50(%rbp),%r13
	movq %r13,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x60(%rbp)
	addq $0x18,%r12
	movq 0x40(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_37661:
	addl 0x0(%r15),%ecx
	movl %ecx,0x40(%rbp)
	jo L_37577
L_37662:
	cmpq $0x1,%r14
	je L_388299
L_37663:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_37661
.p2align 0x4
L_388299:
L_37664:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_37665
L_37712:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_37713+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37713
.p2align 0x4
.long 0x99D
L_37713:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_37665:
	movl 0x40(%rbp),%ecx
	testl %ecx,%ecx
	jz L_388303
L_37666:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
L_37667:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x30(%rbp),%r13
	cmpq $0x1,%r13
	je L_388300
L_37668:
	movq %r15,0x48(%rbp)
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movq %r13,0x30(%rbp)
	movq %r14,0x40(%rbp)
	jmp L_37626
.p2align 0x4
L_388300:
L_37669:
	movq %r14,0x40(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq $0x1,0x48(%rbp)
.p2align 0x4,,0x7
L_37670:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_388302
.p2align 0x4,,0x7
L_37671:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_37674
L_37672:
	movq %r15,0x48(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	movq %r15,0x40(%rbp)
	jmp L_37670
.p2align 0x4
L_388302:
L_37709:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_37710+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_37710
.p2align 0x4
.long 0x4B5
L_37710:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	jmp L_37671
.p2align 0x4
L_388303:
L_37711:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_37667
