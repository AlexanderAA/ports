/* MLton 20130715 (built Mon Jun 13 11:54:01 AEST 2016 on ports.extensibl.com) */
/*   created this file on Mon Jun 13 12:10:11 2016. */
/* Do not edit this file. */
/* Flag settings:  */
/*    align: 8 */
/*    atMLtons: (mlton-compile, @MLton, --) */
/*    chunk: chunk per function */
/*    closureConvertGlobalize: true */
/*    closureConvertShrink: true */
/*    codegen: amd64 */
/*    contifyIntoMain: false */
/*    debug: false */
/*    defaultChar: char8 */
/*    defaultWideChar: widechar32 */
/*    defaultInt: int32 */
/*    defaultReal: real64 */
/*    defaultWord: word32 */
/*    diag passes: [] */
/*    drop passes: [] */
/*    elaborate allowConstant (default): false */
/*    elaborate allowConstant (enabled): true */
/*    elaborate allowFFI (default): false */
/*    elaborate allowFFI (enabled): true */
/*    elaborate allowPrim (default): false */
/*    elaborate allowPrim (enabled): true */
/*    elaborate allowOverload (default): false */
/*    elaborate allowOverload (enabled): true */
/*    elaborate allowRebindEquals (default): false */
/*    elaborate allowRebindEquals (enabled): true */
/*    elaborate deadCode (default): false */
/*    elaborate deadCode (enabled): true */
/*    elaborate forceUsed (default): false */
/*    elaborate forceUsed (enabled): true */
/*    elaborate ffiStr (default):  */
/*    elaborate ffiStr (enabled): true */
/*    elaborate nonexhaustiveExnMatch (default): default */
/*    elaborate nonexhaustiveExnMatch (enabled): true */
/*    elaborate nonexhaustiveMatch (default): warn */
/*    elaborate nonexhaustiveMatch (enabled): true */
/*    elaborate redundantMatch (default): warn */
/*    elaborate redundantMatch (enabled): true */
/*    elaborate resolveScope (default): strdec */
/*    elaborate resolveScope (enabled): true */
/*    elaborate sequenceNonUnit (default): warn */
/*    elaborate sequenceNonUnit (enabled): true */
/*    elaborate warnUnused (default): true */
/*    elaborate warnUnused (enabled): true */
/*    elaborate only: false */
/*    emit main: true */
/*    export header: None */
/*    exn history: false */
/*    generated output format: executable */
/*    gc check: Limit */
/*    indentation: 3 */
/*    inlineIntoMain: true */
/*    inlineLeafA: {loops = true, repeat = true, size = Some 20} */
/*    inlineLeafB: {loops = true, repeat = true, size = Some 40} */
/*    inlineNonRec: {small = 60, product = 320} */
/*    input file: mlton */
/*    keep CoreML: false */
/*    keep def use: true */
/*    keep dot: false */
/*    keep Machine: false */
/*    keep passes: [] */
/*    keep RSSA: false */
/*    keep SSA: false */
/*    keep SSA2: false */
/*    keep SXML: false */
/*    keep XML: false */
/*    extra_: false */
/*    lib dir: /usr/ports/pobj/mlton-20130715/mlton-on-20130715-release/build/lib */
/*    lib target dir: /usr/ports/pobj/mlton-20130715/mlton-on-20130715-release/build/lib/targets/self */
/*    loop passes: 1 */
/*    mark cards: true */
/*    max function size: 10000 */
/*    mlb path vars: [{var = MLTON_ROOT, path = $(LIB_MLTON_DIR)/sml}, {var = SML_LIB, path = $(LIB_MLTON_DIR)/sml}] */
/*    native commented: 0 */
/*    native live stack: false */
/*    native optimize: 1 */
/*    native move hoist: true */
/*    native copy prop: true */
/*    native copy prop cutoff: 1000 */
/*    native cutoff: 100 */
/*    native live transfer: 8 */
/*    native shuffle: true */
/*    native ieee fp: false */
/*    native split: Some 20000 */
/*    optimizationPasses: [<ssa2::default>, <ssa::default>, <sxml::default>, <xml::default>] */
/*    polyvariance: Some {hofo = true, rounds = 2, small = 30, product = 300} */
/*    prefer abs paths: false */
/*    prof passes: [] */
/*    profile: None */
/*    profile branch: false */
/*    profile C: [] */
/*    profile IL: ProfileSource */
/*    profile include/exclude: [(Seq [Star [.], Or [Seq [Seq [[$], [(], [S], [M], [L], [_], [L], [I], [B], [)]]]], Star [.]], false)] */
/*    profile raise: false */
/*    profile stack: false */
/*    profile val: false */
/*    show basis: None */
/*    show def-use: None */
/*    show types: true */
/*    target: self */
/*    target arch: AMD64 */
/*    target OS: OpenBSD */
/*    type check: false */
/*    verbosity: Pass */
/*    warn unrecognized annotation: true */
/*    warn deprecated features: true */
/*    zone cut depth: 100 */
.text
.p2align 0x4
.globl loop_3948
.hidden loop_3948
loop_3948:
L_250515:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_250516
L_250523:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_250524+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250524
.p2align 0x4
.long 0x45F
L_250524:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_250516:
	movq 0x0(%rbp),%r15
	cmpq $0x1,%r15
	je L_482690
L_250517:
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_250518+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3948
.p2align 0x4
L_482690:
L_250522:
	movq $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4E5
L_250518:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_250519
L_250520:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_250521+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250521
.p2align 0x4
.long 0x4E7
L_250521:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_250519:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl checkScheme_0
.hidden checkScheme_0
checkScheme_0:
L_250525:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_250594
L_250526:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_482707
L_250527:
	movq 0x8(%rbp),%r15
	movq 0x40(%r15),%r14
	movq 0x38(%r15),%r13
	movq %r13,0x10(%rbp)
	movq 0x30(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x28(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x18(%r15),%r13
	movq %r13,0x28(%rbp)
	movq 0x48(%r15),%r13
	movq 0x8(%r13),%r11
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0x1051,%r15
	je L_482706
	cmpq $0x1052,%r15
	je L_482699
L_250528:
	movq 0x0(%r11),%r15
	movq %r15,0x8(%rbp)
	movq 0x10(%r14),%r15
	movq %r15,0x30(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x40(%rbp)
	movq 0x18(%r14),%r15
	movq 0x0(%r15),%r13
	movq %r13,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	jne L_482698
L_250530:
	shrq $0x1,%r13
	movl %r13d,%r15d
	movslq %r15d,%r14
	movq %r14,0x48(%rbp)
	testq %r14,%r14
	jz L_482697
L_250531:
	cmpq $0x7FFFFFFF,%r14
	ja L_482696
L_250532:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_250533
L_250558:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_250559+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250559
.p2align 0x4
.long 0xFBA
L_250559:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_250533:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1497,%rcx
	movq 0x48(%rbp),%rdx
	movq $0x18,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_250534+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250534
.p2align 0x4
.long 0xFBA
L_250534:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq %rax,0x50(%rbp)
L_250535:
	movq $0x0,0x58(%rbp)
loop_2914:
	movq 0x48(%rbp),%r15
	cmpq %r15,0x58(%rbp)
	jl L_482694
L_250536:
	movq 0x50(%rbp),%r15
	movq $0x59,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x30(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_482693
L_250539:
	movq $0x3ED3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x38(%rbp),%r11
	movq %r11,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x60(%rbp)
	movl %r13d,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_250540+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_1
.p2align 0x4
L_482693:
L_250538:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_482694:
L_250548:
	movq 0x30(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x68(%rbp)
	movq (globalObjptr+0xD330)(%rip),%r15
	movq %r15,0x78(%rbp)
	movq (globalObjptr+0xD338)(%rip),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_250549+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_482696:
L_250561:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_482697:
L_250562:
	movq (globalObjptr+0x4DD0)(%rip),%r15
	movq %r15,0x50(%rbp)
	jmp L_250535
.p2align 0x4
L_482698:
L_250529:
	movq (globalObjptr+0x4DC8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_482699:
L_250564:
	movq 0x8(%r11),%r15
	movq %r15,0x8(%rbp)
	movq 0x10(%r14),%r15
	movq %r15,0x30(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x40(%rbp)
	movq 0x18(%r14),%r15
	movq 0x0(%r15),%r13
	movq %r13,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	jne L_250529
L_250565:
	shrq $0x1,%r13
	movl %r13d,%r15d
	movslq %r15d,%r14
	movq %r14,0x48(%rbp)
	testq %r14,%r14
	jz L_482704
L_250566:
	cmpq $0x7FFFFFFF,%r14
	ja L_250561
L_250567:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_250568
L_250590:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_250591+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250591
.p2align 0x4
.long 0xFBA
L_250591:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_250568:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1497,%rcx
	movq 0x48(%rbp),%rdx
	movq $0x18,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_250569+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250569
.p2align 0x4
.long 0xFBA
L_250569:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq %rax,0x50(%rbp)
L_250570:
	movq $0x0,0x58(%rbp)
loop_2915:
	movq 0x48(%rbp),%r15
	cmpq %r15,0x58(%rbp)
	jl L_482701
L_250571:
	movq 0x50(%rbp),%r15
	movq $0x59,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x30(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_250538
L_250573:
	movq $0x3ED3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x38(%rbp),%r11
	movq %r11,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x60(%rbp)
	movl %r13d,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_250574+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_1
.p2align 0x4
L_482701:
L_250581:
	movq 0x30(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x68(%rbp)
	movq (globalObjptr+0xD330)(%rip),%r15
	movq %r15,0x78(%rbp)
	movq (globalObjptr+0xD338)(%rip),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_250582+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_482704:
L_250593:
	movq (globalObjptr+0x4DD0)(%rip),%r15
	movq %r15,0x50(%rbp)
	jmp L_250570
.p2align 0x4
L_482706:
L_250563:
	movq 0x0(%r11),%r15
L_250544:
	movq $0x2A61,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x18(%rbp),%r13
	movq %r13,0x8(%r14)
	movq %r14,0x8(%rbp)
	movq (globalObjptr+0xA448)(%rip),%r14
	movq %r14,0x10(%rbp)
	movq (globalObjptr+0xA440)(%rip),%r14
	movq %r14,0x18(%rbp)
	movq 0x28(%rbp),%r14
	movq %r14,0x30(%rbp)
	movq %r15,0x28(%rbp)
	movq 0x20(%rbp),%r15
	movq 0x0(%rbp),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x0(%rbp)
	jmp equalSchemes_0
.p2align 0x4
L_482707:
L_250594:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_250595+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250595
.p2align 0x4
.long 0x45F
L_250595:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_250527
.p2align 0x4
.long 0x3E2A
L_250540:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq %r15,0x60(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x60,%rbp
	leaq (L_250541+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp con_2
.p2align 0x4
.long 0x3E2D
L_250549:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq (globalObjptr+0x570)(%rip),%r15
	movl 0x0(%r15),%r14d
	movl %r14d,%r13d
	incl %r14d
	jo L_482709
L_250551:
	movl %r14d,0x0(%r15)
	movl %r13d,0x80(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_250552+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_482709:
L_250550:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3E2A
L_250574:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq %r15,0x60(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x60,%rbp
	leaq (L_250575+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp con_2
.p2align 0x4
.long 0x3E2D
L_250582:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq (globalObjptr+0x570)(%rip),%r15
	movl 0x0(%r15),%r14d
	movl %r14d,%r13d
	incl %r14d
	jo L_250550
L_250583:
	movl %r14d,0x0(%r15)
	movl %r13d,0x80(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_250584+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0x3E2B
L_250541:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_250542
L_250546:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_250547+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250547
.p2align 0x4
.long 0x3E2C
L_250547:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_250542:
	movl 0x30(%rbp),%r15d
	testl %r15d,%r15d
	jz L_482711
L_250543:
	movq $0x47BD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1D01,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x30,%r12
	movl $0x1,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq $0x1,0x10(%r13)
	movq 0x8(%rbp),%r11
	movq %r11,0x18(%r13)
	movq %r14,0x20(%r13)
	movq %r13,%r15
	jmp L_250544
.p2align 0x4
L_482711:
L_250545:
	movq $0x1CFF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_250544
.p2align 0x4
.long 0x3E2E
L_250552:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq %r15,0x78(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_250553+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x3E2B
L_250575:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_250576
L_250579:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_250580+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250580
.p2align 0x4
.long 0x3E2C
L_250580:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_250576:
	movl 0x30(%rbp),%r15d
	testl %r15d,%r15d
	jz L_482713
L_250577:
	movq $0x47BD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1D01,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x30,%r12
	movl $0x1,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq $0x1,0x10(%r13)
	movq 0x8(%rbp),%r11
	movq %r11,0x18(%r13)
	movq %r14,0x20(%r13)
	movq %r13,%r15
	jmp L_250544
.p2align 0x4
L_482713:
L_250578:
	movq $0x1CFF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_250544
.p2align 0x4
.long 0x3E2E
L_250584:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq %r15,0x78(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_250585+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x3E2F
L_250553:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_250554+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x3E2F
L_250585:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_250586+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x3E30
L_250554:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movl 0x70(%rbp),%r15d
	movl %r15d,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_250555
L_250556:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_250557+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250557
.p2align 0x4
.long 0x3E31
L_250557:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_250555:
	movq $0x13,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x8BD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x20,%r12
	movl 0x68(%rbp),%r15d
	movl %r15d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x60(%rbp),%r15
	movq %r15,0x10(%r14)
	movq $0x8BF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq $0x1,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x58(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x58(%rbp)
	jmp loop_2914
.p2align 0x4
.long 0x3E30
L_250586:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movl 0x70(%rbp),%r15d
	movl %r15d,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_250587
L_250588:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_250589+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250589
.p2align 0x4
.long 0x3E31
L_250589:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_250587:
	movq $0x13,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x8BD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x20,%r12
	movl 0x68(%rbp),%r15d
	movl %r15d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x60(%rbp),%r15
	movq %r15,0x10(%r14)
	movq $0x8BF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq $0x1,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x58(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x58(%rbp)
	jmp loop_2915
.text
.p2align 0x4
.globl equalSchemes_0
.hidden equalSchemes_0
equalSchemes_0:
L_250596:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_250761
L_250597:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_482721
L_250598:
	movq 0x30(%rbp),%r14
	movq 0x30(%r14),%r13
	movq %r13,0x38(%rbp)
	movq 0x28(%r14),%r13
	movq %r13,0x40(%rbp)
	movq 0x20(%r14),%r13
	movq %r13,0x48(%rbp)
	movq 0x18(%r14),%r13
	movq %r13,0x50(%rbp)
	movq 0x10(%r14),%r13
	movq %r13,0x58(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x60(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x68(%rbp)
	movq 0x20(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xE7F,%r15
	je L_482720
L_250751:
	movq 0x8(%r14),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x23DD,%r15
	je L_482719
L_250760:
	movq 0x0(%r13),%r13
	movq %r13,%r15
L_250755:
	movq 0x20(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xE7F,%r13
	je L_482718
L_250757:
	movq %r15,0x30(%rbp)
	movq 0x18(%r14),%r14
	movq %r14,0x20(%rbp)
L_250600:
	movq 0x30(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x70(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r14
	je L_482717
L_250601:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_482717:
L_250602:
	movq $0x3EB3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x80(%rbp)
	movl 0x70(%rbp),%r15d
	movl %r15d,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_250603+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_1
.p2align 0x4
L_482718:
L_250756:
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r14
	movq %r14,0x20(%rbp)
	jmp L_250600
.p2align 0x4
L_482719:
L_250752:
	movq 0x8(%r13),%r15
	movq 0x0(%r13),%r14
	movq $0x443,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	movq %r13,0x78(%rbp)
	addq $0x18,%r12
	addq $0x78,%rbp
	leaq (L_250753+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bound_0
.p2align 0x4
L_482720:
L_250599:
	movq 0x0(%r14),%r14
	movq %r14,0x20(%rbp)
	movq (globalObjptr+0xEF8)(%rip),%r15
	movq $0x59,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x30(%rbp)
	jmp L_250600
.p2align 0x4
L_482721:
L_250761:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_250762+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250762
.p2align 0x4
.long 0x646
L_250762:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_250598
.p2align 0x4
.long 0x3E32
L_250603:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_250604
L_250749:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_250750+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250750
.p2align 0x4
.long 0x3E47
L_250750:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_250604:
	movq $0x3EE1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x40(%rbp)
	addq $0x10,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x80(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x80,%rbp
	leaq (L_250605+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp instantiateP_0
.p2align 0x4
.long 0x3E48
L_250753:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_250754
L_250758:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_250759+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250759
.p2align 0x4
.long 0x677
L_250759:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_250754:
	movq 0x30(%rbp),%r15
	jmp L_250755
.p2align 0x4
.long 0x3E33
L_250605:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_250606
L_250747:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_250748+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250748
.p2align 0x4
.long 0x3E46
L_250748:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_250606:
	movl 0x70(%rbp),%r15d
	testl %r15d,%r15d
	jz L_482725
L_250607:
	movq $0x47BD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1D01,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x30,%r12
	movl $0x1,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq $0x1,0x10(%r13)
	movq 0x20(%rbp),%r11
	movq %r11,0x18(%r13)
	movq %r14,0x20(%r13)
	movq %r13,%r15
L_250608:
	movq %r15,0x80(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x78,%rbp
	leaq (L_250609+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp instantiateP_0
.p2align 0x4
L_482725:
L_250746:
	movq $0x1CFF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_250608
.p2align 0x4
.long 0x3E34
L_250609:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_250610
L_250744:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_250745+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250745
.p2align 0x4
.long 0x3E45
L_250745:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_250610:
	movq $0x3049,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x78(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x78,%rbp
	leaq (L_250611+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unify_1
.p2align 0x4
.long 0x3E35
L_250611:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_250612
L_250742:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_250743+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250743
.p2align 0x4
.long 0x3E44
L_250743:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_250612:
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je L_482728
L_250613:
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x10658)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_250614+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_482728:
L_250741:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3E36
L_250614:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_250615+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3E36
L_250615:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_250616
L_250739:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_250740+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250740
.p2align 0x4
.long 0x3E43
L_250740:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_250616:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	addq $0x18,%r12
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%r13)
	movq $0x1,0x8(%r13)
	movq $0x1,%r14
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_250617:
	addl 0x0(%r15),%ecx
	movl %ecx,0x10(%rbp)
	jo L_482733
L_250619:
	cmpq $0x1,%r14
	je L_482730
L_250620:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_250617
.p2align 0x4
L_482730:
L_250621:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_250622
L_250737:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_250738+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250738
.p2align 0x4
.long 0x3E42
L_250738:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_250622:
	movl 0x10(%rbp),%ecx
	testl %ecx,%ecx
	jz L_482731
L_250623:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
L_250624:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x10(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xA18)(%rip),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_250625+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_482731:
L_250736:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_250624
.p2align 0x4
L_482733:
L_250618:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3E37
L_250625:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_250626+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3E37
L_250626:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x152F,%r14
	je L_482735
L_250707:
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_250708+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_482735:
L_250627:
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_250628+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3E38
L_250708:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_250709
L_250734:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_250735+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250735
.p2align 0x4
.long 0x3E40
L_250735:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_250709:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_482736
L_250710:
	movq 0x8(%r14),%r13
	movq %r13,0x8(%rbp)
	movq 0x0(%r14),%r13
	movq %r15,0x20(%rbp)
	movq %r13,%r15
L_250711:
	movq 0x8(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_250712+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_482736:
L_250733:
	movq 0x8(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq $0x1,0x8(%rbp)
L_250716:
	movq (globalObjptr+0xA050)(%rip),%r15
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_250717+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3E38
L_250628:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_250629
L_250705:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_250706+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250706
.p2align 0x4
.long 0x3E40
L_250706:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_250629:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_482738
L_250630:
	movq 0x8(%r14),%r13
	movq %r13,0x8(%rbp)
	movq 0x0(%r14),%r13
	movq %r15,0x20(%rbp)
	movq %r13,%r15
L_250631:
	movq 0x8(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_250632+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_482738:
L_250704:
	movq 0x8(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq $0x1,0x8(%rbp)
L_250636:
	movq (globalObjptr+0xA050)(%rip),%r15
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_250637+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3E39
L_250712:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_250713
L_250731:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_250732+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250732
.p2align 0x4
.long 0x3E41
L_250732:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_250713:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_482740
L_250714:
	movq %r15,0x20(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_250711
.p2align 0x4
L_482740:
L_250715:
	movq 0x20(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x20(%rbp)
	jmp L_250716
.p2align 0x4
.long 0x3E39
L_250717:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x8(%rbp),%r14
	movq %r14,0x78(%rbp)
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_250718+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3787
.p2align 0x4
.long 0x3E39
L_250632:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_250633
L_250702:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_250703+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250703
.p2align 0x4
.long 0x3E41
L_250703:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_250633:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_482742
L_250634:
	movq %r15,0x20(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_250631
.p2align 0x4
L_482742:
L_250635:
	movq 0x20(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x20(%rbp)
	jmp L_250636
.p2align 0x4
.long 0x3E39
L_250637:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x8(%rbp),%r14
	movq %r14,0x78(%rbp)
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_250638+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3787
.p2align 0x4
.long 0x3E38
L_250718:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_250719
L_250729:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_250730+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250730
.p2align 0x4
.long 0x3E40
L_250730:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_250719:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x38(%rbp)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%r13)
	movq 0x8(%rbp),%r14
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_250720:
	addl 0x0(%r15),%ecx
	movl %ecx,0x8(%rbp)
	jo L_250618
L_250721:
	cmpq $0x1,%r14
	je L_482744
L_250722:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_250720
.p2align 0x4
L_482744:
L_250723:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_250724
L_250727:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_250728+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250728
.p2align 0x4
.long 0x3E3F
L_250728:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_250724:
	movl 0x8(%rbp),%ecx
	testl %ecx,%ecx
	jz L_482749
L_250725:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
L_250646:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x8(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_250647:
	addl 0x0(%r14),%ecx
	movl %ecx,0x18(%rbp)
	jo L_250618
L_250648:
	cmpq $0x1,%r15
	je L_482745
L_250649:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_250647
.p2align 0x4
L_482745:
L_250650:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_250651
L_250695:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_250696+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250696
.p2align 0x4
.long 0x1A85
L_250696:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_250651:
	movl 0x18(%rbp),%ecx
	testl %ecx,%ecx
	jz L_482746
L_250652:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
L_250653:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x8(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq (globalObjptr+0x10610)(%rip),%r15
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_250654+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_482746:
L_250694:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_250653
.p2align 0x4
L_482749:
L_250726:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_250646
.p2align 0x4
.long 0x3E38
L_250638:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_250639
L_250700:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_250701+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250701
.p2align 0x4
.long 0x3E40
L_250701:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_250639:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x38(%rbp)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%r13)
	movq 0x8(%rbp),%r14
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_250640:
	addl 0x0(%r15),%ecx
	movl %ecx,0x8(%rbp)
	jo L_250618
L_250641:
	cmpq $0x1,%r14
	je L_482753
L_250642:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_250640
.p2align 0x4
L_482753:
L_250643:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_250644
L_250698:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_250699+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250699
.p2align 0x4
.long 0x3E3F
L_250699:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_250644:
	movl 0x8(%rbp),%ecx
	testl %ecx,%ecx
	jz L_482754
L_250645:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_250646
.p2align 0x4
L_482754:
L_250697:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_250646
.p2align 0x4
.long 0x3E3A
L_250654:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_250655
L_250692:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_250693+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250693
.p2align 0x4
.long 0x3E3E
L_250693:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_250655:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x30(%rbp)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%r13)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_250656:
	addl 0x0(%r15),%ecx
	movl %ecx,0x18(%rbp)
	jo L_250618
L_250657:
	cmpq $0x1,%r14
	je L_482758
L_250658:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_250656
.p2align 0x4
L_482758:
L_250659:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_250660
L_250690:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_250691+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250691
.p2align 0x4
.long 0x1A85
L_250691:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_250660:
	movl 0x18(%rbp),%ecx
	testl %ecx,%ecx
	jz L_482759
L_250661:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
L_250662:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x18(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x20(%rbp)
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq (globalObjptr+0x10618)(%rip),%r15
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_250663+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_482759:
L_250689:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_250662
.p2align 0x4
.long 0x3E3B
L_250663:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_250664
L_250687:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_250688+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250688
.p2align 0x4
.long 0x3E3E
L_250688:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_250664:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x30(%rbp)
	addq $0x18,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%r13)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_250665:
	addl 0x0(%r15),%ecx
	movl %ecx,0x20(%rbp)
	jo L_250618
L_250666:
	cmpq $0x1,%r14
	je L_482763
L_250667:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_250665
.p2align 0x4
L_482763:
L_250668:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_250669
L_250685:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_250686+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250686
.p2align 0x4
.long 0x3E3D
L_250686:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_250669:
	movl 0x20(%rbp),%ecx
	testl %ecx,%ecx
	jz L_482764
L_250670:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
L_250671:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_250672+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3782
.p2align 0x4
L_482764:
L_250684:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_250671
.p2align 0x4
.long 0x1A93
L_250672:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movl 0x78(%rbp),%r15d
	movl %r15d,0x8(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_250673
L_250682:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_250683+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250683
.p2align 0x4
.long 0x3E3C
L_250683:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_250673:
	movl 0x8(%rbp),%ecx
	testl %ecx,%ecx
	jz L_482770
L_250674:
	decl %ecx
	jo L_250618
L_250675:
	movq $0x1B67,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl $0x1,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
L_250676:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_250618
L_250677:
	movl %r13d,0x0(%r15)
	movq %r14,0x8(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x20(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x8,%rbp
	leaq (L_250678+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_482770:
L_250681:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_250676
.p2align 0x4
.long 0x1
L_250678:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq (globalObjptr+0x1608)(%rip),%r15
	movq (globalObjptr+0x1610)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_482772
L_250679:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_482772:
L_250680:
	movq (globalObjptr+0x1618)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl loop_3937
.hidden loop_3937
loop_3937:
L_250763:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_250764
L_250860:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_250861+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250861
.p2align 0x4
.long 0x45B
L_250861:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_250764:
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x28(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x30(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movl %r13d,0x38(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_250766
L_250767:
	cmpl $0x0,%r13d
	jl L_250844
L_250768:
	movl $0x0,0x3C(%rbp)
	movl $0x0,0x40(%rbp)
loop_2916:
	movl 0x38(%rbp),%r15d
	cmpl %r15d,0x40(%rbp)
	jl L_482807
L_250769:
	movq 0x18(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x20(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_250766
L_250771:
	cmpl $0x0,%r13d
	jl L_482805
L_250772:
	xorl %ecx,%ecx
	movl $0x0,0x24(%rbp)
.p2align 0x4,,0x7
loop_2917:
	movl 0x24(%rbp),%r14d
	cmpl 0x20(%rbp),%r14d
	jnl L_482804
L_250774:
	movl %ecx,0x38(%rbp)
	movslq %r14d,%r15
	movq %r15,%r14
	salq $0x4,%r14
	movq 0x18(%rbp),%r13
	movq 0x0(%r13,%r14,1),%r11
	movq %r11,0x30(%rbp)
	salq $0x4,%r15
	movq 0x8(%r13,%r15,1),%r14
	movq %r14,%r15
.p2align 0x4,,0x7
loop_2918:
	movq 0x28(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r10,%r13
	jne L_482803
L_250776:
	movl 0x38(%rbp),%r10d
	cmpl %r11d,%r10d
	je L_482802
L_250777:
	movslq %r10d,%r11
	cmpq %r13,%r11
	jnb L_482801
L_250780:
	movq 0x0(%r14,%r11,8),%r13
	movq 0x10(%r13),%r9
	movq %r9,0x40(%rbp)
	movq 0x8(%r15),%r9
	movq 0x18(%r13),%r8
	movq 0x8(%r8),%rsp
	movq 0x8(%rsp),%rsi
	cmpq %rsi,0x8(%r9)
	je L_482774
L_250781:
	incl %r10d
	jo L_482773
L_250783:
	movl %r10d,0x38(%rbp)
	jmp loop_2918
.p2align 0x4
L_482773:
L_250782:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_482774:
L_250784:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_482800
.p2align 0x4,,0x7
L_250785:
	movl 0x38(%rbp),%r13d
	incl %r13d
	movl %r13d,0x3C(%rbp)
	jo L_250782
L_250786:
	movq 0x10(%rbp),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x1536,%r15
	je L_482786
L_250816:
	movq 0x0(%r13),%r15
	movq $0x1CF9,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x48(%rbp)
	movq %r15,0x0(%r13)
	addq $0x18,%r12
	movq 0x40(%rbp),%r11
	movq %r11,0x8(%r13)
	movq 0x30(%rbp),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x50(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_482785
L_250817:
	movq %r15,0x0(%r13)
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_482784
L_250818:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_250820:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_250821
L_250833:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xCD0,%r13
	je L_482780
L_250821:
	incl %ecx
	movl %ecx,0x30(%rbp)
	jo L_250782
L_250822:
	cmpq $0x1,%r15
	je L_482775
L_250823:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_250820
.p2align 0x4
L_482775:
L_250824:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_482778
.p2align 0x4,,0x7
L_250825:
	movl 0x30(%rbp),%ecx
L_250826:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_482777
L_250827:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_250829
L_250830:
	movl %ecx,0x0(%r15)
L_250829:
	movq $0x13F9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x19A1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq 0x50(%rbp),%r15
	movq 0x0(%r15),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq %r11,0x0(%r15)
L_250803:
	incl 0x24(%rbp)
	movl 0x3C(%rbp),%ecx
	jmp loop_2917
.p2align 0x4
L_482777:
L_250799:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_482778:
L_250831:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_250832+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250832
.p2align 0x4
.long 0x3E49
L_250832:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	jmp L_250825
.p2align 0x4
L_482780:
L_250834:
	movq 0x0(%r14),%r15
	movslq %ecx,%r14
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r14
	jo L_250799
L_250835:
	movq %r14,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %ecx,0x0(%r13)
	jnl L_482781
L_250838:
	movl %ecx,0x0(%r13)
	movq %r15,%r14
L_250837:
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq 0x48(%rbp),%r15
	movq %r15,0x0(%r14)
	jmp L_250803
.p2align 0x4
L_482781:
	movq %r15,%r14
	jmp L_250837
.p2align 0x4
L_482784:
L_250839:
	xorl %ecx,%ecx
	jmp L_250826
.p2align 0x4
L_482785:
L_250788:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_482786:
L_250787:
	movq 0x10(%r13),%r14
	movq 0x8(%r13),%r11
	movq %r11,0x48(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x50(%rbp)
	movq 0x30(%rbp),%r11
	movq 0x10(%r11),%r10
	movq %r10,0x58(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_250788
L_250789:
	movq %r15,0x0(%r11)
	movq 0x0(%r10),%r11
	cmpq $0x1,%r11
	je L_482797
L_250790:
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r11
	xorl %ecx,%ecx
	movq %r11,%r15
.p2align 0x4,,0x7
L_250792:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_482796
L_250807:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xD8B,%r11
	jne L_482795
L_250808:
	movq 0x8(%r13),%r11
	cmpq %r14,0x0(%r13)
	movq %r14,(localObjptr+0x0)(%rip)
	je L_482792
L_250793:
	incl %ecx
	movl %ecx,0x30(%rbp)
	jo L_250782
L_250794:
	cmpq $0x1,%r15
	je L_482787
L_250795:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x0)(%rip),%r14
	jmp L_250792
.p2align 0x4
L_482787:
L_250796:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_482790
.p2align 0x4,,0x7
L_250797:
	movl 0x30(%rbp),%ecx
L_250798:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_250799
L_250800:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_250802
L_250804:
	movl %ecx,0x0(%r15)
L_250802:
	movq 0x48(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x28DD,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r13,0x0(%r15)
	movq $0x1313,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x50(%rbp),%r15
	movq %r15,0x0(%r13)
	movq 0x0(%r14),%r15
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r15,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%r10,%r15,1)
	movq %r11,0x0(%r14)
	jmp L_250803
.p2align 0x4
L_482790:
L_250805:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_250806+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250806
.p2align 0x4
.long 0x27C1
L_250806:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	jmp L_250797
.p2align 0x4
L_482792:
L_250810:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_250799
L_250811:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_482793
L_250814:
	movl %ecx,0x0(%r14)
	movq %r11,%r15
L_250813:
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_250803
.p2align 0x4
L_482793:
L_250812:
	movq %r11,%r15
	jmp L_250813
.p2align 0x4
L_482795:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_250793
.p2align 0x4
L_482796:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_250793
.p2align 0x4
L_482797:
L_250815:
	xorl %ecx,%ecx
	jmp L_250798
.p2align 0x4
L_482800:
L_250840:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_250841+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250841
.p2align 0x4
.long 0x86D
L_250841:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_250785
.p2align 0x4
L_482801:
L_250779:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_482802:
L_250842:
	movq (globalObjptr+0x4D98)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_482803:
L_250766:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_482804:
L_250773:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_482805:
L_250844:
	movq (globalObjptr+0x4F8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_482807:
L_250845:
	movslq 0x40(%rbp),%r15
	movq %r15,%r14
	salq $0x4,%r14
	movq 0x20(%rbp),%r13
	movq 0x0(%r13,%r14,1),%r11
	salq $0x4,%r15
	movq 0x8(%r13,%r15,1),%r10
	movl 0x3C(%rbp),%ecx
	movq %r10,%r15
	movq %r11,%r14
.p2align 0x4,,0x7
loop_2919:
	movq 0x30(%rbp),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r11
	movl %r11d,%r10d
	movslq %r10d,%r9
	cmpq %r11,%r9
	jne L_250766
L_250847:
	cmpl %ecx,%r10d
	je L_482812
L_250848:
	movslq %ecx,%r10
	cmpq %r11,%r10
	jnb L_250779
L_250850:
	movq 0x0(%r13,%r10,8),%r11
	movq 0x10(%r11),%r9
	movq 0x18(%r11),%r8
	movq 0x8(%r8),%rsp
	movq 0x8(%r15),%rsi
	movq 0x8(%rsi),%rdi
	cmpq %rdi,0x8(%rsp)
	je L_482809
L_250851:
	incl %ecx
	jo L_250782
L_250852:
	jmp loop_2919
.p2align 0x4
L_482809:
L_250853:
	incl %ecx
	movl %ecx,0x3C(%rbp)
	jo L_250782
L_250854:
	movq %r9,0x50(%rbp)
	movq %r14,0x58(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x50,%rbp
	leaq (L_250855+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3937
.p2align 0x4
L_482812:
L_250857:
	movq %r14,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_250858+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp allNone_2
.p2align 0x4
.long 0x3E4A
L_250855:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movl 0x3C(%rbp),%ecx
L_250856:
	movl %ecx,0x3C(%rbp)
	incl 0x40(%rbp)
	jmp loop_2916
.p2align 0x4
.long 0x3E4A
L_250858:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movl 0x3C(%rbp),%ecx
	jmp L_250856
.text
.p2align 0x4
.globl allNone_2
.hidden allNone_2
allNone_2:
L_250862:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_250863
L_250879:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_250880+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250880
.p2align 0x4
.long 0x451
L_250880:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_250863:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x8(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movl %r13d,0x18(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_250865
L_250866:
	cmpl $0x0,%r13d
	jl L_250875
L_250867:
	movl $0x0,0x1C(%rbp)
loop_2920:
	movl 0x18(%rbp),%r15d
	cmpl %r15d,0x1C(%rbp)
	jl L_482820
L_250868:
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_482819
L_250870:
	cmpl $0x0,%r13d
	jl L_482818
L_250871:
	cmpl $0x0,%r13d
	jg L_482817
L_250872:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_482817:
L_250873:
	movq (globalObjptr+0x4D98)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_482818:
L_250875:
	movq (globalObjptr+0x4F8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_482819:
L_250865:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_482820:
L_250876:
	movslq 0x1C(%rbp),%r15
	salq $0x4,%r15
	movq 0x10(%rbp),%r14
	movq 0x0(%r14,%r15,1),%r13
	movq %r13,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_250877+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp allNone_2
.p2align 0x4
.long 0x4F4
L_250877:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	incl 0x1C(%rbp)
	jmp loop_2920
.text
.p2align 0x4
.globl replace_4
.hidden replace_4
replace_4:
L_250881:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_250998
L_250882:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_482870
L_250883:
	movq 0x8(%rbp),%r13
	movq 0x18(%r13),%r11
	movq %r11,0x28(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_482869
L_250885:
	movq %r15,0x0(%r13)
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_482868
L_250886:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_250888:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_250889
L_250990:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xD63,%r13
	jne L_250889
L_250991:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	cmpq %r11,0x20(%rbp)
	je L_482863
L_250889:
	incl %ecx
	movl %ecx,0x30(%rbp)
	jo L_250890
L_250891:
	cmpq $0x1,%r15
	je L_482824
L_250892:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_250888
.p2align 0x4
L_482824:
L_250893:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_250894
L_250988:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_250989+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250989
.p2align 0x4
.long 0x5F6
L_250989:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_250894:
	movl 0x30(%rbp),%ecx
L_250895:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_482860
L_250897:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_250899
L_250987:
	movl %ecx,0x0(%r15)
L_250899:
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x28DD,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r13,0x0(%r15)
	movq $0x1357,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x1AC7,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq 0x20(%rbp),%r11
	movq %r11,0x0(%r13)
	movq %r15,0x8(%r13)
	movq 0x0(%r14),%r11
	movq $0x28DF,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r13,0x0(%r9)
	movq %r11,0x8(%r9)
	addq $0x18,%r12
	movq %r14,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%r10,%r13,1)
	movq %r9,0x0(%r14)
	movq %r15,0x28(%rbp)
L_250900:
	movq 0x28(%rbp),%r13
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_250906
L_250901:
	movq 0x0(%r11),%r14
	movq 0x8(%r11),%r11
	movq %r11,%r15
.p2align 0x4,,0x7
L_250902:
	movq 0x8(%r14),%r13
	movq 0x0(%rbp),%r11
	movq 0x18(%r11),%r10
	cmpq %r10,0x18(%r13)
	je L_482857
L_250903:
	cmpq $0x1,%r15
	je L_482825
L_250904:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq %r13,%r14
	jmp L_250902
.p2align 0x4
L_482825:
L_250906:
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x10(%r15),%r14
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x48(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x50(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x58(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r11d
	movslq %r11d,%rdx
	movq %rdx,0x60(%rbp)
	cmpq %r15,%rdx
	movq %r14,0x40(%rbp)
	jne L_250908
L_250909:
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movl %r15d,%r14d
	movslq %r14d,%r10
	cmpq %r10,%r15
	jne L_250908
L_250911:
	cmpl %r14d,%r11d
	jne L_250913
L_250914:
	cmpq $0x7FFFFFFF,%rdx
	ja L_250942
L_250915:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x29,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_250916+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250916
.p2align 0x4
.long 0x3E4B
L_250916:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq %rax,0x8(%rbp)
	movq $0x0,0x68(%rbp)
loop_2921:
	movq 0x60(%rbp),%r15
	cmpq %r15,0x68(%rbp)
	jl L_482852
L_250917:
	movq 0x38(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x18(%rbp)
	cmpq %rdx,%r14
	jne L_250908
L_250919:
	movq 0x50(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r11d
	movslq %r11d,%r10
	cmpq %r10,%r14
	jne L_250908
L_250921:
	cmpl %r11d,%r13d
	jne L_250913
L_250923:
	cmpq $0x7FFFFFFF,%rdx
	ja L_250942
L_250924:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x6CD,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_250925+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250925
.p2align 0x4
.long 0x1133
L_250925:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq %rax,0x20(%rbp)
	movq $0x0,0x40(%rbp)
.p2align 0x4,,0x7
loop_2922:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_482847
.p2align 0x4,,0x7
L_250926:
	movq 0x40(%rbp),%r14
	cmpq 0x18(%rbp),%r14
	jnl L_482840
L_250943:
	movl %r14d,%r13d
	movslq %r13d,%r15
	movq 0x38(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x58(%rbp)
	movl 0x0(%r13),%r11d
	movl %r11d,0x60(%rbp)
	movq 0x10(%r13),%r11
	movq 0x18(%r13),%r10
	movq %r10,0x68(%rbp)
	movq 0x50(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x10(%r13),%r10
	movq 0x8(%r10),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1051,%r15
	je L_482839
	cmpq $0x1052,%r15
	je L_482826
L_250944:
	movq %r10,%r15
L_250945:
	movq $0x1115,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x10(%r14)
	addq $0x28,%r12
	movl 0x60(%rbp),%r15d
	movl %r15d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x58(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x68(%rbp),%r15
	movq %r15,0x18(%r14)
	movq 0x20(%rbp),%r15
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x40(%rbp),%r13
	movq %r14,0x0(%r15,%r13,8)
	incq %r13
	movq %r13,0x40(%rbp)
	jmp loop_2922
.p2align 0x4
L_482826:
L_250947:
	movq 0x8(%r14),%r15
	movq %r15,0x70(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x78(%rbp)
	movq 0x8(%r11),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x1052,%r13
	jne L_482838
L_250949:
	movq 0x0(%r14),%r13
	movq %r13,0x80(%rbp)
	movq 0x0(%r10),%r14
	movq %r14,0x88(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	movq %r11,0x90(%rbp)
	cmpq %r14,%r11
	jne L_250908
L_250951:
	testq %r11,%r11
	jnz L_482835
L_250975:
	movq (globalObjptr+0x4E18)(%rip),%r15
	movq %r15,0x98(%rbp)
.p2align 0x4,,0x7
L_250955:
	movq $0x0,0xA0(%rbp)
loop_2924:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_482834
.p2align 0x4,,0x7
L_250956:
	movq 0x90(%rbp),%r14
	cmpq %r14,0xA0(%rbp)
	jl L_482827
L_250957:
	movq 0x98(%rbp),%r14
	movq $0xAEF,0xFFFFFFFFFFFFFFF8(%r14)
	movq $0x20A5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r14,0x0(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x6D7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x88(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r14,%r15
	jmp L_250945
.p2align 0x4
L_482827:
L_250958:
	movq 0xA0(%rbp),%r14
	movl %r14d,%ebx
	movslq %ebx,%r15
	movq %r15,%r14
	salq $0x5,%r14
	movq 0x78(%rbp),%r13
	movq 0x8(%r13,%r14,1),%r11
	movq %r11,0xA8(%rbp)
	salq $0x5,%r15
	movq 0x10(%r13,%r15,1),%r14
	movq %r14,0xB0(%rbp)
	movq 0x80(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%ecx
	movslq %ecx,%r14
	cmpq %r14,%r15
	jne L_482833
L_250960:
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_2925:
	cmpl %ebx,%ecx
	je L_482831
L_250961:
	movslq %ebx,%r14
	cmpq %r15,%r14
	jnb L_482830
L_250963:
	movq %r14,%r13
	movq %r14,%r11
	salq $0x5,%r13
	movq 0x80(%rbp),%r10
	movq 0x0(%r10,%r13,1),%r9
	salq $0x5,%r11
	salq $0x5,%r14
	movq 0x18(%r10,%r14,1),%r13
	movq 0x10(%r10,%r11,1),%r14
	movq 0x8(%r14),%r8
	movq 0xB0(%rbp),%rsp
	movq 0x8(%rsp),%rsi
	movq 0x8(%rsi),%rdi
	cmpq %rdi,0x8(%r8)
	je L_482829
L_250964:
	incl %ebx
	jo L_482828
L_250965:
	jmp loop_2925
.p2align 0x4
L_482828:
L_250890:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_482829:
L_250966:
	movq %r9,%r15
	movq %r13,%r14
L_250967:
	movq 0x98(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq 0xA0(%rbp),%r11
	movq %r11,%r9
	salq $0x5,%r9
	movq %r15,0x0(%r13,%r9,1)
	movq %r13,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%r10,%r15,1)
	movq %r11,%r15
	salq $0x5,%r15
	movq 0xA8(%rbp),%r9
	movq %r9,0x8(%r13,%r15,1)
	movq %r13,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%r10,%r15,1)
	movq %r11,%r15
	salq $0x5,%r15
	movq 0xB0(%rbp),%r9
	movq %r9,0x10(%r13,%r15,1)
	movq %r13,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%r10,%r15,1)
	movq %r11,%r15
	salq $0x5,%r15
	movq %r14,0x18(%r13,%r15,1)
	incq %r11
	movq %r11,0xA0(%rbp)
	jmp loop_2924
.p2align 0x4
L_482830:
L_250962:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_482831:
L_250968:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_482832
.p2align 0x4,,0x7
L_250969:
	movq $0x5CB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x5CD,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r13,%r15
	jmp L_250967
.p2align 0x4
L_482832:
L_250970:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_250971+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250971
.p2align 0x4
.long 0x3E4D
L_250971:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	jmp L_250969
.p2align 0x4
L_482833:
L_250908:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_482834:
L_250972:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_250973+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250973
.p2align 0x4
.long 0x3E4E
L_250973:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	jmp L_250956
.p2align 0x4
L_482835:
L_250952:
	movq 0x90(%rbp),%rdx
	cmpq $0x7FFFFFFF,%rdx
	ja L_482836
L_250953:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x15CD,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_250954+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250954
.p2align 0x4
.long 0x3E4C
L_250954:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq %rax,0x98(%rbp)
	jmp L_250955
.p2align 0x4
L_482836:
L_250942:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_482838:
L_250948:
	xchgq %r10,%r15
	jmp L_250945
.p2align 0x4
L_482839:
L_250946:
	movq %r10,%r15
	jmp L_250945
.p2align 0x4
L_482840:
L_250927:
	movq 0x30(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r13
	movl %r13d,%r11d
	movslq %r11d,%rdx
	movq %rdx,0x10(%rbp)
	cmpq %rdx,%r13
	jne L_250908
L_250929:
	movq 0x48(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r13
	movl %r13d,%r10d
	movslq %r10d,%r9
	cmpq %r13,%r9
	jne L_250908
L_250931:
	cmpl %r11d,%r10d
	jne L_482844
L_250933:
	cmpq $0x7FFFFFFF,%rdx
	ja L_250942
L_250934:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x6CF,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_250935+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250935
.p2align 0x4
.long 0x15F8
L_250935:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq %rax,0x18(%rbp)
	movq $0x0,0x38(%rbp)
.p2align 0x4,,0x7
loop_2923:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_482842
.p2align 0x4,,0x7
L_250936:
	movq 0x38(%rbp),%r15
	cmpq 0x10(%rbp),%r15
	jnl L_482841
L_250938:
	movl %r15d,%r14d
	movslq %r14d,%r13
	movq 0x30(%rbp),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq 0x8(%r11),%r10
	movl 0x0(%r11),%r9d
	movq 0x18(%r11),%r8
	movq 0x10(%r11),%rsp
	movq 0x8(%rsp),%rsi
	movq 0x48(%rbp),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq 0x10(%r11),%rsp
	movq 0x0(%rsp),%rdi
	movq $0x5C9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %rdi,0x0(%r14)
	movq %rsi,0x8(%r14)
	addq $0x18,%r12
	movq $0x111D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movl %r9d,0x0(%r13)
	movq %r10,0x8(%r13)
	movq %r14,0x10(%r13)
	movq %r8,0x18(%r13)
	addq $0x28,%r12
	movl $0x0,0x4(%r13)
	movq 0x18(%rbp),%r14
	movq %r14,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r13,0x0(%r14,%r15,8)
	incq %r15
	movq %r15,0x38(%rbp)
	jmp loop_2923
.p2align 0x4
L_482841:
L_250937:
	movq 0x0(%rbp),%r14
	movq 0x20(%r14),%r13
	movq $0x13,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq $0x1,0x0(%r11)
	movq $0x6D1,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r11,0x18(%r10)
	movq %r13,0x20(%r10)
	addq $0x30,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r10)
	movq 0x20(%rbp),%r13
	movq %r13,0x8(%r10)
	movq 0x8(%rbp),%r13
	movq %r13,0x10(%r10)
	movq $0x1123,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq %r10,0x0(%r13)
	movq %r14,0x8(%r13)
	movq %r10,0x0(%rbp)
	movq 0x28(%rbp),%r14
	movq 0x0(%r14),%r11
	movq $0x268F,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r13,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r10,0x0(%r14)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_482842:
L_250939:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_250940+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250940
.p2align 0x4
.long 0x595
L_250940:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	jmp L_250936
.p2align 0x4
L_482844:
L_250913:
	movq (globalObjptr+0x4E0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_482847:
L_250976:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_250977+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250977
.p2align 0x4
.long 0x3E4F
L_250977:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	jmp L_250926
.p2align 0x4
L_482852:
L_250979:
	movq 0x68(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x40(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x70(%rbp)
	movl 0x0(%r13),%r11d
	movl %r11d,0x78(%rbp)
	movq 0x10(%r13),%r11
	movq %r11,0x98(%rbp)
	movq 0x18(%r13),%r11
	movq %r11,0x80(%rbp)
	movq 0x58(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x90(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0xA0(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0xA8(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0xB0(%rbp)
	addq $0x90,%rbp
	leaq (L_250980+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp replace_4
.p2align 0x4
L_482857:
L_250985:
	movq 0x0(%r14),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_482860:
L_250896:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_482863:
L_250993:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_250896
L_250994:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_482864
L_250996:
	movl %ecx,0x0(%r15)
	movq %r13,0x28(%rbp)
	jmp L_250900
.p2align 0x4
L_482864:
L_250995:
	movq %r13,0x28(%rbp)
	jmp L_250900
.p2align 0x4
L_482868:
L_250997:
	xorl %ecx,%ecx
	jmp L_250895
.p2align 0x4
L_482869:
L_250884:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_482870:
L_250998:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_250999+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250999
.p2align 0x4
.long 0x63C
L_250999:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	jmp L_250883
.p2align 0x4
.long 0x3E50
L_250980:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x88(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_250981
L_250982:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_250983+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250983
.p2align 0x4
.long 0x3E51
L_250983:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_250981:
	movq $0x111F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x28,%r12
	movl 0x78(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x88(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x80(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x8(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x68(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x68(%rbp)
	jmp loop_2921
.text
.p2align 0x4
.globl x_2005
.hidden x_2005
x_2005:
L_251000:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_251016
L_251001:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_482875
L_251002:
	movq 0x0(%rbp),%r15
	movl 0x0(%r15),%r14d
	movl %r14d,0x8(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x8(%r15),%r14
	cmpq $0x1,%r14
	je L_482874
L_251003:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x223E,%r15
	je L_482873
L_251010:
	movq 0x10(%r14),%r15
	movq 0x8(%r14),%r13
	movl 0x0(%r14),%r11d
	movq $0x475,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %r11d,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r13,0x10(%r14)
	addq $0x20,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_251011+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2005
.p2align 0x4
L_482873:
L_251004:
	movq 0x10(%r14),%r15
	movq 0x8(%r14),%r13
	movb 0x0(%r14),%r11b
	movq $0x477,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	movq %r13,0x10(%r14)
	addq $0x20,%r12
	movzbl %r11b,%r15d
	movl %r15d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq %r14,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_251005+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2015
.p2align 0x4
L_482874:
L_251015:
	movq $0x1,%r15
L_251007:
	movq 0x10(%rbp),%r14
	movl 0x0(%r14),%r13d
	movl 0x8(%rbp),%r11d
	movl %r11d,0x0(%r14)
	movl %r13d,0x8(%rbp)
	movq %r14,0x0(%rbp)
	movq %r15,0x10(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_482875:
L_251016:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_251017+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251017
.p2align 0x4
.long 0x451
L_251017:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	jmp L_251002
.p2align 0x4
.long 0x2B
L_251011:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	movl 0x28(%rbp),%r15d
	movl %r15d,0xC(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_251012
L_251013:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_251014+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251014
.p2align 0x4
.long 0x4B1
L_251014:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_251012:
	movq $0x3163,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movl 0xC(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x10(%r15)
	jmp L_251007
.p2align 0x4
.long 0x2B
L_251005:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	movb 0x28(%rbp),%r15b
	movb %r15b,0xC(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_251006
L_251008:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_251009+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251009
.p2align 0x4
.long 0x4B1
L_251009:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_251006:
	movq $0x3161,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movzbl 0xC(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x10(%r15)
	jmp L_251007
.text
.p2align 0x4
.globl x_2015
.hidden x_2015
x_2015:
L_251018:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_251037
L_251019:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_482881
L_251020:
	movq 0x0(%rbp),%r14
	movb 0x0(%r14),%r15b
	movb %r15b,0x8(%rbp)
	movq 0x10(%r14),%r15
	movq %r15,0x10(%rbp)
	movq 0x8(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x2241,%r14
	je L_482880
	cmpq $0x2242,%r14
	je L_482879
L_251021:
	movq 0x10(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movb 0x0(%r15),%r14b
	movb %r14b,0x9(%rbp)
	addq $0x28,%rbp
	leaq (L_251022+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2015
.p2align 0x4
L_482879:
L_251032:
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movb 0x0(%r15),%r11b
	movq $0x477,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	movq %r13,0x10(%r15)
	addq $0x20,%r12
	movzbl %r11b,%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_251033+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2015
.p2align 0x4
L_482880:
L_251027:
	movq 0x28(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x18(%rbp)
	movl 0x0(%r15),%r14d
	movl %r14d,0xC(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movb 0x4(%r15),%r14b
	movb %r14b,0x9(%rbp)
	addq $0x40,%rbp
	leaq (L_251028+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2005
.p2align 0x4
L_482881:
L_251037:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_251038+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251038
.p2align 0x4
.long 0x451
L_251038:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	jmp L_251020
.p2align 0x4
.long 0x490
L_251022:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movb 0x30(%rbp),%r15b
	movb %r15b,0xA(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_251023
L_251025:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_251026+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251026
.p2align 0x4
.long 0x51F
L_251026:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_251023:
	movq $0xDDD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movzbl 0xA(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x18(%rbp),%r14
	movb 0x0(%r14),%r13b
	movb 0x9(%rbp),%r11b
	movb %r11b,0x0(%r14)
	movq $0x3165,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x8(%r11)
	addq $0x20,%r12
	movzbl %r13b,%r10d
	movl %r10d,0x0(%r11)
	movl $0x0,0x4(%r11)
	movq %r14,0x10(%r11)
	movq %r11,%r15
L_251024:
	movq 0x10(%rbp),%r14
	movb 0x0(%r14),%r13b
	movb 0x8(%rbp),%r11b
	movb %r11b,0x0(%r14)
	movb %r13b,0x8(%rbp)
	movq %r14,0x0(%rbp)
	movq %r15,0x10(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x2B
L_251033:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	movb 0x28(%rbp),%r15b
	movb %r15b,0x9(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_251034
L_251035:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_251036+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251036
.p2align 0x4
.long 0x4B1
L_251036:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_251034:
	movq $0x3169,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movzbl 0x9(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x10(%r15)
	jmp L_251024
.p2align 0x4
.long 0x4A7
L_251028:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movl 0x48(%rbp),%r15d
	movl %r15d,0x40(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_251029
L_251030:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_251031+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251031
.p2align 0x4
.long 0x136E
L_251031:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_251029:
	movq $0xDDB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movl 0x40(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x18(%rbp),%r14
	movl 0x0(%r14),%r13d
	movl 0xC(%rbp),%r11d
	movl %r11d,0x0(%r14)
	movq 0x20(%rbp),%r11
	movq 0x0(%r11),%r10
	movq %r11,%r9
	shrq $0x8,%r9
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r9,1)
	movq 0x28(%rbp),%r9
	movq %r9,0x0(%r11)
	movq 0x30(%rbp),%r9
	movb 0x0(%r9),%r8b
	movb 0x9(%rbp),%spl
	movb %spl,0x0(%r9)
	movq $0x3167,0x0(%r12)
	movq %r12,%rsp
	addq $0x8,%rsp
	movl %r13d,0x0(%rsp)
	movq %r15,0x8(%rsp)
	movq %r10,0x18(%rsp)
	addq $0x38,%r12
	movzbl %r8b,%r13d
	movl %r13d,0x4(%rsp)
	movq %r14,0x10(%rsp)
	movq %r11,0x20(%rsp)
	movq %r9,0x28(%rsp)
	movq %rsp,%r15
	jmp L_251024
.text
.p2align 0x4
.globl loop_3899
.hidden loop_3899
loop_3899:
L_251039:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_251040
L_251062:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_251063+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251063
.p2align 0x4
.long 0x451
L_251063:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_251040:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x8(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movl %r13d,0x10(%rbp)
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_251042
L_251043:
	cmpl $0x0,%r13d
	jl L_251056
L_251044:
	movl $0x0,0x14(%rbp)
loop_2926:
	movl 0x10(%rbp),%r14d
	cmpl %r14d,0x14(%rbp)
	jl L_482892
L_251045:
	movq 0x0(%rbp),%r14
	movq 0x8(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%ecx
	movslq %ecx,%r13
	cmpq %r13,%r14
	jne L_251042
L_251047:
	cmpl $0x0,%ecx
	jl L_251056
L_251048:
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_2927:
	cmpl %ecx,%ebx
	jnl L_482886
L_251057:
	movslq %ebx,%r14
	movq 0x0(%r15,%r14,8),%r13
	movq 0x8(%r13),%r11
	movq 0x0(%r11),%r10
	movl $0x1,0x0(%r10)
	incl %ebx
	jmp loop_2927
.p2align 0x4
L_482886:
L_251049:
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%ecx
	movslq %ecx,%r13
	cmpq %r13,%r14
	jne L_482889
L_251051:
	cmpl $0x0,%ecx
	jl L_482888
L_251052:
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_2928:
	cmpl %ecx,%ebx
	jnl L_482887
L_251054:
	movslq %ebx,%r14
	movq 0x0(%r15,%r14,8),%r13
	movq 0x8(%r13),%r11
	movq 0x0(%r11),%r10
	movl $0x1,0x0(%r10)
	incl %ebx
	jmp loop_2928
.p2align 0x4
L_482887:
L_251053:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_482888:
L_251056:
	movq (globalObjptr+0x4F8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_482889:
L_251042:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_482892:
L_251059:
	movslq 0x14(%rbp),%r15
	movq 0x8(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x20(%rbp)
	movq 0x8(%r13),%r11
	movq 0x0(%r11),%r10
	movl $0x1,0x0(%r10)
	addq $0x20,%rbp
	leaq (L_251060+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3899
.p2align 0x4
.long 0x523
L_251060:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	incl 0x14(%rbp)
	jmp loop_2926
.text
.p2align 0x4
.globl get_122
.hidden get_122
get_122:
L_251064:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_251215
L_251065:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_482957
L_251066:
	movq 0x0(%rbp),%r13
	movq 0x18(%r13),%r11
	movq %r11,0x28(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_251067
L_251068:
	movq %r15,0x0(%r13)
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_482955
L_251069:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_251071:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_251072
L_251207:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xCB7,%r13
	jne L_251072
L_251208:
	movq 0x8(%r14),%r13
	movq 0x8(%rbp),%r11
	cmpq %r11,0x0(%r14)
	je L_482950
L_251072:
	incl %ecx
	movl %ecx,0x30(%rbp)
	jo L_251073
L_251074:
	cmpq $0x1,%r15
	je L_482896
L_251075:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_251071
.p2align 0x4
L_482896:
L_251076:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_251077
L_251205:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_251206+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251206
.p2align 0x4
.long 0x5F6
L_251206:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_251077:
	movl 0x30(%rbp),%ecx
L_251078:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_251079
L_251080:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_251082
L_251204:
	movl %ecx,0x0(%r15)
L_251082:
	movq 0x20(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x28DD,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x0(%r15)
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x10(%r15),%r14
	movq 0x20(%r15),%r13
	movq %r13,0x48(%rbp)
	movq $0x13,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq %r15,0x50(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x58(%rbp)
	cmpq %r15,%rdx
	movq %r14,0x40(%rbp)
	jne L_251084
L_251085:
	cmpq $0x7FFFFFFF,%rdx
	ja L_251112
L_251086:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x29,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_251087+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251087
.p2align 0x4
.long 0x1828
L_251087:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq %rax,0x60(%rbp)
	movq $0x0,0x68(%rbp)
loop_2929:
	movq 0x58(%rbp),%r15
	cmpq %r15,0x68(%rbp)
	jl L_482943
L_251088:
	movq 0x38(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x20(%rbp)
	cmpq %r14,%rdx
	jne L_251084
L_251090:
	cmpq $0x7FFFFFFF,%rdx
	ja L_251112
L_251091:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x6CD,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_251092+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251092
.p2align 0x4
.long 0x3E52
L_251092:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq %rax,0x40(%rbp)
	movq $0x0,0x58(%rbp)
.p2align 0x4,,0x7
loop_2930:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_482940
.p2align 0x4,,0x7
L_251093:
	movq 0x58(%rbp),%r11
	cmpq 0x20(%rbp),%r11
	jnl L_482933
L_251113:
	movl %r11d,%ecx
	movslq %ecx,%r15
	movq 0x38(%rbp),%r11
	movq 0x0(%r11,%r15,8),%r10
	movq 0x8(%r10),%r9
	movq %r9,0x68(%rbp)
	movl 0x0(%r10),%r9d
	movl %r9d,0x70(%rbp)
	movq 0x10(%r10),%r9
	movq %r9,0x78(%rbp)
	movq 0x18(%r10),%r8
	movq %r8,0x80(%rbp)
	movq 0x0(%r9),%r11
	movq %r11,0x88(%rbp)
	movq 0x8(%r9),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1051,%r14
	je L_482932
	cmpq $0x1052,%r14
	je L_482911
L_251114:
	movq 0x18(%rbp),%r11
	movq 0x10(%r11),%r10
	movq %r10,0x88(%rbp)
	movq 0x8(%r11),%r10
	movq %r10,0x90(%rbp)
	movq 0x0(%r11),%r14
	movq 0x0(%r15),%r11
	movq 0x10(%r11),%r10
	movq %r10,0x98(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_482910
L_251115:
	movq %r15,0x0(%r11)
	movq 0x0(%r10),%r11
	cmpq $0x1,%r11
	je L_482909
L_251116:
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r11
	xorl %ecx,%ecx
	movq %r11,%r15
.p2align 0x4,,0x7
L_251118:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_482908
L_251138:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xD8B,%r11
	jne L_482907
L_251139:
	movq 0x8(%r13),%r11
	cmpq 0x0(%r13),%r14
	movq %r14,(localObjptr+0x10)(%rip)
	je L_482904
L_251119:
	incl %ecx
	movl %ecx,0x74(%rbp)
	jo L_482903
L_251120:
	cmpq $0x1,%r15
	je L_482897
L_251121:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x10)(%rip),%r14
	jmp L_251118
.p2align 0x4
L_482897:
L_251122:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_482902
.p2align 0x4,,0x7
L_251123:
	movl 0x74(%rbp),%ecx
L_251124:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_482901
L_251125:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_251127
L_251135:
	movl %ecx,0x0(%r15)
L_251127:
	movq 0x90(%rbp),%r14
	movq 0x0(%r14),%r15
	movq $0x28DD,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x98(%rbp),%r11
	movq %r11,0x0(%r13)
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r15,1)
	movq %r13,0x0(%r14)
	movq $0x1313,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x1B17,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x88(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x0(%r11),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r14,0x0(%r9)
	movq %r13,0x8(%r9)
	addq $0x18,%r12
	movq %r11,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r10,%r14,1)
	movq %r9,0x0(%r11)
L_251128:
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_251130
L_251129:
	movq %r14,0x78(%rbp)
.p2align 0x4,,0x7
L_251130:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_482898
.p2align 0x4,,0x7
L_251131:
	movq $0x1115,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x28,%r12
	movl 0x70(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x80(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x58(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x58(%rbp)
	jmp loop_2930
.p2align 0x4
L_482898:
L_251132:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_251133+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251133
.p2align 0x4
.long 0x3E57
L_251133:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	jmp L_251131
.p2align 0x4
L_482901:
L_251079:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_482902:
L_251136:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_251137+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251137
.p2align 0x4
.long 0x3E58
L_251137:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	jmp L_251123
.p2align 0x4
L_482903:
L_251073:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_482904:
L_251141:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_251079
L_251142:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_482905
L_251144:
	movl %ecx,0x0(%r14)
	movq %r11,%r15
	jmp L_251128
.p2align 0x4
L_482905:
L_251143:
	movq %r11,%r15
	jmp L_251128
.p2align 0x4
L_482907:
	movq %r14,(localObjptr+0x10)(%rip)
	jmp L_251119
.p2align 0x4
L_482908:
	movq %r14,(localObjptr+0x10)(%rip)
	jmp L_251119
.p2align 0x4
L_482909:
L_251145:
	xorl %ecx,%ecx
	jmp L_251124
.p2align 0x4
L_482910:
L_251067:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_482911:
L_251149:
	movq 0x8(%r15),%r11
	movq %r11,0x78(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x90(%rbp)
	movq 0x18(%rbp),%r10
	movq 0x10(%r10),%r9
	movq %r9,0x98(%rbp)
	movq 0x8(%r10),%r9
	movq %r9,0xA0(%rbp)
	movq 0x0(%r10),%r14
	movq 0x10(%r11),%r10
	movq %r10,0xA8(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_251067
L_251150:
	movq %r15,0x0(%r11)
	movq 0x0(%r10),%r11
	cmpq $0x1,%r11
	je L_482930
L_251151:
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r11
	xorl %ecx,%ecx
	movq %r11,%r15
.p2align 0x4,,0x7
L_251153:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_482929
L_251187:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xD8B,%r11
	jne L_482928
L_251188:
	movq 0x8(%r13),%r11
	cmpq 0x0(%r13),%r14
	movq %r14,(localObjptr+0x0)(%rip)
	je L_482925
L_251154:
	incl %ecx
	movl %ecx,0x74(%rbp)
	jo L_251073
L_251155:
	cmpq $0x1,%r15
	je L_482912
L_251156:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x0)(%rip),%r14
	jmp L_251153
.p2align 0x4
L_482912:
L_251157:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_482923
.p2align 0x4,,0x7
L_251158:
	movl 0x74(%rbp),%ecx
L_251159:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_251079
L_251160:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_251162
L_251184:
	movl %ecx,0x0(%r15)
L_251162:
	movq 0xA0(%rbp),%r14
	movq 0x0(%r14),%r15
	movq $0x28DD,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0xA8(%rbp),%r11
	movq %r11,0x0(%r13)
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r15,1)
	movq %r13,0x0(%r14)
	movq $0x1313,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x1B17,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x98(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x0(%r11),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r14,0x0(%r9)
	movq %r13,0x8(%r9)
	addq $0x18,%r12
	movq %r11,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r10,%r14,1)
	movq %r9,0x0(%r11)
L_251163:
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_251166
L_251164:
	movq 0x8(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1051,%r14
	je L_482919
	cmpq $0x1052,%r14
	je L_482918
L_251165:
	movq 0x0(%r15),%r14
	movq %r14,0x78(%rbp)
L_251166:
	movq 0x90(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	movq %r11,0x98(%rbp)
	cmpq %r11,%r14
	jne L_482917
L_251168:
	testq %r11,%r11
	jnz L_482915
L_251180:
	movq (globalObjptr+0x6F30)(%rip),%r15
	movq %r15,0xA0(%rbp)
.p2align 0x4,,0x7
L_251172:
	movq $0x0,0xA8(%rbp)
.p2align 0x4,,0x7
loop_2932:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_482914
.p2align 0x4,,0x7
L_251173:
	movq 0x98(%rbp),%r15
	cmpq %r15,0xA8(%rbp)
	jl L_482913
L_251174:
	movq 0xA0(%rbp),%r15
	movq $0xAEF,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x20A5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x78(%rbp),%r15
	movq %r15,0x8(%r14)
	movq $0x6D7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x88(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x78(%rbp)
	jmp L_251130
.p2align 0x4
L_482913:
L_251175:
	movq 0xA8(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq %r15,%r14
	movq %r15,%r13
	movq %r15,%r11
	salq $0x5,%r14
	movq 0x90(%rbp),%r10
	movq 0x0(%r10,%r14,1),%r9
	movq %r9,0xB0(%rbp)
	salq $0x5,%r13
	movq 0x8(%r10,%r13,1),%r14
	movq %r14,0xD0(%rbp)
	salq $0x5,%r11
	movq 0x10(%r10,%r11,1),%r14
	movq %r14,0xB8(%rbp)
	salq $0x5,%r15
	movq 0x18(%r10,%r15,1),%r14
	movq %r14,0xC0(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0xD8(%rbp)
	addq $0xD0,%rbp
	leaq (L_251176+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp replaceScheme_0
.p2align 0x4
L_482914:
L_251177:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_251178+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251178
.p2align 0x4
.long 0x3E5D
L_251178:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	jmp L_251173
.p2align 0x4
L_482915:
L_251169:
	movq 0x98(%rbp),%rdx
	cmpq $0x7FFFFFFF,%rdx
	ja L_482916
L_251170:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x15CD,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_251171+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251171
.p2align 0x4
.long 0x3E5B
L_251171:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq %rax,0xA0(%rbp)
	jmp L_251172
.p2align 0x4
L_482916:
L_251112:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_482917:
L_251084:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_482918:
L_251182:
	movq 0x8(%r15),%r14
	movq %r14,0x78(%rbp)
	jmp L_251166
.p2align 0x4
L_482919:
L_251181:
	movq (globalObjptr+0x6F28)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_482923:
L_251185:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_251186+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251186
.p2align 0x4
.long 0x3E5E
L_251186:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	jmp L_251158
.p2align 0x4
L_482925:
L_251190:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_251079
L_251191:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_482926
L_251193:
	movl %ecx,0x0(%r14)
	movq %r11,%r15
	jmp L_251163
.p2align 0x4
L_482926:
L_251192:
	movq %r11,%r15
	jmp L_251163
.p2align 0x4
L_482928:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_251154
.p2align 0x4
L_482929:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_251154
.p2align 0x4
L_482930:
L_251194:
	xorl %ecx,%ecx
	jmp L_251159
.p2align 0x4
L_482932:
L_251146:
	movq 0x0(%r15),%r14
	movq %r14,0x98(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0xA0(%rbp)
	addq $0x98,%rbp
	leaq (L_251147+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp replaceScheme_0
.p2align 0x4
L_482933:
L_251094:
	movq 0x30(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x18(%rbp)
	cmpq %r14,%rdx
	jne L_251084
L_251096:
	cmpq $0x7FFFFFFF,%rdx
	ja L_251112
L_251097:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x6CF,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_251098+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251098
.p2align 0x4
.long 0x3E53
L_251098:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq %rax,0x20(%rbp)
	movq $0x0,0x38(%rbp)
.p2align 0x4,,0x7
loop_2931:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_482937
.p2align 0x4,,0x7
L_251099:
	movq 0x38(%rbp),%r15
	cmpq 0x18(%rbp),%r15
	jnl L_482936
L_251101:
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x30(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x58(%rbp)
	movl 0x0(%r13),%r11d
	movl %r11d,0x68(%rbp)
	movq 0x18(%r13),%r11
	movq %r11,0x70(%rbp)
	movq 0x10(%r13),%r11
	movq 0x0(%r11),%r10
	movq 0x8(%r11),%r9
	movq %r9,0x78(%rbp)
	cmpq $0x1,%r10
	jne L_482935
L_251108:
	movq $0x1,0x80(%rbp)
.p2align 0x4,,0x7
L_251104:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_482934
.p2align 0x4,,0x7
L_251105:
	movq $0x5C9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x80(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x111D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x10(%r14)
	addq $0x28,%r12
	movl 0x68(%rbp),%r15d
	movl %r15d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x58(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x70(%rbp),%r15
	movq %r15,0x18(%r14)
	movq 0x20(%rbp),%r15
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x38(%rbp),%r13
	movq %r14,0x0(%r15,%r13,8)
	incq %r13
	movq %r13,0x38(%rbp)
	jmp loop_2931
.p2align 0x4
L_482934:
L_251106:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_251107+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251107
.p2align 0x4
.long 0x3E55
L_251107:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	jmp L_251105
.p2align 0x4
L_482935:
L_251102:
	movq %r10,0x88(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x88,%rbp
	leaq (L_251103+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp replaceScheme_0
.p2align 0x4
L_482936:
L_251100:
	movq $0x6D1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x30,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x40(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x60(%rbp),%r13
	movq %r13,0x10(%r14)
	movq 0x50(%rbp),%r13
	movq %r13,0x18(%r14)
	movq 0x48(%rbp),%r13
	movq %r13,0x20(%r14)
	movq $0x196F,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	movq %r14,0x0(%rbp)
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r13)
	movq 0x28(%rbp),%r14
	movq 0x0(%r14),%r11
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r13,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r10,0x0(%r14)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_482937:
L_251109:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_251110+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251110
.p2align 0x4
.long 0x3E56
L_251110:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_251099
.p2align 0x4
L_482940:
L_251195:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_251196+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251196
.p2align 0x4
.long 0x3E5F
L_251196:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_251093
.p2align 0x4
L_482943:
L_251198:
	movq 0x68(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x40(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x70(%rbp)
	movl 0x0(%r13),%r11d
	movl %r11d,0x78(%rbp)
	movq 0x10(%r13),%r11
	movq %r11,0x90(%rbp)
	movq 0x18(%r13),%r11
	movq %r11,0x80(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x98(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0xA0(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0xA8(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0xB0(%rbp)
	addq $0x90,%rbp
	leaq (L_251199+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_122
.p2align 0x4
L_482950:
L_251210:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_251079
L_251211:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_482951
L_251213:
	movl %ecx,0x0(%r15)
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_482951:
L_251212:
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_482955:
L_251214:
	xorl %ecx,%ecx
	jmp L_251078
.p2align 0x4
L_482957:
L_251215:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_251216+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251216
.p2align 0x4
.long 0x63C
L_251216:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	jmp L_251066
.p2align 0x4
.long 0x3E5C
L_251176:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movq 0xD0(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq 0xA0(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0xA8(%rbp),%r13
	movq %r13,%r10
	salq $0x5,%r10
	movq 0xB0(%rbp),%r9
	movq %r9,0x0(%r14,%r10,1)
	movq %r14,%r10
	shrq $0x8,%r10
	movb $0x1,0x0(%r11,%r10,1)
	movq %r13,%r10
	salq $0x5,%r10
	movq %r15,0x8(%r14,%r10,1)
	movq %r14,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,%r15
	salq $0x5,%r15
	movq 0xB8(%rbp),%r10
	movq %r10,0x10(%r14,%r15,1)
	movq %r14,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,%r15
	salq $0x5,%r15
	movq 0xC0(%rbp),%r11
	movq %r11,0x18(%r14,%r15,1)
	incq %r13
	movq %r13,0xA8(%rbp)
	jmp loop_2932
.p2align 0x4
.long 0x3E59
L_251147:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x88(%rbp),%r14
	movq %r14,0x90(%rbp)
	movq %r15,0x98(%rbp)
	addq $0x90,%rbp
	leaq (L_251148+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp def_0
.p2align 0x4
.long 0x3E54
L_251103:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x80(%rbp)
	jmp L_251104
.p2align 0x4
.long 0x3E60
L_251199:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x88(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_251200
L_251201:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_251202+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251202
.p2align 0x4
.long 0x3E61
L_251202:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_251200:
	movq $0x111F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x28,%r12
	movl 0x78(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x88(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x80(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x68(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x68(%rbp)
	jmp loop_2929
.p2align 0x4
.long 0x3E5A
L_251148:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x78(%rbp)
	jmp L_251130
.text
.p2align 0x4
.globl replaceScheme_0
.hidden replaceScheme_0
replaceScheme_0:
L_251217:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_251265
L_251218:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_482963
L_251219:
	movq 0x8(%rbp),%r14
	movq 0x28(%r14),%r13
	movq %r13,0x10(%rbp)
	movq 0x20(%r14),%r13
	movq %r13,0x18(%rbp)
	movq 0x18(%r14),%r13
	movq %r13,0x20(%rbp)
	movq 0x10(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x30(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x38(%rbp)
	movq 0x0(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xE7F,%r15
	je L_482962
L_251255:
	movq 0x8(%r14),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x23DD,%r15
	je L_482961
L_251264:
	movq 0x0(%r13),%r13
	movq %r13,%r15
L_251259:
	movq 0x0(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xE7F,%r13
	je L_482960
L_251261:
	movq %r15,0x48(%rbp)
	movq 0x18(%r14),%r15
	movq %r15,0x40(%rbp)
L_251221:
	movq $0x3EE5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x50(%rbp)
	addq $0x20,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x38(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x50(%r15),%r13
	movq %r13,0x58(%rbp)
	movq 0x48(%r15),%r13
	movq %r13,0x60(%rbp)
	movq 0x40(%r15),%r13
	movq %r13,0x68(%rbp)
	movq 0x38(%r15),%r13
	movq %r13,0x70(%rbp)
	movq 0x30(%r15),%r13
	movq %r13,0x78(%rbp)
	movq 0x28(%r15),%r13
	movq %r13,0x80(%rbp)
	movq 0x20(%r15),%r13
	movq %r13,0x88(%rbp)
	movq 0x18(%r15),%r13
	movq %r13,0x90(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x98(%rbp)
	movq $0x9E7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xA0(%rbp)
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1,0xB0(%rbp)
	movl $0x0,0xB8(%rbp)
	addq $0xB0,%rbp
	leaq (L_251222+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_1
.p2align 0x4
L_482960:
L_251260:
	movq %r15,0x48(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x40(%rbp)
	jmp L_251221
.p2align 0x4
L_482961:
L_251256:
	movq 0x8(%r13),%r15
	movq 0x0(%r13),%r14
	movq $0x443,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	movq %r13,0x48(%rbp)
	addq $0x18,%r12
	addq $0x48,%rbp
	leaq (L_251257+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bound_0
.p2align 0x4
L_482962:
L_251220:
	movq 0x0(%r14),%r15
	movq %r15,0x40(%rbp)
	movq (globalObjptr+0xEF8)(%rip),%r15
	movq $0x59,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x48(%rbp)
	jmp L_251221
.p2align 0x4
L_482963:
L_251265:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_251266+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251266
.p2align 0x4
.long 0x45F
L_251266:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_251219
.p2align 0x4
.long 0x3E62
L_251222:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movq 0xB0(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq %r15,0xB0(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xB0,%rbp
	leaq (L_251223+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1265
.p2align 0x4
.long 0x12B3
L_251257:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_251258
L_251262:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_251263+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251263
.p2align 0x4
.long 0x657
L_251263:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_251258:
	movq 0x8(%rbp),%r15
	jmp L_251259
.p2align 0x4
.long 0x3E63
L_251223:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movq 0xB0(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_251224
L_251253:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_251254+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251254
.p2align 0x4
.long 0x3E6A
L_251254:
	addq $0xFFFFFFFFFFFFFF50,%rbp
L_251224:
	movq $0x2CD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x58(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x4123,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq $0xB,0x0(%r14)
	movq %r15,0x8(%r14)
	movq $0x71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xA8(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x607,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x18,%r12
	movq %r15,0x8(%r13)
	movq $0x2CD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xB0(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x71,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0xB8(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x9E9,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x70(%r11)
	addq $0x90,%r12
	movl $0x0,0x0(%r11)
	movl $0x0,0x4(%r11)
	movq 0x98(%rbp),%r13
	movq %r13,0x8(%r11)
	movq 0x90(%rbp),%r13
	movq %r13,0x10(%r11)
	movq 0x88(%rbp),%r13
	movq %r13,0x18(%r11)
	movq 0x80(%rbp),%r13
	movq %r13,0x20(%r11)
	movq 0x78(%rbp),%r13
	movq %r13,0x28(%r11)
	movq 0x70(%rbp),%r13
	movq %r13,0x30(%r11)
	movq 0x68(%rbp),%r13
	movq %r13,0x38(%r11)
	movq 0x38(%rbp),%r13
	movq %r13,0x40(%r11)
	movq 0xA0(%rbp),%r13
	movq %r13,0x48(%r11)
	movq %r13,0x50(%r11)
	movq 0x30(%rbp),%r13
	movq %r13,0x58(%r11)
	movq 0x60(%rbp),%r13
	movq %r13,0x60(%r11)
	movq 0x50(%rbp),%r13
	movq %r13,0x68(%r11)
	movq %r15,0x78(%r11)
	movq %r14,0x80(%r11)
	movq %r11,0xD0(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC8,%rbp
	leaq (L_251225+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_24
.p2align 0x4
.long 0x3E64
L_251225:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_251226
L_251251:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_251252+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251252
.p2align 0x4
.long 0x3E69
L_251252:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_251226:
	movq 0x58(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_482967
L_251227:
	movq 0x8(%r14),%r15
	movq %r15,0x60(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x68(%rbp)
L_251228:
	movq 0x68(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0xD0(%rbp)
	movq $0x3DAB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xA8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0xC8(%rbp)
	addq $0xC8,%rbp
	leaq (L_251229+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp remove_0
.p2align 0x4
L_482967:
L_251233:
	movq 0x58(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq $0x1,0x0(%r15)
	movq 0xB0(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_482968
L_251234:
	movq 0x8(%r14),%r15
	movq %r15,0x58(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x60(%rbp)
L_251235:
	movq 0x60(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0xD0(%rbp)
	movq $0x3DA3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xB8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0xC8(%rbp)
	addq $0xC8,%rbp
	leaq (L_251236+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp remove_0
.p2align 0x4
L_482968:
L_251240:
	movq 0xB0(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq $0x1,0x0(%r15)
	movq 0x48(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_482970
L_251242:
	testl %r13d,%r13d
	jz L_482969
L_251243:
	movq $0x47BD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq $0x1D01,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x30,%r12
	movl $0x1,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq $0x1,0x10(%r13)
	movq 0x50(%rbp),%r14
	movq %r14,0x18(%r13)
	movq %r15,0x20(%r13)
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_482969:
L_251244:
	movq $0x1CFF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_482970:
L_251241:
	movq (globalObjptr+0x4D8)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3E65
L_251229:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0x70(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_251230
L_251248:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_251249+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251249
.p2align 0x4
.long 0x3E68
L_251249:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_251230:
	movq 0x68(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r15
	cmpq $0x1,%r15
	je L_251233
L_251231:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x60(%rbp)
	movq %r14,0x68(%rbp)
	jmp L_251228
.p2align 0x4
.long 0x3E66
L_251236:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_251237
L_251245:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_251246+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251246
.p2align 0x4
.long 0x3E67
L_251246:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_251237:
	movq 0x60(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r15
	cmpq $0x1,%r15
	je L_251240
L_251238:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x58(%rbp)
	movq %r14,0x60(%rbp)
	jmp L_251235
.text
.p2align 0x4
.globl x_1992
.hidden x_1992
x_1992:
L_251267:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_251268
L_251337:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_251338+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251338
.p2align 0x4
.long 0x4AE
L_251338:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_251268:
	movq 0x18(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x10(%rbp),%r15
	movq 0x28(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movl 0x0(%r15),%r14d
	movl %r14d,0x50(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x70(%rbp)
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_251269+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_23
.p2align 0x4
.long 0x729
L_251269:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_251270
L_251335:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_251336+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251336
.p2align 0x4
.long 0x72C
L_251336:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_251270:
	movq 0x10(%rbp),%r14
	movq 0x0(%r14),%r13
	cmpq $0x1,%r13
	je L_251277
L_251271:
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r15,0x18(%rbp)
	movq %r13,%r15
.p2align 0x4,,0x7
L_251272:
	movq 0x18(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x106F,%r13
	je L_482990
L_251273:
	cmpq $0x1,%r15
	je L_482977
L_251274:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r14,0x18(%rbp)
	jmp L_251272
.p2align 0x4
L_482977:
L_251275:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_251277
L_251328:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_251329+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251329
.p2align 0x4
.long 0x72C
L_251329:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_251277:
	movq $0x161,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x20DF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq 0x10(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x20E5,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r10,0x0(%r13)
	movq %r15,0x10(%rbp)
L_251278:
	movq 0x10(%rbp),%r13
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_482985
L_251279:
	movq 0x8(%r11),%r14
	movq 0x0(%r11),%r13
	movq 0x8(%r13),%r10
	movq 0x10(%r13),%r9
	movq 0x58(%rbp),%r8
	movq 0x8(%r8),%rsp
	cmpq %rsp,0x8(%r9)
	jne L_482981
L_251294:
	movq 0x48(%rbp),%r15
	cmpq $0x1,%r15
	je L_482980
	cmpq $0x2,%r15
	je L_482978
L_251295:
L_251296:
	movq $0x11CD,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x30,%r12
	movl 0x50(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq 0x58(%rbp),%r15
	movq %r15,0x10(%r13)
	movq 0x60(%rbp),%r15
	movq %r15,0x18(%r13)
	movq 0x68(%rbp),%r15
	movq %r15,0x20(%r13)
	movq $0x24E9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_482978:
L_251298:
	movq 0x30(%rbp),%r13
	cmpq $0x1,0x0(%r13)
L_251300:
	movq $0x5CB,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0x53,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movl $0x0,0x0(%r11)
	movl $0x0,0x4(%r11)
	movq 0x28(%rbp),%r10
	movl 0x0(%r10),%r9d
	testl %r9d,%r9d
L_251302:
	movq $0x5CD,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r13,0x8(%r10)
	addq $0x18,%r12
	movq %r11,0x0(%r10)
	movq 0x20(%rbp),%r13
	movq 0x10(%r13),%r9
	movl 0x0(%r9),%r8d
	testl %r8d,%r8d
	jnz L_482979
L_251303:
	movl $0x1,0x0(%r11)
	xchgq %r10,%r15
	jmp L_251296
.p2align 0x4
L_482979:
	xchgq %r10,%r15
	jmp L_251296
.p2align 0x4
L_482980:
L_251297:
	xchgq %r10,%r15
	jmp L_251296
.p2align 0x4
L_482981:
L_251280:
	movq 0x40(%rbp),%r13
	movq 0x0(%r13),%r15
	movq $0x2689,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r10
	movq %r10,0x0(%r14)
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r15,1)
	movq %r14,0x0(%r13)
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_482984
	cmpq $0x2,%r14
	je L_482982
L_251281:
	movq %r11,%r15
L_251282:
	movq $0x11CD,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x30,%r12
	movl 0x50(%rbp),%r14d
	movl %r14d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq 0x58(%rbp),%r14
	movq %r14,0x10(%r13)
	movq 0x60(%rbp),%r14
	movq %r14,0x18(%r13)
	movq 0x68(%rbp),%r14
	movq %r14,0x20(%r13)
	movq $0x24E9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r15
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_482982:
L_251285:
	movq 0x30(%rbp),%r13
	cmpq $0x1,0x0(%r13)
L_251287:
	movq $0x5CB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x53,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movl $0x0,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq 0x28(%rbp),%r10
	movl 0x0(%r10),%r9d
	testl %r9d,%r9d
L_251289:
	movq $0x5CD,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x8(%r10)
	addq $0x18,%r12
	movq %r13,0x0(%r10)
	movq 0x20(%rbp),%r9
	movq 0x10(%r9),%r8
	movl 0x0(%r8),%esp
	testl %esp,%esp
	jnz L_482983
L_251290:
	movl $0x1,0x0(%r13)
	movq %r11,%r15
	xchgq %r10,%r14
	jmp L_251282
.p2align 0x4
L_482983:
	movq %r11,%r15
	xchgq %r10,%r14
	jmp L_251282
.p2align 0x4
L_482984:
L_251284:
	movq (globalObjptr+0x4DA8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_482985:
L_251307:
	movq 0x58(%rbp),%r15
	movl 0x0(%r15),%r14d
	testl %r14d,%r14d
	jz new_49
L_251321:
	movq 0x38(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x98(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x70(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x80(%rbp)
	movq %r14,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_251322+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_0
.p2align 0x4
new_49:
new_15:
	movq 0x40(%rbp),%r14
	movq 0x0(%r14),%r15
	movq $0x2689,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x10(%rbp),%r11
	movq %r11,0x0(%r13)
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	movq 0x48(%rbp),%r15
	cmpq $0x1,%r15
	je L_251284
	cmpq $0x2,%r15
	je L_482986
L_251309:
L_251310:
	movq $0x11CD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x30,%r12
	movl 0x50(%rbp),%r15d
	movl %r15d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x58(%rbp),%r15
	movq %r15,0x10(%r14)
	movq 0x60(%rbp),%r15
	movq %r15,0x18(%r14)
	movq 0x68(%rbp),%r15
	movq %r15,0x20(%r14)
	movq $0x24E9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_482986:
L_251312:
	movq 0x30(%rbp),%r14
	cmpq $0x1,0x0(%r14)
L_251314:
	movq $0x5CB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x53,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movl $0x0,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq 0x28(%rbp),%r11
	movl 0x0(%r11),%r10d
	testl %r10d,%r10d
L_251316:
	movq $0x5CD,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x8(%r11)
	addq $0x18,%r12
	movq %r13,0x0(%r11)
	movq 0x20(%rbp),%r14
	movq 0x10(%r14),%r10
	movl 0x0(%r10),%r9d
	testl %r9d,%r9d
	jnz L_482987
L_251317:
	movl $0x1,0x0(%r13)
	xchgq %r11,%r15
	jmp L_251310
.p2align 0x4
L_482987:
	xchgq %r11,%r15
	jmp L_251310
.p2align 0x4
L_482990:
L_251330:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_251331
L_251332:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_251333+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251333
.p2align 0x4
.long 0x72D
L_251333:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_251331:
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	jmp L_251278
.p2align 0x4
.long 0x72A
L_251322:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movb 0x90(%rbp),%r15b
	movb %r15b,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_251323
L_251326:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_251327+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251327
.p2align 0x4
.long 0x72B
L_251327:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_251323:
	movb 0x38(%rbp),%r15b
	testb %r15b,%r15b
	jz new_15
L_251325:
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x20E7,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x0(%r15)
	movq $0x1943,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x80(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	movq %r13,0x8(%r10)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%r11,%r15,1)
	movq %r10,0x0(%r14)
	jmp new_15
.text
.p2align 0x4
.globl elabDec_0
.hidden elabDec_0
elabDec_0:
L_251339:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_253896
L_251340:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_483302
L_251341:
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x4D8(%rbp)
	movq $0x1F1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x4E0(%rbp)
	addq $0x18,%r12
	movq %r15,0x0(%r13)
	movq 0x18(%rbp),%r11
	movq %r11,0x8(%r13)
	movq $0x40ED,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x18,%r12
	movq 0x20(%rbp),%r10
	movq %r10,0x0(%r11)
	movq 0x28(%rbp),%r10
	movq %r10,0x8(%r11)
	movq $0x1EF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r10,0x4E8(%rbp)
	movq %r11,0x0(%r10)
	addq $0x10,%r12
	movq 0x50(%rbp),%r11
	movq 0x10(%r11),%r9
	movq 0x0(%r9),%r11
	movl 0x0(%r11),%r8d
	incl %r8d
	jo L_251342
L_251343:
	movq $0x47C7,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,0x4F0(%rbp)
	addq $0x40,%r12
	movq %r10,0x0(%r11)
	movq 0x38(%rbp),%r10
	movq %r10,0x8(%r11)
	movq 0x40(%rbp),%r10
	movq %r10,0x10(%r11)
	movq 0x48(%rbp),%r10
	movq %r10,0x18(%r11)
	movq %r13,0x20(%r11)
	movq %r14,0x28(%r11)
	movq 0x30(%rbp),%r14
	movq %r14,0x30(%r11)
	movq $0x1F5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %r8d,0x0(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r11,0x8(%r14)
	movq %r9,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r9)
	movq 0x8(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%rax
	shrq $0x1,%rax
	subq $0xE0E,%rax
	cmpq $0x9,%rax
	ja L_482995
	leaq jumpTable_741(%rip),%rbx
	jmp *(%rbx,%rax,8)
.data
.p2align 0x4
jumpTable_741:
.quad L_483291,L_483287,L_483263,L_483242,L_483241,L_483138,L_483134,L_483128,L_483126,L_483125
.text
.p2align 0x4
L_482995:
L_251344:
	movq 0x10(%r14),%r15
	movq %r15,0x4F8(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x500(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x508(%rbp)
	movq 0x128(%rbp),%r14
	movq 0x88(%r14),%r13
	movq 0x78(%r14),%r11
	movq %r11,0x510(%rbp)
	movq 0x70(%r14),%r11
	movq %r11,0x518(%rbp)
	movq 0x60(%r14),%r11
	movq %r11,0x520(%rbp)
	movq 0x58(%r14),%r11
	movq %r11,0x528(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x530(%rbp)
	movq 0x80(%r14),%r11
	movq 0x10(%r11),%r10
	movq 0x0(%r10),%r14
	movl 0x0(%r14),%r11d
	incl %r11d
	jo L_251342
L_251345:
	movq $0x1F5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %r11d,0x0(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq 0x4F0(%rbp),%r11
	movq %r11,0x8(%r14)
	movq %r10,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r11,1)
	movq %r14,0x0(%r10)
	movq 0x0(%r13),%r14
	movq %r14,0x538(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x4(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_251347
L_251348:
	cmpl $0x0,%r13d
	jl L_251642
L_251349:
	movl $0x0,0x184(%rbp)
.p2align 0x4,,0x7
loop_2933:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_483121
.p2align 0x4,,0x7
L_251350:
	movl 0x184(%rbp),%r13d
	cmpl 0x4(%rbp),%r13d
	jnl L_483006
L_252077:
	movslq %r13d,%r15
	movq 0x510(%rbp),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x4F0(%rbp)
	movq 0x500(%rbp),%r13
	movq 0x0(%r13,%r15,8),%r11
	movq 0x8(%r11),%r10
	movq 0x8(%r10),%r9
	movq %r9,0x540(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_483005
L_252078:
	movq %r15,0x0(%r13)
	movq 0x0(%r9),%r13
	cmpq $0x1,%r13
	je L_483004
L_252079:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_252081:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_252082
L_252094:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xCCF,%r13
	je L_483000
L_252082:
	incl %ecx
	movl %ecx,0x548(%rbp)
	jo L_482999
L_252083:
	cmpq $0x1,%r15
	je L_482996
L_252084:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_252081
.p2align 0x4
L_482996:
L_252085:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_482998
.p2align 0x4,,0x7
L_252086:
	movl 0x548(%rbp),%ecx
L_252087:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_482997
L_252088:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl now_4
L_252091:
	movl %ecx,0x0(%r15)
now_4:
	movq 0x4F0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x1F7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x199F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq 0x540(%rbp),%r15
	movq 0x0(%r15),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq %r11,0x0(%r15)
L_252090:
	incl 0x184(%rbp)
	jmp loop_2933
.p2align 0x4
L_482997:
L_251777:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_482998:
L_252092:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x558,%rbp
	leaq (L_252093+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252093
.p2align 0x4
.long 0x3ED4
L_252093:
	addq $0xFFFFFFFFFFFFFAA8,%rbp
	jmp L_252086
.p2align 0x4
L_482999:
L_251342:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_483000:
L_252095:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_251777
L_252096:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_252090
L_252098:
	movl %ecx,0x0(%r15)
	jmp L_252090
.p2align 0x4
L_483004:
L_252099:
	xorl %ecx,%ecx
	jmp L_252087
.p2align 0x4
L_483005:
L_251766:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_483006:
L_251351:
	movq 0x518(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r15,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq $0x1,0x0(%r15)
	movq $0x182B,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x38(%r11)
	addq $0x48,%r12
	movq 0x530(%rbp),%r14
	movq %r14,0x0(%r11)
	movq 0x528(%rbp),%r14
	movq %r14,0x8(%r11)
	movq 0x538(%rbp),%r14
	movq %r14,0x10(%r11)
	movq 0x510(%rbp),%r14
	movq %r14,0x18(%r11)
	movq 0x500(%rbp),%r14
	movq %r14,0x20(%r11)
	movq %r15,0x28(%r11)
	movq 0x520(%rbp),%r15
	movq %r15,0x30(%r11)
	movq %r11,0x4F0(%rbp)
	movq 0x4F8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r11d
	movslq %r11d,%r10
	movq %r10,0x540(%rbp)
	cmpq %r10,%r14
	jne L_251347
L_251353:
	testq %r10,%r10
	jz L_483119
L_251354:
	cmpq $0x7FFFFFFF,%r10
	ja L_251549
L_251355:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_251356
L_252073:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x550,%rbp
	leaq (L_252074+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252074
.p2align 0x4
.long 0x3E6B
L_252074:
	addq $0xFFFFFFFFFFFFFAB0,%rbp
L_251356:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x162F,%rcx
	movq 0x540(%rbp),%rdx
	movq $0x58,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x550,%rbp
	leaq (L_251357+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251357
.p2align 0x4
.long 0x3E6B
L_251357:
	addq $0xFFFFFFFFFFFFFAB0,%rbp
	movq %rax,0x500(%rbp)
L_251358:
	movq $0x0,0x510(%rbp)
loop_2934:
	movq 0x540(%rbp),%r15
	cmpq %r15,0x510(%rbp)
	jl L_483108
L_251359:
	movq 0x500(%rbp),%r15
	movq $0x1831,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0xF7B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x2957,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x130(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r15,0x4F8(%rbp)
	movq $0x249,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x510(%rbp)
	addq $0x10,%r12
	movq 0x178(%rbp),%r15
	movq 0x1E0(%r15),%r14
	movq %r14,0x518(%rbp)
	movq 0x1D8(%r15),%r14
	movq %r14,0x520(%rbp)
	movq 0x1D0(%r15),%r14
	movq %r14,0x528(%rbp)
	movq 0x1C8(%r15),%r14
	movq %r14,0x530(%rbp)
	movq 0x1C0(%r15),%r14
	movq %r14,0x538(%rbp)
	movq 0x1B8(%r15),%r14
	movq %r14,0x540(%rbp)
	movq 0x1B0(%r15),%r14
	movq %r14,0x548(%rbp)
	movq 0x1A8(%r15),%r14
	movq %r14,0x550(%rbp)
	movq 0x1A0(%r15),%r14
	movq %r14,0x558(%rbp)
	movq 0x198(%r15),%r14
	movq %r14,0x560(%rbp)
	movq 0x190(%r15),%r14
	movq %r14,0x568(%rbp)
	movq 0x188(%r15),%r14
	movq %r14,0x570(%rbp)
	movq 0x180(%r15),%r14
	movq %r14,0x578(%rbp)
	movq 0x178(%r15),%r14
	movq %r14,0x580(%rbp)
	movq 0x170(%r15),%r14
	movq %r14,0x588(%rbp)
	movq 0x168(%r15),%r14
	movq %r14,0x590(%rbp)
	movq 0x160(%r15),%r14
	movq %r14,0x598(%rbp)
	movq 0x158(%r15),%r14
	movq %r14,0x5A0(%rbp)
	movq 0x150(%r15),%r14
	movq %r14,0x5A8(%rbp)
	movq 0x148(%r15),%r14
	movq %r14,0x5B0(%rbp)
	movq 0x140(%r15),%r14
	movq %r14,0x5B8(%rbp)
	movq 0x138(%r15),%r14
	movq %r14,0x5C0(%rbp)
	movq 0x130(%r15),%r14
	movq %r14,0x5C8(%rbp)
	movq 0x128(%r15),%r14
	movq %r14,0x5D0(%rbp)
	movq 0x120(%r15),%r14
	movq %r14,0x5D8(%rbp)
	movq 0x118(%r15),%r14
	movq %r14,0x5E0(%rbp)
	movq 0x110(%r15),%r14
	movq %r14,0x5E8(%rbp)
	movq 0x108(%r15),%r14
	movq %r14,0x5F0(%rbp)
	movq 0x100(%r15),%r14
	movq %r14,0x5F8(%rbp)
	movq 0xF8(%r15),%r14
	movq %r14,0x600(%rbp)
	movq 0xF0(%r15),%r14
	movq %r14,0x608(%rbp)
	movq 0xD0(%r15),%r14
	movq %r14,0x610(%rbp)
	movq 0xC8(%r15),%r14
	movq %r14,0x618(%rbp)
	movq 0xC0(%r15),%r14
	movq %r14,0x620(%rbp)
	movq 0xB8(%r15),%r14
	movq %r14,0x628(%rbp)
	movq 0xB0(%r15),%r14
	movq %r14,0x630(%rbp)
	movq 0xA8(%r15),%r14
	movq %r14,0x638(%rbp)
	movq 0xA0(%r15),%r14
	movq %r14,0x640(%rbp)
	movq 0x98(%r15),%r14
	movq %r14,0x648(%rbp)
	movq 0x90(%r15),%r14
	movq %r14,0x650(%rbp)
	movq 0x88(%r15),%r14
	movq %r14,0x658(%rbp)
	movq 0x80(%r15),%r14
	movq %r14,0x660(%rbp)
	movq 0x78(%r15),%r14
	movq %r14,0x668(%rbp)
	movq 0x70(%r15),%r14
	movq %r14,0x670(%rbp)
	movq 0x68(%r15),%r14
	movq %r14,0x678(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x680(%rbp)
	movq 0x60(%r15),%r14
	movq %r14,0x688(%rbp)
	movq 0x58(%r15),%r14
	movq %r14,0x690(%rbp)
	movq 0x50(%r15),%r14
	movq %r14,0x698(%rbp)
	movq 0x48(%r15),%r14
	movq %r14,0x6A0(%rbp)
	movq 0x40(%r15),%r14
	movq %r14,0x6A8(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x6B0(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x6B8(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x6C0(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x6C8(%rbp)
	movq $0xC79,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq %r15,0x6D0(%rbp)
	movq 0x508(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	movq %r11,0x6D8(%rbp)
	cmpq %r14,%r11
	jne L_251347
L_251361:
	testq %r11,%r11
	jz L_483106
L_251362:
	cmpq $0x7FFFFFFF,%r11
	ja L_251549
L_251363:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_251364
L_251994:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x6E8,%rbp
	leaq (L_251995+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251995
.p2align 0x4
.long 0x3E6C
L_251995:
	addq $0xFFFFFFFFFFFFF918,%rbp
L_251364:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1631,%rcx
	movq 0x6D8(%rbp),%rdx
	movq $0x10,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x6E8,%rbp
	leaq (L_251365+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251365
.p2align 0x4
.long 0x3E6C
L_251365:
	addq $0xFFFFFFFFFFFFF918,%rbp
	movq %rax,0x6E0(%rbp)
L_251366:
	movq $0x0,0x6E8(%rbp)
loop_2935:
	movq 0x6D8(%rbp),%r15
	cmpq %r15,0x6E8(%rbp)
	jl L_483103
L_251367:
	movq 0x6E0(%rbp),%r15
	movq $0x1833,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	movq %r11,0x508(%rbp)
	cmpq %r11,%r14
	jne L_251347
L_251369:
	testq %r11,%r11
	jz L_483101
L_251370:
	cmpq $0x7FFFFFFF,%r11
	ja L_251549
L_251371:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_251372
L_251924:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x6F0,%rbp
	leaq (L_251925+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251925
.p2align 0x4
.long 0x3E6D
L_251925:
	addq $0xFFFFFFFFFFFFF910,%rbp
L_251372:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1633,%rcx
	movq 0x508(%rbp),%rdx
	movq $0x10,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x6F0,%rbp
	leaq (L_251373+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251373
.p2align 0x4
.long 0x3E6D
L_251373:
	addq $0xFFFFFFFFFFFFF910,%rbp
	movq %rax,0x510(%rbp)
L_251374:
	movq $0x0,0x6D8(%rbp)
loop_2936:
	movq 0x508(%rbp),%r15
	cmpq %r15,0x6D8(%rbp)
	jl L_483098
L_251375:
	movq 0x510(%rbp),%r15
	movq $0x1835,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x28(%rbp)
	cmpq %r14,%rdx
	jne L_251347
L_251377:
	cmpq $0x0,%rdx
	sete %bl
	movzbl %bl,%ebx
	movl %ebx,0x4(%rbp)
	je L_483096
L_251378:
	cmpq $0x7FFFFFFF,%rdx
	ja L_251549
L_251379:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1635,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x6E0,%rbp
	leaq (L_251380+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251380
.p2align 0x4
.long 0x3E6E
L_251380:
	addq $0xFFFFFFFFFFFFF920,%rbp
	movq %rax,0x38(%rbp)
L_251381:
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2937:
	cmpq 0x28(%rbp),%r15
	jnl L_483007
L_251817:
	movl %r15d,%r14d
	movslq %r14d,%r13
	imulq $0x18,%r13
	movq 0x510(%rbp),%r14
	movq 0x10(%r14,%r13,1),%r11
	movq 0x38(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r11,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_2937
.p2align 0x4
L_483007:
L_251382:
	movq 0x38(%rbp),%r15
	movq $0x1837,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq %r14,0x40(%rbp)
	movl %r14d,%r15d
	movslq %r15d,%r13
	cmpq %r14,%r13
	jne L_251347
L_251384:
	testl %r15d,%r15d
	jz L_483093
L_251385:
	cmpl $0x0,%r15d
	movl %r15d,(localWord32+0x0)(%rip)
	jl L_251642
L_251386:
	xorl %ecx,%ecx
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_2938:
	cmpl (localWord32+0x0)(%rip),%ebx
	jnl L_483010
L_251811:
	movslq %ebx,%r15
	movq 0x38(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r11
	movl %r11d,%r10d
	movslq %r10d,%r9
	cmpq %r11,%r9
	jne L_483009
L_251813:
	addl %ecx,%r10d
	jo L_251342
L_251814:
	incl %ebx
	movl %r10d,%ecx
	jmp loop_2938
.p2align 0x4
L_483009:
L_251347:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_483010:
L_251387:
	cmpq $0x0,0x40(%rbp)
	jna L_251389
L_251390:
	movq 0x38(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	movslq %ecx,%rdx
	movq %rdx,0x50(%rbp)
	testq %rdx,%rdx
	jz L_483090
L_251391:
	cmpq $0x7FFFFFFF,%rdx
	ja L_251549
L_251392:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x15E5,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x6E0,%rbp
	leaq (L_251393+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251393
.p2align 0x4
.long 0x3E6F
L_251393:
	addq $0xFFFFFFFFFFFFF920,%rbp
	movq %rax,%r15
L_251394:
	xorl %ecx,%ecx
	movq 0x48(%rbp),%r13
	xorl %ebx,%ebx
	xorq %r14,%r14
.p2align 0x4,,0x7
loop_2939:
	cmpq 0x50(%rbp),%r14
	jnl L_483016
.p2align 0x4,,0x7
loop_2956:
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r11
	movl %r11d,%r10d
	movslq %r10d,%r9
	cmpq %r11,%r9
	jne L_251347
L_251801:
	cmpl %r10d,%ecx
	jl L_483013
L_251802:
	incl %ebx
	jo L_251342
L_251803:
	movslq %ebx,%r11
	cmpq 0x40(%rbp),%r11
	jnb L_483011
L_251805:
	movq 0x38(%rbp),%r10
	movq 0x0(%r10,%r11,8),%r13
	xorl %ecx,%ecx
	jmp loop_2956
.p2align 0x4
L_483011:
L_251389:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_483013:
L_251806:
	movslq %ecx,%r10
	cmpq %r11,%r10
	jnb L_251389
L_251808:
	movq 0x0(%r13,%r10,8),%r11
	incl %ecx
	movq %r15,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r11,0x0(%r15,%r14,8)
	incq %r14
	jmp loop_2939
.p2align 0x4
L_483016:
L_251395:
	movq $0x1139,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x38(%rbp)
L_251396:
	movq 0x38(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x40(%rbp)
	cmpq %r14,%rdx
	jne L_251347
L_251398:
	testq %rdx,%rdx
	jz L_483087
L_251399:
	cmpq $0x7FFFFFFF,%rdx
	ja L_251549
L_251400:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1637,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x6E0,%rbp
	leaq (L_251401+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251401
.p2align 0x4
.long 0x3E70
L_251401:
	addq $0xFFFFFFFFFFFFF920,%rbp
	movq %rax,0x48(%rbp)
L_251402:
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2940:
	cmpq 0x40(%rbp),%r15
	jnl L_483017
L_251796:
	movl %r15d,%r14d
	movq %r15,%r13
	movq %r15,%r11
	movslq %r14d,%r10
	movq 0x38(%rbp),%r14
	movq 0x0(%r14,%r10,8),%r9
	movq 0x48(%rbp),%r14
	movq %r14,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r10,1)
	salq $0x4,%r13
	movq (globalObjptr+0xB40)(%rip),%r10
	movq %r10,0x0(%r14,%r13,1)
	movq %r14,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%r8,%r13,1)
	salq $0x4,%r11
	movq %r9,0x8(%r14,%r11,1)
	incq %r15
	jmp loop_2940
.p2align 0x4
L_483017:
L_251403:
	movq 0x48(%rbp),%r15
	movq $0x961,0xFFFFFFFFFFFFFFF8(%r15)
	movl 0x4(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_483085
L_251404:
	movq 0x28(%rbp),%rdx
	cmpq $0x7FFFFFFF,%rdx
	ja L_251549
L_251405:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x15D1,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x6E0,%rbp
	leaq (L_251406+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251406
.p2align 0x4
.long 0x3E71
L_251406:
	addq $0xFFFFFFFFFFFFF920,%rbp
	movq %rax,0x38(%rbp)
L_251407:
	movq $0x0,0x40(%rbp)
.p2align 0x4,,0x7
loop_2941:
	movq 0x40(%rbp),%r15
	cmpq 0x28(%rbp),%r15
	jnl L_483033
L_251759:
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq %r15,%r14
	movq %r15,%r13
	imulq $0x18,%r14
	movq 0x510(%rbp),%r11
	movq 0x0(%r11,%r14,1),%r10
	movq %r10,0x50(%rbp)
	imulq $0x18,%r13
	movq 0x8(%r11,%r13,1),%r14
	movq %r14,0x78(%rbp)
	imulq $0x18,%r15
	movq 0x10(%r11,%r15,1),%r14
	movq %r14,0x80(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movl %r13d,0x4(%rbp)
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_251347
L_251761:
	cmpl $0x0,%r13d
	jl L_483031
L_251762:
	movl $0x0,0x88(%rbp)
loop_2955:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_483030
.p2align 0x4,,0x7
L_251763:
	movl 0x4(%rbp),%r15d
	cmpl %r15d,0x88(%rbp)
	jl L_483018
L_251764:
	movq 0x38(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x40(%rbp),%r14
	movq %r14,%r11
	salq $0x4,%r11
	movq 0x50(%rbp),%r10
	movq %r10,0x0(%r15,%r11,1)
	movq %r15,%r11
	shrq $0x8,%r11
	movb $0x1,0x0(%r13,%r11,1)
	movq %r14,%r13
	salq $0x4,%r13
	movq 0x78(%rbp),%r11
	movq %r11,0x8(%r15,%r13,1)
	incq %r14
	movq %r14,0x40(%rbp)
	jmp loop_2941
.p2align 0x4
L_483018:
L_251765:
	movslq 0x88(%rbp),%r15
	movq 0x80(%rbp),%r13
	movq 0x0(%r13,%r15,8),%r11
	movq 0x8(%r11),%r10
	movq 0x10(%r10),%r9
	movq %r9,0x90(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_251766
L_251767:
	movq %r15,0x0(%r13)
	movq 0x0(%r9),%r13
	cmpq $0x1,%r13
	je L_483028
L_251768:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_251770:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_251771
L_251785:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xD66,%r13
	je L_483024
L_251771:
	incl %ecx
	movl %ecx,0x8C(%rbp)
	jo L_251342
L_251772:
	cmpq $0x1,%r15
	je L_483019
L_251773:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_251770
.p2align 0x4
L_483019:
L_251774:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_483022
.p2align 0x4,,0x7
L_251775:
	movl 0x8C(%rbp),%ecx
L_251776:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_251777
L_251778:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_251780
L_251782:
	movl %ecx,0x0(%r15)
L_251780:
	movq $0x1355,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x1ACD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq 0x90(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r10,0x0(%r13)
L_251781:
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq $0x1,0x0(%r15)
	incl 0x88(%rbp)
	jmp loop_2955
.p2align 0x4
L_483022:
L_251783:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x6E0,%rbp
	leaq (L_251784+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251784
.p2align 0x4
.long 0x3EAC
L_251784:
	addq $0xFFFFFFFFFFFFF920,%rbp
	jmp L_251775
.p2align 0x4
L_483024:
L_251786:
	movq 0x0(%r14),%r15
	movslq %ecx,%r14
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r14
	jo L_251777
L_251787:
	movq %r14,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_251781
L_251789:
	movl %ecx,0x0(%r14)
	jmp L_251781
.p2align 0x4
L_483028:
L_251790:
	xorl %ecx,%ecx
	jmp L_251776
.p2align 0x4
L_483030:
L_251791:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x6E0,%rbp
	leaq (L_251792+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251792
.p2align 0x4
.long 0x3EAD
L_251792:
	addq $0xFFFFFFFFFFFFF920,%rbp
	jmp L_251763
.p2align 0x4
L_483031:
L_251642:
	movq (globalObjptr+0x4F8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_483033:
L_251408:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_251409
L_251757:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r14d
	movl %r14d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r14
	movq %r14,%rdi
	xorq %rax,%rax
	addq $0x6E0,%rbp
	leaq (L_251758+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251758
.p2align 0x4
.long 0x3E72
L_251758:
	addq $0xFFFFFFFFFFFFF920,%rbp
L_251409:
	movq 0x38(%rbp),%r15
	movq $0xB33,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x500(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	movq %r11,0x28(%rbp)
	cmpq %r11,%r14
	jne L_251347
L_251411:
	testq %r11,%r11
	jz L_483081
L_251412:
	cmpq $0x7FFFFFFF,%r11
	ja L_251549
L_251413:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_251414
L_251753:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x6E0,%rbp
	leaq (L_251754+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251754
.p2align 0x4
.long 0x3E72
L_251754:
	addq $0xFFFFFFFFFFFFF920,%rbp
L_251414:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1639,%rcx
	movq 0x28(%rbp),%rdx
	movq $0x10,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x6E0,%rbp
	leaq (L_251415+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251415
.p2align 0x4
.long 0x3E72
L_251415:
	addq $0xFFFFFFFFFFFFF920,%rbp
	movq %rax,0x40(%rbp)
L_251416:
	movq $0x0,0x50(%rbp)
loop_2942:
	movq 0x28(%rbp),%rdx
	cmpq %rdx,0x50(%rbp)
	jl L_483078
L_251417:
	movq 0x40(%rbp),%r15
	movq $0x1839,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x28(%rbp)
	cmpq %r14,%rdx
	jne L_251347
L_251419:
	cmpq $0x0,%rdx
	sete %bl
	movzbl %bl,%ebx
	movl %ebx,0x4(%rbp)
	je L_483076
L_251420:
	cmpq $0x7FFFFFFF,%rdx
	ja L_251549
L_251421:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x163B,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x508,%rbp
	leaq (L_251422+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251422
.p2align 0x4
.long 0x3E73
L_251422:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq %rax,0x50(%rbp)
L_251423:
	movq $0x0,0x78(%rbp)
.p2align 0x4,,0x7
loop_2943:
	movq 0x78(%rbp),%r15
	cmpq 0x28(%rbp),%r15
	jnl L_483038
L_251646:
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq %r15,%r14
	imulq $0x28,%r14
	movq 0x40(%rbp),%r13
	movq 0x18(%r13,%r14,1),%r11
	movq %r11,0x80(%rbp)
	imulq $0x28,%r15
	movq 0x20(%r13,%r15,1),%r14
	movq %r14,0x88(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	movq %r11,0x90(%rbp)
	cmpq %r15,%r11
	jne L_251347
L_251648:
	testq %r11,%r11
	jnz L_483035
L_251660:
	movq (globalObjptr+0x6E08)(%rip),%r15
	movq %r15,0x98(%rbp)
.p2align 0x4,,0x7
L_251652:
	movq $0x0,0xA0(%rbp)
.p2align 0x4,,0x7
loop_2954:
	movq 0x90(%rbp),%r15
	cmpq %r15,0xA0(%rbp)
	jl L_483034
L_251653:
	movq 0x98(%rbp),%r15
	movq $0x961,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x78(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x78(%rbp)
	jmp loop_2943
.p2align 0x4
L_483034:
L_251654:
	movq 0xA0(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x88(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0xA8(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x508(%rbp)
	movq 0x200(%rbp),%r15
	movq %r15,0x510(%rbp)
	addq $0x508,%rbp
	leaq (L_251655+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp isExpansive_0
.p2align 0x4
L_483035:
L_251649:
	movq 0x90(%rbp),%rdx
	cmpq $0x7FFFFFFF,%rdx
	ja L_483036
L_251650:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1637,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x508,%rbp
	leaq (L_251651+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251651
.p2align 0x4
.long 0x3E93
L_251651:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq %rax,0x98(%rbp)
	jmp L_251652
.p2align 0x4
L_483036:
L_251549:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_483038:
L_251424:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_251425
L_251644:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r14d
	movl %r14d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r14
	movq %r14,%rdi
	xorq %rax,%rax
	addq $0x508,%rbp
	leaq (L_251645+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251645
.p2align 0x4
.long 0x3E92
L_251645:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
L_251425:
	movq 0x50(%rbp),%r15
	movq $0x183B,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq %r14,0x78(%rbp)
	movl %r14d,%r15d
	movslq %r15d,%r13
	cmpq %r14,%r13
	jne L_251347
L_251427:
	testl %r15d,%r15d
	jz L_483072
L_251428:
	cmpl $0x0,%r15d
	movl %r15d,(localWord32+0x0)(%rip)
	jl L_251642
L_251429:
	xorl %ecx,%ecx
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_2944:
	cmpl (localWord32+0x0)(%rip),%ebx
	jnl L_483041
L_251637:
	movslq %ebx,%r15
	movq 0x50(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r11
	movl %r11d,%r10d
	movslq %r10d,%r9
	cmpq %r9,%r11
	jne L_251347
L_251639:
	addl %ecx,%r10d
	jo L_251342
L_251640:
	incl %ebx
	movl %r10d,%ecx
	jmp loop_2944
.p2align 0x4
L_483041:
L_251430:
	cmpq $0x0,0x78(%rbp)
	jna L_251389
L_251432:
	movq 0x50(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x80(%rbp)
	movslq %ecx,%rdx
	movq %rdx,0x88(%rbp)
	testq %rdx,%rdx
	jz L_483069
L_251433:
	cmpq $0x7FFFFFFF,%rdx
	ja L_251549
L_251434:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1637,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x508,%rbp
	leaq (L_251435+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251435
.p2align 0x4
.long 0x3E74
L_251435:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq %rax,0x90(%rbp)
L_251436:
	xorl %ecx,%ecx
	movq 0x80(%rbp),%r14
	xorl %ebx,%ebx
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2945:
	cmpq 0x88(%rbp),%r15
	jnl L_483047
.p2align 0x4,,0x7
loop_2953:
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r10,%r13
	jne L_251347
L_251627:
	cmpl %r11d,%ecx
	jl L_483044
L_251628:
	incl %ebx
	jo L_251342
L_251629:
	movslq %ebx,%r13
	cmpq 0x78(%rbp),%r13
	jnb L_251389
L_251631:
	movq 0x50(%rbp),%r11
	movq 0x0(%r11,%r13,8),%r14
	xorl %ecx,%ecx
	jmp loop_2953
.p2align 0x4
L_483044:
L_251632:
	movslq %ecx,%r11
	cmpq %r13,%r11
	jnb L_251389
L_251634:
	movq %r11,%r13
	movq %r15,%r10
	movq %r15,%r9
	salq $0x4,%r13
	movq 0x0(%r14,%r13,1),%r8
	salq $0x4,%r11
	movq 0x8(%r14,%r11,1),%r13
	incl %ecx
	movq 0x90(%rbp),%r11
	movq %r11,%rsp
	shrq $0x8,%rsp
	movq (gcState+0x3C8)(%rip),%rsi
	movq %rsp,%rax
	movb $0x1,0x0(%rsi,%rax,1)
	salq $0x4,%r10
	movq %r8,0x0(%r11,%r10,1)
	movq %r11,%r10
	shrq $0x8,%r10
	movb $0x1,0x0(%rsi,%r10,1)
	salq $0x4,%r9
	movq %r13,0x8(%r11,%r9,1)
	incq %r15
	jmp loop_2945
.p2align 0x4
L_483047:
L_251437:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_251438
L_251623:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x508,%rbp
	leaq (L_251624+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251624
.p2align 0x4
.long 0x3E91
L_251624:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
L_251438:
	movq 0x90(%rbp),%r15
	movq $0x961,0xFFFFFFFFFFFFFFF8(%r15)
L_251439:
	movq $0x2539,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq 0x48(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq %r14,0x48(%rbp)
	movq $0x1,0x78(%rbp)
.p2align 0x4,,0x7
L_251440:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_483066
.p2align 0x4,,0x7
L_251441:
	movq 0x50(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq $0xF69,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x18,%r12
	movq %r15,0x8(%r13)
	movq $0x2973,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r13,0x0(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_483048
L_251442:
	movq %r15,0x78(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	movq %r15,0x50(%rbp)
	jmp L_251440
.p2align 0x4
L_483048:
L_251443:
	movq %r13,0x50(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq $0x1,0x78(%rbp)
.p2align 0x4,,0x7
L_251444:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_483065
.p2align 0x4,,0x7
L_251445:
	movq $0x2973,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_483049
L_251446:
	movq %r15,0x78(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	movq %r15,0x50(%rbp)
	jmp L_251444
.p2align 0x4
L_483049:
L_251447:
	movq 0x78(%rbp),%r13
	cmpq $0x1,%r13
	je L_483060
L_251448:
	movq 0x50(%rbp),%r11
	xorq %r15,%r15
	xchgq %r11,%r14
.p2align 0x4,,0x7
L_251449:
	addq 0x0(%r14),%r15
	movq %r15,0x48(%rbp)
	cmpq $0x1,%r13
	je L_483050
L_251450:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	jmp L_251449
.p2align 0x4
L_483050:
L_251451:
	testq %r15,%r15
	jz L_483059
L_251452:
	cmpq $0x7FFFFFFF,%r15
	ja L_251549
L_251453:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1637,%rcx
	movq %r15,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x508,%rbp
	leaq (L_251454+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251454
.p2align 0x4
.long 0x3E75
L_251454:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq %rax,%r15
L_251455:
	movq 0x78(%rbp),%r10
	movq 0x50(%rbp),%r11
	xorq %r13,%r13
	xorq %r14,%r14
.p2align 0x4,,0x7
loop_2946:
	cmpq 0x48(%rbp),%r14
	jnl L_483053
.p2align 0x4,,0x7
loop_2951:
	cmpq 0x0(%r11),%r13
	jl L_483052
L_251602:
	cmpq $0x1,%r10
	je L_483051
L_251603:
	movq 0x0(%r10),%r9
	movq 0x8(%r10),%r10
	xorq %r13,%r13
	movq %r9,%r11
	jmp loop_2951
.p2align 0x4
L_483051:
L_251604:
	movq (globalObjptr+0x5B8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_483052:
L_251605:
	movq %r13,%r9
	movq %r13,%r8
	movq %r14,%rsp
	movq %r14,%rsi
	salq $0x4,%r9
	movq 0x8(%r11),%rdi
	movq 0x0(%rdi,%r9,1),%rdx
	salq $0x4,%r8
	movq 0x8(%rdi,%r8,1),%r9
	incq %r13
	movq %r15,%r8
	shrq $0x8,%r8
	movq (gcState+0x3C8)(%rip),%rdi
	movb $0x1,0x0(%rdi,%r8,1)
	salq $0x4,%rsp
	movq %rsp,%rax
	movq %rdx,0x0(%r15,%rax,1)
	movq %r15,%r8
	shrq $0x8,%r8
	movb $0x1,0x0(%rdi,%r8,1)
	salq $0x4,%rsi
	movq %r9,0x8(%r15,%rsi,1)
	incq %r14
	jmp loop_2946
.p2align 0x4
L_483053:
L_251456:
	movq $0x961,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x48(%rbp)
L_251457:
	movq 0x48(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x78(%rbp)
	movl %r13d,0x50(%rbp)
	cmpq %rdx,%r14
	jne L_251347
L_251459:
	testq %rdx,%rdx
	jz L_483056
L_251460:
	cmpq $0x7FFFFFFF,%rdx
	ja L_251549
L_251461:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1509,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x508,%rbp
	leaq (L_251462+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251462
.p2align 0x4
.long 0x3E76
L_251462:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq %rax,%r15
L_251463:
	xorq %r14,%r14
.p2align 0x4,,0x7
loop_2947:
	cmpq 0x78(%rbp),%r14
	jnl L_483054
L_251598:
	movl %r14d,%r13d
	movq %r14,%r11
	movq %r14,%r10
	movslq %r13d,%r9
	movq %r9,%r13
	salq $0x4,%r13
	salq $0x4,%r9
	movq 0x48(%rbp),%r8
	movq 0x8(%r8,%r9,1),%rsp
	movq 0x0(%rsp),%rsi
	movq 0x0(%r8,%r13,1),%r9
	movl 0x4(%r9),%esp
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r13,1)
	salq $0x4,%r11
	movq %rsi,0x8(%r15,%r11,1)
	salq $0x4,%r10
	movl %esp,0x0(%r15,%r10,1)
	incq %r14
	jmp loop_2947
.p2align 0x4
L_483054:
L_251464:
	movq $0x9ED,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x508(%rbp)
	movq 0x4F0(%rbp),%r15
	movq %r15,0x510(%rbp)
	addq $0x508,%rbp
	leaq (L_251465+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2016
.p2align 0x4
L_483056:
L_251600:
	movq (globalObjptr+0x6DF8)(%rip),%r15
	jmp L_251463
.p2align 0x4
L_483059:
L_251607:
	movq (globalObjptr+0x6DE8)(%rip),%r14
	xchgq %r14,%r15
	jmp L_251455
.p2align 0x4
L_483060:
L_251608:
	movq 0x50(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r13,0x78(%rbp)
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movq %r14,0x48(%rbp)
	je L_251457
L_251609:
	testq %r13,%r13
	jz L_483063
L_251610:
	cmpq $0x7FFFFFFF,%r13
	ja L_251549
L_251611:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1637,%rcx
	movq %r13,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x508,%rbp
	leaq (L_251612+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251612
.p2align 0x4
.long 0x3E76
L_251612:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq %rax,%r15
L_251613:
	xorq %r14,%r14
.p2align 0x4,,0x7
loop_2952:
	cmpq 0x78(%rbp),%r14
	jnl L_483061
L_251615:
	movq %r14,%r13
	movq %r14,%r11
	movq %r14,%r10
	movq %r14,%r9
	salq $0x4,%r13
	movq 0x48(%rbp),%r8
	movq 0x0(%r8,%r13,1),%rsp
	salq $0x4,%r11
	movq 0x8(%r8,%r11,1),%r13
	movq %r15,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r11,1)
	salq $0x4,%r10
	movq %rsp,0x0(%r15,%r10,1)
	movq %r15,%r11
	shrq $0x8,%r11
	movb $0x1,0x0(%r8,%r11,1)
	salq $0x4,%r9
	movq %r13,0x8(%r15,%r9,1)
	incq %r14
	jmp loop_2952
.p2align 0x4
L_483061:
L_251614:
	movq $0x961,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x48(%rbp)
	jmp L_251457
.p2align 0x4
L_483063:
L_251617:
	movq (globalObjptr+0x6DF0)(%rip),%r15
	jmp L_251613
.p2align 0x4
L_483065:
L_251619:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x508,%rbp
	leaq (L_251620+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251620
.p2align 0x4
.long 0x3E90
L_251620:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	jmp L_251445
.p2align 0x4
L_483066:
L_251621:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x508,%rbp
	leaq (L_251622+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251622
.p2align 0x4
.long 0x3E90
L_251622:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	jmp L_251441
.p2align 0x4
L_483069:
L_251636:
	movq (globalObjptr+0x6DD8)(%rip),%r15
	movq %r15,0x90(%rbp)
	jmp L_251436
.p2align 0x4
L_483072:
L_251643:
	movq (globalObjptr+0x6DE0)(%rip),%r15
	movq $0x961,0xFFFFFFFFFFFFFFF8(%r15)
	jmp L_251439
.p2align 0x4
L_483076:
L_251662:
	movq (globalObjptr+0x6DD0)(%rip),%r15
	movq %r15,0x50(%rbp)
	jmp L_251423
.p2align 0x4
L_483078:
L_251663:
	movq 0x50(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq %r15,%r14
	movq %r15,%r13
	movq %r15,%r11
	salq $0x5,%r14
	movq 0x500(%rbp),%r10
	movq 0x0(%r10,%r14,1),%r9
	movq %r9,0x78(%rbp)
	salq $0x5,%r13
	movq 0x8(%r10,%r13,1),%r14
	movq %r14,0x6F8(%rbp)
	salq $0x5,%r11
	movq 0x10(%r10,%r11,1),%r14
	movq %r14,0x80(%rbp)
	salq $0x5,%r15
	movq 0x18(%r10,%r15,1),%r14
	movq %r14,0x88(%rbp)
	movq $0x3701,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x4E8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x6E0(%rbp)
	movq (globalObjptr+0x4AF0)(%rip),%r15
	movq %r15,0x6E8(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x6F0(%rbp)
	movq 0x518(%rbp),%r15
	movq %r15,0x700(%rbp)
	movq 0x520(%rbp),%r15
	movq %r15,0x708(%rbp)
	movq 0x528(%rbp),%r15
	movq %r15,0x710(%rbp)
	movq 0x530(%rbp),%r15
	movq %r15,0x718(%rbp)
	movq 0x538(%rbp),%r15
	movq %r15,0x720(%rbp)
	movq 0x6D0(%rbp),%r15
	movq %r15,0x728(%rbp)
	movq 0x540(%rbp),%r15
	movq %r15,0x730(%rbp)
	movq 0x548(%rbp),%r15
	movq %r15,0x738(%rbp)
	movq 0x550(%rbp),%r15
	movq %r15,0x740(%rbp)
	movq 0x558(%rbp),%r15
	movq %r15,0x748(%rbp)
	movq 0x560(%rbp),%r15
	movq %r15,0x750(%rbp)
	movq 0x568(%rbp),%r15
	movq %r15,0x758(%rbp)
	movq 0x570(%rbp),%r15
	movq %r15,0x760(%rbp)
	movq 0x578(%rbp),%r15
	movq %r15,0x768(%rbp)
	movq 0x580(%rbp),%r15
	movq %r15,0x770(%rbp)
	movq 0x588(%rbp),%r15
	movq %r15,0x778(%rbp)
	movq 0x590(%rbp),%r15
	movq %r15,0x780(%rbp)
	movq 0x598(%rbp),%r15
	movq %r15,0x788(%rbp)
	movq 0x5A0(%rbp),%r15
	movq %r15,0x790(%rbp)
	movq 0x5A8(%rbp),%r15
	movq %r15,0x798(%rbp)
	movq 0x5B0(%rbp),%r15
	movq %r15,0x7A0(%rbp)
	movq 0x5B8(%rbp),%r15
	movq %r15,0x7A8(%rbp)
	movq 0x5C0(%rbp),%r15
	movq %r15,0x7B0(%rbp)
	movq 0x5C8(%rbp),%r15
	movq %r15,0x7B8(%rbp)
	movq 0x5D0(%rbp),%r15
	movq %r15,0x7C0(%rbp)
	movq 0x5D8(%rbp),%r15
	movq %r15,0x7C8(%rbp)
	movq 0x5E0(%rbp),%r15
	movq %r15,0x7D0(%rbp)
	movq 0x5E8(%rbp),%r15
	movq %r15,0x7D8(%rbp)
	movq 0x5F0(%rbp),%r15
	movq %r15,0x7E0(%rbp)
	movq 0x5F8(%rbp),%r15
	movq %r15,0x7E8(%rbp)
	movq 0x600(%rbp),%r15
	movq %r15,0x7F0(%rbp)
	movq 0x608(%rbp),%r15
	movq %r15,0x7F8(%rbp)
	movq 0x610(%rbp),%r15
	movq %r15,0x800(%rbp)
	movq 0x618(%rbp),%r15
	movq %r15,0x808(%rbp)
	movq 0x620(%rbp),%r15
	movq %r15,0x810(%rbp)
	movq 0x628(%rbp),%r15
	movq %r15,0x818(%rbp)
	movq 0x630(%rbp),%r15
	movq %r15,0x820(%rbp)
	movq 0x638(%rbp),%r15
	movq %r15,0x828(%rbp)
	movq 0x640(%rbp),%r15
	movq %r15,0x830(%rbp)
	movq 0x648(%rbp),%r15
	movq %r15,0x838(%rbp)
	movq 0x650(%rbp),%r15
	movq %r15,0x840(%rbp)
	movq 0x658(%rbp),%r15
	movq %r15,0x848(%rbp)
	movq 0x660(%rbp),%r15
	movq %r15,0x850(%rbp)
	movq 0x668(%rbp),%r15
	movq %r15,0x858(%rbp)
	movq 0x670(%rbp),%r15
	movq %r15,0x860(%rbp)
	movq 0x678(%rbp),%r15
	movq %r15,0x868(%rbp)
	movq 0x680(%rbp),%r15
	movq %r15,0x870(%rbp)
	movq 0x688(%rbp),%r15
	movq %r15,0x878(%rbp)
	movq 0x690(%rbp),%r15
	movq %r15,0x880(%rbp)
	movq 0x698(%rbp),%r15
	movq %r15,0x888(%rbp)
	movq 0x6A0(%rbp),%r15
	movq %r15,0x890(%rbp)
	movq 0x6A8(%rbp),%r15
	movq %r15,0x898(%rbp)
	movq 0x6B0(%rbp),%r15
	movq %r15,0x8A0(%rbp)
	movq 0x6B8(%rbp),%r15
	movq %r15,0x8A8(%rbp)
	movq 0x6C0(%rbp),%r15
	movq %r15,0x8B0(%rbp)
	movq 0x6C8(%rbp),%r15
	movq %r15,0x8B8(%rbp)
	addq $0x6E0,%rbp
	leaq (L_251664+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2017
.p2align 0x4
L_483081:
L_251756:
	movq (globalObjptr+0x6DC8)(%rip),%r15
	movq %r15,0x40(%rbp)
	jmp L_251416
.p2align 0x4
L_483085:
L_251795:
	movq (globalObjptr+0x6DC0)(%rip),%r15
	movq %r15,0x38(%rbp)
	jmp L_251407
.p2align 0x4
L_483087:
L_251798:
	movq (globalObjptr+0x6DB8)(%rip),%r15
	movq %r15,0x48(%rbp)
	jmp L_251402
.p2align 0x4
L_483090:
L_251810:
	movq (globalObjptr+0x6DA8)(%rip),%r15
	jmp L_251394
.p2align 0x4
L_483093:
L_251816:
	movq (globalObjptr+0x6DB0)(%rip),%r15
	movq $0x1139,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x38(%rbp)
	jmp L_251396
.p2align 0x4
L_483096:
L_251819:
	movq (globalObjptr+0x6DA0)(%rip),%r15
	movq %r15,0x38(%rbp)
	jmp L_251381
.p2align 0x4
L_483098:
L_251820:
	movq 0x6D8(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq %r15,%r14
	movq %r15,%r13
	movq %r15,%r11
	movq %r15,%r10
	imulq $0x28,%r14
	movq 0x6E0(%rbp),%r9
	movq 0x0(%r9,%r14,1),%r8
	movq %r8,0x6E8(%rbp)
	imulq $0x28,%r13
	movq 0x8(%r9,%r13,1),%r14
	movq %r14,0x6F0(%rbp)
	imulq $0x28,%r11
	movq 0x10(%r9,%r11,1),%r14
	movq %r14,0x6F8(%rbp)
	imulq $0x28,%r10
	movq 0x18(%r9,%r10,1),%r13
	movq %r13,0x720(%rbp)
	imulq $0x28,%r15
	movq 0x20(%r9,%r15,1),%r13
	movq %r13,0x700(%rbp)
	movq $0x3701,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x4E8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq %r15,0x718(%rbp)
	movq %r14,0x710(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x728(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x730(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x738(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x740(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x748(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x750(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x758(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x760(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x768(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x770(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x778(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x780(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x788(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x790(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x798(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0x7A0(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0x7A8(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0x7B0(%rbp)
	movq 0xA8(%rbp),%r15
	movq %r15,0x7B8(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0x7C0(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0x7C8(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0x7D0(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0x7D8(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0x7E0(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0x7E8(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0x7F0(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0x7F8(%rbp)
	movq 0xF0(%rbp),%r15
	movq %r15,0x800(%rbp)
	movq 0xF8(%rbp),%r15
	movq %r15,0x808(%rbp)
	movq 0x100(%rbp),%r15
	movq %r15,0x810(%rbp)
	movq 0x108(%rbp),%r15
	movq %r15,0x818(%rbp)
	movq 0x110(%rbp),%r15
	movq %r15,0x820(%rbp)
	movq 0x118(%rbp),%r15
	movq %r15,0x828(%rbp)
	movq 0x120(%rbp),%r15
	movq %r15,0x830(%rbp)
	movq 0x128(%rbp),%r15
	movq %r15,0x838(%rbp)
	movq 0x130(%rbp),%r15
	movq %r15,0x840(%rbp)
	movq 0x138(%rbp),%r15
	movq %r15,0x848(%rbp)
	movq 0x140(%rbp),%r15
	movq %r15,0x850(%rbp)
	movq 0x148(%rbp),%r15
	movq %r15,0x858(%rbp)
	movq 0x150(%rbp),%r15
	movq %r15,0x860(%rbp)
	movq 0x158(%rbp),%r15
	movq %r15,0x868(%rbp)
	movq 0x160(%rbp),%r15
	movq %r15,0x870(%rbp)
	movq 0x168(%rbp),%r15
	movq %r15,0x878(%rbp)
	movq 0x170(%rbp),%r15
	movq %r15,0x880(%rbp)
	movq 0x178(%rbp),%r15
	movq %r15,0x888(%rbp)
	movl 0x180(%rbp),%r15d
	movl %r15d,0x890(%rbp)
	movq 0x188(%rbp),%r15
	movq %r15,0x898(%rbp)
	movq 0x190(%rbp),%r15
	movq %r15,0x8A0(%rbp)
	movq 0x198(%rbp),%r15
	movq %r15,0x8A8(%rbp)
	movq 0x1A0(%rbp),%r15
	movq %r15,0x8B0(%rbp)
	movq 0x1A8(%rbp),%r15
	movq %r15,0x8B8(%rbp)
	movq 0x1B0(%rbp),%r15
	movq %r15,0x8C0(%rbp)
	movq 0x1B8(%rbp),%r15
	movq %r15,0x8C8(%rbp)
	movq 0x1C0(%rbp),%r15
	movq %r15,0x8D0(%rbp)
	movq 0x1C8(%rbp),%r15
	movq %r15,0x8D8(%rbp)
	movq 0x1D0(%rbp),%r15
	movq %r15,0x8E0(%rbp)
	movq 0x1D8(%rbp),%r15
	movq %r15,0x8E8(%rbp)
	movq 0x1E0(%rbp),%r15
	movq %r15,0x8F0(%rbp)
	movq 0x1E8(%rbp),%r15
	movq %r15,0x8F8(%rbp)
	movq 0x1F0(%rbp),%r15
	movq %r15,0x900(%rbp)
	movq 0x1F8(%rbp),%r15
	movq %r15,0x908(%rbp)
	movq 0x200(%rbp),%r15
	movq %r15,0x910(%rbp)
	movq 0x208(%rbp),%r15
	movq %r15,0x918(%rbp)
	movq 0x210(%rbp),%r15
	movq %r15,0x920(%rbp)
	movq 0x218(%rbp),%r15
	movq %r15,0x928(%rbp)
	movq 0x220(%rbp),%r15
	movq %r15,0x930(%rbp)
	movq 0x228(%rbp),%r15
	movq %r15,0x938(%rbp)
	movq 0x230(%rbp),%r15
	movq %r15,0x940(%rbp)
	movq 0x238(%rbp),%r15
	movq %r15,0x948(%rbp)
	movq 0x240(%rbp),%r15
	movq %r15,0x950(%rbp)
	movq 0x248(%rbp),%r15
	movq %r15,0x958(%rbp)
	movq 0x250(%rbp),%r15
	movq %r15,0x960(%rbp)
	movq 0x258(%rbp),%r15
	movq %r15,0x968(%rbp)
	movq 0x260(%rbp),%r15
	movq %r15,0x970(%rbp)
	movq 0x268(%rbp),%r15
	movq %r15,0x978(%rbp)
	movq 0x270(%rbp),%r15
	movq %r15,0x980(%rbp)
	movq 0x278(%rbp),%r15
	movq %r15,0x988(%rbp)
	movq 0x280(%rbp),%r15
	movq %r15,0x990(%rbp)
	movq 0x288(%rbp),%r15
	movq %r15,0x998(%rbp)
	movq 0x290(%rbp),%r15
	movq %r15,0x9A0(%rbp)
	movq 0x298(%rbp),%r15
	movq %r15,0x9A8(%rbp)
	movq 0x2A0(%rbp),%r15
	movq %r15,0x9B0(%rbp)
	movq 0x2A8(%rbp),%r15
	movq %r15,0x9B8(%rbp)
	movq 0x2B0(%rbp),%r15
	movq %r15,0x9C0(%rbp)
	movq 0x2B8(%rbp),%r15
	movq %r15,0x9C8(%rbp)
	movq 0x2C0(%rbp),%r15
	movq %r15,0x9D0(%rbp)
	movq 0x2C8(%rbp),%r15
	movq %r15,0x9D8(%rbp)
	movq 0x2D0(%rbp),%r15
	movq %r15,0x9E0(%rbp)
	movq 0x2D8(%rbp),%r15
	movq %r15,0x9E8(%rbp)
	movq 0x2E0(%rbp),%r15
	movq %r15,0x9F0(%rbp)
	movq 0x2E8(%rbp),%r15
	movq %r15,0x9F8(%rbp)
	movq 0x2F0(%rbp),%r15
	movq %r15,0xA00(%rbp)
	movq 0x2F8(%rbp),%r15
	movq %r15,0xA08(%rbp)
	movq 0x300(%rbp),%r15
	movq %r15,0xA10(%rbp)
	movq 0x308(%rbp),%r15
	movq %r15,0xA18(%rbp)
	movq 0x310(%rbp),%r15
	movq %r15,0xA20(%rbp)
	movq 0x318(%rbp),%r15
	movq %r15,0xA28(%rbp)
	movq 0x320(%rbp),%r15
	movq %r15,0xA30(%rbp)
	movq 0x328(%rbp),%r15
	movq %r15,0xA38(%rbp)
	movq 0x330(%rbp),%r15
	movq %r15,0xA40(%rbp)
	movq 0x338(%rbp),%r15
	movq %r15,0xA48(%rbp)
	movq 0x340(%rbp),%r15
	movq %r15,0xA50(%rbp)
	movq 0x348(%rbp),%r15
	movq %r15,0xA58(%rbp)
	movq 0x350(%rbp),%r15
	movq %r15,0xA60(%rbp)
	movq 0x358(%rbp),%r15
	movq %r15,0xA68(%rbp)
	movq 0x360(%rbp),%r15
	movq %r15,0xA70(%rbp)
	movq 0x368(%rbp),%r15
	movq %r15,0xA78(%rbp)
	movq 0x370(%rbp),%r15
	movq %r15,0xA80(%rbp)
	movq 0x378(%rbp),%r15
	movq %r15,0xA88(%rbp)
	movq 0x380(%rbp),%r15
	movq %r15,0xA90(%rbp)
	movq 0x388(%rbp),%r15
	movq %r15,0xA98(%rbp)
	movq 0x390(%rbp),%r15
	movq %r15,0xAA0(%rbp)
	movq 0x398(%rbp),%r15
	movq %r15,0xAA8(%rbp)
	movq 0x3A0(%rbp),%r15
	movq %r15,0xAB0(%rbp)
	movq 0x3A8(%rbp),%r15
	movq %r15,0xAB8(%rbp)
	movq 0x3B0(%rbp),%r15
	movq %r15,0xAC0(%rbp)
	movq 0x3B8(%rbp),%r15
	movq %r15,0xAC8(%rbp)
	movq 0x3C0(%rbp),%r15
	movq %r15,0xAD0(%rbp)
	movq 0x3C8(%rbp),%r15
	movq %r15,0xAD8(%rbp)
	movq 0x3D0(%rbp),%r15
	movq %r15,0xAE0(%rbp)
	movq 0x3D8(%rbp),%r15
	movq %r15,0xAE8(%rbp)
	movq 0x3E0(%rbp),%r15
	movq %r15,0xAF0(%rbp)
	movq 0x3E8(%rbp),%r15
	movq %r15,0xAF8(%rbp)
	movq 0x3F0(%rbp),%r15
	movq %r15,0xB00(%rbp)
	movq 0x3F8(%rbp),%r15
	movq %r15,0xB08(%rbp)
	movq 0x400(%rbp),%r15
	movq %r15,0xB10(%rbp)
	movq 0x408(%rbp),%r15
	movq %r15,0xB18(%rbp)
	movq 0x410(%rbp),%r15
	movq %r15,0xB20(%rbp)
	movq 0x418(%rbp),%r15
	movq %r15,0xB28(%rbp)
	movq 0x420(%rbp),%r15
	movq %r15,0xB30(%rbp)
	movq 0x428(%rbp),%r15
	movq %r15,0xB38(%rbp)
	movq 0x430(%rbp),%r15
	movq %r15,0xB40(%rbp)
	movq 0x438(%rbp),%r15
	movq %r15,0xB48(%rbp)
	movq 0x440(%rbp),%r15
	movq %r15,0xB50(%rbp)
	movq 0x448(%rbp),%r15
	movq %r15,0xB58(%rbp)
	movq 0x450(%rbp),%r15
	movq %r15,0xB60(%rbp)
	movq 0x458(%rbp),%r15
	movq %r15,0xB68(%rbp)
	movq 0x460(%rbp),%r15
	movq %r15,0xB70(%rbp)
	movq 0x468(%rbp),%r15
	movq %r15,0xB78(%rbp)
	movq 0x470(%rbp),%r15
	movq %r15,0xB80(%rbp)
	movq 0x478(%rbp),%r15
	movq %r15,0xB88(%rbp)
	movq 0x480(%rbp),%r15
	movq %r15,0xB90(%rbp)
	movq 0x488(%rbp),%r15
	movq %r15,0xB98(%rbp)
	movq 0x490(%rbp),%r15
	movq %r15,0xBA0(%rbp)
	movq 0x498(%rbp),%r15
	movq %r15,0xBA8(%rbp)
	movq 0x4A0(%rbp),%r15
	movq %r15,0xBB0(%rbp)
	movq 0x4A8(%rbp),%r15
	movq %r15,0xBB8(%rbp)
	movq 0x4B0(%rbp),%r15
	movq %r15,0xBC0(%rbp)
	movq 0x4B8(%rbp),%r15
	movq %r15,0xBC8(%rbp)
	movq 0x4C0(%rbp),%r15
	movq %r15,0xBD0(%rbp)
	movq 0x4C8(%rbp),%r15
	movq %r15,0xBD8(%rbp)
	movq 0x4D0(%rbp),%r15
	movq %r15,0xBE0(%rbp)
	addq $0x710,%rbp
	leaq (L_251821+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp elabMatch_0
.p2align 0x4
L_483101:
L_251927:
	movq (globalObjptr+0x6D98)(%rip),%r15
	movq %r15,0x510(%rbp)
	jmp L_251374
.p2align 0x4
L_483103:
L_251928:
	movq 0x6E8(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq %r15,%r14
	salq $0x4,%r14
	movq 0x508(%rbp),%r13
	movq 0x0(%r13,%r14,1),%r11
	movq %r11,0x718(%rbp)
	salq $0x4,%r15
	movq 0x8(%r13,%r15,1),%r14
	movq %r14,0x6F0(%rbp)
	movq $0x3701,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x4E8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x700(%rbp)
	movq (globalObjptr+0xB40)(%rip),%r15
	movq %r15,0x708(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x710(%rbp)
	movq 0x518(%rbp),%r15
	movq %r15,0x720(%rbp)
	movq 0x520(%rbp),%r15
	movq %r15,0x728(%rbp)
	movq 0x528(%rbp),%r15
	movq %r15,0x730(%rbp)
	movq 0x530(%rbp),%r15
	movq %r15,0x738(%rbp)
	movq 0x538(%rbp),%r15
	movq %r15,0x740(%rbp)
	movq 0x6D0(%rbp),%r15
	movq %r15,0x748(%rbp)
	movq 0x540(%rbp),%r15
	movq %r15,0x750(%rbp)
	movq 0x548(%rbp),%r15
	movq %r15,0x758(%rbp)
	movq 0x550(%rbp),%r15
	movq %r15,0x760(%rbp)
	movq 0x558(%rbp),%r15
	movq %r15,0x768(%rbp)
	movq 0x560(%rbp),%r15
	movq %r15,0x770(%rbp)
	movq 0x568(%rbp),%r15
	movq %r15,0x778(%rbp)
	movq 0x570(%rbp),%r15
	movq %r15,0x780(%rbp)
	movq 0x578(%rbp),%r15
	movq %r15,0x788(%rbp)
	movq 0x580(%rbp),%r15
	movq %r15,0x790(%rbp)
	movq 0x588(%rbp),%r15
	movq %r15,0x798(%rbp)
	movq 0x590(%rbp),%r15
	movq %r15,0x7A0(%rbp)
	movq 0x598(%rbp),%r15
	movq %r15,0x7A8(%rbp)
	movq 0x5A0(%rbp),%r15
	movq %r15,0x7B0(%rbp)
	movq 0x5A8(%rbp),%r15
	movq %r15,0x7B8(%rbp)
	movq 0x5B0(%rbp),%r15
	movq %r15,0x7C0(%rbp)
	movq 0x5B8(%rbp),%r15
	movq %r15,0x7C8(%rbp)
	movq 0x5C0(%rbp),%r15
	movq %r15,0x7D0(%rbp)
	movq 0x5C8(%rbp),%r15
	movq %r15,0x7D8(%rbp)
	movq 0x5D0(%rbp),%r15
	movq %r15,0x7E0(%rbp)
	movq 0x5D8(%rbp),%r15
	movq %r15,0x7E8(%rbp)
	movq 0x5E0(%rbp),%r15
	movq %r15,0x7F0(%rbp)
	movq 0x5E8(%rbp),%r15
	movq %r15,0x7F8(%rbp)
	movq 0x5F0(%rbp),%r15
	movq %r15,0x800(%rbp)
	movq 0x5F8(%rbp),%r15
	movq %r15,0x808(%rbp)
	movq 0x600(%rbp),%r15
	movq %r15,0x810(%rbp)
	movq 0x608(%rbp),%r15
	movq %r15,0x818(%rbp)
	movq 0x610(%rbp),%r15
	movq %r15,0x820(%rbp)
	movq 0x618(%rbp),%r15
	movq %r15,0x828(%rbp)
	movq 0x620(%rbp),%r15
	movq %r15,0x830(%rbp)
	movq 0x628(%rbp),%r15
	movq %r15,0x838(%rbp)
	movq 0x630(%rbp),%r15
	movq %r15,0x840(%rbp)
	movq 0x638(%rbp),%r15
	movq %r15,0x848(%rbp)
	movq 0x640(%rbp),%r15
	movq %r15,0x850(%rbp)
	movq 0x648(%rbp),%r15
	movq %r15,0x858(%rbp)
	movq 0x650(%rbp),%r15
	movq %r15,0x860(%rbp)
	movq 0x658(%rbp),%r15
	movq %r15,0x868(%rbp)
	movq 0x660(%rbp),%r15
	movq %r15,0x870(%rbp)
	movq 0x668(%rbp),%r15
	movq %r15,0x878(%rbp)
	movq 0x670(%rbp),%r15
	movq %r15,0x880(%rbp)
	movq 0x678(%rbp),%r15
	movq %r15,0x888(%rbp)
	movq 0x680(%rbp),%r15
	movq %r15,0x890(%rbp)
	movq 0x688(%rbp),%r15
	movq %r15,0x898(%rbp)
	movq 0x690(%rbp),%r15
	movq %r15,0x8A0(%rbp)
	movq 0x698(%rbp),%r15
	movq %r15,0x8A8(%rbp)
	movq 0x6A0(%rbp),%r15
	movq %r15,0x8B0(%rbp)
	movq 0x6A8(%rbp),%r15
	movq %r15,0x8B8(%rbp)
	movq 0x6B0(%rbp),%r15
	movq %r15,0x8C0(%rbp)
	movq 0x6B8(%rbp),%r15
	movq %r15,0x8C8(%rbp)
	movq 0x6C0(%rbp),%r15
	movq %r15,0x8D0(%rbp)
	movq 0x6C8(%rbp),%r15
	movq %r15,0x8D8(%rbp)
	addq $0x700,%rbp
	leaq (L_251929+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2017
.p2align 0x4
L_483106:
L_251997:
	movq (globalObjptr+0x6D90)(%rip),%r15
	movq %r15,0x6E0(%rbp)
	jmp L_251366
.p2align 0x4
L_483108:
L_251998:
	movq 0x510(%rbp),%r14
	movl %r14d,%r13d
	movslq %r13d,%r15
	movq %r15,%r14
	salq $0x4,%r14
	movq 0x4F8(%rbp),%r13
	movq 0x0(%r13,%r14,1),%r11
	movq %r11,0x518(%rbp)
	salq $0x4,%r15
	movq 0x8(%r13,%r15,1),%r14
	movq %r14,0x520(%rbp)
	movq $0x15B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x528(%rbp)
	addq $0x28,%r12
	movq %r14,0x0(%r13)
	movq 0x110(%rbp),%r10
	movq %r10,0x8(%r13)
	movq %r11,0x10(%r13)
	movq 0x120(%rbp),%r10
	movq %r10,0x18(%r13)
	movq 0x0(%r11),%r13
	movq %r13,0x530(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x538(%rbp)
	movq %r11,%r15
.p2align 0x4,,0x7
loop_2958:
	movq 0x8(%r15),%r14
L_251999:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_252000
L_252049:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xDF1,%r15
	je L_483115
	cmpq $0xDF5,%r15
	je L_483114
	cmpq $0xDF6,%r15
	je L_483110
	cmpq $0xDF7,%r15
	je L_483109
L_252000:
	movq $0x1,%r15
L_252001:
	movq %r15,0x550(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x558(%rbp)
	movq 0x520(%rbp),%r15
	movq %r15,0x560(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x568(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x570(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x578(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x580(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x588(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x590(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x598(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x5A0(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x5A8(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x5B0(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x5B8(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x5C0(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x5C8(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x5D0(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x5D8(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0x5E0(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0x5E8(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0x5F0(%rbp)
	movq 0xA8(%rbp),%r15
	movq %r15,0x5F8(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0x600(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0x608(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0x610(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0x618(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0x620(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0x628(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0x630(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0x638(%rbp)
	movq 0xF0(%rbp),%r15
	movq %r15,0x640(%rbp)
	movq 0xF8(%rbp),%r15
	movq %r15,0x648(%rbp)
	movq 0x100(%rbp),%r15
	movq %r15,0x650(%rbp)
	movq 0x108(%rbp),%r15
	movq %r15,0x658(%rbp)
	movq 0x110(%rbp),%r15
	movq %r15,0x660(%rbp)
	movq 0x118(%rbp),%r15
	movq %r15,0x668(%rbp)
	movq 0x120(%rbp),%r15
	movq %r15,0x670(%rbp)
	movq 0x128(%rbp),%r15
	movq %r15,0x678(%rbp)
	movq 0x130(%rbp),%r15
	movq %r15,0x680(%rbp)
	movq 0x138(%rbp),%r15
	movq %r15,0x688(%rbp)
	movq 0x140(%rbp),%r15
	movq %r15,0x690(%rbp)
	movq 0x148(%rbp),%r15
	movq %r15,0x698(%rbp)
	movq 0x150(%rbp),%r15
	movq %r15,0x6A0(%rbp)
	movq 0x158(%rbp),%r15
	movq %r15,0x6A8(%rbp)
	movq 0x160(%rbp),%r15
	movq %r15,0x6B0(%rbp)
	movq 0x168(%rbp),%r15
	movq %r15,0x6B8(%rbp)
	movq 0x170(%rbp),%r15
	movq %r15,0x6C0(%rbp)
	movq 0x178(%rbp),%r15
	movq %r15,0x6C8(%rbp)
	movl 0x180(%rbp),%r15d
	movl %r15d,0x6D0(%rbp)
	movq 0x188(%rbp),%r15
	movq %r15,0x6D8(%rbp)
	movq 0x190(%rbp),%r15
	movq %r15,0x6E0(%rbp)
	movq 0x198(%rbp),%r15
	movq %r15,0x6E8(%rbp)
	movq 0x1A0(%rbp),%r15
	movq %r15,0x6F0(%rbp)
	movq 0x1A8(%rbp),%r15
	movq %r15,0x6F8(%rbp)
	movq 0x1B0(%rbp),%r15
	movq %r15,0x700(%rbp)
	movq 0x1B8(%rbp),%r15
	movq %r15,0x708(%rbp)
	movq 0x1C0(%rbp),%r15
	movq %r15,0x710(%rbp)
	movq 0x1C8(%rbp),%r15
	movq %r15,0x718(%rbp)
	movq 0x1D0(%rbp),%r15
	movq %r15,0x720(%rbp)
	movq 0x1D8(%rbp),%r15
	movq %r15,0x728(%rbp)
	movq 0x1E0(%rbp),%r15
	movq %r15,0x730(%rbp)
	movq 0x1E8(%rbp),%r15
	movq %r15,0x738(%rbp)
	movq 0x1F0(%rbp),%r15
	movq %r15,0x740(%rbp)
	movq 0x1F8(%rbp),%r15
	movq %r15,0x748(%rbp)
	movq 0x200(%rbp),%r15
	movq %r15,0x750(%rbp)
	movq 0x208(%rbp),%r15
	movq %r15,0x758(%rbp)
	movq 0x210(%rbp),%r15
	movq %r15,0x760(%rbp)
	movq 0x218(%rbp),%r15
	movq %r15,0x768(%rbp)
	movq 0x220(%rbp),%r15
	movq %r15,0x770(%rbp)
	movq 0x228(%rbp),%r15
	movq %r15,0x778(%rbp)
	movq 0x230(%rbp),%r15
	movq %r15,0x780(%rbp)
	movq 0x238(%rbp),%r15
	movq %r15,0x788(%rbp)
	movq 0x240(%rbp),%r15
	movq %r15,0x790(%rbp)
	movq 0x248(%rbp),%r15
	movq %r15,0x798(%rbp)
	movq 0x250(%rbp),%r15
	movq %r15,0x7A0(%rbp)
	movq 0x258(%rbp),%r15
	movq %r15,0x7A8(%rbp)
	movq 0x260(%rbp),%r15
	movq %r15,0x7B0(%rbp)
	movq 0x268(%rbp),%r15
	movq %r15,0x7B8(%rbp)
	movq 0x270(%rbp),%r15
	movq %r15,0x7C0(%rbp)
	movq 0x278(%rbp),%r15
	movq %r15,0x7C8(%rbp)
	movq 0x280(%rbp),%r15
	movq %r15,0x7D0(%rbp)
	movq 0x288(%rbp),%r15
	movq %r15,0x7D8(%rbp)
	movq 0x290(%rbp),%r15
	movq %r15,0x7E0(%rbp)
	movq 0x298(%rbp),%r15
	movq %r15,0x7E8(%rbp)
	movq 0x2A0(%rbp),%r15
	movq %r15,0x7F0(%rbp)
	movq 0x2A8(%rbp),%r15
	movq %r15,0x7F8(%rbp)
	movq 0x2B0(%rbp),%r15
	movq %r15,0x800(%rbp)
	movq 0x2B8(%rbp),%r15
	movq %r15,0x808(%rbp)
	movq 0x2C0(%rbp),%r15
	movq %r15,0x810(%rbp)
	movq 0x2C8(%rbp),%r15
	movq %r15,0x818(%rbp)
	movq 0x2D0(%rbp),%r15
	movq %r15,0x820(%rbp)
	movq 0x2D8(%rbp),%r15
	movq %r15,0x828(%rbp)
	movq 0x2E0(%rbp),%r15
	movq %r15,0x830(%rbp)
	movq 0x2E8(%rbp),%r15
	movq %r15,0x838(%rbp)
	movq 0x2F0(%rbp),%r15
	movq %r15,0x840(%rbp)
	movq 0x2F8(%rbp),%r15
	movq %r15,0x848(%rbp)
	movq 0x300(%rbp),%r15
	movq %r15,0x850(%rbp)
	movq 0x308(%rbp),%r15
	movq %r15,0x858(%rbp)
	movq 0x310(%rbp),%r15
	movq %r15,0x860(%rbp)
	movq 0x318(%rbp),%r15
	movq %r15,0x868(%rbp)
	movq 0x320(%rbp),%r15
	movq %r15,0x870(%rbp)
	movq 0x328(%rbp),%r15
	movq %r15,0x878(%rbp)
	movq 0x330(%rbp),%r15
	movq %r15,0x880(%rbp)
	movq 0x338(%rbp),%r15
	movq %r15,0x888(%rbp)
	movq 0x340(%rbp),%r15
	movq %r15,0x890(%rbp)
	movq 0x348(%rbp),%r15
	movq %r15,0x898(%rbp)
	movq 0x350(%rbp),%r15
	movq %r15,0x8A0(%rbp)
	movq 0x358(%rbp),%r15
	movq %r15,0x8A8(%rbp)
	movq 0x360(%rbp),%r15
	movq %r15,0x8B0(%rbp)
	movq 0x368(%rbp),%r15
	movq %r15,0x8B8(%rbp)
	movq 0x370(%rbp),%r15
	movq %r15,0x8C0(%rbp)
	movq 0x378(%rbp),%r15
	movq %r15,0x8C8(%rbp)
	movq 0x380(%rbp),%r15
	movq %r15,0x8D0(%rbp)
	movq 0x388(%rbp),%r15
	movq %r15,0x8D8(%rbp)
	movq 0x390(%rbp),%r15
	movq %r15,0x8E0(%rbp)
	movq 0x398(%rbp),%r15
	movq %r15,0x8E8(%rbp)
	movq 0x3A0(%rbp),%r15
	movq %r15,0x8F0(%rbp)
	movq 0x3A8(%rbp),%r15
	movq %r15,0x8F8(%rbp)
	movq 0x3B0(%rbp),%r15
	movq %r15,0x900(%rbp)
	movq 0x3B8(%rbp),%r15
	movq %r15,0x908(%rbp)
	movq 0x3C0(%rbp),%r15
	movq %r15,0x910(%rbp)
	movq 0x3C8(%rbp),%r15
	movq %r15,0x918(%rbp)
	movq 0x3D0(%rbp),%r15
	movq %r15,0x920(%rbp)
	movq 0x3D8(%rbp),%r15
	movq %r15,0x928(%rbp)
	movq 0x3E0(%rbp),%r15
	movq %r15,0x930(%rbp)
	movq 0x3E8(%rbp),%r15
	movq %r15,0x938(%rbp)
	movq 0x3F0(%rbp),%r15
	movq %r15,0x940(%rbp)
	movq 0x3F8(%rbp),%r15
	movq %r15,0x948(%rbp)
	movq 0x400(%rbp),%r15
	movq %r15,0x950(%rbp)
	movq 0x408(%rbp),%r15
	movq %r15,0x958(%rbp)
	movq 0x410(%rbp),%r15
	movq %r15,0x960(%rbp)
	movq 0x418(%rbp),%r15
	movq %r15,0x968(%rbp)
	movq 0x420(%rbp),%r15
	movq %r15,0x970(%rbp)
	movq 0x428(%rbp),%r15
	movq %r15,0x978(%rbp)
	movq 0x430(%rbp),%r15
	movq %r15,0x980(%rbp)
	movq 0x438(%rbp),%r15
	movq %r15,0x988(%rbp)
	movq 0x440(%rbp),%r15
	movq %r15,0x990(%rbp)
	movq 0x448(%rbp),%r15
	movq %r15,0x998(%rbp)
	movq 0x450(%rbp),%r15
	movq %r15,0x9A0(%rbp)
	movq 0x458(%rbp),%r15
	movq %r15,0x9A8(%rbp)
	movq 0x460(%rbp),%r15
	movq %r15,0x9B0(%rbp)
	movq 0x468(%rbp),%r15
	movq %r15,0x9B8(%rbp)
	movq 0x470(%rbp),%r15
	movq %r15,0x9C0(%rbp)
	movq 0x478(%rbp),%r15
	movq %r15,0x9C8(%rbp)
	movq 0x480(%rbp),%r15
	movq %r15,0x9D0(%rbp)
	movq 0x488(%rbp),%r15
	movq %r15,0x9D8(%rbp)
	movq 0x490(%rbp),%r15
	movq %r15,0x9E0(%rbp)
	movq 0x498(%rbp),%r15
	movq %r15,0x9E8(%rbp)
	movq 0x4A0(%rbp),%r15
	movq %r15,0x9F0(%rbp)
	movq 0x4A8(%rbp),%r15
	movq %r15,0x9F8(%rbp)
	movq 0x4B0(%rbp),%r15
	movq %r15,0xA00(%rbp)
	movq 0x4B8(%rbp),%r15
	movq %r15,0xA08(%rbp)
	movq 0x4C0(%rbp),%r15
	movq %r15,0xA10(%rbp)
	movq 0x4C8(%rbp),%r15
	movq %r15,0xA18(%rbp)
	movq 0x4D0(%rbp),%r15
	movq %r15,0xA20(%rbp)
	addq $0x550,%rbp
	leaq (L_252002+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp elabExp_0
.p2align 0x4
L_483109:
L_252072:
	movq 0x0(%r14),%r15
	jmp loop_2958
.p2align 0x4
L_483110:
L_252065:
	movq 0x0(%r14),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movl %r15d,%r14d
	movslq %r14d,%r11
	cmpq %r11,%r15
	jne L_251347
L_252067:
	cmpl $0x1,%r14d
	jne L_252000
L_252069:
	cmpq $0x0,%r15
	jna L_251389
L_252071:
	movq 0x0(%r13),%r13
	movq %r13,%r15
	jmp loop_2958
.p2align 0x4
L_483114:
L_252064:
	movq 0x18(%r14),%r13
	movq 0x8(%r13),%r14
	movq 0x10(%r14),%r13
	movq %r13,%r15
	jmp L_252001
.p2align 0x4
L_483115:
L_252050:
	movq 0x8(%r14),%r15
	movq %r15,0x550(%rbp)
	addq $0x550,%rbp
	leaq (toString_354+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_31
.p2align 0x4
L_483119:
L_252076:
	movq (globalObjptr+0x6D88)(%rip),%r15
	movq %r15,0x500(%rbp)
	jmp L_251358
.p2align 0x4
L_483121:
L_252100:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x548,%rbp
	leaq (L_252101+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252101
.p2align 0x4
.long 0x3ED5
L_252101:
	addq $0xFFFFFFFFFFFFFAB8,%rbp
	jmp L_251350
.p2align 0x4
L_483125:
L_253740:
	movq 0x8(%r14),%r15
	movq %r15,0x530(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x10(%rbp)
	movq 0x78(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x4D8(%rbp)
	movq 0x80(%rbp),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x4E0(%rbp)
	movq 0x0(%r13),%r14
	movq %r14,0x4E8(%rbp)
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq $0x1,0x0(%r13)
	movq 0x90(%rbp),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x4F0(%rbp)
	movq 0x0(%r13),%r14
	movq %r14,0x4F8(%rbp)
	movq %r13,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r11,%r14,1)
	movq $0x1,0x0(%r13)
	movq 0xA0(%rbp),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x500(%rbp)
	movq 0x0(%r13),%r14
	movq %r14,0x508(%rbp)
	movq %r13,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r11,%r14,1)
	movq $0x1,0x0(%r13)
	movq 0xB0(%rbp),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x510(%rbp)
	movq 0x0(%r13),%r14
	movq %r14,0x518(%rbp)
	movq %r13,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r11,%r14,1)
	movq $0x1,0x0(%r13)
	movq $0x71,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x44D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl $0x0,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r15,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x0(%r15)
	movq 0x8(%rbp),%r15
	movq %r15,0x528(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0x538(%rbp)
	addq $0x528,%rbp
	leaq (L_253741+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp elabDatBind_0
.p2align 0x4
L_483126:
L_253727:
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x129D,%r14
	je L_483127
L_253738:
	movq 0x0(%r15),%r14
	movq %r14,0x278(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x270(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0x280(%rbp)
	addq $0x270,%rbp
	leaq (L_253739+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp elabDatBind_0
.p2align 0x4
L_483127:
L_253728:
	movq 0x8(%r15),%r14
	movq %r14,0x270(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x278(%rbp)
	movq 0x248(%rbp),%r15
	movq %r15,0x280(%rbp)
	addq $0x270,%rbp
	leaq (L_253729+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1224
.p2align 0x4
L_483128:
L_253584:
	movq 0x0(%r14),%r15
	movq %r15,0x28(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x30(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_251347
L_253586:
	cmpl $0x0,%r13d
	jl L_251642
L_253587:
	movq $0x1,0x38(%rbp)
	movl $0x0,0x34(%rbp)
loop_2993:
	movl 0x30(%rbp),%r15d
	cmpl %r15d,0x34(%rbp)
	jl L_483130
L_253588:
	movq 0x38(%rbp),%r15
	movq %r15,0x268(%rbp)
L_251540:
	movq 0x250(%rbp),%r15
	movq 0x10(%r15),%r14
	cmpb $0x3,0x0(%r14)
	je L_483129
L_251541:
	movq 0x268(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_483129:
L_251542:
	movq 0x258(%rbp),%r15
	movq %r15,0x278(%rbp)
	addq $0x278,%rbp
	leaq (L_251543+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp reportUnresolvedFlexRecords_0
.p2align 0x4
L_483130:
L_253589:
	movslq 0x34(%rbp),%r15
	movq 0x28(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x40(%rbp)
	movq 0x0(%r13),%r11
	movq 0x8(%r11),%r10
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r15
	shrq $0x1,%r15
	cmpq $0x1297,%r15
	je L_483131
L_253620:
	movq 0x8(%r10),%r15
	movq %r15,0x48(%rbp)
	movq 0x0(%r10),%r14
	movq %r14,0x50(%rbp)
	movq $0x145,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	movq %r13,0x270(%rbp)
	movq 0xD0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x278(%rbp)
	addq $0x270,%rbp
	leaq (L_253621+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2018
.p2align 0x4
L_483131:
L_253590:
	movq 0x0(%r10),%r15
	movq %r15,0x48(%rbp)
	movq 0x40(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x50(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0x270(%rbp)
	addq $0x270,%rbp
	leaq (L_253591+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_483134:
L_253572:
	movq 0x8(%r14),%r15
	movq %r15,0x28(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x30(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x38(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_251347
L_253574:
	cmpl $0x0,%r13d
	jl L_251642
L_253575:
	movl $0x0,0x3C(%rbp)
loop_2992:
	movl 0x3C(%rbp),%r15d
	cmpl 0x38(%rbp),%r15d
	jnl L_483135
L_253577:
	movslq %r15d,%r14
	movq 0x28(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	movq %r13,0x40(%rbp)
	movq 0x78(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x238(%rbp),%r15
	movq %r15,0x270(%rbp)
	addq $0x270,%rbp
	leaq (L_253578+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_483135:
L_252118:
	movq $0x1,0x268(%rbp)
	jmp L_251540
.p2align 0x4
L_483138:
L_252575:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq %r13,0x500(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x508(%rbp)
	cmpq %rdx,%r14
	movq %r15,0x4F8(%rbp)
	jne L_251347
L_252577:
	testq %rdx,%rdx
	jz L_483239
L_252578:
	cmpq $0x7FFFFFFF,%rdx
	ja L_251549
L_252579:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1641,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x518,%rbp
	leaq (L_252580+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252580
.p2align 0x4
.long 0x3F25
L_252580:
	addq $0xFFFFFFFFFFFFFAE8,%rbp
	movq %rax,0x510(%rbp)
L_252581:
	movq $0x0,0x518(%rbp)
.p2align 0x4,,0x7
loop_2975:
	movq 0x518(%rbp),%r15
	cmpq 0x508(%rbp),%r15
	jnl L_483165
L_253422:
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x4F8(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x520(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movl %r15d,%r14d
	movslq %r14d,%r11
	movq %r11,0x528(%rbp)
	cmpq %r11,%r15
	jne L_251347
L_253424:
	testq %r11,%r11
	jnz L_483162
L_253569:
	movq (globalObjptr+0x6E68)(%rip),%r15
	movq %r15,0x530(%rbp)
.p2align 0x4,,0x7
L_253428:
	movq $0x0,0x538(%rbp)
.p2align 0x4,,0x7
loop_2990:
	movq 0x528(%rbp),%r15
	cmpq %r15,0x538(%rbp)
	jl L_483139
L_253429:
	movq 0x530(%rbp),%r15
	movq $0x157,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x510(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x518(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x518(%rbp)
	jmp loop_2975
.p2align 0x4
L_483139:
L_253430:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_253431
L_253566:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x548,%rbp
	leaq (L_253567+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253567
.p2align 0x4
.long 0x3FAC
L_253567:
	addq $0xFFFFFFFFFFFFFAB8,%rbp
L_253431:
	movq 0x538(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq %r15,%r14
	movq %r15,%r13
	imulq $0x18,%r14
	movq 0x520(%rbp),%r11
	movq 0x0(%r11,%r14,1),%r10
	movq %r10,0x540(%rbp)
	imulq $0x18,%r13
	movq 0x8(%r11,%r13,1),%r14
	movq %r14,0x548(%rbp)
	imulq $0x18,%r15
	movq 0x10(%r11,%r15,1),%r13
	movq %r13,0x550(%rbp)
	movq $0x441,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x558(%rbp)
	addq $0x38,%r12
	movq %r13,0x0(%r15)
	movq 0x110(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x108(%rbp),%r13
	movq %r13,0x10(%r15)
	movq %r10,0x18(%r15)
	movq %r14,0x20(%r15)
	movq 0x100(%rbp),%r13
	movq %r13,0x28(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_251347
L_253433:
	decl %r13d
	jo L_251342
L_253434:
	movl %r13d,0x4(%rbp)
	movq $0x1,0x560(%rbp)
.p2align 0x4,,0x7
loop_2991:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_483158
.p2align 0x4,,0x7
L_253435:
	movl 0x4(%rbp),%r15d
	cmpl $0x0,%r15d
	jl L_483140
L_253436:
	movl %r15d,%r14d
	decl %r14d
	movslq %r15d,%r13
	movl %r14d,0x4(%rbp)
	movq 0x548(%rbp),%r15
	movq 0x0(%r15,%r13,8),%r14
	movq $0x2535,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x560(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x560(%rbp)
	jmp loop_2991
.p2align 0x4
L_483140:
L_253437:
	movq 0x560(%rbp),%r14
	cmpq $0x1,%r14
	je L_483157
L_253438:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq %r11,0x548(%rbp)
L_253439:
	movq %r13,%r14
	andq $0x3,%r14
	jz L_483150
L_253440:
	movq %r13,0x548(%rbp)
	movq %r11,%r15
L_253441:
	movq 0x8(%r15),%r14
L_253442:
	movq %r14,%r13
	andq $0x3,%r13
	jnz continue_6
L_253481:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xDF6,%r13
	jne continue_6
L_253482:
	movq 0x0(%r14),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r14
	movl %r14d,%r11d
	movslq %r11d,%r10
	cmpq %r14,%r10
	jne L_251347
L_253484:
	cmpl $0x3,%r11d
	jne continue_24
L_253486:
	cmpq $0x1,%r14
	jna L_251389
L_253488:
	movq 0x8(%r13),%r11
	movq %r11,0x560(%rbp)
	cmpq $0x0,%r14
	jna L_251389
L_253490:
	movq 0x0(%r13),%r15
	cmpq $0x2,%r14
	jna L_251389
L_253492:
	movq 0x10(%r13),%r14
	movq $0x3737,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r13,0x570(%rbp)
	addq $0x18,%r12
	movl $0x2,0x578(%rbp)
	addq $0x570,%rbp
	leaq (tuple_2+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_9
.p2align 0x4
continue_24:
continue_6:
	movq 0x548(%rbp),%r14
	cmpq $0x1,%r14
	je L_483148
L_253443:
	movq %r15,0x548(%rbp)
	movq %r14,%r15
done_18:
	movq 0x548(%rbp),%r14
	movq 0x8(%r14),%r13
L_253444:
	movq %r13,%r14
	andq $0x3,%r14
	jnz illegal_0
L_253466:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r14
	shrq $0x1,%r14
	cmpq $0xDF1,%r14
	jne illegal_0
L_253467:
	movq 0x8(%r13),%r14
	movq 0x8(%r14),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x560(%rbp)
	cmpq $0x1,0x0(%r11)
	jne illegal_1
L_253468:
	movq $0xC67,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x548(%rbp)
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	cmpq $0x1,%r15
	je L_483147
L_253469:
	movq 0x8(%r15),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_253470:
	incl %ecx
	movl %ecx,0x4(%rbp)
	jo L_251342
L_253471:
	cmpq $0x1,%r15
	je L_483144
L_253472:
	movq 0x8(%r15),%r15
	jmp L_253470
.p2align 0x4
L_483144:
L_253473:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_253474
L_253477:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x570,%rbp
	leaq (L_253478+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253478
.p2align 0x4
.long 0x3FA4
L_253478:
	addq $0xFFFFFFFFFFFFFA90,%rbp
L_253474:
	movl 0x4(%rbp),%ecx
L_253475:
	movl %ecx,0x578(%rbp)
	movq $0x3735,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x548(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x570(%rbp)
	addq $0x570,%rbp
	leaq (L_253476+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_9
.p2align 0x4
L_483147:
L_253479:
	xorl %ecx,%ecx
	jmp L_253475
.p2align 0x4
illegal_1:
illegal_0:
	movq (globalObjptr+0x10738)(%rip),%r15
	movq %r15,0x568(%rbp)
	addq $0x568,%rbp
	leaq (L_253445+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_483148:
L_253480:
	movq (globalObjptr+0x10740)(%rip),%r15
	movq %r15,0x568(%rbp)
	addq $0x568,%rbp
	leaq (error_11+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_483150:
L_253503:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r10
	movq %r10,0x568(%rbp)
L_253504:
	movq %r14,%r10
	andq $0x3,%r10
	jnz L_483156
L_253506:
	movq 0x0(%r14),%r10
	movq %r10,0x570(%rbp)
	cmpq $0x1,0x8(%r14)
	je L_483151
L_253507:
	movq %r13,0x548(%rbp)
	movq %r11,%r15
	jmp L_253441
.p2align 0x4
L_483151:
L_253508:
	movq 0x568(%rbp),%r14
	movq 0x8(%r14),%r10
L_253509:
	movq %r10,%r14
	andq $0x3,%r14
	jnz L_483155
L_253511:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r14
	shrq $0x1,%r14
	cmpq $0xDF1,%r14
	jne L_483154
L_253512:
	movq 0x8(%r10),%r14
	movq 0x8(%r14),%r9
	movq 0x0(%r9),%r8
	movq 0x8(%r9),%rsp
	movq %rsp,0x578(%rbp)
	movb 0x0(%r10),%r14b
	testb %r14b,%r14b
	jnz L_483153
L_253514:
	cmpq $0x1,%r8
	je L_483152
L_253515:
	movq %r13,0x548(%rbp)
	movq %r11,%r15
	jmp L_253441
.p2align 0x4
L_483152:
L_253516:
	movq 0x20(%rbp),%r14
	movq 0x40(%r14),%r13
	movq 0x0(%r13),%r10
	movq %r10,0x590(%rbp)
	movq 0x578(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x588(%rbp)
	addq $0x588,%rbp
	leaq (L_253517+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_23
.p2align 0x4
L_483153:
L_253513:
	movq %r13,0x548(%rbp)
	movq %r11,%r15
	jmp L_253441
.p2align 0x4
L_483154:
	movq %r13,%r15
L_253510:
	movq 0x548(%rbp),%r14
	movq %r15,0x548(%rbp)
	movq %r14,%r15
	jmp L_253441
.p2align 0x4
L_483155:
	movq %r13,%r15
	jmp L_253510
.p2align 0x4
L_483156:
L_253505:
	movq %r13,0x548(%rbp)
	movq %r11,%r15
	jmp L_253441
.p2align 0x4
L_483157:
L_253551:
	movq (globalObjptr+0x6E70)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_483158:
L_253564:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x570,%rbp
	leaq (L_253565+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253565
.p2align 0x4
.long 0x3FA4
L_253565:
	addq $0xFFFFFFFFFFFFFA90,%rbp
	jmp L_253435
.p2align 0x4
L_483162:
L_253425:
	movq 0x528(%rbp),%rdx
	cmpq $0x7FFFFFFF,%rdx
	ja L_251549
L_253426:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x164B,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x538,%rbp
	leaq (L_253427+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253427
.p2align 0x4
.long 0x3F9F
L_253427:
	addq $0xFFFFFFFFFFFFFAC8,%rbp
	movq %rax,0x530(%rbp)
	jmp L_253428
.p2align 0x4
L_483165:
L_252582:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_252583
L_253420:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r14d
	movl %r14d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r14
	movq %r14,%rdi
	xorq %rax,%rax
	addq $0x520,%rbp
	leaq (L_253421+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253421
.p2align 0x4
.long 0x3F9E
L_253421:
	addq $0xFFFFFFFFFFFFFAE0,%rbp
L_252583:
	movq 0x510(%rbp),%r15
	movq $0x1829,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x128(%rbp),%r15
	movq 0x88(%r15),%r14
	movq 0x78(%r15),%r13
	movq %r13,0x4F8(%rbp)
	movq 0x70(%r15),%r13
	movq %r13,0x508(%rbp)
	movq 0x60(%r15),%r13
	movq %r13,0x518(%rbp)
	movq 0x58(%r15),%r13
	movq %r13,0x520(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x528(%rbp)
	movq 0x80(%r15),%r13
	movq 0x10(%r13),%r11
	movq 0x0(%r11),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_251342
L_252584:
	movq $0x1F5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r13d,0x0(%r15)
	addq $0x18,%r12
	movl $0x0,0x4(%r15)
	movq 0x4F0(%rbp),%r13
	movq %r13,0x8(%r15)
	movq %r11,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r15,0x0(%r11)
	movq 0x0(%r14),%r15
	movq %r15,0x530(%rbp)
	movq 0x500(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x4(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_251347
L_252586:
	cmpl $0x0,%r13d
	jl L_251642
L_252587:
	movl $0x0,0x184(%rbp)
.p2align 0x4,,0x7
loop_2976:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_483233
.p2align 0x4,,0x7
L_252588:
	movl 0x184(%rbp),%r13d
	cmpl 0x4(%rbp),%r13d
	jnl L_483176
L_253394:
	movslq %r13d,%r15
	movq 0x4F8(%rbp),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x4F0(%rbp)
	movq 0x500(%rbp),%r13
	movq 0x0(%r13,%r15,8),%r11
	movq 0x8(%r11),%r10
	movq 0x8(%r10),%r9
	movq %r9,0x538(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_251766
L_253395:
	movq %r15,0x0(%r13)
	movq 0x0(%r9),%r13
	cmpq $0x1,%r13
	je L_483174
L_253396:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_253398:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_253399
L_253411:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xCCF,%r13
	je L_483170
L_253399:
	incl %ecx
	movl %ecx,0x540(%rbp)
	jo L_251342
L_253400:
	cmpq $0x1,%r15
	je L_483166
L_253401:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_253398
.p2align 0x4
L_483166:
L_253402:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_483168
.p2align 0x4,,0x7
L_253403:
	movl 0x540(%rbp),%ecx
L_253404:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_251777
L_253405:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl now_5
L_253408:
	movl %ecx,0x0(%r15)
now_5:
	movq 0x4F0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x1F7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x199F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq 0x538(%rbp),%r15
	movq 0x0(%r15),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq %r11,0x0(%r15)
L_253407:
	incl 0x184(%rbp)
	jmp loop_2976
.p2align 0x4
L_483168:
L_253409:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x550,%rbp
	leaq (L_253410+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253410
.p2align 0x4
.long 0x3F9C
L_253410:
	addq $0xFFFFFFFFFFFFFAB0,%rbp
	jmp L_253403
.p2align 0x4
L_483170:
L_253412:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_251777
L_253413:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_253407
L_253415:
	movl %ecx,0x0(%r15)
	jmp L_253407
.p2align 0x4
L_483174:
L_253416:
	xorl %ecx,%ecx
	jmp L_253404
.p2align 0x4
L_483176:
L_252589:
	movq 0x508(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r15,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq $0x1,0x0(%r15)
	movq $0x182B,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x38(%r11)
	addq $0x48,%r12
	movq 0x528(%rbp),%r14
	movq %r14,0x0(%r11)
	movq 0x520(%rbp),%r14
	movq %r14,0x8(%r11)
	movq 0x530(%rbp),%r14
	movq %r14,0x10(%r11)
	movq 0x4F8(%rbp),%r14
	movq %r14,0x18(%r11)
	movq 0x500(%rbp),%r14
	movq %r14,0x20(%r11)
	movq %r15,0x28(%r11)
	movq 0x518(%rbp),%r15
	movq %r15,0x30(%r11)
	movq %r11,0x4F0(%rbp)
	movq $0xF7B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x2957,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x130(%rbp),%r11
	movq %r11,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r15,0x538(%rbp)
	movq $0x249,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x540(%rbp)
	addq $0x10,%r12
	movq 0x510(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r11d
	movslq %r11d,%rdx
	movq %rdx,0x548(%rbp)
	cmpq %r14,%rdx
	jne L_251347
L_252591:
	testq %rdx,%rdx
	jz L_483231
L_252592:
	cmpq $0x7FFFFFFF,%rdx
	ja L_251549
L_252593:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1643,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x558,%rbp
	leaq (L_252594+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252594
.p2align 0x4
.long 0x3F26
L_252594:
	addq $0xFFFFFFFFFFFFFAA8,%rbp
	movq %rax,0x4F8(%rbp)
L_252595:
	movq $0x0,0x500(%rbp)
loop_2977:
	movq 0x548(%rbp),%r15
	cmpq %r15,0x500(%rbp)
	jl L_483211
L_252596:
	movq 0x4F8(%rbp),%r15
	movq $0x182D,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq %r14,0x500(%rbp)
	movl %r14d,%r15d
	movl %r15d,0x4(%rbp)
	movslq %r15d,%r13
	movq %r13,0x508(%rbp)
	cmpq %r13,%r14
	jne L_251347
L_252598:
	cmpl $0x0,%r15d
	jl L_251642
L_252599:
	movq $0x1,0x510(%rbp)
	movl $0x0,0x184(%rbp)
.p2align 0x4,,0x7
loop_2978:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_483208
.p2align 0x4,,0x7
L_252600:
	movl 0x184(%rbp),%r13d
	cmpl 0x4(%rbp),%r13d
	jnl L_483181
L_253140:
	movslq %r13d,%r15
	imulq $0x28,%r15
	movq 0x4F8(%rbp),%r13
	movq 0x18(%r13,%r15,1),%r11
	movq %r11,0x518(%rbp)
	movq 0x510(%rbp),%r13
	cmpq $0x1,%r13
	je L_253147
L_253141:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
.p2align 0x4,,0x7
L_253142:
	movq 0x518(%rbp),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x520(%rbp)
	movq 0x8(%r15),%r13
	movq 0x8(%r13),%r10
	cmpq %r10,0x8(%r11)
	je L_483179
L_253143:
	cmpq $0x1,%r14
	je L_483177
L_253144:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_253142
.p2align 0x4
L_483177:
L_253145:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_483178
.p2align 0x4,,0x7
L_253147:
	movq $0x2533,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x518(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x510(%rbp),%r14
	movq %r14,0x8(%r15)
.p2align 0x4,,0x7
L_253148:
	movq %r15,0x510(%rbp)
	incl 0x184(%rbp)
	jmp loop_2978
.p2align 0x4
L_483178:
L_253149:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x548,%rbp
	leaq (L_253150+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253150
.p2align 0x4
.long 0x3F7E
L_253150:
	addq $0xFFFFFFFFFFFFFAB8,%rbp
	jmp L_253147
.p2align 0x4
L_483179:
L_253151:
	movq 0x518(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x528(%rbp)
	movq (globalObjptr+0x10248)(%rip),%r15
	movq %r15,0x548(%rbp)
	addq $0x548,%rbp
	leaq (L_253152+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_483181:
L_252601:
	movq 0x508(%rbp),%r15
	testq %r15,%r15
	jz L_483207
L_252602:
	cmpq $0x7FFFFFFF,%r15
	ja L_251549
L_252603:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_252604
L_253136:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x548,%rbp
	leaq (L_253137+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253137
.p2align 0x4
.long 0x3F27
L_253137:
	addq $0xFFFFFFFFFFFFFAB8,%rbp
L_252604:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1645,%rcx
	movq 0x508(%rbp),%rdx
	movq $0x60,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x548,%rbp
	leaq (L_252605+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252605
.p2align 0x4
.long 0x3F27
L_252605:
	addq $0xFFFFFFFFFFFFFAB8,%rbp
	movq %rax,0x510(%rbp)
L_252606:
	movq $0x0,0x518(%rbp)
loop_2979:
	movq 0x508(%rbp),%r15
	cmpq %r15,0x518(%rbp)
	jl L_483186
L_252607:
	movq 0x510(%rbp),%r15
	movq $0x933,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r15d
	movslq %r15d,%rdx
	movq %rdx,0x38(%rbp)
	movl %r15d,0x28(%rbp)
	cmpq %r14,%rdx
	movq %r14,0x8(%rbp)
	jne L_251347
L_252609:
	cmpq $0x0,%rdx
	sete %bl
	movzbl %bl,%ebx
	movl %ebx,0x2C(%rbp)
	je L_483184
L_252610:
	cmpq $0x7FFFFFFF,%rdx
	ja L_251549
L_252611:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1509,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x548,%rbp
	leaq (L_252612+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252612
.p2align 0x4
.long 0x3F28
L_252612:
	addq $0xFFFFFFFFFFFFFAB8,%rbp
	movq %rax,%r15
L_252613:
	xorq %r14,%r14
.p2align 0x4,,0x7
loop_2980:
	cmpq 0x38(%rbp),%r14
	jnl L_483182
L_252770:
	movl %r14d,%r13d
	movq %r14,%r11
	movq %r14,%r10
	movslq %r13d,%r9
	imulq $0x18,%r9
	movq 0x510(%rbp),%r13
	movq 0x8(%r13,%r9,1),%r8
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r13,1)
	salq $0x4,%r11
	movq %r8,0x8(%r15,%r11,1)
	salq $0x4,%r10
	movl $0x0,0x0(%r15,%r10,1)
	incq %r14
	jmp loop_2980
.p2align 0x4
L_483182:
L_252614:
	movq $0x9ED,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x548(%rbp)
	movq 0x4F0(%rbp),%r15
	movq %r15,0x550(%rbp)
	addq $0x548,%rbp
	leaq (L_252615+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2016
.p2align 0x4
L_483184:
L_252772:
	movq (globalObjptr+0x6E38)(%rip),%r15
	jmp L_252613
.p2align 0x4
L_483186:
L_252773:
	movq 0x518(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq %r15,%r14
	movq %r15,%r13
	movq %r15,%r11
	movq %r15,%r10
	imulq $0x28,%r14
	movq 0x4F8(%rbp),%r9
	movq 0x0(%r9,%r14,1),%r8
	movq %r8,0x520(%rbp)
	imulq $0x28,%r13
	movq 0x8(%r9,%r13,1),%r14
	movq %r14,0x528(%rbp)
	imulq $0x28,%r11
	movq 0x10(%r9,%r11,1),%r14
	movq %r14,0x530(%rbp)
	imulq $0x28,%r10
	movq 0x18(%r9,%r10,1),%r14
	imulq $0x28,%r15
	movq 0x20(%r9,%r15,1),%r13
	movq 0x8(%r14),%r15
	movq 0x10(%r15),%r11
	movq %r14,0x540(%rbp)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x550(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movl %r15d,%r14d
	movslq %r14d,%r11
	movq %r11,0x558(%rbp)
	cmpq %r15,%r11
	movq %r13,0x548(%rbp)
	jne L_251347
L_252775:
	testq %r11,%r11
	jz L_483203
L_252776:
	cmpq $0x7FFFFFFF,%r11
	ja L_251549
L_252777:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_252778
L_253132:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x568,%rbp
	leaq (L_253133+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253133
.p2align 0x4
.long 0x3F41
L_253133:
	addq $0xFFFFFFFFFFFFFA98,%rbp
L_252778:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1647,%rcx
	movq 0x558(%rbp),%rdx
	movq $0x48,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x568,%rbp
	leaq (L_252779+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252779
.p2align 0x4
.long 0x3F41
L_252779:
	addq $0xFFFFFFFFFFFFFA98,%rbp
	movq %rax,0x560(%rbp)
L_252780:
	movq $0x0,0x568(%rbp)
loop_2984:
	movq 0x558(%rbp),%r15
	cmpq %r15,0x568(%rbp)
	jl L_483195
L_252781:
	movq 0x560(%rbp),%r15
	movq $0x9F3,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	cmpq $0x0,%r14
	jna L_251389
L_252783:
	movq 0x18(%r15),%r13
	movq %r13,0x548(%rbp)
	movq 0x0(%r15),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r11
	movl %r11d,%ecx
	movslq %ecx,%r10
	cmpq %r11,%r10
	jne L_251347
L_252785:
	movl %r14d,%r15d
	movl %r15d,0x184(%rbp)
	movslq %r15d,%r13
	cmpq %r13,%r14
	jne L_251347
L_252787:
	cmpl $0x0,%r15d
	jl L_251642
L_252788:
	movl %ecx,0x558(%rbp)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
loop_2985:
	cmpl 0x184(%rbp),%ecx
	jnl L_483189
L_252923:
	movslq %ecx,%r15
	salq $0x5,%r15
	movq 0x560(%rbp),%r14
	movq 0x0(%r14,%r15,1),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r11
	movl %r11d,%r10d
	movslq %r10d,%r9
	cmpq %r11,%r9
	jne L_251347
L_252925:
	movl 0x558(%rbp),%ebx
	cmpl %ebx,%r10d
	jnl L_483187
L_252928:
L_252927:
	movl %ebx,0x558(%rbp)
	incl %ecx
	jmp loop_2985
.p2align 0x4
L_483187:
	xchgl %r10d,%ebx
	jmp L_252927
.p2align 0x4
L_483189:
L_252789:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_252790
L_252921:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x570,%rbp
	leaq (L_252922+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252922
.p2align 0x4
.long 0x3F63
L_252922:
	addq $0xFFFFFFFFFFFFFA90,%rbp
L_252790:
	movq $0x3EA7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x38,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x530(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x1A8(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x4E8(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x560(%rbp),%r14
	movq %r14,0x20(%r15)
	movq 0x140(%rbp),%r14
	movq %r14,0x28(%r15)
	movq %r15,0x570(%rbp)
	movl 0x558(%rbp),%r15d
	movl %r15d,0x578(%rbp)
	addq $0x570,%rbp
	leaq (L_252791+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_1
.p2align 0x4
L_483195:
L_252930:
	movq 0x568(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq %r15,%r14
	movq %r15,%r13
	movq %r15,%r11
	imulq $0x28,%r14
	movq 0x548(%rbp),%r10
	movq 0x0(%r10,%r14,1),%r9
	movq %r9,0x570(%rbp)
	imulq $0x28,%r13
	movq 0x8(%r10,%r13,1),%r14
	movq %r14,0x578(%rbp)
	imulq $0x28,%r11
	movq 0x18(%r10,%r11,1),%r14
	movq %r14,0x580(%rbp)
	imulq $0x28,%r15
	movq 0x20(%r10,%r15,1),%r14
	movq 0x78(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x590(%rbp)
	movq $0x71,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movl $0x0,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq $0x44D,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movl $0x0,0x0(%r11)
	movl $0x0,0x4(%r11)
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r11,0x0(%r15)
	movq 0x158(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x598(%rbp)
	movq %r15,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%r10,%r13,1)
	movq $0x1,0x0(%r15)
	movq 0x160(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x5A0(%rbp)
	movq %r15,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%r10,%r13,1)
	movq $0x1,0x0(%r15)
	movq 0x168(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x5A8(%rbp)
	movq %r15,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%r10,%r13,1)
	movq $0x1,0x0(%r15)
	movq 0x170(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x5B0(%rbp)
	movq %r15,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%r10,%r13,1)
	movq $0x1,0x0(%r15)
	movq 0x178(%rbp),%r15
	movq 0x1E0(%r15),%r13
	movq %r13,0x5B8(%rbp)
	movq 0x1D8(%r15),%r13
	movq %r13,0x5C0(%rbp)
	movq 0x1D0(%r15),%r13
	movq %r13,0x5C8(%rbp)
	movq 0x1C8(%r15),%r13
	movq %r13,0x5D0(%rbp)
	movq 0x1C0(%r15),%r13
	movq %r13,0x5D8(%rbp)
	movq 0x1B8(%r15),%r13
	movq %r13,0x5E0(%rbp)
	movq 0x1B0(%r15),%r13
	movq %r13,0x5E8(%rbp)
	movq 0x1A8(%r15),%r13
	movq %r13,0x5F0(%rbp)
	movq 0x1A0(%r15),%r13
	movq %r13,0x5F8(%rbp)
	movq 0x198(%r15),%r13
	movq %r13,0x600(%rbp)
	movq 0x190(%r15),%r13
	movq %r13,0x608(%rbp)
	movq 0x188(%r15),%r13
	movq %r13,0x610(%rbp)
	movq 0x180(%r15),%r13
	movq %r13,0x618(%rbp)
	movq 0x178(%r15),%r13
	movq %r13,0x620(%rbp)
	movq 0x170(%r15),%r13
	movq %r13,0x628(%rbp)
	movq 0x168(%r15),%r13
	movq %r13,0x630(%rbp)
	movq 0x160(%r15),%r13
	movq %r13,0x638(%rbp)
	movq 0x158(%r15),%r13
	movq %r13,0x640(%rbp)
	movq 0x150(%r15),%r13
	movq %r13,0x648(%rbp)
	movq 0x148(%r15),%r13
	movq %r13,0x650(%rbp)
	movq 0x140(%r15),%r13
	movq %r13,0x658(%rbp)
	movq 0x138(%r15),%r13
	movq %r13,0x660(%rbp)
	movq 0x130(%r15),%r13
	movq %r13,0x668(%rbp)
	movq 0x128(%r15),%r13
	movq %r13,0x670(%rbp)
	movq 0x120(%r15),%r13
	movq %r13,0x678(%rbp)
	movq 0x118(%r15),%r13
	movq %r13,0x680(%rbp)
	movq 0x110(%r15),%r13
	movq %r13,0x688(%rbp)
	movq 0x108(%r15),%r13
	movq %r13,0x690(%rbp)
	movq 0x100(%r15),%r13
	movq %r13,0x698(%rbp)
	movq 0xF8(%r15),%r13
	movq %r13,0x6A0(%rbp)
	movq 0xF0(%r15),%r13
	movq %r13,0x6A8(%rbp)
	movq 0xD0(%r15),%r13
	movq %r13,0x6B0(%rbp)
	movq 0xC8(%r15),%r13
	movq %r13,0x6B8(%rbp)
	movq 0xC0(%r15),%r13
	movq %r13,0x6C0(%rbp)
	movq 0xB8(%r15),%r13
	movq %r13,0x6C8(%rbp)
	movq 0xB0(%r15),%r13
	movq %r13,0x6D0(%rbp)
	movq 0xA8(%r15),%r13
	movq %r13,0x6D8(%rbp)
	movq 0xA0(%r15),%r13
	movq %r13,0x6E0(%rbp)
	movq 0x98(%r15),%r13
	movq %r13,0x6E8(%rbp)
	movq 0x90(%r15),%r13
	movq %r13,0x6F0(%rbp)
	movq 0x88(%r15),%r13
	movq %r13,0x6F8(%rbp)
	movq 0x80(%r15),%r13
	movq %r13,0x700(%rbp)
	movq 0x78(%r15),%r13
	movq %r13,0x708(%rbp)
	movq 0x70(%r15),%r13
	movq %r13,0x710(%rbp)
	movq 0x68(%r15),%r13
	movq %r13,0x718(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x720(%rbp)
	movq 0x60(%r15),%r13
	movq %r13,0x728(%rbp)
	movq 0x58(%r15),%r13
	movq %r13,0x730(%rbp)
	movq 0x50(%r15),%r13
	movq %r13,0x738(%rbp)
	movq 0x48(%r15),%r13
	movq %r13,0x740(%rbp)
	movq 0x40(%r15),%r13
	movq %r13,0x748(%rbp)
	movq 0x38(%r15),%r13
	movq %r13,0x750(%rbp)
	movq 0x30(%r15),%r13
	movq %r13,0x758(%rbp)
	movq 0x28(%r15),%r13
	movq %r13,0x760(%rbp)
	movq 0x20(%r15),%r13
	movq %r13,0x768(%rbp)
	movq $0xC79,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq %r15,0x770(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	movq %r11,0x778(%rbp)
	movl %r13d,0x184(%rbp)
	cmpq %r11,%r15
	movq %r14,0x588(%rbp)
	jne L_251347
L_252932:
	testq %r11,%r11
	jz L_483199
L_252933:
	cmpq $0x7FFFFFFF,%r11
	ja L_251549
L_252934:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_252935
L_253128:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x788,%rbp
	leaq (L_253129+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253129
.p2align 0x4
.long 0x3F64
L_253129:
	addq $0xFFFFFFFFFFFFF878,%rbp
L_252935:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1649,%rcx
	movq 0x778(%rbp),%rdx
	movq $0x10,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x788,%rbp
	leaq (L_252936+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252936
.p2align 0x4
.long 0x3F64
L_252936:
	addq $0xFFFFFFFFFFFFF878,%rbp
	movq %rax,0x780(%rbp)
L_252937:
	movq $0x0,0x788(%rbp)
loop_2987:
	movq 0x778(%rbp),%r15
	cmpq %r15,0x788(%rbp)
	jl L_483196
L_252938:
	movq 0x780(%rbp),%r15
	movq $0xC75,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x580(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x5B8(%rbp)
	movq $0x1,0x790(%rbp)
	movq 0x550(%rbp),%r14
	movq %r14,0x798(%rbp)
	movq %r15,0x7A0(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x7A8(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x7B0(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x7B8(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x7C0(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x7C8(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x7D0(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x7D8(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x7E0(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x7E8(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x7F0(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x7F8(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x800(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x808(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x810(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x818(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0x820(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0x828(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0x830(%rbp)
	movq 0xA8(%rbp),%r15
	movq %r15,0x838(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0x840(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0x848(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0x850(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0x858(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0x860(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0x868(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0x870(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0x878(%rbp)
	movq 0xF0(%rbp),%r15
	movq %r15,0x880(%rbp)
	movq 0xF8(%rbp),%r15
	movq %r15,0x888(%rbp)
	movq 0x100(%rbp),%r15
	movq %r15,0x890(%rbp)
	movq 0x108(%rbp),%r15
	movq %r15,0x898(%rbp)
	movq 0x110(%rbp),%r15
	movq %r15,0x8A0(%rbp)
	movq 0x118(%rbp),%r15
	movq %r15,0x8A8(%rbp)
	movq 0x120(%rbp),%r15
	movq %r15,0x8B0(%rbp)
	movq 0x128(%rbp),%r15
	movq %r15,0x8B8(%rbp)
	movq 0x130(%rbp),%r15
	movq %r15,0x8C0(%rbp)
	movq 0x138(%rbp),%r15
	movq %r15,0x8C8(%rbp)
	movq 0x140(%rbp),%r15
	movq %r15,0x8D0(%rbp)
	movq 0x148(%rbp),%r15
	movq %r15,0x8D8(%rbp)
	movq 0x150(%rbp),%r15
	movq %r15,0x8E0(%rbp)
	movq 0x158(%rbp),%r15
	movq %r15,0x8E8(%rbp)
	movq 0x160(%rbp),%r15
	movq %r15,0x8F0(%rbp)
	movq 0x168(%rbp),%r15
	movq %r15,0x8F8(%rbp)
	movq 0x170(%rbp),%r15
	movq %r15,0x900(%rbp)
	movq 0x178(%rbp),%r15
	movq %r15,0x908(%rbp)
	movl 0x180(%rbp),%r15d
	movl %r15d,0x910(%rbp)
	movq 0x188(%rbp),%r15
	movq %r15,0x918(%rbp)
	movq 0x190(%rbp),%r15
	movq %r15,0x920(%rbp)
	movq 0x198(%rbp),%r15
	movq %r15,0x928(%rbp)
	movq 0x1A0(%rbp),%r15
	movq %r15,0x930(%rbp)
	movq 0x1A8(%rbp),%r15
	movq %r15,0x938(%rbp)
	movq 0x1B0(%rbp),%r15
	movq %r15,0x940(%rbp)
	movq 0x1B8(%rbp),%r15
	movq %r15,0x948(%rbp)
	movq 0x1C0(%rbp),%r15
	movq %r15,0x950(%rbp)
	movq 0x1C8(%rbp),%r15
	movq %r15,0x958(%rbp)
	movq 0x1D0(%rbp),%r15
	movq %r15,0x960(%rbp)
	movq 0x1D8(%rbp),%r15
	movq %r15,0x968(%rbp)
	movq 0x1E0(%rbp),%r15
	movq %r15,0x970(%rbp)
	movq 0x1E8(%rbp),%r15
	movq %r15,0x978(%rbp)
	movq 0x1F0(%rbp),%r15
	movq %r15,0x980(%rbp)
	movq 0x1F8(%rbp),%r15
	movq %r15,0x988(%rbp)
	movq 0x200(%rbp),%r15
	movq %r15,0x990(%rbp)
	movq 0x208(%rbp),%r15
	movq %r15,0x998(%rbp)
	movq 0x210(%rbp),%r15
	movq %r15,0x9A0(%rbp)
	movq 0x218(%rbp),%r15
	movq %r15,0x9A8(%rbp)
	movq 0x220(%rbp),%r15
	movq %r15,0x9B0(%rbp)
	movq 0x228(%rbp),%r15
	movq %r15,0x9B8(%rbp)
	movq 0x230(%rbp),%r15
	movq %r15,0x9C0(%rbp)
	movq 0x238(%rbp),%r15
	movq %r15,0x9C8(%rbp)
	movq 0x240(%rbp),%r15
	movq %r15,0x9D0(%rbp)
	movq 0x248(%rbp),%r15
	movq %r15,0x9D8(%rbp)
	movq 0x250(%rbp),%r15
	movq %r15,0x9E0(%rbp)
	movq 0x258(%rbp),%r15
	movq %r15,0x9E8(%rbp)
	movq 0x260(%rbp),%r15
	movq %r15,0x9F0(%rbp)
	movq 0x268(%rbp),%r15
	movq %r15,0x9F8(%rbp)
	movq 0x270(%rbp),%r15
	movq %r15,0xA00(%rbp)
	movq 0x278(%rbp),%r15
	movq %r15,0xA08(%rbp)
	movq 0x280(%rbp),%r15
	movq %r15,0xA10(%rbp)
	movq 0x288(%rbp),%r15
	movq %r15,0xA18(%rbp)
	movq 0x290(%rbp),%r15
	movq %r15,0xA20(%rbp)
	movq 0x298(%rbp),%r15
	movq %r15,0xA28(%rbp)
	movq 0x2A0(%rbp),%r15
	movq %r15,0xA30(%rbp)
	movq 0x2A8(%rbp),%r15
	movq %r15,0xA38(%rbp)
	movq 0x2B0(%rbp),%r15
	movq %r15,0xA40(%rbp)
	movq 0x2B8(%rbp),%r15
	movq %r15,0xA48(%rbp)
	movq 0x2C0(%rbp),%r15
	movq %r15,0xA50(%rbp)
	movq 0x2C8(%rbp),%r15
	movq %r15,0xA58(%rbp)
	movq 0x2D0(%rbp),%r15
	movq %r15,0xA60(%rbp)
	movq 0x2D8(%rbp),%r15
	movq %r15,0xA68(%rbp)
	movq 0x2E0(%rbp),%r15
	movq %r15,0xA70(%rbp)
	movq 0x2E8(%rbp),%r15
	movq %r15,0xA78(%rbp)
	movq 0x2F0(%rbp),%r15
	movq %r15,0xA80(%rbp)
	movq 0x2F8(%rbp),%r15
	movq %r15,0xA88(%rbp)
	movq 0x300(%rbp),%r15
	movq %r15,0xA90(%rbp)
	movq 0x308(%rbp),%r15
	movq %r15,0xA98(%rbp)
	movq 0x310(%rbp),%r15
	movq %r15,0xAA0(%rbp)
	movq 0x318(%rbp),%r15
	movq %r15,0xAA8(%rbp)
	movq 0x320(%rbp),%r15
	movq %r15,0xAB0(%rbp)
	movq 0x328(%rbp),%r15
	movq %r15,0xAB8(%rbp)
	movq 0x330(%rbp),%r15
	movq %r15,0xAC0(%rbp)
	movq 0x338(%rbp),%r15
	movq %r15,0xAC8(%rbp)
	movq 0x340(%rbp),%r15
	movq %r15,0xAD0(%rbp)
	movq 0x348(%rbp),%r15
	movq %r15,0xAD8(%rbp)
	movq 0x350(%rbp),%r15
	movq %r15,0xAE0(%rbp)
	movq 0x358(%rbp),%r15
	movq %r15,0xAE8(%rbp)
	movq 0x360(%rbp),%r15
	movq %r15,0xAF0(%rbp)
	movq 0x368(%rbp),%r15
	movq %r15,0xAF8(%rbp)
	movq 0x370(%rbp),%r15
	movq %r15,0xB00(%rbp)
	movq 0x378(%rbp),%r15
	movq %r15,0xB08(%rbp)
	movq 0x380(%rbp),%r15
	movq %r15,0xB10(%rbp)
	movq 0x388(%rbp),%r15
	movq %r15,0xB18(%rbp)
	movq 0x390(%rbp),%r15
	movq %r15,0xB20(%rbp)
	movq 0x398(%rbp),%r15
	movq %r15,0xB28(%rbp)
	movq 0x3A0(%rbp),%r15
	movq %r15,0xB30(%rbp)
	movq 0x3A8(%rbp),%r15
	movq %r15,0xB38(%rbp)
	movq 0x3B0(%rbp),%r15
	movq %r15,0xB40(%rbp)
	movq 0x3B8(%rbp),%r15
	movq %r15,0xB48(%rbp)
	movq 0x3C0(%rbp),%r15
	movq %r15,0xB50(%rbp)
	movq 0x3C8(%rbp),%r15
	movq %r15,0xB58(%rbp)
	movq 0x3D0(%rbp),%r15
	movq %r15,0xB60(%rbp)
	movq 0x3D8(%rbp),%r15
	movq %r15,0xB68(%rbp)
	movq 0x3E0(%rbp),%r15
	movq %r15,0xB70(%rbp)
	movq 0x3E8(%rbp),%r15
	movq %r15,0xB78(%rbp)
	movq 0x3F0(%rbp),%r15
	movq %r15,0xB80(%rbp)
	movq 0x3F8(%rbp),%r15
	movq %r15,0xB88(%rbp)
	movq 0x400(%rbp),%r15
	movq %r15,0xB90(%rbp)
	movq 0x408(%rbp),%r15
	movq %r15,0xB98(%rbp)
	movq 0x410(%rbp),%r15
	movq %r15,0xBA0(%rbp)
	movq 0x418(%rbp),%r15
	movq %r15,0xBA8(%rbp)
	movq 0x420(%rbp),%r15
	movq %r15,0xBB0(%rbp)
	movq 0x428(%rbp),%r15
	movq %r15,0xBB8(%rbp)
	movq 0x430(%rbp),%r15
	movq %r15,0xBC0(%rbp)
	movq 0x438(%rbp),%r15
	movq %r15,0xBC8(%rbp)
	movq 0x440(%rbp),%r15
	movq %r15,0xBD0(%rbp)
	movq 0x448(%rbp),%r15
	movq %r15,0xBD8(%rbp)
	movq 0x450(%rbp),%r15
	movq %r15,0xBE0(%rbp)
	movq 0x458(%rbp),%r15
	movq %r15,0xBE8(%rbp)
	movq 0x460(%rbp),%r15
	movq %r15,0xBF0(%rbp)
	movq 0x468(%rbp),%r15
	movq %r15,0xBF8(%rbp)
	movq 0x470(%rbp),%r15
	movq %r15,0xC00(%rbp)
	movq 0x478(%rbp),%r15
	movq %r15,0xC08(%rbp)
	movq 0x480(%rbp),%r15
	movq %r15,0xC10(%rbp)
	movq 0x488(%rbp),%r15
	movq %r15,0xC18(%rbp)
	movq 0x490(%rbp),%r15
	movq %r15,0xC20(%rbp)
	movq 0x498(%rbp),%r15
	movq %r15,0xC28(%rbp)
	movq 0x4A0(%rbp),%r15
	movq %r15,0xC30(%rbp)
	movq 0x4A8(%rbp),%r15
	movq %r15,0xC38(%rbp)
	movq 0x4B0(%rbp),%r15
	movq %r15,0xC40(%rbp)
	movq 0x4B8(%rbp),%r15
	movq %r15,0xC48(%rbp)
	movq 0x4C0(%rbp),%r15
	movq %r15,0xC50(%rbp)
	movq 0x4C8(%rbp),%r15
	movq %r15,0xC58(%rbp)
	movq 0x4D0(%rbp),%r15
	movq %r15,0xC60(%rbp)
	addq $0x790,%rbp
	leaq (L_252939+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp elabExp_0
.p2align 0x4
L_483196:
L_253123:
	movq 0x788(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x588(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x790(%rbp)
	movq $0x3701,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x4E8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x7A0(%rbp)
	movq (globalObjptr+0x1C00)(%rip),%r15
	movq %r15,0x7A8(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x7B0(%rbp)
	movq %r13,0x7B8(%rbp)
	movq 0x5B8(%rbp),%r15
	movq %r15,0x7C0(%rbp)
	movq 0x5C0(%rbp),%r15
	movq %r15,0x7C8(%rbp)
	movq 0x5C8(%rbp),%r15
	movq %r15,0x7D0(%rbp)
	movq 0x5D0(%rbp),%r15
	movq %r15,0x7D8(%rbp)
	movq 0x5D8(%rbp),%r15
	movq %r15,0x7E0(%rbp)
	movq 0x770(%rbp),%r15
	movq %r15,0x7E8(%rbp)
	movq 0x5E0(%rbp),%r15
	movq %r15,0x7F0(%rbp)
	movq 0x5E8(%rbp),%r15
	movq %r15,0x7F8(%rbp)
	movq 0x5F0(%rbp),%r15
	movq %r15,0x800(%rbp)
	movq 0x5F8(%rbp),%r15
	movq %r15,0x808(%rbp)
	movq 0x600(%rbp),%r15
	movq %r15,0x810(%rbp)
	movq 0x608(%rbp),%r15
	movq %r15,0x818(%rbp)
	movq 0x610(%rbp),%r15
	movq %r15,0x820(%rbp)
	movq 0x618(%rbp),%r15
	movq %r15,0x828(%rbp)
	movq 0x620(%rbp),%r15
	movq %r15,0x830(%rbp)
	movq 0x628(%rbp),%r15
	movq %r15,0x838(%rbp)
	movq 0x630(%rbp),%r15
	movq %r15,0x840(%rbp)
	movq 0x638(%rbp),%r15
	movq %r15,0x848(%rbp)
	movq 0x640(%rbp),%r15
	movq %r15,0x850(%rbp)
	movq 0x648(%rbp),%r15
	movq %r15,0x858(%rbp)
	movq 0x650(%rbp),%r15
	movq %r15,0x860(%rbp)
	movq 0x658(%rbp),%r15
	movq %r15,0x868(%rbp)
	movq 0x660(%rbp),%r15
	movq %r15,0x870(%rbp)
	movq 0x668(%rbp),%r15
	movq %r15,0x878(%rbp)
	movq 0x670(%rbp),%r15
	movq %r15,0x880(%rbp)
	movq 0x678(%rbp),%r15
	movq %r15,0x888(%rbp)
	movq 0x680(%rbp),%r15
	movq %r15,0x890(%rbp)
	movq 0x688(%rbp),%r15
	movq %r15,0x898(%rbp)
	movq 0x690(%rbp),%r15
	movq %r15,0x8A0(%rbp)
	movq 0x698(%rbp),%r15
	movq %r15,0x8A8(%rbp)
	movq 0x6A0(%rbp),%r15
	movq %r15,0x8B0(%rbp)
	movq 0x6A8(%rbp),%r15
	movq %r15,0x8B8(%rbp)
	movq 0x6B0(%rbp),%r15
	movq %r15,0x8C0(%rbp)
	movq 0x6B8(%rbp),%r15
	movq %r15,0x8C8(%rbp)
	movq 0x6C0(%rbp),%r15
	movq %r15,0x8D0(%rbp)
	movq 0x6C8(%rbp),%r15
	movq %r15,0x8D8(%rbp)
	movq 0x6D0(%rbp),%r15
	movq %r15,0x8E0(%rbp)
	movq 0x6D8(%rbp),%r15
	movq %r15,0x8E8(%rbp)
	movq 0x6E0(%rbp),%r15
	movq %r15,0x8F0(%rbp)
	movq 0x6E8(%rbp),%r15
	movq %r15,0x8F8(%rbp)
	movq 0x6F0(%rbp),%r15
	movq %r15,0x900(%rbp)
	movq 0x6F8(%rbp),%r15
	movq %r15,0x908(%rbp)
	movq 0x700(%rbp),%r15
	movq %r15,0x910(%rbp)
	movq 0x708(%rbp),%r15
	movq %r15,0x918(%rbp)
	movq 0x710(%rbp),%r15
	movq %r15,0x920(%rbp)
	movq 0x718(%rbp),%r15
	movq %r15,0x928(%rbp)
	movq 0x720(%rbp),%r15
	movq %r15,0x930(%rbp)
	movq 0x728(%rbp),%r15
	movq %r15,0x938(%rbp)
	movq 0x730(%rbp),%r15
	movq %r15,0x940(%rbp)
	movq 0x738(%rbp),%r15
	movq %r15,0x948(%rbp)
	movq 0x740(%rbp),%r15
	movq %r15,0x950(%rbp)
	movq 0x748(%rbp),%r15
	movq %r15,0x958(%rbp)
	movq 0x750(%rbp),%r15
	movq %r15,0x960(%rbp)
	movq 0x758(%rbp),%r15
	movq %r15,0x968(%rbp)
	movq 0x760(%rbp),%r15
	movq %r15,0x970(%rbp)
	movq 0x768(%rbp),%r15
	movq %r15,0x978(%rbp)
	addq $0x7A0,%rbp
	leaq (L_253124+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2017
.p2align 0x4
L_483199:
L_253131:
	movq (globalObjptr+0x6E58)(%rip),%r15
	movq %r15,0x780(%rbp)
	jmp L_252937
.p2align 0x4
L_483203:
L_253135:
	movq (globalObjptr+0x6E50)(%rip),%r15
	movq %r15,0x560(%rbp)
	jmp L_252780
.p2align 0x4
L_483207:
L_253139:
	movq (globalObjptr+0x6E30)(%rip),%r14
	movq %r14,0x510(%rbp)
	jmp L_252606
.p2align 0x4
L_483208:
L_253192:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x548,%rbp
	leaq (L_253193+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253193
.p2align 0x4
.long 0x3F87
L_253193:
	addq $0xFFFFFFFFFFFFFAB8,%rbp
	jmp L_252600
.p2align 0x4
L_483211:
L_253195:
	movq 0x500(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x510(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x508(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movl %r15d,%r14d
	movl %r14d,0x4(%rbp)
	movslq %r14d,%r11
	cmpq %r15,%r11
	jne L_251347
L_253197:
	testl %r14d,%r14d
	jz L_483228
L_253198:
	cmpq $0x0,%r15
	jna L_251389
L_253200:
	movq 0x8(%r13),%r15
	movq %r15,0x518(%rbp)
	movq 0x10(%r13),%r15
	movq %r15,0x520(%rbp)
	movq 0x20(%r13),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r11
	movl %r11d,%r10d
	movl %r10d,0x184(%rbp)
	movslq %r10d,%r9
	cmpq %r9,%r11
	jne L_251347
L_253202:
	cmpl $0x0,%r14d
	jl L_251642
L_253203:
	movl $0x0,0x528(%rbp)
.p2align 0x4,,0x7
loop_2988:
	movl 0x528(%rbp),%r15d
	cmpl 0x4(%rbp),%r15d
	jnl L_483214
L_253322:
	movslq %r15d,%r14
	movq %r14,%r15
	imulq $0x28,%r15
	movq 0x508(%rbp),%r13
	movq 0x8(%r13,%r15,1),%r11
	movq %r11,0x530(%rbp)
	imulq $0x28,%r14
	movq 0x20(%r13,%r14,1),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r11
	movl %r11d,%r10d
	movslq %r10d,%r9
	cmpq %r11,%r9
	jne L_251347
L_253324:
	cmpl 0x184(%rbp),%r10d
	jne L_483212
.p2align 0x4,,0x7
L_253367:
	incl 0x528(%rbp)
	jmp loop_2988
.p2align 0x4
L_483212:
L_253325:
	movq (globalObjptr+0x10728)(%rip),%r15
	movq %r15,0x558(%rbp)
	addq $0x558,%rbp
	leaq (L_253326+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_483214:
L_253204:
	movq $0x1,0x518(%rbp)
	movl $0x0,0x184(%rbp)
.p2align 0x4,,0x7
loop_2989:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_483224
.p2align 0x4,,0x7
L_253205:
	movl 0x184(%rbp),%r14d
	cmpl 0x4(%rbp),%r14d
	jnl L_483216
L_253316:
	movslq %r14d,%r15
	imulq $0x28,%r15
	movq 0x508(%rbp),%r14
	movq 0x10(%r14,%r15,1),%r13
	movq 0x520(%rbp),%r14
	movq 0x8(%r14),%r11
	movq 0x8(%r13),%r10
	movq 0x8(%r10),%r9
	cmpq %r9,0x8(%r11)
	je L_483215
L_253317:
	movq $0x2533,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq 0x518(%rbp),%r14
	movq %r14,0x8(%r15)
L_253318:
	movq %r15,0x518(%rbp)
	incl 0x184(%rbp)
	jmp loop_2989
.p2align 0x4
L_483215:
L_253319:
	movq 0x518(%rbp),%r15
	jmp L_253318
.p2align 0x4
L_483216:
L_253206:
	cmpq $0x1,0x518(%rbp)
	je L_483223
L_253207:
	movq 0x520(%rbp),%r15
	movq %r15,0x528(%rbp)
	movq $0x1,0x530(%rbp)
.p2align 0x4,,0x7
L_253208:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_483222
.p2align 0x4,,0x7
L_253209:
	movq $0x2533,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x528(%rbp),%r11
	movq %r11,0x0(%r14)
	movq 0x530(%rbp),%r11
	movq %r11,0x8(%r14)
	movq 0x518(%rbp),%r11
	cmpq $0x1,%r11
	je L_483221
L_253210:
	movq 0x8(%r11),%r15
	movq 0x0(%r11),%r13
.p2align 0x4,,0x7
L_253211:
	cmpq $0x1,%r14
	je L_253217
L_253212:
	movq 0x8(%r14),%r10
	movq 0x0(%r14),%r11
.p2align 0x4,,0x7
L_253213:
	movq 0x8(%r11),%r9
	movq 0x8(%r13),%r8
	movq 0x8(%r8),%rsp
	cmpq %rsp,0x8(%r9)
	je L_483218
L_253214:
	cmpq $0x1,%r10
	je L_483217
L_253215:
	movq 0x0(%r10),%r11
	movq 0x8(%r10),%r10
	jmp L_253213
.p2align 0x4
L_483217:
L_253217:
	movq %r15,0x518(%rbp)
	movq %r13,0x528(%rbp)
	movq %r14,0x530(%rbp)
	jmp L_253208
.p2align 0x4
L_483218:
L_253218:
	cmpq $0x1,%r15
	je L_483219
L_253219:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	jmp L_253211
.p2align 0x4
L_483219:
L_253220:
	movq %r14,0x518(%rbp)
L_253221:
	movq (globalObjptr+0x10720)(%rip),%r15
	movq %r15,0x558(%rbp)
	addq $0x558,%rbp
	leaq (L_253222+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_483221:
L_253312:
	movq %r14,0x518(%rbp)
	jmp L_253221
.p2align 0x4
L_483222:
L_253313:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x558,%rbp
	leaq (L_253314+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253314
.p2align 0x4
.long 0x3F8E
L_253314:
	addq $0xFFFFFFFFFFFFFAA8,%rbp
	jmp L_253209
.p2align 0x4
L_483223:
L_253256:
	movq 0x520(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x518(%rbp)
	movq 0x138(%rbp),%r15
	movq %r15,0x558(%rbp)
	addq $0x558,%rbp
	leaq (L_253257+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_483224:
L_253320:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x558,%rbp
	leaq (L_253321+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253321
.p2align 0x4
.long 0x3F90
L_253321:
	addq $0xFFFFFFFFFFFFFAA8,%rbp
	jmp L_253205
.p2align 0x4
L_483228:
L_253391:
	movq (globalObjptr+0x6E60)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_483231:
L_253393:
	movq (globalObjptr+0x6E28)(%rip),%r15
	movq %r15,0x4F8(%rbp)
	jmp L_252595
.p2align 0x4
L_483233:
L_253417:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x540,%rbp
	leaq (L_253418+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253418
.p2align 0x4
.long 0x3F9D
L_253418:
	addq $0xFFFFFFFFFFFFFAC0,%rbp
	jmp L_252588
.p2align 0x4
L_483239:
L_253571:
	movq (globalObjptr+0x6E20)(%rip),%r15
	movq %r15,0x510(%rbp)
	jmp L_252581
.p2align 0x4
L_483241:
L_252430:
	movq 0x8(%r14),%r15
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x538(%rbp)
	movq 0x78(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x4D8(%rbp)
	movq 0x80(%rbp),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x4E0(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x4E8(%rbp)
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq $0x1,0x0(%r13)
	movq 0x90(%rbp),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x4F0(%rbp)
	movq 0x0(%r11),%r9
	movq %r9,0x4F8(%rbp)
	movq %r11,%r9
	shrq $0x8,%r9
	movb $0x1,0x0(%r10,%r9,1)
	movq $0x1,0x0(%r11)
	movq 0xA0(%rbp),%r11
	movq 0x10(%r11),%r9
	movq %r9,0x500(%rbp)
	movq 0x0(%r9),%r8
	movq %r8,0x508(%rbp)
	movq %r9,%r8
	shrq $0x8,%r8
	movb $0x1,0x0(%r10,%r8,1)
	movq $0x1,0x0(%r9)
	movq 0xB0(%rbp),%r9
	movq 0x10(%r9),%r8
	movq %r8,0x510(%rbp)
	movq 0x0(%r8),%rsp
	movq %rsp,0x518(%rbp)
	movq %r8,%rsp
	shrq $0x8,%rsp
	movq %rsp,%rax
	movb $0x1,0x0(%r10,%rax,1)
	movq $0x1,0x0(%r8)
	movq $0x71,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	addq $0x10,%r12
	movl $0x0,0x0(%r8)
	movl $0x0,0x4(%r8)
	movq $0x44D,0x0(%r12)
	movq %r12,%rsp
	addq $0x8,%rsp
	movq %r8,0x8(%rsp)
	addq $0x18,%r12
	movl $0x0,0x0(%rsp)
	movl $0x0,0x4(%rsp)
	movq %r15,%r8
	shrq $0x8,%r8
	movb $0x1,0x0(%r10,%r8,1)
	movq %rsp,0x0(%r15)
	movl $0x0,0x528(%rbp)
	movq 0x8(%rbp),%r10
	movq %r10,0x530(%rbp)
	movq 0x18(%rbp),%r10
	movq %r10,0x540(%rbp)
	movq 0x20(%rbp),%r10
	movq %r10,0x548(%rbp)
	movq 0x28(%rbp),%r10
	movq %r10,0x550(%rbp)
	movq 0x30(%rbp),%r10
	movq %r10,0x558(%rbp)
	movq 0x38(%rbp),%r10
	movq %r10,0x560(%rbp)
	movq 0x40(%rbp),%r10
	movq %r10,0x568(%rbp)
	movq 0x48(%rbp),%r10
	movq %r10,0x570(%rbp)
	movq 0x50(%rbp),%r10
	movq %r10,0x578(%rbp)
	movq 0x58(%rbp),%r10
	movq %r10,0x580(%rbp)
	movq 0x60(%rbp),%r10
	movq %r10,0x588(%rbp)
	movq 0x68(%rbp),%r10
	movq %r10,0x590(%rbp)
	movq 0x70(%rbp),%r10
	movq %r10,0x598(%rbp)
	movq %r15,0x5A0(%rbp)
	movq %r14,0x5A8(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x5B0(%rbp)
	movq %r13,0x5B8(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0x5C0(%rbp)
	movq %r11,0x5C8(%rbp)
	movq 0xA8(%rbp),%r15
	movq %r15,0x5D0(%rbp)
	movq %r9,0x5D8(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0x5E0(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0x5E8(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0x5F0(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0x5F8(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0x600(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0x608(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0x610(%rbp)
	movq 0xF0(%rbp),%r15
	movq %r15,0x618(%rbp)
	movq 0xF8(%rbp),%r15
	movq %r15,0x620(%rbp)
	movq 0x100(%rbp),%r15
	movq %r15,0x628(%rbp)
	movq 0x108(%rbp),%r15
	movq %r15,0x630(%rbp)
	movq 0x110(%rbp),%r15
	movq %r15,0x638(%rbp)
	movq 0x118(%rbp),%r15
	movq %r15,0x640(%rbp)
	movq 0x120(%rbp),%r15
	movq %r15,0x648(%rbp)
	movq 0x128(%rbp),%r15
	movq %r15,0x650(%rbp)
	movq 0x130(%rbp),%r15
	movq %r15,0x658(%rbp)
	movq 0x138(%rbp),%r15
	movq %r15,0x660(%rbp)
	movq 0x140(%rbp),%r15
	movq %r15,0x668(%rbp)
	movq 0x148(%rbp),%r15
	movq %r15,0x670(%rbp)
	movq 0x150(%rbp),%r15
	movq %r15,0x678(%rbp)
	movq 0x158(%rbp),%r15
	movq %r15,0x680(%rbp)
	movq 0x160(%rbp),%r15
	movq %r15,0x688(%rbp)
	movq 0x168(%rbp),%r15
	movq %r15,0x690(%rbp)
	movq 0x170(%rbp),%r15
	movq %r15,0x698(%rbp)
	movq 0x178(%rbp),%r15
	movq %r15,0x6A0(%rbp)
	movl 0x180(%rbp),%r15d
	movl %r15d,0x6A8(%rbp)
	movq 0x188(%rbp),%r15
	movq %r15,0x6B0(%rbp)
	movq 0x190(%rbp),%r15
	movq %r15,0x6B8(%rbp)
	movq 0x198(%rbp),%r15
	movq %r15,0x6C0(%rbp)
	movq 0x1A0(%rbp),%r15
	movq %r15,0x6C8(%rbp)
	movq 0x1A8(%rbp),%r15
	movq %r15,0x6D0(%rbp)
	movq 0x1B0(%rbp),%r15
	movq %r15,0x6D8(%rbp)
	movq 0x1B8(%rbp),%r15
	movq %r15,0x6E0(%rbp)
	movq 0x1C0(%rbp),%r15
	movq %r15,0x6E8(%rbp)
	movq 0x1C8(%rbp),%r15
	movq %r15,0x6F0(%rbp)
	movq 0x1D0(%rbp),%r15
	movq %r15,0x6F8(%rbp)
	movq 0x1D8(%rbp),%r15
	movq %r15,0x700(%rbp)
	movq 0x1E0(%rbp),%r15
	movq %r15,0x708(%rbp)
	movq 0x1E8(%rbp),%r15
	movq %r15,0x710(%rbp)
	movq 0x1F0(%rbp),%r15
	movq %r15,0x718(%rbp)
	movq 0x1F8(%rbp),%r15
	movq %r15,0x720(%rbp)
	movq 0x200(%rbp),%r15
	movq %r15,0x728(%rbp)
	movq 0x208(%rbp),%r15
	movq %r15,0x730(%rbp)
	movq 0x210(%rbp),%r15
	movq %r15,0x738(%rbp)
	movq 0x218(%rbp),%r15
	movq %r15,0x740(%rbp)
	movq 0x220(%rbp),%r15
	movq %r15,0x748(%rbp)
	movq 0x228(%rbp),%r15
	movq %r15,0x750(%rbp)
	movq 0x230(%rbp),%r15
	movq %r15,0x758(%rbp)
	movq 0x238(%rbp),%r15
	movq %r15,0x760(%rbp)
	movq 0x240(%rbp),%r15
	movq %r15,0x768(%rbp)
	movq 0x248(%rbp),%r15
	movq %r15,0x770(%rbp)
	movq 0x250(%rbp),%r15
	movq %r15,0x778(%rbp)
	movq 0x258(%rbp),%r15
	movq %r15,0x780(%rbp)
	movq 0x260(%rbp),%r15
	movq %r15,0x788(%rbp)
	movq 0x268(%rbp),%r15
	movq %r15,0x790(%rbp)
	movq 0x270(%rbp),%r15
	movq %r15,0x798(%rbp)
	movq 0x278(%rbp),%r15
	movq %r15,0x7A0(%rbp)
	movq 0x280(%rbp),%r15
	movq %r15,0x7A8(%rbp)
	movq 0x288(%rbp),%r15
	movq %r15,0x7B0(%rbp)
	movq 0x290(%rbp),%r15
	movq %r15,0x7B8(%rbp)
	movq 0x298(%rbp),%r15
	movq %r15,0x7C0(%rbp)
	movq 0x2A0(%rbp),%r15
	movq %r15,0x7C8(%rbp)
	movq 0x2A8(%rbp),%r15
	movq %r15,0x7D0(%rbp)
	movq 0x2B0(%rbp),%r15
	movq %r15,0x7D8(%rbp)
	movq 0x2B8(%rbp),%r15
	movq %r15,0x7E0(%rbp)
	movq 0x2C0(%rbp),%r15
	movq %r15,0x7E8(%rbp)
	movq 0x2C8(%rbp),%r15
	movq %r15,0x7F0(%rbp)
	movq 0x2D0(%rbp),%r15
	movq %r15,0x7F8(%rbp)
	movq 0x2D8(%rbp),%r15
	movq %r15,0x800(%rbp)
	movq 0x2E0(%rbp),%r15
	movq %r15,0x808(%rbp)
	movq 0x2E8(%rbp),%r15
	movq %r15,0x810(%rbp)
	movq 0x2F0(%rbp),%r15
	movq %r15,0x818(%rbp)
	movq 0x2F8(%rbp),%r15
	movq %r15,0x820(%rbp)
	movq 0x300(%rbp),%r15
	movq %r15,0x828(%rbp)
	movq 0x308(%rbp),%r15
	movq %r15,0x830(%rbp)
	movq 0x310(%rbp),%r15
	movq %r15,0x838(%rbp)
	movq 0x318(%rbp),%r15
	movq %r15,0x840(%rbp)
	movq 0x320(%rbp),%r15
	movq %r15,0x848(%rbp)
	movq 0x328(%rbp),%r15
	movq %r15,0x850(%rbp)
	movq 0x330(%rbp),%r15
	movq %r15,0x858(%rbp)
	movq 0x338(%rbp),%r15
	movq %r15,0x860(%rbp)
	movq 0x340(%rbp),%r15
	movq %r15,0x868(%rbp)
	movq 0x348(%rbp),%r15
	movq %r15,0x870(%rbp)
	movq 0x350(%rbp),%r15
	movq %r15,0x878(%rbp)
	movq 0x358(%rbp),%r15
	movq %r15,0x880(%rbp)
	movq 0x360(%rbp),%r15
	movq %r15,0x888(%rbp)
	movq 0x368(%rbp),%r15
	movq %r15,0x890(%rbp)
	movq 0x370(%rbp),%r15
	movq %r15,0x898(%rbp)
	movq 0x378(%rbp),%r15
	movq %r15,0x8A0(%rbp)
	movq 0x380(%rbp),%r15
	movq %r15,0x8A8(%rbp)
	movq 0x388(%rbp),%r15
	movq %r15,0x8B0(%rbp)
	movq 0x390(%rbp),%r15
	movq %r15,0x8B8(%rbp)
	movq 0x398(%rbp),%r15
	movq %r15,0x8C0(%rbp)
	movq 0x3A0(%rbp),%r15
	movq %r15,0x8C8(%rbp)
	movq 0x3A8(%rbp),%r15
	movq %r15,0x8D0(%rbp)
	movq 0x3B0(%rbp),%r15
	movq %r15,0x8D8(%rbp)
	movq 0x3B8(%rbp),%r15
	movq %r15,0x8E0(%rbp)
	movq 0x3C0(%rbp),%r15
	movq %r15,0x8E8(%rbp)
	movq 0x3C8(%rbp),%r15
	movq %r15,0x8F0(%rbp)
	movq 0x3D0(%rbp),%r15
	movq %r15,0x8F8(%rbp)
	movq 0x3D8(%rbp),%r15
	movq %r15,0x900(%rbp)
	movq 0x3E0(%rbp),%r15
	movq %r15,0x908(%rbp)
	movq 0x3E8(%rbp),%r15
	movq %r15,0x910(%rbp)
	movq 0x3F0(%rbp),%r15
	movq %r15,0x918(%rbp)
	movq 0x3F8(%rbp),%r15
	movq %r15,0x920(%rbp)
	movq 0x400(%rbp),%r15
	movq %r15,0x928(%rbp)
	movq 0x408(%rbp),%r15
	movq %r15,0x930(%rbp)
	movq 0x410(%rbp),%r15
	movq %r15,0x938(%rbp)
	movq 0x418(%rbp),%r15
	movq %r15,0x940(%rbp)
	movq 0x420(%rbp),%r15
	movq %r15,0x948(%rbp)
	movq 0x428(%rbp),%r15
	movq %r15,0x950(%rbp)
	movq 0x430(%rbp),%r15
	movq %r15,0x958(%rbp)
	movq 0x438(%rbp),%r15
	movq %r15,0x960(%rbp)
	movq 0x440(%rbp),%r15
	movq %r15,0x968(%rbp)
	movq 0x448(%rbp),%r15
	movq %r15,0x970(%rbp)
	movq 0x450(%rbp),%r15
	movq %r15,0x978(%rbp)
	movq 0x458(%rbp),%r15
	movq %r15,0x980(%rbp)
	movq 0x460(%rbp),%r15
	movq %r15,0x988(%rbp)
	movq 0x468(%rbp),%r15
	movq %r15,0x990(%rbp)
	movq 0x470(%rbp),%r15
	movq %r15,0x998(%rbp)
	movq 0x478(%rbp),%r15
	movq %r15,0x9A0(%rbp)
	movq 0x480(%rbp),%r15
	movq %r15,0x9A8(%rbp)
	movq 0x488(%rbp),%r15
	movq %r15,0x9B0(%rbp)
	movq 0x490(%rbp),%r15
	movq %r15,0x9B8(%rbp)
	movq 0x498(%rbp),%r15
	movq %r15,0x9C0(%rbp)
	movq 0x4A0(%rbp),%r15
	movq %r15,0x9C8(%rbp)
	movq 0x4A8(%rbp),%r15
	movq %r15,0x9D0(%rbp)
	movq 0x4B0(%rbp),%r15
	movq %r15,0x9D8(%rbp)
	movq 0x4B8(%rbp),%r15
	movq %r15,0x9E0(%rbp)
	movq 0x4C0(%rbp),%r15
	movq %r15,0x9E8(%rbp)
	movq 0x4C8(%rbp),%r15
	movq %r15,0x9F0(%rbp)
	movq 0x4D0(%rbp),%r15
	movq %r15,0x9F8(%rbp)
	addq $0x528,%rbp
	leaq (L_252431+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp elabDec_0
.p2align 0x4
L_483242:
L_252379:
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x30(%rbp)
	cmpq %rdx,%r14
	movq %r15,0x28(%rbp)
	jne L_251347
L_252381:
	testq %rdx,%rdx
	jz L_483261
L_252382:
	cmpq $0x7FFFFFFF,%rdx
	ja L_251549
L_252383:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x163F,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x270,%rbp
	leaq (L_252384+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252384
.p2align 0x4
.long 0x3F09
L_252384:
	addq $0xFFFFFFFFFFFFFD90,%rbp
	movq %rax,0x38(%rbp)
L_252385:
	movq $0x0,0x40(%rbp)
loop_2970:
	movq 0x30(%rbp),%r15
	cmpq %r15,0x40(%rbp)
	jl L_483259
L_252386:
	movq 0x38(%rbp),%r15
	movq $0x182F,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x28(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_251347
L_252388:
	cmpl $0x0,%r13d
	jl L_251642
L_252389:
	movl $0x0,0x2C(%rbp)
.p2align 0x4,,0x7
loop_2971:
	movl 0x2C(%rbp),%r15d
	cmpl 0x28(%rbp),%r15d
	jnl L_252118
L_252391:
	movslq %r15d,%r14
	movq 0x38(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	cmpq $0x1,%r13
	je L_252405
L_252392:
	movq 0x1F0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x20(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x0(%r13),%r14
	movq %r14,0x68(%rbp)
	movq 0x8(%r13),%r14
	movq %r14,0x70(%rbp)
	movq 0x10(%r13),%r14
	movq %r14,0x78(%rbp)
	movq 0x50(%r15),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x80(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movl %r13d,0x88(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_251347
L_252394:
	cmpl $0x0,%r13d
	jl L_251642
L_252395:
	movl $0x0,0x8C(%rbp)
.p2align 0x4,,0x7
loop_2972:
	movl 0x88(%rbp),%r15d
	cmpl %r15d,0x8C(%rbp)
	jl L_483251
L_252396:
	movq 0x68(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x30(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_251347
L_252398:
	cmpl $0x0,%r13d
	jl L_251642
L_252399:
	movl $0x0,0x34(%rbp)
.p2align 0x4,,0x7
loop_2973:
	movl 0x30(%rbp),%r15d
	cmpl %r15d,0x34(%rbp)
	jl L_483247
L_252400:
	movq 0x70(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x30(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_251347
L_252402:
	cmpl $0x0,%r13d
	jl L_251642
L_252403:
	movl $0x0,0x34(%rbp)
.p2align 0x4,,0x7
loop_2974:
	movl 0x30(%rbp),%r15d
	cmpl %r15d,0x34(%rbp)
	jl L_483243
L_252405:
	incl 0x2C(%rbp)
	jmp loop_2971
.p2align 0x4
L_483243:
L_252406:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_252407
L_252409:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x270,%rbp
	leaq (L_252410+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252410
.p2align 0x4
.long 0x3F0B
L_252410:
	addq $0xFFFFFFFFFFFFFD90,%rbp
L_252407:
	movslq 0x34(%rbp),%r15
	movq 0x70(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x8(%r13),%r11
	movl 0x0(%r13),%r10d
	movq 0x10(%r13),%r9
	movq 0x18(%r13),%r8
	movq $0x1711,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r10d,0x0(%r15)
	movq %r11,0x8(%r15)
	movq %r9,0x18(%r15)
	movq %r8,0x20(%r15)
	addq $0x30,%r12
	movl $0x0,0x4(%r15)
	movq 0x80(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0x270(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x278(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x280(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x288(%rbp)
	addq $0x270,%rbp
	leaq (L_252408+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1236
.p2align 0x4
L_483247:
L_252412:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_252413
L_252415:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x270,%rbp
	leaq (L_252416+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252416
.p2align 0x4
.long 0x3F0D
L_252416:
	addq $0xFFFFFFFFFFFFFD90,%rbp
L_252413:
	movslq 0x34(%rbp),%r15
	movq 0x68(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x8(%r13),%r11
	movl 0x0(%r13),%r10d
	movq 0x10(%r13),%r9
	movq 0x18(%r13),%r8
	movq $0x170F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r10d,0x0(%r15)
	movq %r11,0x8(%r15)
	movq %r9,0x18(%r15)
	movq %r8,0x20(%r15)
	addq $0x30,%r12
	movl $0x0,0x4(%r15)
	movq 0x80(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0x270(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x278(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x280(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x288(%rbp)
	addq $0x270,%rbp
	leaq (L_252414+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1237
.p2align 0x4
L_483251:
L_252418:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_252419
L_252421:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x270,%rbp
	leaq (L_252422+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252422
.p2align 0x4
.long 0x3F0F
L_252422:
	addq $0xFFFFFFFFFFFFFD90,%rbp
L_252419:
	movslq 0x8C(%rbp),%r15
	movq 0x78(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x8(%r13),%r11
	movl 0x0(%r13),%r10d
	movq 0x10(%r13),%r9
	movq 0x18(%r13),%r8
	movq $0x170D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r10d,0x0(%r15)
	movq %r11,0x8(%r15)
	movq %r9,0x18(%r15)
	movq %r8,0x20(%r15)
	addq $0x30,%r12
	movl $0x0,0x4(%r15)
	movq 0x80(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0x270(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x278(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x280(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x288(%rbp)
	addq $0x270,%rbp
	leaq (L_252420+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1238
.p2align 0x4
L_483259:
L_252426:
	movq 0x40(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x28(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x270(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x278(%rbp)
	movq 0x1E8(%rbp),%r15
	movq %r15,0x280(%rbp)
	addq $0x270,%rbp
	leaq (L_252427+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1999
.p2align 0x4
L_483261:
L_252429:
	movq (globalObjptr+0x6E18)(%rip),%r15
	movq %r15,0x38(%rbp)
	jmp L_252385
.p2align 0x4
L_483263:
L_252158:
	movq 0x20(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0x18(%r14),%r13
	movq %r13,0x38(%rbp)
	movq 0x10(%r14),%r13
	movq %r13,0x40(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x48(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x50(%rbp)
	movq 0x210(%rbp),%r14
	movq 0x10(%r14),%r13
	movl 0x0(%r13),%r11d
	testl %r11d,%r11d
	jnz L_483265
L_252159:
	movq 0x0(%r14),%r15
	movl 0x0(%r15),%r14d
	testl %r14d,%r14d
	jnz L_483264
L_252160:
	movq 0x8(%r15),%r14
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0x5068)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x10550)(%rip),%r13
	movq %r13,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0x106A8)(%rip),%r14
	movq %r14,0x0(%r15)
L_252161:
	movq %r15,0x4F8(%rbp)
	addq $0x4F8,%rbp
	leaq (L_252162+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_483264:
L_252377:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq (globalObjptr+0x106A8)(%rip),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x5070)(%rip),%r14
	movq %r14,0x8(%r15)
	jmp L_252161
.p2align 0x4
L_483265:
L_252168:
	movq 0x28(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	movq %r11,0x58(%rbp)
	cmpq %r14,%r11
	jne L_251347
L_252170:
	testq %r11,%r11
	jz L_483285
L_252171:
	cmpq $0x7FFFFFFF,%r11
	ja L_251549
L_252172:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_252173
L_252370:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x4F8,%rbp
	leaq (L_252371+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252371
.p2align 0x4
.long 0x3EE0
L_252371:
	addq $0xFFFFFFFFFFFFFB08,%rbp
L_252173:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x162B,%rcx
	movq 0x58(%rbp),%rdx
	movq $0x70,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x4F8,%rbp
	leaq (L_252174+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252174
.p2align 0x4
.long 0x3EE0
L_252174:
	addq $0xFFFFFFFFFFFFFB08,%rbp
	movq %rax,0x60(%rbp)
L_252175:
	movq $0x0,0x68(%rbp)
loop_2962:
	movq 0x58(%rbp),%r15
	cmpq %r15,0x68(%rbp)
	jl L_483282
L_252176:
	movq 0x60(%rbp),%r15
	movq $0x1841,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq %r14,0x28(%rbp)
	movl %r14d,%r15d
	movslq %r15d,%r13
	cmpq %r13,%r14
	jne L_251347
L_252178:
	testl %r15d,%r15d
	jz L_483280
L_252179:
	cmpl $0x0,%r15d
	movl %r15d,(localWord32+0x0)(%rip)
	jl L_251642
L_252180:
	xorl %ecx,%ecx
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_2963:
	cmpl (localWord32+0x0)(%rip),%ebx
	jnl L_483268
L_252313:
	movslq %ebx,%r15
	movq 0x60(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r11
	movl %r11d,%r10d
	movslq %r10d,%r9
	cmpq %r9,%r11
	jne L_251347
L_252315:
	addl %ecx,%r10d
	jo L_251342
L_252316:
	incl %ebx
	movl %r10d,%ecx
	jmp loop_2963
.p2align 0x4
L_483268:
L_252181:
	cmpq $0x0,0x28(%rbp)
	jna L_251389
L_252183:
	movq 0x60(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x58(%rbp)
	movslq %ecx,%rdx
	movq %rdx,0x68(%rbp)
	testq %rdx,%rdx
	jz L_483277
L_252184:
	cmpq $0x7FFFFFFF,%rdx
	ja L_251549
L_252185:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14CB,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x4F8,%rbp
	leaq (L_252186+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252186
.p2align 0x4
.long 0x3EE1
L_252186:
	addq $0xFFFFFFFFFFFFFB08,%rbp
	movq %rax,0x70(%rbp)
L_252187:
	xorl %ecx,%ecx
	movq 0x58(%rbp),%r14
	xorl %ebx,%ebx
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2964:
	cmpq 0x68(%rbp),%r15
	jnl L_483274
.p2align 0x4,,0x7
loop_2967:
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r13,%r10
	jne L_251347
L_252303:
	cmpl %r11d,%ecx
	jl L_483271
L_252304:
	incl %ebx
	jo L_251342
L_252305:
	movslq %ebx,%r13
	cmpq 0x28(%rbp),%r13
	jnb L_251389
L_252307:
	movq 0x60(%rbp),%r11
	movq 0x0(%r11,%r13,8),%r14
	xorl %ecx,%ecx
	jmp loop_2967
.p2align 0x4
L_483271:
L_252308:
	movslq %ecx,%r11
	cmpq %r13,%r11
	jnb L_251389
L_252310:
	movq %r11,%r13
	movq %r15,%r10
	movq %r15,%r9
	salq $0x4,%r13
	movq 0x0(%r14,%r13,1),%r8
	salq $0x4,%r11
	movq 0x8(%r14,%r11,1),%r13
	incl %ecx
	movq 0x70(%rbp),%r11
	movq %r11,%rsp
	shrq $0x8,%rsp
	movq (gcState+0x3C8)(%rip),%rsi
	movq %rsp,%rax
	movb $0x1,0x0(%rsi,%rax,1)
	salq $0x4,%r10
	movq %r8,0x0(%r11,%r10,1)
	movq %r11,%r10
	shrq $0x8,%r10
	movb $0x1,0x0(%rsi,%r10,1)
	salq $0x4,%r9
	movq %r13,0x8(%r11,%r9,1)
	incq %r15
	jmp loop_2964
.p2align 0x4
L_483274:
L_252188:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_252189
L_252299:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x4F8,%rbp
	leaq (L_252300+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252300
.p2align 0x4
.long 0x3EFB
L_252300:
	addq $0xFFFFFFFFFFFFFB08,%rbp
L_252189:
	movq 0x70(%rbp),%r15
	movq $0x183F,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x28(%rbp)
L_252190:
	movq 0xE8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq $0x9DF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x40(%r11),%r14
	movq 0x38(%r11),%r13
	movq 0x30(%r11),%r10
	movq 0x28(%r11),%r9
	movq 0x20(%r11),%r8
	movq 0x18(%r11),%rsp
	movq 0x10(%r11),%rsi
	movq 0x8(%r11),%rdi
	movq 0x0(%r11),%rdx
	movq $0x9E1,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %rdx,0x0(%r11)
	movq %rdi,0x8(%r11)
	movq %rsi,0x10(%r11)
	movq %rsp,0x18(%r11)
	movq %r8,0x20(%r11)
	movq %r9,0x28(%r11)
	movq %r10,0x30(%r11)
	movq %r15,0x38(%r11)
	movq %r13,0x40(%r11)
	movq %r14,0x48(%r11)
	movq %r11,0x500(%rbp)
	addq $0x58,%r12
	movq 0x38(%rbp),%r15
	movq %r15,0x4F8(%rbp)
	addq $0x4F8,%rbp
	leaq (L_252191+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3797
.p2align 0x4
L_483277:
L_252312:
	movq (globalObjptr+0x6D70)(%rip),%r15
	movq %r15,0x70(%rbp)
	jmp L_252187
.p2align 0x4
L_483280:
L_252318:
	movq (globalObjptr+0xF38)(%rip),%r15
	movq $0x183F,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x28(%rbp)
	jmp L_252190
.p2align 0x4
L_483282:
L_252319:
	movq 0x68(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x28(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x70(%rbp)
	movq %r13,0x4F8(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x500(%rbp)
	movq 0x220(%rbp),%r15
	movq %r15,0x508(%rbp)
	addq $0x4F8,%rbp
	leaq (L_252320+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2019
.p2align 0x4
L_483285:
L_252373:
	movq (globalObjptr+0x6D68)(%rip),%r15
	movq %r15,0x60(%rbp)
	jmp L_252175
.p2align 0x4
L_483287:
L_252140:
	movq 0x0(%r14),%r15
	movq %r15,0x10(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x4(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_251347
L_252142:
	cmpl $0x0,%r13d
	jl L_251642
L_252143:
	movq $0x1,0x4D8(%rbp)
	movl $0x0,0x184(%rbp)
loop_2961:
	movl 0x4(%rbp),%r15d
	cmpl %r15d,0x184(%rbp)
	jl L_483288
L_252144:
	movq 0x4D8(%rbp),%r15
	movq %r15,0x268(%rbp)
	jmp L_251540
.p2align 0x4
L_483288:
L_252145:
	movslq 0x184(%rbp),%r15
	movq 0x10(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x4F8(%rbp)
	movl 0x0(%rbp),%r15d
	movl %r15d,0x4E8(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x4F0(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x500(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x508(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x510(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x518(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x520(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x528(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x530(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x538(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x540(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x548(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x550(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x558(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x560(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x568(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x570(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0x578(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0x580(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0x588(%rbp)
	movq 0xA8(%rbp),%r15
	movq %r15,0x590(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0x598(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0x5A0(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0x5A8(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0x5B0(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0x5B8(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0x5C0(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0x5C8(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0x5D0(%rbp)
	movq 0xF0(%rbp),%r15
	movq %r15,0x5D8(%rbp)
	movq 0xF8(%rbp),%r15
	movq %r15,0x5E0(%rbp)
	movq 0x100(%rbp),%r15
	movq %r15,0x5E8(%rbp)
	movq 0x108(%rbp),%r15
	movq %r15,0x5F0(%rbp)
	movq 0x110(%rbp),%r15
	movq %r15,0x5F8(%rbp)
	movq 0x118(%rbp),%r15
	movq %r15,0x600(%rbp)
	movq 0x120(%rbp),%r15
	movq %r15,0x608(%rbp)
	movq 0x128(%rbp),%r15
	movq %r15,0x610(%rbp)
	movq 0x130(%rbp),%r15
	movq %r15,0x618(%rbp)
	movq 0x138(%rbp),%r15
	movq %r15,0x620(%rbp)
	movq 0x140(%rbp),%r15
	movq %r15,0x628(%rbp)
	movq 0x148(%rbp),%r15
	movq %r15,0x630(%rbp)
	movq 0x150(%rbp),%r15
	movq %r15,0x638(%rbp)
	movq 0x158(%rbp),%r15
	movq %r15,0x640(%rbp)
	movq 0x160(%rbp),%r15
	movq %r15,0x648(%rbp)
	movq 0x168(%rbp),%r15
	movq %r15,0x650(%rbp)
	movq 0x170(%rbp),%r15
	movq %r15,0x658(%rbp)
	movq 0x178(%rbp),%r15
	movq %r15,0x660(%rbp)
	movl 0x180(%rbp),%r15d
	movl %r15d,0x668(%rbp)
	movq 0x188(%rbp),%r15
	movq %r15,0x670(%rbp)
	movq 0x190(%rbp),%r15
	movq %r15,0x678(%rbp)
	movq 0x198(%rbp),%r15
	movq %r15,0x680(%rbp)
	movq 0x1A0(%rbp),%r15
	movq %r15,0x688(%rbp)
	movq 0x1A8(%rbp),%r15
	movq %r15,0x690(%rbp)
	movq 0x1B0(%rbp),%r15
	movq %r15,0x698(%rbp)
	movq 0x1B8(%rbp),%r15
	movq %r15,0x6A0(%rbp)
	movq 0x1C0(%rbp),%r15
	movq %r15,0x6A8(%rbp)
	movq 0x1C8(%rbp),%r15
	movq %r15,0x6B0(%rbp)
	movq 0x1D0(%rbp),%r15
	movq %r15,0x6B8(%rbp)
	movq 0x1D8(%rbp),%r15
	movq %r15,0x6C0(%rbp)
	movq 0x1E0(%rbp),%r15
	movq %r15,0x6C8(%rbp)
	movq 0x1E8(%rbp),%r15
	movq %r15,0x6D0(%rbp)
	movq 0x1F0(%rbp),%r15
	movq %r15,0x6D8(%rbp)
	movq 0x1F8(%rbp),%r15
	movq %r15,0x6E0(%rbp)
	movq 0x200(%rbp),%r15
	movq %r15,0x6E8(%rbp)
	movq 0x208(%rbp),%r15
	movq %r15,0x6F0(%rbp)
	movq 0x210(%rbp),%r15
	movq %r15,0x6F8(%rbp)
	movq 0x218(%rbp),%r15
	movq %r15,0x700(%rbp)
	movq 0x220(%rbp),%r15
	movq %r15,0x708(%rbp)
	movq 0x228(%rbp),%r15
	movq %r15,0x710(%rbp)
	movq 0x230(%rbp),%r15
	movq %r15,0x718(%rbp)
	movq 0x238(%rbp),%r15
	movq %r15,0x720(%rbp)
	movq 0x240(%rbp),%r15
	movq %r15,0x728(%rbp)
	movq 0x248(%rbp),%r15
	movq %r15,0x730(%rbp)
	movq 0x250(%rbp),%r15
	movq %r15,0x738(%rbp)
	movq 0x258(%rbp),%r15
	movq %r15,0x740(%rbp)
	movq 0x260(%rbp),%r15
	movq %r15,0x748(%rbp)
	movq 0x268(%rbp),%r15
	movq %r15,0x750(%rbp)
	movq 0x270(%rbp),%r15
	movq %r15,0x758(%rbp)
	movq 0x278(%rbp),%r15
	movq %r15,0x760(%rbp)
	movq 0x280(%rbp),%r15
	movq %r15,0x768(%rbp)
	movq 0x288(%rbp),%r15
	movq %r15,0x770(%rbp)
	movq 0x290(%rbp),%r15
	movq %r15,0x778(%rbp)
	movq 0x298(%rbp),%r15
	movq %r15,0x780(%rbp)
	movq 0x2A0(%rbp),%r15
	movq %r15,0x788(%rbp)
	movq 0x2A8(%rbp),%r15
	movq %r15,0x790(%rbp)
	movq 0x2B0(%rbp),%r15
	movq %r15,0x798(%rbp)
	movq 0x2B8(%rbp),%r15
	movq %r15,0x7A0(%rbp)
	movq 0x2C0(%rbp),%r15
	movq %r15,0x7A8(%rbp)
	movq 0x2C8(%rbp),%r15
	movq %r15,0x7B0(%rbp)
	movq 0x2D0(%rbp),%r15
	movq %r15,0x7B8(%rbp)
	movq 0x2D8(%rbp),%r15
	movq %r15,0x7C0(%rbp)
	movq 0x2E0(%rbp),%r15
	movq %r15,0x7C8(%rbp)
	movq 0x2E8(%rbp),%r15
	movq %r15,0x7D0(%rbp)
	movq 0x2F0(%rbp),%r15
	movq %r15,0x7D8(%rbp)
	movq 0x2F8(%rbp),%r15
	movq %r15,0x7E0(%rbp)
	movq 0x300(%rbp),%r15
	movq %r15,0x7E8(%rbp)
	movq 0x308(%rbp),%r15
	movq %r15,0x7F0(%rbp)
	movq 0x310(%rbp),%r15
	movq %r15,0x7F8(%rbp)
	movq 0x318(%rbp),%r15
	movq %r15,0x800(%rbp)
	movq 0x320(%rbp),%r15
	movq %r15,0x808(%rbp)
	movq 0x328(%rbp),%r15
	movq %r15,0x810(%rbp)
	movq 0x330(%rbp),%r15
	movq %r15,0x818(%rbp)
	movq 0x338(%rbp),%r15
	movq %r15,0x820(%rbp)
	movq 0x340(%rbp),%r15
	movq %r15,0x828(%rbp)
	movq 0x348(%rbp),%r15
	movq %r15,0x830(%rbp)
	movq 0x350(%rbp),%r15
	movq %r15,0x838(%rbp)
	movq 0x358(%rbp),%r15
	movq %r15,0x840(%rbp)
	movq 0x360(%rbp),%r15
	movq %r15,0x848(%rbp)
	movq 0x368(%rbp),%r15
	movq %r15,0x850(%rbp)
	movq 0x370(%rbp),%r15
	movq %r15,0x858(%rbp)
	movq 0x378(%rbp),%r15
	movq %r15,0x860(%rbp)
	movq 0x380(%rbp),%r15
	movq %r15,0x868(%rbp)
	movq 0x388(%rbp),%r15
	movq %r15,0x870(%rbp)
	movq 0x390(%rbp),%r15
	movq %r15,0x878(%rbp)
	movq 0x398(%rbp),%r15
	movq %r15,0x880(%rbp)
	movq 0x3A0(%rbp),%r15
	movq %r15,0x888(%rbp)
	movq 0x3A8(%rbp),%r15
	movq %r15,0x890(%rbp)
	movq 0x3B0(%rbp),%r15
	movq %r15,0x898(%rbp)
	movq 0x3B8(%rbp),%r15
	movq %r15,0x8A0(%rbp)
	movq 0x3C0(%rbp),%r15
	movq %r15,0x8A8(%rbp)
	movq 0x3C8(%rbp),%r15
	movq %r15,0x8B0(%rbp)
	movq 0x3D0(%rbp),%r15
	movq %r15,0x8B8(%rbp)
	movq 0x3D8(%rbp),%r15
	movq %r15,0x8C0(%rbp)
	movq 0x3E0(%rbp),%r15
	movq %r15,0x8C8(%rbp)
	movq 0x3E8(%rbp),%r15
	movq %r15,0x8D0(%rbp)
	movq 0x3F0(%rbp),%r15
	movq %r15,0x8D8(%rbp)
	movq 0x3F8(%rbp),%r15
	movq %r15,0x8E0(%rbp)
	movq 0x400(%rbp),%r15
	movq %r15,0x8E8(%rbp)
	movq 0x408(%rbp),%r15
	movq %r15,0x8F0(%rbp)
	movq 0x410(%rbp),%r15
	movq %r15,0x8F8(%rbp)
	movq 0x418(%rbp),%r15
	movq %r15,0x900(%rbp)
	movq 0x420(%rbp),%r15
	movq %r15,0x908(%rbp)
	movq 0x428(%rbp),%r15
	movq %r15,0x910(%rbp)
	movq 0x430(%rbp),%r15
	movq %r15,0x918(%rbp)
	movq 0x438(%rbp),%r15
	movq %r15,0x920(%rbp)
	movq 0x440(%rbp),%r15
	movq %r15,0x928(%rbp)
	movq 0x448(%rbp),%r15
	movq %r15,0x930(%rbp)
	movq 0x450(%rbp),%r15
	movq %r15,0x938(%rbp)
	movq 0x458(%rbp),%r15
	movq %r15,0x940(%rbp)
	movq 0x460(%rbp),%r15
	movq %r15,0x948(%rbp)
	movq 0x468(%rbp),%r15
	movq %r15,0x950(%rbp)
	movq 0x470(%rbp),%r15
	movq %r15,0x958(%rbp)
	movq 0x478(%rbp),%r15
	movq %r15,0x960(%rbp)
	movq 0x480(%rbp),%r15
	movq %r15,0x968(%rbp)
	movq 0x488(%rbp),%r15
	movq %r15,0x970(%rbp)
	movq 0x490(%rbp),%r15
	movq %r15,0x978(%rbp)
	movq 0x498(%rbp),%r15
	movq %r15,0x980(%rbp)
	movq 0x4A0(%rbp),%r15
	movq %r15,0x988(%rbp)
	movq 0x4A8(%rbp),%r15
	movq %r15,0x990(%rbp)
	movq 0x4B0(%rbp),%r15
	movq %r15,0x998(%rbp)
	movq 0x4B8(%rbp),%r15
	movq %r15,0x9A0(%rbp)
	movq 0x4C0(%rbp),%r15
	movq %r15,0x9A8(%rbp)
	movq 0x4C8(%rbp),%r15
	movq %r15,0x9B0(%rbp)
	movq 0x4D0(%rbp),%r15
	movq %r15,0x9B8(%rbp)
	addq $0x4E8,%rbp
	leaq (L_252146+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp elabDec_0
.p2align 0x4
L_483291:
L_252103:
	movq 0x208(%rbp),%r15
	movq 0x10(%r15),%r13
	movq %r13,0x210(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x218(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x220(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r15),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movl %r15d,%r14d
	movslq %r14d,%r11
	movq %r11,0x238(%rbp)
	movl %r14d,0x230(%rbp)
	cmpq %r15,%r11
	movq %r13,0x228(%rbp)
	jne L_251347
L_252105:
	testq %r11,%r11
	jz L_483299
L_252106:
	cmpq $0x7FFFFFFF,%r11
	ja L_251549
L_252107:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_252108
L_252136:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x270,%rbp
	leaq (L_252137+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252137
.p2align 0x4
.long 0x3ED6
L_252137:
	addq $0xFFFFFFFFFFFFFD90,%rbp
L_252108:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x161B,%rcx
	movq 0x238(%rbp),%rdx
	movq $0x70,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x270,%rbp
	leaq (L_252109+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252109
.p2align 0x4
.long 0x3ED6
L_252109:
	addq $0xFFFFFFFFFFFFFD90,%rbp
	movq %rax,0x240(%rbp)
L_252110:
	movq $0x0,0x248(%rbp)
loop_2959:
	movq 0x238(%rbp),%r15
	cmpq %r15,0x248(%rbp)
	jl L_483296
L_252111:
	movq 0x240(%rbp),%r15
	movq $0x183D,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%ecx
	movslq %ecx,%r13
	cmpq %r13,%r14
	jne L_251347
L_252113:
	movl 0x230(%rbp),%r15d
	cmpl %r15d,%ecx
	jne L_251530
L_252115:
	cmpl $0x0,%r15d
	jl L_483293
L_252116:
	xorl %ecx,%ecx
loop_2960:
	cmpl 0x230(%rbp),%ecx
	jnl L_252118
L_252119:
	movl %ecx,%r15d
	incl %r15d
	movl %r15d,0x234(%rbp)
	movslq %ecx,%r15
	movq 0x240(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x278(%rbp)
	movq 0x228(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x280(%rbp)
	movq (globalObjptr+0x4AF0)(%rip),%r15
	movq %r15,0x270(%rbp)
	movq 0x218(%rbp),%r15
	movq %r15,0x288(%rbp)
	movq 0x220(%rbp),%r15
	movq %r15,0x290(%rbp)
	addq $0x270,%rbp
	leaq (L_252120+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp extendTycon_0
.p2align 0x4
L_483293:
L_251530:
	movq (globalObjptr+0xCF8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_483296:
L_252122:
	movq 0x248(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x228(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x268(%rbp)
	movq 0x10(%r13),%r11
	movq %r11,0x278(%rbp)
	movq 0x210(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq $0x9DF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x40(%r11),%r14
	movq 0x38(%r11),%r13
	movq 0x30(%r11),%r10
	movq 0x28(%r11),%r9
	movq 0x20(%r11),%r8
	movq 0x18(%r11),%rsp
	movq 0x10(%r11),%rsi
	movq 0x8(%r11),%rdi
	movq 0x0(%r11),%rdx
	movq $0x9E1,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %rdx,0x0(%r11)
	movq %rdi,0x8(%r11)
	movq %rsi,0x10(%r11)
	movq %rsp,0x18(%r11)
	movq %r8,0x20(%r11)
	movq %r9,0x28(%r11)
	movq %r10,0x30(%r11)
	movq %r15,0x38(%r11)
	movq %r13,0x40(%r11)
	movq %r14,0x48(%r11)
	movq %r11,0x280(%rbp)
	addq $0x58,%r12
	addq $0x278,%rbp
	leaq (L_252123+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3797
.p2align 0x4
L_483299:
L_252139:
	movq (globalObjptr+0x6CF0)(%rip),%r15
	movq %r15,0x240(%rbp)
	jmp L_252110
.p2align 0x4
L_483302:
L_253896:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x4E0,%rbp
	leaq (L_253897+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253897
.p2align 0x4
.long 0x3FDD
L_253897:
	addq $0xFFFFFFFFFFFFFB20,%rbp
	jmp L_251341
.p2align 0x4
.long 0x3E94
L_251655:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movl 0x508(%rbp),%r15d
	movl %r15d,0xB0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_251656
L_251657:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x508,%rbp
	leaq (L_251658+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251658
.p2align 0x4
.long 0x3E95
L_251658:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
L_251656:
	movq $0x144D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl 0xB0(%rbp),%r14d
	movl %r14d,0x4(%r15)
	movq 0x98(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0xA0(%rbp),%r13
	movq %r13,%r10
	salq $0x4,%r10
	movq %r15,0x0(%r14,%r10,1)
	movq %r14,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,%r15
	salq $0x4,%r15
	movq 0xA8(%rbp),%r11
	movq %r11,0x8(%r14,%r15,1)
	incq %r13
	movq %r13,0xA0(%rbp)
	jmp loop_2954
.p2align 0x4
.long 0x3E77
L_251465:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq 0x508(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x510(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0x518(%rbp),%r15
	movq %r15,0x88(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_251466
L_251596:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x508,%rbp
	leaq (L_251597+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251597
.p2align 0x4
.long 0x3E8B
L_251597:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
L_251466:
	movq 0x78(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movl %r11d,0x54(%rbp)
	movslq %r11d,%r15
	cmpq %r13,%r15
	jne L_251347
L_251468:
	testl %r11d,%r11d
	jz L_483306
L_251469:
	cmpl $0x1,%r11d
	jg L_483305
L_251470:
	movq (globalObjptr+0xA058)(%rip),%r15
L_251471:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xA18)(%rip),%r15
	movq %r15,0x8(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0x10660)(%rip),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x508(%rbp)
	addq $0x508,%rbp
	leaq (L_251472+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_483305:
L_251594:
	movq (globalObjptr+0xE7E8)(%rip),%r15
	jmp L_251471
.p2align 0x4
L_483306:
L_251512:
	movq $0x3FAF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x508(%rbp)
	movl 0x50(%rbp),%r15d
	movl %r15d,0x510(%rbp)
	addq $0x508,%rbp
	leaq (L_251513+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
.long 0x3E96
L_251664:
	addq $0xFFFFFFFFFFFFF920,%rbp
	movq 0x6E0(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq 0x6E8(%rbp),%r15
	movq %r15,0x98(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_251665
L_251751:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x6E0,%rbp
	leaq (L_251752+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251752
.p2align 0x4
.long 0x3EA1
L_251752:
	addq $0xFFFFFFFFFFFFF920,%rbp
L_251665:
	movq 0x98(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x6F0(%rbp)
	movq 0x88(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x6E8(%rbp)
	movq $0x304B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x4E8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x6E0(%rbp)
	movq 0x1A8(%rbp),%r15
	movq %r15,0x6F8(%rbp)
	addq $0x6E0,%rbp
	leaq (L_251666+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unify_1
.p2align 0x4
.long 0x3EAE
L_251821:
	addq $0xFFFFFFFFFFFFF8F0,%rbp
	movq 0x710(%rbp),%r15
	movq %r15,0x708(%rbp)
	movq 0x718(%rbp),%r15
	movq %r15,0x710(%rbp)
	movq 0x720(%rbp),%r15
	movq %r15,0x718(%rbp)
	movq 0x728(%rbp),%r15
	movq %r15,0x720(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_251822
L_251922:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x730,%rbp
	leaq (L_251923+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251923
.p2align 0x4
.long 0x3EBB
L_251923:
	addq $0xFFFFFFFFFFFFF8D0,%rbp
L_251822:
	movq 0x6F0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x728(%rbp)
	movq 0xF0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x730(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x738(%rbp)
	movq $0x3EC1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x710(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x720(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x748(%rbp)
	movl $0x2,0x750(%rbp)
	addq $0x748,%rbp
	leaq (L_251823+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_1
.p2align 0x4
.long 0x3EC3
L_251929:
	addq $0xFFFFFFFFFFFFF900,%rbp
	movq 0x700(%rbp),%r15
	movq %r15,0x6F8(%rbp)
	movq 0x708(%rbp),%r15
	movq %r15,0x700(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_251930
L_251992:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x710,%rbp
	leaq (L_251993+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251993
.p2align 0x4
.long 0x3ECC
L_251993:
	addq $0xFFFFFFFFFFFFF8F0,%rbp
L_251930:
	movq 0x6F8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	movq %r11,0x708(%rbp)
	cmpq %r11,%r14
	jne L_251347
L_251932:
	testl %r13d,%r13d
	jz L_483328
L_251933:
	cmpq $0x0,%r14
	jna L_251389
L_251935:
	movq 0x0(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x710(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x718(%rbp)
	movq 0x10(%r14),%r13
	movq 0x8(%r13),%r11
	movq 0x10(%r11),%r10
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r10,0x0(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x720(%rbp)
L_251936:
	movq 0x718(%rbp),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x728(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r14
	movq 0x0(%r14),%r15
	incq %r15
	jo L_251766
L_251937:
	movq %r15,0x0(%r14)
	movq 0x0(%r13),%r14
	cmpq $0x1,%r14
	je L_483325
L_251938:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r15,0x730(%rbp)
	movl $0x0,0x4(%rbp)
	movq %r14,%r15
.p2align 0x4,,0x7
L_251940:
	movq 0x730(%rbp),%r14
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_251941
L_251977:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xD66,%r13
	je L_483320
L_251941:
	movl 0x4(%rbp),%r14d
	incl %r14d
	movl %r14d,0x184(%rbp)
	jo L_251342
L_251942:
	cmpq $0x1,%r15
	je L_483311
L_251943:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq %r13,0x730(%rbp)
	movl %r14d,0x4(%rbp)
	jmp L_251940
.p2align 0x4
L_483311:
L_251944:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_251945
L_251975:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x738,%rbp
	leaq (L_251976+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251976
.p2align 0x4
.long 0x3EC4
L_251976:
	addq $0xFFFFFFFFFFFFF8C8,%rbp
L_251945:
	movl 0x184(%rbp),%ecx
L_251946:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_251777
L_251947:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_251949
L_251974:
	movl %ecx,0x0(%r15)
L_251949:
	movq $0x1355,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x1ACD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq 0x728(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r10,0x0(%r13)
L_251950:
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x510(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1CFF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x710(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x728(%rbp)
	movq 0x708(%rbp),%r15
	testq %r15,%r15
	jz L_483315
L_251951:
	cmpq $0x7FFFFFFF,%r15
	ja L_251549
L_251952:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_251953
L_251970:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x738,%rbp
	leaq (L_251971+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251971
.p2align 0x4
.long 0x3EC4
L_251971:
	addq $0xFFFFFFFFFFFFF8C8,%rbp
L_251953:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x15E5,%rcx
	movq 0x708(%rbp),%rdx
	movq $0x10,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x738,%rbp
	leaq (L_251954+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251954
.p2align 0x4
.long 0x3EC4
L_251954:
	addq $0xFFFFFFFFFFFFF8C8,%rbp
	movq %rax,0x730(%rbp)
L_251955:
	movq $0x0,0x738(%rbp)
loop_2957:
	movq 0x708(%rbp),%r15
	cmpq %r15,0x738(%rbp)
	jl L_483312
L_251956:
	movq 0x730(%rbp),%r15
	movq $0x1139,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x6E0(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x6E8(%rbp),%r13
	movq %r13,%r10
	imulq $0x28,%r10
	movq 0x718(%rbp),%r9
	movq %r9,0x0(%r14,%r10,1)
	movq %r14,%r10
	shrq $0x8,%r10
	movb $0x1,0x0(%r11,%r10,1)
	movq %r13,%r10
	imulq $0x28,%r10
	movq 0x700(%rbp),%r9
	movq %r9,0x8(%r14,%r10,1)
	movq %r14,%r10
	shrq $0x8,%r10
	movb $0x1,0x0(%r11,%r10,1)
	movq %r13,%r10
	imulq $0x28,%r10
	movq 0x720(%rbp),%r9
	movq %r9,0x10(%r14,%r10,1)
	movq %r14,%r10
	shrq $0x8,%r10
	movb $0x1,0x0(%r11,%r10,1)
	movq %r13,%r10
	imulq $0x28,%r10
	movq 0x6F0(%rbp),%r9
	movq %r9,0x18(%r14,%r10,1)
	movq %r14,%r10
	shrq $0x8,%r10
	movb $0x1,0x0(%r11,%r10,1)
	movq %r13,%r11
	imulq $0x28,%r11
	movq %r15,0x20(%r14,%r11,1)
	incq %r13
	movq %r13,0x6E8(%rbp)
	jmp loop_2935
.p2align 0x4
L_483312:
L_251957:
	movq 0x738(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x6F8(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x740(%rbp)
	movq %r11,0x750(%rbp)
	movq 0x150(%rbp),%r15
	movq %r15,0x758(%rbp)
	addq $0x750,%rbp
	leaq (L_251958+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2020
.p2align 0x4
L_483315:
L_251973:
	movq (globalObjptr+0x6E10)(%rip),%r14
	movq %r14,0x730(%rbp)
	jmp L_251955
.p2align 0x4
L_483320:
L_251978:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_251979
L_251983:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x740,%rbp
	leaq (L_251984+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251984
.p2align 0x4
.long 0x3EC9
L_251984:
	addq $0xFFFFFFFFFFFFF8C0,%rbp
L_251979:
	movq 0x730(%rbp),%r14
	movq 0x0(%r14),%r15
	movl 0x4(%rbp),%r14d
	movslq %r14d,%r13
	movq (globalObjptr+0x1070)(%rip),%r11
	addq 0x0(%r11),%r13
	jo L_251777
L_251980:
	movq %r13,0x0(%r11)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %r14d,0x0(%r13)
	jnl L_251950
L_251982:
	movl %r14d,0x0(%r13)
	jmp L_251950
.p2align 0x4
L_483325:
L_251985:
	xorl %ecx,%ecx
	jmp L_251946
.p2align 0x4
L_483328:
L_251986:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x710(%rbp)
	addq $0x18,%r12
	movq (globalObjptr+0x10698)(%rip),%r13
	movq %r13,0x0(%r14)
	movq 0x8(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x1B0(%rbp),%r14
	movq %r14,0x720(%rbp)
	addq $0x720,%rbp
	leaq (L_251987+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x3ECD
L_252002:
	addq $0xFFFFFFFFFFFFFAB0,%rbp
	movq 0x550(%rbp),%r15
	movq %r15,0x520(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_252003
L_252047:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x550,%rbp
	leaq (L_252048+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252048
.p2align 0x4
.long 0x3ED3
L_252048:
	addq $0xFFFFFFFFFFFFFAB0,%rbp
L_252003:
	movl 0x180(%rbp),%r15d
	testl %r15d,%r15d
	jz L_252005
L_252007:
	movq 0x1F8(%rbp),%r15
	movl 0x0(%r15),%r14d
	testl %r14d,%r14d
	jz L_483331
L_252009:
	movq 0x520(%rbp),%r15
	movq %r15,0x550(%rbp)
	movq 0x200(%rbp),%r15
	movq %r15,0x558(%rbp)
	addq $0x550,%rbp
	leaq (not_58+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp isExpansive_0
.p2align 0x4
L_483331:
L_252005:
	movq 0x520(%rbp),%r15
L_252006:
	movq 0x500(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x510(%rbp),%r13
	movq %r13,%r10
	salq $0x5,%r10
	movq 0x530(%rbp),%r9
	movq %r9,0x0(%r14,%r10,1)
	movq %r14,%r10
	shrq $0x8,%r10
	movb $0x1,0x0(%r11,%r10,1)
	movq %r13,%r10
	salq $0x5,%r10
	movq 0x518(%rbp),%r9
	movq %r9,0x8(%r14,%r10,1)
	movq %r14,%r10
	shrq $0x8,%r10
	movb $0x1,0x0(%r11,%r10,1)
	movq %r13,%r10
	salq $0x5,%r10
	movq 0x528(%rbp),%r9
	movq %r9,0x10(%r14,%r10,1)
	movq %r14,%r10
	shrq $0x8,%r10
	movb $0x1,0x0(%r11,%r10,1)
	movq %r13,%r11
	salq $0x5,%r11
	movq %r15,0x18(%r14,%r11,1)
	incq %r13
	movq %r13,0x510(%rbp)
	jmp loop_2934
.p2align 0x4
.long 0x3ECE
toString_354:
	addq $0xFFFFFFFFFFFFFAB0,%rbp
	movq 0x550(%rbp),%r15
	movq %r15,0x548(%rbp)
	movl 0x558(%rbp),%r15d
	movl %r15d,0x4(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_252051
L_252062:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x558,%rbp
	leaq (L_252063+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252063
.p2align 0x4
.long 0x3ED1
L_252063:
	addq $0xFFFFFFFFFFFFFAA8,%rbp
L_252051:
	movq $0xC3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x4(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x548(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x558(%rbp)
	movq $0x1,0x550(%rbp)
	addq $0x550,%rbp
	leaq (rev_352+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x3F11
L_253741:
	addq $0xFFFFFFFFFFFFFAD8,%rbp
	movq 0x528(%rbp),%r15
	movq %r15,0x520(%rbp)
	movq 0x530(%rbp),%r15
	movq %r15,0x528(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_253742
L_253894:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x538,%rbp
	leaq (L_253895+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253895
.p2align 0x4
.long 0x3FDC
L_253895:
	addq $0xFFFFFFFFFFFFFAC8,%rbp
L_253742:
	movq 0x4E0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x530(%rbp)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq $0x1,0x0(%r15)
	movq 0x4F0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x538(%rbp)
	movq %r15,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r13,%r14,1)
	movq $0x1,0x0(%r15)
	movq 0x500(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x540(%rbp)
	movq %r15,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r13,%r14,1)
	movq $0x1,0x0(%r15)
	movq 0x510(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x548(%rbp)
	movq %r15,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r13,%r14,1)
	movq $0x1,0x0(%r15)
	movq $0x71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x44D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x78(%rbp),%r15
	movq %r15,%r11
	shrq $0x8,%r11
	movb $0x1,0x0(%r13,%r11,1)
	movq %r14,0x0(%r15)
	movl 0x0(%rbp),%r14d
	movl %r14d,0x558(%rbp)
	movq 0x8(%rbp),%r14
	movq %r14,0x560(%rbp)
	movq 0x10(%rbp),%r14
	movq %r14,0x568(%rbp)
	movq 0x18(%rbp),%r14
	movq %r14,0x570(%rbp)
	movq 0x20(%rbp),%r14
	movq %r14,0x578(%rbp)
	movq 0x28(%rbp),%r14
	movq %r14,0x580(%rbp)
	movq 0x30(%rbp),%r14
	movq %r14,0x588(%rbp)
	movq 0x38(%rbp),%r14
	movq %r14,0x590(%rbp)
	movq 0x40(%rbp),%r14
	movq %r14,0x598(%rbp)
	movq 0x48(%rbp),%r14
	movq %r14,0x5A0(%rbp)
	movq 0x50(%rbp),%r14
	movq %r14,0x5A8(%rbp)
	movq 0x58(%rbp),%r14
	movq %r14,0x5B0(%rbp)
	movq 0x60(%rbp),%r14
	movq %r14,0x5B8(%rbp)
	movq 0x68(%rbp),%r14
	movq %r14,0x5C0(%rbp)
	movq 0x70(%rbp),%r14
	movq %r14,0x5C8(%rbp)
	movq %r15,0x5D0(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x5D8(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x5E0(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0x5E8(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0x5F0(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0x5F8(%rbp)
	movq 0xA8(%rbp),%r15
	movq %r15,0x600(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0x608(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0x610(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0x618(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0x620(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0x628(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0x630(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0x638(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0x640(%rbp)
	movq 0xF0(%rbp),%r15
	movq %r15,0x648(%rbp)
	movq 0xF8(%rbp),%r15
	movq %r15,0x650(%rbp)
	movq 0x100(%rbp),%r15
	movq %r15,0x658(%rbp)
	movq 0x108(%rbp),%r15
	movq %r15,0x660(%rbp)
	movq 0x110(%rbp),%r15
	movq %r15,0x668(%rbp)
	movq 0x118(%rbp),%r15
	movq %r15,0x670(%rbp)
	movq 0x120(%rbp),%r15
	movq %r15,0x678(%rbp)
	movq 0x128(%rbp),%r15
	movq %r15,0x680(%rbp)
	movq 0x130(%rbp),%r15
	movq %r15,0x688(%rbp)
	movq 0x138(%rbp),%r15
	movq %r15,0x690(%rbp)
	movq 0x140(%rbp),%r15
	movq %r15,0x698(%rbp)
	movq 0x148(%rbp),%r15
	movq %r15,0x6A0(%rbp)
	movq 0x150(%rbp),%r15
	movq %r15,0x6A8(%rbp)
	movq 0x158(%rbp),%r15
	movq %r15,0x6B0(%rbp)
	movq 0x160(%rbp),%r15
	movq %r15,0x6B8(%rbp)
	movq 0x168(%rbp),%r15
	movq %r15,0x6C0(%rbp)
	movq 0x170(%rbp),%r15
	movq %r15,0x6C8(%rbp)
	movq 0x178(%rbp),%r15
	movq %r15,0x6D0(%rbp)
	movl 0x180(%rbp),%r15d
	movl %r15d,0x6D8(%rbp)
	movq 0x188(%rbp),%r15
	movq %r15,0x6E0(%rbp)
	movq 0x190(%rbp),%r15
	movq %r15,0x6E8(%rbp)
	movq 0x198(%rbp),%r15
	movq %r15,0x6F0(%rbp)
	movq 0x1A0(%rbp),%r15
	movq %r15,0x6F8(%rbp)
	movq 0x1A8(%rbp),%r15
	movq %r15,0x700(%rbp)
	movq 0x1B0(%rbp),%r15
	movq %r15,0x708(%rbp)
	movq 0x1B8(%rbp),%r15
	movq %r15,0x710(%rbp)
	movq 0x1C0(%rbp),%r15
	movq %r15,0x718(%rbp)
	movq 0x1C8(%rbp),%r15
	movq %r15,0x720(%rbp)
	movq 0x1D0(%rbp),%r15
	movq %r15,0x728(%rbp)
	movq 0x1D8(%rbp),%r15
	movq %r15,0x730(%rbp)
	movq 0x1E0(%rbp),%r15
	movq %r15,0x738(%rbp)
	movq 0x1E8(%rbp),%r15
	movq %r15,0x740(%rbp)
	movq 0x1F0(%rbp),%r15
	movq %r15,0x748(%rbp)
	movq 0x1F8(%rbp),%r15
	movq %r15,0x750(%rbp)
	movq 0x200(%rbp),%r15
	movq %r15,0x758(%rbp)
	movq 0x208(%rbp),%r15
	movq %r15,0x760(%rbp)
	movq 0x210(%rbp),%r15
	movq %r15,0x768(%rbp)
	movq 0x218(%rbp),%r15
	movq %r15,0x770(%rbp)
	movq 0x220(%rbp),%r15
	movq %r15,0x778(%rbp)
	movq 0x228(%rbp),%r15
	movq %r15,0x780(%rbp)
	movq 0x230(%rbp),%r15
	movq %r15,0x788(%rbp)
	movq 0x238(%rbp),%r15
	movq %r15,0x790(%rbp)
	movq 0x240(%rbp),%r15
	movq %r15,0x798(%rbp)
	movq 0x248(%rbp),%r15
	movq %r15,0x7A0(%rbp)
	movq 0x250(%rbp),%r15
	movq %r15,0x7A8(%rbp)
	movq 0x258(%rbp),%r15
	movq %r15,0x7B0(%rbp)
	movq 0x260(%rbp),%r15
	movq %r15,0x7B8(%rbp)
	movq 0x268(%rbp),%r15
	movq %r15,0x7C0(%rbp)
	movq 0x270(%rbp),%r15
	movq %r15,0x7C8(%rbp)
	movq 0x278(%rbp),%r15
	movq %r15,0x7D0(%rbp)
	movq 0x280(%rbp),%r15
	movq %r15,0x7D8(%rbp)
	movq 0x288(%rbp),%r15
	movq %r15,0x7E0(%rbp)
	movq 0x290(%rbp),%r15
	movq %r15,0x7E8(%rbp)
	movq 0x298(%rbp),%r15
	movq %r15,0x7F0(%rbp)
	movq 0x2A0(%rbp),%r15
	movq %r15,0x7F8(%rbp)
	movq 0x2A8(%rbp),%r15
	movq %r15,0x800(%rbp)
	movq 0x2B0(%rbp),%r15
	movq %r15,0x808(%rbp)
	movq 0x2B8(%rbp),%r15
	movq %r15,0x810(%rbp)
	movq 0x2C0(%rbp),%r15
	movq %r15,0x818(%rbp)
	movq 0x2C8(%rbp),%r15
	movq %r15,0x820(%rbp)
	movq 0x2D0(%rbp),%r15
	movq %r15,0x828(%rbp)
	movq 0x2D8(%rbp),%r15
	movq %r15,0x830(%rbp)
	movq 0x2E0(%rbp),%r15
	movq %r15,0x838(%rbp)
	movq 0x2E8(%rbp),%r15
	movq %r15,0x840(%rbp)
	movq 0x2F0(%rbp),%r15
	movq %r15,0x848(%rbp)
	movq 0x2F8(%rbp),%r15
	movq %r15,0x850(%rbp)
	movq 0x300(%rbp),%r15
	movq %r15,0x858(%rbp)
	movq 0x308(%rbp),%r15
	movq %r15,0x860(%rbp)
	movq 0x310(%rbp),%r15
	movq %r15,0x868(%rbp)
	movq 0x318(%rbp),%r15
	movq %r15,0x870(%rbp)
	movq 0x320(%rbp),%r15
	movq %r15,0x878(%rbp)
	movq 0x328(%rbp),%r15
	movq %r15,0x880(%rbp)
	movq 0x330(%rbp),%r15
	movq %r15,0x888(%rbp)
	movq 0x338(%rbp),%r15
	movq %r15,0x890(%rbp)
	movq 0x340(%rbp),%r15
	movq %r15,0x898(%rbp)
	movq 0x348(%rbp),%r15
	movq %r15,0x8A0(%rbp)
	movq 0x350(%rbp),%r15
	movq %r15,0x8A8(%rbp)
	movq 0x358(%rbp),%r15
	movq %r15,0x8B0(%rbp)
	movq 0x360(%rbp),%r15
	movq %r15,0x8B8(%rbp)
	movq 0x368(%rbp),%r15
	movq %r15,0x8C0(%rbp)
	movq 0x370(%rbp),%r15
	movq %r15,0x8C8(%rbp)
	movq 0x378(%rbp),%r15
	movq %r15,0x8D0(%rbp)
	movq 0x380(%rbp),%r15
	movq %r15,0x8D8(%rbp)
	movq 0x388(%rbp),%r15
	movq %r15,0x8E0(%rbp)
	movq 0x390(%rbp),%r15
	movq %r15,0x8E8(%rbp)
	movq 0x398(%rbp),%r15
	movq %r15,0x8F0(%rbp)
	movq 0x3A0(%rbp),%r15
	movq %r15,0x8F8(%rbp)
	movq 0x3A8(%rbp),%r15
	movq %r15,0x900(%rbp)
	movq 0x3B0(%rbp),%r15
	movq %r15,0x908(%rbp)
	movq 0x3B8(%rbp),%r15
	movq %r15,0x910(%rbp)
	movq 0x3C0(%rbp),%r15
	movq %r15,0x918(%rbp)
	movq 0x3C8(%rbp),%r15
	movq %r15,0x920(%rbp)
	movq 0x3D0(%rbp),%r15
	movq %r15,0x928(%rbp)
	movq 0x3D8(%rbp),%r15
	movq %r15,0x930(%rbp)
	movq 0x3E0(%rbp),%r15
	movq %r15,0x938(%rbp)
	movq 0x3E8(%rbp),%r15
	movq %r15,0x940(%rbp)
	movq 0x3F0(%rbp),%r15
	movq %r15,0x948(%rbp)
	movq 0x3F8(%rbp),%r15
	movq %r15,0x950(%rbp)
	movq 0x400(%rbp),%r15
	movq %r15,0x958(%rbp)
	movq 0x408(%rbp),%r15
	movq %r15,0x960(%rbp)
	movq 0x410(%rbp),%r15
	movq %r15,0x968(%rbp)
	movq 0x418(%rbp),%r15
	movq %r15,0x970(%rbp)
	movq 0x420(%rbp),%r15
	movq %r15,0x978(%rbp)
	movq 0x428(%rbp),%r15
	movq %r15,0x980(%rbp)
	movq 0x430(%rbp),%r15
	movq %r15,0x988(%rbp)
	movq 0x438(%rbp),%r15
	movq %r15,0x990(%rbp)
	movq 0x440(%rbp),%r15
	movq %r15,0x998(%rbp)
	movq 0x448(%rbp),%r15
	movq %r15,0x9A0(%rbp)
	movq 0x450(%rbp),%r15
	movq %r15,0x9A8(%rbp)
	movq 0x458(%rbp),%r15
	movq %r15,0x9B0(%rbp)
	movq 0x460(%rbp),%r15
	movq %r15,0x9B8(%rbp)
	movq 0x468(%rbp),%r15
	movq %r15,0x9C0(%rbp)
	movq 0x470(%rbp),%r15
	movq %r15,0x9C8(%rbp)
	movq 0x478(%rbp),%r15
	movq %r15,0x9D0(%rbp)
	movq 0x480(%rbp),%r15
	movq %r15,0x9D8(%rbp)
	movq 0x488(%rbp),%r15
	movq %r15,0x9E0(%rbp)
	movq 0x490(%rbp),%r15
	movq %r15,0x9E8(%rbp)
	movq 0x498(%rbp),%r15
	movq %r15,0x9F0(%rbp)
	movq 0x4A0(%rbp),%r15
	movq %r15,0x9F8(%rbp)
	movq 0x4A8(%rbp),%r15
	movq %r15,0xA00(%rbp)
	movq 0x4B0(%rbp),%r15
	movq %r15,0xA08(%rbp)
	movq 0x4B8(%rbp),%r15
	movq %r15,0xA10(%rbp)
	movq 0x4C0(%rbp),%r15
	movq %r15,0xA18(%rbp)
	movq 0x4C8(%rbp),%r15
	movq %r15,0xA20(%rbp)
	movq 0x4D0(%rbp),%r15
	movq %r15,0xA28(%rbp)
	addq $0x558,%rbp
	leaq (L_253743+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp elabDec_0
.p2align 0x4
.long 0x3EE5
L_253739:
	addq $0xFFFFFFFFFFFFFD90,%rbp
	movq 0x270(%rbp),%r15
	movq %r15,0x268(%rbp)
	movq 0x278(%rbp),%r15
	movq %r15,0x270(%rbp)
	movq %r15,0x268(%rbp)
	jmp L_251540
.p2align 0x4
.long 0x3FC6
L_253729:
	addq $0xFFFFFFFFFFFFFD90,%rbp
	movq 0x270(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_253730
L_253736:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x270,%rbp
	leaq (L_253737+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253737
.p2align 0x4
.long 0x3FC7
L_253737:
	addq $0xFFFFFFFFFFFFFD90,%rbp
L_253730:
	movq 0x30(%rbp),%r15
	cmpq $0x1,%r15
	je L_252118
L_253731:
	movq 0x8(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x1052,%r13
	je L_483336
L_253732:
	xorl %ecx,%ecx
L_253733:
	movq $0x144D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %ecx,0x4(%r15)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movq %r15,0x270(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x278(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x280(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x288(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0x290(%rbp)
	addq $0x270,%rbp
	leaq (L_252209+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp extendTycon_0
.p2align 0x4
L_483336:
L_253734:
	movl $0x1,%ecx
	jmp L_253733
.p2align 0x4
.long 0x3E80
L_251543:
	addq $0xFFFFFFFFFFFFFD88,%rbp
	movq 0x260(%rbp),%r15
	movq %r15,0x278(%rbp)
	addq $0x278,%rbp
	leaq (L_251544+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp resolveOverloads_0
.p2align 0x4
.long 0x3FB2
L_253621:
	addq $0xFFFFFFFFFFFFFD90,%rbp
	movq 0x270(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_253622
L_253724:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x270,%rbp
	leaq (L_253725+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253725
.p2align 0x4
.long 0x3FC0
L_253725:
	addq $0xFFFFFFFFFFFFFD90,%rbp
L_253622:
	movq 0x68(%rbp),%r13
	cmpq $0x1,%r13
	je L_483342
L_253623:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x1074,%r15
	je L_483339
L_253660:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
L_253603:
	movq $0x209D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x10,%r12
	movq $0x5C9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x48(%rbp)
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq 0xF8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x270(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x20(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x50(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x60(%rbp)
	addq $0x270,%rbp
	leaq (L_253604+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_483339:
L_253624:
	movq 0x0(%r13),%r14
	cmpq $0x1,%r14
	je L_483340
L_253625:
	movq 0x8(%r14),%r13
	movq %r13,0x50(%rbp)
	movq 0x0(%r14),%r14
	movq $0x1,0x68(%rbp)
	movq %r14,%r15
L_253626:
	movq 0x8(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x270(%rbp)
	addq $0x270,%rbp
	leaq (L_253627+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_483340:
L_253659:
	movq $0x1,%r15
	xorl %ecx,%ecx
L_253643:
	testl %ecx,%ecx
	jz L_483341
L_253644:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
L_253645:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x270(%rbp)
	movq (globalObjptr+0xA460)(%rip),%r15
	movq %r15,0x278(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x280(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x288(%rbp)
	addq $0x270,%rbp
	leaq (L_253646+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unbound_0
.p2align 0x4
L_483341:
L_253650:
	movq $0x1,%r15
	xorl %ecx,%ecx
	jmp L_253645
.p2align 0x4
L_483342:
L_253661:
	movq 0x50(%rbp),%r14
	movq 0x0(%r14),%r11
	movq 0x8(%r14),%r13
	movq %r13,0x68(%rbp)
	cmpq $0x1,%r11
	je L_483343
L_253662:
	movq 0x8(%r11),%r14
	movq %r14,0x50(%rbp)
	movq 0x0(%r11),%r11
	movq $0x1,0x70(%rbp)
	movq %r11,%r15
L_253663:
	movq 0x8(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x270(%rbp)
	addq $0x270,%rbp
	leaq (L_253664+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_483343:
L_253723:
	movq $0x1,%r15
	xorl %ecx,%ecx
L_253690:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x50(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq 0x68(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x270(%rbp)
	addq $0x270,%rbp
	leaq (L_253691+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3FB0
L_253591:
	addq $0xFFFFFFFFFFFFFD90,%rbp
	movl 0x270(%rbp),%r15d
	movl %r15d,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_253592
L_253618:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x270,%rbp
	leaq (L_253619+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253619
.p2align 0x4
.long 0x3FB9
L_253619:
	addq $0xFFFFFFFFFFFFFD90,%rbp
L_253592:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0x17,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,0x60(%rbp)
	movq %r15,0x8(%r11)
	movq %r13,0x10(%r11)
	addq $0x28,%r12
	movl 0x58(%rbp),%r15d
	movl %r15d,0x0(%r11)
	movl $0x0,0x4(%r11)
	movq %r14,0x18(%r11)
	movq 0x48(%rbp),%r15
	cmpq $0x1,%r15
	je L_483345
L_253593:
	movq 0xE8(%rbp),%r14
	movq 0x10(%r14),%r13
	movq 0x8(%r14),%r11
	movq 0x0(%r14),%r10
	movq $0x9DF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r11,0x0(%r14)
	movq %r13,0x8(%r14)
	addq $0x18,%r12
	movq 0x40(%r10),%r13
	movq 0x38(%r10),%r11
	movq 0x30(%r10),%r9
	movq 0x28(%r10),%r8
	movq 0x20(%r10),%rsp
	movq 0x18(%r10),%rsi
	movq 0x10(%r10),%rdi
	movq 0x8(%r10),%rdx
	movq 0x0(%r10),%rcx
	movq $0x9E1,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %rcx,0x0(%r10)
	movq %rdx,0x8(%r10)
	movq %rdi,0x10(%r10)
	movq %rsi,0x18(%r10)
	movq %rsp,0x20(%r10)
	movq %r8,0x28(%r10)
	movq %r9,0x30(%r10)
	movq %r14,0x38(%r10)
	movq %r11,0x40(%r10)
	movq %r13,0x48(%r10)
	movq %r10,0x278(%rbp)
	addq $0x58,%r12
	movq %r15,0x270(%rbp)
	addq $0x270,%rbp
	leaq (L_253594+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3797
.p2align 0x4
L_483345:
L_253617:
	movq 0xE0(%rbp),%r13
	movq $0x1,%r14
	xchgq %r13,%r15
L_253599:
	movq $0x1CFF,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x10,%r12
	movq $0x20C9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x60(%rbp),%r11
	movq %r11,0x8(%r15)
	movq $0x20CD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq 0x38(%rbp),%r15
	cmpq $0x1,%r15
	je L_483346
L_253600:
L_253601:
	movq $0x20D5,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x8(%r11)
	addq $0x18,%r12
	movq %r15,0x0(%r11)
	movq %r11,%r15
	movq %r13,%r14
L_253602:
	movq %r15,0x38(%rbp)
	movq 0x60(%rbp),%r15
	jmp L_253603
.p2align 0x4
L_483346:
L_253612:
	xchgq %r14,%r15
	xchgq %r13,%r14
	jmp L_253602
.p2align 0x4
.long 0x3FAD
L_253578:
	addq $0xFFFFFFFFFFFFFD90,%rbp
	movl 0x270(%rbp),%r15d
	movl %r15d,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_253579
L_253581:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x270,%rbp
	leaq (L_253582+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253582
.p2align 0x4
.long 0x3FAF
L_253582:
	addq $0xFFFFFFFFFFFFFD90,%rbp
L_253579:
	movq $0x17D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x30,%r12
	movl 0x50(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x2,0x8(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x20(%r15)
	movq %r15,0x270(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x278(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x280(%rbp)
	movq 0x240(%rbp),%r15
	movq %r15,0x288(%rbp)
	addq $0x270,%rbp
	leaq (L_253580+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1992
.p2align 0x4
.long 0x3FA5
tuple_2:
	addq $0xFFFFFFFFFFFFFA90,%rbp
	movq 0x570(%rbp),%r15
	movq %r15,0x568(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_253493
L_253501:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x578,%rbp
	leaq (L_253502+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253502
.p2align 0x4
.long 0x3FA6
L_253502:
	addq $0xFFFFFFFFFFFFFA88,%rbp
L_253493:
	movq 0x568(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_251347
L_253495:
	cmpl $0x1,%r13d
	jne L_483350
L_253498:
	cmpq $0x0,%r15
	jna L_251389
L_253500:
	movq 0x0(%r14),%r15
L_253497:
	movq $0x2535,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x548(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x560(%rbp),%r13
	movq %r13,0x548(%rbp)
	movq %r14,%r15
	jmp done_18
.p2align 0x4
L_483350:
L_253496:
	movq $0x1BE5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r14,0x0(%r15)
	movq $0x159,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq $0x1,0x0(%r14)
	movq %r14,%r15
	jmp L_253497
.p2align 0x4
.long 0x3FA1
L_253476:
	addq $0xFFFFFFFFFFFFFA90,%rbp
	movq 0x570(%rbp),%r14
	movq %r14,0x548(%rbp)
	movq 0x560(%rbp),%r15
L_253459:
	movq 0x530(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq 0x538(%rbp),%r11
	movq %r11,%r9
	imulq $0x28,%r9
	movq 0x540(%rbp),%r8
	movq %r8,0x0(%r13,%r9,1)
	movq %r13,%r9
	shrq $0x8,%r9
	movb $0x1,0x0(%r10,%r9,1)
	movq %r11,%r9
	imulq $0x28,%r9
	movq 0x558(%rbp),%r8
	movq %r8,0x8(%r13,%r9,1)
	movq %r13,%r9
	shrq $0x8,%r9
	movb $0x1,0x0(%r10,%r9,1)
	movq %r11,%r9
	imulq $0x28,%r9
	movq %r15,0x10(%r13,%r9,1)
	movq %r13,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%r10,%r15,1)
	movq %r11,%r15
	imulq $0x28,%r15
	movq 0x550(%rbp),%r9
	movq %r9,0x18(%r13,%r15,1)
	movq %r13,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%r10,%r15,1)
	movq %r11,%r15
	imulq $0x28,%r15
	movq %r14,0x20(%r13,%r15,1)
	incq %r11
	movq %r11,0x538(%rbp)
	jmp loop_2990
.p2align 0x4
.long 0x3FA0
L_253445:
	addq $0xFFFFFFFFFFFFFA98,%rbp
	movq 0x568(%rbp),%r15
	movq %r15,0x560(%rbp)
	movq 0x548(%rbp),%r15
	movq %r15,0x570(%rbp)
	movq 0x120(%rbp),%r15
	movq %r15,0x578(%rbp)
	addq $0x570,%rbp
	leaq (L_253446+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutT_0
.p2align 0x4
.long 0x3FA2
error_11:
	addq $0xFFFFFFFFFFFFFA98,%rbp
	movq 0x568(%rbp),%r15
	movq %r15,0x548(%rbp)
error_10:
	movq 0x558(%rbp),%r15
	movq %r15,0x568(%rbp)
	addq $0x568,%rbp
	leaq (L_253454+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lay_1
.p2align 0x4
.long 0x3FA7
L_253517:
	addq $0xFFFFFFFFFFFFFA78,%rbp
	movq 0x588(%rbp),%r15
	movq %r15,0x580(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_253518
L_253561:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x590,%rbp
	leaq (L_253562+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253562
.p2align 0x4
.long 0x3FAA
L_253562:
	addq $0xFFFFFFFFFFFFFA70,%rbp
L_253518:
	movq 0x580(%rbp),%r14
	movq 0x0(%r14),%r13
	cmpq $0x1,%r13
	je L_253525
L_253519:
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r15,0x588(%rbp)
	movq %r13,%r15
.p2align 0x4,,0x7
L_253520:
	movq 0x588(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x106F,%r13
	je L_483365
L_253521:
	cmpq $0x1,%r15
	je L_483353
L_253522:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r14,0x588(%rbp)
	jmp L_253520
.p2align 0x4
L_483353:
L_253523:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_253525
L_253554:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x590,%rbp
	leaq (L_253555+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253555
.p2align 0x4
.long 0x3FAA
L_253555:
	addq $0xFFFFFFFFFFFFFA70,%rbp
L_253525:
	movq $0x161,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x20DF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq 0x580(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x20E5,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r10,0x0(%r13)
x_851:
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_253550
L_253526:
	movq 0x0(%r14),%r15
	movq 0x18(%r15),%r13
	movq 0x8(%r15),%r11
	movq 0x8(%r11),%r10
	movq 0x0(%r10),%r15
	movq $0x24D3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x578(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r10,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r14,0x0(%r10)
	cmpq $0x1,%r13
	je L_483361
L_253527:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xDEF,%r15
	je L_483357
L_253544:
	movq 0x0(%r13),%r15
	movq %r15,%r14
	andq $0x1,%r14
	jz L_253530
L_253546:
	shrq $0x1,%r15
	movl %r15d,%r14d
	addl %r14d,%r14d
	jo L_251342
L_253547:
	incl %r14d
	jo L_251342
L_253530:
	movq $0x3737,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x570(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x548(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x578(%rbp)
	movl $0x2,0x580(%rbp)
	addq $0x578,%rbp
	leaq (tuple_3+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_9
.p2align 0x4
L_483357:
L_253528:
	movq 0x0(%r13),%r15
	movq %r15,%r14
	andq $0x1,%r14
	jz L_253530
L_253541:
	shrq $0x1,%r15
	movl %r15d,%r14d
	addl %r14d,%r14d
	jo L_251342
L_253542:
	incl %r14d
	jo L_251342
	jmp L_253530
.p2align 0x4
L_483361:
L_253550:
	movq 0x560(%rbp),%r14
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_253551
L_253552:
	movq 0x8(%r14),%r13
	movq %r13,0x548(%rbp)
	movq 0x0(%r14),%r15
	jmp L_253441
.p2align 0x4
L_483365:
L_253556:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_253557
L_253558:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x598,%rbp
	leaq (L_253559+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253559
.p2align 0x4
.long 0x3FAB
L_253559:
	addq $0xFFFFFFFFFFFFFA68,%rbp
L_253557:
	movq 0x588(%rbp),%r14
	movq 0x0(%r14),%r15
	jmp x_851
.p2align 0x4
.long 0x3F7F
L_253152:
	addq $0xFFFFFFFFFFFFFAB8,%rbp
	movq 0x548(%rbp),%r15
	movq %r15,0x518(%rbp)
	movq 0x520(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x548(%rbp)
	addq $0x548,%rbp
	leaq (L_253153+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3F29
L_252615:
	addq $0xFFFFFFFFFFFFFAB8,%rbp
	movq 0x548(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x550(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x558(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_252616
L_252768:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x548,%rbp
	leaq (L_252769+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252769
.p2align 0x4
.long 0x3F3C
L_252769:
	addq $0xFFFFFFFFFFFFFAB8,%rbp
L_252616:
	movq 0x40(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movl %r11d,0x78(%rbp)
	movslq %r11d,%r15
	cmpq %r15,%r13
	jne L_251347
L_252618:
	testl %r11d,%r11d
	jz L_483370
L_252619:
	cmpl $0x1,%r11d
	jg L_483369
L_252620:
	movq (globalObjptr+0xA058)(%rip),%r15
L_252621:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xA18)(%rip),%r15
	movq %r15,0x8(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0x10660)(%rip),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x548(%rbp)
	addq $0x548,%rbp
	leaq (L_252622+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_483369:
L_252766:
	movq (globalObjptr+0xE7E8)(%rip),%r15
	jmp L_252621
.p2align 0x4
L_483370:
L_252662:
	movq $0x4065,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x510(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x548(%rbp)
	movl 0x28(%rbp),%r15d
	movl %r15d,0x550(%rbp)
	addq $0x548,%rbp
	leaq (L_252663+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
.long 0x3F42
L_252791:
	addq $0xFFFFFFFFFFFFFA90,%rbp
	movq 0x570(%rbp),%r15
	movq %r15,0x568(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_252792
L_252919:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x578,%rbp
	leaq (L_252920+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252920
.p2align 0x4
.long 0x3F62
L_252920:
	addq $0xFFFFFFFFFFFFFA88,%rbp
L_252792:
	movq 0x548(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x570(%rbp)
	movl $0x0,0x548(%rbp)
loop_2986:
	movl 0x184(%rbp),%r15d
	cmpl %r15d,0x548(%rbp)
	jl L_483373
L_252793:
	movq $0x3FB1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x1B0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x578(%rbp)
	movl 0x558(%rbp),%r15d
	movl %r15d,0x580(%rbp)
	addq $0x578,%rbp
	leaq (L_252794+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
L_483373:
L_252860:
	movslq 0x548(%rbp),%r15
	movq %r15,%r14
	salq $0x5,%r14
	movq 0x560(%rbp),%r13
	movq 0x10(%r13,%r14,1),%r11
	movq %r11,0x578(%rbp)
	salq $0x5,%r15
	movq 0x18(%r13,%r15,1),%r14
	movq 0x0(%r14),%r11
	movq %r11,0x590(%rbp)
	movq $0x304B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x4E8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x588(%rbp)
	movq 0x570(%rbp),%r15
	movq %r15,0x598(%rbp)
	movq 0x1A8(%rbp),%r15
	movq %r15,0x5A0(%rbp)
	addq $0x588,%rbp
	leaq (L_252861+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unify_1
.p2align 0x4
.long 0x3F65
L_252939:
	addq $0xFFFFFFFFFFFFF870,%rbp
	movq 0x790(%rbp),%r15
	movq %r15,0x580(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_252940
L_253121:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x790,%rbp
	leaq (L_253122+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253122
.p2align 0x4
.long 0x3F79
L_253122:
	addq $0xFFFFFFFFFFFFF870,%rbp
L_252940:
	movl 0x180(%rbp),%r15d
	testl %r15d,%r15d
	jz L_252942
L_253064:
	movq 0x188(%rbp),%r15
	movl 0x0(%r15),%r14d
	testl %r14d,%r14d
	jz L_483395
L_253066:
	movq 0x190(%rbp),%r15
	movl 0x0(%r15),%r14d
	testl %r14d,%r14d
	jnz L_483393
L_253067:
	movq 0x198(%rbp),%r15
	cmpb $0x2,0x0(%r15)
	je L_483392
L_253068:
	cmpq $0x1,0x570(%rbp)
	jne L_483391
L_253070:
	movq 0x580(%rbp),%r15
	movq %r15,0x570(%rbp)
L_252990:
	movq 0x158(%rbp),%r13
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_252997
L_252991:
	movq 0x0(%r11),%r14
	movq 0x8(%r11),%r11
	movq %r11,%r15
.p2align 0x4,,0x7
L_252992:
	movq 0x0(%r14),%r13
	cmpq $0x1,%r13
	je L_252530
L_252993:
	movq 0x8(%r13),%r11
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r11,0x0(%r14)
	cmpq $0x1,%r15
	je L_483375
L_252994:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_252992
.p2align 0x4
L_483375:
L_252995:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_252997
L_253031:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x790,%rbp
	leaq (L_253032+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253032
.p2align 0x4
.long 0x3F70
L_253032:
	addq $0xFFFFFFFFFFFFF870,%rbp
L_252997:
	movq 0x158(%rbp),%r13
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq 0x598(%rbp),%r11
	movq %r11,0x0(%r13)
	movq 0x160(%rbp),%r13
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_253004
L_252998:
	movq 0x0(%r11),%r14
	movq 0x8(%r11),%r11
	movq %r11,%r15
.p2align 0x4,,0x7
L_252999:
	movq 0x0(%r14),%r13
	cmpq $0x1,%r13
	je L_252530
L_253000:
	movq 0x8(%r13),%r11
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r11,0x0(%r14)
	cmpq $0x1,%r15
	je L_483376
L_253001:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_252999
.p2align 0x4
L_483376:
L_253002:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_253004
L_253027:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x790,%rbp
	leaq (L_253028+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253028
.p2align 0x4
.long 0x3F6F
L_253028:
	addq $0xFFFFFFFFFFFFF870,%rbp
L_253004:
	movq 0x160(%rbp),%r13
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq 0x5A0(%rbp),%r11
	movq %r11,0x0(%r13)
	movq 0x168(%rbp),%r13
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_253011
L_253005:
	movq 0x0(%r11),%r14
	movq 0x8(%r11),%r11
	movq %r11,%r15
.p2align 0x4,,0x7
L_253006:
	movq 0x0(%r14),%r13
	cmpq $0x1,%r13
	je L_252530
L_253007:
	movq 0x8(%r13),%r11
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r11,0x0(%r14)
	cmpq $0x1,%r15
	je L_483377
L_253008:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_253006
.p2align 0x4
L_483377:
L_253009:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_253011
L_253023:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x790,%rbp
	leaq (L_253024+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253024
.p2align 0x4
.long 0x3F6E
L_253024:
	addq $0xFFFFFFFFFFFFF870,%rbp
L_253011:
	movq 0x168(%rbp),%r13
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq 0x5A8(%rbp),%r11
	movq %r11,0x0(%r13)
	movq 0x170(%rbp),%r13
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_253018
L_253012:
	movq 0x0(%r11),%r14
	movq 0x8(%r11),%r11
	movq %r11,%r15
.p2align 0x4,,0x7
L_253013:
	movq 0x0(%r14),%r13
	cmpq $0x1,%r13
	je L_483380
L_253014:
	movq 0x8(%r13),%r11
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r11,0x0(%r14)
	cmpq $0x1,%r15
	je L_483378
L_253015:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_253013
.p2align 0x4
L_483378:
L_253016:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_253018
L_253019:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x790,%rbp
	leaq (L_253020+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253020
.p2align 0x4
.long 0x3F6D
L_253020:
	addq $0xFFFFFFFFFFFFF870,%rbp
L_253018:
	movq 0x170(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x5B0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x78(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x590(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x560(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x568(%rbp),%r14
	movq %r14,%r11
	salq $0x5,%r11
	movq 0x780(%rbp),%r10
	movq %r10,0x0(%r15,%r11,1)
	movq %r15,%r11
	shrq $0x8,%r11
	movb $0x1,0x0(%r13,%r11,1)
	movq %r14,%r11
	salq $0x5,%r11
	movq 0x578(%rbp),%r10
	movq %r10,0x8(%r15,%r11,1)
	movq %r15,%r11
	shrq $0x8,%r11
	movb $0x1,0x0(%r13,%r11,1)
	movq %r14,%r11
	salq $0x5,%r11
	movq 0x5B8(%rbp),%r10
	movq %r10,0x10(%r15,%r11,1)
	movq %r15,%r11
	shrq $0x8,%r11
	movb $0x1,0x0(%r13,%r11,1)
	movq %r14,%r13
	salq $0x5,%r13
	movq 0x570(%rbp),%r11
	movq %r11,0x18(%r15,%r13,1)
	incq %r14
	movq %r14,0x568(%rbp)
	jmp loop_2984
.p2align 0x4
L_483380:
L_252530:
	movq (globalObjptr+0x7E8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_483391:
L_252944:
	movq 0xE8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq $0x9DF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x40(%r11),%r14
	movq 0x38(%r11),%r13
	movq 0x30(%r11),%r10
	movq 0x28(%r11),%r9
	movq 0x20(%r11),%r8
	movq 0x18(%r11),%rsp
	movq 0x10(%r11),%rsi
	movq 0x8(%r11),%rdi
	movq 0x0(%r11),%rdx
	movq $0x9E1,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %rdx,0x0(%r11)
	movq %rdi,0x8(%r11)
	movq %rsi,0x10(%r11)
	movq %rsp,0x18(%r11)
	movq %r8,0x20(%r11)
	movq %r9,0x28(%r11)
	movq %r10,0x30(%r11)
	movq %r15,0x38(%r11)
	movq %r13,0x40(%r11)
	movq %r14,0x48(%r11)
	movq %r11,0x798(%rbp)
	addq $0x58,%r12
	movq 0x570(%rbp),%r15
	movq %r15,0x790(%rbp)
	addq $0x790,%rbp
	leaq (L_252945+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3797
.p2align 0x4
L_483392:
L_253071:
	movq $0x3CB7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x120(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x588(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x790(%rbp)
	movl 0x184(%rbp),%r15d
	movl %r15d,0x798(%rbp)
	addq $0x790,%rbp
	leaq (L_253072+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
L_483393:
L_253118:
	cmpq $0x1,0x570(%rbp)
	jne L_252944
L_253120:
	movq 0x580(%rbp),%r15
	movq %r15,0x570(%rbp)
	jmp L_252990
.p2align 0x4
L_483395:
L_252942:
	cmpq $0x1,0x570(%rbp)
	jne L_252944
L_253063:
	movq 0x580(%rbp),%r15
	movq %r15,0x570(%rbp)
	jmp L_252990
.p2align 0x4
.long 0x3F7C
L_253124:
	addq $0xFFFFFFFFFFFFF860,%rbp
	movq 0x7A0(%rbp),%r15
	movq %r15,0x798(%rbp)
	movq 0x7A8(%rbp),%r15
	movq %r15,0x7A0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_253125
L_253126:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x7B0,%rbp
	leaq (L_253127+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253127
.p2align 0x4
.long 0x3F7D
L_253127:
	addq $0xFFFFFFFFFFFFF850,%rbp
L_253125:
	movq 0x790(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x780(%rbp),%r15
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x788(%rbp),%r13
	movq %r13,%r10
	salq $0x4,%r10
	movq %r14,0x0(%r15,%r10,1)
	movq %r15,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,%r14
	salq $0x4,%r14
	movq 0x7A0(%rbp),%r11
	movq %r11,0x8(%r15,%r14,1)
	incq %r13
	movq %r13,0x788(%rbp)
	jmp loop_2987
.p2align 0x4
.long 0x3F8D
L_253326:
	addq $0xFFFFFFFFFFFFFAA8,%rbp
	movq 0x558(%rbp),%r15
	movq %r15,0x550(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_253327
L_253387:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x560,%rbp
	leaq (L_253388+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253388
.p2align 0x4
.long 0x3F97
L_253388:
	addq $0xFFFFFFFFFFFFFAA0,%rbp
L_253327:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x558(%rbp)
	addq $0x18,%r12
	movq 0x550(%rbp),%r15
	movq %r15,0x0(%r13)
	movq $0x1,0x8(%r13)
	movq $0x1,%r14
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_253328:
	addl 0x0(%r15),%ecx
	movl %ecx,0x52C(%rbp)
	jo L_251342
L_253329:
	cmpq $0x1,%r14
	je L_483400
L_253330:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_253328
.p2align 0x4
L_483400:
L_253331:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_253332
L_253385:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x568,%rbp
	leaq (L_253386+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253386
.p2align 0x4
.long 0x3F9B
L_253386:
	addq $0xFFFFFFFFFFFFFA98,%rbp
L_253332:
	movl 0x52C(%rbp),%ecx
	testl %ecx,%ecx
	jz L_483401
L_253333:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x558(%rbp),%r14
	movq %r14,0x0(%r15)
L_253334:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x550(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x10730)(%rip),%r15
	movq %r15,0x560(%rbp)
	addq $0x560,%rbp
	leaq (L_253335+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_483401:
L_253384:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_253334
.p2align 0x4
.long 0x3F88
L_253222:
	addq $0xFFFFFFFFFFFFFAA8,%rbp
	movq 0x558(%rbp),%r14
	movq %r14,0x528(%rbp)
	movq 0x518(%rbp),%r14
	cmpq $0x1,%r14
	je L_483405
L_253223:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x518(%rbp)
	movq $0x1,0x530(%rbp)
L_253224:
	movq 0x8(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x558(%rbp)
	addq $0x558,%rbp
	leaq (L_253225+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_483405:
L_253310:
	movq $0x1,%r15
L_253233:
	movq %r15,0x560(%rbp)
	movq (globalObjptr+0xE1E8)(%rip),%r15
	movq %r15,0x558(%rbp)
	addq $0x558,%rbp
	leaq (seq_2+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp separateRight_0
.p2align 0x4
.long 0x3F88
L_253257:
	addq $0xFFFFFFFFFFFFFAA8,%rbp
	movl 0x558(%rbp),%r15d
	movl %r15d,0x4(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_253258
L_253292:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x558,%rbp
	leaq (L_253293+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253293
.p2align 0x4
.long 0x3F90
L_253293:
	addq $0xFFFFFFFFFFFFFAA8,%rbp
L_253258:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x518(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x528(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0x17,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,0x530(%rbp)
	movq %r15,0x8(%r11)
	addq $0x28,%r12
	movl 0x4(%rbp),%r15d
	movl %r15d,0x0(%r11)
	movl $0x0,0x4(%r11)
	movq %r13,0x10(%r11)
	movq %r14,0x18(%r11)
	movq 0x140(%rbp),%r15
	movq 0x10(%r15),%r14
	movq $0x2847,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x12C9,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x10,%r12
	movq $0x1CE7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x10,%r12
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r10
	movq (globalObjptr+0x1AE8)(%rip),%r14
	movl 0x0(%r14),%r9d
	incl %r9d
	jo L_251342
L_253259:
	movl %r9d,0x0(%r14)
	movq $0x1CEF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %r9d,0x4(%r14)
	addq $0x10,%r12
	movl $0x1,0x0(%r14)
	movq $0x13,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	addq $0x10,%r12
	movq $0x1,0x0(%r9)
	movq 0x0(%r13),%r8
	movq $0x1F7,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r8,0x0(%r13)
	addq $0x10,%r12
	movq $0xFFF,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r14,0x0(%r8)
	movq %r13,0x8(%r8)
	movq %r9,0x10(%r8)
	movq %r15,0x18(%r8)
	addq $0x28,%r12
	movq $0x2891,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r8,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x16B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x518(%rbp)
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq 0x0(%r10),%r15
	movq $0x1CEB,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq %r14,0x0(%r13)
	movq %r10,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r15,1)
	movq %r13,0x0(%r10)
	movq $0x1CFF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r14,0x0(%r15)
	movq 0x148(%rbp),%r14
	movq 0x10(%r14),%r13
	movq $0x2099,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r11,0x0(%r14)
	movq $0x5C9,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,0x550(%rbp)
	movq %r15,0x0(%r11)
	movq %r14,0x8(%r11)
	addq $0x18,%r12
	movq 0x8(%r13),%r15
	movq %r15,0x578(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x558(%rbp)
	movq 0x20(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x560(%rbp)
	movq 0x50(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x568(%rbp)
	addq $0x578,%rbp
	leaq (L_253260+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x3F11
L_252431:
	addq $0xFFFFFFFFFFFFFAD8,%rbp
	movq 0x528(%rbp),%r15
	movq %r15,0x520(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_252432
L_252573:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x530,%rbp
	leaq (L_252574+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252574
.p2align 0x4
.long 0x3F24
L_252574:
	addq $0xFFFFFFFFFFFFFAD0,%rbp
L_252432:
	movq 0x4E0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x528(%rbp)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq $0x1,0x0(%r15)
	movq 0x4F0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x530(%rbp)
	movq %r15,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r13,%r14,1)
	movq $0x1,0x0(%r15)
	movq 0x500(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x538(%rbp)
	movq %r15,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r13,%r14,1)
	movq $0x1,0x0(%r15)
	movq 0x510(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x540(%rbp)
	movq %r15,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r13,%r14,1)
	movq $0x1,0x0(%r15)
	movq $0x71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x44D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x78(%rbp),%r15
	movq %r15,%r11
	shrq $0x8,%r11
	movb $0x1,0x0(%r13,%r11,1)
	movq %r14,0x0(%r15)
	movl 0x0(%rbp),%r14d
	movl %r14d,0x550(%rbp)
	movq 0x8(%rbp),%r14
	movq %r14,0x558(%rbp)
	movq 0x10(%rbp),%r14
	movq %r14,0x560(%rbp)
	movq 0x18(%rbp),%r14
	movq %r14,0x568(%rbp)
	movq 0x20(%rbp),%r14
	movq %r14,0x570(%rbp)
	movq 0x28(%rbp),%r14
	movq %r14,0x578(%rbp)
	movq 0x30(%rbp),%r14
	movq %r14,0x580(%rbp)
	movq 0x38(%rbp),%r14
	movq %r14,0x588(%rbp)
	movq 0x40(%rbp),%r14
	movq %r14,0x590(%rbp)
	movq 0x48(%rbp),%r14
	movq %r14,0x598(%rbp)
	movq 0x50(%rbp),%r14
	movq %r14,0x5A0(%rbp)
	movq 0x58(%rbp),%r14
	movq %r14,0x5A8(%rbp)
	movq 0x60(%rbp),%r14
	movq %r14,0x5B0(%rbp)
	movq 0x68(%rbp),%r14
	movq %r14,0x5B8(%rbp)
	movq 0x70(%rbp),%r14
	movq %r14,0x5C0(%rbp)
	movq %r15,0x5C8(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x5D0(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x5D8(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0x5E0(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0x5E8(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0x5F0(%rbp)
	movq 0xA8(%rbp),%r15
	movq %r15,0x5F8(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0x600(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0x608(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0x610(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0x618(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0x620(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0x628(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0x630(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0x638(%rbp)
	movq 0xF0(%rbp),%r15
	movq %r15,0x640(%rbp)
	movq 0xF8(%rbp),%r15
	movq %r15,0x648(%rbp)
	movq 0x100(%rbp),%r15
	movq %r15,0x650(%rbp)
	movq 0x108(%rbp),%r15
	movq %r15,0x658(%rbp)
	movq 0x110(%rbp),%r15
	movq %r15,0x660(%rbp)
	movq 0x118(%rbp),%r15
	movq %r15,0x668(%rbp)
	movq 0x120(%rbp),%r15
	movq %r15,0x670(%rbp)
	movq 0x128(%rbp),%r15
	movq %r15,0x678(%rbp)
	movq 0x130(%rbp),%r15
	movq %r15,0x680(%rbp)
	movq 0x138(%rbp),%r15
	movq %r15,0x688(%rbp)
	movq 0x140(%rbp),%r15
	movq %r15,0x690(%rbp)
	movq 0x148(%rbp),%r15
	movq %r15,0x698(%rbp)
	movq 0x150(%rbp),%r15
	movq %r15,0x6A0(%rbp)
	movq 0x158(%rbp),%r15
	movq %r15,0x6A8(%rbp)
	movq 0x160(%rbp),%r15
	movq %r15,0x6B0(%rbp)
	movq 0x168(%rbp),%r15
	movq %r15,0x6B8(%rbp)
	movq 0x170(%rbp),%r15
	movq %r15,0x6C0(%rbp)
	movq 0x178(%rbp),%r15
	movq %r15,0x6C8(%rbp)
	movl 0x180(%rbp),%r15d
	movl %r15d,0x6D0(%rbp)
	movq 0x188(%rbp),%r15
	movq %r15,0x6D8(%rbp)
	movq 0x190(%rbp),%r15
	movq %r15,0x6E0(%rbp)
	movq 0x198(%rbp),%r15
	movq %r15,0x6E8(%rbp)
	movq 0x1A0(%rbp),%r15
	movq %r15,0x6F0(%rbp)
	movq 0x1A8(%rbp),%r15
	movq %r15,0x6F8(%rbp)
	movq 0x1B0(%rbp),%r15
	movq %r15,0x700(%rbp)
	movq 0x1B8(%rbp),%r15
	movq %r15,0x708(%rbp)
	movq 0x1C0(%rbp),%r15
	movq %r15,0x710(%rbp)
	movq 0x1C8(%rbp),%r15
	movq %r15,0x718(%rbp)
	movq 0x1D0(%rbp),%r15
	movq %r15,0x720(%rbp)
	movq 0x1D8(%rbp),%r15
	movq %r15,0x728(%rbp)
	movq 0x1E0(%rbp),%r15
	movq %r15,0x730(%rbp)
	movq 0x1E8(%rbp),%r15
	movq %r15,0x738(%rbp)
	movq 0x1F0(%rbp),%r15
	movq %r15,0x740(%rbp)
	movq 0x1F8(%rbp),%r15
	movq %r15,0x748(%rbp)
	movq 0x200(%rbp),%r15
	movq %r15,0x750(%rbp)
	movq 0x208(%rbp),%r15
	movq %r15,0x758(%rbp)
	movq 0x210(%rbp),%r15
	movq %r15,0x760(%rbp)
	movq 0x218(%rbp),%r15
	movq %r15,0x768(%rbp)
	movq 0x220(%rbp),%r15
	movq %r15,0x770(%rbp)
	movq 0x228(%rbp),%r15
	movq %r15,0x778(%rbp)
	movq 0x230(%rbp),%r15
	movq %r15,0x780(%rbp)
	movq 0x238(%rbp),%r15
	movq %r15,0x788(%rbp)
	movq 0x240(%rbp),%r15
	movq %r15,0x790(%rbp)
	movq 0x248(%rbp),%r15
	movq %r15,0x798(%rbp)
	movq 0x250(%rbp),%r15
	movq %r15,0x7A0(%rbp)
	movq 0x258(%rbp),%r15
	movq %r15,0x7A8(%rbp)
	movq 0x260(%rbp),%r15
	movq %r15,0x7B0(%rbp)
	movq 0x268(%rbp),%r15
	movq %r15,0x7B8(%rbp)
	movq 0x270(%rbp),%r15
	movq %r15,0x7C0(%rbp)
	movq 0x278(%rbp),%r15
	movq %r15,0x7C8(%rbp)
	movq 0x280(%rbp),%r15
	movq %r15,0x7D0(%rbp)
	movq 0x288(%rbp),%r15
	movq %r15,0x7D8(%rbp)
	movq 0x290(%rbp),%r15
	movq %r15,0x7E0(%rbp)
	movq 0x298(%rbp),%r15
	movq %r15,0x7E8(%rbp)
	movq 0x2A0(%rbp),%r15
	movq %r15,0x7F0(%rbp)
	movq 0x2A8(%rbp),%r15
	movq %r15,0x7F8(%rbp)
	movq 0x2B0(%rbp),%r15
	movq %r15,0x800(%rbp)
	movq 0x2B8(%rbp),%r15
	movq %r15,0x808(%rbp)
	movq 0x2C0(%rbp),%r15
	movq %r15,0x810(%rbp)
	movq 0x2C8(%rbp),%r15
	movq %r15,0x818(%rbp)
	movq 0x2D0(%rbp),%r15
	movq %r15,0x820(%rbp)
	movq 0x2D8(%rbp),%r15
	movq %r15,0x828(%rbp)
	movq 0x2E0(%rbp),%r15
	movq %r15,0x830(%rbp)
	movq 0x2E8(%rbp),%r15
	movq %r15,0x838(%rbp)
	movq 0x2F0(%rbp),%r15
	movq %r15,0x840(%rbp)
	movq 0x2F8(%rbp),%r15
	movq %r15,0x848(%rbp)
	movq 0x300(%rbp),%r15
	movq %r15,0x850(%rbp)
	movq 0x308(%rbp),%r15
	movq %r15,0x858(%rbp)
	movq 0x310(%rbp),%r15
	movq %r15,0x860(%rbp)
	movq 0x318(%rbp),%r15
	movq %r15,0x868(%rbp)
	movq 0x320(%rbp),%r15
	movq %r15,0x870(%rbp)
	movq 0x328(%rbp),%r15
	movq %r15,0x878(%rbp)
	movq 0x330(%rbp),%r15
	movq %r15,0x880(%rbp)
	movq 0x338(%rbp),%r15
	movq %r15,0x888(%rbp)
	movq 0x340(%rbp),%r15
	movq %r15,0x890(%rbp)
	movq 0x348(%rbp),%r15
	movq %r15,0x898(%rbp)
	movq 0x350(%rbp),%r15
	movq %r15,0x8A0(%rbp)
	movq 0x358(%rbp),%r15
	movq %r15,0x8A8(%rbp)
	movq 0x360(%rbp),%r15
	movq %r15,0x8B0(%rbp)
	movq 0x368(%rbp),%r15
	movq %r15,0x8B8(%rbp)
	movq 0x370(%rbp),%r15
	movq %r15,0x8C0(%rbp)
	movq 0x378(%rbp),%r15
	movq %r15,0x8C8(%rbp)
	movq 0x380(%rbp),%r15
	movq %r15,0x8D0(%rbp)
	movq 0x388(%rbp),%r15
	movq %r15,0x8D8(%rbp)
	movq 0x390(%rbp),%r15
	movq %r15,0x8E0(%rbp)
	movq 0x398(%rbp),%r15
	movq %r15,0x8E8(%rbp)
	movq 0x3A0(%rbp),%r15
	movq %r15,0x8F0(%rbp)
	movq 0x3A8(%rbp),%r15
	movq %r15,0x8F8(%rbp)
	movq 0x3B0(%rbp),%r15
	movq %r15,0x900(%rbp)
	movq 0x3B8(%rbp),%r15
	movq %r15,0x908(%rbp)
	movq 0x3C0(%rbp),%r15
	movq %r15,0x910(%rbp)
	movq 0x3C8(%rbp),%r15
	movq %r15,0x918(%rbp)
	movq 0x3D0(%rbp),%r15
	movq %r15,0x920(%rbp)
	movq 0x3D8(%rbp),%r15
	movq %r15,0x928(%rbp)
	movq 0x3E0(%rbp),%r15
	movq %r15,0x930(%rbp)
	movq 0x3E8(%rbp),%r15
	movq %r15,0x938(%rbp)
	movq 0x3F0(%rbp),%r15
	movq %r15,0x940(%rbp)
	movq 0x3F8(%rbp),%r15
	movq %r15,0x948(%rbp)
	movq 0x400(%rbp),%r15
	movq %r15,0x950(%rbp)
	movq 0x408(%rbp),%r15
	movq %r15,0x958(%rbp)
	movq 0x410(%rbp),%r15
	movq %r15,0x960(%rbp)
	movq 0x418(%rbp),%r15
	movq %r15,0x968(%rbp)
	movq 0x420(%rbp),%r15
	movq %r15,0x970(%rbp)
	movq 0x428(%rbp),%r15
	movq %r15,0x978(%rbp)
	movq 0x430(%rbp),%r15
	movq %r15,0x980(%rbp)
	movq 0x438(%rbp),%r15
	movq %r15,0x988(%rbp)
	movq 0x440(%rbp),%r15
	movq %r15,0x990(%rbp)
	movq 0x448(%rbp),%r15
	movq %r15,0x998(%rbp)
	movq 0x450(%rbp),%r15
	movq %r15,0x9A0(%rbp)
	movq 0x458(%rbp),%r15
	movq %r15,0x9A8(%rbp)
	movq 0x460(%rbp),%r15
	movq %r15,0x9B0(%rbp)
	movq 0x468(%rbp),%r15
	movq %r15,0x9B8(%rbp)
	movq 0x470(%rbp),%r15
	movq %r15,0x9C0(%rbp)
	movq 0x478(%rbp),%r15
	movq %r15,0x9C8(%rbp)
	movq 0x480(%rbp),%r15
	movq %r15,0x9D0(%rbp)
	movq 0x488(%rbp),%r15
	movq %r15,0x9D8(%rbp)
	movq 0x490(%rbp),%r15
	movq %r15,0x9E0(%rbp)
	movq 0x498(%rbp),%r15
	movq %r15,0x9E8(%rbp)
	movq 0x4A0(%rbp),%r15
	movq %r15,0x9F0(%rbp)
	movq 0x4A8(%rbp),%r15
	movq %r15,0x9F8(%rbp)
	movq 0x4B0(%rbp),%r15
	movq %r15,0xA00(%rbp)
	movq 0x4B8(%rbp),%r15
	movq %r15,0xA08(%rbp)
	movq 0x4C0(%rbp),%r15
	movq %r15,0xA10(%rbp)
	movq 0x4C8(%rbp),%r15
	movq %r15,0xA18(%rbp)
	movq 0x4D0(%rbp),%r15
	movq %r15,0xA20(%rbp)
	addq $0x550,%rbp
	leaq (L_252433+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp elabDec_0
.p2align 0x4
.long 0x3F0A
L_252408:
	addq $0xFFFFFFFFFFFFFD90,%rbp
	incl 0x34(%rbp)
	jmp loop_2974
.p2align 0x4
.long 0x3F0C
L_252414:
	addq $0xFFFFFFFFFFFFFD90,%rbp
	incl 0x34(%rbp)
	jmp loop_2973
.p2align 0x4
.long 0x3F0E
L_252420:
	addq $0xFFFFFFFFFFFFFD90,%rbp
	incl 0x8C(%rbp)
	jmp loop_2972
.p2align 0x4
.long 0x3F10
L_252427:
	addq $0xFFFFFFFFFFFFFD90,%rbp
	movq 0x270(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x38(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x40(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x40(%rbp)
	jmp loop_2970
.p2align 0x4
.long 0x3EDE
L_252162:
	addq $0xFFFFFFFFFFFFFB08,%rbp
	movq 0x4F8(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq %r15,0x4F8(%rbp)
	addq $0x4F8,%rbp
	leaq (L_252163+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3EE2
L_252191:
	addq $0xFFFFFFFFFFFFFB08,%rbp
	movq 0x4F8(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_252192
L_252297:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x4F8,%rbp
	leaq (L_252298+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252298
.p2align 0x4
.long 0x3EFA
L_252298:
	addq $0xFFFFFFFFFFFFFB08,%rbp
L_252192:
	movq 0x40(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_251347
L_252194:
	testl %r13d,%r13d
	jz L_483418
L_252195:
	movq $0x47BD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq $0x1D01,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x30,%r12
	movl $0x0,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq $0x1,0x10(%r13)
	movq 0x38(%rbp),%r14
	movq %r14,0x18(%r13)
	movq %r15,0x20(%r13)
	movq %r13,0x38(%rbp)
L_252196:
	movq 0x28(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x40(%rbp)
	movslq %r13d,%r11
	movq %r11,0x58(%rbp)
	cmpq %r14,%r11
	jne L_251347
L_252198:
	cmpl $0x0,%r13d
	jl L_251642
L_252199:
	movl $0x0,0x44(%rbp)
.p2align 0x4,,0x7
loop_2965:
	movl 0x44(%rbp),%r15d
	cmpl 0x40(%rbp),%r15d
	jnl L_483411
L_252217:
	movslq %r15d,%r14
	movq %r14,%r15
	salq $0x4,%r15
	salq $0x4,%r14
	movq 0x28(%rbp),%r13
	movq 0x8(%r13,%r14,1),%r11
	movq %r11,0x60(%rbp)
	movq 0x0(%r13,%r15,1),%r14
	movq 0x0(%r14),%r11
	movq %r11,0x68(%rbp)
	cmpq $0x1,%r11
	jne L_483409
.p2align 0x4,,0x7
L_252265:
	incl 0x44(%rbp)
	jmp loop_2965
.p2align 0x4
L_483409:
L_252218:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_252219
L_252292:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x4F8,%rbp
	leaq (L_252293+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252293
.p2align 0x4
.long 0x3EF9
L_252293:
	addq $0xFFFFFFFFFFFFFB08,%rbp
L_252219:
	movq 0x228(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq %r11,0x70(%rbp)
	movq $0x3EE3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x78(%rbp)
	movq %r13,0x0(%r15)
	addq $0x10,%r12
	movq %r15,0x4F8(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x500(%rbp)
	movq %r11,0x508(%rbp)
	addq $0x4F8,%rbp
	leaq (L_252220+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp instantiateP_0
.p2align 0x4
L_483411:
L_252200:
	movq 0x58(%rbp),%rdx
	testq %rdx,%rdx
	jz L_483415
L_252201:
	cmpq $0x7FFFFFFF,%rdx
	ja L_251549
L_252202:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x162D,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r14
	movq %r14,%rdi
	xorq %rax,%rax
	addq $0x270,%rbp
	leaq (L_252203+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252203
.p2align 0x4
.long 0x3EE3
L_252203:
	addq $0xFFFFFFFFFFFFFD90,%rbp
	movq %rax,0x30(%rbp)
L_252204:
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2966:
	cmpq 0x58(%rbp),%r15
	jnl L_483412
L_252214:
	movl %r15d,%r14d
	movslq %r14d,%r13
	salq $0x4,%r13
	movq 0x28(%rbp),%r14
	movq 0x0(%r14,%r13,1),%r11
	movq 0x30(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r11,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_2966
.p2align 0x4
L_483412:
L_252205:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_252206
L_252212:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x270,%rbp
	leaq (L_252213+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252213
.p2align 0x4
.long 0x3EE7
L_252213:
	addq $0xFFFFFFFFFFFFFD90,%rbp
L_252206:
	movq 0x30(%rbp),%r15
	movq $0xF89,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x209B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq $0x5C9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x28(%rbp)
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x230(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x270(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x20(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x50(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x60(%rbp)
	addq $0x270,%rbp
	leaq (L_252207+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_483415:
L_252216:
	movq (globalObjptr+0x6D78)(%rip),%r14
	movq %r14,0x30(%rbp)
	jmp L_252204
.p2align 0x4
L_483418:
L_252296:
	movq $0x1CFF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r14,0x38(%rbp)
	jmp L_252196
.p2align 0x4
.long 0x3EFC
L_252320:
	addq $0xFFFFFFFFFFFFFB08,%rbp
	movq 0x4F8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x88(%rbp)
	movq %r15,0x78(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x104C,%r15
	je L_483427
	cmpq $0x104D,%r15
	je L_483421
L_252321:
	movq 0x70(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x78(%rbp)
	movq (globalObjptr+0x106C8)(%rip),%r15
	movq %r15,0x4F8(%rbp)
	addq $0x4F8,%rbp
	leaq (L_252322+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_483421:
L_252356:
	movq 0x88(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x80(%rbp)
	cmpq %r15,%rdx
	movq %r14,0x78(%rbp)
	jne L_251347
L_252358:
	testq %rdx,%rdx
	jz L_483425
L_252359:
	cmpq $0x7FFFFFFF,%rdx
	ja L_251549
L_252360:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14CB,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x4F8,%rbp
	leaq (L_252361+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252361
.p2align 0x4
.long 0x3F07
L_252361:
	addq $0xFFFFFFFFFFFFFB08,%rbp
	movq %rax,0x88(%rbp)
L_252362:
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2969:
	cmpq 0x80(%rbp),%r15
	jnl L_483422
L_252367:
	movl %r15d,%r14d
	movq %r15,%r13
	movq %r15,%r11
	movslq %r14d,%r10
	movq 0x78(%rbp),%r14
	movq 0x0(%r14,%r10,8),%r9
	movq 0x70(%rbp),%r14
	movq 0x0(%r14),%r10
	movq 0x88(%rbp),%r14
	movq %r14,%r8
	shrq $0x8,%r8
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r8,1)
	salq $0x4,%r13
	movq %r9,0x0(%r14,%r13,1)
	movq %r14,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%rsp,%r13,1)
	salq $0x4,%r11
	movq %r10,0x8(%r14,%r11,1)
	incq %r15
	jmp loop_2969
.p2align 0x4
L_483422:
L_252363:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_252364
L_252365:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x4F8,%rbp
	leaq (L_252366+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252366
.p2align 0x4
.long 0x3F08
L_252366:
	addq $0xFFFFFFFFFFFFFB08,%rbp
L_252364:
	movq 0x88(%rbp),%r15
	movq $0x183F,0xFFFFFFFFFFFFFFF8(%r15)
L_252337:
	movq 0x60(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x68(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x68(%rbp)
	jmp loop_2962
.p2align 0x4
L_483425:
L_252369:
	movq (globalObjptr+0x6D80)(%rip),%r15
	movq %r15,0x88(%rbp)
	jmp L_252362
.p2align 0x4
L_483427:
L_252346:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_252347
L_252354:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x4F8,%rbp
	leaq (L_252355+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252355
.p2align 0x4
.long 0x3F06
L_252355:
	addq $0xFFFFFFFFFFFFFB08,%rbp
L_252347:
	movq 0x88(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x70(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x78(%rbp)
	movq $0x1713,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq %r12,(gcState+0x0)(%rip)
	movq 0x80(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x90(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14CB,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x4F8,%rbp
	leaq (L_252348+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252348
.p2align 0x4
.long 0x3F04
L_252348:
	addq $0xFFFFFFFFFFFFFB08,%rbp
	movq %rax,0x70(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2968:
	cmpq $0x1,%r15
	jnl L_483428
L_252353:
	movq %r15,%r14
	movq %r15,%r13
	movq 0x70(%rbp),%r11
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	salq $0x4,%r14
	movq 0x90(%rbp),%r10
	movq %r10,0x0(%r11,%r14,1)
	movq %r11,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r9,%r14,1)
	salq $0x4,%r13
	movq 0x78(%rbp),%r14
	movq %r14,0x8(%r11,%r13,1)
	incq %r15
	jmp loop_2968
.p2align 0x4
L_483428:
L_252349:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_252350
L_252351:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x4F8,%rbp
	leaq (L_252352+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252352
.p2align 0x4
.long 0x3F05
L_252352:
	addq $0xFFFFFFFFFFFFFB08,%rbp
L_252350:
	movq 0x70(%rbp),%r15
	movq $0x183F,0xFFFFFFFFFFFFFFF8(%r15)
	jmp L_252337
.p2align 0x4
.long 0x3EDC
L_252146:
	addq $0xFFFFFFFFFFFFFB18,%rbp
	movq 0x4E8(%rbp),%r15
	movq %r15,0x4E0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_252147
L_252155:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x4F0,%rbp
	leaq (L_252156+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252156
.p2align 0x4
.long 0x3EDD
L_252156:
	addq $0xFFFFFFFFFFFFFB10,%rbp
L_252147:
	movq 0x4D8(%rbp),%r14
	cmpq $0x1,%r14
	je L_483432
L_252148:
L_252149:
	movq 0x4E0(%rbp),%r13
	cmpq $0x1,%r13
	je L_483431
L_252150:
L_252151:
	movq $0x20D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
L_252152:
	movq %r15,0x4D8(%rbp)
	incl 0x184(%rbp)
	jmp loop_2961
.p2align 0x4
L_483431:
L_252153:
	movq %r14,%r15
	jmp L_252152
.p2align 0x4
L_483432:
L_252154:
	movq 0x4E0(%rbp),%r15
	jmp L_252152
.p2align 0x4
.long 0x3ED7
L_252120:
	addq $0xFFFFFFFFFFFFFD90,%rbp
	movl 0x234(%rbp),%ecx
	jmp loop_2960
.p2align 0x4
.long 0x3ED8
L_252123:
	addq $0xFFFFFFFFFFFFFD88,%rbp
	movq 0x278(%rbp),%r15
	movq %r15,0x270(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_252124
L_252134:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x280,%rbp
	leaq (L_252135+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252135
.p2align 0x4
.long 0x3EDB
L_252135:
	addq $0xFFFFFFFFFFFFFD80,%rbp
L_252124:
	movq 0x268(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%ecx
	movslq %ecx,%r13
	cmpq %r14,%r13
	jne L_251347
L_252126:
	testl %ecx,%ecx
	jz L_483434
L_252127:
	movq $0x47BD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq $0x1D01,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x30,%r12
	movl $0x1,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq $0x1,0x10(%r13)
	movq 0x270(%rbp),%r14
	movq %r14,0x18(%r13)
	movq %r15,0x20(%r13)
	movq %r13,%r15
L_252128:
	movq %r15,0x278(%rbp)
	movl %ecx,%r15d
	shlq $0x1,%r15
	orq $0x1,%r15
	movq %r15,0x270(%rbp)
	addq $0x270,%rbp
	leaq (L_252129+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp def_0
.p2align 0x4
L_483434:
L_252133:
	movq $0x1CFF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x270(%rbp),%r13
	movq %r13,0x0(%r14)
	xchgq %r14,%r15
	jmp L_252128
.p2align 0x4
.long 0x3E78
L_251472:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq 0x508(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq %r15,0x508(%rbp)
	addq $0x508,%rbp
	leaq (L_251473+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3E7D
L_251513:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq 0x508(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x18(%rbp)
	cmpq %r14,%rdx
	movq %r15,0x10(%rbp)
	jne L_251347
L_251515:
	movq 0x80(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r11d
	movl %r11d,0x30(%rbp)
	movslq %r11d,%r10
	cmpq %r14,%r10
	jne L_251347
L_251517:
	cmpl %r11d,%r13d
	jne L_483450
L_251520:
	testq %rdx,%rdx
	jz L_483449
L_251521:
	cmpq $0x7FFFFFFF,%rdx
	ja L_251549
L_251522:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14D3,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x508,%rbp
	leaq (L_251523+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251523
.p2align 0x4
.long 0x3E7E
L_251523:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq %rax,0x78(%rbp)
L_251524:
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2948:
	cmpq 0x18(%rbp),%r15
	jnl L_483437
L_251567:
	movl %r15d,%r14d
	movq %r15,%r13
	movq %r15,%r11
	movslq %r14d,%r10
	movq 0x10(%rbp),%r14
	movq 0x0(%r14,%r10,8),%r9
	movq 0x80(%rbp),%r14
	movq 0x0(%r14,%r10,8),%r8
	movq 0x78(%rbp),%r14
	movq %r14,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r10,1)
	salq $0x4,%r13
	movq %r8,0x0(%r14,%r13,1)
	movq %r14,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%rsp,%r13,1)
	salq $0x4,%r11
	movq %r9,0x8(%r14,%r11,1)
	incq %r15
	jmp loop_2948
.p2align 0x4
L_483437:
L_251525:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_251526
L_251565:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x508,%rbp
	leaq (L_251566+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251566
.p2align 0x4
.long 0x3E87
L_251566:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
L_251526:
	movq 0x78(%rbp),%r15
	movq $0x1ED,0xFFFFFFFFFFFFFFF8(%r15)
	movl 0x0(%rbp),%r14d
	testl %r14d,%r14d
	jz L_251528
L_251564:
	movq 0x70(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x4981,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x40,%r12
	movq 0x58(%rbp),%r10
	movq %r10,0x0(%r11)
	movq 0x4D8(%rbp),%r10
	movq %r10,0x8(%r11)
	movq 0x4E0(%rbp),%r10
	movq %r10,0x10(%r11)
	movq 0x60(%rbp),%r10
	movq %r10,0x18(%r11)
	movq 0x68(%rbp),%r10
	movq %r10,0x20(%r11)
	movq 0x4E8(%rbp),%r10
	movq %r10,0x28(%r11)
	movq %r15,0x30(%r11)
	movq $0x1B55,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
L_251528:
	movq 0x4F8(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x88(%rbp),%r14
	movq %r14,0x0(%r15)
	movl 0x50(%rbp),%r15d
	cmpl 0x30(%rbp),%r15d
	jne L_251530
L_251531:
	cmpl $0x0,%r15d
	jl L_251530
L_251532:
	xorl %ecx,%ecx
loop_2949:
	cmpl 0x50(%rbp),%ecx
	jnl L_483439
L_251551:
	movl %ecx,%r14d
	incl %r14d
	movl %r14d,0x10(%rbp)
	movslq %ecx,%r15
	movq %r15,%r14
	salq $0x4,%r14
	movq %r15,%r13
	salq $0x4,%r13
	movq 0x80(%rbp),%r11
	movq 0x0(%r11,%r15,8),%r10
	movq 0x48(%rbp),%r11
	movq 0x8(%r11,%r13,1),%r9
	movq 0x8(%r9),%r15
	movq 0x10(%r9),%r8
	movq %r8,0x18(%rbp)
	movq 0x0(%r11,%r14,1),%r13
	movl 0x0(%r13),%r9d
	movq 0x148(%rbp),%r14
	movq 0x10(%r14),%r13
	movq $0x2099,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x5C9,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,0x30(%rbp)
	movq %r10,0x0(%r11)
	movq %r14,0x8(%r11)
	addq $0x18,%r12
	testl %r9d,%r9d
	jnz L_483438
L_251552:
	movq $0x2,0x58(%rbp)
	movq %r13,%r15
L_251553:
	movq 0x8(%r15),%r14
	movq %r14,0x270(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x20(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x50(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x70(%rbp)
	addq $0x270,%rbp
	leaq (L_251554+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_483438:
L_251562:
	movq $0x1,0x58(%rbp)
	movq %r13,%r15
	jmp L_251553
.p2align 0x4
L_483439:
L_251533:
	movl 0x4(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_483443
L_251534:
	movq 0x28(%rbp),%rdx
	cmpq $0x7FFFFFFF,%rdx
	ja L_251549
L_251535:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x163D,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x270,%rbp
	leaq (L_251536+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251536
.p2align 0x4
.long 0x3E7F
L_251536:
	addq $0xFFFFFFFFFFFFFD90,%rbp
	movq %rax,0x10(%rbp)
L_251537:
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2950:
	cmpq 0x28(%rbp),%r15
	jnl L_483440
L_251547:
	movl %r15d,%r14d
	movq %r15,%r13
	movq %r15,%r11
	movq %r15,%r10
	movq %r15,%r9
	movq %r15,%r8
	movslq %r14d,%rsp
	movq %rsp,%r14
	movq %rsp,%rsi
	movq %rsp,%rdi
	imulq $0x28,%r14
	movq 0x40(%rbp),%rdx
	movq 0x0(%rdx,%r14,1),%rcx
	imulq $0x28,%rsi
	movq 0x8(%rdx,%rsi,1),%r14
	imulq $0x28,%rdi
	movq 0x10(%rdx,%rdi,1),%rsi
	imulq $0x28,%rsp
	movq %rsp,%rax
	movq 0x18(%rdx,%rax,1),%rsp
	movq 0x10(%rbp),%rdi
	movq %rdi,%rdx
	shrq $0x8,%rdx
	movq (gcState+0x3C8)(%rip),%rbx
	movb $0x1,0x0(%rbx,%rdx,1)
	imulq $0x28,%r13
	movq %rcx,0x0(%rdi,%r13,1)
	movq %rdi,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%rbx,%r13,1)
	imulq $0x28,%r11
	movq %r14,0x8(%rdi,%r11,1)
	movq %rdi,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%rbx,%r14,1)
	imulq $0x28,%r10
	movq 0x8(%rbp),%r14
	movq %r14,0x10(%rdi,%r10,1)
	movq %rdi,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%rbx,%r14,1)
	imulq $0x28,%r9
	movq %rsi,0x18(%rdi,%r9,1)
	movq %rdi,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%rbx,%r14,1)
	imulq $0x28,%r8
	movq %rsp,0x20(%rdi,%r8,1)
	incq %r15
	jmp loop_2950
.p2align 0x4
L_483440:
L_251538:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_251539
L_251545:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x270,%rbp
	leaq (L_251546+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251546
.p2align 0x4
.long 0x3E82
L_251546:
	addq $0xFFFFFFFFFFFFFD90,%rbp
L_251539:
	movq 0x10(%rbp),%r15
	movq $0xB0B,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x1B8(%rbp),%r14
	movq 0x10(%r14),%r13
	movb 0x0(%r13),%r11b
	movq 0x1C0(%rbp),%r14
	movq 0x10(%r14),%r13
	movb 0x0(%r13),%r10b
	movq $0x4489,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x88(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x20C5,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movzbl %r11b,%r14d
	movzbl %r10b,%r11d
	shll $0x8,%r11d
	orl %r11d,%r14d
	movl %r14d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r13)
	movq %r15,0x18(%r13)
	movq $0x20CD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r15,0x268(%rbp)
	addq $0x10,%r12
	jmp L_251540
.p2align 0x4
L_483443:
L_251550:
	movq (globalObjptr+0x6E00)(%rip),%r15
	movq %r15,0x10(%rbp)
	jmp L_251537
.p2align 0x4
L_483449:
L_251569:
	movq (globalObjptr+0xFA0)(%rip),%r15
	movq %r15,0x78(%rbp)
	jmp L_251524
.p2align 0x4
L_483450:
L_251519:
	movq (globalObjptr+0x4E0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3E97
L_251666:
	addq $0xFFFFFFFFFFFFF920,%rbp
	movq 0x6E0(%rbp),%r15
	movq %r15,0xA0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_251667
L_251749:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x6E0,%rbp
	leaq (L_251750+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251750
.p2align 0x4
.long 0x3EAB
L_251750:
	addq $0xFFFFFFFFFFFFF920,%rbp
L_251667:
	movq 0xA0(%rbp),%r15
	cmpq $0x1,%r15
	je L_483453
L_251668:
	movq 0x8(%r15),%r14
	movq %r14,0xA8(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xB0(%rbp)
	movq (globalObjptr+0x10668)(%rip),%r15
	movq %r15,0x6E0(%rbp)
	addq $0x6E0,%rbp
	leaq (L_251669+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_483453:
L_251719:
	movq 0x40(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x50(%rbp),%r14
	movq %r14,%r11
	imulq $0x28,%r11
	movq 0x78(%rbp),%r10
	movq %r10,0x0(%r15,%r11,1)
	movq %r15,%r11
	shrq $0x8,%r11
	movb $0x1,0x0(%r13,%r11,1)
	movq %r14,%r11
	imulq $0x28,%r11
	movq 0x98(%rbp),%r10
	movq %r10,0x8(%r15,%r11,1)
	movq %r15,%r11
	shrq $0x8,%r11
	movb $0x1,0x0(%r13,%r11,1)
	movq %r14,%r11
	imulq $0x28,%r11
	movq 0x80(%rbp),%r10
	movq %r10,0x10(%r15,%r11,1)
	movq %r15,%r11
	shrq $0x8,%r11
	movb $0x1,0x0(%r13,%r11,1)
	movq %r14,%r11
	imulq $0x28,%r11
	movq 0x88(%rbp),%r10
	movq %r10,0x18(%r15,%r11,1)
	movq %r15,%r11
	shrq $0x8,%r11
	movb $0x1,0x0(%r13,%r11,1)
	movq %r14,%r13
	imulq $0x28,%r13
	movq 0x90(%rbp),%r11
	movq %r11,0x20(%r15,%r13,1)
	incq %r14
	movq %r14,0x50(%rbp)
	jmp loop_2942
.p2align 0x4
.long 0x3EAF
L_251823:
	addq $0xFFFFFFFFFFFFF8B8,%rbp
	movq 0x748(%rbp),%r15
	movq %r15,0x6F0(%rbp)
	movq 0x738(%rbp),%r14
	movq %r14,0x740(%rbp)
	movq 0x730(%rbp),%r14
	movq %r14,0x748(%rbp)
	movq %r15,0x738(%rbp)
	addq $0x738,%rbp
	leaq (L_251824+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp con_2
.p2align 0x4
.long 0x3EC5
L_251958:
	addq $0xFFFFFFFFFFFFF8B0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_251959
L_251968:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x750,%rbp
	leaq (L_251969+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251969
.p2align 0x4
.long 0x3EC7
L_251969:
	addq $0xFFFFFFFFFFFFF8B0,%rbp
L_251959:
	movq 0x148(%rbp),%r15
	movq 0x10(%r15),%r14
	movq $0x2099,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x718(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x5C9,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x748(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x728(%rbp),%r15
	movq %r15,0x0(%r13)
	movq 0x8(%r14),%r15
	movq %r15,0x770(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x750(%rbp)
	movq 0x20(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x758(%rbp)
	movq 0x50(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x760(%rbp)
	addq $0x770,%rbp
	leaq (L_251960+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x3ECA
L_251987:
	addq $0xFFFFFFFFFFFFF8E0,%rbp
	movl 0x720(%rbp),%r15d
	movl %r15d,0x4(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_251988
L_251990:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x720,%rbp
	leaq (L_251991+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251991
.p2align 0x4
.long 0x3ECB
L_251991:
	addq $0xFFFFFFFFFFFFF8E0,%rbp
L_251988:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x4(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xCE38)(%rip),%r15
	movq %r15,0x18(%r13)
	movq 0x140(%rbp),%r15
	movq 0x10(%r15),%r14
	movq $0x2847,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x12C9,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	addq $0x10,%r12
	movq $0x1CE7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	addq $0x10,%r12
	movq 0x8(%r14),%r11
	movq 0x0(%r14),%r10
	movq (globalObjptr+0x1AE8)(%rip),%r14
	movl 0x0(%r14),%r9d
	incl %r9d
	jo L_251342
L_251989:
	movq %r13,0x718(%rbp)
	movl %r9d,0x0(%r14)
	movq $0x1CEF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %r9d,0x4(%r14)
	addq $0x10,%r12
	movl $0x1,0x0(%r14)
	movq $0x13,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq 0x0(%r11),%r9
	movq $0x1F7,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r9,0x0(%r11)
	addq $0x10,%r12
	movq $0xFFF,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r14,0x0(%r9)
	movq %r11,0x8(%r9)
	movq %r13,0x10(%r9)
	movq %r15,0x18(%r9)
	addq $0x28,%r12
	movq $0x2891,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r9,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x16B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq 0x0(%r10),%r15
	movq $0x1CEB,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq %r14,0x0(%r13)
	movq %r10,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r10)
	movq 0x710(%rbp),%r15
	movq %r15,0x720(%rbp)
	movq %r14,0x710(%rbp)
	jmp L_251936
.p2align 0x4
.long 0x3ECE
not_58:
	addq $0xFFFFFFFFFFFFFAB0,%rbp
	movl 0x550(%rbp),%r15d
	movl %r15d,0x4(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_252010
L_252045:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x550,%rbp
	leaq (L_252046+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252046
.p2align 0x4
.long 0x3ED3
L_252046:
	addq $0xFFFFFFFFFFFFFAB0,%rbp
L_252010:
	movl 0x4(%rbp),%r14d
	testl %r14d,%r14d
	jz L_252005
L_252012:
	movq 0x190(%rbp),%r14
	movl 0x0(%r14),%r13d
	testl %r13d,%r13d
	jnz L_483459
L_252013:
	movq 0x198(%rbp),%r14
	cmpb $0x2,0x0(%r14)
	je L_483458
L_252014:
	movq 0x520(%rbp),%r15
	jmp L_252006
.p2align 0x4
L_483458:
L_252015:
	movq 0x518(%rbp),%r15
	movq %r15,0x550(%rbp)
	movq 0x120(%rbp),%r15
	movq %r15,0x558(%rbp)
	addq $0x550,%rbp
	leaq (L_252016+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutT_0
.p2align 0x4
L_483459:
L_252044:
	movq 0x520(%rbp),%r15
	jmp L_252006
.p2align 0x4
.long 0x3ECE
rev_352:
	addq $0xFFFFFFFFFFFFFAB0,%rbp
	movq 0x550(%rbp),%r15
	movq %r15,0x548(%rbp)
	cmpq $0x1,%r15
	je L_483464
L_252052:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x548(%rbp)
	movq %r14,0x550(%rbp)
	movq $0x1,0x558(%rbp)
.p2align 0x4,,0x7
L_252053:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_483463
.p2align 0x4,,0x7
L_252054:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x550(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x558(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x548(%rbp),%r14
	cmpq $0x1,%r14
	je L_483462
L_252055:
	movq %r15,0x558(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x548(%rbp)
	movq %r15,0x550(%rbp)
	jmp L_252053
.p2align 0x4
L_483462:
L_252057:
	movq %r15,0x550(%rbp)
	addq $0x550,%rbp
	leaq (L_252058+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_483463:
L_252059:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x568,%rbp
	leaq (L_252060+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252060
.p2align 0x4
.long 0x3ED2
L_252060:
	addq $0xFFFFFFFFFFFFFA98,%rbp
	jmp L_252054
.p2align 0x4
L_483464:
L_252061:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_252057
.p2align 0x4
.long 0x3FC8
L_253743:
	addq $0xFFFFFFFFFFFFFAA8,%rbp
	movq 0x558(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_253744
L_253892:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x558,%rbp
	leaq (L_253893+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253893
.p2align 0x4
.long 0x3FDB
L_253893:
	addq $0xFFFFFFFFFFFFFAA8,%rbp
L_253744:
	movq 0x4E0(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_483506
L_253745:
	movq 0x8(%r14),%r15
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x38(%rbp)
	movq $0x1,0x40(%rbp)
.p2align 0x4,,0x7
L_253746:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_483505
.p2align 0x4,,0x7
L_253747:
	movq 0x38(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_252530
L_253748:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r14,1)
	movq %r13,0x0(%r15)
	movq $0x24E9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_483465
L_253749:
	movq %r15,0x40(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	movq %r15,0x38(%rbp)
	jmp L_253746
.p2align 0x4
L_483465:
L_253750:
	movq %r15,0x30(%rbp)
L_253751:
	movq 0x530(%rbp),%r13
	cmpq $0x1,%r13
	je L_253758
L_253752:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
.p2align 0x4,,0x7
L_253753:
	movq 0x0(%r15),%r13
	cmpq $0x1,%r13
	je L_252530
L_253754:
	movq 0x8(%r13),%r11
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r11,0x0(%r15)
	cmpq $0x1,%r14
	je L_483466
L_253755:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_253753
.p2align 0x4
L_483466:
L_253756:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_253758
L_253884:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x558,%rbp
	leaq (L_253885+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253885
.p2align 0x4
.long 0x3FD9
L_253885:
	addq $0xFFFFFFFFFFFFFAA8,%rbp
L_253758:
	movq 0x4E0(%rbp),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq 0x4E8(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_483467
L_253759:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
L_253760:
	movq 0x8(%r15),%r14
	movl 0x0(%r15),%r13d
	movq 0x18(%r15),%r11
	movq 0x20(%r15),%r10
	movq $0x17D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r13d,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r11,0x18(%r15)
	movq %r10,0x20(%r15)
	addq $0x30,%r12
	movl $0x0,0x4(%r15)
	movq 0x4D8(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0x558(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x560(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x568(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x570(%rbp)
	addq $0x558,%rbp
	leaq (L_253761+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1992
.p2align 0x4
L_483467:
L_253765:
	movq 0x4F0(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_483500
L_253766:
	movq 0x8(%r14),%r15
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x38(%rbp)
	movq $0x1,0x40(%rbp)
.p2align 0x4,,0x7
L_253767:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_483499
.p2align 0x4,,0x7
L_253768:
	movq 0x38(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_252530
L_253769:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r14,1)
	movq %r13,0x0(%r15)
	movq $0x24E7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_483468
L_253770:
	movq %r15,0x40(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	movq %r15,0x38(%rbp)
	jmp L_253767
.p2align 0x4
L_483468:
L_253771:
	movq %r15,0x30(%rbp)
L_253772:
	movq 0x538(%rbp),%r13
	cmpq $0x1,%r13
	je L_253779
L_253773:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
.p2align 0x4,,0x7
L_253774:
	movq 0x0(%r15),%r13
	cmpq $0x1,%r13
	je L_252530
L_253775:
	movq 0x8(%r13),%r11
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r11,0x0(%r15)
	cmpq $0x1,%r14
	je L_483469
L_253776:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_253774
.p2align 0x4
L_483469:
L_253777:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_253779
L_253873:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x558,%rbp
	leaq (L_253874+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253874
.p2align 0x4
.long 0x3FD6
L_253874:
	addq $0xFFFFFFFFFFFFFAA8,%rbp
L_253779:
	movq 0x4F0(%rbp),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq 0x4F8(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_483470
L_253780:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
L_253781:
	movq 0x8(%r15),%r14
	movl 0x0(%r15),%r13d
	movq 0x18(%r15),%r11
	movq 0x20(%r15),%r10
	movq $0x170D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r13d,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r11,0x18(%r15)
	movq %r10,0x20(%r15)
	addq $0x30,%r12
	movl $0x0,0x4(%r15)
	movq 0x4D8(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0x558(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0x560(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x568(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0x570(%rbp)
	addq $0x558,%rbp
	leaq (L_253782+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1238
.p2align 0x4
L_483470:
L_253786:
	movq 0x500(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_483494
L_253787:
	movq 0x8(%r14),%r15
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x38(%rbp)
	movq $0x1,0x40(%rbp)
.p2align 0x4,,0x7
L_253788:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_483493
.p2align 0x4,,0x7
L_253789:
	movq 0x38(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_252530
L_253790:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r14,1)
	movq %r13,0x0(%r15)
	movq $0x24ED,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_483471
L_253791:
	movq %r15,0x40(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	movq %r15,0x38(%rbp)
	jmp L_253788
.p2align 0x4
L_483471:
L_253792:
	movq %r15,0x30(%rbp)
L_253793:
	movq 0x540(%rbp),%r13
	cmpq $0x1,%r13
	je L_253800
L_253794:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
.p2align 0x4,,0x7
L_253795:
	movq 0x0(%r15),%r13
	cmpq $0x1,%r13
	je L_252530
L_253796:
	movq 0x8(%r13),%r11
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r11,0x0(%r15)
	cmpq $0x1,%r14
	je L_483472
L_253797:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_253795
.p2align 0x4
L_483472:
L_253798:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_253800
L_253862:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x558,%rbp
	leaq (L_253863+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253863
.p2align 0x4
.long 0x3FD3
L_253863:
	addq $0xFFFFFFFFFFFFFAA8,%rbp
L_253800:
	movq 0x500(%rbp),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq 0x508(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_483473
L_253801:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
L_253802:
	movq 0x8(%r15),%r14
	movl 0x0(%r15),%r13d
	movq 0x18(%r15),%r11
	movq 0x20(%r15),%r10
	movq $0x1711,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r13d,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r11,0x18(%r15)
	movq %r10,0x20(%r15)
	addq $0x30,%r12
	movl $0x0,0x4(%r15)
	movq 0x4D8(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0x558(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0x560(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x568(%rbp)
	movq 0xA8(%rbp),%r15
	movq %r15,0x570(%rbp)
	addq $0x558,%rbp
	leaq (L_253803+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1236
.p2align 0x4
L_483473:
L_253807:
	movq 0x510(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_483488
L_253808:
	movq 0x8(%r14),%r15
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x38(%rbp)
	movq $0x1,0x40(%rbp)
.p2align 0x4,,0x7
L_253809:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_483487
.p2align 0x4,,0x7
L_253810:
	movq 0x38(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_252530
L_253811:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r14,1)
	movq %r13,0x0(%r15)
	movq $0x24F3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_483474
L_253812:
	movq %r15,0x40(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	movq %r15,0x38(%rbp)
	jmp L_253809
.p2align 0x4
L_483474:
L_253813:
	movq %r15,0x30(%rbp)
L_253814:
	movq 0x548(%rbp),%r13
	cmpq $0x1,%r13
	je L_253821
L_253815:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
.p2align 0x4,,0x7
L_253816:
	movq 0x0(%r15),%r13
	cmpq $0x1,%r13
	je L_252530
L_253817:
	movq 0x8(%r13),%r11
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r11,0x0(%r15)
	cmpq $0x1,%r14
	je L_483475
L_253818:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_253816
.p2align 0x4
L_483475:
L_253819:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_253821
L_253851:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x538,%rbp
	leaq (L_253852+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253852
.p2align 0x4
.long 0x3FD0
L_253852:
	addq $0xFFFFFFFFFFFFFAC8,%rbp
L_253821:
	movq 0x510(%rbp),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq 0x518(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_483476
L_253822:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
L_253823:
	movq 0x8(%r15),%r14
	movl 0x0(%r15),%r13d
	movq 0x18(%r15),%r11
	movq 0x20(%r15),%r10
	movq $0x170F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r13d,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r11,0x18(%r15)
	movq %r10,0x20(%r15)
	addq $0x30,%r12
	movl $0x0,0x4(%r15)
	movq 0x4D8(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0x538(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0x540(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x548(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0x550(%rbp)
	addq $0x538,%rbp
	leaq (L_253824+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1237
.p2align 0x4
L_483476:
L_253828:
	movq 0x78(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x4D8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x520(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x30(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_251347
L_253830:
	cmpl $0x0,%r13d
	jl L_251642
L_253831:
	movl $0x0,0x34(%rbp)
loop_2994:
	movl 0x30(%rbp),%r15d
	cmpl %r15d,0x34(%rbp)
	jl L_483479
L_253832:
	movq 0x528(%rbp),%r15
	cmpq $0x1,%r15
	je L_483478
L_253833:
L_253834:
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_483477
L_253835:
L_253836:
	movq $0x20D5,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	movq %r13,0x268(%rbp)
	jmp L_251540
.p2align 0x4
L_483477:
L_253837:
	movq %r15,0x268(%rbp)
	jmp L_251540
.p2align 0x4
L_483478:
L_253838:
	movq 0x28(%rbp),%r14
	movq %r14,0x268(%rbp)
	jmp L_251540
.p2align 0x4
L_483479:
L_253839:
	movslq 0x34(%rbp),%r15
	movq %r15,%r14
	salq $0x4,%r14
	movq 0x520(%rbp),%r13
	movq 0x0(%r13,%r14,1),%r11
	salq $0x4,%r15
	movq 0x8(%r13,%r15,1),%r14
	movq 0x8(%r11),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0x1052,%r13
	jne L_483480
L_253846:
	movq 0x8(%r15),%r13
	movq 0x0(%r11),%r15
	movq $0x20A1,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	addq $0x10,%r12
	movq $0x6D7,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r11,0x8(%r13)
	addq $0x18,%r12
	movq %r13,%r15
L_253841:
	movq %r15,0x540(%rbp)
	movq %r14,0x548(%rbp)
	movq (globalObjptr+0x1C00)(%rip),%r15
	movq %r15,0x538(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x550(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0x558(%rbp)
	addq $0x538,%rbp
	leaq (L_253842+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp extendTycon_0
.p2align 0x4
L_483480:
	movq %r11,%r15
	jmp L_253841
.p2align 0x4
L_483487:
L_253856:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x558,%rbp
	leaq (L_253857+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253857
.p2align 0x4
.long 0x3FD1
L_253857:
	addq $0xFFFFFFFFFFFFFAA8,%rbp
	jmp L_253810
.p2align 0x4
L_483488:
L_253858:
	movq $0x1,0x30(%rbp)
	jmp L_253814
.p2align 0x4
L_483493:
L_253867:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x558,%rbp
	leaq (L_253868+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253868
.p2align 0x4
.long 0x3FD4
L_253868:
	addq $0xFFFFFFFFFFFFFAA8,%rbp
	jmp L_253789
.p2align 0x4
L_483494:
L_253869:
	movq $0x1,0x30(%rbp)
	jmp L_253793
.p2align 0x4
L_483499:
L_253878:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x558,%rbp
	leaq (L_253879+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253879
.p2align 0x4
.long 0x3FD7
L_253879:
	addq $0xFFFFFFFFFFFFFAA8,%rbp
	jmp L_253768
.p2align 0x4
L_483500:
L_253880:
	movq $0x1,0x30(%rbp)
	jmp L_253772
.p2align 0x4
L_483505:
L_253889:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x558,%rbp
	leaq (L_253890+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253890
.p2align 0x4
.long 0x3FDA
L_253890:
	addq $0xFFFFFFFFFFFFFAA8,%rbp
	jmp L_253747
.p2align 0x4
L_483506:
L_253891:
	movq $0x1,0x30(%rbp)
	jmp L_253751
.p2align 0x4
.long 0x3EE5
L_252209:
	addq $0xFFFFFFFFFFFFFD90,%rbp
	jmp L_252118
.p2align 0x4
.long 0x3E81
L_251544:
	addq $0xFFFFFFFFFFFFFD88,%rbp
	movq 0x268(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3FB2
L_253604:
	addq $0xFFFFFFFFFFFFFD90,%rbp
	movl 0x270(%rbp),%r15d
	movl %r15d,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_253605
L_253610:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x270,%rbp
	leaq (L_253611+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253611
.p2align 0x4
.long 0x3FB6
L_253611:
	addq $0xFFFFFFFFFFFFFD90,%rbp
L_253605:
	movq $0x170F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x30,%r12
	movl 0x68(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x2,0x8(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x20(%r15)
	movq %r15,0x270(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x278(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x280(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x288(%rbp)
	addq $0x270,%rbp
	leaq (L_253606+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1237
.p2align 0x4
.long 0x3FBA
L_253627:
	addq $0xFFFFFFFFFFFFFD90,%rbp
	movq 0x270(%rbp),%r15
	movq %r15,0x70(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_253628
L_253657:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x270,%rbp
	leaq (L_253658+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253658
.p2align 0x4
.long 0x3FC1
L_253658:
	addq $0xFFFFFFFFFFFFFD90,%rbp
L_253628:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x50(%rbp),%r14
	cmpq $0x1,%r14
	je L_483509
L_253629:
	movq %r15,0x68(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x50(%rbp)
	jmp L_253626
.p2align 0x4
L_483509:
L_253630:
	movq 0x68(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq $0x1,0x70(%rbp)
.p2align 0x4,,0x7
L_253631:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_483511
.p2align 0x4,,0x7
L_253632:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x50(%rbp),%r14
	cmpq $0x1,%r14
	je L_483510
L_253633:
	movq %r15,0x70(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x50(%rbp)
	movq %r15,0x68(%rbp)
	jmp L_253631
.p2align 0x4
L_483510:
L_253634:
	movq (globalObjptr+0xA050)(%rip),%r15
	movq %r15,0x270(%rbp)
	addq $0x270,%rbp
	leaq (L_253635+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_483511:
L_253655:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x270,%rbp
	leaq (L_253656+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253656
.p2align 0x4
.long 0x3FC1
L_253656:
	addq $0xFFFFFFFFFFFFFD90,%rbp
	jmp L_253632
.p2align 0x4
.long 0x3FBD
L_253646:
	addq $0xFFFFFFFFFFFFFD90,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_253647
L_253648:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x270,%rbp
	leaq (L_253649+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253649
.p2align 0x4
.long 0x3FBE
L_253649:
	addq $0xFFFFFFFFFFFFFD90,%rbp
L_253647:
	movq $0x1,%r14
	movq 0x58(%rbp),%r15
	jmp L_253603
.p2align 0x4
.long 0x3FC2
L_253664:
	addq $0xFFFFFFFFFFFFFD90,%rbp
	movq 0x270(%rbp),%r15
	movq %r15,0x78(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_253665
L_253721:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x270,%rbp
	leaq (L_253722+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253722
.p2align 0x4
.long 0x3FC5
L_253722:
	addq $0xFFFFFFFFFFFFFD90,%rbp
L_253665:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x50(%rbp),%r14
	cmpq $0x1,%r14
	je L_483514
L_253666:
	movq %r15,0x70(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x50(%rbp)
	jmp L_253663
.p2align 0x4
L_483514:
L_253667:
	movq 0x70(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq $0x1,0x78(%rbp)
.p2align 0x4,,0x7
L_253668:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_483516
.p2align 0x4,,0x7
L_253669:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x50(%rbp),%r14
	cmpq $0x1,%r14
	je L_483515
L_253670:
	movq %r15,0x78(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x50(%rbp)
	movq %r15,0x70(%rbp)
	jmp L_253668
.p2align 0x4
L_483515:
L_253671:
	movq (globalObjptr+0xA050)(%rip),%r15
	movq %r15,0x270(%rbp)
	addq $0x270,%rbp
	leaq (L_253672+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_483516:
L_253719:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x270,%rbp
	leaq (L_253720+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253720
.p2align 0x4
.long 0x3FC5
L_253720:
	addq $0xFFFFFFFFFFFFFD90,%rbp
	jmp L_253669
.p2align 0x4
.long 0x3FB2
L_253691:
	addq $0xFFFFFFFFFFFFFD90,%rbp
	movq 0x270(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_253692
L_253707:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x270,%rbp
	leaq (L_253708+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253708
.p2align 0x4
.long 0x3FC0
L_253708:
	addq $0xFFFFFFFFFFFFFD90,%rbp
L_253692:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x68(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x70(%rbp)
	addq $0x18,%r12
	movq 0x50(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_253693:
	addl 0x0(%r15),%ecx
	movl %ecx,0x50(%rbp)
	jo L_251342
L_253694:
	cmpq $0x1,%r14
	je L_483518
L_253695:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_253693
.p2align 0x4
L_483518:
L_253696:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_253697
L_253705:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x270,%rbp
	leaq (L_253706+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253706
.p2align 0x4
.long 0x3FBF
L_253706:
	addq $0xFFFFFFFFFFFFFD90,%rbp
L_253697:
	movl 0x50(%rbp),%ecx
	testl %ecx,%ecx
	jz L_483519
L_253698:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
L_253699:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x270(%rbp)
	movq (globalObjptr+0xA450)(%rip),%r15
	movq %r15,0x278(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x280(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x288(%rbp)
	addq $0x270,%rbp
	leaq (L_253700+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unbound_0
.p2align 0x4
L_483519:
L_253704:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_253699
.p2align 0x4
.long 0x3FB1
L_253594:
	addq $0xFFFFFFFFFFFFFD90,%rbp
	movq 0x270(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_253595
L_253615:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x270,%rbp
	leaq (L_253616+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253616
.p2align 0x4
.long 0x3FB8
L_253616:
	addq $0xFFFFFFFFFFFFFD90,%rbp
L_253595:
	movq 0xF0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x50(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x58(%rbp)
	movq $0x3EC1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xE0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x270(%rbp)
	movl $0x2,0x278(%rbp)
	addq $0x270,%rbp
	leaq (L_253596+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_1
.p2align 0x4
.long 0x3FAE
L_253580:
	addq $0xFFFFFFFFFFFFFD90,%rbp
	incl 0x3C(%rbp)
	jmp loop_2992
.p2align 0x4
.long 0x3FA1
L_253446:
	addq $0xFFFFFFFFFFFFFA90,%rbp
	movq 0x570(%rbp),%r15
	movq %r15,0x548(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_253447
L_253464:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x570,%rbp
	leaq (L_253465+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253465
.p2align 0x4
.long 0x3FA4
L_253465:
	addq $0xFFFFFFFFFFFFFA90,%rbp
L_253447:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x548(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x568(%rbp)
	addq $0x18,%r12
	movq 0x560(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_253448:
	addl 0x0(%r15),%ecx
	movl %ecx,0x4(%rbp)
	jo L_251342
L_253449:
	cmpq $0x1,%r14
	je L_483524
L_253450:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_253448
.p2align 0x4
L_483524:
L_253451:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_253452
L_253462:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x578,%rbp
	leaq (L_253463+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253463
.p2align 0x4
.long 0x3FA3
L_253463:
	addq $0xFFFFFFFFFFFFFA88,%rbp
L_253452:
	movl 0x4(%rbp),%r15d
	testl %r15d,%r15d
	jz L_483525
L_253453:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x568(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,0x548(%rbp)
	jmp error_10
.p2align 0x4
L_483525:
L_253461:
	movq (globalObjptr+0x9D0)(%rip),%r14
	movq %r14,0x548(%rbp)
	jmp error_10
.p2align 0x4
.long 0x3FA0
L_253454:
	addq $0xFFFFFFFFFFFFFA98,%rbp
	movq 0x568(%rbp),%r15
	movq %r15,0x560(%rbp)
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	incl %r13d
	jo L_251342
L_253455:
	movl %r13d,0x0(%r14)
	movq %r15,0x568(%rbp)
	movq 0x548(%rbp),%r15
	movq %r15,0x570(%rbp)
	movq 0x4D8(%rbp),%r15
	movq %r15,0x578(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x580(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x588(%rbp)
	addq $0x568,%rbp
	leaq (L_253456+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
.long 0x3FA8
tuple_3:
	addq $0xFFFFFFFFFFFFFA88,%rbp
	movq 0x578(%rbp),%r15
	movq %r15,0x548(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_253531
L_253539:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x578,%rbp
	leaq (L_253540+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253540
.p2align 0x4
.long 0x3FA9
L_253540:
	addq $0xFFFFFFFFFFFFFA88,%rbp
L_253531:
	movq 0x548(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_251347
L_253533:
	cmpl $0x1,%r13d
	jne L_483531
L_253536:
	cmpq $0x0,%r15
	jna L_251389
L_253538:
	movq 0x0(%r14),%r15
L_253535:
	movq $0x2535,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq 0x568(%rbp),%r13
	movq %r13,0x548(%rbp)
	movq %r14,%r15
	jmp done_18
.p2align 0x4
L_483531:
L_253534:
	movq $0x1BE5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r14,0x0(%r15)
	movq $0x159,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq $0x1,0x0(%r14)
	movq %r14,%r15
	jmp L_253535
.p2align 0x4
.long 0x3F80
L_253153:
	addq $0xFFFFFFFFFFFFFAB8,%rbp
	movq 0x548(%rbp),%r15
	movq %r15,0x520(%rbp)
	movq (globalObjptr+0x10718)(%rip),%r15
	movq %r15,0x548(%rbp)
	addq $0x548,%rbp
	leaq (L_253154+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3F2A
L_252622:
	addq $0xFFFFFFFFFFFFFAB8,%rbp
	movq 0x548(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq %r15,0x548(%rbp)
	addq $0x548,%rbp
	leaq (L_252623+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3F2F
L_252663:
	addq $0xFFFFFFFFFFFFFAB8,%rbp
	movq 0x548(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x18(%rbp)
	cmpq %rdx,%r14
	movq %r15,0x10(%rbp)
	jne L_251347
L_252665:
	movq 0x48(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r15d
	movl %r15d,0x40(%rbp)
	movslq %r15d,%r11
	cmpq %r14,%r11
	movq %r14,0x30(%rbp)
	jne L_251347
L_252667:
	cmpl %r15d,%r13d
	jne L_251519
L_252669:
	testq %rdx,%rdx
	jz L_483548
L_252670:
	cmpq $0x7FFFFFFF,%rdx
	ja L_251549
L_252671:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14D3,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x548,%rbp
	leaq (L_252672+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252672
.p2align 0x4
.long 0x3F30
L_252672:
	addq $0xFFFFFFFFFFFFFAB8,%rbp
	movq %rax,0x78(%rbp)
L_252673:
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2981:
	cmpq 0x18(%rbp),%r15
	jnl L_483534
L_252740:
	movl %r15d,%r14d
	movq %r15,%r13
	movq %r15,%r11
	movslq %r14d,%r10
	movq 0x10(%rbp),%r14
	movq 0x0(%r14,%r10,8),%r9
	movq 0x48(%rbp),%r14
	movq 0x0(%r14,%r10,8),%r8
	movq 0x78(%rbp),%r14
	movq %r14,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r10,1)
	salq $0x4,%r13
	movq %r8,0x0(%r14,%r13,1)
	movq %r14,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%rsp,%r13,1)
	salq $0x4,%r11
	movq %r9,0x8(%r14,%r11,1)
	incq %r15
	jmp loop_2981
.p2align 0x4
L_483534:
L_252674:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_252675
L_252738:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x548,%rbp
	leaq (L_252739+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252739
.p2align 0x4
.long 0x3F38
L_252739:
	addq $0xFFFFFFFFFFFFFAB8,%rbp
L_252675:
	movq 0x78(%rbp),%r15
	movq $0x1ED,0xFFFFFFFFFFFFFFF8(%r15)
	movl 0x0(%rbp),%r14d
	testl %r14d,%r14d
	jz L_252677
L_252737:
	movq 0x70(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x4981,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x40,%r12
	movq 0x58(%rbp),%r10
	movq %r10,0x0(%r11)
	movq 0x4D8(%rbp),%r10
	movq %r10,0x8(%r11)
	movq 0x4E0(%rbp),%r10
	movq %r10,0x10(%r11)
	movq 0x60(%rbp),%r10
	movq %r10,0x18(%r11)
	movq 0x68(%rbp),%r10
	movq %r10,0x20(%r11)
	movq 0x4E8(%rbp),%r10
	movq %r10,0x28(%r11)
	movq %r15,0x30(%r11)
	movq $0x1B55,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
L_252677:
	movq 0x538(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movl 0x4(%rbp),%r15d
	cmpl %r15d,0x28(%rbp)
	jne L_252679
L_252680:
	cmpl 0x40(%rbp),%r15d
	jne L_483543
L_252682:
	movl $0x0,0x10(%rbp)
loop_2982:
	movl 0x10(%rbp),%r15d
	cmpl 0x4(%rbp),%r15d
	je L_483538
L_252683:
	movslq %r15d,%r14
	cmpq 0x500(%rbp),%r14
	jnb L_251389
L_252685:
	movq %r14,%r15
	imulq $0x28,%r15
	movq 0x4F8(%rbp),%r13
	movq 0x18(%r13,%r15,1),%r11
	movq %r11,0x18(%rbp)
	cmpq 0x8(%rbp),%r14
	jnb L_251389
L_252687:
	movq %r14,%r15
	imulq $0x18,%r15
	movq 0x510(%rbp),%r13
	movq 0x0(%r13,%r15,1),%r11
	movq %r11,0x40(%rbp)
	cmpq 0x30(%rbp),%r14
	jnb L_251389
L_252689:
	movq 0x48(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	movq 0x148(%rbp),%r15
	movq 0x10(%r15),%r14
	movq $0x2099,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r11,0x0(%r15)
	movq $0x5C9,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,0x58(%rbp)
	movq %r13,0x0(%r11)
	movq %r15,0x8(%r11)
	addq $0x18,%r12
	movq 0x8(%r14),%r15
	movq %r15,0x520(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x60(%rbp)
	movq 0x20(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x50(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x70(%rbp)
	addq $0x520,%rbp
	leaq (L_252690+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_483538:
L_252725:
	movl 0x2C(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_483542
L_252726:
	movq 0x38(%rbp),%rdx
	cmpq $0x7FFFFFFF,%rdx
	ja L_251549
L_252727:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x15D1,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r14
	movq %r14,%rdi
	xorq %rax,%rax
	addq $0x520,%rbp
	leaq (L_252728+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252728
.p2align 0x4
.long 0x3F36
L_252728:
	addq $0xFFFFFFFFFFFFFAE0,%rbp
	movq %rax,0x40(%rbp)
L_252729:
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2983:
	cmpq 0x38(%rbp),%r15
	jnl L_483539
L_252734:
	movl %r15d,%r14d
	movq %r15,%r13
	movq %r15,%r11
	movslq %r14d,%r10
	movq %r10,%r14
	imulq $0x18,%r14
	movq 0x510(%rbp),%r9
	movq 0x0(%r9,%r14,1),%r8
	imulq $0x18,%r10
	movq 0x10(%r9,%r10,1),%r14
	movq 0x40(%rbp),%r10
	movq %r10,%r9
	shrq $0x8,%r9
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r9,1)
	salq $0x4,%r13
	movq %r8,0x0(%r10,%r13,1)
	movq %r10,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%rsp,%r13,1)
	salq $0x4,%r11
	movq %r14,0x8(%r10,%r11,1)
	incq %r15
	jmp loop_2983
.p2align 0x4
L_483539:
L_252730:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_252731
L_252732:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x270,%rbp
	leaq (L_252733+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252733
.p2align 0x4
.long 0x3F37
L_252733:
	addq $0xFFFFFFFFFFFFFD90,%rbp
L_252731:
	movq 0x40(%rbp),%r15
	movq $0xB33,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x20C7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x50(%rbp),%r15
	movq %r15,0x8(%r14)
	movq $0x20CD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x268(%rbp)
	addq $0x10,%r12
	jmp L_251540
.p2align 0x4
L_483542:
L_252736:
	movq (globalObjptr+0x6E48)(%rip),%r14
	movq %r14,0x40(%rbp)
	jmp L_252729
.p2align 0x4
L_483543:
L_252679:
	movq (globalObjptr+0x6E40)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_483548:
L_252742:
	movq (globalObjptr+0xFA0)(%rip),%r15
	movq %r15,0x78(%rbp)
	jmp L_252673
.p2align 0x4
.long 0x3F43
L_252794:
	addq $0xFFFFFFFFFFFFFA88,%rbp
	movq 0x578(%rbp),%r15
	movq %r15,0x548(%rbp)
	movq 0xF0(%rbp),%r14
	movq %r14,0x558(%rbp)
	movq 0x198(%rbp),%r14
	movq %r14,0x570(%rbp)
	movq 0x190(%rbp),%r14
	movq %r14,0x578(%rbp)
	movl 0x180(%rbp),%r14d
	movl %r14d,0x580(%rbp)
	movq 0x4D8(%rbp),%r14
	movq %r14,0x588(%rbp)
	movq 0x550(%rbp),%r14
	movq %r14,0x590(%rbp)
	movq 0x530(%rbp),%r14
	movq %r14,0x598(%rbp)
	movq 0x1D8(%rbp),%r14
	movq %r14,0x5A0(%rbp)
	movq 0x568(%rbp),%r14
	movq %r14,0x5A8(%rbp)
	movq 0x1D0(%rbp),%r14
	movq %r14,0x5B0(%rbp)
	movq 0x560(%rbp),%r14
	movq %r14,0x5B8(%rbp)
	movq 0x1C8(%rbp),%r14
	movq %r14,0x5C0(%rbp)
	movq 0x1C0(%rbp),%r14
	movq %r14,0x5C8(%rbp)
	movq 0x1B8(%rbp),%r14
	movq %r14,0x5D0(%rbp)
	movq %r15,0x5D8(%rbp)
	movq 0x540(%rbp),%r15
	movq %r15,0x568(%rbp)
	movq 0x1A0(%rbp),%r15
	movq %r15,0x560(%rbp)
	movl $0x0,0x550(%rbp)
	addq $0x550,%rbp
	leaq (L_252795+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp make_1
.p2align 0x4
.long 0x3F54
L_252861:
	addq $0xFFFFFFFFFFFFFA78,%rbp
	movq 0x588(%rbp),%r15
	movq %r15,0x580(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_252862
L_252917:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x590,%rbp
	leaq (L_252918+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252918
.p2align 0x4
.long 0x3F61
L_252918:
	addq $0xFFFFFFFFFFFFFA70,%rbp
L_252862:
	movq 0x580(%rbp),%r15
	cmpq $0x1,%r15
	je L_483552
L_252863:
	movq 0x8(%r15),%r14
	movq %r14,0x588(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x590(%rbp)
	movq (globalObjptr+0x106E8)(%rip),%r15
	movq %r15,0x5A0(%rbp)
	addq $0x5A0,%rbp
	leaq (L_252864+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_483552:
L_252895:
	incl 0x548(%rbp)
	jmp loop_2986
.p2align 0x4
.long 0x3F66
L_252945:
	addq $0xFFFFFFFFFFFFF870,%rbp
	movq 0x790(%rbp),%r15
	movq %r15,0x588(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_252946
L_253061:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x790,%rbp
	leaq (L_253062+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253062
.p2align 0x4
.long 0x3F79
L_253062:
	addq $0xFFFFFFFFFFFFF870,%rbp
L_252946:
	movq 0x580(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x798(%rbp)
	movq $0x304B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x4E8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x790(%rbp)
	movq 0x588(%rbp),%r15
	movq %r15,0x7A0(%rbp)
	movq 0x1A8(%rbp),%r15
	movq %r15,0x7A8(%rbp)
	addq $0x790,%rbp
	leaq (L_252947+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unify_1
.p2align 0x4
.long 0x3F66
L_253072:
	addq $0xFFFFFFFFFFFFF870,%rbp
	movq 0x790(%rbp),%r15
	movq %r15,0x588(%rbp)
	movq (globalObjptr+0xA188)(%rip),%r14
	movq %r14,0x790(%rbp)
	movq %r15,0x798(%rbp)
	addq $0x790,%rbp
	leaq (seq_1+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp separateRight_0
.p2align 0x4
.long 0x3F93
L_253335:
	addq $0xFFFFFFFFFFFFFAA0,%rbp
	movq 0x560(%rbp),%r15
	movq %r15,0x558(%rbp)
	movq 0x518(%rbp),%r15
	movq %r15,0x568(%rbp)
	addq $0x568,%rbp
	leaq (L_253336+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lay_1
.p2align 0x4
.long 0x3F89
L_253225:
	addq $0xFFFFFFFFFFFFFAA8,%rbp
	movq 0x558(%rbp),%r15
	movq %r15,0x550(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_253226
L_253308:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x560,%rbp
	leaq (L_253309+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253309
.p2align 0x4
.long 0x3F92
L_253309:
	addq $0xFFFFFFFFFFFFFAA0,%rbp
L_253226:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x550(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x530(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x518(%rbp),%r14
	cmpq $0x1,%r14
	je L_483555
L_253227:
	movq %r15,0x530(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x518(%rbp)
	jmp L_253224
.p2align 0x4
L_483555:
L_253228:
	movq 0x530(%rbp),%r15
	movq %r15,0x518(%rbp)
	movq 0x550(%rbp),%r15
	movq %r15,0x530(%rbp)
	movq $0x1,0x550(%rbp)
.p2align 0x4,,0x7
L_253229:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_483557
.p2align 0x4,,0x7
L_253230:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x530(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x550(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x518(%rbp),%r14
	cmpq $0x1,%r14
	je L_253233
L_253231:
	movq %r15,0x550(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x518(%rbp)
	movq %r15,0x530(%rbp)
	jmp L_253229
.p2align 0x4
L_483557:
L_253306:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x560,%rbp
	leaq (L_253307+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253307
.p2align 0x4
.long 0x3F92
L_253307:
	addq $0xFFFFFFFFFFFFFAA0,%rbp
	jmp L_253230
.p2align 0x4
.long 0x3F8A
seq_2:
	addq $0xFFFFFFFFFFFFFAA8,%rbp
	movq 0x558(%rbp),%r15
	movq %r15,0x518(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_253234
L_253304:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x558,%rbp
	leaq (L_253305+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253305
.p2align 0x4
.long 0x3F91
L_253305:
	addq $0xFFFFFFFFFFFFFAA8,%rbp
L_253234:
	movq 0x518(%rbp),%r13
	cmpq $0x1,%r13
	je L_483567
L_253235:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_253236:
	addl 0x0(%r15),%ecx
	movl %ecx,0x4(%rbp)
	jo L_251342
L_253237:
	cmpq $0x1,%r14
	je L_483559
L_253238:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_253236
.p2align 0x4
L_483559:
L_253239:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_253240
L_253301:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x558,%rbp
	leaq (L_253302+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253302
.p2align 0x4
.long 0x3F91
L_253302:
	addq $0xFFFFFFFFFFFFFAA8,%rbp
L_253240:
	movl 0x4(%rbp),%ecx
L_253241:
	testl %ecx,%ecx
	jz L_483564
L_253242:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x518(%rbp),%r14
	movq %r14,0x0(%r15)
L_253243:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x518(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x528(%rbp),%r14
	movq %r14,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_253244:
	addl 0x0(%r14),%ecx
	movl %ecx,0x4(%rbp)
	jo L_251342
L_253245:
	cmpq $0x1,%r15
	je L_483560
L_253246:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_253244
.p2align 0x4
L_483560:
L_253247:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_253248
L_253298:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x558,%rbp
	leaq (L_253299+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253299
.p2align 0x4
.long 0x3F90
L_253299:
	addq $0xFFFFFFFFFFFFFAA8,%rbp
L_253248:
	movl 0x4(%rbp),%ecx
	testl %ecx,%ecx
	jz L_483561
L_253249:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x518(%rbp),%r14
	movq %r14,0x0(%r15)
L_253250:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x518(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq 0x508(%rbp),%r15
	movq %r15,0x558(%rbp)
	addq $0x558,%rbp
	leaq (L_253251+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lay_2
.p2align 0x4
L_483561:
L_253297:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_253250
.p2align 0x4
L_483564:
L_253300:
	movq $0x1,%r15
	xorl %ecx,%ecx
	jmp L_253243
.p2align 0x4
L_483567:
L_253303:
	xorl %ecx,%ecx
	jmp L_253241
.p2align 0x4
.long 0x3F8C
L_253260:
	addq $0xFFFFFFFFFFFFFA88,%rbp
	movl 0x578(%rbp),%r15d
	movl %r15d,0x4(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_253261
L_253290:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x578,%rbp
	leaq (L_253291+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253291
.p2align 0x4
.long 0x3F8F
L_253291:
	addq $0xFFFFFFFFFFFFFA88,%rbp
L_253261:
	movq $0x170F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x30,%r12
	movl 0x4(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x2,0x8(%r15)
	movq 0x568(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x550(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x520(%rbp),%r14
	movq %r14,0x20(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x568(%rbp)
	movq 0x558(%rbp),%r14
	movq %r14,0x570(%rbp)
	movq %r15,0x558(%rbp)
	addq $0x558,%rbp
	leaq (L_253262+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1237
.p2align 0x4
.long 0x3F12
L_252433:
	addq $0xFFFFFFFFFFFFFAB0,%rbp
	movq 0x550(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_252434
L_252571:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x550,%rbp
	leaq (L_252572+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252572
.p2align 0x4
.long 0x3F23
L_252572:
	addq $0xFFFFFFFFFFFFFAB0,%rbp
L_252434:
	movq 0x520(%rbp),%r15
	cmpq $0x1,%r15
	je L_252439
L_252435:
L_252436:
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_483606
L_252437:
L_252438:
	movq $0x20D5,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	movq %r13,0x28(%rbp)
L_252439:
	movq 0x4E0(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_483605
L_252440:
	movq 0x8(%r14),%r15
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x38(%rbp)
	movq $0x1,0x40(%rbp)
.p2align 0x4,,0x7
L_252441:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_483604
.p2align 0x4,,0x7
L_252442:
	movq 0x38(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_252530
L_252443:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r14,1)
	movq %r13,0x0(%r15)
	movq $0x24E9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_483570
L_252444:
	movq %r15,0x40(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	movq %r15,0x38(%rbp)
	jmp L_252441
.p2align 0x4
L_483570:
L_252445:
	movq %r15,0x30(%rbp)
L_252446:
	movq 0x528(%rbp),%r13
	cmpq $0x1,%r13
	je L_252453
L_252447:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
.p2align 0x4,,0x7
L_252448:
	movq 0x0(%r15),%r13
	cmpq $0x1,%r13
	je L_252530
L_252449:
	movq 0x8(%r13),%r11
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r11,0x0(%r15)
	cmpq $0x1,%r14
	je L_483571
L_252450:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_252448
.p2align 0x4
L_483571:
L_252451:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_252453
L_252561:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x550,%rbp
	leaq (L_252562+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252562
.p2align 0x4
.long 0x3F21
L_252562:
	addq $0xFFFFFFFFFFFFFAB0,%rbp
L_252453:
	movq 0x4E0(%rbp),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq 0x4E8(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_483572
L_252454:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
L_252455:
	movq 0x8(%r15),%r14
	movl 0x0(%r15),%r13d
	movq 0x18(%r15),%r11
	movq 0x20(%r15),%r10
	movq $0x17D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r13d,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r11,0x18(%r15)
	movq %r10,0x20(%r15)
	addq $0x30,%r12
	movl $0x0,0x4(%r15)
	movq 0x4D8(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0x550(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x558(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x560(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x568(%rbp)
	addq $0x550,%rbp
	leaq (L_252456+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1992
.p2align 0x4
L_483572:
L_252460:
	movq 0x4F0(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_483599
L_252461:
	movq 0x8(%r14),%r15
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x38(%rbp)
	movq $0x1,0x40(%rbp)
.p2align 0x4,,0x7
L_252462:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_483598
.p2align 0x4,,0x7
L_252463:
	movq 0x38(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_252530
L_252464:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r14,1)
	movq %r13,0x0(%r15)
	movq $0x24E7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_483573
L_252465:
	movq %r15,0x40(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	movq %r15,0x38(%rbp)
	jmp L_252462
.p2align 0x4
L_483573:
L_252466:
	movq %r15,0x30(%rbp)
L_252467:
	movq 0x530(%rbp),%r13
	cmpq $0x1,%r13
	je L_252474
L_252468:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
.p2align 0x4,,0x7
L_252469:
	movq 0x0(%r15),%r13
	cmpq $0x1,%r13
	je L_252530
L_252470:
	movq 0x8(%r13),%r11
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r11,0x0(%r15)
	cmpq $0x1,%r14
	je L_483574
L_252471:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_252469
.p2align 0x4
L_483574:
L_252472:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_252474
L_252550:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x550,%rbp
	leaq (L_252551+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252551
.p2align 0x4
.long 0x3F1E
L_252551:
	addq $0xFFFFFFFFFFFFFAB0,%rbp
L_252474:
	movq 0x4F0(%rbp),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq 0x4F8(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_483575
L_252475:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
L_252476:
	movq 0x8(%r15),%r14
	movl 0x0(%r15),%r13d
	movq 0x18(%r15),%r11
	movq 0x20(%r15),%r10
	movq $0x170D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r13d,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r11,0x18(%r15)
	movq %r10,0x20(%r15)
	addq $0x30,%r12
	movl $0x0,0x4(%r15)
	movq 0x4D8(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0x550(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0x558(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x560(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0x568(%rbp)
	addq $0x550,%rbp
	leaq (L_252477+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1238
.p2align 0x4
L_483575:
L_252481:
	movq 0x500(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_483593
L_252482:
	movq 0x8(%r14),%r15
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x38(%rbp)
	movq $0x1,0x40(%rbp)
.p2align 0x4,,0x7
L_252483:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_483592
.p2align 0x4,,0x7
L_252484:
	movq 0x38(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_252530
L_252485:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r14,1)
	movq %r13,0x0(%r15)
	movq $0x24ED,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_483576
L_252486:
	movq %r15,0x40(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	movq %r15,0x38(%rbp)
	jmp L_252483
.p2align 0x4
L_483576:
L_252487:
	movq %r15,0x30(%rbp)
L_252488:
	movq 0x538(%rbp),%r13
	cmpq $0x1,%r13
	je L_252495
L_252489:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
.p2align 0x4,,0x7
L_252490:
	movq 0x0(%r15),%r13
	cmpq $0x1,%r13
	je L_252530
L_252491:
	movq 0x8(%r13),%r11
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r11,0x0(%r15)
	cmpq $0x1,%r14
	je L_483577
L_252492:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_252490
.p2align 0x4
L_483577:
L_252493:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_252495
L_252539:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x550,%rbp
	leaq (L_252540+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252540
.p2align 0x4
.long 0x3F1B
L_252540:
	addq $0xFFFFFFFFFFFFFAB0,%rbp
L_252495:
	movq 0x500(%rbp),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq 0x508(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_483578
L_252496:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
L_252497:
	movq 0x8(%r15),%r14
	movl 0x0(%r15),%r13d
	movq 0x18(%r15),%r11
	movq 0x20(%r15),%r10
	movq $0x1711,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r13d,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r11,0x18(%r15)
	movq %r10,0x20(%r15)
	addq $0x30,%r12
	movl $0x0,0x4(%r15)
	movq 0x4D8(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0x550(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0x558(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x560(%rbp)
	movq 0xA8(%rbp),%r15
	movq %r15,0x568(%rbp)
	addq $0x550,%rbp
	leaq (L_252498+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1236
.p2align 0x4
L_483578:
L_252502:
	movq 0x510(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_483587
L_252503:
	movq 0x8(%r14),%r15
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x38(%rbp)
	movq $0x1,0x40(%rbp)
.p2align 0x4,,0x7
L_252504:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_483586
.p2align 0x4,,0x7
L_252505:
	movq 0x38(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_252530
L_252506:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r14,1)
	movq %r13,0x0(%r15)
	movq $0x24F3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_483579
L_252507:
	movq %r15,0x40(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	movq %r15,0x38(%rbp)
	jmp L_252504
.p2align 0x4
L_483579:
L_252508:
	movq %r15,0x30(%rbp)
L_252509:
	movq 0x540(%rbp),%r13
	cmpq $0x1,%r13
	je L_252516
L_252510:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
.p2align 0x4,,0x7
L_252511:
	movq 0x0(%r15),%r13
	cmpq $0x1,%r13
	je L_252530
L_252512:
	movq 0x8(%r13),%r11
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r11,0x0(%r15)
	cmpq $0x1,%r14
	je L_483580
L_252513:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_252511
.p2align 0x4
L_483580:
L_252514:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_252516
L_252527:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x528,%rbp
	leaq (L_252528+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252528
.p2align 0x4
.long 0x3F18
L_252528:
	addq $0xFFFFFFFFFFFFFAD8,%rbp
L_252516:
	movq 0x510(%rbp),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq 0x518(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_483581
L_252517:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
L_252518:
	movq 0x8(%r15),%r14
	movl 0x0(%r15),%r13d
	movq 0x18(%r15),%r11
	movq 0x20(%r15),%r10
	movq $0x170F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r13d,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r11,0x18(%r15)
	movq %r10,0x20(%r15)
	addq $0x30,%r12
	movl $0x0,0x4(%r15)
	movq 0x4D8(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0x4E8(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0x4F0(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x4F8(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0x500(%rbp)
	addq $0x4E8,%rbp
	leaq (L_252519+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1237
.p2align 0x4
L_483581:
L_252523:
	movq 0x78(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x4D8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r15
	movq %r15,0x268(%rbp)
	jmp L_251540
.p2align 0x4
L_483586:
L_252533:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x550,%rbp
	leaq (L_252534+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252534
.p2align 0x4
.long 0x3F19
L_252534:
	addq $0xFFFFFFFFFFFFFAB0,%rbp
	jmp L_252505
.p2align 0x4
L_483587:
L_252535:
	movq $0x1,0x30(%rbp)
	jmp L_252509
.p2align 0x4
L_483592:
L_252544:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x550,%rbp
	leaq (L_252545+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252545
.p2align 0x4
.long 0x3F1C
L_252545:
	addq $0xFFFFFFFFFFFFFAB0,%rbp
	jmp L_252484
.p2align 0x4
L_483593:
L_252546:
	movq $0x1,0x30(%rbp)
	jmp L_252488
.p2align 0x4
L_483598:
L_252555:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x550,%rbp
	leaq (L_252556+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252556
.p2align 0x4
.long 0x3F1F
L_252556:
	addq $0xFFFFFFFFFFFFFAB0,%rbp
	jmp L_252463
.p2align 0x4
L_483599:
L_252557:
	movq $0x1,0x30(%rbp)
	jmp L_252467
.p2align 0x4
L_483604:
L_252566:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x550,%rbp
	leaq (L_252567+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252567
.p2align 0x4
.long 0x3F22
L_252567:
	addq $0xFFFFFFFFFFFFFAB0,%rbp
	jmp L_252442
.p2align 0x4
L_483605:
L_252568:
	movq $0x1,0x30(%rbp)
	jmp L_252446
.p2align 0x4
L_483606:
L_252569:
	movq %r15,0x28(%rbp)
	jmp L_252439
.p2align 0x4
.long 0x3EDE
L_252163:
	addq $0xFFFFFFFFFFFFFB08,%rbp
	movq 0x4F8(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	incl %r13d
	jo L_251342
L_252164:
	movl %r13d,0x0(%r14)
	movq (globalObjptr+0x9D0)(%rip),%r14
	movq %r14,0x4F8(%rbp)
	movq %r15,0x500(%rbp)
	movq 0x4D8(%rbp),%r15
	movq %r15,0x508(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x510(%rbp)
	movq 0x218(%rbp),%r15
	movq %r15,0x518(%rbp)
	addq $0x4F8,%rbp
	leaq (L_252165+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
.long 0x3EE8
L_252220:
	addq $0xFFFFFFFFFFFFFB08,%rbp
	movq 0x4F8(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0x500(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x4F8(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x500(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x508(%rbp)
	addq $0x4F8,%rbp
	leaq (L_252221+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp instantiateP_0
.p2align 0x4
.long 0x3EE4
L_252207:
	addq $0xFFFFFFFFFFFFFD90,%rbp
	movl 0x270(%rbp),%r15d
	movl %r15d,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_252208
L_252210:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x270,%rbp
	leaq (L_252211+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252211
.p2align 0x4
.long 0x3EE6
L_252211:
	addq $0xFFFFFFFFFFFFFD90,%rbp
L_252208:
	movq $0x170F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x30,%r12
	movl 0x30(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x2,0x8(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x20(%r15)
	movq %r15,0x270(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x278(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x280(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x288(%rbp)
	addq $0x270,%rbp
	leaq (L_252209+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1237
.p2align 0x4
.long 0x3EFD
L_252322:
	addq $0xFFFFFFFFFFFFFB08,%rbp
	movq 0x4F8(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq (globalObjptr+0x106D0)(%rip),%r15
	movq %r15,0x4F8(%rbp)
	addq $0x4F8,%rbp
	leaq (L_252323+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3ED9
L_252129:
	addq $0xFFFFFFFFFFFFFD90,%rbp
	movq 0x270(%rbp),%r15
	movq %r15,0x268(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_252130
L_252131:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x278,%rbp
	leaq (L_252132+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252132
.p2align 0x4
.long 0x3EDA
L_252132:
	addq $0xFFFFFFFFFFFFFD88,%rbp
L_252130:
	movq 0x240(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x248(%rbp),%r14
	movq 0x268(%rbp),%r13
	movq %r13,0x0(%r15,%r14,8)
	incq %r14
	movq %r14,0x248(%rbp)
	jmp loop_2959
.p2align 0x4
.long 0x3E78
L_251473:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq 0x508(%rbp),%r15
	movq %r15,0x90(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_251474
L_251592:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x508,%rbp
	leaq (L_251593+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251593
.p2align 0x4
.long 0x3E8F
L_251593:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
L_251474:
	movq $0x3CB5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x508(%rbp)
	movl 0x54(%rbp),%r15d
	movl %r15d,0x510(%rbp)
	addq $0x508,%rbp
	leaq (L_251475+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
.long 0x3E83
L_251554:
	addq $0xFFFFFFFFFFFFFD90,%rbp
	movl 0x270(%rbp),%r15d
	movl %r15d,0x14(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_251555
L_251560:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x270,%rbp
	leaq (L_251561+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251561
.p2align 0x4
.long 0x3E86
L_251561:
	addq $0xFFFFFFFFFFFFFD90,%rbp
L_251555:
	movq $0x170F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x30,%r12
	movl 0x14(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x20(%r15)
	movq %r15,0x270(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x278(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x280(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x288(%rbp)
	addq $0x270,%rbp
	leaq (L_251556+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1237
.p2align 0x4
.long 0x3E98
L_251669:
	addq $0xFFFFFFFFFFFFF920,%rbp
	movq 0x6E0(%rbp),%r15
	movq %r15,0xA0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_251670
L_251746:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x6E0,%rbp
	leaq (L_251747+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251747
.p2align 0x4
.long 0x3EAA
L_251747:
	addq $0xFFFFFFFFFFFFF920,%rbp
L_251670:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xB8(%rbp)
	addq $0x18,%r12
	movq 0xB0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq (globalObjptr+0x10670)(%rip),%r15
	movq %r15,0x6E0(%rbp)
	addq $0x6E0,%rbp
	leaq (L_251671+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3EB0
L_251824:
	addq $0xFFFFFFFFFFFFF8C8,%rbp
	movq 0x738(%rbp),%r15
	movq %r15,0x6F0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_251825
L_251920:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x738,%rbp
	leaq (L_251921+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251921
.p2align 0x4
.long 0x3EC2
L_251921:
	addq $0xFFFFFFFFFFFFF8C8,%rbp
L_251825:
	movq $0x304B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x4E8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x730(%rbp)
	movq 0x6F0(%rbp),%r15
	movq %r15,0x738(%rbp)
	movq 0x728(%rbp),%r15
	movq %r15,0x740(%rbp)
	movq 0x1A8(%rbp),%r15
	movq %r15,0x748(%rbp)
	addq $0x730,%rbp
	leaq (L_251826+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unify_1
.p2align 0x4
.long 0x3EC6
L_251960:
	addq $0xFFFFFFFFFFFFF890,%rbp
	movl 0x770(%rbp),%r15d
	movl %r15d,0x4(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_251961
L_251966:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x770,%rbp
	leaq (L_251967+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251967
.p2align 0x4
.long 0x3EC8
L_251967:
	addq $0xFFFFFFFFFFFFF890,%rbp
L_251961:
	movq $0x170F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x30,%r12
	movl 0x4(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x2,0x8(%r15)
	movq 0x760(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x748(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x740(%rbp),%r14
	movq %r14,0x20(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x760(%rbp)
	movq 0x750(%rbp),%r14
	movq %r14,0x768(%rbp)
	movq %r15,0x750(%rbp)
	addq $0x750,%rbp
	leaq (L_251962+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1237
.p2align 0x4
.long 0x3ECE
L_252016:
	addq $0xFFFFFFFFFFFFFAB0,%rbp
	movq 0x550(%rbp),%r15
	movq %r15,0x548(%rbp)
	movq %r15,0x550(%rbp)
	addq $0x550,%rbp
	leaq (toString_353+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp approximatePrefix_0
.p2align 0x4
.long 0x3ECE
L_252058:
	addq $0xFFFFFFFFFFFFFAB0,%rbp
	movq 0x550(%rbp),%r15
	movq %r15,0x548(%rbp)
	jmp L_252001
.p2align 0x4
.long 0x3FC9
L_253761:
	addq $0xFFFFFFFFFFFFFAA8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_253762
L_253881:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x558,%rbp
	leaq (L_253882+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253882
.p2align 0x4
.long 0x3FD8
L_253882:
	addq $0xFFFFFFFFFFFFFAA8,%rbp
L_253762:
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_253765
L_253763:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	jmp L_253760
.p2align 0x4
.long 0x3FCA
L_253782:
	addq $0xFFFFFFFFFFFFFAA8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_253783
L_253870:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x558,%rbp
	leaq (L_253871+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253871
.p2align 0x4
.long 0x3FD5
L_253871:
	addq $0xFFFFFFFFFFFFFAA8,%rbp
L_253783:
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_253786
L_253784:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	jmp L_253781
.p2align 0x4
.long 0x3FCB
L_253803:
	addq $0xFFFFFFFFFFFFFAA8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_253804
L_253859:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x558,%rbp
	leaq (L_253860+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253860
.p2align 0x4
.long 0x3FD2
L_253860:
	addq $0xFFFFFFFFFFFFFAA8,%rbp
L_253804:
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_253807
L_253805:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	jmp L_253802
.p2align 0x4
.long 0x3FCC
L_253824:
	addq $0xFFFFFFFFFFFFFAC8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_253825
L_253848:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x538,%rbp
	leaq (L_253849+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253849
.p2align 0x4
.long 0x3FCF
L_253849:
	addq $0xFFFFFFFFFFFFFAC8,%rbp
L_253825:
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_253828
L_253826:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	jmp L_253823
.p2align 0x4
.long 0x3FCD
L_253842:
	addq $0xFFFFFFFFFFFFFAC8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_253843
L_253844:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x538,%rbp
	leaq (L_253845+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253845
.p2align 0x4
.long 0x3FCE
L_253845:
	addq $0xFFFFFFFFFFFFFAC8,%rbp
L_253843:
	incl 0x34(%rbp)
	jmp loop_2994
.p2align 0x4
.long 0x3FB4
L_253606:
	addq $0xFFFFFFFFFFFFFD90,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_253607
L_253608:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x270,%rbp
	leaq (L_253609+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253609
.p2align 0x4
.long 0x3FB5
L_253609:
	addq $0xFFFFFFFFFFFFFD90,%rbp
L_253607:
	incl 0x34(%rbp)
	jmp loop_2993
.p2align 0x4
.long 0x3FBB
L_253635:
	addq $0xFFFFFFFFFFFFFD90,%rbp
	movq 0x270(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x70(%rbp),%r14
	movq %r14,0x270(%rbp)
	movq %r15,0x278(%rbp)
	addq $0x270,%rbp
	leaq (L_253636+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3787
.p2align 0x4
.long 0x3FC3
L_253672:
	addq $0xFFFFFFFFFFFFFD90,%rbp
	movq 0x270(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x78(%rbp),%r14
	movq %r14,0x270(%rbp)
	movq %r15,0x278(%rbp)
	addq $0x270,%rbp
	leaq (L_253673+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3787
.p2align 0x4
.long 0x3FBD
L_253700:
	addq $0xFFFFFFFFFFFFFD90,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_253701
L_253702:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x270,%rbp
	leaq (L_253703+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253703
.p2align 0x4
.long 0x3FBE
L_253703:
	addq $0xFFFFFFFFFFFFFD90,%rbp
L_253701:
	movq $0x1,%r14
	movq 0x58(%rbp),%r15
	jmp L_253603
.p2align 0x4
.long 0x3FB2
L_253596:
	addq $0xFFFFFFFFFFFFFD90,%rbp
	movq 0x270(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq %r15,0x270(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x278(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x280(%rbp)
	addq $0x270,%rbp
	leaq (L_253597+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp con_2
.p2align 0x4
.long 0x3FA2
L_253456:
	addq $0xFFFFFFFFFFFFFA98,%rbp
	movq (globalObjptr+0x1610)(%rip),%r15
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_483628
L_253457:
	movq $0x1,0x568(%rbp)
	movl $0x0,0x570(%rbp)
	addq $0x568,%rbp
	leaq (L_253458+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_9
.p2align 0x4
L_483628:
L_251571:
	movq (globalObjptr+0x1618)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3F81
L_253154:
	addq $0xFFFFFFFFFFFFFAB8,%rbp
	movq 0x548(%rbp),%r15
	movq %r15,0x530(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_253155
L_253189:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x548,%rbp
	leaq (L_253190+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253190
.p2align 0x4
.long 0x3F84
L_253190:
	addq $0xFFFFFFFFFFFFFAB8,%rbp
L_253155:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x530(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x520(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x540(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x518(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_253156:
	addl 0x0(%r15),%ecx
	movl %ecx,0x518(%rbp)
	jo L_251342
L_253157:
	cmpq $0x1,%r14
	je L_483629
L_253158:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_253156
.p2align 0x4
L_483629:
L_253159:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_253160
L_253187:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x550,%rbp
	leaq (L_253188+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253188
.p2align 0x4
.long 0x3F86
L_253188:
	addq $0xFFFFFFFFFFFFFAB0,%rbp
L_253160:
	movl 0x518(%rbp),%ecx
	testl %ecx,%ecx
	jz L_483630
L_253161:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x540(%rbp),%r14
	movq %r14,0x0(%r15)
L_253162:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x518(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0xE040)(%rip),%r15
	movq %r15,0x548(%rbp)
	addq $0x548,%rbp
	leaq (L_253163+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_483630:
L_253186:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_253162
.p2align 0x4
.long 0x3F2A
L_252623:
	addq $0xFFFFFFFFFFFFFAB8,%rbp
	movq 0x548(%rbp),%r15
	movq %r15,0x80(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_252624
L_252764:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x548,%rbp
	leaq (L_252765+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252765
.p2align 0x4
.long 0x3F40
L_252765:
	addq $0xFFFFFFFFFFFFFAB8,%rbp
L_252624:
	movq $0x3CB5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x548(%rbp)
	movl 0x78(%rbp),%r15d
	movl %r15d,0x550(%rbp)
	addq $0x548,%rbp
	leaq (L_252625+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
.long 0x3F31
L_252690:
	addq $0xFFFFFFFFFFFFFAE0,%rbp
	movl 0x520(%rbp),%r15d
	movl %r15d,0x14(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_252691
L_252723:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x520,%rbp
	leaq (L_252724+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252724
.p2align 0x4
.long 0x3F35
L_252724:
	addq $0xFFFFFFFFFFFFFAE0,%rbp
L_252691:
	movq $0x170F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x30,%r12
	movl 0x14(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x1,0x8(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x20(%r15)
	movq %r15,0x520(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x528(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x530(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x538(%rbp)
	addq $0x520,%rbp
	leaq (L_252692+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1237
.p2align 0x4
.long 0x3F44
L_252795:
	addq $0xFFFFFFFFFFFFFAB0,%rbp
	movq 0x550(%rbp),%r15
	movq %r15,0x548(%rbp)
	movq 0x558(%rbp),%r15
	movq %r15,0x550(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_252796
L_252858:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x560,%rbp
	leaq (L_252859+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252859
.p2align 0x4
.long 0x3F53
L_252859:
	addq $0xFFFFFFFFFFFFFAA0,%rbp
L_252796:
	movq $0x304B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x4E8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x560(%rbp)
	movq 0x528(%rbp),%r15
	movq %r15,0x568(%rbp)
	movq 0x548(%rbp),%r15
	movq %r15,0x570(%rbp)
	movq 0x1A8(%rbp),%r15
	movq %r15,0x578(%rbp)
	addq $0x560,%rbp
	leaq (L_252797+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unify_1
.p2align 0x4
.long 0x3F55
L_252864:
	addq $0xFFFFFFFFFFFFFA60,%rbp
	movq 0x5A0(%rbp),%r15
	movq %r15,0x580(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_252865
L_252914:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x5A0,%rbp
	leaq (L_252915+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252915
.p2align 0x4
.long 0x3F60
L_252915:
	addq $0xFFFFFFFFFFFFFA60,%rbp
L_252865:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x598(%rbp)
	addq $0x18,%r12
	movq 0x588(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq (globalObjptr+0x106F0)(%rip),%r15
	movq %r15,0x5A8(%rbp)
	addq $0x5A8,%rbp
	leaq (L_252866+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3F66
L_252947:
	addq $0xFFFFFFFFFFFFF870,%rbp
	movq 0x790(%rbp),%r15
	movq %r15,0x588(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_252948
L_253059:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x790,%rbp
	leaq (L_253060+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253060
.p2align 0x4
.long 0x3F79
L_253060:
	addq $0xFFFFFFFFFFFFF870,%rbp
L_252948:
	movq 0x588(%rbp),%r15
	cmpq $0x1,%r15
	je L_483638
L_252949:
	movq 0x8(%r15),%r14
	movq %r14,0x5C0(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x5C8(%rbp)
	movq 0x570(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x5D0(%rbp)
	movq (globalObjptr+0x106F8)(%rip),%r15
	movq %r15,0x790(%rbp)
	addq $0x790,%rbp
	leaq (L_252950+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_483638:
L_252989:
	movq 0x580(%rbp),%r15
	movq %r15,0x570(%rbp)
	jmp L_252990
.p2align 0x4
.long 0x3F66
seq_1:
	addq $0xFFFFFFFFFFFFF870,%rbp
	movq 0x790(%rbp),%r15
	movq %r15,0x588(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_253073
L_253116:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x790,%rbp
	leaq (L_253117+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253117
.p2align 0x4
.long 0x3F79
L_253117:
	addq $0xFFFFFFFFFFFFF870,%rbp
L_253073:
	movq 0x588(%rbp),%r13
	cmpq $0x1,%r13
	je L_483644
L_253074:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_253075:
	addl 0x0(%r15),%ecx
	movl %ecx,0x184(%rbp)
	jo L_251342
L_253076:
	cmpq $0x1,%r14
	je L_483640
L_253077:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_253075
.p2align 0x4
L_483640:
L_253078:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_253079
L_253113:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x790,%rbp
	leaq (L_253114+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253114
.p2align 0x4
.long 0x3F79
L_253114:
	addq $0xFFFFFFFFFFFFF870,%rbp
L_253079:
	movl 0x184(%rbp),%ecx
L_253080:
	testl %ecx,%ecx
	jz L_483641
L_253081:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x588(%rbp),%r14
	movq %r14,0x0(%r15)
L_253082:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x790(%rbp)
	addq $0x790,%rbp
	leaq (toString_355+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp approximatePrefix_0
.p2align 0x4
L_483641:
L_253112:
	movq $0x1,%r15
	xorl %ecx,%ecx
	jmp L_253082
.p2align 0x4
L_483644:
L_253115:
	xorl %ecx,%ecx
	jmp L_253080
.p2align 0x4
.long 0x3F94
L_253336:
	addq $0xFFFFFFFFFFFFFA98,%rbp
	movq 0x568(%rbp),%r15
	movq %r15,0x560(%rbp)
	movq %r15,0x568(%rbp)
	addq $0x568,%rbp
	leaq (L_253337+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp approximate_0
.p2align 0x4
.long 0x3F88
L_253251:
	addq $0xFFFFFFFFFFFFFAA8,%rbp
	movq 0x558(%rbp),%r15
	movq %r15,0x528(%rbp)
	movl 0x560(%rbp),%r15d
	movl %r15d,0x4(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_253252
L_253295:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x558,%rbp
	leaq (L_253296+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253296
.p2align 0x4
.long 0x3F91
L_253296:
	addq $0xFFFFFFFFFFFFFAA8,%rbp
L_253252:
	movq $0xC3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x4(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x528(%rbp),%r14
	movq %r14,0x8(%r15)
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	incl %r13d
	jo L_251342
L_253253:
	movl %r13d,0x0(%r14)
	movq %r15,0x558(%rbp)
	movq 0x518(%rbp),%r15
	movq %r15,0x560(%rbp)
	movq 0x4D8(%rbp),%r15
	movq %r15,0x568(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x570(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x578(%rbp)
	addq $0x558,%rbp
	leaq (L_253254+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
.long 0x3F89
L_253262:
	addq $0xFFFFFFFFFFFFFAA8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_253263
L_253288:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x558,%rbp
	leaq (L_253289+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253289
.p2align 0x4
.long 0x3F8E
L_253289:
	addq $0xFFFFFFFFFFFFFAA8,%rbp
L_253263:
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_251766
L_253264:
	movq %r15,0x0(%r13)
	movq 0x528(%rbp),%r13
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_483657
L_253265:
	movq 0x0(%r11),%r14
	movq 0x8(%r11),%r11
	xorl %ecx,%ecx
	movq %r11,%r15
.p2align 0x4,,0x7
L_253267:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_253268
L_253282:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xD66,%r13
	je L_483653
L_253268:
	incl %ecx
	movl %ecx,0x4(%rbp)
	jo L_251342
L_253269:
	cmpq $0x1,%r15
	je L_483648
L_253270:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_253267
.p2align 0x4
L_483648:
L_253271:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_253272
L_253280:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x558,%rbp
	leaq (L_253281+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253281
.p2align 0x4
.long 0x3F8E
L_253281:
	addq $0xFFFFFFFFFFFFFAA8,%rbp
L_253272:
	movl 0x4(%rbp),%ecx
L_253273:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_251777
L_253274:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_253276
L_253279:
	movl %ecx,0x0(%r15)
L_253276:
	movq $0x1355,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x1ACD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq 0x528(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r10,0x0(%r13)
L_253277:
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x540(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x520(%rbp),%r15
	movq %r15,0x558(%rbp)
	movq 0x150(%rbp),%r15
	movq %r15,0x560(%rbp)
	addq $0x558,%rbp
	leaq (L_253278+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2020
.p2align 0x4
L_483653:
L_253283:
	movq 0x0(%r14),%r15
	movslq %ecx,%r14
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r14
	jo L_251777
L_253284:
	movq %r14,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_253277
L_253286:
	movl %ecx,0x0(%r14)
	jmp L_253277
.p2align 0x4
L_483657:
L_253287:
	xorl %ecx,%ecx
	jmp L_253273
.p2align 0x4
.long 0x3F13
L_252456:
	addq $0xFFFFFFFFFFFFFAB0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_252457
L_252558:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x550,%rbp
	leaq (L_252559+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252559
.p2align 0x4
.long 0x3F20
L_252559:
	addq $0xFFFFFFFFFFFFFAB0,%rbp
L_252457:
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_252460
L_252458:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	jmp L_252455
.p2align 0x4
.long 0x3F14
L_252477:
	addq $0xFFFFFFFFFFFFFAB0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_252478
L_252547:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x550,%rbp
	leaq (L_252548+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252548
.p2align 0x4
.long 0x3F1D
L_252548:
	addq $0xFFFFFFFFFFFFFAB0,%rbp
L_252478:
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_252481
L_252479:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	jmp L_252476
.p2align 0x4
.long 0x3F15
L_252498:
	addq $0xFFFFFFFFFFFFFAB0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_252499
L_252536:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x550,%rbp
	leaq (L_252537+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252537
.p2align 0x4
.long 0x3F1A
L_252537:
	addq $0xFFFFFFFFFFFFFAB0,%rbp
L_252499:
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_252502
L_252500:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	jmp L_252497
.p2align 0x4
.long 0x3F16
L_252519:
	addq $0xFFFFFFFFFFFFFB18,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_252520
L_252524:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x4E8,%rbp
	leaq (L_252525+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252525
.p2align 0x4
.long 0x3F17
L_252525:
	addq $0xFFFFFFFFFFFFFB18,%rbp
L_252520:
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_252523
L_252521:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	jmp L_252518
.p2align 0x4
.long 0x3EDF
L_252165:
	addq $0xFFFFFFFFFFFFFB08,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_252166
L_252375:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x4F8,%rbp
	leaq (L_252376+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252376
.p2align 0x4
.long 0x3EE0
L_252376:
	addq $0xFFFFFFFFFFFFFB08,%rbp
L_252166:
	movq (globalObjptr+0x1610)(%rip),%r15
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_251571
	jmp L_252168
.p2align 0x4
.long 0x3EE9
L_252221:
	addq $0xFFFFFFFFFFFFFB08,%rbp
	movq 0x4F8(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x500(%rbp),%r15
	movq %r15,0x70(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_252222
L_252290:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x4F8,%rbp
	leaq (L_252291+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252291
.p2align 0x4
.long 0x3EF8
L_252291:
	addq $0xFFFFFFFFFFFFFB08,%rbp
L_252222:
	movq $0x304B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x4E8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x4F8(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x500(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x508(%rbp)
	movq 0x1A8(%rbp),%r15
	movq %r15,0x510(%rbp)
	addq $0x4F8,%rbp
	leaq (L_252223+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unify_1
.p2align 0x4
.long 0x3EFE
L_252323:
	addq $0xFFFFFFFFFFFFFB08,%rbp
	movq 0x4F8(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x4F8(%rbp)
	addq $0x4F8,%rbp
	leaq (L_252324+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_31
.p2align 0x4
.long 0x3E79
L_251475:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq 0x508(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq (globalObjptr+0xE1E8)(%rip),%r15
	movq %r15,0x508(%rbp)
	addq $0x508,%rbp
	leaq (L_251476+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3E84
L_251556:
	addq $0xFFFFFFFFFFFFFD90,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_251557
L_251558:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x270,%rbp
	leaq (L_251559+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251559
.p2align 0x4
.long 0x3E85
L_251559:
	addq $0xFFFFFFFFFFFFFD90,%rbp
L_251557:
	movl 0x10(%rbp),%ecx
	jmp loop_2949
.p2align 0x4
.long 0x3E99
L_251671:
	addq $0xFFFFFFFFFFFFF920,%rbp
	movq 0x6E0(%rbp),%r15
	movq %r15,0xB0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_251672
L_251744:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x6E0,%rbp
	leaq (L_251745+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251745
.p2align 0x4
.long 0x3EA8
L_251745:
	addq $0xFFFFFFFFFFFFF920,%rbp
L_251672:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0xC0(%rbp)
	addq $0x18,%r12
	movq 0xB0(%rbp),%r15
	movq %r15,0x0(%r13)
	movq 0xB8(%rbp),%r14
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_251673:
	addl 0x0(%r15),%ecx
	movl %ecx,0x4(%rbp)
	jo L_251342
L_251674:
	cmpq $0x1,%r14
	je L_483672
L_251675:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_251673
.p2align 0x4
L_483672:
L_251676:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_251677
L_251742:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x6E0,%rbp
	leaq (L_251743+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251743
.p2align 0x4
.long 0x3EA9
L_251743:
	addq $0xFFFFFFFFFFFFF920,%rbp
L_251677:
	movl 0x4(%rbp),%ecx
	testl %ecx,%ecx
	jz L_483673
L_251678:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xC0(%rbp),%r14
	movq %r14,0x0(%r15)
L_251679:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0xB0(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xB8(%rbp)
	addq $0x18,%r12
	movq 0xA8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq (globalObjptr+0xF460)(%rip),%r15
	movq %r15,0x6E0(%rbp)
	addq $0x6E0,%rbp
	leaq (L_251680+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_483673:
L_251741:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_251679
.p2align 0x4
.long 0x3EB1
L_251826:
	addq $0xFFFFFFFFFFFFF8D0,%rbp
	movq 0x730(%rbp),%r15
	movq %r15,0x6F0(%rbp)
	cmpq $0x1,%r15
	je L_483677
L_251827:
	movq 0x8(%r15),%r14
	movq %r14,0x710(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x728(%rbp)
	movq (globalObjptr+0x10678)(%rip),%r15
	movq %r15,0x738(%rbp)
	addq $0x738,%rbp
	leaq (L_251828+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_483677:
L_251868:
	movq 0x1B0(%rbp),%r15
	movq %r15,0x730(%rbp)
	addq $0x730,%rbp
	leaq (L_251869+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x3EC5
L_251962:
	addq $0xFFFFFFFFFFFFF8B0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_251963
L_251964:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x750,%rbp
	leaq (L_251965+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251965
.p2align 0x4
.long 0x3EC7
L_251965:
	addq $0xFFFFFFFFFFFFF8B0,%rbp
L_251963:
	movq $0x1137,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x710(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x718(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x740(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x730(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x738(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x738(%rbp)
	jmp loop_2957
.p2align 0x4
.long 0x3ECE
toString_353:
	addq $0xFFFFFFFFFFFFFAB0,%rbp
	movq 0x550(%rbp),%r15
	movq %r15,0x548(%rbp)
	movq $0x1,0x550(%rbp)
	movq %r15,0x558(%rbp)
	addq $0x550,%rbp
	leaq (rev_351+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x3FBC
L_253636:
	addq $0xFFFFFFFFFFFFFD90,%rbp
	movq 0x270(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_253637
L_253653:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x270,%rbp
	leaq (L_253654+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253654
.p2align 0x4
.long 0x3FC0
L_253654:
	addq $0xFFFFFFFFFFFFFD90,%rbp
L_253637:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x70(%rbp)
	addq $0x18,%r12
	movq 0x68(%rbp),%r15
	movq %r15,0x0(%r13)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_253638:
	addl 0x0(%r15),%ecx
	movl %ecx,0x50(%rbp)
	jo L_251342
L_253639:
	cmpq $0x1,%r14
	je L_483679
L_253640:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_253638
.p2align 0x4
L_483679:
L_253641:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_253642
L_253651:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x270,%rbp
	leaq (L_253652+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253652
.p2align 0x4
.long 0x3FBF
L_253652:
	addq $0xFFFFFFFFFFFFFD90,%rbp
L_253642:
	movq 0x70(%rbp),%r15
	movl 0x50(%rbp),%ecx
	jmp L_253643
.p2align 0x4
.long 0x3FBB
L_253673:
	addq $0xFFFFFFFFFFFFFD90,%rbp
	movq 0x270(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_253674
L_253717:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x270,%rbp
	leaq (L_253718+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253718
.p2align 0x4
.long 0x3FC1
L_253718:
	addq $0xFFFFFFFFFFFFFD90,%rbp
L_253674:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x78(%rbp)
	addq $0x18,%r12
	movq 0x70(%rbp),%r15
	movq %r15,0x0(%r13)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_253675:
	addl 0x0(%r15),%ecx
	movl %ecx,0x50(%rbp)
	jo L_251342
L_253676:
	cmpq $0x1,%r14
	je L_483683
L_253677:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_253675
.p2align 0x4
L_483683:
L_253678:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_253679
L_253715:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x270,%rbp
	leaq (L_253716+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253716
.p2align 0x4
.long 0x3FC4
L_253716:
	addq $0xFFFFFFFFFFFFFD90,%rbp
L_253679:
	movl 0x50(%rbp),%ecx
	testl %ecx,%ecx
	jz L_483684
L_253680:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r15)
L_253681:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x50(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0xA050)(%rip),%r15
	movq %r15,0x270(%rbp)
	addq $0x270,%rbp
	leaq (L_253682+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_483684:
L_253714:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_253681
.p2align 0x4
.long 0x3FB3
L_253597:
	addq $0xFFFFFFFFFFFFFD90,%rbp
	movq 0x270(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_253598
L_253613:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x270,%rbp
	leaq (L_253614+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253614
.p2align 0x4
.long 0x3FB7
L_253614:
	addq $0xFFFFFFFFFFFFFD90,%rbp
L_253598:
	movq 0x50(%rbp),%r15
	movq 0x48(%rbp),%r14
	jmp L_253599
.p2align 0x4
.long 0x3FA2
L_253458:
	addq $0xFFFFFFFFFFFFFA98,%rbp
	movq 0x568(%rbp),%r14
	movq %r14,0x548(%rbp)
	movq 0x118(%rbp),%r15
	jmp L_253459
.p2align 0x4
.long 0x3F80
L_253163:
	addq $0xFFFFFFFFFFFFFAB8,%rbp
	movq 0x548(%rbp),%r15
	movq %r15,0x520(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x548(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x550(%rbp)
	addq $0x548,%rbp
	leaq (L_253164+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutDec_1
.p2align 0x4
.long 0x3F2B
L_252625:
	addq $0xFFFFFFFFFFFFFAB8,%rbp
	movq 0x548(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq (globalObjptr+0xE1E8)(%rip),%r15
	movq %r15,0x548(%rbp)
	addq $0x548,%rbp
	leaq (L_252626+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3F32
L_252692:
	addq $0xFFFFFFFFFFFFFAE0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_252693
L_252721:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x520,%rbp
	leaq (L_252722+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252722
.p2align 0x4
.long 0x3F34
L_252722:
	addq $0xFFFFFFFFFFFFFAE0,%rbp
L_252693:
	movq 0x40(%rbp),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x18(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r14
	movq 0x0(%r14),%r15
	incq %r15
	jo L_251766
L_252694:
	movq %r15,0x0(%r14)
	movq 0x0(%r13),%r14
	cmpq $0x1,%r14
	je L_483700
L_252695:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r15,0x40(%rbp)
	movl $0x0,0x14(%rbp)
	movq %r14,%r15
.p2align 0x4,,0x7
L_252697:
	movq 0x40(%rbp),%r14
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_252698
L_252712:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xD66,%r13
	je L_483695
L_252698:
	movl 0x14(%rbp),%r14d
	incl %r14d
	movl %r14d,0x28(%rbp)
	jo L_251342
L_252699:
	cmpq $0x1,%r15
	je L_483689
L_252700:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq %r13,0x40(%rbp)
	movl %r14d,0x14(%rbp)
	jmp L_252697
.p2align 0x4
L_483689:
L_252701:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_252702
L_252710:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x520,%rbp
	leaq (L_252711+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252711
.p2align 0x4
.long 0x3F33
L_252711:
	addq $0xFFFFFFFFFFFFFAE0,%rbp
L_252702:
	movl 0x28(%rbp),%ecx
L_252703:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_251777
L_252704:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_252706
L_252709:
	movl %ecx,0x0(%r15)
L_252706:
	movq $0x1355,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x1ACD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq 0x18(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r10,0x0(%r13)
L_252707:
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq $0x1,0x0(%r15)
	movl 0x10(%rbp),%r15d
	incl %r15d
	jo L_251342
L_252708:
	movl %r15d,0x10(%rbp)
	jmp loop_2982
.p2align 0x4
L_483695:
L_252713:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_252714
L_252718:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x520,%rbp
	leaq (L_252719+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252719
.p2align 0x4
.long 0x3F34
L_252719:
	addq $0xFFFFFFFFFFFFFAE0,%rbp
L_252714:
	movq 0x40(%rbp),%r14
	movq 0x0(%r14),%r15
	movl 0x14(%rbp),%r14d
	movslq %r14d,%r13
	movq (globalObjptr+0x1070)(%rip),%r11
	addq 0x0(%r11),%r13
	jo L_251777
L_252715:
	movq %r13,0x0(%r11)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %r14d,0x0(%r13)
	jnl L_252707
L_252717:
	movl %r14d,0x0(%r13)
	jmp L_252707
.p2align 0x4
L_483700:
L_252720:
	xorl %ecx,%ecx
	jmp L_252703
.p2align 0x4
.long 0x3F45
L_252797:
	addq $0xFFFFFFFFFFFFFAA0,%rbp
	movq 0x560(%rbp),%r15
	movq %r15,0x548(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_252798
L_252856:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x560,%rbp
	leaq (L_252857+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252857
.p2align 0x4
.long 0x3F53
L_252857:
	addq $0xFFFFFFFFFFFFFAA0,%rbp
L_252798:
	movq 0x548(%rbp),%r15
	cmpq $0x1,%r15
	je L_483703
L_252799:
	movq 0x8(%r15),%r14
	movq %r14,0x558(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x560(%rbp)
	movq 0x540(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x568(%rbp)
	movq (globalObjptr+0x106D8)(%rip),%r15
	movq %r15,0x578(%rbp)
	addq $0x578,%rbp
	leaq (L_252800+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_483703:
L_252831:
	movq 0x550(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xE8F,%r15
	je L_483704
L_252832:
	movq 0x1E0(%rbp),%r15
L_252833:
	movq 0x510(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x518(%rbp),%r13
	movq %r13,%r10
	imulq $0x18,%r10
	movq 0x520(%rbp),%r9
	movq %r9,0x0(%r14,%r10,1)
	movq %r14,%r10
	shrq $0x8,%r10
	movb $0x1,0x0(%r11,%r10,1)
	movq %r13,%r10
	imulq $0x18,%r10
	movq 0x528(%rbp),%r9
	movq %r9,0x8(%r14,%r10,1)
	movq %r14,%r10
	shrq $0x8,%r10
	movb $0x1,0x0(%r11,%r10,1)
	movq %r13,%r11
	imulq $0x18,%r11
	movq %r15,0x10(%r14,%r11,1)
	incq %r13
	movq %r13,0x518(%rbp)
	jmp loop_2979
.p2align 0x4
L_483704:
L_252834:
	movq 0x550(%rbp),%r14
	movl 0x0(%r14),%r13d
	movq 0x18(%r14),%r15
	movq 0x10(%r14),%r11
	movq 0x8(%r14),%r10
	movq $0x63B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %r13d,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r11,0x10(%r14)
	movq %r10,0x18(%r14)
	addq $0x28,%r12
	movl $0x0,0x4(%r14)
	movq %r14,%r15
	jmp L_252833
.p2align 0x4
.long 0x3F56
L_252866:
	addq $0xFFFFFFFFFFFFFA58,%rbp
	movq 0x5A8(%rbp),%r15
	movq %r15,0x588(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_252867
L_252912:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x5A8,%rbp
	leaq (L_252913+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252913
.p2align 0x4
.long 0x3F5D
L_252913:
	addq $0xFFFFFFFFFFFFFA58,%rbp
L_252867:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x5A0(%rbp)
	addq $0x18,%r12
	movq 0x588(%rbp),%r15
	movq %r15,0x0(%r13)
	movq 0x598(%rbp),%r14
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_252868:
	addl 0x0(%r15),%ecx
	movl %ecx,0x54C(%rbp)
	jo L_251342
L_252869:
	cmpq $0x1,%r14
	je L_483706
L_252870:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_252868
.p2align 0x4
L_483706:
L_252871:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_252872
L_252910:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x5B0,%rbp
	leaq (L_252911+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252911
.p2align 0x4
.long 0x3F5F
L_252911:
	addq $0xFFFFFFFFFFFFFA50,%rbp
L_252872:
	movl 0x54C(%rbp),%ecx
	testl %ecx,%ecx
	jz L_483707
L_252873:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x5A0(%rbp),%r14
	movq %r14,0x0(%r15)
L_252874:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x588(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x598(%rbp)
	addq $0x18,%r12
	movq 0x590(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq (globalObjptr+0xE288)(%rip),%r15
	movq %r15,0x5A8(%rbp)
	addq $0x5A8,%rbp
	leaq (L_252875+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_483707:
L_252909:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_252874
.p2align 0x4
.long 0x3F67
L_252950:
	addq $0xFFFFFFFFFFFFF870,%rbp
	movq 0x790(%rbp),%r15
	movq %r15,0x570(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_252951
L_253056:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x790,%rbp
	leaq (L_253057+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253057
.p2align 0x4
.long 0x3F78
L_253057:
	addq $0xFFFFFFFFFFFFF870,%rbp
L_252951:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x588(%rbp)
	addq $0x18,%r12
	movq 0x5C8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq (globalObjptr+0x10700)(%rip),%r15
	movq %r15,0x790(%rbp)
	addq $0x790,%rbp
	leaq (L_252952+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3F66
toString_355:
	addq $0xFFFFFFFFFFFFF870,%rbp
	movq 0x790(%rbp),%r15
	movq %r15,0x588(%rbp)
	movq $0x1,0x790(%rbp)
	movq %r15,0x798(%rbp)
	addq $0x790,%rbp
	leaq (rev_353+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x3F94
L_253337:
	addq $0xFFFFFFFFFFFFFA98,%rbp
	movq 0x568(%rbp),%r15
	movq %r15,0x560(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_253338
L_253382:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x570,%rbp
	leaq (L_253383+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253383
.p2align 0x4
.long 0x3F98
L_253383:
	addq $0xFFFFFFFFFFFFFA90,%rbp
L_253338:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x560(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x568(%rbp)
	addq $0x18,%r12
	movq 0x558(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_253339:
	addl 0x0(%r15),%ecx
	movl %ecx,0x52C(%rbp)
	jo L_251342
L_253340:
	cmpq $0x1,%r14
	je L_483712
L_253341:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_253339
.p2align 0x4
L_483712:
L_253342:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_253343
L_253380:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x578,%rbp
	leaq (L_253381+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253381
.p2align 0x4
.long 0x3F9A
L_253381:
	addq $0xFFFFFFFFFFFFFA88,%rbp
L_253343:
	movl 0x52C(%rbp),%ecx
	testl %ecx,%ecx
	jz L_483713
L_253344:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x568(%rbp),%r14
	movq %r14,0x0(%r15)
L_253345:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x558(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x10730)(%rip),%r15
	movq %r15,0x568(%rbp)
	addq $0x568,%rbp
	leaq (L_253346+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_483713:
L_253379:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_253345
.p2align 0x4
.long 0x3F8B
L_253254:
	addq $0xFFFFFFFFFFFFFAA8,%rbp
	movq (globalObjptr+0x1608)(%rip),%r15
	movq (globalObjptr+0x1610)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_251571
	jmp L_253256
.p2align 0x4
.long 0x3F8D
L_253278:
	addq $0xFFFFFFFFFFFFFAA8,%rbp
	movq 0x4F8(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x500(%rbp),%r14
	movq %r14,%r11
	imulq $0x28,%r11
	movq 0x530(%rbp),%r10
	movq %r10,0x0(%r15,%r11,1)
	movq %r15,%r11
	shrq $0x8,%r11
	movb $0x1,0x0(%r13,%r11,1)
	movq %r14,%r11
	imulq $0x28,%r11
	movq 0x518(%rbp),%r10
	movq %r10,0x8(%r15,%r11,1)
	movq %r15,%r11
	shrq $0x8,%r11
	movb $0x1,0x0(%r13,%r11,1)
	movq %r14,%r11
	imulq $0x28,%r11
	movq 0x508(%rbp),%r10
	movq %r10,0x10(%r15,%r11,1)
	movq %r15,%r11
	shrq $0x8,%r11
	movb $0x1,0x0(%r13,%r11,1)
	movq %r14,%r11
	imulq $0x28,%r11
	movq 0x520(%rbp),%r9
	movq %r9,0x18(%r15,%r11,1)
	movq %r15,%r11
	shrq $0x8,%r11
	movb $0x1,0x0(%r13,%r11,1)
	movq %r14,%r13
	imulq $0x28,%r13
	movq %r10,0x20(%r15,%r13,1)
	incq %r14
	movq %r14,0x500(%rbp)
	jmp loop_2977
.p2align 0x4
.long 0x3EEA
L_252223:
	addq $0xFFFFFFFFFFFFFB08,%rbp
	movq 0x4F8(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq $0x1,%r15
	je L_252265
L_252224:
	movq 0x8(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x78(%rbp)
	movq (globalObjptr+0x106B0)(%rip),%r15
	movq %r15,0x4F8(%rbp)
	addq $0x4F8,%rbp
	leaq (L_252225+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3EFF
L_252324:
	addq $0xFFFFFFFFFFFFFB08,%rbp
	movq 0x4F8(%rbp),%r15
	movq %r15,0x70(%rbp)
	movl 0x500(%rbp),%r15d
	movl %r15d,0x90(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_252325
L_252344:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x4F8,%rbp
	leaq (L_252345+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252345
.p2align 0x4
.long 0x3F03
L_252345:
	addq $0xFFFFFFFFFFFFFB08,%rbp
L_252325:
	movq $0xC3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x90(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x98(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x88(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_252326:
	addl 0x0(%r15),%ecx
	movl %ecx,0x70(%rbp)
	jo L_251342
L_252327:
	cmpq $0x1,%r14
	je L_483719
L_252328:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_252326
.p2align 0x4
L_483719:
L_252329:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_252330
L_252342:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x4F8,%rbp
	leaq (L_252343+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252343
.p2align 0x4
.long 0x3F02
L_252343:
	addq $0xFFFFFFFFFFFFFB08,%rbp
L_252330:
	movl 0x70(%rbp),%ecx
	testl %ecx,%ecx
	jz L_483721
L_252331:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x98(%rbp),%r14
	movq %r14,0x0(%r15)
L_252332:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_251342
L_252333:
	movl %r13d,0x0(%r15)
	movq %r14,0x4F8(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x500(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x508(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x510(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x518(%rbp)
	addq $0x4F8,%rbp
	leaq (L_252334+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_483721:
L_252341:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_252332
.p2align 0x4
.long 0x3E7A
L_251476:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq 0x508(%rbp),%r15
	movq %r15,0x98(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_251477
L_251590:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x508,%rbp
	leaq (L_251591+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251591
.p2align 0x4
.long 0x3E8E
L_251591:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
L_251477:
	movq 0x78(%rbp),%r15
	cmpq $0x1,%r15
	je L_483725
L_251478:
	movq 0x8(%r15),%r14
	movq %r14,0x508(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0x510(%rbp)
	addq $0x508,%rbp
	leaq (L_251479+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3948
.p2align 0x4
L_483725:
L_251589:
	movq $0x1,%r14
	xorl %ecx,%ecx
	xchgq %r14,%r15
L_251486:
	testl %ecx,%ecx
	jz L_483730
L_251487:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
L_251488:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x78(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x90(%rbp),%r14
	movq %r14,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_251489:
	addl 0x0(%r14),%ecx
	movl %ecx,0x54(%rbp)
	jo L_251342
L_251490:
	cmpq $0x1,%r15
	je L_483726
L_251491:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_251489
.p2align 0x4
L_483726:
L_251492:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_251493
L_251582:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x508,%rbp
	leaq (L_251583+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251583
.p2align 0x4
.long 0x3E8B
L_251583:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
L_251493:
	movl 0x54(%rbp),%ecx
	testl %ecx,%ecx
	jz L_483727
L_251494:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r15)
L_251495:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x78(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0xE040)(%rip),%r15
	movq %r15,0x508(%rbp)
	addq $0x508,%rbp
	leaq (L_251496+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_483727:
L_251581:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_251495
.p2align 0x4
L_483730:
L_251584:
	movq $0x1,%r15
	xorl %ecx,%ecx
	jmp L_251488
.p2align 0x4
.long 0x3E9A
L_251680:
	addq $0xFFFFFFFFFFFFF920,%rbp
	movq 0x6E0(%rbp),%r15
	movq %r15,0xA8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_251681
L_251739:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x6E0,%rbp
	leaq (L_251740+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251740
.p2align 0x4
.long 0x3EA8
L_251740:
	addq $0xFFFFFFFFFFFFF920,%rbp
L_251681:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0xC0(%rbp)
	addq $0x18,%r12
	movq 0xA8(%rbp),%r15
	movq %r15,0x0(%r13)
	movq 0xB8(%rbp),%r14
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_251682:
	addl 0x0(%r15),%ecx
	movl %ecx,0x4(%rbp)
	jo L_251342
L_251683:
	cmpq $0x1,%r14
	je L_483732
L_251684:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_251682
.p2align 0x4
L_483732:
L_251685:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_251686
L_251737:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x6E0,%rbp
	leaq (L_251738+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251738
.p2align 0x4
.long 0x3EA7
L_251738:
	addq $0xFFFFFFFFFFFFF920,%rbp
L_251686:
	movl 0x4(%rbp),%ecx
	testl %ecx,%ecx
	jz L_483733
L_251687:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xC0(%rbp),%r14
	movq %r14,0x0(%r15)
L_251688:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0xA8(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq 0x80(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0xB8(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0xC0(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0xC8(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xD0(%rbp)
	movq (globalObjptr+0xE040)(%rip),%r15
	movq %r15,0x6E0(%rbp)
	addq $0x6E0,%rbp
	leaq (L_251689+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_483733:
L_251736:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_251688
.p2align 0x4
.long 0x3EB2
L_251828:
	addq $0xFFFFFFFFFFFFF8C8,%rbp
	movq 0x738(%rbp),%r15
	movq %r15,0x6F0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_251829
L_251917:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x738,%rbp
	leaq (L_251918+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251918
.p2align 0x4
.long 0x3EC1
L_251918:
	addq $0xFFFFFFFFFFFFF8C8,%rbp
L_251829:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x730(%rbp)
	addq $0x18,%r12
	movq 0x728(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq (globalObjptr+0x10680)(%rip),%r15
	movq %r15,0x740(%rbp)
	addq $0x740,%rbp
	leaq (L_251830+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3EB1
L_251869:
	addq $0xFFFFFFFFFFFFF8D0,%rbp
	movl 0x730(%rbp),%r15d
	movl %r15d,0x4(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_251870
L_251894:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x730,%rbp
	leaq (L_251895+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251895
.p2align 0x4
.long 0x3EBA
L_251895:
	addq $0xFFFFFFFFFFFFF8D0,%rbp
L_251870:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x6F0(%rbp)
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x4(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xCE38)(%rip),%r15
	movq %r15,0x18(%r13)
	movq 0x1B8(%rbp),%r15
	movq 0x10(%r15),%r14
	movb 0x0(%r14),%r11b
	movq 0x1C0(%rbp),%r15
	movq 0x10(%r15),%r14
	movb 0x0(%r14),%r10b
	movq 0x1C8(%rbp),%r15
	movq 0x10(%r15),%r14
	movb 0x0(%r14),%r9b
	movq $0x4795,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r13,0x0(%r15)
	movq $0x1D11,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x2,0x8(%r14)
	movq $0x16D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x720(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x708(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r8d
	movslq %r8d,%rsp
	cmpq %rsp,%r13
	jne L_251347
L_251872:
	testl %r8d,%r8d
	jz L_483743
L_251873:
	movq $0x47AB,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	addq $0x18,%r12
	movq 0x18(%rbp),%rsp
	movq %rsp,0x0(%r8)
	movq 0x10(%rbp),%rsp
	movq %rsp,0x8(%r8)
	movq $0x1D29,0x0(%r12)
	movq %r12,%rsp
	addq $0x8,%rsp
	movq %r8,0x10(%rsp)
	movq %r15,0x30(%rsp)
	addq $0x40,%r12
	movb $0x0,%r8b
	movzbl %r8b,%esi
	movzbl %r11b,%r8d
	shll $0x8,%r8d
	orl %r8d,%esi
	movzbl %r10b,%r11d
	shll $0x10,%r11d
	orl %r11d,%esi
	movzbl %r9b,%r11d
	shll $0x18,%r11d
	orl %r11d,%esi
	movl %esi,0x0(%rsp)
	movl $0x0,0x4(%rsp)
	movq (globalObjptr+0x10690)(%rip),%r11
	movq %r11,0x8(%rsp)
	movq 0x6F8(%rbp),%r11
	movq %r11,0x18(%rsp)
	movq 0x718(%rbp),%r11
	movq %r11,0x20(%rsp)
	movq %r14,0x28(%rsp)
	cmpq $0x0,%r13
	jna L_251389
L_251875:
	movq 0x10(%r14),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x710(%rbp)
	movq $0x16D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x728(%rbp)
	addq $0x18,%r12
	movq %r11,0x0(%r14)
	movq %rsp,0x8(%r14)
	movl 0x180(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_483738
L_251876:
	movq %rsp,%r15
L_251877:
	movq $0x16D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x710(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x63B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x28,%r12
	movl $0x1,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x720(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x6F0(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x510(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x6D8(%rbp),%r13
	movq %r13,%r10
	imulq $0x18,%r10
	movq 0x6E8(%rbp),%r9
	movq %r9,0x0(%r14,%r10,1)
	movq %r14,%r10
	shrq $0x8,%r10
	movb $0x1,0x0(%r11,%r10,1)
	movq %r13,%r10
	imulq $0x18,%r10
	movq %r15,0x8(%r14,%r10,1)
	movq %r14,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,%r15
	imulq $0x18,%r15
	movq 0x700(%rbp),%r11
	movq %r11,0x10(%r14,%r15,1)
	incq %r13
	movq %r13,0x6D8(%rbp)
	jmp loop_2936
.p2align 0x4
L_483738:
L_251878:
	movq 0x190(%rbp),%r14
	movl 0x0(%r14),%r13d
	testl %r13d,%r13d
	jnz L_483741
L_251879:
	movq 0x198(%rbp),%r14
	cmpb $0x2,0x0(%r14)
	je L_483739
L_251880:
	movq %rsp,%r15
	jmp L_251877
.p2align 0x4
L_483739:
L_251881:
	movq 0x718(%rbp),%r14
	cmpq $0x1,%r14
	je L_483740
L_251882:
	movq 0x0(%r14),%r15
L_251883:
	movq $0x1C81,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x708(%rbp)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x6F8(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x1A0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x740(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x718(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x730(%rbp)
	addq $0x740,%rbp
	leaq (L_251884+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_483740:
L_251891:
	movq $0x1,%r15
	jmp L_251883
.p2align 0x4
L_483741:
L_251892:
	movq %rsp,%r15
	jmp L_251877
.p2align 0x4
L_483743:
L_251893:
	movq (globalObjptr+0x1C18)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3ECE
rev_351:
	addq $0xFFFFFFFFFFFFFAB0,%rbp
	movq 0x550(%rbp),%r15
	movq %r15,0x548(%rbp)
	cmpq $0x1,%r15
	je L_483748
L_252017:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x548(%rbp)
	movq %r14,0x550(%rbp)
	movq $0x1,0x558(%rbp)
.p2align 0x4,,0x7
L_252018:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_483747
.p2align 0x4,,0x7
L_252019:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x550(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x558(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x548(%rbp),%r14
	cmpq $0x1,%r14
	je L_483746
L_252020:
	movq %r15,0x558(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x548(%rbp)
	movq %r15,0x550(%rbp)
	jmp L_252018
.p2align 0x4
L_483746:
L_252022:
	movq %r15,0x550(%rbp)
	addq $0x550,%rbp
	leaq (L_252023+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_483747:
L_252041:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x568,%rbp
	leaq (L_252042+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252042
.p2align 0x4
.long 0x3ED2
L_252042:
	addq $0xFFFFFFFFFFFFFA98,%rbp
	jmp L_252019
.p2align 0x4
L_483748:
L_252043:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_252022
.p2align 0x4
.long 0x3FBA
L_253682:
	addq $0xFFFFFFFFFFFFFD90,%rbp
	movq 0x270(%rbp),%r15
	movq %r15,0x70(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_253683
L_253712:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x270,%rbp
	leaq (L_253713+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253713
.p2align 0x4
.long 0x3FC1
L_253713:
	addq $0xFFFFFFFFFFFFFD90,%rbp
L_253683:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x70(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x78(%rbp)
	addq $0x18,%r12
	movq 0x50(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_253684:
	addl 0x0(%r15),%ecx
	movl %ecx,0x50(%rbp)
	jo L_251342
L_253685:
	cmpq $0x1,%r14
	je L_483749
L_253686:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_253684
.p2align 0x4
L_483749:
L_253687:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_253688
L_253710:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x270,%rbp
	leaq (L_253711+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253711
.p2align 0x4
.long 0x3FC4
L_253711:
	addq $0xFFFFFFFFFFFFFD90,%rbp
L_253688:
	movl 0x50(%rbp),%ecx
	testl %ecx,%ecx
	jz L_483750
L_253689:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_253690
.p2align 0x4
L_483750:
L_253709:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_253690
.p2align 0x4
.long 0x3F81
L_253164:
	addq $0xFFFFFFFFFFFFFAB8,%rbp
	movq 0x548(%rbp),%r15
	movq %r15,0x530(%rbp)
	movl 0x550(%rbp),%r15d
	movl %r15d,0x540(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_253165
L_253184:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x550,%rbp
	leaq (L_253185+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253185
.p2align 0x4
.long 0x3F85
L_253185:
	addq $0xFFFFFFFFFFFFFAB0,%rbp
L_253165:
	movq $0xC3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x540(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x530(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x548(%rbp)
	addq $0x548,%rbp
	leaq (L_253166+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp approximate_0
.p2align 0x4
.long 0x3F2C
L_252626:
	addq $0xFFFFFFFFFFFFFAB8,%rbp
	movq 0x548(%rbp),%r15
	movq %r15,0x78(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_252627
L_252762:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x548,%rbp
	leaq (L_252763+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252763
.p2align 0x4
.long 0x3F3F
L_252763:
	addq $0xFFFFFFFFFFFFFAB8,%rbp
L_252627:
	movq 0x40(%rbp),%r15
	cmpq $0x1,%r15
	je L_483755
L_252628:
	movq 0x8(%r15),%r14
	movq %r14,0x548(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x550(%rbp)
	addq $0x548,%rbp
	leaq (L_252629+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3948
.p2align 0x4
L_483755:
L_252761:
	movq $0x1,%r14
	xorl %ecx,%ecx
	xchgq %r14,%r15
L_252636:
	testl %ecx,%ecx
	jz L_483760
L_252637:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
L_252638:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x40(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x80(%rbp),%r14
	movq %r14,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_252639:
	addl 0x0(%r14),%ecx
	movl %ecx,0x78(%rbp)
	jo L_251342
L_252640:
	cmpq $0x1,%r15
	je L_483756
L_252641:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_252639
.p2align 0x4
L_483756:
L_252642:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_252643
L_252754:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x548,%rbp
	leaq (L_252755+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252755
.p2align 0x4
.long 0x3F3C
L_252755:
	addq $0xFFFFFFFFFFFFFAB8,%rbp
L_252643:
	movl 0x78(%rbp),%ecx
	testl %ecx,%ecx
	jz L_483757
L_252644:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
L_252645:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x40(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0xE040)(%rip),%r15
	movq %r15,0x548(%rbp)
	addq $0x548,%rbp
	leaq (L_252646+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_483757:
L_252753:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_252645
.p2align 0x4
L_483760:
L_252756:
	movq $0x1,%r15
	xorl %ecx,%ecx
	jmp L_252638
.p2align 0x4
.long 0x3F46
L_252800:
	addq $0xFFFFFFFFFFFFFA88,%rbp
	movq 0x578(%rbp),%r15
	movq %r15,0x540(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_252801
L_252853:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x578,%rbp
	leaq (L_252854+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252854
.p2align 0x4
.long 0x3F52
L_252854:
	addq $0xFFFFFFFFFFFFFA88,%rbp
L_252801:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x548(%rbp)
	addq $0x18,%r12
	movq 0x560(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq (globalObjptr+0x106E0)(%rip),%r15
	movq %r15,0x578(%rbp)
	addq $0x578,%rbp
	leaq (L_252802+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3F57
L_252875:
	addq $0xFFFFFFFFFFFFFA58,%rbp
	movq 0x5A8(%rbp),%r15
	movq %r15,0x590(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_252876
L_252907:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x5A8,%rbp
	leaq (L_252908+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252908
.p2align 0x4
.long 0x3F5D
L_252908:
	addq $0xFFFFFFFFFFFFFA58,%rbp
L_252876:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x5A0(%rbp)
	addq $0x18,%r12
	movq 0x590(%rbp),%r15
	movq %r15,0x0(%r13)
	movq 0x598(%rbp),%r14
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_252877:
	addl 0x0(%r15),%ecx
	movl %ecx,0x54C(%rbp)
	jo L_251342
L_252878:
	cmpq $0x1,%r14
	je L_483763
L_252879:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_252877
.p2align 0x4
L_483763:
L_252880:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_252881
L_252905:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x5B0,%rbp
	leaq (L_252906+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252906
.p2align 0x4
.long 0x3F5E
L_252906:
	addq $0xFFFFFFFFFFFFFA50,%rbp
L_252881:
	movl 0x54C(%rbp),%ecx
	testl %ecx,%ecx
	jz L_483764
L_252882:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x5A0(%rbp),%r14
	movq %r14,0x0(%r15)
L_252883:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x590(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq 0x530(%rbp),%r15
	movq %r15,0x5A0(%rbp)
	addq $0x5A0,%rbp
	leaq (L_252884+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lay_2
.p2align 0x4
L_483764:
L_252904:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_252883
.p2align 0x4
.long 0x3F68
L_252952:
	addq $0xFFFFFFFFFFFFF870,%rbp
	movq 0x790(%rbp),%r15
	movq %r15,0x5C8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_252953
L_253054:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x790,%rbp
	leaq (L_253055+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253055
.p2align 0x4
.long 0x3F76
L_253055:
	addq $0xFFFFFFFFFFFFF870,%rbp
L_252953:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x5D8(%rbp)
	addq $0x18,%r12
	movq 0x5C8(%rbp),%r15
	movq %r15,0x0(%r13)
	movq 0x588(%rbp),%r14
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_252954:
	addl 0x0(%r15),%ecx
	movl %ecx,0x184(%rbp)
	jo L_251342
L_252955:
	cmpq $0x1,%r14
	je L_483768
L_252956:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_252954
.p2align 0x4
L_483768:
L_252957:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_252958
L_253052:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x790,%rbp
	leaq (L_253053+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253053
.p2align 0x4
.long 0x3F77
L_253053:
	addq $0xFFFFFFFFFFFFF870,%rbp
L_252958:
	movl 0x184(%rbp),%ecx
	testl %ecx,%ecx
	jz L_483769
L_252959:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x5D8(%rbp),%r14
	movq %r14,0x0(%r15)
L_252960:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x588(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x5C8(%rbp)
	addq $0x18,%r12
	movq 0x5C0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq (globalObjptr+0x10708)(%rip),%r15
	movq %r15,0x790(%rbp)
	addq $0x790,%rbp
	leaq (L_252961+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_483769:
L_253051:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_252960
.p2align 0x4
.long 0x3F66
rev_353:
	addq $0xFFFFFFFFFFFFF870,%rbp
	movq 0x790(%rbp),%r15
	movq %r15,0x588(%rbp)
	cmpq $0x1,%r15
	je L_483775
L_253083:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x588(%rbp)
	movq %r14,0x5C0(%rbp)
	movq $0x1,0x5C8(%rbp)
.p2align 0x4,,0x7
L_253084:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_483774
.p2align 0x4,,0x7
L_253085:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x5C0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x5C8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x588(%rbp),%r14
	cmpq $0x1,%r14
	je L_483773
L_253086:
	movq %r15,0x5C8(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x588(%rbp)
	movq %r15,0x5C0(%rbp)
	jmp L_253084
.p2align 0x4
L_483773:
L_253088:
	movq %r15,0x790(%rbp)
	addq $0x790,%rbp
	leaq (L_253089+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_483774:
L_253109:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x790,%rbp
	leaq (L_253110+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253110
.p2align 0x4
.long 0x3F7B
L_253110:
	addq $0xFFFFFFFFFFFFF870,%rbp
	jmp L_253085
.p2align 0x4
L_483775:
L_253111:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_253088
.p2align 0x4
.long 0x3F94
L_253346:
	addq $0xFFFFFFFFFFFFFA98,%rbp
	movq 0x568(%rbp),%r15
	movq %r15,0x560(%rbp)
	movq 0x530(%rbp),%r15
	movq %r15,0x570(%rbp)
	addq $0x570,%rbp
	leaq (L_253347+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lay_1
.p2align 0x4
.long 0x3EEB
L_252225:
	addq $0xFFFFFFFFFFFFFB08,%rbp
	movq 0x4F8(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_252226
L_252287:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x4F8,%rbp
	leaq (L_252288+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252288
.p2align 0x4
.long 0x3EF7
L_252288:
	addq $0xFFFFFFFFFFFFFB08,%rbp
L_252226:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x80(%rbp)
	addq $0x18,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq (globalObjptr+0x106B8)(%rip),%r15
	movq %r15,0x4F8(%rbp)
	addq $0x4F8,%rbp
	leaq (L_252227+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3F00
L_252334:
	addq $0xFFFFFFFFFFFFFB08,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_252335
L_252339:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x4F8,%rbp
	leaq (L_252340+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252340
.p2align 0x4
.long 0x3F01
L_252340:
	addq $0xFFFFFFFFFFFFFB08,%rbp
L_252335:
	movq (globalObjptr+0x1608)(%rip),%r14
	movq (globalObjptr+0x1610)(%rip),%r13
	movl 0x0(%r13),%r11d
	cmpl %r11d,0x0(%r14)
	je L_251571
L_252336:
	movq (globalObjptr+0xF38)(%rip),%r15
	movq $0x183F,0xFFFFFFFFFFFFFFF8(%r15)
	jmp L_252337
.p2align 0x4
.long 0x3E7B
L_251479:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq 0x508(%rbp),%r15
	movq %r15,0x78(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_251480
L_251587:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x508,%rbp
	leaq (L_251588+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251588
.p2align 0x4
.long 0x3E8D
L_251588:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
L_251480:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x98(%rbp)
	addq $0x18,%r12
	movq 0xA0(%rbp),%r15
	movq %r15,0x0(%r13)
	movq 0x78(%rbp),%r14
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_251481:
	addl 0x0(%r15),%ecx
	movl %ecx,0x54(%rbp)
	jo L_251342
L_251482:
	cmpq $0x1,%r14
	je L_483779
L_251483:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_251481
.p2align 0x4
L_483779:
L_251484:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_251485
L_251585:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x508,%rbp
	leaq (L_251586+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251586
.p2align 0x4
.long 0x3E8C
L_251586:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
L_251485:
	movq 0x98(%rbp),%r15
	movl 0x54(%rbp),%ecx
	jmp L_251486
.p2align 0x4
.long 0x3E78
L_251496:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq 0x508(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x508(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x510(%rbp)
	addq $0x508,%rbp
	leaq (L_251497+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutDec_1
.p2align 0x4
.long 0x3E9B
L_251689:
	addq $0xFFFFFFFFFFFFF920,%rbp
	movq 0x6E0(%rbp),%r15
	movq %r15,0xD8(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0x6E0(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0x6E8(%rbp)
	addq $0x6E0,%rbp
	leaq (L_251690+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutT_0
.p2align 0x4
.long 0x3EB3
L_251830:
	addq $0xFFFFFFFFFFFFF8C0,%rbp
	movq 0x740(%rbp),%r15
	movq %r15,0x728(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_251831
L_251915:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x740,%rbp
	leaq (L_251916+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251916
.p2align 0x4
.long 0x3EBF
L_251916:
	addq $0xFFFFFFFFFFFFF8C0,%rbp
L_251831:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x738(%rbp)
	addq $0x18,%r12
	movq 0x728(%rbp),%r15
	movq %r15,0x0(%r13)
	movq 0x730(%rbp),%r14
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_251832:
	addl 0x0(%r15),%ecx
	movl %ecx,0x4(%rbp)
	jo L_251342
L_251833:
	cmpq $0x1,%r14
	je L_483783
L_251834:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_251832
.p2align 0x4
L_483783:
L_251835:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_251836
L_251913:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x748,%rbp
	leaq (L_251914+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251914
.p2align 0x4
.long 0x3EC0
L_251914:
	addq $0xFFFFFFFFFFFFF8B8,%rbp
L_251836:
	movl 0x4(%rbp),%ecx
	testl %ecx,%ecx
	jz L_483784
L_251837:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x738(%rbp),%r14
	movq %r14,0x0(%r15)
L_251838:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x728(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x730(%rbp)
	addq $0x18,%r12
	movq 0x710(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq (globalObjptr+0x10688)(%rip),%r15
	movq %r15,0x740(%rbp)
	addq $0x740,%rbp
	leaq (L_251839+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_483784:
L_251912:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_251838
.p2align 0x4
.long 0x3EB8
L_251884:
	addq $0xFFFFFFFFFFFFF8C0,%rbp
	movl 0x740(%rbp),%r15d
	movl %r15d,0x4(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_251885
L_251889:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x740,%rbp
	leaq (L_251890+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251890
.p2align 0x4
.long 0x3EB9
L_251890:
	addq $0xFFFFFFFFFFFFF8C0,%rbp
L_251885:
	movq $0x13,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x2F5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x20,%r12
	movl 0x4(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x708(%rbp),%r13
	movq %r13,0x10(%r14)
	movq 0x718(%rbp),%r13
	cmpb $0x4,0x0(%r13)
	jne L_483788
L_251888:
	movq 0x730(%rbp),%r13
	movq 0x0(%r13),%r15
	movq $0x1C7F,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x8(%r11)
	addq $0x18,%r12
	movq %r14,0x0(%r11)
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r15,1)
	movq %r11,0x0(%r13)
	movq %r14,%r15
L_251887:
	movq $0x1D23,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x728(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r14,%r15
	jmp L_251877
.p2align 0x4
L_483788:
	movq %r14,%r15
	jmp L_251887
.p2align 0x4
.long 0x3ECE
L_252023:
	addq $0xFFFFFFFFFFFFFAB0,%rbp
	movq 0x550(%rbp),%r15
	movq %r15,0x548(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_252024
L_252039:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x558,%rbp
	leaq (L_252040+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252040
.p2align 0x4
.long 0x3ED1
L_252040:
	addq $0xFFFFFFFFFFFFFAA8,%rbp
L_252024:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x548(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x1590)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x106A0)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x550(%rbp)
	addq $0x550,%rbp
	leaq (L_252025+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x3F81
L_253166:
	addq $0xFFFFFFFFFFFFFAB8,%rbp
	movq 0x548(%rbp),%r15
	movq %r15,0x530(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_253167
L_253182:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x548,%rbp
	leaq (L_253183+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253183
.p2align 0x4
.long 0x3F84
L_253183:
	addq $0xFFFFFFFFFFFFFAB8,%rbp
L_253167:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x530(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x540(%rbp)
	addq $0x18,%r12
	movq 0x520(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_253168:
	addl 0x0(%r15),%ecx
	movl %ecx,0x520(%rbp)
	jo L_251342
L_253169:
	cmpq $0x1,%r14
	je L_483791
L_253170:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_253168
.p2align 0x4
L_483791:
L_253171:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_253172
L_253180:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x550,%rbp
	leaq (L_253181+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253181
.p2align 0x4
.long 0x3F83
L_253181:
	addq $0xFFFFFFFFFFFFFAB0,%rbp
L_253172:
	movl 0x520(%rbp),%ecx
	testl %ecx,%ecx
	jz L_483793
L_253173:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x540(%rbp),%r14
	movq %r14,0x0(%r15)
L_253174:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_251342
L_253175:
	movl %r13d,0x0(%r15)
	movq %r14,0x548(%rbp)
	movq 0x518(%rbp),%r15
	movq %r15,0x550(%rbp)
	movq 0x528(%rbp),%r15
	movq %r15,0x558(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x560(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x568(%rbp)
	addq $0x548,%rbp
	leaq (L_253176+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_483793:
L_253179:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_253174
.p2align 0x4
.long 0x3F2D
L_252629:
	addq $0xFFFFFFFFFFFFFAB8,%rbp
	movq 0x548(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_252630
L_252759:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x548,%rbp
	leaq (L_252760+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252760
.p2align 0x4
.long 0x3F3E
L_252760:
	addq $0xFFFFFFFFFFFFFAB8,%rbp
L_252630:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x78(%rbp)
	addq $0x18,%r12
	movq 0x88(%rbp),%r15
	movq %r15,0x0(%r13)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_252631:
	addl 0x0(%r15),%ecx
	movl %ecx,0x40(%rbp)
	jo L_251342
L_252632:
	cmpq $0x1,%r14
	je L_483797
L_252633:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_252631
.p2align 0x4
L_483797:
L_252634:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_252635
L_252757:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x548,%rbp
	leaq (L_252758+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252758
.p2align 0x4
.long 0x3F3D
L_252758:
	addq $0xFFFFFFFFFFFFFAB8,%rbp
L_252635:
	movq 0x78(%rbp),%r15
	movl 0x40(%rbp),%ecx
	jmp L_252636
.p2align 0x4
.long 0x3F2A
L_252646:
	addq $0xFFFFFFFFFFFFFAB8,%rbp
	movq 0x548(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x548(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x550(%rbp)
	addq $0x548,%rbp
	leaq (L_252647+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutDec_1
.p2align 0x4
.long 0x3F47
L_252802:
	addq $0xFFFFFFFFFFFFFA88,%rbp
	movq 0x578(%rbp),%r15
	movq %r15,0x560(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_252803
L_252851:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x578,%rbp
	leaq (L_252852+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252852
.p2align 0x4
.long 0x3F50
L_252852:
	addq $0xFFFFFFFFFFFFFA88,%rbp
L_252803:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x570(%rbp)
	addq $0x18,%r12
	movq 0x560(%rbp),%r15
	movq %r15,0x0(%r13)
	movq 0x548(%rbp),%r14
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_252804:
	addl 0x0(%r15),%ecx
	movl %ecx,0x184(%rbp)
	jo L_251342
L_252805:
	cmpq $0x1,%r14
	je L_483801
L_252806:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_252804
.p2align 0x4
L_483801:
L_252807:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_252808
L_252849:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x580,%rbp
	leaq (L_252850+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252850
.p2align 0x4
.long 0x3F51
L_252850:
	addq $0xFFFFFFFFFFFFFA80,%rbp
L_252808:
	movl 0x184(%rbp),%ecx
	testl %ecx,%ecx
	jz L_483802
L_252809:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x570(%rbp),%r14
	movq %r14,0x0(%r15)
L_252810:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x548(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x560(%rbp)
	addq $0x18,%r12
	movq 0x558(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq (globalObjptr+0xF4A0)(%rip),%r15
	movq %r15,0x578(%rbp)
	addq $0x578,%rbp
	leaq (L_252811+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_483802:
L_252848:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_252810
.p2align 0x4
.long 0x3F58
L_252884:
	addq $0xFFFFFFFFFFFFFA60,%rbp
	movq 0x5A0(%rbp),%r15
	movq %r15,0x598(%rbp)
	movl 0x5A8(%rbp),%r15d
	movl %r15d,0x54C(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_252885
L_252902:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x5A8,%rbp
	leaq (L_252903+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252903
.p2align 0x4
.long 0x3F5D
L_252903:
	addq $0xFFFFFFFFFFFFFA58,%rbp
L_252885:
	movq $0xC3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x54C(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x598(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x590(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x588(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x590(%rbp)
	addq $0x590,%rbp
	leaq (L_252886+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3782
.p2align 0x4
.long 0x3F69
L_252961:
	addq $0xFFFFFFFFFFFFF870,%rbp
	movq 0x790(%rbp),%r15
	movq %r15,0x5C0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_252962
L_253049:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x790,%rbp
	leaq (L_253050+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253050
.p2align 0x4
.long 0x3F76
L_253050:
	addq $0xFFFFFFFFFFFFF870,%rbp
L_252962:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x5D8(%rbp)
	addq $0x18,%r12
	movq 0x5C0(%rbp),%r15
	movq %r15,0x0(%r13)
	movq 0x5C8(%rbp),%r14
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_252963:
	addl 0x0(%r15),%ecx
	movl %ecx,0x184(%rbp)
	jo L_251342
L_252964:
	cmpq $0x1,%r14
	je L_483807
L_252965:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_252963
.p2align 0x4
L_483807:
L_252966:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_252967
L_253047:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x790,%rbp
	leaq (L_253048+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253048
.p2align 0x4
.long 0x3F75
L_253048:
	addq $0xFFFFFFFFFFFFF870,%rbp
L_252967:
	movl 0x184(%rbp),%ecx
	testl %ecx,%ecx
	jz L_483808
L_252968:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x5D8(%rbp),%r14
	movq %r14,0x0(%r15)
L_252969:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x5C0(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0xE040)(%rip),%r15
	movq %r15,0x790(%rbp)
	addq $0x790,%rbp
	leaq (L_252970+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_483808:
L_253046:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_252969
.p2align 0x4
.long 0x3F66
L_253089:
	addq $0xFFFFFFFFFFFFF870,%rbp
	movq 0x790(%rbp),%r15
	movq %r15,0x588(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_253090
L_253107:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x790,%rbp
	leaq (L_253108+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253108
.p2align 0x4
.long 0x3F79
L_253108:
	addq $0xFFFFFFFFFFFFF870,%rbp
L_253090:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x588(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x1590)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x10710)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x790(%rbp)
	addq $0x790,%rbp
	leaq (L_253091+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x3F95
L_253347:
	addq $0xFFFFFFFFFFFFFA90,%rbp
	movq 0x570(%rbp),%r15
	movq %r15,0x530(%rbp)
	movq %r15,0x570(%rbp)
	addq $0x570,%rbp
	leaq (L_253348+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp approximate_0
.p2align 0x4
.long 0x3EEC
L_252227:
	addq $0xFFFFFFFFFFFFFB08,%rbp
	movq 0x4F8(%rbp),%r15
	movq %r15,0x78(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_252228
L_252285:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x4F8,%rbp
	leaq (L_252286+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252286
.p2align 0x4
.long 0x3EF5
L_252286:
	addq $0xFFFFFFFFFFFFFB08,%rbp
L_252228:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x88(%rbp)
	addq $0x18,%r12
	movq 0x78(%rbp),%r15
	movq %r15,0x0(%r13)
	movq 0x80(%rbp),%r14
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_252229:
	addl 0x0(%r15),%ecx
	movl %ecx,0x78(%rbp)
	jo L_251342
L_252230:
	cmpq $0x1,%r14
	je L_483813
L_252231:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_252229
.p2align 0x4
L_483813:
L_252232:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_252233
L_252283:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x4F8,%rbp
	leaq (L_252284+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252284
.p2align 0x4
.long 0x3EF6
L_252284:
	addq $0xFFFFFFFFFFFFFB08,%rbp
L_252233:
	movl 0x78(%rbp),%ecx
	testl %ecx,%ecx
	jz L_483814
L_252234:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x88(%rbp),%r14
	movq %r14,0x0(%r15)
L_252235:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x78(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x80(%rbp)
	addq $0x18,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq (globalObjptr+0x106C0)(%rip),%r15
	movq %r15,0x4F8(%rbp)
	addq $0x4F8,%rbp
	leaq (L_252236+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_483814:
L_252282:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_252235
.p2align 0x4
.long 0x3E7C
L_251497:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq 0x508(%rbp),%r15
	movq %r15,0x10(%rbp)
	movl 0x510(%rbp),%r15d
	movl %r15d,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_251498
L_251579:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x508,%rbp
	leaq (L_251580+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251580
.p2align 0x4
.long 0x3E8A
L_251580:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
L_251498:
	movq $0xC3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x18(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x508(%rbp)
	addq $0x508,%rbp
	leaq (L_251499+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp approximate_0
.p2align 0x4
.long 0x3E9C
L_251690:
	addq $0xFFFFFFFFFFFFF920,%rbp
	movq 0x6E0(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq (globalObjptr+0xAEC8)(%rip),%r15
	movq %r15,0x6E0(%rbp)
	addq $0x6E0,%rbp
	leaq (L_251691+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3EB4
L_251839:
	addq $0xFFFFFFFFFFFFF8C0,%rbp
	movq 0x740(%rbp),%r15
	movq %r15,0x710(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_251840
L_251910:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x740,%rbp
	leaq (L_251911+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251911
.p2align 0x4
.long 0x3EBF
L_251911:
	addq $0xFFFFFFFFFFFFF8C0,%rbp
L_251840:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x738(%rbp)
	addq $0x18,%r12
	movq 0x710(%rbp),%r15
	movq %r15,0x0(%r13)
	movq 0x730(%rbp),%r14
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_251841:
	addl 0x0(%r15),%ecx
	movl %ecx,0x4(%rbp)
	jo L_251342
L_251842:
	cmpq $0x1,%r14
	je L_483819
L_251843:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_251841
.p2align 0x4
L_483819:
L_251844:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_251845
L_251908:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x748,%rbp
	leaq (L_251909+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251909
.p2align 0x4
.long 0x3EBE
L_251909:
	addq $0xFFFFFFFFFFFFF8B8,%rbp
L_251845:
	movl 0x4(%rbp),%ecx
	testl %ecx,%ecx
	jz L_483820
L_251846:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x738(%rbp),%r14
	movq %r14,0x0(%r15)
L_251847:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x710(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0xE040)(%rip),%r15
	movq %r15,0x738(%rbp)
	addq $0x738,%rbp
	leaq (L_251848+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_483820:
L_251907:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_251847
.p2align 0x4
.long 0x3ECE
L_252025:
	addq $0xFFFFFFFFFFFFFAB0,%rbp
	movq 0x550(%rbp),%r15
	movq %r15,0x548(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_252026
L_252037:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x558,%rbp
	leaq (L_252038+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252038
.p2align 0x4
.long 0x3ED1
L_252038:
	addq $0xFFFFFFFFFFFFFAA8,%rbp
L_252026:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x548(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x8(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x538(%rbp),%r13
	cmpq $0x1,%r13
	je L_483824
L_252027:
	movq 0x0(%r13),%r14
L_252028:
	movq $0x1C81,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x538(%rbp)
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x1A0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x560(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x548(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x550(%rbp)
	addq $0x560,%rbp
	leaq (L_252029+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_483824:
L_252036:
	movq $0x1,%r14
	jmp L_252028
.p2align 0x4
.long 0x3F82
L_253176:
	addq $0xFFFFFFFFFFFFFAB8,%rbp
	movq (globalObjptr+0x1608)(%rip),%r14
	movq (globalObjptr+0x1610)(%rip),%r13
	movl 0x0(%r13),%r11d
	cmpl %r11d,0x0(%r14)
	je L_251571
L_253177:
	movq 0x510(%rbp),%r15
	jmp L_253148
.p2align 0x4
.long 0x3F2E
L_252647:
	addq $0xFFFFFFFFFFFFFAB8,%rbp
	movq 0x548(%rbp),%r15
	movq %r15,0x10(%rbp)
	movl 0x550(%rbp),%r15d
	movl %r15d,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_252648
L_252751:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x548,%rbp
	leaq (L_252752+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252752
.p2align 0x4
.long 0x3F3B
L_252752:
	addq $0xFFFFFFFFFFFFFAB8,%rbp
L_252648:
	movq $0xC3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x18(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x548(%rbp)
	addq $0x548,%rbp
	leaq (L_252649+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp approximate_0
.p2align 0x4
.long 0x3F48
L_252811:
	addq $0xFFFFFFFFFFFFFA88,%rbp
	movq 0x578(%rbp),%r15
	movq %r15,0x558(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_252812
L_252846:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x578,%rbp
	leaq (L_252847+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252847
.p2align 0x4
.long 0x3F50
L_252847:
	addq $0xFFFFFFFFFFFFFA88,%rbp
L_252812:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x570(%rbp)
	addq $0x18,%r12
	movq 0x558(%rbp),%r15
	movq %r15,0x0(%r13)
	movq 0x560(%rbp),%r14
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_252813:
	addl 0x0(%r15),%ecx
	movl %ecx,0x184(%rbp)
	jo L_251342
L_252814:
	cmpq $0x1,%r14
	je L_483828
L_252815:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_252813
.p2align 0x4
L_483828:
L_252816:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_252817
L_252844:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x580,%rbp
	leaq (L_252845+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252845
.p2align 0x4
.long 0x3F4F
L_252845:
	addq $0xFFFFFFFFFFFFFA80,%rbp
L_252817:
	movl 0x184(%rbp),%ecx
	testl %ecx,%ecx
	jz L_483829
L_252818:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x570(%rbp),%r14
	movq %r14,0x0(%r15)
L_252819:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x558(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq 0x530(%rbp),%r15
	movq %r15,0x578(%rbp)
	addq $0x578,%rbp
	leaq (L_252820+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lay_2
.p2align 0x4
L_483829:
L_252843:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_252819
.p2align 0x4
.long 0x3F59
L_252886:
	addq $0xFFFFFFFFFFFFFA70,%rbp
	movl 0x590(%rbp),%r15d
	movl %r15d,0x54C(%rbp)
	movq 0x598(%rbp),%r15
	movq %r15,0x588(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_252887
L_252900:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x598,%rbp
	leaq (L_252901+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252901
.p2align 0x4
.long 0x3F5C
L_252901:
	addq $0xFFFFFFFFFFFFFA68,%rbp
L_252887:
	movl 0x54C(%rbp),%ecx
	testl %ecx,%ecx
	jz L_483835
L_252888:
	decl %ecx
	jo L_251342
L_252889:
	movq $0x1B67,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl $0x1,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x588(%rbp),%r14
	movq %r14,0x8(%r15)
L_252890:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_251342
L_252891:
	movl %r13d,0x0(%r15)
	movq 0x580(%rbp),%r15
	movq %r15,0x588(%rbp)
	movq %r14,0x580(%rbp)
	movq 0x578(%rbp),%r15
	movq %r15,0x590(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x598(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x5A0(%rbp)
	addq $0x580,%rbp
	leaq (L_252892+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_483835:
L_252899:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_252890
.p2align 0x4
.long 0x3F68
L_252970:
	addq $0xFFFFFFFFFFFFF870,%rbp
	movq 0x790(%rbp),%r15
	movq %r15,0x5C8(%rbp)
	movq 0x578(%rbp),%r15
	movq %r15,0x790(%rbp)
	addq $0x790,%rbp
	leaq (L_252971+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lay_1
.p2align 0x4
.long 0x3F66
L_253091:
	addq $0xFFFFFFFFFFFFF870,%rbp
	movq 0x790(%rbp),%r15
	movq %r15,0x588(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_253092
L_253105:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x790,%rbp
	leaq (L_253106+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253106
.p2align 0x4
.long 0x3F79
L_253106:
	addq $0xFFFFFFFFFFFFF870,%rbp
L_253092:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x588(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x550(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x5B8(%rbp),%r13
	cmpq $0x1,%r13
	je L_483837
L_253093:
	movq 0x0(%r13),%r14
L_253094:
	movq $0x1C81,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x588(%rbp)
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x1A0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x790(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x5C0(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x5C8(%rbp)
	addq $0x790,%rbp
	leaq (L_253095+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_483837:
L_253104:
	movq $0x1,%r14
	jmp L_253094
.p2align 0x4
.long 0x3F95
L_253348:
	addq $0xFFFFFFFFFFFFFA90,%rbp
	movq 0x570(%rbp),%r15
	movq %r15,0x530(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_253349
L_253377:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x570,%rbp
	leaq (L_253378+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253378
.p2align 0x4
.long 0x3F98
L_253378:
	addq $0xFFFFFFFFFFFFFA90,%rbp
L_253349:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x530(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x568(%rbp)
	addq $0x18,%r12
	movq 0x560(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_253350:
	addl 0x0(%r15),%ecx
	movl %ecx,0x52C(%rbp)
	jo L_251342
L_253351:
	cmpq $0x1,%r14
	je L_483839
L_253352:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_253350
.p2align 0x4
L_483839:
L_253353:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_253354
L_253375:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x578,%rbp
	leaq (L_253376+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253376
.p2align 0x4
.long 0x3F99
L_253376:
	addq $0xFFFFFFFFFFFFFA88,%rbp
L_253354:
	movl 0x52C(%rbp),%ecx
	testl %ecx,%ecx
	jz L_483840
L_253355:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x568(%rbp),%r14
	movq %r14,0x0(%r15)
L_253356:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x530(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq 0x508(%rbp),%r15
	movq %r15,0x568(%rbp)
	addq $0x568,%rbp
	leaq (L_253357+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lay_2
.p2align 0x4
L_483840:
L_253374:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_253356
.p2align 0x4
.long 0x3EED
L_252236:
	addq $0xFFFFFFFFFFFFFB08,%rbp
	movq 0x4F8(%rbp),%r15
	movq %r15,0x70(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_252237
L_252280:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x4F8,%rbp
	leaq (L_252281+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252281
.p2align 0x4
.long 0x3EF5
L_252281:
	addq $0xFFFFFFFFFFFFFB08,%rbp
L_252237:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x88(%rbp)
	addq $0x18,%r12
	movq 0x70(%rbp),%r15
	movq %r15,0x0(%r13)
	movq 0x80(%rbp),%r14
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_252238:
	addl 0x0(%r15),%ecx
	movl %ecx,0x70(%rbp)
	jo L_251342
L_252239:
	cmpq $0x1,%r14
	je L_483844
L_252240:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_252238
.p2align 0x4
L_483844:
L_252241:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_252242
L_252278:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x4F8,%rbp
	leaq (L_252279+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252279
.p2align 0x4
.long 0x3EF4
L_252279:
	addq $0xFFFFFFFFFFFFFB08,%rbp
L_252242:
	movl 0x70(%rbp),%ecx
	testl %ecx,%ecx
	jz L_483845
L_252243:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x88(%rbp),%r14
	movq %r14,0x0(%r15)
L_252244:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x70(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0xE040)(%rip),%r15
	movq %r15,0x4F8(%rbp)
	addq $0x4F8,%rbp
	leaq (L_252245+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_483845:
L_252277:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_252244
.p2align 0x4
.long 0x3E7C
L_251499:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	movq 0x508(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_251500
L_251577:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x508,%rbp
	leaq (L_251578+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251578
.p2align 0x4
.long 0x3E8A
L_251578:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
L_251500:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x18(%rbp)
	addq $0x18,%r12
	movq 0x90(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_251501:
	addl 0x0(%r15),%ecx
	movl %ecx,0x10(%rbp)
	jo L_251342
L_251502:
	cmpq $0x1,%r14
	je L_483849
L_251503:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_251501
.p2align 0x4
L_483849:
L_251504:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_251505
L_251575:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x508,%rbp
	leaq (L_251576+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251576
.p2align 0x4
.long 0x3E89
L_251576:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
L_251505:
	movl 0x10(%rbp),%ecx
	testl %ecx,%ecx
	jz L_483851
L_251506:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
L_251507:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_251342
L_251508:
	movl %r13d,0x0(%r15)
	movq %r14,0x508(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x510(%rbp)
	movq 0x4D8(%rbp),%r15
	movq %r15,0x518(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x520(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x528(%rbp)
	addq $0x508,%rbp
	leaq (L_251509+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_483851:
L_251574:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_251507
.p2align 0x4
.long 0x3E9D
L_251691:
	addq $0xFFFFFFFFFFFFF920,%rbp
	movq 0x6E0(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movl $0x1,0x6E0(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0x6E8(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0x6F0(%rbp)
	addq $0x6E0,%rbp
	leaq (L_251692+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutExp_1
.p2align 0x4
.long 0x3EB5
L_251848:
	addq $0xFFFFFFFFFFFFF8C8,%rbp
	movq 0x738(%rbp),%r15
	movq %r15,0x730(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x740(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x748(%rbp)
	addq $0x740,%rbp
	leaq (L_251849+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutDec_1
.p2align 0x4
.long 0x3ECF
L_252029:
	addq $0xFFFFFFFFFFFFFAA0,%rbp
	movl 0x560(%rbp),%r15d
	movl %r15d,0x4(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_252030
L_252034:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x560,%rbp
	leaq (L_252035+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252035
.p2align 0x4
.long 0x3ED0
L_252035:
	addq $0xFFFFFFFFFFFFFAA0,%rbp
L_252030:
	movq $0x13,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x2F5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x20,%r12
	movl 0x4(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x538(%rbp),%r13
	movq %r13,0x10(%r14)
	movq 0x548(%rbp),%r13
	cmpb $0x4,0x0(%r13)
	jne L_483855
L_252033:
	movq 0x550(%rbp),%r13
	movq 0x0(%r13),%r15
	movq $0x1C7F,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x8(%r11)
	addq $0x18,%r12
	movq %r14,0x0(%r11)
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r15,1)
	movq %r11,0x0(%r13)
	movq %r14,%r15
L_252032:
	movq $0x1D23,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x520(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x0(%r15),%r13
	movq $0x16D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	jmp L_252006
.p2align 0x4
L_483855:
	movq %r14,%r15
	jmp L_252032
.p2align 0x4
.long 0x3F2E
L_252649:
	addq $0xFFFFFFFFFFFFFAB8,%rbp
	movq 0x548(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_252650
L_252749:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x548,%rbp
	leaq (L_252750+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252750
.p2align 0x4
.long 0x3F3B
L_252750:
	addq $0xFFFFFFFFFFFFFAB8,%rbp
L_252650:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x18(%rbp)
	addq $0x18,%r12
	movq 0x78(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_252651:
	addl 0x0(%r15),%ecx
	movl %ecx,0x10(%rbp)
	jo L_251342
L_252652:
	cmpq $0x1,%r14
	je L_483857
L_252653:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_252651
.p2align 0x4
L_483857:
L_252654:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_252655
L_252747:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x548,%rbp
	leaq (L_252748+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252748
.p2align 0x4
.long 0x3F3A
L_252748:
	addq $0xFFFFFFFFFFFFFAB8,%rbp
L_252655:
	movl 0x10(%rbp),%ecx
	testl %ecx,%ecx
	jz L_483859
L_252656:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
L_252657:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_251342
L_252658:
	movl %r13d,0x0(%r15)
	movq %r14,0x548(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x550(%rbp)
	movq 0x4D8(%rbp),%r15
	movq %r15,0x558(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x560(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x568(%rbp)
	addq $0x548,%rbp
	leaq (L_252659+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_483859:
L_252746:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_252657
.p2align 0x4
.long 0x3F49
L_252820:
	addq $0xFFFFFFFFFFFFFA88,%rbp
	movq 0x578(%rbp),%r15
	movq %r15,0x530(%rbp)
	movl 0x580(%rbp),%r15d
	movl %r15d,0x184(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_252821
L_252841:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x578,%rbp
	leaq (L_252842+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252842
.p2align 0x4
.long 0x3F4E
L_252842:
	addq $0xFFFFFFFFFFFFFA88,%rbp
L_252821:
	movq $0xC3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x184(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x530(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x558(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x548(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x578(%rbp)
	addq $0x578,%rbp
	leaq (L_252822+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3782
.p2align 0x4
.long 0x3F5A
L_252892:
	addq $0xFFFFFFFFFFFFFA80,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_252893
L_252897:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x580,%rbp
	leaq (L_252898+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252898
.p2align 0x4
.long 0x3F5B
L_252898:
	addq $0xFFFFFFFFFFFFFA80,%rbp
L_252893:
	movq (globalObjptr+0x1608)(%rip),%r15
	movq (globalObjptr+0x1610)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_251571
	jmp L_252895
.p2align 0x4
.long 0x3F6A
L_252971:
	addq $0xFFFFFFFFFFFFF870,%rbp
	movq 0x790(%rbp),%r15
	movq %r15,0x5D8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_252972
L_253044:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x790,%rbp
	leaq (L_253045+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253045
.p2align 0x4
.long 0x3F74
L_253045:
	addq $0xFFFFFFFFFFFFF870,%rbp
L_252972:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x5D8(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x5E0(%rbp)
	addq $0x18,%r12
	movq 0x5C8(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_252973:
	addl 0x0(%r15),%ecx
	movl %ecx,0x184(%rbp)
	jo L_251342
L_252974:
	cmpq $0x1,%r14
	je L_483866
L_252975:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_252973
.p2align 0x4
L_483866:
L_252976:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_252977
L_253042:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x790,%rbp
	leaq (L_253043+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253043
.p2align 0x4
.long 0x3F73
L_253043:
	addq $0xFFFFFFFFFFFFF870,%rbp
L_252977:
	movl 0x184(%rbp),%ecx
	testl %ecx,%ecx
	jz L_483867
L_252978:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x5E0(%rbp),%r14
	movq %r14,0x0(%r15)
L_252979:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x5C0(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x588(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x790(%rbp)
	addq $0x790,%rbp
	leaq (L_252980+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3782
.p2align 0x4
L_483867:
L_253041:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_252979
.p2align 0x4
.long 0x3F7A
L_253095:
	addq $0xFFFFFFFFFFFFF870,%rbp
	movl 0x790(%rbp),%r15d
	movl %r15d,0x184(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_253096
L_253102:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x790,%rbp
	leaq (L_253103+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253103
.p2align 0x4
.long 0x3F7B
L_253103:
	addq $0xFFFFFFFFFFFFF870,%rbp
L_253096:
	movq $0x13,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x2F5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x20,%r12
	movl 0x184(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x588(%rbp),%r13
	movq %r13,0x10(%r14)
	movq 0x5C0(%rbp),%r13
	cmpb $0x4,0x0(%r13)
	jne L_483872
L_253101:
	movq 0x5C8(%rbp),%r13
	movq 0x0(%r13),%r15
	movq $0x1C7F,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x8(%r11)
	addq $0x18,%r12
	movq %r14,0x0(%r11)
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r15,1)
	movq %r11,0x0(%r13)
	movq %r14,%r15
L_253098:
	movq $0x1D23,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x580(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x0(%r15),%r13
	movq $0x16D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	cmpq $0x1,0x570(%rbp)
	je L_483871
L_253099:
	movq %r15,0x580(%rbp)
	jmp L_252944
.p2align 0x4
L_483871:
L_253100:
	movq %r15,0x570(%rbp)
	jmp L_252990
.p2align 0x4
L_483872:
	movq %r14,%r15
	jmp L_253098
.p2align 0x4
.long 0x3F94
L_253357:
	addq $0xFFFFFFFFFFFFFA98,%rbp
	movq 0x568(%rbp),%r15
	movq %r15,0x560(%rbp)
	movl 0x570(%rbp),%r15d
	movl %r15d,0x52C(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_253358
L_253372:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x570,%rbp
	leaq (L_253373+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253373
.p2align 0x4
.long 0x3F98
L_253373:
	addq $0xFFFFFFFFFFFFFA90,%rbp
L_253358:
	movq $0xC3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x52C(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x560(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x530(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x558(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x560(%rbp)
	addq $0x560,%rbp
	leaq (L_253359+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3782
.p2align 0x4
.long 0x3EE8
L_252245:
	addq $0xFFFFFFFFFFFFFB08,%rbp
	movq 0x4F8(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x4F8(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x500(%rbp)
	addq $0x4F8,%rbp
	leaq (L_252246+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutDec_1
.p2align 0x4
.long 0x3E7D
L_251509:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_251510
L_251572:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x508,%rbp
	leaq (L_251573+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251573
.p2align 0x4
.long 0x3E88
L_251573:
	addq $0xFFFFFFFFFFFFFAF8,%rbp
L_251510:
	movq (globalObjptr+0x1608)(%rip),%r15
	movq (globalObjptr+0x1610)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_251571
	jmp L_251512
.p2align 0x4
.long 0x3E9E
L_251692:
	addq $0xFFFFFFFFFFFFF920,%rbp
	movq 0x6E0(%rbp),%r15
	movq %r15,0xC8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_251693
L_251734:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x6E0,%rbp
	leaq (L_251735+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251735
.p2align 0x4
.long 0x3EA6
L_251735:
	addq $0xFFFFFFFFFFFFF920,%rbp
L_251693:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xC8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0xC0(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0xD0(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0xB8(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_251694:
	addl 0x0(%r15),%ecx
	movl %ecx,0x4(%rbp)
	jo L_251342
L_251695:
	cmpq $0x1,%r14
	je L_483877
L_251696:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_251694
.p2align 0x4
L_483877:
L_251697:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_251698
L_251732:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x6E0,%rbp
	leaq (L_251733+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251733
.p2align 0x4
.long 0x3EA5
L_251733:
	addq $0xFFFFFFFFFFFFF920,%rbp
L_251698:
	movl 0x4(%rbp),%ecx
	testl %ecx,%ecx
	jz L_483878
L_251699:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xD0(%rbp),%r14
	movq %r14,0x0(%r15)
L_251700:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x6E0(%rbp)
	addq $0x6E0,%rbp
	leaq (L_251701+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp approximate_0
.p2align 0x4
L_483878:
L_251731:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_251700
.p2align 0x4
.long 0x3EB6
L_251849:
	addq $0xFFFFFFFFFFFFF8C0,%rbp
	movq 0x740(%rbp),%r15
	movq %r15,0x738(%rbp)
	movl 0x748(%rbp),%r15d
	movl %r15d,0x4(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_251850
L_251905:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x748,%rbp
	leaq (L_251906+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251906
.p2align 0x4
.long 0x3EBD
L_251906:
	addq $0xFFFFFFFFFFFFF8B8,%rbp
L_251850:
	movq $0xC3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x4(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x738(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x740(%rbp)
	addq $0x740,%rbp
	leaq (L_251851+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp approximate_0
.p2align 0x4
.long 0x3F2F
L_252659:
	addq $0xFFFFFFFFFFFFFAB8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_252660
L_252744:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x548,%rbp
	leaq (L_252745+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252745
.p2align 0x4
.long 0x3F39
L_252745:
	addq $0xFFFFFFFFFFFFFAB8,%rbp
L_252660:
	movq (globalObjptr+0x1610)(%rip),%r15
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_251571
	jmp L_252662
.p2align 0x4
.long 0x3F4A
L_252822:
	addq $0xFFFFFFFFFFFFFA88,%rbp
	movl 0x578(%rbp),%r15d
	movl %r15d,0x184(%rbp)
	movq 0x580(%rbp),%r15
	movq %r15,0x530(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_252823
L_252839:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x578,%rbp
	leaq (L_252840+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252840
.p2align 0x4
.long 0x3F4D
L_252840:
	addq $0xFFFFFFFFFFFFFA88,%rbp
L_252823:
	movl 0x184(%rbp),%ecx
	testl %ecx,%ecx
	jz L_483887
L_252824:
	decl %ecx
	jo L_251342
L_252825:
	movq $0x1B67,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl $0x1,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x530(%rbp),%r14
	movq %r14,0x8(%r15)
L_252826:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_251342
L_252827:
	movl %r13d,0x0(%r15)
	movq %r14,0x560(%rbp)
	movq 0x568(%rbp),%r15
	movq %r15,0x570(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x578(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x580(%rbp)
	movq 0x540(%rbp),%r15
	movq %r15,0x568(%rbp)
	addq $0x560,%rbp
	leaq (L_252828+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_483887:
L_252838:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_252826
.p2align 0x4
.long 0x3F6B
L_252980:
	addq $0xFFFFFFFFFFFFF870,%rbp
	movl 0x790(%rbp),%r15d
	movl %r15d,0x184(%rbp)
	movq 0x798(%rbp),%r15
	movq %r15,0x588(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_252981
L_253039:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x790,%rbp
	leaq (L_253040+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253040
.p2align 0x4
.long 0x3F72
L_253040:
	addq $0xFFFFFFFFFFFFF870,%rbp
L_252981:
	movl 0x184(%rbp),%ecx
	testl %ecx,%ecx
	jz L_483891
L_252982:
	decl %ecx
	jo L_251342
L_252983:
	movq $0x1B67,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl $0x1,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x588(%rbp),%r14
	movq %r14,0x8(%r15)
L_252984:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_251342
L_252985:
	movl %r13d,0x0(%r15)
	movq %r14,0x790(%rbp)
	movq 0x570(%rbp),%r15
	movq %r15,0x798(%rbp)
	movq 0x5D0(%rbp),%r15
	movq %r15,0x7A0(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x7A8(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x7B0(%rbp)
	addq $0x790,%rbp
	leaq (L_252986+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_483891:
L_253038:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_252984
.p2align 0x4
.long 0x3F96
L_253359:
	addq $0xFFFFFFFFFFFFFAA0,%rbp
	movl 0x560(%rbp),%r15d
	movl %r15d,0x52C(%rbp)
	movq 0x568(%rbp),%r15
	movq %r15,0x530(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_253360
L_253370:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x560,%rbp
	leaq (L_253371+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253371
.p2align 0x4
.long 0x3F97
L_253371:
	addq $0xFFFFFFFFFFFFFAA0,%rbp
L_253360:
	movl 0x52C(%rbp),%ecx
	testl %ecx,%ecx
	jz L_483895
L_253361:
	decl %ecx
	jo L_251342
L_253362:
	movq $0x1B67,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl $0x1,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x530(%rbp),%r14
	movq %r14,0x8(%r15)
L_253363:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_251342
L_253364:
	movl %r13d,0x0(%r15)
	movq %r14,0x558(%rbp)
	movq 0x550(%rbp),%r15
	movq %r15,0x560(%rbp)
	movq 0x4D8(%rbp),%r15
	movq %r15,0x568(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x570(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x578(%rbp)
	addq $0x558,%rbp
	leaq (L_253365+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_483895:
L_253369:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_253363
.p2align 0x4
.long 0x3EEE
L_252246:
	addq $0xFFFFFFFFFFFFFB08,%rbp
	movq 0x4F8(%rbp),%r15
	movq %r15,0x88(%rbp)
	movl 0x500(%rbp),%r15d
	movl %r15d,0x90(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_252247
L_252275:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x4F8,%rbp
	leaq (L_252276+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252276
.p2align 0x4
.long 0x3EF3
L_252276:
	addq $0xFFFFFFFFFFFFFB08,%rbp
L_252247:
	movq $0xC3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x90(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x88(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x4F8(%rbp)
	addq $0x4F8,%rbp
	leaq (L_252248+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp approximate_0
.p2align 0x4
.long 0x3E9F
L_251701:
	addq $0xFFFFFFFFFFFFF920,%rbp
	movq 0x6E0(%rbp),%r15
	movq %r15,0xB8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_251702
L_251729:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x6E0,%rbp
	leaq (L_251730+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251730
.p2align 0x4
.long 0x3EA4
L_251730:
	addq $0xFFFFFFFFFFFFF920,%rbp
L_251702:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0xB8(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0xC0(%rbp)
	addq $0x18,%r12
	movq 0xD8(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_251703:
	addl 0x0(%r15),%ecx
	movl %ecx,0x4(%rbp)
	jo L_251342
L_251704:
	cmpq $0x1,%r14
	je L_483898
L_251705:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_251703
.p2align 0x4
L_483898:
L_251706:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_251707
L_251727:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x6E0,%rbp
	leaq (L_251728+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251728
.p2align 0x4
.long 0x3EA3
L_251728:
	addq $0xFFFFFFFFFFFFF920,%rbp
L_251707:
	movl 0x4(%rbp),%ecx
	testl %ecx,%ecx
	jz L_483899
L_251708:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xC0(%rbp),%r14
	movq %r14,0x0(%r15)
L_251709:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0xA8(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0xB0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x6E0(%rbp)
	addq $0x6E0,%rbp
	leaq (L_251710+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3782
.p2align 0x4
L_483899:
L_251726:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_251709
.p2align 0x4
.long 0x3EB6
L_251851:
	addq $0xFFFFFFFFFFFFF8C0,%rbp
	movq 0x740(%rbp),%r15
	movq %r15,0x738(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_251852
L_251903:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x748,%rbp
	leaq (L_251904+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251904
.p2align 0x4
.long 0x3EBD
L_251904:
	addq $0xFFFFFFFFFFFFF8B8,%rbp
L_251852:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x738(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x740(%rbp)
	addq $0x18,%r12
	movq 0x730(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_251853:
	addl 0x0(%r15),%ecx
	movl %ecx,0x4(%rbp)
	jo L_251342
L_251854:
	cmpq $0x1,%r14
	je L_483903
L_251855:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_251853
.p2align 0x4
L_483903:
L_251856:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_251857
L_251901:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x750,%rbp
	leaq (L_251902+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251902
.p2align 0x4
.long 0x3EBC
L_251902:
	addq $0xFFFFFFFFFFFFF8B0,%rbp
L_251857:
	movl 0x4(%rbp),%ecx
	testl %ecx,%ecx
	jz L_483904
L_251858:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x740(%rbp),%r14
	movq %r14,0x0(%r15)
L_251859:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x710(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x728(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x730(%rbp)
	addq $0x730,%rbp
	leaq (L_251860+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3782
.p2align 0x4
L_483904:
L_251900:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_251859
.p2align 0x4
.long 0x3F4B
L_252828:
	addq $0xFFFFFFFFFFFFFAA0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_252829
L_252836:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x560,%rbp
	leaq (L_252837+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252837
.p2align 0x4
.long 0x3F4C
L_252837:
	addq $0xFFFFFFFFFFFFFAA0,%rbp
L_252829:
	movq (globalObjptr+0x1608)(%rip),%r15
	movq (globalObjptr+0x1610)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_251571
	jmp L_252831
.p2align 0x4
.long 0x3F6C
L_252986:
	addq $0xFFFFFFFFFFFFF870,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_252987
L_253036:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x790,%rbp
	leaq (L_253037+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_253037
.p2align 0x4
.long 0x3F71
L_253037:
	addq $0xFFFFFFFFFFFFF870,%rbp
L_252987:
	movq (globalObjptr+0x1610)(%rip),%r15
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_251571
	jmp L_252989
.p2align 0x4
.long 0x3F88
L_253365:
	addq $0xFFFFFFFFFFFFFAA8,%rbp
	movq (globalObjptr+0x1608)(%rip),%r15
	movq (globalObjptr+0x1610)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_251571
	jmp L_253367
.p2align 0x4
.long 0x3EEE
L_252248:
	addq $0xFFFFFFFFFFFFFB08,%rbp
	movq 0x4F8(%rbp),%r15
	movq %r15,0x88(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_252249
L_252273:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x4F8,%rbp
	leaq (L_252274+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252274
.p2align 0x4
.long 0x3EF3
L_252274:
	addq $0xFFFFFFFFFFFFFB08,%rbp
L_252249:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x88(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x90(%rbp)
	addq $0x18,%r12
	movq 0x80(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_252250:
	addl 0x0(%r15),%ecx
	movl %ecx,0x80(%rbp)
	jo L_251342
L_252251:
	cmpq $0x1,%r14
	je L_483913
L_252252:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_252250
.p2align 0x4
L_483913:
L_252253:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_252254
L_252271:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x4F8,%rbp
	leaq (L_252272+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252272
.p2align 0x4
.long 0x3EF2
L_252272:
	addq $0xFFFFFFFFFFFFFB08,%rbp
L_252254:
	movl 0x80(%rbp),%ecx
	testl %ecx,%ecx
	jz L_483914
L_252255:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x90(%rbp),%r14
	movq %r14,0x0(%r15)
L_252256:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x70(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x4F8(%rbp)
	addq $0x4F8,%rbp
	leaq (L_252257+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3782
.p2align 0x4
L_483914:
L_252270:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_252256
.p2align 0x4
.long 0x3EA0
L_251710:
	addq $0xFFFFFFFFFFFFF920,%rbp
	movl 0x6E0(%rbp),%r15d
	movl %r15d,0x4(%rbp)
	movq 0x6E8(%rbp),%r15
	movq %r15,0xA8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_251711
L_251724:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x6E0,%rbp
	leaq (L_251725+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251725
.p2align 0x4
.long 0x3EA2
L_251725:
	addq $0xFFFFFFFFFFFFF920,%rbp
L_251711:
	movl 0x4(%rbp),%ecx
	testl %ecx,%ecx
	jz L_483920
L_251712:
	decl %ecx
	jo L_251342
L_251713:
	movq $0x1B67,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl $0x1,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0xA8(%rbp),%r14
	movq %r14,0x8(%r15)
L_251714:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_251342
L_251715:
	movl %r13d,0x0(%r15)
	movq %r14,0x6E0(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0x6E8(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x6F0(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x6F8(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x700(%rbp)
	addq $0x6E0,%rbp
	leaq (L_251716+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_483920:
L_251723:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_251714
.p2align 0x4
.long 0x3EB7
L_251860:
	addq $0xFFFFFFFFFFFFF8D0,%rbp
	movl 0x730(%rbp),%r15d
	movl %r15d,0x4(%rbp)
	movq 0x738(%rbp),%r15
	movq %r15,0x710(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_251861
L_251898:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x730,%rbp
	leaq (L_251899+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251899
.p2align 0x4
.long 0x3EBB
L_251899:
	addq $0xFFFFFFFFFFFFF8D0,%rbp
L_251861:
	movl 0x4(%rbp),%ecx
	testl %ecx,%ecx
	jz L_483924
L_251862:
	decl %ecx
	jo L_251342
L_251863:
	movq $0x1B67,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl $0x1,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x710(%rbp),%r14
	movq %r14,0x8(%r15)
L_251864:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_251342
L_251865:
	movl %r13d,0x0(%r15)
	movq %r14,0x730(%rbp)
	movq 0x6F0(%rbp),%r15
	movq %r15,0x738(%rbp)
	movq 0x718(%rbp),%r15
	movq %r15,0x740(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x748(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x750(%rbp)
	addq $0x730,%rbp
	leaq (L_251866+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_483924:
L_251897:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_251864
.p2align 0x4
.long 0x3EEF
L_252257:
	addq $0xFFFFFFFFFFFFFB08,%rbp
	movl 0x4F8(%rbp),%r15d
	movl %r15d,0x70(%rbp)
	movq 0x500(%rbp),%r15
	movq %r15,0x78(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_252258
L_252268:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x4F8,%rbp
	leaq (L_252269+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_252269
.p2align 0x4
.long 0x3EF1
L_252269:
	addq $0xFFFFFFFFFFFFFB08,%rbp
L_252258:
	movl 0x70(%rbp),%ecx
	testl %ecx,%ecx
	jz L_483928
L_252259:
	decl %ecx
	jo L_251342
L_252260:
	movq $0x1B67,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl $0x1,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x8(%r15)
L_252261:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_251342
L_252262:
	movl %r13d,0x0(%r15)
	movq %r14,0x4F8(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x500(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x508(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x510(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x518(%rbp)
	addq $0x4F8,%rbp
	leaq (L_252263+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_483928:
L_252267:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_252261
.p2align 0x4
.long 0x3E97
L_251716:
	addq $0xFFFFFFFFFFFFF920,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_251717
L_251721:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x6E0,%rbp
	leaq (L_251722+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_251722
.p2align 0x4
.long 0x3EA1
L_251722:
	addq $0xFFFFFFFFFFFFF920,%rbp
L_251717:
	movq (globalObjptr+0x1610)(%rip),%r15
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_251571
	jmp L_251719
.p2align 0x4
.long 0x3EB1
L_251866:
	addq $0xFFFFFFFFFFFFF8D0,%rbp
	movq (globalObjptr+0x1608)(%rip),%r15
	movq (globalObjptr+0x1610)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_251571
	jmp L_251868
.p2align 0x4
.long 0x3EF0
L_252263:
	addq $0xFFFFFFFFFFFFFB08,%rbp
	movq (globalObjptr+0x1610)(%rip),%r15
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_251571
	jmp L_252265
