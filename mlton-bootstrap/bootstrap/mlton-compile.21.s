/* MLton 20130715 (built Mon Jun 13 11:54:01 AEST 2016 on ports.extensibl.com) */
/*   created this file on Mon Jun 13 12:08:54 2016. */
/* Do not edit this file. */
/* Flag settings:  */
/*    align: 8 */
/*    atMLtons: (mlton-compile, @MLton, --) */
/*    chunk: chunk per function */
/*    closureConvertGlobalize: true */
/*    closureConvertShrink: true */
/*    codegen: amd64 */
/*    contifyIntoMain: false */
/*    debug: false */
/*    defaultChar: char8 */
/*    defaultWideChar: widechar32 */
/*    defaultInt: int32 */
/*    defaultReal: real64 */
/*    defaultWord: word32 */
/*    diag passes: [] */
/*    drop passes: [] */
/*    elaborate allowConstant (default): false */
/*    elaborate allowConstant (enabled): true */
/*    elaborate allowFFI (default): false */
/*    elaborate allowFFI (enabled): true */
/*    elaborate allowPrim (default): false */
/*    elaborate allowPrim (enabled): true */
/*    elaborate allowOverload (default): false */
/*    elaborate allowOverload (enabled): true */
/*    elaborate allowRebindEquals (default): false */
/*    elaborate allowRebindEquals (enabled): true */
/*    elaborate deadCode (default): false */
/*    elaborate deadCode (enabled): true */
/*    elaborate forceUsed (default): false */
/*    elaborate forceUsed (enabled): true */
/*    elaborate ffiStr (default):  */
/*    elaborate ffiStr (enabled): true */
/*    elaborate nonexhaustiveExnMatch (default): default */
/*    elaborate nonexhaustiveExnMatch (enabled): true */
/*    elaborate nonexhaustiveMatch (default): warn */
/*    elaborate nonexhaustiveMatch (enabled): true */
/*    elaborate redundantMatch (default): warn */
/*    elaborate redundantMatch (enabled): true */
/*    elaborate resolveScope (default): strdec */
/*    elaborate resolveScope (enabled): true */
/*    elaborate sequenceNonUnit (default): warn */
/*    elaborate sequenceNonUnit (enabled): true */
/*    elaborate warnUnused (default): true */
/*    elaborate warnUnused (enabled): true */
/*    elaborate only: false */
/*    emit main: true */
/*    export header: None */
/*    exn history: false */
/*    generated output format: executable */
/*    gc check: Limit */
/*    indentation: 3 */
/*    inlineIntoMain: true */
/*    inlineLeafA: {loops = true, repeat = true, size = Some 20} */
/*    inlineLeafB: {loops = true, repeat = true, size = Some 40} */
/*    inlineNonRec: {small = 60, product = 320} */
/*    input file: mlton */
/*    keep CoreML: false */
/*    keep def use: true */
/*    keep dot: false */
/*    keep Machine: false */
/*    keep passes: [] */
/*    keep RSSA: false */
/*    keep SSA: false */
/*    keep SSA2: false */
/*    keep SXML: false */
/*    keep XML: false */
/*    extra_: false */
/*    lib dir: /usr/ports/pobj/mlton-20130715/mlton-on-20130715-release/build/lib */
/*    lib target dir: /usr/ports/pobj/mlton-20130715/mlton-on-20130715-release/build/lib/targets/self */
/*    loop passes: 1 */
/*    mark cards: true */
/*    max function size: 10000 */
/*    mlb path vars: [{var = MLTON_ROOT, path = $(LIB_MLTON_DIR)/sml}, {var = SML_LIB, path = $(LIB_MLTON_DIR)/sml}] */
/*    native commented: 0 */
/*    native live stack: false */
/*    native optimize: 1 */
/*    native move hoist: true */
/*    native copy prop: true */
/*    native copy prop cutoff: 1000 */
/*    native cutoff: 100 */
/*    native live transfer: 8 */
/*    native shuffle: true */
/*    native ieee fp: false */
/*    native split: Some 20000 */
/*    optimizationPasses: [<ssa2::default>, <ssa::default>, <sxml::default>, <xml::default>] */
/*    polyvariance: Some {hofo = true, rounds = 2, small = 30, product = 300} */
/*    prefer abs paths: false */
/*    prof passes: [] */
/*    profile: None */
/*    profile branch: false */
/*    profile C: [] */
/*    profile IL: ProfileSource */
/*    profile include/exclude: [(Seq [Star [.], Or [Seq [Seq [[$], [(], [S], [M], [L], [_], [L], [I], [B], [)]]]], Star [.]], false)] */
/*    profile raise: false */
/*    profile stack: false */
/*    profile val: false */
/*    show basis: None */
/*    show def-use: None */
/*    show types: true */
/*    target: self */
/*    target arch: AMD64 */
/*    target OS: OpenBSD */
/*    type check: false */
/*    verbosity: Pass */
/*    warn unrecognized annotation: true */
/*    warn deprecated features: true */
/*    zone cut depth: 100 */
.text
.p2align 0x4
.globl unfoldi_3
.hidden unfoldi_3
unfoldi_3:
L_66114:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_66115
L_66715:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_66716+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66716
.p2align 0x4
.long 0x457
L_66716:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_66115:
	movslq 0x8(%rbp),%rdx
	movq %rdx,0x10(%rbp)
	testq %rdx,%rdx
	jz L_401016
L_66116:
	cmpq $0x7FFFFFFF,%rdx
	ja L_401015
L_66117:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x95F,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_66118+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66118
.p2align 0x4
.long 0x452
L_66118:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq %rax,0x8(%rbp)
L_66119:
	movq $0x0,0x18(%rbp)
.p2align 0x4,,0x7
loop_795:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_401014
.p2align 0x4,,0x7
L_66120:
	movq 0x18(%rbp),%r15
	cmpq 0x10(%rbp),%r15
	jnl L_401013
L_66122:
	movl %r15d,%r14d
	movq 0x0(%rbp),%r15
	cmpq $0x1,%r15
	je L_401012
L_66123:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%rax
	shrq $0x1,%rax
	subq $0x1FD2,%rax
	cmpq $0x66,%rax
	ja L_400784
	leaq jumpTable_175(%rip),%rbx
	jmp *(%rbx,%rax,8)
.data
.p2align 0x4
jumpTable_175:
.quad L_401011,L_401009,L_401008,L_401007,L_401006,L_401005,L_401004,L_401003,L_401001,L_400997,L_400996,L_400995,L_400994,L_400993,L_400989,L_400985,L_400981,L_400980,L_400979,L_400978,L_400975,L_400972,L_400971,L_400970,L_400966,L_400965,L_400964,L_400960,L_400956,L_400952,L_400948,L_400947,L_400943,L_400939,L_400938,L_400937,L_400936,L_400935,L_400934,L_400930,L_400926,L_400925,L_400922,L_400919,L_400916,L_400915,L_400914,L_400900,L_400898,L_400895,L_400893,L_400892,L_400891,L_400887,L_400882,L_400881,L_400880,L_400877,L_400874,L_400872,L_400871,L_400870,L_400869,L_400868,L_400867,L_400866,L_400865,L_400864,L_400863,L_400862,L_400861,L_400860,L_400859,L_400855,L_400851,L_400850,L_400839,L_400835,L_400834,L_400831,L_400830,L_400827,L_400824,L_400823,L_400822,L_400821,L_400820,L_400816,L_400812,L_400811,L_400810,L_400809,L_400808,L_400804,L_400803,L_400802,L_400801,L_400797,L_400794,L_400791,L_400788,L_400787,L_400785
.text
.p2align 0x4
L_400784:
L_66124:
	movq 0x0(%rbp),%r13
	movq 0x0(%r13),%r11
	movslq %r14d,%r15
	movq 0x0(%r11,%r15,8),%r14
	movq 0x10(%r14),%r11
	movq %r11,%r15
.p2align 0x4,,0x7
L_66125:
	movq 0x8(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x18(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x18(%rbp)
	jmp loop_795
.p2align 0x4
L_400785:
L_66707:
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_400786
L_66708:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r14,1)
	movq %r13,0x0(%r15)
	movq 0x18(%r11),%r15
	jmp L_66125
.p2align 0x4
L_400786:
L_66130:
	movq (globalObjptr+0x4B0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_400787:
L_66706:
	movq 0x0(%rbp),%r13
	movq 0x0(%r13),%r11
	movslq %r14d,%r15
	salq $0x4,%r15
	movq 0x8(%r11,%r15,1),%r11
	movq %r11,%r15
	jmp L_66125
.p2align 0x4
L_400788:
L_66693:
	movslq %r14d,%r15
	movq 0x0(%rbp),%r14
	movq 0x8(%r14),%r13
	movq 0x0(%r13,%r15,8),%r11
	movq %r11,0x20(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r15),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x2059,%r15
	je L_400790
	cmpq $0x205A,%r15
	je L_400789
L_66694:
	movq 0x8(%r13),%r15
	movq %r15,0x28(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x40(%rbp)
	movq %r11,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_66695+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1322
.p2align 0x4
L_400789:
L_66704:
	movq 0x8(%r13),%r15
	movq 0x0(%r13),%r14
	movq $0x89,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	movq %r13,0x30(%rbp)
	addq $0x18,%r12
	movq %r11,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_66705+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1375
.p2align 0x4
L_400790:
L_66702:
	movq 0x8(%r13),%r15
	movq 0x0(%r13),%r14
	movq $0x89,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	movq %r13,0x30(%rbp)
	addq $0x18,%r12
	movq %r11,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_66703+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1388
.p2align 0x4
L_400791:
L_66680:
	movslq %r14d,%r15
	movq 0x0(%rbp),%r14
	movq 0x8(%r14),%r13
	movq 0x0(%r13,%r15,8),%r11
	movq %r11,0x20(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r15),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x2059,%r15
	je L_400793
	cmpq $0x205A,%r15
	je L_400792
L_66681:
	movq 0x8(%r13),%r15
	movq %r15,0x28(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x40(%rbp)
	movq %r11,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_66682+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1322
.p2align 0x4
L_400792:
L_66691:
	movq 0x8(%r13),%r15
	movq 0x0(%r13),%r14
	movq $0x89,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	movq %r13,0x30(%rbp)
	addq $0x18,%r12
	movq %r11,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_66692+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1375
.p2align 0x4
L_400793:
L_66689:
	movq 0x8(%r13),%r15
	movq 0x0(%r13),%r14
	movq $0x89,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	movq %r13,0x30(%rbp)
	addq $0x18,%r12
	movq %r11,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_66690+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1388
.p2align 0x4
L_400794:
L_66667:
	movslq %r14d,%r15
	movq 0x0(%rbp),%r14
	movq 0x8(%r14),%r13
	movq 0x0(%r13,%r15,8),%r11
	movq 0x0(%r11),%r10
	movq %r10,0x20(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r15),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x2059,%r15
	je L_400796
	cmpq $0x205A,%r15
	je L_400795
L_66668:
	movq 0x8(%r13),%r15
	movq %r15,0x28(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x40(%rbp)
	movq %r10,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_66669+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1322
.p2align 0x4
L_400795:
L_66678:
	movq 0x8(%r13),%r15
	movq 0x0(%r13),%r14
	movq $0x89,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	movq %r13,0x30(%rbp)
	addq $0x18,%r12
	movq %r10,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_66679+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1375
.p2align 0x4
L_400796:
L_66676:
	movq 0x8(%r13),%r15
	movq 0x0(%r13),%r14
	movq $0x89,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	movq %r13,0x30(%rbp)
	addq $0x18,%r12
	movq %r10,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_66677+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1388
.p2align 0x4
L_400797:
L_66662:
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r13
	movl 0x0(%r13),%ecx
.p2align 0x4,,0x7
loop_815:
	movq 0x0(%r15),%r14
	movslq %ecx,%r13
	movq 0x8(%r15),%r11
	movq 0x0(%r11,%r13,8),%r10
	cmpq $0x1,%r10
	jne L_400799
L_66665:
	incl %ecx
	jo L_400798
L_66666:
	jmp loop_815
.p2align 0x4
L_400798:
L_66152:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_400799:
L_66663:
	incl %ecx
	jo L_66152
L_66664:
	movl %ecx,0x0(%r14)
	movq %r10,%r15
	jmp L_66125
.p2align 0x4
L_400801:
L_66661:
	movq 0x0(%rbp),%r13
	movq 0x0(%r13),%r11
	movslq %r14d,%r15
	imulq $0x18,%r15
	movq 0x0(%r11,%r15,1),%r11
	movq %r11,%r15
	jmp L_66125
.p2align 0x4
L_400802:
L_66629:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x30(%rbp)
	movslq %r14d,%r13
	salq $0x4,%r13
	movq 0x8(%r15),%r14
	movq 0x8(%r14,%r13,1),%r11
	movq %r11,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_66630+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_5
.p2align 0x4
L_400803:
L_66628:
	movq 0x0(%rbp),%r13
	movq 0x0(%r13),%r11
	movslq %r14d,%r15
	salq $0x4,%r15
	movq 0x8(%r11,%r15,1),%r11
	movq %r11,%r15
	jmp L_66125
.p2align 0x4
L_400804:
L_66623:
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r13
	movl 0x0(%r13),%ecx
.p2align 0x4,,0x7
loop_814:
	movq 0x0(%r15),%r14
	movslq %ecx,%r13
	movq 0x8(%r15),%r11
	movq 0x0(%r11,%r13,8),%r10
	cmpq $0x1,%r10
	jne L_400806
L_66626:
	incl %ecx
	jo L_66152
L_66627:
	jmp loop_814
.p2align 0x4
L_400806:
L_66624:
	incl %ecx
	jo L_66152
L_66625:
	movl %ecx,0x0(%r14)
	movq %r10,%r15
	jmp L_66125
.p2align 0x4
L_400808:
L_66618:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_66619+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_400809:
L_66617:
	movq 0x0(%rbp),%r13
	movq 0x0(%r13),%r11
	movslq %r14d,%r15
	salq $0x4,%r15
	movq 0x8(%r11,%r15,1),%r11
	movq %r11,%r15
	jmp L_66125
.p2align 0x4
L_400810:
L_66616:
	movq 0x0(%rbp),%r13
	movq 0x0(%r13),%r11
	movslq %r14d,%r15
	movq 0x0(%r11,%r15,8),%r14
	movq 0x8(%r14),%r11
	movq %r11,%r15
	jmp L_66125
.p2align 0x4
L_400811:
L_66615:
	movslq %r14d,%r15
	movq 0x0(%rbp),%r14
	movq 0x8(%r14),%r13
	movq 0x0(%r13,%r15,8),%r11
	movq %r11,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x38(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_66195+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp replaceVar_0
.p2align 0x4
L_400812:
L_66610:
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r13
	movl 0x0(%r13),%ecx
.p2align 0x4,,0x7
loop_813:
	movq 0x0(%r15),%r14
	movslq %ecx,%r13
	movq 0x8(%r15),%r11
	movq 0x0(%r11,%r13,8),%r10
	cmpq $0x1,%r10
	jne L_400814
L_66613:
	incl %ecx
	jo L_66152
L_66614:
	jmp loop_813
.p2align 0x4
L_400814:
L_66611:
	incl %ecx
	jo L_66152
L_66612:
	movl %ecx,0x0(%r14)
	movq %r10,%r15
	jmp L_66125
.p2align 0x4
L_400816:
L_66605:
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r13
	movl 0x0(%r13),%ecx
.p2align 0x4,,0x7
loop_812:
	movq 0x0(%r15),%r14
	movslq %ecx,%r13
	movq 0x8(%r15),%r11
	movq 0x0(%r11,%r13,8),%r10
	cmpq $0x1,%r10
	jne L_400818
L_66608:
	incl %ecx
	jo L_66152
L_66609:
	jmp loop_812
.p2align 0x4
L_400818:
L_66606:
	incl %ecx
	jo L_66152
L_66607:
	movl %ecx,0x0(%r14)
	movq %r10,%r15
	jmp L_66125
.p2align 0x4
L_400820:
L_66604:
	movq 0x0(%rbp),%r13
	movq 0x0(%r13),%r11
	movslq %r14d,%r15
	movq 0x0(%r11,%r15,8),%r14
	movq 0x8(%r14),%r11
	movq %r11,%r15
	jmp L_66125
.p2align 0x4
L_400821:
L_66603:
	movq 0x0(%rbp),%r13
	movq 0x0(%r13),%r11
	movslq %r14d,%r15
	movq 0x0(%r11,%r15,8),%r14
	movq 0x8(%r14),%r11
	movq %r11,%r15
	jmp L_66125
.p2align 0x4
L_400822:
L_66598:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_66599+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_400823:
L_66585:
	movslq %r14d,%r15
	movq 0x0(%rbp),%r14
	movq 0x8(%r14),%r13
	movq 0x0(%r13,%r15,8),%r11
	movq %r11,0x20(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x28(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x40(%rbp)
	movq %r11,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_66586+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_61
.p2align 0x4
L_400824:
L_66578:
	movslq %r14d,%r15
	movq 0x0(%rbp),%r13
	movq 0x8(%r13),%r11
	movq 0x0(%r11,%r15,8),%r14
	movq 0x0(%r13),%r11
	movq 0x8(%r11),%r15
	movq 0x0(%r11),%r10
	movq %r14,%r13
	andq $0x1,%r13
	cmpq $0x1,%r13
	jne L_400826
L_66582:
	shrq $0x1,%r14
	movl %r14d,%r13d
	movslq %r13d,%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	jnb L_400825
L_66584:
	movq 0x0(%r15,%r14,8),%r13
	movq 0x8(%r13),%r13
	movq %r13,%r15
	movq %r10,%r14
L_66580:
	movq %r15,0x28(%rbp)
	movq %r14,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_66581+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1375
.p2align 0x4
L_400825:
L_66177:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_400826:
L_66579:
	movq %r14,%r15
	movq %r10,%r14
	jmp L_66580
.p2align 0x4
L_400827:
L_66571:
	movslq %r14d,%r15
	movq 0x0(%rbp),%r14
	movq 0x8(%r14),%r13
	movq 0x0(%r13,%r15,8),%r11
	movq 0x0(%r14),%r13
	movq 0x8(%r13),%r15
	movq 0x0(%r13),%r10
	movq %r11,%r14
	andq $0x1,%r14
	cmpq $0x1,%r14
	jne L_400829
L_66575:
	shrq $0x1,%r11
	movl %r11d,%r14d
	movslq %r14d,%r13
	cmpq 0xFFFFFFFFFFFFFFF0(%r15),%r13
	jnb L_66177
L_66577:
	movq 0x0(%r15,%r13,8),%r14
	movq %r14,%r15
.p2align 0x4,,0x7
L_66574:
	movq 0x20(%r15),%r14
	movq 0x0(%r15),%r15
	movl $0x1,0x0(%r14)
	jmp L_66125
.p2align 0x4
L_400829:
L_66572:
	movq %r11,0x28(%rbp)
	movq %r10,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_66573+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1375
.p2align 0x4
L_400830:
L_66569:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x30(%rbp)
	movslq %r14d,%r13
	movq 0x8(%r15),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq %r11,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_66570+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1375
.p2align 0x4
L_400831:
L_66556:
	movslq %r14d,%r15
	movq 0x0(%rbp),%r14
	movq 0x8(%r14),%r13
	movq 0x0(%r13,%r15,8),%r11
	movq %r11,0x20(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r15),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x2059,%r15
	je L_400833
	cmpq $0x205A,%r15
	je L_400832
L_66557:
	movq 0x8(%r13),%r15
	movq %r15,0x28(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x40(%rbp)
	movq %r11,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_66558+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1322
.p2align 0x4
L_400832:
L_66567:
	movq 0x8(%r13),%r15
	movq 0x0(%r13),%r14
	movq $0x89,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	movq %r13,0x30(%rbp)
	addq $0x18,%r12
	movq %r11,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_66568+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1375
.p2align 0x4
L_400833:
L_66565:
	movq 0x8(%r13),%r15
	movq 0x0(%r13),%r14
	movq $0x89,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	movq %r13,0x30(%rbp)
	addq $0x18,%r12
	movq %r11,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_66566+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1388
.p2align 0x4
L_400834:
L_66555:
	movq 0x0(%rbp),%r13
	movq 0x0(%r13),%r11
	movslq %r14d,%r15
	movq 0x0(%r11,%r15,8),%r14
	movq 0x8(%r14),%r11
	movq %r11,%r15
	jmp L_66125
.p2align 0x4
L_400835:
L_66550:
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r13
	movl 0x0(%r13),%ecx
.p2align 0x4,,0x7
loop_811:
	movq 0x0(%r15),%r14
	movslq %ecx,%r13
	movq 0x8(%r15),%r11
	movq 0x0(%r11,%r13,8),%r10
	cmpq $0x1,%r10
	jne L_400837
L_66553:
	incl %ecx
	jo L_66152
L_66554:
	jmp loop_811
.p2align 0x4
L_400837:
L_66551:
	incl %ecx
	jo L_66152
L_66552:
	movl %ecx,0x0(%r14)
	movq %r10,%r15
	jmp L_66125
.p2align 0x4
L_400839:
L_66549:
	movslq %r14d,%r15
	movq 0x0(%rbp),%r14
	movq 0x8(%r14),%r13
	movq 0x0(%r13,%r15,8),%r11
	movq %r11,0x20(%rbp)
	movq 0x0(%r14),%r15
simplifyVar_0:
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x8(%r15),%r9
	movq 0x8(%r9),%r11
	movq 0x0(%r9),%r8
	movq 0x8(%r8),%r10
	movq 0x0(%r8),%r13
	movq 0x20(%rbp),%r9
	movq 0x10(%r9),%r15
	movq (globalObjptr+0x1068)(%rip),%r9
	movq 0x0(%r9),%r14
	incq %r14
	jo L_400849
L_66264:
	movq %r14,0x0(%r9)
	movq 0x0(%r15),%r9
	cmpq $0x1,%r9
	je L_400848
L_66265:
	movq 0x0(%r9),%r14
	movq 0x8(%r9),%r9
	xorl %ecx,%ecx
	movq %r9,%r15
.p2align 0x4,,0x7
L_66267:
	movq %r14,%r9
	andq $0x3,%r9
	jnz L_400847
L_66306:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r9
	shrq $0x1,%r9
	cmpq $0xCB1,%r9
	jne L_400846
L_66307:
	movq 0x8(%r14),%r9
	cmpq %r10,0x0(%r14)
	movq %r10,(localObjptr+0x20)(%rip)
	je L_400843
	movq %r11,(localObjptr+0x10)(%rip)
L_66268:
	incl %ecx
	jo L_66152
L_66269:
	cmpq $0x1,%r15
	je L_400840
L_66270:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq (localObjptr+0x10)(%rip),%r11
	movq (localObjptr+0x20)(%rip),%r10
	jmp L_66267
.p2align 0x4
L_400840:
L_66271:
L_66272:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_400841
L_66274:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl x_156
L_66305:
	movl %ecx,0x0(%r15)
x_156:
	movq %r13,0x10(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_66276+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_400841:
L_66273:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_400843:
L_66309:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_66273
L_66310:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_400844
L_66321:
	movl %ecx,0x0(%r14)
	movq %r9,%r15
	movq %r11,(localObjptr+0x10)(%rip)
L_66312:
	movq %r15,0x38(%rbp)
	movq (localObjptr+0x10)(%rip),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	addq $0x38,%rbp
	leaq (isUnit_0+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_62
.p2align 0x4
L_400844:
L_66311:
	movq %r9,%r15
	movq %r11,(localObjptr+0x10)(%rip)
	jmp L_66312
.p2align 0x4
L_400846:
	movq %r10,(localObjptr+0x20)(%rip)
	movq %r11,(localObjptr+0x10)(%rip)
	jmp L_66268
.p2align 0x4
L_400847:
	movq %r10,(localObjptr+0x20)(%rip)
	movq %r11,(localObjptr+0x10)(%rip)
	jmp L_66268
.p2align 0x4
L_400848:
L_66322:
	xorl %ecx,%ecx
	jmp L_66272
.p2align 0x4
L_400849:
L_66263:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_400850:
L_66548:
	movslq %r14d,%r15
	movq 0x0(%rbp),%r14
	movq 0x8(%r14),%r13
	movq 0x0(%r13,%r15,8),%r11
	movq %r11,0x20(%rbp)
	movq 0x0(%r14),%r15
	jmp simplifyVar_0
.p2align 0x4
L_400851:
L_66543:
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r13
	movl 0x0(%r13),%ecx
.p2align 0x4,,0x7
loop_810:
	movq 0x0(%r15),%r14
	movslq %ecx,%r13
	movq 0x8(%r15),%r11
	movq 0x0(%r11,%r13,8),%r10
	cmpq $0x1,%r10
	jne L_400853
L_66546:
	incl %ecx
	jo L_66152
L_66547:
	jmp loop_810
.p2align 0x4
L_400853:
L_66544:
	incl %ecx
	jo L_66152
L_66545:
	movl %ecx,0x0(%r14)
	movq %r10,%r15
	jmp L_66125
.p2align 0x4
L_400855:
L_66538:
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r13
	movl 0x0(%r13),%ecx
.p2align 0x4,,0x7
loop_809:
	movq 0x0(%r15),%r14
	movslq %ecx,%r13
	movq 0x8(%r15),%r11
	movq 0x0(%r11,%r13,8),%r10
	cmpq $0x1,%r10
	jne L_400857
L_66541:
	incl %ecx
	jo L_66152
L_66542:
	jmp loop_809
.p2align 0x4
L_400857:
L_66539:
	incl %ecx
	jo L_66152
L_66540:
	movl %ecx,0x0(%r14)
	movq %r10,%r15
	jmp L_66125
.p2align 0x4
L_400859:
L_66537:
	movq 0x0(%rbp),%r13
	movq 0x0(%r13),%r11
	movslq %r14d,%r15
	movq 0x0(%r11,%r15,8),%r14
	movq 0x8(%r14),%r11
	movq %r11,%r15
	jmp L_66125
.p2align 0x4
L_400860:
L_66536:
	movq 0x0(%rbp),%r13
	movq 0x0(%r13),%r11
	movslq %r14d,%r15
	movq 0x0(%r11,%r15,8),%r14
	movq 0x8(%r14),%r11
	movq %r11,%r15
	jmp L_66125
.p2align 0x4
L_400861:
L_66532:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x38(%rbp)
	movslq %r14d,%r13
	movq 0x8(%r15),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq %r11,0x20(%rbp)
	movq %r11,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_66533+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_58
.p2align 0x4
L_400862:
L_66527:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_66528+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_400863:
L_66526:
	movq 0x0(%rbp),%r13
	movq 0x0(%r13),%r11
	movslq %r14d,%r15
	movq 0x0(%r11,%r15,8),%r14
	movq 0x8(%r14),%r11
	movq %r11,%r15
	jmp L_66125
.p2align 0x4
L_400864:
L_66525:
	movq 0x0(%rbp),%r13
	movq 0x0(%r13),%r11
	movslq %r14d,%r15
	movq 0x0(%r11,%r15,8),%r14
	movq 0x0(%r14),%r11
	movq %r11,%r15
	jmp L_66125
.p2align 0x4
L_400865:
L_66521:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x38(%rbp)
	movslq %r14d,%r13
	movq 0x8(%r15),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq %r11,0x20(%rbp)
	movq %r11,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_66522+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_58
.p2align 0x4
L_400866:
L_66520:
	movq 0x0(%rbp),%r13
	movq 0x0(%r13),%r11
	movslq %r14d,%r15
	movq 0x0(%r11,%r15,8),%r14
	movq 0x8(%r14),%r11
	movq %r11,%r15
	jmp L_66125
.p2align 0x4
L_400867:
L_66515:
	movslq %r14d,%r15
	movq 0x0(%rbp),%r14
	movq 0x8(%r14),%r13
	movq 0x0(%r13,%r15,8),%r11
	movq %r11,0x20(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x40(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x28(%rbp)
	movq %r11,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_66516+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1396
.p2align 0x4
L_400868:
L_66514:
	movq 0x0(%rbp),%r13
	movq 0x0(%r13),%r11
	movslq %r14d,%r15
	movq 0x0(%r11,%r15,8),%r14
	movq 0x8(%r14),%r11
	movq %r11,%r15
	jmp L_66125
.p2align 0x4
L_400869:
L_66510:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x38(%rbp)
	movslq %r14d,%r13
	movq 0x8(%r15),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq %r11,0x20(%rbp)
	movq %r11,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_66511+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_58
.p2align 0x4
L_400870:
L_66506:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x38(%rbp)
	movslq %r14d,%r13
	movq 0x8(%r15),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq %r11,0x20(%rbp)
	movq %r11,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_66507+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_54
.p2align 0x4
L_400871:
L_66505:
	movq 0x0(%rbp),%r13
	movq 0x0(%r13),%r11
	movslq %r14d,%r15
	movq 0x0(%r11,%r15,8),%r14
	movq 0x8(%r14),%r11
	movq %r11,%r15
	jmp L_66125
.p2align 0x4
L_400872:
L_66501:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq %r11,0x20(%rbp)
	movq 0x0(%r14),%r15
	cmpq $0x1,%r15
	je L_66130
L_66502:
	movq %r13,0x40(%rbp)
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq %r11,0x28(%rbp)
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r15,1)
	movq %r13,0x0(%r14)
	movq %r11,0x38(%rbp)
	addq $0x38,%rbp
	leaq (x_157+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_54
.p2align 0x4
L_400874:
L_66494:
	movslq %r14d,%r15
	movq 0x0(%rbp),%r13
	movq 0x8(%r13),%r11
	movq 0x0(%r11,%r15,8),%r14
	movq 0x0(%r13),%r11
	movq 0x8(%r11),%r15
	movq 0x0(%r11),%r10
	movq %r14,%r13
	andq $0x1,%r13
	cmpq $0x1,%r13
	jne L_400876
L_66498:
	shrq $0x1,%r14
	movl %r14d,%r13d
	movslq %r13d,%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	jnb L_66177
L_66500:
	movq 0x0(%r15,%r14,8),%r13
	movq 0x8(%r13),%r13
	movq %r13,%r15
	movq %r10,%r14
L_66496:
	movq %r15,0x28(%rbp)
	movq %r14,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_66497+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1388
.p2align 0x4
L_400876:
L_66495:
	movq %r14,%r15
	movq %r10,%r14
	jmp L_66496
.p2align 0x4
L_400877:
L_66487:
	movslq %r14d,%r15
	movq 0x0(%rbp),%r14
	movq 0x8(%r14),%r13
	movq 0x0(%r13,%r15,8),%r11
	movq 0x0(%r14),%r13
	movq 0x8(%r13),%r15
	movq 0x0(%r13),%r10
	movq %r11,%r14
	andq $0x1,%r14
	cmpq $0x1,%r14
	jne L_400879
L_66491:
	shrq $0x1,%r11
	movl %r11d,%r14d
	movslq %r14d,%r13
	cmpq 0xFFFFFFFFFFFFFFF0(%r15),%r13
	jnb L_66177
L_66493:
	movq 0x0(%r15,%r13,8),%r14
	movq %r14,%r15
.p2align 0x4,,0x7
L_66490:
	movq 0x20(%r15),%r14
	movq 0x0(%r15),%r15
	movl $0x1,0x0(%r14)
	jmp L_66125
.p2align 0x4
L_400879:
L_66488:
	movq %r11,0x28(%rbp)
	movq %r10,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_66489+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1388
.p2align 0x4
L_400880:
L_66486:
	movslq %r14d,%r15
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r13
	movq 0x0(%r13,%r15,8),%r11
	movq 0x0(%r11),%r15
	movq 0x20(%r11),%r14
	movl $0x1,0x0(%r14)
	jmp L_66125
.p2align 0x4
L_400881:
L_66481:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x30(%rbp)
	movslq %r14d,%r13
	movq 0x8(%r15),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq 0x8(%r11),%r10
	movq 0x18(%r10),%r9
	movq %r9,0x20(%rbp)
	addq $0x30,%rbp
	leaq (L_66482+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_400882:
L_66461:
	movq 0x0(%rbp),%r13
	movq 0x0(%r13),%r11
	movslq %r14d,%r15
	movq 0x8(%r13),%r14
	movq 0x0(%r14,%r15,8),%r10
	movq %r10,0x20(%rbp)
	cmpq $0x1,%r11
	jne L_400883
L_66480:
	movq %r10,%r15
	jmp L_66125
.p2align 0x4
L_400883:
L_66462:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0x203A,%r15
	je L_400886
	cmpq $0x203B,%r15
	je L_400885
	cmpq $0x203C,%r15
	je L_400884
L_66463:
	movq 0x0(%r11),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq %r10,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_66464+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1396
.p2align 0x4
L_400884:
L_66476:
	movq 0x0(%r11),%r15
	movq %r15,0x38(%rbp)
	movq %r10,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_66477+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_58
.p2align 0x4
L_400885:
L_66472:
	movq 0x0(%r11),%r15
	movq %r15,0x38(%rbp)
	movq %r10,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_66473+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_58
.p2align 0x4
L_400886:
L_66468:
	movq 0x0(%r11),%r15
	movq %r15,0x38(%rbp)
	movq %r10,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_66469+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_54
.p2align 0x4
L_400887:
L_66456:
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r13
	movl 0x0(%r13),%ecx
.p2align 0x4,,0x7
loop_808:
	movq 0x0(%r15),%r14
	movslq %ecx,%r13
	movq 0x8(%r15),%r11
	movq 0x0(%r11,%r13,8),%r10
	cmpq $0x1,%r10
	jne L_400889
L_66459:
	incl %ecx
	jo L_66152
L_66460:
	jmp loop_808
.p2align 0x4
L_400889:
L_66457:
	incl %ecx
	jo L_66152
L_66458:
	movl %ecx,0x0(%r14)
	movq %r10,%r15
	jmp L_66125
.p2align 0x4
L_400891:
L_66455:
	movq 0x0(%rbp),%r13
	movq 0x0(%r13),%r11
	movslq %r14d,%r15
	movq 0x0(%r11,%r15,8),%r14
	movq 0x8(%r14),%r11
	movq %r11,%r15
	jmp L_66125
.p2align 0x4
L_400892:
L_66454:
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r15
	jmp L_66125
.p2align 0x4
L_400893:
L_66451:
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_66130
L_66452:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r14,1)
	movq %r13,0x0(%r15)
	movq %r11,%r15
	jmp L_66125
.p2align 0x4
L_400895:
L_66447:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	cmpl $0x0,%r14d
	je L_400897
	cmpl $0x1,%r14d
	je L_400896
L_66448:
	movq (globalObjptr+0x4A8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_400896:
L_66450:
	movq %r11,%r15
	jmp L_66125
.p2align 0x4
L_400897:
	movq %r13,%r15
	jmp L_66125
.p2align 0x4
L_400898:
L_66445:
	movq 0x0(%rbp),%r13
	movl 0x0(%r13),%r11d
	movq 0x8(%r13),%r10
	subl %r14d,%r11d
	jo L_66152
L_66446:
	movslq %r11d,%r15
	movq 0x0(%r10,%r15,8),%r10
	movq %r10,%r15
	jmp L_66125
.p2align 0x4
L_400900:
L_66417:
	movq 0x0(%rbp),%r11
	movq 0x10(%r11),%r10
	movq %r10,0x20(%rbp)
	movq 0x8(%r11),%r15
	movq 0x0(%r11),%r13
	movslq %r14d,%r9
	salq $0x4,%r9
	movq 0x20(%r11),%r8
	movq 0x8(%r8,%r9,1),%rsp
	movq 0x0(%rsp),%rsi
	movq 0x18(%r11),%r9
	movq 0x10(%r9),%r8
	movq %r8,0x28(%rbp)
	cmpq 0x10(%rsi),%r8
	jne L_400913
L_66419:
	movq $0x2807,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,0x30(%rbp)
	addq $0x10,%r12
	movq %r10,0x0(%r11)
	movq 0x8(%r15),%r11
	movq %r11,0x38(%rbp)
	movq 0x0(%r15),%r14
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_66263
L_66420:
	movq %r15,0x0(%r11)
	movq 0x0(%r8),%r11
	cmpq $0x1,%r11
	je L_400911
L_66421:
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r11
	xorl %ecx,%ecx
	movq %r11,%r15
.p2align 0x4,,0x7
L_66423:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_400910
L_66436:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xCE2,%r11
	jne L_400909
L_66437:
	cmpq %r14,0x0(%r13)
	movq %r14,(localObjptr+0x0)(%rip)
	je L_400906
L_66424:
	incl %ecx
	movl %ecx,0x40(%rbp)
	jo L_66152
L_66425:
	cmpq $0x1,%r15
	je L_400901
L_66426:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x0)(%rip),%r14
	jmp L_66423
.p2align 0x4
L_400901:
L_66427:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_400904
.p2align 0x4,,0x7
L_66428:
	movl 0x40(%rbp),%ecx
L_66429:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_66273
L_66430:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_66432
L_66433:
	movl %ecx,0x0(%r15)
L_66432:
	movq $0x19C5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	movq 0x20(%rbp),%r15
	jmp L_66125
.p2align 0x4
L_400904:
L_66434:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_66435+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66435
.p2align 0x4
.long 0x68C
L_66435:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_66428
.p2align 0x4
L_400906:
L_66439:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_66273
L_66440:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_400907
L_66443:
	movl %ecx,0x0(%r14)
	movq %r13,%r15
L_66442:
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r15
	jmp L_66125
.p2align 0x4
L_400907:
L_66441:
	movq %r13,%r15
	jmp L_66442
.p2align 0x4
L_400909:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_66424
.p2align 0x4
L_400910:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_66424
.p2align 0x4
L_400911:
L_66444:
	xorl %ecx,%ecx
	jmp L_66429
.p2align 0x4
L_400913:
L_66418:
	movq %rsi,0x28(%rbp)
	movq %r13,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_66195+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bind_1
.p2align 0x4
L_400914:
L_66412:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_66413+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_400915:
L_66407:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_66408+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_400916:
L_66394:
	movslq %r14d,%r15
	movq 0x0(%rbp),%r14
	movq 0x8(%r14),%r13
	movq 0x0(%r13,%r15,8),%r11
	movq %r11,0x20(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r15),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x2059,%r15
	je L_400918
	cmpq $0x205A,%r15
	je L_400917
L_66395:
	movq 0x8(%r13),%r15
	movq %r15,0x28(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x40(%rbp)
	movq %r11,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_66396+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1322
.p2align 0x4
L_400917:
L_66405:
	movq 0x8(%r13),%r15
	movq 0x0(%r13),%r14
	movq $0x89,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	movq %r13,0x30(%rbp)
	addq $0x18,%r12
	movq %r11,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_66406+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1375
.p2align 0x4
L_400918:
L_66403:
	movq 0x8(%r13),%r15
	movq 0x0(%r13),%r14
	movq $0x89,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	movq %r13,0x30(%rbp)
	addq $0x18,%r12
	movq %r11,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_66404+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1388
.p2align 0x4
L_400919:
L_66387:
	movslq %r14d,%r15
	movq 0x0(%rbp),%r14
	movq 0x8(%r14),%r13
	movq 0x0(%r13,%r15,8),%r11
	movq 0x0(%r14),%r13
	movq 0x8(%r13),%r15
	movq 0x0(%r13),%r10
	movq %r11,%r14
	andq $0x1,%r14
	cmpq $0x1,%r14
	jne L_400921
L_66391:
	shrq $0x1,%r11
	movl %r11d,%r14d
	movslq %r14d,%r13
	cmpq 0xFFFFFFFFFFFFFFF0(%r15),%r13
	jnb L_66177
L_66393:
	movq 0x0(%r15,%r13,8),%r14
	movq %r14,%r15
.p2align 0x4,,0x7
L_66390:
	movq 0x20(%r15),%r14
	movq 0x0(%r15),%r15
	movl $0x1,0x0(%r14)
	jmp L_66125
.p2align 0x4
L_400921:
L_66388:
	movq %r11,0x28(%rbp)
	movq %r10,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_66389+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1388
.p2align 0x4
L_400922:
L_66380:
	movslq %r14d,%r15
	movq 0x0(%rbp),%r13
	movq 0x8(%r13),%r11
	movq 0x0(%r11,%r15,8),%r14
	movq 0x0(%r13),%r11
	movq 0x8(%r11),%r15
	movq 0x0(%r11),%r10
	movq %r14,%r13
	andq $0x1,%r13
	cmpq $0x1,%r13
	jne L_400924
L_66384:
	shrq $0x1,%r14
	movl %r14d,%r13d
	movslq %r13d,%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	jnb L_66177
L_66386:
	movq 0x0(%r15,%r14,8),%r13
	movq 0x8(%r13),%r13
	movq %r13,%r15
	movq %r10,%r14
L_66382:
	movq %r15,0x28(%rbp)
	movq %r14,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_66383+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1388
.p2align 0x4
L_400924:
L_66381:
	movq %r14,%r15
	movq %r10,%r14
	jmp L_66382
.p2align 0x4
L_400925:
L_66376:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x30(%rbp)
	movslq %r14d,%r13
	movq 0x8(%r15),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq %r11,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_66377+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_54
.p2align 0x4
L_400926:
L_66371:
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r13
	movl 0x0(%r13),%ecx
.p2align 0x4,,0x7
loop_807:
	movq 0x0(%r15),%r14
	movslq %ecx,%r13
	movq 0x8(%r15),%r11
	movq 0x0(%r11,%r13,8),%r10
	cmpq $0x1,%r10
	jne L_400928
L_66374:
	incl %ecx
	jo L_66152
L_66375:
	jmp loop_807
.p2align 0x4
L_400928:
L_66372:
	incl %ecx
	jo L_66152
L_66373:
	movl %ecx,0x0(%r14)
	movq %r10,%r15
	jmp L_66125
.p2align 0x4
L_400930:
L_66366:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r13
	movq 0x8(%r15),%r11
	movq 0x0(%r15),%r10
	cmpl $0x0,%r14d
	je L_400933
	cmpl $0x1,%r14d
	je L_400932
	cmpl $0x2,%r14d
	je L_400931
L_66367:
	movq (globalObjptr+0x4C0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_400931:
L_66370:
	movq %r11,%r15
	jmp L_66125
.p2align 0x4
L_400932:
L_66369:
	movq %r10,%r15
	jmp L_66125
.p2align 0x4
L_400933:
	movq %r13,%r15
	jmp L_66125
.p2align 0x4
L_400934:
L_66365:
	movq 0x0(%rbp),%r13
	movq 0x0(%r13),%r11
	movslq %r14d,%r15
	movq 0x0(%r11,%r15,8),%r14
	movq 0x8(%r14),%r11
	movq %r11,%r15
	jmp L_66125
.p2align 0x4
L_400935:
L_66360:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_66361+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_400936:
L_66359:
	movq 0x0(%rbp),%r13
	movq 0x0(%r13),%r11
	movslq %r14d,%r15
	movq 0x0(%r11,%r15,8),%r14
	movq 0x8(%r14),%r11
	movq %r11,%r15
	jmp L_66125
.p2align 0x4
L_400937:
L_66358:
	movq 0x0(%rbp),%r13
	movq 0x0(%r13),%r11
	movslq %r14d,%r15
	movq 0x0(%r11,%r15,8),%r14
	movq 0x8(%r14),%r11
	movq %r11,%r15
	jmp L_66125
.p2align 0x4
L_400938:
L_66357:
	movq 0x0(%rbp),%r13
	movq 0x0(%r13),%r11
	movslq %r14d,%r15
	movq 0x0(%r11,%r15,8),%r14
	movq 0x8(%r14),%r11
	movq %r11,%r15
	jmp L_66125
.p2align 0x4
L_400939:
L_66352:
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r13
	movl 0x0(%r13),%ecx
.p2align 0x4,,0x7
loop_806:
	movq 0x0(%r15),%r14
	movslq %ecx,%r13
	movq 0x8(%r15),%r11
	movq 0x0(%r11,%r13,8),%r10
	cmpq $0x1,%r10
	jne L_400941
L_66355:
	incl %ecx
	jo L_66152
L_66356:
	jmp loop_806
.p2align 0x4
L_400941:
L_66353:
	incl %ecx
	jo L_66152
L_66354:
	movl %ecx,0x0(%r14)
	movq %r10,%r15
	jmp L_66125
.p2align 0x4
L_400943:
L_66347:
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r13
	movl 0x0(%r13),%ecx
.p2align 0x4,,0x7
loop_805:
	movq 0x0(%r15),%r14
	movslq %ecx,%r13
	movq 0x8(%r15),%r11
	movq 0x0(%r11,%r13,8),%r10
	cmpq $0x1,%r10
	jne L_400945
L_66350:
	incl %ecx
	jo L_66152
L_66351:
	jmp loop_805
.p2align 0x4
L_400945:
L_66348:
	incl %ecx
	jo L_66152
L_66349:
	movl %ecx,0x0(%r14)
	movq %r10,%r15
	jmp L_66125
.p2align 0x4
L_400947:
L_66343:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x38(%rbp)
	movslq %r14d,%r13
	movq 0x8(%r15),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq %r11,0x20(%rbp)
	movq %r11,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_66344+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_58
.p2align 0x4
L_400948:
L_66338:
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r13
	movl 0x0(%r13),%ecx
.p2align 0x4,,0x7
loop_804:
	movq 0x0(%r15),%r14
	movslq %ecx,%r13
	movq 0x8(%r15),%r11
	movq 0x0(%r11,%r13,8),%r10
	cmpq $0x1,%r10
	jne L_400950
L_66341:
	incl %ecx
	jo L_66152
L_66342:
	jmp loop_804
.p2align 0x4
L_400950:
L_66339:
	incl %ecx
	jo L_66152
L_66340:
	movl %ecx,0x0(%r14)
	movq %r10,%r15
	jmp L_66125
.p2align 0x4
L_400952:
L_66333:
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r13
	movl 0x0(%r13),%ecx
.p2align 0x4,,0x7
loop_803:
	movq 0x0(%r15),%r14
	movslq %ecx,%r13
	movq 0x8(%r15),%r11
	movq 0x0(%r11,%r13,8),%r10
	cmpq $0x1,%r10
	jne L_400954
L_66336:
	incl %ecx
	jo L_66152
L_66337:
	jmp loop_803
.p2align 0x4
L_400954:
L_66334:
	incl %ecx
	jo L_66152
L_66335:
	movl %ecx,0x0(%r14)
	movq %r10,%r15
	jmp L_66125
.p2align 0x4
L_400956:
L_66328:
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r13
	movl 0x0(%r13),%ecx
.p2align 0x4,,0x7
loop_802:
	movq 0x0(%r15),%r14
	movslq %ecx,%r13
	movq 0x8(%r15),%r11
	movq 0x0(%r11,%r13,8),%r10
	cmpq $0x1,%r10
	jne L_400958
L_66331:
	incl %ecx
	jo L_66152
L_66332:
	jmp loop_802
.p2align 0x4
L_400958:
L_66329:
	incl %ecx
	jo L_66152
L_66330:
	movl %ecx,0x0(%r14)
	movq %r10,%r15
	jmp L_66125
.p2align 0x4
L_400960:
L_66323:
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r13
	movl 0x0(%r13),%ecx
.p2align 0x4,,0x7
loop_801:
	movq 0x0(%r15),%r14
	movslq %ecx,%r13
	movq 0x8(%r15),%r11
	movq 0x0(%r11,%r13,8),%r10
	cmpq $0x1,%r10
	jne L_400962
L_66326:
	incl %ecx
	jo L_66152
L_66327:
	jmp loop_801
.p2align 0x4
L_400962:
L_66324:
	incl %ecx
	jo L_66152
L_66325:
	movl %ecx,0x0(%r14)
	movq %r10,%r15
	jmp L_66125
.p2align 0x4
L_400964:
L_66262:
	movslq %r14d,%r15
	movq 0x0(%rbp),%r14
	movq 0x8(%r14),%r13
	movq 0x0(%r13,%r15,8),%r11
	movq %r11,0x20(%rbp)
	movq 0x0(%r14),%r15
	jmp simplifyVar_0
.p2align 0x4
L_400965:
L_66261:
	movq 0x0(%rbp),%r13
	movq 0x0(%r13),%r11
	movslq %r14d,%r15
	salq $0x4,%r15
	movq 0x8(%r11,%r15,1),%r11
	movq %r11,%r15
	jmp L_66125
.p2align 0x4
L_400966:
L_66256:
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r13
	movl 0x0(%r13),%ecx
.p2align 0x4,,0x7
loop_800:
	movq 0x0(%r15),%r14
	movslq %ecx,%r13
	movq 0x8(%r15),%r11
	movq 0x0(%r11,%r13,8),%r10
	cmpq $0x1,%r10
	jne L_400968
L_66259:
	incl %ecx
	jo L_66152
L_66260:
	jmp loop_800
.p2align 0x4
L_400968:
L_66257:
	incl %ecx
	jo L_66152
L_66258:
	movl %ecx,0x0(%r14)
	movq %r10,%r15
	jmp L_66125
.p2align 0x4
L_400970:
L_66255:
	movslq %r14d,%r15
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r13
	movq 0x0(%r13,%r15,8),%r11
	movq 0x0(%r11),%r15
	movq 0x20(%r11),%r14
	movl $0x1,0x0(%r14)
	jmp L_66125
.p2align 0x4
L_400971:
L_66253:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x30(%rbp)
	movslq %r14d,%r13
	movq 0x8(%r15),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq %r11,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_66254+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1375
.p2align 0x4
L_400972:
L_66246:
	movslq %r14d,%r15
	movq 0x0(%rbp),%r14
	movq 0x8(%r14),%r13
	movq 0x0(%r13,%r15,8),%r11
	movq 0x0(%r14),%r13
	movq 0x8(%r13),%r15
	movq 0x0(%r13),%r10
	movq %r11,%r14
	andq $0x1,%r14
	cmpq $0x1,%r14
	jne L_400974
L_66250:
	shrq $0x1,%r11
	movl %r11d,%r14d
	movslq %r14d,%r13
	cmpq 0xFFFFFFFFFFFFFFF0(%r15),%r13
	jnb L_66177
L_66252:
	movq 0x0(%r15,%r13,8),%r14
	movq %r14,%r15
.p2align 0x4,,0x7
L_66249:
	movq 0x20(%r15),%r14
	movq 0x0(%r15),%r15
	movl $0x1,0x0(%r14)
	jmp L_66125
.p2align 0x4
L_400974:
L_66247:
	movq %r11,0x28(%rbp)
	movq %r10,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_66248+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1375
.p2align 0x4
L_400975:
L_66239:
	movslq %r14d,%r15
	movq 0x0(%rbp),%r13
	movq 0x8(%r13),%r11
	movq 0x0(%r11,%r15,8),%r14
	movq 0x0(%r13),%r11
	movq 0x8(%r11),%r15
	movq 0x0(%r11),%r10
	movq %r14,%r13
	andq $0x1,%r13
	cmpq $0x1,%r13
	jne L_400977
L_66243:
	shrq $0x1,%r14
	movl %r14d,%r13d
	movslq %r13d,%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	jnb L_66177
L_66245:
	movq 0x0(%r15,%r14,8),%r13
	movq 0x8(%r13),%r13
	movq %r13,%r15
	movq %r10,%r14
L_66241:
	movq %r15,0x28(%rbp)
	movq %r14,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_66242+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1375
.p2align 0x4
L_400977:
L_66240:
	movq %r14,%r15
	movq %r10,%r14
	jmp L_66241
.p2align 0x4
L_400978:
L_66226:
	movslq %r14d,%r15
	movq 0x0(%rbp),%r14
	movq 0x8(%r14),%r13
	movq 0x0(%r13,%r15,8),%r11
	movq %r11,0x20(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x28(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x40(%rbp)
	movq %r11,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_66227+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_61
.p2align 0x4
L_400979:
L_66213:
	movslq %r14d,%r15
	movq 0x0(%rbp),%r14
	movq 0x8(%r14),%r13
	movq 0x0(%r13,%r15,8),%r11
	movq %r11,0x20(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x28(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x40(%rbp)
	movq %r11,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_66214+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_61
.p2align 0x4
L_400980:
L_66212:
	movq 0x0(%rbp),%r13
	movq 0x0(%r13),%r11
	movslq %r14d,%r15
	movq 0x0(%r11,%r15,8),%r14
	movq 0x8(%r14),%r11
	movq %r11,%r15
	jmp L_66125
.p2align 0x4
L_400981:
L_66207:
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r13
	movl 0x0(%r13),%ecx
.p2align 0x4,,0x7
loop_799:
	movq 0x0(%r15),%r14
	movslq %ecx,%r13
	movq 0x8(%r15),%r11
	movq 0x0(%r11,%r13,8),%r10
	cmpq $0x1,%r10
	jne L_400983
L_66210:
	incl %ecx
	jo L_66152
L_66211:
	jmp loop_799
.p2align 0x4
L_400983:
L_66208:
	incl %ecx
	jo L_66152
L_66209:
	movl %ecx,0x0(%r14)
	movq %r10,%r15
	jmp L_66125
.p2align 0x4
L_400985:
L_66202:
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r13
	movl 0x0(%r13),%ecx
.p2align 0x4,,0x7
loop_798:
	movq 0x0(%r15),%r14
	movslq %ecx,%r13
	movq 0x8(%r15),%r11
	movq 0x0(%r11,%r13,8),%r10
	cmpq $0x1,%r10
	jne L_400987
L_66205:
	incl %ecx
	jo L_66152
L_66206:
	jmp loop_798
.p2align 0x4
L_400987:
L_66203:
	incl %ecx
	jo L_66152
L_66204:
	movl %ecx,0x0(%r14)
	movq %r10,%r15
	jmp L_66125
.p2align 0x4
L_400989:
L_66197:
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r13
	movl 0x0(%r13),%ecx
.p2align 0x4,,0x7
loop_797:
	movq 0x0(%r15),%r14
	movslq %ecx,%r13
	movq 0x8(%r15),%r11
	movq 0x0(%r11,%r13,8),%r10
	cmpq $0x1,%r10
	jne L_400991
L_66200:
	incl %ecx
	jo L_66152
L_66201:
	jmp loop_797
.p2align 0x4
L_400991:
L_66198:
	incl %ecx
	jo L_66152
L_66199:
	movl %ecx,0x0(%r14)
	movq %r10,%r15
	jmp L_66125
.p2align 0x4
L_400993:
L_66196:
	movslq %r14d,%r15
	movq 0x0(%rbp),%r14
	movq 0x8(%r14),%r13
	movq 0x0(%r13,%r15,8),%r11
	movq %r11,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x38(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_66195+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp replaceVar_0
.p2align 0x4
L_400994:
L_66194:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x28(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x38(%rbp)
	movslq %r14d,%r13
	movq 0x10(%r15),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq %r11,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_66195+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp replaceVar_0
.p2align 0x4
L_400995:
L_66189:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_66190+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_400996:
L_66184:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_66185+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_400997:
L_66179:
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r13
	movl 0x0(%r13),%ecx
.p2align 0x4,,0x7
loop_796:
	movq 0x0(%r15),%r14
	movslq %ecx,%r13
	movq 0x8(%r15),%r11
	movq 0x0(%r11,%r13,8),%r10
	cmpq $0x1,%r10
	jne L_400999
L_66182:
	incl %ecx
	jo L_66152
L_66183:
	jmp loop_796
.p2align 0x4
L_400999:
L_66180:
	incl %ecx
	jo L_66152
L_66181:
	movl %ecx,0x0(%r14)
	movq %r10,%r15
	jmp L_66125
.p2align 0x4
L_401001:
L_66175:
	movq 0x0(%rbp),%r13
	movq 0x0(%r13),%r11
	movslq %r14d,%r15
	cmpq 0xFFFFFFFFFFFFFFF0(%r11),%r15
	jnb L_66177
L_66178:
	movq 0x0(%r11,%r15,8),%r11
	movq %r11,%r15
	jmp L_66125
.p2align 0x4
L_401003:
L_66142:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x30(%rbp)
	movslq %r14d,%r13
	salq $0x4,%r13
	movq 0x8(%r15),%r14
	movq 0x8(%r14,%r13,1),%r11
	movq %r11,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_66143+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_5
.p2align 0x4
L_401004:
L_66137:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_66138+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_401005:
L_66136:
	movq 0x0(%rbp),%r13
	movq 0x0(%r13),%r11
	movslq %r14d,%r15
	salq $0x4,%r15
	movq 0x8(%r11,%r15,1),%r14
	movq 0x8(%r14),%r11
	movq %r11,%r15
	jmp L_66125
.p2align 0x4
L_401006:
L_66135:
	movq 0x0(%rbp),%r13
	movq 0x0(%r13),%r11
	movslq %r14d,%r15
	movq 0x0(%r11,%r15,8),%r14
	movq 0x0(%r14),%r11
	movq %r11,%r15
	jmp L_66125
.p2align 0x4
L_401007:
L_66133:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x30(%rbp)
	movslq %r14d,%r13
	movq 0x8(%r15),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq %r11,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_66134+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1322
.p2align 0x4
L_401008:
L_66131:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x30(%rbp)
	movslq %r14d,%r13
	movq 0x8(%r15),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq %r11,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_66132+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1322
.p2align 0x4
L_401009:
L_66127:
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_66130
L_66128:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r14,1)
	movq %r13,0x0(%r15)
	movq 0x0(%r11),%r15
	jmp L_66125
.p2align 0x4
L_401011:
L_66126:
	movq 0x0(%rbp),%r13
	movq 0x0(%r13),%r11
	movslq %r14d,%r15
	movq 0x0(%r11,%r15,8),%r14
	movq 0x10(%r14),%r11
	movq %r11,%r15
	jmp L_66125
.p2align 0x4
L_401012:
L_66710:
	movq (globalObjptr+0x4A0)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_401013:
L_66121:
	movq 0x8(%rbp),%r14
	movq $0x6ED,0xFFFFFFFFFFFFFFF8(%r14)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_401014:
L_66711:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_66712+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66712
.p2align 0x4
.long 0x45C
L_66712:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	jmp L_66120
.p2align 0x4
L_401015:
L_66713:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_401016:
L_66714:
	movq (globalObjptr+0x4B8)(%rip),%r15
	movq %r15,0x8(%rbp)
	jmp L_66119
.p2align 0x4
.long 0x557
L_66695:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x20(%r15),%r14
	movl 0x0(%r14),%r13d
	testl %r13d,%r13d
	movq %r15,0x30(%rbp)
	jnz L_401018
L_66696:
	movq 0x20(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_66697+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_401018:
L_66701:
	movq 0x20(%rbp),%r15
	jmp L_66125
.p2align 0x4
.long 0x5F8
L_66705:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r14),%r15
	movq 0x20(%r14),%r13
	movl $0x1,0x0(%r13)
	jmp L_66125
.p2align 0x4
.long 0x5F8
L_66703:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r14),%r15
	movq 0x20(%r14),%r13
	movl $0x1,0x0(%r13)
	jmp L_66125
.p2align 0x4
.long 0x557
L_66682:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x20(%r15),%r14
	movl 0x0(%r14),%r13d
	testl %r13d,%r13d
	movq %r15,0x30(%rbp)
	jnz L_401019
L_66683:
	movq 0x20(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_66684+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_401019:
L_66688:
	movq 0x20(%rbp),%r15
	jmp L_66125
.p2align 0x4
.long 0x5F8
L_66692:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r14),%r15
	movq 0x20(%r14),%r13
	movl $0x1,0x0(%r13)
	jmp L_66125
.p2align 0x4
.long 0x5F8
L_66690:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r14),%r15
	movq 0x20(%r14),%r13
	movl $0x1,0x0(%r13)
	jmp L_66125
.p2align 0x4
.long 0x557
L_66669:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x20(%r15),%r14
	movl 0x0(%r14),%r13d
	testl %r13d,%r13d
	movq %r15,0x30(%rbp)
	jnz L_401020
L_66670:
	movq 0x20(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_66671+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_401020:
L_66675:
	movq 0x20(%rbp),%r15
	jmp L_66125
.p2align 0x4
.long 0x5F8
L_66679:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r14),%r15
	movq 0x20(%r14),%r13
	movl $0x1,0x0(%r13)
	jmp L_66125
.p2align 0x4
.long 0x5F8
L_66677:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r14),%r15
	movq 0x20(%r14),%r13
	movl $0x1,0x0(%r13)
	jmp L_66125
.p2align 0x4
.long 0x5F8
L_66630:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq $0x1,%r15
	je L_401021
L_66631:
	jmp L_66125
.p2align 0x4
L_401021:
L_66632:
	movq (globalObjptr+0xDFE0)(%rip),%r14
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_66633+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5F8
L_66619:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl 0x28(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_66620
L_66621:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_66622+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66622
.p2align 0x4
.long 0x495
L_66622:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_66620:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x20(%rbp),%r14d
	movl %r14d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xCE38)(%rip),%r14
	movq %r14,0x18(%r13)
	movq %r13,%r15
	jmp L_66125
.p2align 0x4
.long 0x5F8
L_66195:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	jmp L_66125
.p2align 0x4
.long 0x5F8
L_66599:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl 0x28(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_66600
L_66601:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_66602+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66602
.p2align 0x4
.long 0x495
L_66602:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_66600:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x20(%rbp),%r14d
	movl %r14d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xCE38)(%rip),%r14
	movq %r14,0x18(%r13)
	movq %r13,%r15
	jmp L_66125
.p2align 0x4
.long 0x557
L_66586:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r14
	movq %r14,0x30(%rbp)
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je bug_142
L_66587:
	movq 0x8(%r15),%r14
	cmpq $0x1,%r14
	je bug_695
L_66588:
	movq %r14,%r15
	jmp L_66125
.p2align 0x4
bug_695:
bug_142:
	movq 0x20(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_66590+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
.long 0x5F8
L_66581:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r14),%r15
	movq 0x20(%r14),%r13
	movl $0x1,0x0(%r13)
	jmp L_66125
.p2align 0x4
.long 0x5F8
L_66573:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	jmp L_66574
.p2align 0x4
.long 0x5F8
L_66570:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r14),%r15
	movq 0x20(%r14),%r13
	movl $0x1,0x0(%r13)
	jmp L_66125
.p2align 0x4
.long 0x557
L_66558:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x20(%r15),%r14
	movl 0x0(%r14),%r13d
	testl %r13d,%r13d
	movq %r15,0x30(%rbp)
	jnz L_401024
L_66559:
	movq 0x20(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_66560+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_401024:
L_66564:
	movq 0x20(%rbp),%r15
	jmp L_66125
.p2align 0x4
.long 0x5F8
L_66568:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r14),%r15
	movq 0x20(%r14),%r13
	movl $0x1,0x0(%r13)
	jmp L_66125
.p2align 0x4
.long 0x5F8
L_66566:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r14),%r15
	movq 0x20(%r14),%r13
	movl $0x1,0x0(%r13)
	jmp L_66125
.p2align 0x4
.long 0x1
L_66276:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_66277+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x557
isUnit_0:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r14
	movq %r14,0x30(%rbp)
	movq 0x8(%r14),%r15
L_66313:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_66314
L_66315:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xEB2,%r14
	jne L_66314
L_66316:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r10,%r13
	jne L_401026
L_66318:
	testl %r11d,%r11d
	jnz L_401025
L_66320:
	movq 0x28(%rbp),%r15
	jmp L_66125
.p2align 0x4
L_401025:
L_66314:
	movq 0x20(%rbp),%r15
	jmp L_66125
.p2align 0x4
L_401026:
L_66317:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x456
L_66533:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq $0x1,%r15
	je L_401029
L_66534:
	jmp L_66125
.p2align 0x4
L_401029:
L_66535:
	movq 0x20(%rbp),%r14
	xchgq %r14,%r15
	jmp L_66125
.p2align 0x4
.long 0x5F8
L_66528:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl 0x28(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_66529
L_66530:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_66531+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66531
.p2align 0x4
.long 0x495
L_66531:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_66529:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x20(%rbp),%r14d
	movl %r14d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xCE38)(%rip),%r14
	movq %r14,0x18(%r13)
	movq %r13,%r15
	jmp L_66125
.p2align 0x4
.long 0x456
L_66522:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq $0x1,%r15
	je L_401031
L_66523:
	jmp L_66125
.p2align 0x4
L_401031:
L_66524:
	movq 0x20(%rbp),%r14
	xchgq %r14,%r15
	jmp L_66125
.p2align 0x4
.long 0x557
L_66516:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_66517+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp global_0
.p2align 0x4
.long 0x456
L_66511:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq $0x1,%r15
	je L_401032
L_66512:
	jmp L_66125
.p2align 0x4
L_401032:
L_66513:
	movq 0x20(%rbp),%r14
	xchgq %r14,%r15
	jmp L_66125
.p2align 0x4
.long 0x456
L_66507:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r14),%r13
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_401033
L_66508:
	movq 0x0(%r15),%r14
	movq %r14,%r15
	jmp L_66125
.p2align 0x4
L_401033:
L_66509:
	movq 0x20(%rbp),%r15
	jmp L_66125
.p2align 0x4
.long 0x557
x_157:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r14
	movq %r14,0x30(%rbp)
	movq 0x18(%r14),%r13
	movq 0x20(%rbp),%r11
	movl 0x0(%r11),%r10d
	movl %r10d,0x0(%r13)
	incl %r10d
	jo L_66152
L_66503:
	movl %r10d,0x0(%r11)
	movq 0x28(%rbp),%r15
	jmp L_66125
.p2align 0x4
.long 0x5F8
L_66497:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r14),%r15
	movq 0x20(%r14),%r13
	movl $0x1,0x0(%r13)
	jmp L_66125
.p2align 0x4
.long 0x5F8
L_66489:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	jmp L_66490
.p2align 0x4
.long 0x456
L_66482:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movl 0x30(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_66483
L_66484:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_66485+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66485
.p2align 0x4
.long 0xF7B
L_66485:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_66483:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x28(%rbp),%r14d
	movl %r14d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq 0x20(%rbp),%r14
	movq %r14,0x18(%r13)
	movq %r13,%r15
	jmp L_66125
.p2align 0x4
.long 0x557
L_66464:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_66465+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp global_0
.p2align 0x4
.long 0x456
L_66477:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq $0x1,%r15
	je L_401036
L_66478:
	jmp L_66125
.p2align 0x4
L_401036:
L_66479:
	movq 0x20(%rbp),%r14
	xchgq %r14,%r15
	jmp L_66125
.p2align 0x4
.long 0x456
L_66473:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq $0x1,%r15
	je L_401037
L_66474:
	jmp L_66125
.p2align 0x4
L_401037:
L_66475:
	movq 0x20(%rbp),%r14
	xchgq %r14,%r15
	jmp L_66125
.p2align 0x4
.long 0x456
L_66469:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r14),%r13
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_401038
L_66470:
	movq 0x0(%r15),%r14
	movq %r14,%r15
	jmp L_66125
.p2align 0x4
L_401038:
L_66471:
	movq 0x20(%rbp),%r15
	jmp L_66125
.p2align 0x4
.long 0x5F8
L_66413:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl 0x28(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_66414
L_66415:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_66416+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66416
.p2align 0x4
.long 0x495
L_66416:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_66414:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x20(%rbp),%r14d
	movl %r14d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xCE38)(%rip),%r14
	movq %r14,0x18(%r13)
	movq %r13,%r15
	jmp L_66125
.p2align 0x4
.long 0x5F8
L_66408:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl 0x28(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_66409
L_66410:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_66411+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66411
.p2align 0x4
.long 0x495
L_66411:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_66409:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x20(%rbp),%r14d
	movl %r14d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xCE38)(%rip),%r14
	movq %r14,0x18(%r13)
	movq %r13,%r15
	jmp L_66125
.p2align 0x4
.long 0x557
L_66396:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x20(%r15),%r14
	movl 0x0(%r14),%r13d
	testl %r13d,%r13d
	movq %r15,0x30(%rbp)
	jnz L_401041
L_66397:
	movq 0x20(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_66398+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_401041:
L_66402:
	movq 0x20(%rbp),%r15
	jmp L_66125
.p2align 0x4
.long 0x5F8
L_66406:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r14),%r15
	movq 0x20(%r14),%r13
	movl $0x1,0x0(%r13)
	jmp L_66125
.p2align 0x4
.long 0x5F8
L_66404:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r14),%r15
	movq 0x20(%r14),%r13
	movl $0x1,0x0(%r13)
	jmp L_66125
.p2align 0x4
.long 0x5F8
L_66389:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	jmp L_66390
.p2align 0x4
.long 0x5F8
L_66383:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r14),%r15
	movq 0x20(%r14),%r13
	movl $0x1,0x0(%r13)
	jmp L_66125
.p2align 0x4
.long 0x5F8
L_66377:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r14),%r13
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_401042
L_66378:
	movq 0x0(%r15),%r14
	movq %r14,%r15
	jmp L_66125
.p2align 0x4
L_401042:
L_66379:
	movq $0x9,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x5F8
L_66361:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl 0x28(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_66362
L_66363:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_66364+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66364
.p2align 0x4
.long 0x495
L_66364:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_66362:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x20(%rbp),%r14d
	movl %r14d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xCE38)(%rip),%r14
	movq %r14,0x18(%r13)
	movq %r13,%r15
	jmp L_66125
.p2align 0x4
.long 0x456
L_66344:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq $0x1,%r15
	je L_401044
L_66345:
	jmp L_66125
.p2align 0x4
L_401044:
L_66346:
	movq 0x20(%rbp),%r14
	xchgq %r14,%r15
	jmp L_66125
.p2align 0x4
.long 0x5F8
L_66254:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r14),%r15
	movq 0x20(%r14),%r13
	movl $0x1,0x0(%r13)
	jmp L_66125
.p2align 0x4
.long 0x5F8
L_66248:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	jmp L_66249
.p2align 0x4
.long 0x5F8
L_66242:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r14),%r15
	movq 0x20(%r14),%r13
	movl $0x1,0x0(%r13)
	jmp L_66125
.p2align 0x4
.long 0x557
L_66227:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r14
	movq %r14,0x30(%rbp)
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je bug_139
L_66228:
	movq 0x8(%r15),%r14
	cmpq $0x1,%r14
	je bug_697
L_66229:
	movq %r14,%r15
	jmp L_66125
.p2align 0x4
bug_697:
bug_139:
	movq 0x20(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_66231+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
.long 0x557
L_66214:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r14
	movq %r14,0x30(%rbp)
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je bug_137
L_66215:
	movq 0x8(%r15),%r14
	cmpq $0x1,%r14
	je bug_699
L_66216:
	movq %r14,%r15
	jmp L_66125
.p2align 0x4
bug_699:
bug_137:
	movq 0x20(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_66218+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
.long 0x5F8
L_66190:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl 0x28(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_66191
L_66192:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_66193+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66193
.p2align 0x4
.long 0x495
L_66193:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_66191:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x20(%rbp),%r14d
	movl %r14d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xCE38)(%rip),%r14
	movq %r14,0x18(%r13)
	movq %r13,%r15
	jmp L_66125
.p2align 0x4
.long 0x5F8
L_66185:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl 0x28(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_66186
L_66187:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_66188+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66188
.p2align 0x4
.long 0x495
L_66188:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_66186:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x20(%rbp),%r14d
	movl %r14d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xCE38)(%rip),%r14
	movq %r14,0x18(%r13)
	movq %r13,%r15
	jmp L_66125
.p2align 0x4
.long 0x5F8
L_66143:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq $0x1,%r15
	je L_401047
L_66144:
	jmp L_66125
.p2align 0x4
L_401047:
L_66145:
	movq (globalObjptr+0xDFE0)(%rip),%r14
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_66146+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5F8
L_66138:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl 0x28(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_66139
L_66140:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_66141+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66141
.p2align 0x4
.long 0x495
L_66141:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_66139:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x20(%rbp),%r14d
	movl %r14d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xCE38)(%rip),%r14
	movq %r14,0x18(%r13)
	movq %r13,%r15
	jmp L_66125
.p2align 0x4
.long 0x5F8
L_66134:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r14
	movq %r14,0x20(%rbp)
	movq 0x10(%r14),%r13
	movq 0x0(%r13),%r13
	movq %r13,%r15
	jmp L_66125
.p2align 0x4
.long 0x5F8
L_66132:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r14
	movq %r14,0x20(%rbp)
	movq 0x10(%r14),%r13
	movq 0x0(%r13),%r13
	movq %r13,%r15
	jmp L_66125
.p2align 0x4
.long 0x52B
L_66697:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movl 0x48(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_66698
L_66699:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_66700+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66700
.p2align 0x4
.long 0x5C1
L_66700:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_66698:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x20(%rbp),%r14d
	movl %r14d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq 0x30(%rbp),%r14
	movq %r14,0x18(%r13)
	movq 0x38(%rbp),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	movq %r13,%r15
	jmp L_66125
.p2align 0x4
.long 0x52B
L_66684:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movl 0x48(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_66685
L_66686:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_66687+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66687
.p2align 0x4
.long 0x5C1
L_66687:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_66685:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x20(%rbp),%r14d
	movl %r14d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq 0x30(%rbp),%r14
	movq %r14,0x18(%r13)
	movq 0x38(%rbp),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	movq %r13,%r15
	jmp L_66125
.p2align 0x4
.long 0x52B
L_66671:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movl 0x48(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_66672
L_66673:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_66674+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66674
.p2align 0x4
.long 0x5C1
L_66674:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_66672:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x20(%rbp),%r14d
	movl %r14d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq 0x30(%rbp),%r14
	movq %r14,0x18(%r13)
	movq 0x38(%rbp),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	movq %r13,%r15
	jmp L_66125
.p2align 0x4
.long 0x1
L_66633:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_66634+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1
L_66590:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_66591
L_66595:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_66596+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66596
.p2align 0x4
.long 0x451
L_66596:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_66591:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xEF88)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_143+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x52B
L_66560:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movl 0x48(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_66561
L_66562:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_66563+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66563
.p2align 0x4
.long 0x5C1
L_66563:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_66561:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x20(%rbp),%r14d
	movl %r14d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq 0x30(%rbp),%r14
	movq %r14,0x18(%r13)
	movq 0x38(%rbp),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	movq %r13,%r15
	jmp L_66125
.p2align 0x4
.long 0x1
L_66277:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_66278+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x456
L_66517:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r14
	movq %r14,0x28(%rbp)
	cmpq $0x1,%r14
	je L_401054
L_66518:
	movq 0x8(%r14),%r15
	jmp L_66125
.p2align 0x4
L_401054:
L_66519:
	movq 0x20(%rbp),%r15
	jmp L_66125
.p2align 0x4
.long 0x456
L_66465:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r14
	movq %r14,0x28(%rbp)
	cmpq $0x1,%r14
	je L_401055
L_66466:
	movq 0x8(%r14),%r15
	jmp L_66125
.p2align 0x4
L_401055:
L_66467:
	movq 0x20(%rbp),%r15
	jmp L_66125
.p2align 0x4
.long 0x52B
L_66398:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movl 0x48(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_66399
L_66400:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_66401+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66401
.p2align 0x4
.long 0x5C1
L_66401:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_66399:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x20(%rbp),%r14d
	movl %r14d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq 0x30(%rbp),%r14
	movq %r14,0x18(%r13)
	movq 0x38(%rbp),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	movq %r13,%r15
	jmp L_66125
.p2align 0x4
.long 0x1
L_66231:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_66232
L_66236:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_66237+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66237
.p2align 0x4
.long 0x451
L_66237:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_66232:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xEF88)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_140+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x1
L_66218:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_66219
L_66223:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_66224+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66224
.p2align 0x4
.long 0x451
L_66224:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_66219:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xEF88)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_138+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x1
L_66146:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_66147+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4AF
L_66634:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xEF98)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_66635+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1
bug_143:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_66592
L_66593:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_66594+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66594
.p2align 0x4
.long 0x451
L_66594:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_66592:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4AF
L_66278:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xEF90)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_66279+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1
bug_140:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_66233
L_66234:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_66235+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66235
.p2align 0x4
.long 0x451
L_66235:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_66233:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
bug_138:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_66220
L_66221:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_66222+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66222
.p2align 0x4
.long 0x451
L_66222:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_66220:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4AF
L_66147:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xEF80)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_66148+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5AF
L_66635:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_66636+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5AF
L_66279:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_66280+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5AF
L_66148:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_66149+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x51E
L_66636:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_66637
L_66659:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_66660+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66660
.p2align 0x4
.long 0x4AE
L_66660:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_66637:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_66638:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_66152
L_66639:
	cmpq $0x1,%r14
	je L_401062
L_66640:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_66638
.p2align 0x4
L_401062:
L_66641:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_66642
L_66657:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_66658+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66658
.p2align 0x4
.long 0x4E6
L_66658:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_66642:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_401063
L_66643:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
toString_62:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	addq $0x8,%rbp
	leaq (rev_62+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_401063:
L_66656:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_62
.p2align 0x4
.long 0x51E
L_66280:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_66281
L_66303:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_66304+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66304
.p2align 0x4
.long 0x4AE
L_66304:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_66281:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_66282:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_66152
L_66283:
	cmpq $0x1,%r14
	je L_401067
L_66284:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_66282
.p2align 0x4
L_401067:
L_66285:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_66286
L_66301:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_66302+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66302
.p2align 0x4
.long 0x4E6
L_66302:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_66286:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_401068
L_66287:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
toString_61:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	addq $0x8,%rbp
	leaq (rev_61+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_401068:
L_66300:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_61
.p2align 0x4
.long 0x51E
L_66149:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_66150
L_66173:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_66174+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66174
.p2align 0x4
.long 0x4AE
L_66174:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_66150:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_66151:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_66152
L_66153:
	cmpq $0x1,%r14
	je L_401072
L_66154:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_66151
.p2align 0x4
L_401072:
L_66155:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_66156
L_66171:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_66172+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66172
.p2align 0x4
.long 0x4E6
L_66172:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_66156:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_401073
L_66157:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
toString_60:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	addq $0x8,%rbp
	leaq (rev_60+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_401073:
L_66170:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_60
.p2align 0x4
.long 0x1
rev_62:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_401079
L_66644:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_66645:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_401078
.p2align 0x4,,0x7
L_66646:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_401077
L_66647:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_66645
.p2align 0x4
L_401077:
L_66649:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_144+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_401078:
L_66653:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_66654+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66654
.p2align 0x4
.long 0x45B
L_66654:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_66646
.p2align 0x4
L_401079:
L_66655:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_66649
.p2align 0x4
.long 0x1
rev_61:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_401082
L_66288:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_66289:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_401081
.p2align 0x4,,0x7
L_66290:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_401080
L_66291:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_66289
.p2align 0x4
L_401080:
L_66293:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_141+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_401081:
L_66297:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_66298+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66298
.p2align 0x4
.long 0x45B
L_66298:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_66290
.p2align 0x4
L_401082:
L_66299:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_66293
.p2align 0x4
.long 0x1
rev_60:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_401085
L_66158:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_66159:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_401084
.p2align 0x4,,0x7
L_66160:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_401083
L_66161:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_66159
.p2align 0x4
L_401083:
L_66163:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_136+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_401084:
L_66167:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_66168+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66168
.p2align 0x4
.long 0x45B
L_66168:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_66160
.p2align 0x4
L_401085:
L_66169:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_66163
.p2align 0x4
.long 0x1
bug_144:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_66650
L_66651:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_66652+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66652
.p2align 0x4
.long 0x451
L_66652:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_66650:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
bug_141:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_66294
L_66295:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_66296+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66296
.p2align 0x4
.long 0x451
L_66296:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_66294:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
bug_136:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_66164
L_66165:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_66166+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66166
.p2align 0x4
.long 0x451
L_66166:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_66164:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl peek_5
.hidden peek_5
peek_5:
L_66717:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_66718
L_66744:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_66745+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66745
.p2align 0x4
.long 0x45F
L_66745:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_66718:
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_401099
L_66720:
	movq %r15,0x0(%r13)
	movq 0x0(%rbp),%r13
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_401098
L_66721:
	movq 0x0(%r11),%r14
	movq 0x8(%r11),%r11
	xorl %ecx,%ecx
	movq %r11,%r15
.p2align 0x4,,0x7
L_66723:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_66724
L_66735:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xCB4,%r13
	jne L_66724
L_66736:
	movq 0x8(%r14),%r13
	movq 0x8(%rbp),%r11
	cmpq %r11,0x0(%r14)
	je L_401093
L_66724:
	incl %ecx
	jo L_401092
L_66726:
	cmpq $0x1,%r15
	je L_401089
L_66727:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_66723
.p2align 0x4
L_401089:
L_66728:
L_66729:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_401091
L_66731:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_66733
L_66734:
	movl %ecx,0x0(%r15)
L_66733:
	movq $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_401091:
L_66730:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_401092:
L_66725:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_401093:
L_66738:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_66730
L_66739:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_401094
L_66742:
	movl %ecx,0x0(%r14)
	movq %r13,%r15
L_66741:
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_401094:
	movq %r13,%r15
	jmp L_66741
.p2align 0x4
L_401098:
L_66743:
	xorl %ecx,%ecx
	jmp L_66729
.p2align 0x4
L_401099:
L_66719:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl replaceVar_0
.hidden replaceVar_0
replaceVar_0:
L_66746:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_66800
L_66747:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_401119
L_66748:
	movq 0x10(%rbp),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x18(%rbp)
	movq 0x0(%r11),%r10
	movq %r10,0x20(%rbp)
	movq 0x0(%rbp),%r10
	movq 0x0(%r10),%r9
	movq %r9,0x28(%rbp)
	movq 0x8(%r10),%r9
	movq %r9,0x30(%rbp)
	movq 0x10(%r10),%r9
	movq %r9,0x38(%rbp)
	movq 0x18(%r10),%r9
	movq %r9,0x40(%rbp)
	movq 0x10(%r11),%r10
	movq 0x8(%r10),%r14
	movq 0x0(%r10),%r9
	movq %r9,0x48(%rbp)
	movq 0x8(%rbp),%r11
	movq 0x10(%r11),%r10
	movq %r10,0x50(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_401118
L_66750:
	movq %r15,0x0(%r11)
	movq 0x0(%r10),%r11
	cmpq $0x1,%r11
	je L_401117
L_66751:
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r11
	movl $0x0,0x10(%rbp)
	movq %r11,%r15
.p2align 0x4,,0x7
L_66753:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_401116
L_66769:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xD54,%r11
	jne L_401115
L_66770:
	movq 0x8(%r13),%r11
	movq %r11,0x58(%rbp)
	cmpq %r14,0x0(%r13)
	movq %r14,(localObjptr+0x8)(%rip)
	je L_401106
L_66754:
	movl 0x10(%rbp),%r11d
	incl %r11d
	movl %r11d,0x14(%rbp)
	jo L_401105
L_66756:
	cmpq $0x1,%r15
	je L_401101
L_66757:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movl %r11d,0x10(%rbp)
	movq (localObjptr+0x8)(%rip),%r14
	jmp L_66753
.p2align 0x4
L_401101:
L_66758:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_66759
L_66767:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_66768+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66768
.p2align 0x4
.long 0xF87
L_66768:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_66759:
	movl 0x14(%rbp),%ecx
L_66760:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_401103
L_66762:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_66764
L_66766:
	movl %ecx,0x0(%r15)
L_66764:
	movq $0x1AA9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq 0x50(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
L_66765:
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_401103:
L_66761:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_401105:
L_66755:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_401106:
L_66772:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_66773
L_66797:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_66798+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66798
.p2align 0x4
.long 0xF8A
L_66798:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_66773:
	movl 0x10(%rbp),%r13d
	movslq %r13d,%r15
	movq (globalObjptr+0x1070)(%rip),%r11
	addq 0x0(%r11),%r15
	jo L_66761
L_66774:
	movq %r15,0x0(%r11)
	movq (globalObjptr+0x1078)(%rip),%r11
	cmpl %r13d,0x0(%r11)
	jl L_401111
L_66775:
	movq 0x58(%rbp),%r13
	cmpq $0x1,%r13
	je L_66765
L_66776:
	movq 0x18(%r13),%r14
	movq 0x10(%r13),%r11
	movq %r11,0x10(%rbp)
	movq 0x8(%r13),%r15
	movq 0x0(%r13),%r11
	movq %r11,0x48(%rbp)
L_66777:
	movq 0x48(%rbp),%r13
	movq 0x0(%r13),%r11
L_66778:
	movq %r11,%r13
	andq $0x3,%r13
	jz L_401109
L_66779:
	movq 0x30(%rbp),%r13
	cmpq %r15,%r13
	je L_401108
L_66780:
	movq 0x0(%r14),%r15
	cmpq $0x1,%r15
	je new_4
L_66781:
	movq 0x0(%r15),%r10
	movq 0x8(%r10),%r9
	cmpq %r13,0x0(%r10)
	jne new_28
L_66789:
	movq %r9,0x28(%rbp)
L_66784:
	movq 0x8(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_66785+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
new_28:
new_4:
	movq 0x38(%rbp),%r15
	movl 0x0(%r15),%r13d
	movq 0x40(%rbp),%r11
	movq 0x0(%r11),%r10
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r10,0x8(%r9)
	addq $0x18,%r12
	movq 0x8(%rbp),%r10
	movq %r10,0x0(%r9)
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r10,1)
	movq %r9,0x0(%r11)
	movl %r13d,%r11d
	incl %r11d
	jo L_66755
L_66783:
	movl %r11d,0x0(%r15)
	movq $0x1E7B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r11
	movq %r11,0x0(%r15)
	movq $0x1E51,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movl %r13d,0x0(%r11)
	movq %r15,0x8(%r11)
	addq $0x18,%r12
	movl $0x0,0x4(%r11)
	movq $0x10B3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x8(%r15)
	movq %r11,0x28(%rbp)
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x0(%r14),%r13
	movq $0x2721,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%r8,%r15,1)
	movq %r11,0x0(%r14)
	jmp L_66784
.p2align 0x4
L_401108:
L_66791:
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_401109:
L_66792:
	movq %r11,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_401111:
L_66794:
	movq (globalObjptr+0x1078)(%rip),%r13
	movl 0x10(%rbp),%r11d
	movl %r11d,0x0(%r13)
	movq 0x58(%rbp),%r13
	cmpq $0x1,%r13
	je L_66765
L_66795:
	movq 0x18(%r13),%r14
	movq 0x10(%r13),%r11
	movq %r11,0x10(%rbp)
	movq 0x8(%r13),%r15
	movq 0x0(%r13),%r11
	movq %r11,0x48(%rbp)
	jmp L_66777
.p2align 0x4
L_401115:
	movq %r14,(localObjptr+0x8)(%rip)
	jmp L_66754
.p2align 0x4
L_401116:
	movq %r14,(localObjptr+0x8)(%rip)
	jmp L_66754
.p2align 0x4
L_401117:
L_66799:
	xorl %ecx,%ecx
	jmp L_66760
.p2align 0x4
L_401118:
L_66749:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_401119:
L_66800:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_66801+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66801
.p2align 0x4
.long 0x45B
L_66801:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_66748
.p2align 0x4
.long 0xF88
L_66785:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movl 0x58(%rbp),%r15d
	movl %r15d,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_66786
L_66787:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_66788+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66788
.p2align 0x4
.long 0xF89
L_66788:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_66786:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x18(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq 0x30(%rbp),%r15
	movq %r15,0x18(%r13)
	movq 0x48(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x0(%r15)
	movq $0x1E5F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x10(%r14)
	movq %r13,0x0(%rbp)
	addq $0x20,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x10(%rbp),%r13
	movq %r13,0x8(%r14)
	movq $0x10B5,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x18,%r12
	movq %r15,0x8(%r13)
	movq 0x20(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x271D,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r13,0x0(%r10)
	movq %r14,0x8(%r10)
	addq $0x18,%r12
	movq %r15,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r11,%r14,1)
	movq %r10,0x0(%r15)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl get_61
.hidden get_61
get_61:
L_66802:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_66803
L_66857:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_66858+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66858
.p2align 0x4
.long 0x45F
L_66858:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_66803:
	movq 0x8(%rbp),%r10
	movq 0x8(%r10),%r11
	movq 0x0(%r10),%r13
	movq 0x0(%rbp),%r10
	movq 0x10(%r10),%r15
	movq (globalObjptr+0x1068)(%rip),%r10
	movq 0x0(%r10),%r14
	incq %r14
	jo L_401131
L_66805:
	movq %r14,0x0(%r10)
	movq 0x0(%r15),%r10
	cmpq $0x1,%r10
	je L_401130
L_66806:
	movq 0x8(%r10),%r14
	movq 0x0(%r10),%r10
	xorl %ecx,%ecx
	movq %r10,%r15
.p2align 0x4,,0x7
L_66808:
	movq %r15,%r10
	andq $0x3,%r10
	jnz L_401129
L_66849:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r10
	shrq $0x1,%r10
	cmpq $0xD47,%r10
	jne L_401128
L_66850:
	movq 0x8(%r15),%r10
	cmpq 0x0(%r15),%r11
	movq %r11,(localObjptr+0x0)(%rip)
	je L_401125
L_66809:
	incl %ecx
	jo L_401124
L_66811:
	cmpq $0x1,%r14
	je L_401122
L_66812:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq (localObjptr+0x0)(%rip),%r11
	jmp L_66808
.p2align 0x4
L_401122:
L_66813:
L_66814:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_401123
L_66816:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl x_158
L_66848:
	movl %ecx,0x0(%r15)
x_158:
	movq %r13,0x10(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_66818+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_401123:
L_66815:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_401124:
L_66810:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_401125:
L_66852:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_66815
L_66853:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_401126
L_66855:
	movl %ecx,0x0(%r15)
	movq %r10,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_401126:
L_66854:
	movq %r10,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_401128:
	movq %r11,(localObjptr+0x0)(%rip)
	jmp L_66809
.p2align 0x4
L_401129:
	movq %r11,(localObjptr+0x0)(%rip)
	jmp L_66809
.p2align 0x4
L_401130:
L_66856:
	xorl %ecx,%ecx
	jmp L_66814
.p2align 0x4
L_401131:
L_66804:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_66818:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_66819+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1
L_66819:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_66820+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4AF
L_66820:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xEFA0)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_66821+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5AF
L_66821:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_66822+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x51E
L_66822:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_66823
L_66846:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_66847+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66847
.p2align 0x4
.long 0x4AE
L_66847:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_66823:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_66824:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_66810
L_66825:
	cmpq $0x1,%r14
	je L_401133
L_66826:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_66824
.p2align 0x4
L_401133:
L_66827:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_66828
L_66844:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_66845+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66845
.p2align 0x4
.long 0x4E6
L_66845:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_66828:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_401134
L_66829:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
toString_63:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	addq $0x8,%rbp
	leaq (rev_63+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_401134:
L_66843:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_63
.p2align 0x4
.long 0x1
rev_63:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_401140
L_66830:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_66831:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_401139
.p2align 0x4,,0x7
L_66832:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_401138
L_66833:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_66831
.p2align 0x4
L_401138:
L_66835:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_66836+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_401139:
L_66840:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_66841+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66841
.p2align 0x4
.long 0x45B
L_66841:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_66832
.p2align 0x4
L_401140:
L_66842:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_66835
.p2align 0x4
.long 0x1
L_66836:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_66837
L_66838:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_66839+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66839
.p2align 0x4
.long 0x451
L_66839:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_66837:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl get_62
.hidden get_62
get_62:
L_66859:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_66987
L_66860:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_401176
L_66861:
	movq 0x8(%rbp),%r11
	movq 0x48(%r11),%r14
	movq 0x40(%r11),%r10
	movq %r10,0x10(%rbp)
	movq 0x38(%r11),%r10
	movq %r10,0x18(%rbp)
	movq 0x30(%r11),%r10
	movq %r10,0x20(%rbp)
	movq 0x28(%r11),%r10
	movq %r10,0x28(%rbp)
	movq 0x20(%r11),%r10
	movq %r10,0x30(%rbp)
	movq 0x18(%r11),%r10
	movq %r10,0x38(%rbp)
	movq 0x10(%r11),%r10
	movq %r10,0x40(%rbp)
	movq 0x8(%r11),%r10
	movq %r10,0x48(%rbp)
	movq 0x0(%r11),%r10
	movq %r10,0x50(%rbp)
	movq 0x0(%rbp),%r11
	movq 0x10(%r11),%r10
	movq %r10,0x58(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_66862
L_66863:
	movq %r15,0x0(%r11)
	movq 0x0(%r10),%r11
	cmpq $0x1,%r11
	je L_401174
L_66864:
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r11
	xorl %ecx,%ecx
	movq %r11,%r15
.p2align 0x4,,0x7
L_66866:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_401173
L_66979:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xCB1,%r11
	jne L_401172
L_66980:
	movq 0x8(%r13),%r11
	cmpq 0x0(%r13),%r14
	movq %r14,(localObjptr+0x0)(%rip)
	je L_401169
L_66867:
	incl %ecx
	movl %ecx,0x60(%rbp)
	jo L_66868
L_66869:
	cmpq $0x1,%r15
	je L_401142
L_66870:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x0)(%rip),%r14
	jmp L_66866
.p2align 0x4
L_401142:
L_66871:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_66872
L_66977:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_66978+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66978
.p2align 0x4
.long 0xF9A
L_66978:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_66872:
	movl 0x60(%rbp),%ecx
L_66873:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_66874
L_66875:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_66877
L_66976:
	movl %ecx,0x0(%r15)
L_66877:
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x28DD,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x0(%r15)
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
L_66878:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_66879
L_66881:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xEB0,%r15
	je L_401163
	cmpq $0xEB1,%r15
	je L_401162
	cmpq $0xEB2,%r15
	je L_401160
	cmpq $0xEB3,%r15
	je L_401159
	cmpq $0xEB4,%r15
	je L_401144
	cmpq $0xEB5,%r15
	je L_401143
L_66879:
	movq 0x0(%rbp),%r15
L_66880:
	movq $0x1963,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	movq %r15,0x0(%rbp)
	addq $0x18,%r12
	movq 0x50(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x58(%rbp),%r15
	movq 0x0(%r15),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq %r11,0x0(%r15)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_401143:
L_66971:
	movq 0x0(%r14),%r15
	movq %r15,0x68(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_66972+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_62
.p2align 0x4
L_401144:
L_66909:
	movq 0x40(%rbp),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x10(%rbp)
	movq 0x0(%r11),%r10
	movq 0x0(%r14),%r11
	movq 0x10(%r11),%r9
	movq %r9,0x18(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_401158
L_66910:
	movq %r15,0x0(%r11)
	movq 0x0(%r9),%r11
	cmpq $0x1,%r11
	je L_401157
L_66911:
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r11
	movl $0x0,0x20(%rbp)
	movq %r11,%r15
	movq %r10,%r14
.p2align 0x4,,0x7
L_66913:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_401156
L_66960:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xD2C,%r11
	jne L_401155
L_66961:
	movq 0x8(%r13),%r11
	movq %r11,0x28(%rbp)
	cmpq %r14,0x0(%r13)
	movq %r14,(localObjptr+0x8)(%rip)
	je L_401151
L_66914:
	movl 0x20(%rbp),%r11d
	incl %r11d
	movl %r11d,0x24(%rbp)
	jo L_401150
L_66915:
	cmpq $0x1,%r15
	je L_401145
L_66916:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movl %r11d,0x20(%rbp)
	movq (localObjptr+0x8)(%rip),%r14
	jmp L_66913
.p2align 0x4
L_401145:
L_66917:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_66918
L_66958:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_66959+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66959
.p2align 0x4
.long 0xF96
L_66959:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_66918:
	movl 0x24(%rbp),%ecx
L_66919:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_401148
L_66920:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_66922
L_66957:
	movl %ecx,0x0(%r15)
L_66922:
	movq $0xFE5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x1A59,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq 0x18(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r10,0x0(%r13)
x_159:
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_401146
L_66923:
	movq %r14,0x68(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_66924+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_62
.p2align 0x4
L_401146:
L_66956:
	movq 0x0(%rbp),%r15
	jmp L_66880
.p2align 0x4
L_401148:
L_66874:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_401150:
L_66868:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_401151:
L_66963:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_66964
L_66968:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_66969+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66969
.p2align 0x4
.long 0xF97
L_66969:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_66964:
	movl 0x20(%rbp),%r14d
	movslq %r14d,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_66874
L_66965:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %r14d,0x0(%r13)
	jl L_401152
L_66966:
	movq 0x28(%rbp),%r15
	jmp x_159
.p2align 0x4
L_401152:
L_66967:
	movq (globalObjptr+0x1078)(%rip),%r14
	movl 0x20(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movq 0x28(%rbp),%r15
	jmp x_159
.p2align 0x4
L_401155:
	movq %r14,(localObjptr+0x8)(%rip)
	jmp L_66914
.p2align 0x4
L_401156:
	movq %r14,(localObjptr+0x8)(%rip)
	jmp L_66914
.p2align 0x4
L_401157:
L_66970:
	xorl %ecx,%ecx
	jmp L_66919
.p2align 0x4
L_401158:
L_66862:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_401159:
L_66904:
	movq 0x0(%r14),%r15
	movq %r15,0x68(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_66905+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_62
.p2align 0x4
L_401160:
L_66896:
	movq 0x0(%r14),%r15
	movq $0x4B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x10(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r13,%r10
	jne L_401161
L_66898:
	movl %r11d,0x70(%rbp)
	movq $0x382D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x10(%r13)
	addq $0x20,%r12
	movq %r14,0x0(%r13)
	movq 0x8(%rbp),%r15
	movq %r15,0x8(%r13)
	movq %r13,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_66899+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_21
.p2align 0x4
L_401161:
L_66897:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_401162:
L_66891:
	movq 0x0(%r14),%r15
	movq %r15,0x68(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_66892+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_62
.p2align 0x4
L_401163:
L_66882:
	movq 0x0(%r14),%r15
	movq %r15,0x68(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_66883+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_62
.p2align 0x4
L_401169:
L_66982:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_66874
L_66983:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_401170
L_66985:
	movl %ecx,0x0(%r15)
	movq %r11,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_401170:
L_66984:
	movq %r11,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_401172:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_66867
.p2align 0x4
L_401173:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_66867
.p2align 0x4
L_401174:
L_66986:
	xorl %ecx,%ecx
	jmp L_66873
.p2align 0x4
L_401176:
L_66987:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_66988+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66988
.p2align 0x4
.long 0x45F
L_66988:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_66861
.p2align 0x4
.long 0xF98
L_66972:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_66973
L_66974:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_66975+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66975
.p2align 0x4
.long 0xF99
L_66975:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_66973:
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x78(%rbp)
	movl 0x0(%r15),%r14d
	movq 0x20(%rbp),%r15
	xorl 0x0(%r15),%r14d
	movl %r14d,0x70(%rbp)
	movq $0x1D6B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq %r14,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_66885+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lookup_1
.p2align 0x4
.long 0x7F5
L_66924:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_66925
L_66954:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_66955+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66955
.p2align 0x4
.long 0x7F6
L_66955:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_66925:
	movq 0x48(%rbp),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x28(%rbp)
	movq 0x0(%r11),%r14
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_66862
L_66926:
	movq %r15,0x0(%r11)
	movq 0x18(%rbp),%r11
	movq 0x0(%r11),%r10
	cmpq $0x1,%r10
	je L_401190
L_66927:
	movq 0x0(%r10),%r13
	movq 0x8(%r10),%r10
	movl $0x0,0x30(%rbp)
	movq %r10,%r15
.p2align 0x4,,0x7
L_66929:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_401189
L_66942:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xD2C,%r11
	jne L_401188
L_66943:
	movq 0x8(%r13),%r11
	movq %r11,0x38(%rbp)
	cmpq 0x0(%r13),%r14
	movq %r14,(localObjptr+0x0)(%rip)
	je L_401184
L_66930:
	movl 0x30(%rbp),%r11d
	incl %r11d
	movl %r11d,0x34(%rbp)
	jo L_66868
L_66931:
	cmpq $0x1,%r15
	je L_401179
L_66932:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movl %r11d,0x30(%rbp)
	movq (localObjptr+0x0)(%rip),%r14
	jmp L_66929
.p2align 0x4
L_401179:
L_66933:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_66934
L_66940:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_66941+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66941
.p2align 0x4
.long 0xF94
L_66941:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_66934:
	movl 0x34(%rbp),%ecx
L_66935:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_66874
L_66936:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_66938
L_66939:
	movl %ecx,0x0(%r15)
L_66938:
	movq $0xFE5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1A59,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x28(%rbp),%r11
	movq %r11,0x0(%r13)
	movq 0x18(%rbp),%r11
	movq 0x0(%r11),%r15
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r13,0x0(%r10)
	movq %r15,0x8(%r10)
	addq $0x18,%r12
	movq %r11,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r10,0x0(%r11)
	movq %r14,%r15
	jmp L_66880
.p2align 0x4
L_401184:
L_66945:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_66946
L_66951:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_66952+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66952
.p2align 0x4
.long 0xF95
L_66952:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_66946:
	movl 0x30(%rbp),%r14d
	movslq %r14d,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_66874
L_66947:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %r14d,0x0(%r13)
	jl L_401185
L_66948:
	movq 0x38(%rbp),%r15
L_66949:
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r14,%r15
	jmp L_66880
.p2align 0x4
L_401185:
L_66950:
	movq (globalObjptr+0x1078)(%rip),%r14
	movl 0x30(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movq 0x38(%rbp),%r15
	jmp L_66949
.p2align 0x4
L_401188:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_66930
.p2align 0x4
L_401189:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_66930
.p2align 0x4
L_401190:
L_66953:
	xorl %ecx,%ecx
	jmp L_66935
.p2align 0x4
.long 0xF92
L_66905:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_66906
L_66907:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_66908+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66908
.p2align 0x4
.long 0xF93
L_66908:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_66906:
	movq 0x20(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x78(%rbp)
	movl 0x0(%r15),%r14d
	movq 0x28(%rbp),%r15
	xorl 0x0(%r15),%r14d
	movl %r14d,0x70(%rbp)
	movq $0x1D67,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq %r14,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_66885+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lookup_1
.p2align 0x4
.long 0xF8F
L_66899:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_66900
L_66902:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_66903+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66903
.p2align 0x4
.long 0xF91
L_66903:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_66900:
	movq $0x4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0xC1B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x18(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x10(%rbp),%r13
	movl 0x0(%r13),%r11d
	movl %r11d,0x70(%rbp)
	movq $0x3895,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r13,0x68(%rbp)
	addq $0x18,%r12
	addq $0x68,%rbp
	leaq (L_66901+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_5
.p2align 0x4
.long 0xF8D
L_66892:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_66893
L_66894:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_66895+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66895
.p2align 0x4
.long 0xF8E
L_66895:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_66893:
	movq 0x28(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x78(%rbp)
	movl 0x0(%r15),%r14d
	movq 0x30(%rbp),%r15
	xorl 0x0(%r15),%r14d
	movl %r14d,0x70(%rbp)
	movq $0x1D63,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq %r14,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_66885+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lookup_1
.p2align 0x4
.long 0xF8B
L_66883:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_66884
L_66889:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_66890+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66890
.p2align 0x4
.long 0xF8C
L_66890:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_66884:
	movq 0x30(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x78(%rbp)
	movl 0x0(%r15),%r14d
	movq 0x38(%rbp),%r15
	xorl 0x0(%r15),%r14d
	movl %r14d,0x70(%rbp)
	movq $0x1D61,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq %r14,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_66885+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lookup_1
.p2align 0x4
.long 0xED3
L_66885:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_66886
L_66887:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_66888+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_66888
.p2align 0x4
.long 0xEF5
L_66888:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_66886:
	movq 0x60(%rbp),%r15
	jmp L_66880
.p2align 0x4
.long 0xF90
L_66901:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq %r15,0x68(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_66885+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tuple_11
.text
.p2align 0x4
.globl lookup_1
.hidden lookup_1
lookup_1:
L_66989:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_67120
L_66990:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_401266
L_66991:
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x8(%r15),%r13
	movq (globalObjptr+0xAE0)(%rip),%r15
	movq 0x0(%r15),%r11
	incq %r11
	jo L_401265
L_66993:
	movq %r11,0x0(%r15)
	movl 0x0(%r14),%r15d
	andl 0x8(%rbp),%r15d
	cmpl $0x0,%r15d
	jl L_67010
L_66994:
	movslq %r15d,%r14
	movq %r14,0x20(%rbp)
	cmpq 0xFFFFFFFFFFFFFFF0(%r13),%r14
	jnb L_66996
L_66997:
	movq 0x0(%r13,%r14,8),%r15
	movq %r15,0x28(%rbp)
	cmpq $0x1,%r15
	je L_67009
L_66998:
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
.p2align 0x4,,0x7
L_66999:
	movq (globalObjptr+0xAE8)(%rip),%r15
	movq 0x0(%r15),%r14
	incq %r14
	jo L_401261
L_67001:
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%rbp),%r15
	movq %r15,%r13
	andq $0x7,%r13
	cmpq $0x1,%r13
	je L_401258
	cmpq $0x2,%r13
	je L_401255
	cmpq $0x3,%r13
	je L_401252
	cmpq $0x5,%r13
	je L_401248
L_67002:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0xEB0,%r13
	je L_401244
	cmpq $0xEB1,%r13
	je L_401240
	cmpq $0xEB2,%r13
	je L_401230
	cmpq $0xEB3,%r13
	je L_401226
	cmpq $0xEB4,%r13
	je L_401222
	cmpq $0xEB5,%r13
	je L_401218
L_67003:
	movq 0x0(%r15),%r13
L_67004:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_67005
L_67047:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xEAF,%r15
	je L_401216
.p2align 0x4,,0x7
L_67005:
	movq 0x30(%rbp),%r15
	cmpq $0x1,%r15
	je L_401198
L_67006:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x30(%rbp)
	movq %r14,0x38(%rbp)
	jmp L_66999
.p2align 0x4
L_401198:
L_67007:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_67009
L_67045:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r14d
	movl %r14d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r14
	movq %r14,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_67046+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_67046
.p2align 0x4
.long 0xF54
L_67046:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_67009:
	movq $0x13,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x1A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x30(%rbp)
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movl 0x8(%rbp),%r15d
	movl %r15d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x0(%rbp),%r15
	movq %r15,0x8(%r14)
	movq (globalObjptr+0x15C0)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_67010
L_67011:
	movl %r13d,0x0(%r15)
	movq 0x10(%rbp),%r13
	movq 0x8(%r13),%r11
	movq $0x27B9,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	addq $0x18,%r12
	movq %r14,0x0(%r10)
	movq 0x28(%rbp),%rdx
	movq %rdx,0x8(%r10)
	movq 0x20(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r11),%r14
	jnb L_66996
L_67013:
	movq %r11,%r9
	shrq $0x8,%r9
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r9,1)
	movq %r10,0x0(%r11,%r14,8)
	movq 0x8(%r13),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r11
	movl %r11d,%r10d
	movslq %r10d,%r9
	cmpq %r9,%r11
	jne L_67015
L_67016:
	movl 0x0(%r15),%r14d
	imull $0x4,%r14d
	jo L_67010
L_67017:
	cmpl %r14d,%r10d
	jnl L_401210
L_67019:
	addl %r10d,%r10d
	jo L_67010
L_67020:
	movq 0x18(%rbp),%r15
	movl 0x0(%r15),%r14d
	shll $0x1,%r14d
	orl $0x1,%r14d
	movl %r14d,0x20(%rbp)
	movslq %r10d,%rdx
	movq %rdx,0x28(%rbp)
	cmpq $0x7FFFFFFF,%rdx
	ja L_401208
L_67021:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x2CF,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_67022+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_67022
.p2align 0x4
.long 0x65D
L_67022:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq %rax,0x38(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_816:
	cmpq 0x28(%rbp),%r15
	jnl L_401199
L_67043:
	movq 0x38(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_816
.p2align 0x4
L_401199:
L_67023:
	movq 0x10(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movl %r13d,0x24(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_401207
L_67025:
	cmpl $0x0,%r13d
	jl L_401206
L_67026:
	movl $0x0,0x48(%rbp)
.p2align 0x4,,0x7
loop_817:
	movl 0x48(%rbp),%r15d
	cmpl 0x24(%rbp),%r15d
	jnl L_401205
L_67028:
	movslq %r15d,%r14
	movq 0x40(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	cmpq $0x1,%r13
	je L_67037
L_67029:
	movq 0x8(%r13),%r15
	movq %r15,0x50(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x58(%rbp)
L_67030:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_401203
.p2align 0x4,,0x7
L_67031:
	movq 0x58(%rbp),%r15
	movl 0x0(%r15),%r14d
	andl 0x20(%rbp),%r14d
	cmpl $0x0,%r14d
	jl L_401202
L_67032:
	movslq %r14d,%r13
	cmpq 0x28(%rbp),%r13
	jnb L_401201
L_67034:
	movq 0x38(%rbp),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq $0x27B9,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r15,0x0(%r10)
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r10,0x0(%r14,%r13,8)
	movq 0x50(%rbp),%r15
	cmpq $0x1,%r15
	je L_401200
L_67035:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x50(%rbp)
	movq %r14,0x58(%rbp)
	jmp L_67030
.p2align 0x4
L_401200:
L_67037:
	incl 0x48(%rbp)
	jmp loop_817
.p2align 0x4
L_401201:
L_66996:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_401202:
L_67010:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_401203:
L_67039:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_67040+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_67040
.p2align 0x4
.long 0xF53
L_67040:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	jmp L_67031
.p2align 0x4
L_401205:
L_67027:
	movq 0x10(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x38(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x18(%rbp),%r14
	movl 0x20(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_401206:
L_67042:
	movq (globalObjptr+0x4F8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_401207:
L_67015:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_401208:
L_67044:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_401210:
L_67018:
	movq 0x30(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_401216:
L_67048:
	movq %r13,0x50(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_67049+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_0
.p2align 0x4
L_401218:
L_67094:
	movq 0x0(%r15),%r13
L_67095:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_67005
L_67096:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xEB5,%r15
	jne L_67005
L_67097:
	movq 0x0(%r14),%r15
	movq 0x10(%r15),%r11
	cmpq %r11,0x10(%r13)
	jne L_67005
L_67052:
	movq 0x38(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_401222:
L_67088:
	movq 0x0(%r15),%r13
L_67089:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_67005
L_67090:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xEB4,%r15
	jne L_67005
L_67091:
	movq 0x0(%r14),%r15
	movq 0x10(%r13),%r11
	cmpq %r11,0x10(%r15)
	je L_67052
	jmp L_67005
.p2align 0x4
L_401226:
L_67082:
	movq 0x0(%r15),%r13
L_67083:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_67005
L_67084:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xEB3,%r15
	jne L_67005
L_67085:
	movq 0x0(%r14),%r15
	movq 0x10(%r13),%r11
	cmpq %r11,0x10(%r15)
	je L_67052
	jmp L_67005
.p2align 0x4
L_401230:
L_67065:
	movq 0x0(%r15),%r11
L_67066:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_67005
L_67067:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xEB2,%r15
	jne L_67005
L_67068:
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r13
	movl %r13d,%ecx
	movslq %ecx,%r14
	cmpq %r13,%r14
	jne L_67015
L_67070:
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r10
	movl %r10d,%ebx
	movslq %ebx,%r14
	cmpq %r10,%r14
	jne L_67015
L_67072:
	cmpl %ecx,%ebx
	jne L_67005
L_67074:
	xorl %ebx,%ebx
	movq %r11,%r14
.p2align 0x4,,0x7
loop_818:
	cmpl %ebx,%ecx
	je L_67052
L_67075:
	movslq %ebx,%r11
	cmpq %r13,%r11
	jnb L_66996
L_67077:
	movq 0x0(%r14,%r11,8),%r10
	movq 0x0(%r15,%r11,8),%r9
	movq 0x10(%r9),%r8
	cmpq %r8,0x10(%r10)
	jne L_67005
L_67079:
	incl %ebx
	jo L_67010
L_67080:
	jmp loop_818
.p2align 0x4
L_401240:
L_67059:
	movq 0x0(%r15),%r13
L_67060:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_67005
L_67061:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xEB1,%r15
	jne L_67005
L_67062:
	movq 0x0(%r14),%r15
	movq 0x10(%r13),%r11
	cmpq %r11,0x10(%r15)
	je L_67052
	jmp L_67005
.p2align 0x4
L_401244:
L_67053:
	movq 0x0(%r15),%r13
L_67054:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_67005
L_67055:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xEB0,%r15
	jne L_67005
L_67056:
	movq 0x0(%r14),%r15
	movq 0x10(%r13),%r11
	cmpq %r11,0x10(%r15)
	je L_67052
	jmp L_67005
.p2align 0x4
L_401248:
L_67112:
	shrq $0x3,%r15
	movb %r15b,%r13b
	movq %r14,%r15
	andq $0x7,%r15
	cmpq $0x5,%r15
	jne L_401250
L_67115:
	shrq $0x3,%r14
	movb %r14b,%r15b
	cmpb %r15b,%r13b
	je L_67052
	jmp L_67005
.p2align 0x4
L_401250:
L_67113:
	andq $0x3,%r14
	jnz L_67005
L_67114:
	jmp L_67005
.p2align 0x4
L_401252:
L_67108:
	movq %r14,%r13
	andq $0x7,%r13
	cmpq $0x3,%r13
	je L_67052
L_67109:
	andq $0x3,%r14
	jnz L_67005
L_67110:
	jmp L_67005
.p2align 0x4
L_401255:
L_67104:
	movq %r14,%r13
	andq $0x7,%r13
	cmpq $0x2,%r13
	je L_67052
L_67105:
	andq $0x3,%r14
	jnz L_67005
L_67106:
	jmp L_67005
.p2align 0x4
L_401258:
L_67100:
	movq %r14,%r13
	andq $0x7,%r13
	cmpq $0x1,%r13
	je L_67052
L_67101:
	andq $0x3,%r14
	jnz L_67005
L_67102:
	jmp L_67005
.p2align 0x4
L_401261:
L_67000:
	movq (globalObjptr+0xAF0)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_401265:
L_66992:
	movq (globalObjptr+0xAF8)(%rip),%r13
	movq %r13,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_401266:
L_67120:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_67121+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_67121
.p2align 0x4
.long 0x65A
L_67121:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_66991
.p2align 0x4
.long 0xF78
L_67049:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movl 0x48(%rbp),%r15d
	movl %r15d,0xC(%rbp)
	testl %r15d,%r15d
	jnz L_67052
	jmp L_67005
.text
.p2align 0x4
.globl tabulate_21
.hidden tabulate_21
tabulate_21:
L_67122:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_67123
L_67201:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_67202+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_67202
.p2align 0x4
.long 0x457
L_67202:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_67123:
	movslq 0x8(%rbp),%rdx
	movq %rdx,0x10(%rbp)
	testq %rdx,%rdx
	jz L_401290
L_67124:
	cmpq $0x7FFFFFFF,%rdx
	ja L_401289
L_67125:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1477,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_67126+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_67126
.p2align 0x4
.long 0x452
L_67126:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq %rax,0x8(%rbp)
L_67127:
	movq $0x0,0x18(%rbp)
.p2align 0x4,,0x7
loop_819:
	movq 0x18(%rbp),%r15
	cmpq 0x10(%rbp),%r15
	jnl L_401288
L_67129:
	movl %r15d,%r14d
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%rax
	shrq $0x1,%rax
	subq $0x1C15,%rax
	cmpq $0x8,%rax
	ja L_401269
	leaq jumpTable_176(%rip),%rbx
	jmp *(%rbx,%rax,8)
.data
.p2align 0x4
jumpTable_176:
.quad L_401287,L_401286,L_401284,L_401281,L_401278,L_401276,L_401274,L_401273,L_401270
.text
.p2align 0x4
L_401269:
L_67130:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x20(%rbp)
	movslq %r14d,%r13
	movq 0x10(%r15),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq %r11,0x30(%rbp)
	movq 0x8(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_67131+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp getNew_0
.p2align 0x4
L_401270:
L_67195:
	movq 0x0(%rbp),%r13
	movq 0x0(%r13),%r15
	movslq %r14d,%r11
	movq 0x8(%r13),%r14
	movq 0x0(%r14,%r11,8),%r10
	cmpq $0x1,%r10
	je L_401272
L_67196:
	movl 0x0(%r15),%r14d
	incl %r14d
	jo L_401271
L_67197:
	movl %r14d,0x0(%r15)
	movq %r10,%r15
.p2align 0x4,,0x7
L_67133:
	movq 0x8(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x18(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x18(%rbp)
	jmp loop_819
.p2align 0x4
L_401271:
L_67135:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_401272:
L_67198:
	movq %r10,%r15
	jmp L_67133
.p2align 0x4
L_401273:
L_67184:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x20(%rbp)
	movslq %r14d,%r13
	movq 0x10(%r15),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq %r11,0x30(%rbp)
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_67185+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_62
.p2align 0x4
L_401274:
L_67179:
	movq 0x0(%rbp),%r13
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
	movq %r10,0x20(%rbp)
	movslq %r14d,%r15
	movq %r15,%r14
	salq $0x4,%r14
	movq 0x10(%r13),%r10
	movq 0x0(%r10,%r14,1),%r9
	salq $0x4,%r15
	movq 0x8(%r10,%r15,1),%r14
	movq 0x0(%r14),%r8
	cmpq $0x1,0x8(%r8)
	je L_401275
L_67180:
	movq $0x1,%r15
	jmp L_67133
.p2align 0x4
L_401275:
L_67181:
	movq %r9,0x30(%rbp)
	movq %r11,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_67182+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp simplifyType_0
.p2align 0x4
L_401276:
L_67174:
	movq 0x0(%rbp),%r13
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
	movq %r10,0x20(%rbp)
	movslq %r14d,%r15
	movq %r15,%r14
	salq $0x4,%r14
	movq 0x10(%r13),%r10
	movq 0x0(%r10,%r14,1),%r9
	salq $0x4,%r15
	movq 0x8(%r10,%r15,1),%r14
	movq 0x0(%r14),%r8
	cmpq $0x1,0x8(%r8)
	je L_401277
L_67175:
	movq $0x1,%r15
	jmp L_67133
.p2align 0x4
L_401277:
L_67176:
	movq %r9,0x30(%rbp)
	movq %r11,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_67177+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp simplifyType_0
.p2align 0x4
L_401278:
L_67170:
	movq 0x0(%rbp),%r13
	movq 0x0(%r13),%r15
	movslq %r14d,%r11
	movq 0x10(%r13),%r14
	movq 0x0(%r14,%r11,8),%r10
	movq 0x8(%r13),%r14
	movq 0x0(%r14,%r11,8),%r9
	andq $0x1,%r10
	jnz L_401280
L_67172:
	movl 0x0(%r15),%r14d
	incl %r14d
	jo L_67135
L_67173:
	movl %r14d,0x0(%r15)
	movq %r9,%r15
	jmp L_67133
.p2align 0x4
L_401280:
L_67171:
	movq $0x1,%r15
	jmp L_67133
.p2align 0x4
L_401281:
L_67166:
	movq 0x0(%rbp),%r13
	movq 0x0(%r13),%r15
	movslq %r14d,%r11
	movq %r11,%r14
	salq $0x4,%r14
	movq 0x8(%r13),%r10
	movq 0x0(%r10,%r14,1),%r9
	salq $0x4,%r11
	movq 0x8(%r10,%r11,1),%r14
	movq 0x0(%r14),%r8
	cmpq $0x1,0x8(%r8)
	jne L_401283
L_67168:
	movl 0x0(%r15),%r14d
	incl %r14d
	jo L_67135
L_67169:
	movl %r14d,0x0(%r15)
	movq %r9,%r15
	jmp L_67133
.p2align 0x4
L_401283:
L_67167:
	movq $0x1,%r15
	jmp L_67133
.p2align 0x4
L_401284:
L_67161:
	movq 0x0(%rbp),%r13
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
	movq %r10,0x20(%rbp)
	movslq %r14d,%r15
	movq %r15,%r14
	salq $0x4,%r14
	movq 0x10(%r13),%r10
	movq 0x0(%r10,%r14,1),%r9
	salq $0x4,%r15
	movq 0x8(%r10,%r15,1),%r14
	movq 0x0(%r14),%r8
	cmpq $0x1,0x8(%r8)
	je L_401285
L_67162:
	movq $0x1,%r15
	jmp L_67133
.p2align 0x4
L_401285:
L_67163:
	movq %r9,0x30(%rbp)
	movq %r11,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_67164+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp simplifyType_0
.p2align 0x4
L_401286:
L_67149:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x38(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x20(%rbp)
	movslq %r14d,%r13
	movq 0x10(%r15),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq %r11,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_67150+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_62
.p2align 0x4
L_401287:
L_67137:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x0(%r15),%r11
	movq %r11,0x48(%rbp)
	movslq %r14d,%r11
	movl 0x0(%r13),%r14d
	movl %r14d,0x28(%rbp)
	movq 0x10(%r15),%r14
	movq 0x0(%r14,%r11,8),%r13
	movq 0x0(%r13),%r10
	movq %r10,0x30(%rbp)
	movq 0x8(%r13),%r10
	movq %r10,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_67138+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp getNew_0
.p2align 0x4
L_401288:
L_67128:
	movq 0x8(%rbp),%r14
	movq $0xC19,0xFFFFFFFFFFFFFFF8(%r14)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_401289:
L_67199:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_401290:
L_67200:
	movq (globalObjptr+0xC30)(%rip),%r15
	movq %r15,0x8(%rbp)
	jmp L_67127
.p2align 0x4
.long 0x456
L_67131:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movl 0x30(%rbp),%r14d
	movl %r14d,0x28(%rbp)
	movq 0x38(%rbp),%r13
	movq %r13,0x30(%rbp)
	testl %r14d,%r14d
	jnz L_401292
L_67132:
	movq $0x1,%r15
	jmp L_67133
.p2align 0x4
L_401292:
L_67134:
	movq 0x20(%rbp),%r14
	movl 0x0(%r14),%r13d
	incl %r13d
	jo L_67135
L_67136:
	movl %r13d,0x0(%r14)
	movq 0x30(%rbp),%r15
	jmp L_67133
.p2align 0x4
.long 0x456
L_67185:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r14
	movq %r14,0x28(%rbp)
	movq 0x8(%r14),%r15
L_67186:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_67187
L_67189:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xEB2,%r14
	jne L_67187
L_67190:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r13,%r10
	jne L_401296
L_67192:
	testl %r11d,%r11d
	jnz L_401294
L_67194:
	movq $0x1,%r15
	jmp L_67133
.p2align 0x4
L_401294:
L_67187:
	movq 0x20(%rbp),%r14
	movl 0x0(%r14),%r13d
	incl %r13d
	jo L_67135
L_67188:
	movl %r13d,0x0(%r14)
	movq 0x28(%rbp),%r15
	jmp L_67133
.p2align 0x4
L_401296:
L_67157:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x456
L_67182:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x20(%rbp),%r14
	movl 0x0(%r14),%r13d
	incl %r13d
	jo L_67135
L_67183:
	movl %r13d,0x0(%r14)
	jmp L_67133
.p2align 0x4
.long 0x456
L_67177:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x20(%rbp),%r14
	movl 0x0(%r14),%r13d
	incl %r13d
	jo L_67135
L_67178:
	movl %r13d,0x0(%r14)
	jmp L_67133
.p2align 0x4
.long 0x456
L_67164:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x20(%rbp),%r14
	movl 0x0(%r14),%r13d
	incl %r13d
	jo L_67135
L_67165:
	movl %r13d,0x0(%r14)
	jmp L_67133
.p2align 0x4
.long 0x456
L_67150:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r14
	movq %r14,0x28(%rbp)
	movq 0x8(%r14),%r15
L_67151:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_67152
L_67154:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xEB2,%r14
	jne L_67152
L_67155:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r13,%r10
	jne L_67157
L_67158:
	testl %r11d,%r11d
	jnz L_401302
L_67160:
	movq $0x1,%r15
	jmp L_67133
.p2align 0x4
L_401302:
L_67152:
	movq 0x20(%rbp),%r14
	movl 0x0(%r14),%r13d
	incl %r13d
	jo L_67135
L_67153:
	movl %r13d,0x0(%r14)
	movq 0x28(%rbp),%r15
	jmp L_67133
.p2align 0x4
.long 0x560
L_67138:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movl 0x40(%rbp),%r15d
	movl %r15d,0x2C(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_67139+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_4
.p2align 0x4
.long 0x531
L_67139:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x144C,%r14
	jne L_401310
L_67141:
	cmpq $0x1,0x8(%r15)
	je L_401308
L_67142:
	movl 0x2C(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_401307
L_67143:
	movl 0x28(%rbp),%ecx
	movq $0x1,%r15
L_67144:
	movq 0x20(%rbp),%r14
	movl %ecx,0x0(%r14)
	jmp L_67133
.p2align 0x4
L_401307:
L_67145:
	movl $0x1,%ecx
	movq $0x1,%r15
	jmp L_67144
.p2align 0x4
L_401308:
L_67146:
	movl 0x2C(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_401309
L_67147:
	movl 0x28(%rbp),%ecx
	movq 0x38(%rbp),%r15
	jmp L_67144
.p2align 0x4
L_401309:
L_67148:
	movl $0x1,%ecx
	movq 0x38(%rbp),%r15
	jmp L_67144
.p2align 0x4
L_401310:
L_67140:
	movq (globalObjptr+0x1500)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl getNew_0
.hidden getNew_0
getNew_0:
L_67203:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_67204
L_67333:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_67334+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_67334
.p2align 0x4
.long 0x45F
L_67334:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_67204:
	movq 0x8(%rbp),%r15
	movq 0x28(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_67205+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_11
.p2align 0x4
.long 0x4ED
L_67205:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_67206
L_67331:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_67332+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_67332
.p2align 0x4
.long 0x4EF
L_67332:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_67206:
	movq 0x40(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1442,%r15
	jne L_401319
L_67208:
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r11
	movq %r11,0x40(%rbp)
	movq 0x10(%r15),%r11
	movq %r11,0x48(%rbp)
	movq 0x0(%r11),%r15
	cmpq $0x1,%r15
	je L_401312
L_67209:
	movl 0x0(%r15),%r14d
	movl %r14d,0x0(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_401312:
L_67210:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xF1B,%r15
	je L_401318
	cmpq $0xF1C,%r15
	je L_401316
	cmpq $0xF1D,%r15
	je L_401315
	cmpq $0xF1E,%r15
	je L_401314
	cmpq $0xF1F,%r15
	je L_401313
L_67211:
	movq 0x8(%r13),%r15
	movq %r15,0x18(%rbp)
	movq 0x0(%r13),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_67212+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp getNew_0
.p2align 0x4
L_401313:
L_67304:
	movq 0x10(%r13),%r15
	movq %r15,0x20(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x28(%rbp)
	movq 0x0(%r13),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_67305+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp getNew_0
.p2align 0x4
L_401314:
L_67296:
	movq 0x0(%r13),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_67297+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_12
.p2align 0x4
L_401315:
L_67272:
	movq 0x8(%r13),%r15
	movq %r15,0x18(%rbp)
	movq 0x0(%r13),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_67273+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp getNew_0
.p2align 0x4
L_401316:
L_67253:
	movq 0x0(%r13),%r15
	movq $0x53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x10(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r10,%r13
	jne L_401317
L_67256:
	movl %r11d,0x60(%rbp)
	movq $0x382B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x10(%r13)
	addq $0x20,%r12
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	movq %r13,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_67257+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_21
.p2align 0x4
L_401317:
L_67255:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_401318:
L_67236:
	movq 0x8(%r13),%r15
	movq %r15,0x18(%rbp)
	movq 0x0(%r13),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_67237+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp getNew_0
.p2align 0x4
L_401319:
L_67207:
	movq (globalObjptr+0x1500)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xF9B
L_67212:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movl 0x58(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_67213+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_4
.p2align 0x4
.long 0xFA9
L_67305:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movl 0x58(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_67306+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_4
.p2align 0x4
.long 0x77D
L_67297:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_67298
L_67302:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_67303+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_67303
.p2align 0x4
.long 0x780
L_67303:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_67298:
	movq 0x50(%rbp),%r14
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x145A,%r14
	jne L_67207
L_67299:
	cmpq $0x1,0x8(%r15)
	je L_401321
L_67300:
	xorl %ecx,%ecx
	movq 0x40(%rbp),%r15
L_67225:
	movq $0x1E33,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	movl %ecx,0x0(%rbp)
	movq %r15,0x8(%rbp)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq 0x48(%rbp),%r15
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_401321:
L_67301:
	movl $0x1,%ecx
	movq 0x40(%rbp),%r15
	jmp L_67225
.p2align 0x4
.long 0xFA6
L_67273:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movl 0x58(%rbp),%r15d
	movl %r15d,0x30(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_67274+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_4
.p2align 0x4
.long 0xFA2
L_67257:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_67258
L_67270:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_67271+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_67271
.p2align 0x4
.long 0xFA5
L_67271:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_67258:
	movq 0x10(%rbp),%r15
	movl 0x0(%r15),%r14d
	movl %r14d,0x20(%rbp)
	movq $0x4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x28(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x18(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r13,%r10
	jne L_67255
L_67260:
	movl %r11d,0x60(%rbp)
	movq $0x383B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	movq %r13,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_67261+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_21
.p2align 0x4
.long 0xF9E
L_67237:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movl 0x58(%rbp),%r15d
	movl %r15d,0x30(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_67238+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_4
.p2align 0x4
.long 0xF9C
L_67213:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r15,0x20(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x144C,%r15
	jne L_67207
L_67214:
	cmpq $0x1,0x8(%r14)
	je L_401326
L_67215:
	movq 0x10(%rbp),%r15
	movq %r15,0x20(%rbp)
L_67216:
	movq 0x18(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_67217+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_12
.p2align 0x4
L_401326:
L_67235:
	movq 0x38(%rbp),%r15
	movq %r15,0x20(%rbp)
	jmp L_67216
.p2align 0x4
.long 0xFAA
L_67306:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_67307
L_67329:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_67330+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_67330
.p2align 0x4
.long 0xBD7
L_67330:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_67307:
	movq 0x30(%rbp),%r14
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x144C,%r14
	jne L_67207
L_67308:
	cmpq $0x1,0x8(%r15)
	je L_401328
L_67309:
	movq 0x10(%rbp),%r15
L_67310:
	movq 0x18(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x68(%rbp)
	movl 0x0(%r14),%r13d
	xorl 0x0(%r15),%r13d
	movl %r13d,0x60(%rbp)
	movq $0x1D6B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x58(%rbp)
	addq $0x10,%r12
	addq $0x58,%rbp
	leaq (L_67311+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lookup_1
.p2align 0x4
L_401328:
L_67328:
	movq 0x40(%rbp),%r15
	jmp L_67310
.p2align 0x4
.long 0xFA7
L_67274:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r15,0x28(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x144C,%r15
	jne L_67207
L_67275:
	cmpq $0x1,0x8(%r14)
	je L_401331
L_67276:
	movq 0x10(%rbp),%r15
	movq %r15,0x28(%rbp)
L_67277:
	movq 0x18(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_67278+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_12
.p2align 0x4
L_401331:
L_67295:
	movq 0x38(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_67277
.p2align 0x4
.long 0xFA3
L_67261:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_67262
L_67268:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_67269+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_67269
.p2align 0x4
.long 0x696
L_67269:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_67262:
	movq $0x4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0xC1B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x30(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x28(%rbp),%r13
	movl 0x0(%r13),%r11d
	movl %r11d,0x60(%rbp)
	movq $0x3871,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r13,0x58(%rbp)
	addq $0x18,%r12
	addq $0x58,%rbp
	leaq (L_67263+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_5
.p2align 0x4
.long 0xF9F
L_67238:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_67239
L_67251:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_67252+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_67252
.p2align 0x4
.long 0x762
L_67252:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_67239:
	movq 0x20(%rbp),%r14
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x144C,%r14
	jne L_67207
L_67240:
	cmpq $0x1,0x8(%r15)
	je L_401334
L_67241:
	movq 0x10(%rbp),%r15
L_67242:
	movq 0x28(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x68(%rbp)
	movl 0x0(%r14),%r13d
	xorl 0x0(%r15),%r13d
	movl %r13d,0x60(%rbp)
	movq $0x1D63,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x58(%rbp)
	addq $0x10,%r12
	addq $0x58,%rbp
	leaq (L_67243+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lookup_1
.p2align 0x4
L_401334:
L_67250:
	movq 0x38(%rbp),%r15
	jmp L_67242
.p2align 0x4
.long 0xA7D
L_67217:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_67218
L_67233:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_67234+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_67234
.p2align 0x4
.long 0xF9D
L_67234:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_67218:
	movq 0x38(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x145A,%r15
	jne L_67207
L_67219:
	cmpq $0x1,0x8(%r14)
	je L_401338
L_67220:
	movl 0x28(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_401337
L_67221:
	movl $0x0,0x28(%rbp)
L_67222:
	movq 0x30(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x68(%rbp)
	movl 0x0(%r15),%r14d
	movq 0x20(%rbp),%r15
	xorl 0x0(%r15),%r14d
	movl %r14d,0x60(%rbp)
	movq $0x1D61,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq %r14,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_67223+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lookup_1
.p2align 0x4
L_401337:
L_67229:
	movl $0x1,0x28(%rbp)
	jmp L_67222
.p2align 0x4
L_401338:
L_67230:
	movl 0x28(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_67229
L_67231:
	movl $0x1,0x28(%rbp)
	jmp L_67222
.p2align 0x4
.long 0xFAB
L_67311:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_67312+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_12
.p2align 0x4
.long 0x9BE
L_67278:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_67279
L_67293:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_67294+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_67294
.p2align 0x4
.long 0xFA8
L_67294:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_67279:
	movq 0x38(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x145A,%r15
	jne L_67207
L_67280:
	cmpq $0x1,0x8(%r14)
	je L_401343
L_67281:
	movl 0x30(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_401342
L_67282:
	movl $0x0,0x30(%rbp)
L_67283:
	movq 0x20(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x68(%rbp)
	movl 0x0(%r15),%r14d
	movq 0x28(%rbp),%r15
	xorl 0x0(%r15),%r14d
	movl %r14d,0x60(%rbp)
	movq $0x1D67,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq %r14,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_67284+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lookup_1
.p2align 0x4
L_401342:
L_67289:
	movl $0x1,0x30(%rbp)
	jmp L_67283
.p2align 0x4
L_401343:
L_67290:
	movl 0x30(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_67289
L_67291:
	movl $0x1,0x30(%rbp)
	jmp L_67283
.p2align 0x4
.long 0xFA4
L_67263:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq %r15,0x58(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_67264+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tuple_11
.p2align 0x4
.long 0xFA0
L_67243:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_67244+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp getNew_0
.p2align 0x4
.long 0x90C
L_67223:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_67224
L_67226:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_67227+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_67227
.p2align 0x4
.long 0xBC2
L_67227:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_67224:
	movl 0x28(%rbp),%ecx
	movq 0x30(%rbp),%r15
	jmp L_67225
.p2align 0x4
.long 0xFAC
L_67312:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_67313
L_67326:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_67327+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_67327
.p2align 0x4
.long 0xFAD
L_67327:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_67313:
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x145A,%r15
	jne L_67207
L_67314:
	cmpq $0x1,0x8(%r14)
	je L_401348
L_67315:
	movq 0x28(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_67316+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp getNew_0
.p2align 0x4
L_401348:
L_67323:
	movl 0x38(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_401349
L_67324:
	movl $0x1,%ecx
	movq 0x10(%rbp),%r15
	jmp L_67225
.p2align 0x4
L_401349:
L_67320:
	movl $0x1,%ecx
	movq 0x10(%rbp),%r15
	jmp L_67225
.p2align 0x4
.long 0x90C
L_67284:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_67285
L_67286:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_67287+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_67287
.p2align 0x4
.long 0x9C6
L_67287:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_67285:
	movl 0x30(%rbp),%ecx
	movq 0x38(%rbp),%r15
	jmp L_67225
.p2align 0x4
.long 0x90C
L_67264:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_67265
L_67266:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_67267+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_67267
.p2align 0x4
.long 0x90B
L_67267:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_67265:
	movl 0x20(%rbp),%ecx
	movq 0x28(%rbp),%r15
	jmp L_67225
.p2align 0x4
.long 0xDED
L_67244:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movl 0x58(%rbp),%r15d
	movl %r15d,0x18(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_67245
L_67248:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_67249+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_67249
.p2align 0x4
.long 0xFA1
L_67249:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_67245:
	movl 0x30(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_401354
L_67246:
	movl 0x18(%rbp),%ecx
	movq 0x10(%rbp),%r15
	jmp L_67225
.p2align 0x4
L_401354:
L_67247:
	movl $0x1,%ecx
	movq 0x10(%rbp),%r15
	jmp L_67225
.p2align 0x4
.long 0xDED
L_67316:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movl 0x58(%rbp),%r15d
	movl %r15d,0x18(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_67317
L_67321:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_67322+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_67322
.p2align 0x4
.long 0xFA1
L_67322:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_67317:
	movl 0x38(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_67320
L_67318:
	movl 0x18(%rbp),%ecx
	movq 0x10(%rbp),%r15
	jmp L_67225
.text
.p2align 0x4
.globl tabulate_5
.hidden tabulate_5
tabulate_5:
L_67335:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_67336
L_67454:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_67455+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_67455
.p2align 0x4
.long 0x457
L_67455:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_67336:
	movslq 0x8(%rbp),%rdx
	movq %rdx,0x10(%rbp)
	testq %rdx,%rdx
	jz L_401431
L_67337:
	cmpq $0x7FFFFFFF,%rdx
	ja L_401430
L_67338:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1471,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_67339+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_67339
.p2align 0x4
.long 0x452
L_67339:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq %rax,0x8(%rbp)
L_67340:
	movq $0x0,0x18(%rbp)
.p2align 0x4,,0x7
loop_820:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_401429
.p2align 0x4,,0x7
L_67341:
	movq 0x18(%rbp),%r15
	cmpq 0x10(%rbp),%r15
	jnl L_401428
L_67343:
	movl %r15d,%r14d
	movq 0x0(%rbp),%r15
	cmpq $0x1,%r15
	je L_401427
L_67344:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%rax
	shrq $0x1,%rax
	subq $0x1C35,%rax
	cmpq $0x1A,%rax
	ja L_401358
	leaq jumpTable_177(%rip),%rbx
	jmp *(%rbx,%rax,8)
.data
.p2align 0x4
jumpTable_177:
.quad L_401426,L_401425,L_401424,L_401420,L_401416,L_401412,L_401411,L_401410,L_401406,L_401404,L_401403,L_401390,L_401389,L_401388,L_401387,L_401386,L_401385,L_401384,L_401380,L_401376,L_401372,L_401368,L_401367,L_401363,L_401362,L_401361,L_401360
.text
.p2align 0x4
L_401358:
L_67345:
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_401359
L_67346:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r14,1)
	movq %r13,0x0(%r15)
	movq 0x8(%r11),%r15
.p2align 0x4,,0x7
L_67347:
	movq 0x8(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x18(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x18(%rbp)
	jmp loop_820
.p2align 0x4
L_401359:
L_67349:
	movq (globalObjptr+0x4B0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_401360:
L_67448:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x30(%rbp)
	movslq %r14d,%r13
	imulq $0x30,%r13
	movq 0x8(%r15),%r14
	movq 0x0(%r14,%r13,1),%r11
	movq %r11,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_67351+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp valueType_0
.p2align 0x4
L_401361:
L_67446:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x38(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x20(%rbp)
	movslq %r14d,%r13
	movq 0x10(%r15),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq %r11,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_67447+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1322
.p2align 0x4
L_401362:
L_67445:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x30(%rbp)
	movslq %r14d,%r13
	movq 0x8(%r15),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq %r11,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_67351+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_63
.p2align 0x4
L_401363:
L_67440:
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r13
	movl 0x0(%r13),%ecx
.p2align 0x4,,0x7
loop_829:
	movq 0x0(%r15),%r14
	movslq %ecx,%r13
	movq 0x8(%r15),%r11
	movq 0x0(%r11,%r13,8),%r10
	cmpq $0x1,%r10
	jne L_401365
L_67443:
	incl %ecx
	jo L_401364
L_67444:
	jmp loop_829
.p2align 0x4
L_401364:
L_67359:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_401365:
L_67441:
	incl %ecx
	jo L_67359
L_67442:
	movl %ecx,0x0(%r14)
	movq %r10,%r15
	jmp L_67347
.p2align 0x4
L_401367:
L_67439:
	movslq %r14d,%r15
	movq 0x0(%rbp),%r14
	movq 0x8(%r14),%r13
	movq 0x0(%r13,%r15,8),%r11
	movq %r11,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_67351+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_62
.p2align 0x4
L_401368:
L_67434:
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r13
	movl 0x0(%r13),%ecx
.p2align 0x4,,0x7
loop_828:
	movq 0x0(%r15),%r14
	movslq %ecx,%r13
	movq 0x8(%r15),%r11
	movq 0x0(%r11,%r13,8),%r10
	cmpq $0x1,%r10
	jne L_401370
L_67437:
	incl %ecx
	jo L_67359
L_67438:
	jmp loop_828
.p2align 0x4
L_401370:
L_67435:
	incl %ecx
	jo L_67359
L_67436:
	movl %ecx,0x0(%r14)
	movq %r10,%r15
	jmp L_67347
.p2align 0x4
L_401372:
L_67429:
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r13
	movl 0x0(%r13),%ecx
.p2align 0x4,,0x7
loop_827:
	movq 0x0(%r15),%r14
	movslq %ecx,%r13
	movq 0x8(%r15),%r11
	movq 0x0(%r11,%r13,8),%r10
	cmpq $0x1,%r10
	jne L_401374
L_67432:
	incl %ecx
	jo L_67359
L_67433:
	jmp loop_827
.p2align 0x4
L_401374:
L_67430:
	incl %ecx
	jo L_67359
L_67431:
	movl %ecx,0x0(%r14)
	movq %r10,%r15
	jmp L_67347
.p2align 0x4
L_401376:
L_67424:
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r13
	movl 0x0(%r13),%ecx
.p2align 0x4,,0x7
loop_826:
	movq 0x0(%r15),%r14
	movslq %ecx,%r13
	movq 0x8(%r15),%r11
	movq 0x0(%r11,%r13,8),%r10
	cmpq $0x1,%r10
	jne L_401378
L_67427:
	incl %ecx
	jo L_67359
L_67428:
	jmp loop_826
.p2align 0x4
L_401378:
L_67425:
	incl %ecx
	jo L_67359
L_67426:
	movl %ecx,0x0(%r14)
	movq %r10,%r15
	jmp L_67347
.p2align 0x4
L_401380:
L_67419:
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r13
	movl 0x0(%r13),%ecx
.p2align 0x4,,0x7
loop_825:
	movq 0x0(%r15),%r14
	movslq %ecx,%r13
	movq 0x8(%r15),%r11
	movq 0x0(%r11,%r13,8),%r10
	cmpq $0x1,%r10
	jne L_401382
L_67422:
	incl %ecx
	jo L_67359
L_67423:
	jmp loop_825
.p2align 0x4
L_401382:
L_67420:
	incl %ecx
	jo L_67359
L_67421:
	movl %ecx,0x0(%r14)
	movq %r10,%r15
	jmp L_67347
.p2align 0x4
L_401384:
L_67418:
	movq 0x0(%rbp),%r13
	movq 0x0(%r13),%r11
	movslq %r14d,%r15
	movq 0x0(%r11,%r15,8),%r14
	movq 0x0(%r14),%r11
	movq %r11,%r15
	jmp L_67347
.p2align 0x4
L_401385:
L_67415:
	movslq %r14d,%r15
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r13
	movq 0x0(%r13,%r15,8),%r11
	movq %r11,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_67416+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_13
.p2align 0x4
L_401386:
L_67414:
	movq 0x0(%rbp),%r13
	movq 0x0(%r13),%r11
	movslq %r14d,%r15
	movq 0x0(%r11,%r15,8),%r11
	movq %r11,%r15
	jmp L_67347
.p2align 0x4
L_401387:
L_67413:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x30(%rbp)
	movslq %r14d,%r13
	movq 0x8(%r15),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq %r11,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_67351+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1398
.p2align 0x4
L_401388:
L_67412:
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r15
	jmp L_67347
.p2align 0x4
L_401389:
L_67411:
	movq 0x0(%rbp),%r13
	movq 0x0(%r13),%r11
	movslq %r14d,%r15
	movq 0x0(%r11,%r15,8),%r14
	movq 0x0(%r14),%r11
	movq %r11,%r15
	jmp L_67347
.p2align 0x4
L_401390:
L_67384:
	movslq %r14d,%r15
	movq 0x0(%rbp),%r11
	movq 0x8(%r11),%r10
	movq 0x0(%r10,%r15,8),%r9
	movq 0x0(%r9),%r8
	movq %r8,0x20(%rbp)
	movq 0x0(%r11),%r8
	movq 0x8(%r8),%rsp
	movq %rsp,0x28(%rbp)
	movq 0x0(%r8),%r14
	movq 0x8(%r9),%r8
	movq 0x10(%r8),%rsp
	movq %rsp,0x30(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_401402
L_67386:
	movq %r15,0x0(%r11)
	movq 0x0(%rsp),%r11
	cmpq $0x1,%r11
	je L_401401
L_67387:
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r11
	xorl %ecx,%ecx
	movq %r11,%r15
.p2align 0x4,,0x7
L_67389:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_401400
L_67403:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xCB1,%r11
	jne L_401399
L_67404:
	cmpq 0x0(%r13),%r14
	movq %r14,(localObjptr+0x18)(%rip)
	je L_401396
L_67390:
	incl %ecx
	movl %ecx,0x38(%rbp)
	jo L_67359
L_67391:
	cmpq $0x1,%r15
	je L_401391
L_67392:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x18)(%rip),%r14
	jmp L_67389
.p2align 0x4
L_401391:
L_67393:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_401394
.p2align 0x4,,0x7
L_67394:
	movl 0x38(%rbp),%ecx
L_67395:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_401393
L_67397:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_67399
L_67400:
	movl %ecx,0x0(%r15)
L_67399:
	movq $0x1963,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r10,0x0(%r13)
	movq %r14,%r15
	jmp L_67347
.p2align 0x4
L_401393:
L_67396:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_401394:
L_67401:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_67402+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_67402
.p2align 0x4
.long 0xFAE
L_67402:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_67394
.p2align 0x4
L_401396:
L_67406:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_67396
L_67407:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_401397
L_67409:
	movl %ecx,0x0(%r15)
	movq (globalObjptr+0x578)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_401397:
L_67408:
	movq (globalObjptr+0x578)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_401399:
	movq %r14,(localObjptr+0x18)(%rip)
	jmp L_67390
.p2align 0x4
L_401400:
	movq %r14,(localObjptr+0x18)(%rip)
	jmp L_67390
.p2align 0x4
L_401401:
L_67410:
	xorl %ecx,%ecx
	jmp L_67395
.p2align 0x4
L_401402:
L_67385:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_401403:
L_67383:
	movq 0x0(%rbp),%r13
	movq 0x0(%r13),%r11
	movslq %r14d,%r15
	movq 0x0(%r11,%r15,8),%r11
	movq %r11,%r15
	jmp L_67347
.p2align 0x4
L_401404:
L_67380:
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_67349
L_67381:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r14,1)
	movq %r13,0x0(%r15)
	movq %r11,%r15
	jmp L_67347
.p2align 0x4
L_401406:
L_67375:
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r13
	movl 0x0(%r13),%ecx
.p2align 0x4,,0x7
loop_824:
	movq 0x0(%r15),%r14
	movslq %ecx,%r13
	movq 0x8(%r15),%r11
	movq 0x0(%r11,%r13,8),%r10
	cmpq $0x1,%r10
	jne L_401408
L_67378:
	incl %ecx
	jo L_67359
L_67379:
	jmp loop_824
.p2align 0x4
L_401408:
L_67376:
	incl %ecx
	jo L_67359
L_67377:
	movl %ecx,0x0(%r14)
	movq %r10,%r15
	jmp L_67347
.p2align 0x4
L_401410:
L_67374:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x30(%rbp)
	movslq %r14d,%r13
	movq 0x8(%r15),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq %r11,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_67351+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp simplifyType_0
.p2align 0x4
L_401411:
L_67373:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x30(%rbp)
	movslq %r14d,%r13
	movq 0x8(%r15),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq %r11,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_67351+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp simplifyType_0
.p2align 0x4
L_401412:
L_67368:
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r13
	movl 0x0(%r13),%ecx
.p2align 0x4,,0x7
loop_823:
	movq 0x0(%r15),%r14
	movslq %ecx,%r13
	movq 0x8(%r15),%r11
	movq 0x0(%r11,%r13,8),%r10
	cmpq $0x1,%r10
	jne L_401414
L_67371:
	incl %ecx
	jo L_67359
L_67372:
	jmp loop_823
.p2align 0x4
L_401414:
L_67369:
	incl %ecx
	jo L_67359
L_67370:
	movl %ecx,0x0(%r14)
	movq %r10,%r15
	jmp L_67347
.p2align 0x4
L_401416:
L_67363:
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r13
	movl 0x0(%r13),%ecx
.p2align 0x4,,0x7
loop_822:
	movq 0x0(%r15),%r14
	movslq %ecx,%r13
	movq 0x8(%r15),%r11
	movq 0x0(%r11,%r13,8),%r10
	cmpq $0x1,%r10
	jne L_401418
L_67366:
	incl %ecx
	jo L_67359
L_67367:
	jmp loop_822
.p2align 0x4
L_401418:
L_67364:
	incl %ecx
	jo L_67359
L_67365:
	movl %ecx,0x0(%r14)
	movq %r10,%r15
	jmp L_67347
.p2align 0x4
L_401420:
L_67357:
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r13
	movl 0x0(%r13),%ecx
.p2align 0x4,,0x7
loop_821:
	movq 0x0(%r15),%r14
	movslq %ecx,%r13
	movq 0x8(%r15),%r11
	movq 0x0(%r11,%r13,8),%r10
	cmpq $0x1,%r10
	jne L_401422
L_67361:
	incl %ecx
	jo L_67359
L_67362:
	jmp loop_821
.p2align 0x4
L_401422:
L_67358:
	incl %ecx
	jo L_67359
L_67360:
	movl %ecx,0x0(%r14)
	movq %r10,%r15
	jmp L_67347
.p2align 0x4
L_401424:
L_67353:
	movslq %r14d,%r15
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r13
	movq 0x0(%r13,%r15,8),%r11
	movq %r11,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_67354+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_11
.p2align 0x4
L_401425:
L_67352:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x30(%rbp)
	movslq %r14d,%r13
	movq 0x8(%r15),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq %r11,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_67351+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp valueType_0
.p2align 0x4
L_401426:
L_67350:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x30(%rbp)
	movslq %r14d,%r13
	movq 0x8(%r15),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq %r11,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_67351+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_63
.p2align 0x4
L_401427:
L_67449:
	movq (globalObjptr+0x4A0)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_401428:
L_67342:
	movq 0x8(%rbp),%r14
	movq $0x30B,0xFFFFFFFFFFFFFFF8(%r14)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_401429:
L_67450:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_67451+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_67451
.p2align 0x4
.long 0x45C
L_67451:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	jmp L_67341
.p2align 0x4
L_401430:
L_67452:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_401431:
L_67453:
	movq (globalObjptr+0xC10)(%rip),%r15
	movq %r15,0x8(%rbp)
	jmp L_67340
.p2align 0x4
.long 0x5F8
L_67351:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	jmp L_67347
.p2align 0x4
.long 0x456
L_67447:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq 0x0(%r15),%r15
	movq %r15,0x28(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_67351+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp valueType_0
.p2align 0x4
.long 0x5F8
L_67416:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r14),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x1444,%r15
	jne L_401433
L_67417:
	movq 0x8(%r13),%r14
	movq 0x8(%r14),%r13
	movq %r13,%r15
	jmp L_67347
.p2align 0x4
L_401433:
L_67355:
	movq (globalObjptr+0x1500)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x5F8
L_67354:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r14),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x1442,%r15
	jne L_67355
L_67356:
	movq 0x8(%r13),%r14
	movq 0x8(%r14),%r13
	movq %r13,%r15
	jmp L_67347
.text
.p2align 0x4
.globl get_63
.hidden get_63
get_63:
L_67456:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_67581
L_67457:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_401449
L_67458:
	movq 0x8(%rbp),%r11
	movq 0x20(%r11),%r14
	movq 0x18(%r11),%r10
	movq %r10,0x10(%rbp)
	movq 0x10(%r11),%r10
	movq %r10,0x18(%rbp)
	movq 0x8(%r11),%r10
	movq %r10,0x20(%rbp)
	movq 0x0(%r11),%r10
	movq %r10,0x28(%rbp)
	movq 0x0(%rbp),%r11
	movq 0x10(%r11),%r10
	movq %r10,0x30(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_401448
L_67460:
	movq %r15,0x0(%r11)
	movq 0x0(%r10),%r11
	cmpq $0x1,%r11
	je L_401447
L_67461:
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r11
	xorl %ecx,%ecx
	movq %r11,%r15
.p2align 0x4,,0x7
L_67463:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_401446
L_67573:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xCB1,%r11
	jne L_401445
L_67574:
	movq 0x8(%r13),%r11
	cmpq %r14,0x0(%r13)
	movq %r14,(localObjptr+0x0)(%rip)
	je L_401442
L_67464:
	incl %ecx
	movl %ecx,0x38(%rbp)
	jo L_401441
L_67466:
	cmpq $0x1,%r15
	je L_401435
L_67467:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x0)(%rip),%r14
	jmp L_67463
.p2align 0x4
L_401435:
L_67468:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_67469
L_67571:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_67572+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_67572
.p2align 0x4
.long 0x634
L_67572:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_67469:
	movl 0x38(%rbp),%ecx
L_67470:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_401439
L_67472:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_67474
L_67570:
	movl %ecx,0x0(%r15)
L_67474:
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x28DD,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x0(%r15)
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xE96,%r15
	jne L_401437
L_67475:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq %r13,0x10(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_401436
L_67478:
	movl %r13d,0x48(%rbp)
	movq $0x389B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_67479+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_5
.p2align 0x4
L_401436:
L_67477:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_401437:
L_67569:
	movq (globalObjptr+0x1DE0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_401439:
L_67471:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_401441:
L_67465:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_401442:
L_67576:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_67471
L_67577:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_401443
L_67579:
	movl %ecx,0x0(%r15)
	movq %r11,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_401443:
L_67578:
	movq %r11,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_401445:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_67464
.p2align 0x4
L_401446:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_67464
.p2align 0x4
L_401447:
L_67580:
	xorl %ecx,%ecx
	jmp L_67470
.p2align 0x4
L_401448:
L_67459:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_401449:
L_67581:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_67582+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_67582
.p2align 0x4
.long 0x45F
L_67582:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_67458
.p2align 0x4
.long 0x4A7
L_67479:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_67480
L_67567:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_67568+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_67568
.p2align 0x4
.long 0x4B0
L_67568:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_67480:
	movq 0x10(%rbp),%r13
	movq 0x10(%r13),%r15
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r14
	incq %r14
	jo L_67459
L_67481:
	movq %r14,0x0(%r13)
	movq 0x0(%r15),%r13
	cmpq $0x1,%r13
	je L_401487
L_67482:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r13
	movl $0x0,0x40(%rbp)
	movq %r13,%r15
.p2align 0x4,,0x7
L_67484:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_67485
L_67504:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0xD95,%r13
	jne L_67485
L_67505:
	movq 0x8(%r15),%r13
	movq %r13,0x48(%rbp)
	movq 0x0(%r15),%r13
	cmpq %r13,0x18(%rbp)
	je L_401455
L_67485:
	movl 0x40(%rbp),%r13d
	incl %r13d
	movl %r13d,0x44(%rbp)
	jo L_67465
L_67486:
	cmpq $0x1,%r14
	je L_401451
L_67487:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movl %r13d,0x40(%rbp)
	jmp L_67484
.p2align 0x4
L_401451:
L_67488:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_67489
L_67502:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_67503+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_67503
.p2align 0x4
.long 0xFAF
L_67503:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_67489:
	movl 0x44(%rbp),%ecx
L_67490:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_67471
L_67491:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl datatypee_0
L_67501:
	movl %ecx,0x0(%r15)
datatypee_0:
	movq 0x10(%rbp),%r15
	movl 0x0(%r15),%r14d
	movl %r14d,0x50(%rbp)
	movq $0x1D69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq %r14,0x48(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x48,%rbp
	leaq (x_160+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lookup_1
.p2align 0x4
L_401455:
L_67507:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_67508
L_67564:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_67565+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_67565
.p2align 0x4
.long 0x696
L_67565:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_67508:
	movl 0x40(%rbp),%r14d
	movslq %r14d,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_67471
L_67509:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %r14d,0x0(%r13)
	jl L_401476
L_67510:
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_401475
L_67511:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x21CD,%r15
	je L_401474
	cmpq $0x21CE,%r15
	je L_401470
	cmpq $0x21CF,%r15
	je L_401466
	cmpq $0x21D0,%r15
	je L_401463
	cmpq $0x21D1,%r15
	je L_401459
L_67512:
	movq 0x0(%r14),%r15
L_67513:
	movq 0x38(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r10,%r13
	jne L_67477
L_67515:
	cmpl $0x1,%r11d
	jne L_401457
L_67518:
	cmpq $0x0,%r13
	jna L_401456
L_67521:
	movq 0x0(%r14),%r13
	movq 0x8(%r15),%r14
	movq %r14,0x50(%rbp)
	movl 0x0(%r15),%r14d
	xorl 0x0(%r13),%r14d
	movl %r14d,0x48(%rbp)
	movq $0x1D67,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r15,0x40(%rbp)
	addq $0x10,%r12
	addq $0x40,%rbp
	leaq (L_67522+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lookup_1
.p2align 0x4
L_401456:
L_67520:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_401457:
L_67517:
	movq (globalObjptr+0x70A0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_401459:
L_67545:
	movq 0x0(%r14),%r15
L_67546:
	movq 0x38(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r10,%r13
	jne L_67477
L_67548:
	cmpl $0x1,%r11d
	jne L_67517
L_67550:
	cmpq $0x0,%r13
	jna L_67520
L_67552:
	movq 0x0(%r14),%r13
	movq 0x8(%r15),%r14
	movq %r14,0x50(%rbp)
	movl 0x0(%r15),%r14d
	xorl 0x0(%r13),%r14d
	movl %r14d,0x48(%rbp)
	movq $0x1D6B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r15,0x40(%rbp)
	addq $0x10,%r12
	addq $0x40,%rbp
	leaq (L_67522+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lookup_1
.p2align 0x4
L_401463:
L_67544:
	movq 0x0(%r14),%r15
x_161:
	movq 0x38(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r10,%r13
	jne L_67477
L_67495:
	testl %r11d,%r11d
	jz L_401464
L_67496:
	movq (globalObjptr+0x70A8)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_401464:
L_67498:
	movq $0x1963,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	movq %r15,0x0(%rbp)
	addq $0x18,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x30(%rbp),%r15
	movq 0x0(%r15),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq %r11,0x0(%r15)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_401466:
L_67536:
	movq 0x0(%r14),%r15
L_67537:
	movq 0x38(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r10,%r13
	jne L_67477
L_67539:
	cmpl $0x1,%r11d
	jne L_67517
L_67541:
	cmpq $0x0,%r13
	jna L_67520
L_67543:
	movq 0x0(%r14),%r13
	movq 0x8(%r15),%r14
	movq %r14,0x50(%rbp)
	movl 0x0(%r15),%r14d
	xorl 0x0(%r13),%r14d
	movl %r14d,0x48(%rbp)
	movq $0x1D63,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r15,0x40(%rbp)
	addq $0x10,%r12
	addq $0x40,%rbp
	leaq (L_67522+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lookup_1
.p2align 0x4
L_401470:
L_67528:
	movq 0x0(%r14),%r15
L_67529:
	movq 0x38(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r13,%r10
	jne L_67477
L_67531:
	cmpl $0x1,%r11d
	jne L_67517
L_67533:
	cmpq $0x0,%r13
	jna L_67520
L_67535:
	movq 0x0(%r14),%r13
	movq 0x8(%r15),%r14
	movq %r14,0x50(%rbp)
	movl 0x0(%r15),%r14d
	xorl 0x0(%r13),%r14d
	movl %r14d,0x48(%rbp)
	movq $0x1D61,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r15,0x40(%rbp)
	addq $0x10,%r12
	addq $0x40,%rbp
	leaq (L_67522+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lookup_1
.p2align 0x4
L_401474:
L_67526:
	movq 0x0(%r14),%r15
L_67527:
	movq %r15,0x48(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_67522+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tuple_11
.p2align 0x4
L_401475:
L_67554:
	movq (globalObjptr+0x7098)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_401476:
L_67555:
	movq (globalObjptr+0x1078)(%rip),%r14
	movl 0x40(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_67554
L_67556:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x21CD,%r15
	je L_401481
	cmpq $0x21CE,%r15
	je L_401480
	cmpq $0x21CF,%r15
	je L_401479
	cmpq $0x21D0,%r15
	je L_401478
	cmpq $0x21D1,%r15
	je L_401477
L_67557:
	movq 0x0(%r14),%r15
	jmp L_67513
.p2align 0x4
L_401477:
L_67562:
	movq 0x0(%r14),%r15
	jmp L_67546
.p2align 0x4
L_401478:
L_67561:
	movq 0x0(%r14),%r15
	jmp x_161
.p2align 0x4
L_401479:
L_67560:
	movq 0x0(%r14),%r15
	jmp L_67537
.p2align 0x4
L_401480:
L_67559:
	movq 0x0(%r14),%r15
	jmp L_67529
.p2align 0x4
L_401481:
L_67558:
	movq 0x0(%r14),%r15
	jmp L_67527
.p2align 0x4
L_401487:
L_67566:
	xorl %ecx,%ecx
	jmp L_67490
.p2align 0x4
.long 0x7B4
x_160:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_67493
L_67499:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_67500+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_67500
.p2align 0x4
.long 0x5F4
L_67500:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_67493:
	movq 0x40(%rbp),%r15
	jmp x_161
.p2align 0x4
.long 0x5F1
L_67522:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_67523
L_67524:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_67525+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_67525
.p2align 0x4
.long 0x489
L_67525:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_67523:
	movq 0x38(%rbp),%r15
	jmp L_67498
.text
.p2align 0x4
.globl tuple_11
.hidden tuple_11
tuple_11:
L_67583:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_67584
L_67598:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_67599+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_67599
.p2align 0x4
.long 0x45F
L_67599:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_67584:
	movq 0x8(%rbp),%r15
	movl 0x0(%r15),%ebx
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%ecx
	movslq %ecx,%r15
	cmpq %r14,%r15
	jne L_401497
L_67586:
	cmpl $0x1,%ecx
	je L_401495
L_67587:
	cmpl $0x0,%ecx
	jl L_401494
L_67588:
	movl %ebx,0x8(%rbp)
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_830:
	cmpl %ecx,%ebx
	jnl L_401492
L_67593:
	movslq %ebx,%r15
	movl 0x8(%rbp),%r14d
	imull $0x5555,%r14d
	movq 0x0(%rbp),%r13
	movq 0x0(%r13,%r15,8),%r11
	xorl 0x0(%r11),%r14d
	movl %r14d,0x8(%rbp)
	incl %ebx
	jmp loop_830
.p2align 0x4
L_401492:
L_67589:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_67590
L_67591:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_67592+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_67592
.p2align 0x4
.long 0x65A
L_67592:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_67590:
	movq $0x1D65,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	jmp lookup_1
.p2align 0x4
L_401494:
L_67594:
	movq (globalObjptr+0x4F8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_401495:
L_67595:
	cmpq $0x0,%r14
	ja L_401496
L_67596:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_401496:
L_67597:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_401497:
L_67585:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl valueType_0
.hidden valueType_0
valueType_0:
L_67600:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_67601
L_67644:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_67645+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_67645
.p2align 0x4
.long 0x45F
L_67645:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_67601:
	movq 0x8(%rbp),%r15
	movq 0x88(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x80(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x78(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x70(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x68(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x60(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_67602+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_5
.p2align 0x4
.long 0x636
L_67602:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r15,0x40(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1456,%r15
	jne L_401501
L_67604:
	movq 0x8(%r14),%r15
	movq 0x10(%r15),%r13
	movq %r13,0x40(%rbp)
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_401500
L_67605:
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_401500:
L_67606:
	movq 0x0(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_67607+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_5
.p2align 0x4
L_401501:
L_67603:
	movq (globalObjptr+0x1500)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x67A
L_67607:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_67608
L_67642:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_67643+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_67643
.p2align 0x4
.long 0x8A7
L_67643:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_67608:
	movq 0x48(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1456,%r15
	jne L_67603
L_67609:
	movq 0x8(%r14),%r15
	movq 0x8(%r15),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x1084,%r15
	je L_401508
	cmpq $0x1085,%r15
	je L_401506
	cmpq $0x1086,%r15
	je L_401505
L_67610:
	movq 0x8(%r13),%r15
	movb 0x0(%r13),%r14b
	cmpb $0x1,%r14b
	je L_401504
	cmpb $0x2,%r14b
	je L_401503
	cmpb $0x3,%r14b
	je L_401502
L_67611:
	movq %r15,0x50(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_67612+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp valueType_0
.p2align 0x4
L_401502:
L_67628:
	movq %r15,0x50(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_67629+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp valueType_0
.p2align 0x4
L_401503:
L_67623:
	movq %r15,0x50(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_67624+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp valueType_0
.p2align 0x4
L_401504:
L_67618:
	movq %r15,0x50(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_67619+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp valueType_0
.p2align 0x4
L_401505:
L_67638:
	movq %r13,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_67639+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_6
.p2align 0x4
L_401506:
L_67634:
	movq 0x0(%r13),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_401507
L_67636:
	movl %r13d,0x58(%rbp)
	movq $0x386D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_67637+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_5
.p2align 0x4
L_401507:
L_67635:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_401508:
L_67633:
	movq 0x0(%r13),%r15
	movq %r15,0x50(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_67614+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_63
.p2align 0x4
.long 0x79C
L_67612:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_67613
L_67616:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_67617+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_67617
.p2align 0x4
.long 0x79E
L_67617:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_67613:
	movq 0x20(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x60(%rbp)
	movl 0x0(%r15),%r14d
	movq 0x28(%rbp),%r15
	xorl 0x0(%r15),%r14d
	movl %r14d,0x58(%rbp)
	movq $0x1D61,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq %r14,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_67614+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lookup_1
.p2align 0x4
.long 0x78D
L_67629:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_67630
L_67631:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_67632+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_67632
.p2align 0x4
.long 0x78E
L_67632:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_67630:
	movq 0x38(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x60(%rbp)
	movl 0x0(%r15),%r14d
	movq 0x48(%rbp),%r15
	xorl 0x0(%r15),%r14d
	movl %r14d,0x58(%rbp)
	movq $0x1D6B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq %r14,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_67614+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lookup_1
.p2align 0x4
.long 0x868
L_67624:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_67625
L_67626:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_67627+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_67627
.p2align 0x4
.long 0x86A
L_67627:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_67625:
	movq 0x30(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x60(%rbp)
	movl 0x0(%r15),%r14d
	movq 0x38(%rbp),%r15
	xorl 0x0(%r15),%r14d
	movl %r14d,0x58(%rbp)
	movq $0x1D67,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq %r14,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_67614+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lookup_1
.p2align 0x4
.long 0x841
L_67619:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_67620
L_67621:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_67622+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_67622
.p2align 0x4
.long 0x872
L_67622:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_67620:
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x60(%rbp)
	movl 0x0(%r15),%r14d
	movq 0x20(%rbp),%r15
	xorl 0x0(%r15),%r14d
	movl %r14d,0x58(%rbp)
	movq $0x1D63,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq %r14,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_67614+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lookup_1
.p2align 0x4
.long 0xAA7
L_67639:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x144E,%r15
	jne L_67603
L_67640:
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x50(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_67641+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lambdasInfo_0
.p2align 0x4
.long 0x6DA
L_67637:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq %r15,0x50(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_67614+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tuple_11
.p2align 0x4
.long 0x847
L_67614:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
L_67615:
	movq 0x40(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x847
L_67641:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x58(%rbp),%r14
	movq %r14,0x50(%rbp)
	jmp L_67615
.text
.p2align 0x4
.globl lambdasInfo_0
.hidden lambdasInfo_0
lambdasInfo_0:
L_67646:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_67720
L_67647:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_401529
L_67648:
	movq 0x8(%rbp),%r13
	movq 0xB8(%r13),%r11
	movq %r11,0x10(%rbp)
	movq 0xB0(%r13),%r11
	movq %r11,0x18(%rbp)
	movq 0xA8(%r13),%r11
	movq %r11,0x20(%rbp)
	movq 0xA0(%r13),%r11
	movq %r11,0x28(%rbp)
	movq 0x98(%r13),%r11
	movq %r11,0x30(%rbp)
	movq 0x90(%r13),%r11
	movq %r11,0x38(%rbp)
	movq 0x0(%rbp),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x40(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_401528
L_67650:
	movq %r15,0x0(%r13)
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_401527
L_67651:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_67653:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_67654
L_67712:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xD94,%r13
	jne L_67654
L_67713:
	movq 0x8(%r14),%r13
	movq 0x10(%rbp),%r11
	cmpq %r11,0x0(%r14)
	je L_401522
L_67654:
	incl %ecx
	movl %ecx,0x48(%rbp)
	jo L_401521
L_67656:
	cmpq $0x1,%r15
	je L_401516
L_67657:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_67653
.p2align 0x4
L_401516:
L_67658:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_67659
L_67710:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_67711+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_67711
.p2align 0x4
.long 0xFBA
L_67711:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_67659:
	movl 0x48(%rbp),%ecx
L_67660:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_401519
L_67662:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_67664
L_67709:
	movl %ecx,0x0(%r15)
L_67664:
	movq $0x130B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x1B29,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x10(%rbp)
	movq 0x40(%rbp),%r15
	movq 0x0(%r15),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq %r11,0x0(%r15)
L_67665:
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_401517
L_67666:
	movq 0x8(%r14),%r15
	movq %r15,0x0(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_401517:
L_67667:
	movq 0x18(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_67668+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_401519:
L_67661:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_401521:
L_67655:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_401522:
L_67715:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_67661
L_67716:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_401523
L_67718:
	movl %ecx,0x0(%r15)
	movq %r13,0x10(%rbp)
	jmp L_67665
.p2align 0x4
L_401523:
L_67717:
	movq %r13,0x10(%rbp)
	jmp L_67665
.p2align 0x4
L_401527:
L_67719:
	xorl %ecx,%ecx
	jmp L_67660
.p2align 0x4
L_401528:
L_67649:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_401529:
L_67720:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_67721+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_67721
.p2align 0x4
.long 0x45F
L_67721:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_67648
.p2align 0x4
.long 0xFB0
L_67668:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movl 0x48(%rbp),%r15d
	movl %r15d,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_67669
L_67707:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_67708+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_67708
.p2align 0x4
.long 0xFB9
L_67708:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_67669:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x40(%rbp)
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x18(%rbp),%r14d
	movl %r14d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xEFA8)(%rip),%r14
	movq %r14,0x18(%r13)
	movq 0x0(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x48(%rbp)
	cmpq $0x1,%r13
	je L_401539
L_67670:
	movq 0x8(%r13),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_67671:
	incl %ecx
	movl %ecx,0x1C(%rbp)
	jo L_67655
L_67672:
	cmpq $0x1,%r15
	je L_401531
L_67673:
	movq 0x8(%r15),%r15
	jmp L_67671
.p2align 0x4
L_401531:
L_67674:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_67675
L_67704:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_67705+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_67705
.p2align 0x4
.long 0xFB8
L_67705:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_67675:
	movl 0x1C(%rbp),%ecx
L_67676:
	movslq %ecx,%r15
	movq %r15,0x50(%rbp)
	testq %r15,%r15
	jz L_401536
L_67677:
	cmpq $0x7FFFFFFF,%r15
	ja L_401535
L_67678:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_67679
L_67700:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_67701+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_67701
.p2align 0x4
.long 0xFB1
L_67701:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_67679:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x166D,%rcx
	movq 0x50(%rbp),%rdx
	movq $0x10,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_67680+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_67680
.p2align 0x4
.long 0xFB1
L_67680:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq %rax,0x58(%rbp)
L_67681:
	movq 0x48(%rbp),%r15
	movq $0x0,0x48(%rbp)
loop_831:
	movq 0x50(%rbp),%r14
	cmpq %r14,0x48(%rbp)
	jnl L_401533
L_67693:
	cmpq $0x1,%r15
	je L_401532
L_67694:
	movq 0x8(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x68(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_67695+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_401532:
L_67699:
	movq (globalObjptr+0x4B0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_401533:
L_67682:
	movq 0x58(%rbp),%r15
	movq $0xBDD,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x1D69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x68(%rbp)
	movl 0x18(%rbp),%r15d
	movl %r15d,0x70(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x68,%rbp
	leaq (L_67683+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lookup_1
.p2align 0x4
L_401535:
L_67702:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_401536:
L_67703:
	movq (globalObjptr+0x70B0)(%rip),%r14
	movq %r14,0x58(%rbp)
	jmp L_67681
.p2align 0x4
L_401539:
L_67706:
	xorl %ecx,%ecx
	jmp L_67676
.p2align 0x4
.long 0xFB6
L_67695:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movl 0x78(%rbp),%r15d
	movl %r15d,0x1C(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_67696
L_67697:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_67698+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_67698
.p2align 0x4
.long 0xFB7
L_67698:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_67696:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x1C(%rbp),%r14d
	movl %r14d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xEFB0)(%rip),%r14
	movq %r14,0x18(%r13)
	movq 0x58(%rbp),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq 0x48(%rbp),%r10
	movq %r10,%r15
	salq $0x4,%r15
	movq 0x68(%rbp),%r9
	movq %r9,0x0(%r14,%r15,1)
	movq %r14,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%r11,%r15,1)
	movq %r10,%r15
	salq $0x4,%r15
	movq %r13,0x8(%r14,%r15,1)
	incq %r10
	movq %r10,0x48(%rbp)
	movq 0x60(%rbp),%r15
	jmp loop_831
.p2align 0x4
.long 0xFB2
L_67683:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_67684
L_67691:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_67692+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_67692
.p2align 0x4
.long 0xFB5
L_67692:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_67684:
	movq $0x2417,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x10(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r15,0x0(%r13)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_401542
L_67686:
	movl %r13d,0x70(%rbp)
	movq $0x3907,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x30(%rbp),%r13
	movq %r13,0x8(%r15)
	movq %r14,0x10(%r15)
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_67687+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_22
.p2align 0x4
L_401542:
L_67685:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xFB3
L_67687:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_67688
L_67689:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_67690+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_67690
.p2align 0x4
.long 0xFB4
L_67690:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_67688:
	movq $0x11E7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x38(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x241B,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl tabulate_22
.hidden tabulate_22
tabulate_22:
L_67722:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_67723
L_67864:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_67865+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_67865
.p2align 0x4
.long 0x457
L_67865:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_67723:
	movslq 0x8(%rbp),%rdx
	movq %rdx,0x10(%rbp)
	testq %rdx,%rdx
	jz L_401567
L_67724:
	cmpq $0x7FFFFFFF,%rdx
	ja L_401566
L_67725:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x146B,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_67726+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_67726
.p2align 0x4
.long 0x452
L_67726:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq %rax,0x8(%rbp)
L_67727:
	movq $0x0,0x18(%rbp)
.p2align 0x4,,0x7
loop_832:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_401565
.p2align 0x4,,0x7
L_67728:
	movq 0x18(%rbp),%r15
	cmpq 0x10(%rbp),%r15
	jnl L_401564
L_67730:
	movl %r15d,%r14d
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%rax
	shrq $0x1,%rax
	subq $0x1C7C,%rax
	cmpq $0x7,%rax
	ja L_401545
	leaq jumpTable_178(%rip),%rbx
	jmp *(%rbx,%rax,8)
.data
.p2align 0x4
jumpTable_178:
.quad L_401563,L_401562,L_401558,L_401557,L_401553,L_401549,L_401547,L_401546
.text
.p2align 0x4
L_401545:
L_67731:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r13
	movq %r13,0x48(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x28(%rbp)
	movslq %r14d,%r13
	salq $0x4,%r13
	movq 0x18(%r15),%r14
	movq 0x0(%r14,%r13,1),%r11
	movq %r11,0x30(%rbp)
	movq %r11,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_67732+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_64
.p2align 0x4
L_401546:
L_67842:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x40(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x20(%rbp)
	movslq %r14d,%r13
	movq %r13,%r14
	salq $0x4,%r14
	movq 0x10(%r15),%r11
	movq 0x0(%r11,%r14,1),%r10
	movq %r10,0x38(%rbp)
	salq $0x4,%r13
	movq 0x8(%r11,%r13,1),%r14
	movq %r14,0x28(%rbp)
	addq $0x38,%rbp
	leaq (L_67843+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_65
.p2align 0x4
L_401547:
L_67831:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r13
	movslq %r14d,%r11
	movq 0x8(%r15),%r14
	movq 0x0(%r14,%r11,8),%r10
	movq 0x0(%r10),%r9
	movq %r9,0x20(%rbp)
	movq 0x8(%r10),%r9
	movq $0x4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x28(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r9),%r14
	movl %r14d,%r11d
	movslq %r11d,%r10
	cmpq %r10,%r14
	jne L_401548
L_67833:
	movl %r11d,0x40(%rbp)
	movq $0x3839,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x8(%r14)
	movq %r9,0x10(%r14)
	addq $0x20,%r12
	movq %r15,0x0(%r14)
	movq %r14,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_67834+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_21
.p2align 0x4
L_401548:
L_67751:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_401549:
L_67826:
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r13
	movl 0x0(%r13),%ecx
.p2align 0x4,,0x7
loop_837:
	movq 0x0(%r15),%r14
	movslq %ecx,%r13
	movq 0x8(%r15),%r11
	movq 0x0(%r11,%r13,8),%r10
	cmpq $0x1,%r10
	jne L_401551
L_67829:
	incl %ecx
	jo L_401550
L_67830:
	jmp loop_837
.p2align 0x4
L_401550:
L_67766:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_401551:
L_67827:
	incl %ecx
	jo L_67766
L_67828:
	movl %ecx,0x0(%r14)
	movq %r10,%r15
.p2align 0x4,,0x7
L_67739:
	movq 0x8(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x18(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x18(%rbp)
	jmp loop_832
.p2align 0x4
L_401553:
L_67821:
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r13
	movl 0x0(%r13),%ecx
.p2align 0x4,,0x7
loop_836:
	movq 0x0(%r15),%r14
	movslq %ecx,%r13
	movq 0x8(%r15),%r11
	movq 0x0(%r11,%r13,8),%r10
	cmpq $0x1,%r10
	jne L_401555
L_67824:
	incl %ecx
	jo L_67766
L_67825:
	jmp loop_836
.p2align 0x4
L_401555:
L_67822:
	incl %ecx
	jo L_67766
L_67823:
	movl %ecx,0x0(%r14)
	movq %r10,%r15
	jmp L_67739
.p2align 0x4
L_401557:
L_67770:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x40(%rbp)
	movslq %r14d,%r13
	movq 0x8(%r15),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq 0x0(%r11),%r10
	movq %r10,0x20(%rbp)
	movq 0x8(%r11),%r9
	movq %r9,0x28(%rbp)
	movq %r10,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_67771+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1399
.p2align 0x4
L_401558:
L_67764:
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r13
	movl 0x0(%r13),%ecx
.p2align 0x4,,0x7
loop_833:
	movq 0x0(%r15),%r14
	movslq %ecx,%r13
	movq 0x8(%r15),%r11
	movq 0x0(%r11,%r13,8),%r10
	cmpq $0x1,%r10
	jne L_401560
L_67768:
	incl %ecx
	jo L_67766
L_67769:
	jmp loop_833
.p2align 0x4
L_401560:
L_67765:
	incl %ecx
	jo L_67766
L_67767:
	movl %ecx,0x0(%r14)
	movq %r10,%r15
	jmp L_67739
.p2align 0x4
L_401562:
L_67763:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq $0x10A7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	jmp L_67739
.p2align 0x4
L_401563:
L_67747:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x40(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x20(%rbp)
	movslq %r14d,%r13
	movq 0x10(%r15),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq 0x0(%r11),%r10
	movq %r10,0x28(%rbp)
	movq %r10,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_67748+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_19
.p2align 0x4
L_401564:
L_67729:
	movq 0x8(%rbp),%r14
	movq $0xB09,0xFFFFFFFFFFFFFFF8(%r14)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_401565:
L_67860:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_67861+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_67861
.p2align 0x4
.long 0x45C
L_67861:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	jmp L_67728
.p2align 0x4
L_401566:
L_67862:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_401567:
L_67863:
	movq (globalObjptr+0xBF0)(%rip),%r15
	movq %r15,0x8(%rbp)
	jmp L_67727
.p2align 0x4
.long 0x576
L_67732:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_67733
L_67745:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_67746+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_67746
.p2align 0x4
.long 0xF85
L_67746:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_67733:
	movq 0x38(%rbp),%r15
	cmpq $0x1,%r15
	je L_401569
L_67734:
	movq %r15,0x40(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (new1_5+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp valueType_0
.p2align 0x4
L_401569:
L_67744:
	movq 0x20(%rbp),%r14
	xchgq %r14,%r15
L_67738:
	movq $0x10A7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r14,%r15
	jmp L_67739
.p2align 0x4
.long 0x557
L_67843:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_67844
L_67858:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_67859+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_67859
.p2align 0x4
.long 0x575
L_67859:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_67844:
	movq 0x20(%rbp),%r15
	movq 0xC0(%r15),%r14
	movq 0x70(%r15),%r13
	movq %r13,0x38(%rbp)
	movq 0x30(%rbp),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x40(%rbp)
	movq 0x18(%r13),%r10
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	jne L_401572
L_67850:
	movq 0x0(%r10),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r11
	movl %r11d,%r10d
	movslq %r10d,%r9
	cmpq %r11,%r9
	jne L_67751
L_67852:
	movl %r10d,0x58(%rbp)
	movq $0x389D,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x8(%r11)
	movq %r13,0x10(%r11)
	addq $0x20,%r12
	movq %r15,0x0(%r11)
	movq %r11,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_67853+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_5
.p2align 0x4
L_401572:
L_67845:
	xchgq %r13,%r15
new1_6:
	movq $0x3885,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x38(%rbp)
	addq $0x10,%r12
	movl $0x1,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_67846+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_5
.p2align 0x4
.long 0x557
L_67834:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_67835
L_67840:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_67841+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_67841
.p2align 0x4
.long 0x575
L_67841:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_67835:
	movq $0x4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0xC1B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x30(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x28(%rbp),%r13
	movl 0x0(%r13),%r11d
	movl %r11d,0x38(%rbp)
	movq $0x3873,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r13,0x30(%rbp)
	addq $0x18,%r12
	addq $0x30,%rbp
	leaq (L_67836+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_5
.p2align 0x4
.long 0x557
L_67771:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_67772
L_67819:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_67820+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_67820
.p2align 0x4
.long 0x575
L_67820:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_67772:
	movq 0x28(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x38(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_67751
L_67774:
	movq 0x30(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%ecx
	movslq %ecx,%r11
	cmpq %r14,%r11
	jne L_67751
L_67776:
	cmpl %ecx,%r13d
	jne L_67778
L_67779:
	cmpl $0x0,%r13d
	jl L_401580
L_67780:
	movq $0x1,0x40(%rbp)
	xorl %ecx,%ecx
loop_834:
	cmpl 0x38(%rbp),%ecx
	jnl L_401575
L_67796:
	movl %ecx,%r15d
	incl %r15d
	movl %r15d,0x3C(%rbp)
	movslq %ecx,%r15
	movq 0x28(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x48(%rbp)
	movq 0x30(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_67797+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_3
.p2align 0x4
L_401575:
L_67781:
	movq $0xC1D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x28(%rbp)
	addq $0x10,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14)
	cmpq $0x1,%r13
	je L_401579
L_67782:
	movq 0x8(%r13),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_67783:
	incl %ecx
	movl %ecx,0x30(%rbp)
	jo L_67766
L_67784:
	cmpq $0x1,%r15
	je L_401576
L_67785:
	movq 0x8(%r15),%r15
	jmp L_67783
.p2align 0x4
L_401576:
L_67786:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_67787
L_67793:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_67794+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_67794
.p2align 0x4
.long 0x68B
L_67794:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_67787:
	movl 0x30(%rbp),%ecx
L_67788:
	movl %ecx,0x38(%rbp)
	movq $0x387D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_67789+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_5
.p2align 0x4
L_401579:
L_67795:
	xorl %ecx,%ecx
	jmp L_67788
.p2align 0x4
L_401580:
L_67778:
	movq (globalObjptr+0xCF8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x557
L_67748:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_67749
L_67761:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_67762+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_67762
.p2align 0x4
.long 0x575
L_67762:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_67749:
	movq 0x30(%rbp),%r15
	movq 0x8(%r15),%r14
	movq $0x4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x38(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r10,%r13
	jne L_67751
L_67752:
	movl %r11d,0x50(%rbp)
	movq $0x3829,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x10(%r13)
	addq $0x20,%r12
	movq %r15,0x0(%r13)
	movq 0x20(%rbp),%r15
	movq %r15,0x8(%r13)
	movq %r13,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_67753+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_21
.p2align 0x4
.long 0x568
new1_5:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_67735
L_67742:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_67743+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_67743
.p2align 0x4
.long 0x591
L_67743:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_67735:
	movq $0x3885,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x40(%rbp)
	movl $0x1,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_67736+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_5
.p2align 0x4
.long 0xC85
L_67853:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq %r15,0x50(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_67854+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tuple_11
.p2align 0x4
.long 0x56C
L_67846:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_67847
L_67848:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_67849+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_67849
.p2align 0x4
.long 0x579
L_67849:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_67847:
	movq $0x10A7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_67739
.p2align 0x4
.long 0x456
L_67836:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_67837
L_67838:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_67839+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_67839
.p2align 0x4
.long 0x579
L_67839:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_67837:
	movq $0x10A7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_67739
.p2align 0x4
.long 0x5C9
L_67797:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_67798
L_67816:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_67817+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_67817
.p2align 0x4
.long 0xFBC
L_67817:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_67798:
	movq 0x50(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	movq %r15,%r13
	shrq $0x1,%r13
	cmpq $0x1450,%r13
	jne L_401597
L_67800:
	cmpq $0x1,0x8(%r14)
	je L_401596
L_67801:
	movq 0x48(%rbp),%r15
	movq 0x8(%r15),%r14
L_67802:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_67803
L_67804:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xEB2,%r15
	jne L_401594
L_67805:
	movq 0x0(%r14),%r15
	movq %r15,0x48(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x50(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_67751
L_67807:
	cmpl $0x0,%r13d
	jl L_401592
L_67808:
	movl $0x0,0x54(%rbp)
.p2align 0x4,,0x7
loop_835:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_401591
.p2align 0x4,,0x7
L_67809:
	movl 0x54(%rbp),%r15d
	cmpl 0x50(%rbp),%r15d
	jnl L_401590
L_67811:
	movslq %r15d,%r14
	movq 0x48(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r11
	movq $0x27B9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r11,0x0(%r14)
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x8(%r14)
	movq %r14,0x40(%rbp)
	incl %r15d
	movl %r15d,0x54(%rbp)
	jmp loop_835
.p2align 0x4
L_401590:
L_67810:
	movl 0x3C(%rbp),%ecx
	jmp loop_834
.p2align 0x4
L_401591:
L_67812:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_67813+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_67813
.p2align 0x4
.long 0xFBB
L_67813:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	jmp L_67809
.p2align 0x4
L_401592:
L_67814:
	movq (globalObjptr+0x4F8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_401594:
L_67803:
	movq $0x9,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_401596:
L_67815:
	movq $0x27B9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x40(%rbp)
	movl 0x3C(%rbp),%ecx
	jmp loop_834
.p2align 0x4
L_401597:
L_67799:
	movq (globalObjptr+0x1500)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x456
L_67789:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_67790
L_67791:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_67792+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_67792
.p2align 0x4
.long 0x579
L_67792:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_67790:
	movq $0x10A7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_67739
.p2align 0x4
.long 0xC73
L_67753:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_67754
L_67759:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_67760+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_67760
.p2align 0x4
.long 0x78A
L_67760:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_67754:
	movq $0x4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0xC1B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x20(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x38(%rbp),%r13
	movl 0x0(%r13),%r11d
	movl %r11d,0x40(%rbp)
	movq $0x3899,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r13,0x38(%rbp)
	addq $0x18,%r12
	addq $0x38,%rbp
	leaq (L_67755+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_5
.p2align 0x4
.long 0x568
L_67736:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_67737
L_67740:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_67741+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_67741
.p2align 0x4
.long 0x591
L_67741:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_67737:
	movq 0x20(%rbp),%r15
	jmp L_67738
.p2align 0x4
.long 0xFBD
L_67854:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_67855
L_67856:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_67857+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_67857
.p2align 0x4
.long 0xFBE
L_67857:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_67855:
	movq 0x40(%rbp),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%r14)
	jmp new1_6
.p2align 0x4
.long 0x56C
L_67755:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_67756
L_67757:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_67758+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_67758
.p2align 0x4
.long 0x579
L_67758:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_67756:
	movq $0x10A7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_67739
.text
.p2align 0x4
.globl get_64
.hidden get_64
get_64:
L_67866:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_67867
L_67924:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_67925+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_67925
.p2align 0x4
.long 0x45F
L_67925:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_67867:
	movq 0x8(%rbp),%r10
	movq 0x8(%r10),%r11
	movq 0x0(%r10),%r13
	movq 0x0(%rbp),%r10
	movq 0x10(%r10),%r15
	movq (globalObjptr+0x1068)(%rip),%r10
	movq 0x0(%r10),%r14
	incq %r14
	jo L_401614
L_67869:
	movq %r14,0x0(%r10)
	movq 0x0(%r15),%r10
	cmpq $0x1,%r10
	je L_401613
L_67870:
	movq 0x8(%r10),%r14
	movq 0x0(%r10),%r10
	xorl %ecx,%ecx
	movq %r10,%r15
.p2align 0x4,,0x7
L_67872:
	movq %r15,%r10
	andq $0x3,%r10
	jnz L_401612
L_67916:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r10
	shrq $0x1,%r10
	cmpq $0xD91,%r10
	jne L_401611
L_67917:
	movq 0x8(%r15),%r10
	cmpq 0x0(%r15),%r11
	movq %r11,(localObjptr+0x0)(%rip)
	je L_401608
L_67873:
	incl %ecx
	jo L_401607
L_67875:
	cmpq $0x1,%r14
	je L_401604
L_67876:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq (localObjptr+0x0)(%rip),%r11
	jmp L_67872
.p2align 0x4
L_401604:
L_67877:
L_67878:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_401606
L_67880:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl x_162
L_67915:
	movl %ecx,0x0(%r15)
x_162:
	movq 0x0(%r13),%r15
	movq 0x0(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x8(%rbp)
	movq 0x18(%r14),%r11
	movq 0x0(%r13),%r14
	cmpq $0x1,%r14
	jne L_401605
L_67913:
	movq %r11,0x18(%rbp)
	movq %r15,0x20(%rbp)
	addq $0x18,%rbp
	leaq (L_67914+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unique_0
.p2align 0x4
L_401605:
L_67882:
	movq %r14,%r15
L_67883:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_67884+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_401606:
L_67879:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_401607:
L_67874:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_401608:
L_67919:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_67879
L_67920:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_401609
L_67922:
	movl %ecx,0x0(%r15)
	movq %r10,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_401609:
L_67921:
	movq %r10,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_401611:
	movq %r11,(localObjptr+0x0)(%rip)
	jmp L_67873
.p2align 0x4
L_401612:
	movq %r11,(localObjptr+0x0)(%rip)
	jmp L_67873
.p2align 0x4
L_401613:
L_67923:
	xorl %ecx,%ecx
	jmp L_67878
.p2align 0x4
L_401614:
L_67868:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x521
L_67914:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x8(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp L_67883
.p2align 0x4
.long 0x1
L_67884:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_67885+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4AF
L_67885:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xEFB8)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_67886+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5AF
L_67886:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_67887+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x51E
L_67887:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_67888
L_67911:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_67912+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_67912
.p2align 0x4
.long 0x4AE
L_67912:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_67888:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_67889:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_67874
L_67890:
	cmpq $0x1,%r14
	je L_401616
L_67891:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_67889
.p2align 0x4
L_401616:
L_67892:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_67893
L_67909:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_67910+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_67910
.p2align 0x4
.long 0x4E6
L_67910:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_67893:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_401617
L_67894:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
toString_64:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	addq $0x8,%rbp
	leaq (rev_64+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_401617:
L_67908:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_64
.p2align 0x4
.long 0x1
rev_64:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_401623
L_67895:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_67896:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_401622
.p2align 0x4,,0x7
L_67897:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_401621
L_67898:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_67896
.p2align 0x4
L_401621:
L_67900:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_67901+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_401622:
L_67905:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_67906+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_67906
.p2align 0x4
.long 0x45B
L_67906:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_67897
.p2align 0x4
L_401623:
L_67907:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_67900
.p2align 0x4
.long 0x1
L_67901:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_67902
L_67903:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_67904+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_67904
.p2align 0x4
.long 0x451
L_67904:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_67902:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl x_1399
.hidden x_1399
x_1399:
L_67926:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_67927
L_67985:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_67986+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_67986
.p2align 0x4
.long 0x45F
L_67986:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_67927:
	movq 0x8(%rbp),%r10
	movq 0x8(%r10),%r11
	movq 0x0(%r10),%r13
	movq 0x0(%rbp),%r10
	movq 0x10(%r10),%r15
	movq (globalObjptr+0x1068)(%rip),%r10
	movq 0x0(%r10),%r14
	incq %r14
	jo L_401635
L_67929:
	movq %r14,0x0(%r10)
	movq 0x0(%r15),%r10
	cmpq $0x1,%r10
	je L_401634
L_67930:
	movq 0x8(%r10),%r14
	movq 0x0(%r10),%r10
	xorl %ecx,%ecx
	movq %r10,%r15
.p2align 0x4,,0x7
L_67932:
	movq %r15,%r10
	andq $0x3,%r10
	jnz L_401633
L_67976:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r10
	shrq $0x1,%r10
	cmpq $0xD02,%r10
	jne L_401632
L_67977:
	movq 0x8(%r15),%r10
	cmpq %r11,0x0(%r15)
	movq %r11,(localObjptr+0x0)(%rip)
	je L_401629
L_67933:
	incl %ecx
	jo L_401628
L_67935:
	cmpq $0x1,%r14
	je L_401625
L_67936:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq (localObjptr+0x0)(%rip),%r11
	jmp L_67932
.p2align 0x4
L_401625:
L_67937:
L_67938:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_401627
L_67940:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl x_163
L_67975:
	movl %ecx,0x0(%r15)
x_163:
	movq 0x0(%r13),%r15
	movq 0x0(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x8(%rbp)
	movq 0x18(%r14),%r11
	movq 0x0(%r13),%r14
	cmpq $0x1,%r14
	jne L_401626
L_67973:
	movq %r11,0x18(%rbp)
	movq %r15,0x20(%rbp)
	addq $0x18,%rbp
	leaq (L_67974+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unique_0
.p2align 0x4
L_401626:
L_67942:
	movq %r14,%r15
L_67943:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_67944+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_401627:
L_67939:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_401628:
L_67934:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_401629:
L_67979:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_67939
L_67980:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_401630
L_67983:
	movl %ecx,0x0(%r14)
	movq %r10,%r15
L_67982:
	movq 0x8(%r15),%r14
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_401630:
L_67981:
	movq %r10,%r15
	jmp L_67982
.p2align 0x4
L_401632:
	movq %r11,(localObjptr+0x0)(%rip)
	jmp L_67933
.p2align 0x4
L_401633:
	movq %r11,(localObjptr+0x0)(%rip)
	jmp L_67933
.p2align 0x4
L_401634:
L_67984:
	xorl %ecx,%ecx
	jmp L_67938
.p2align 0x4
L_401635:
L_67928:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x521
L_67974:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x8(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp L_67943
.p2align 0x4
.long 0x1
L_67944:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_67945+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4AF
L_67945:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xEFC0)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_67946+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5AF
L_67946:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_67947+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x51E
L_67947:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_67948
L_67971:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_67972+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_67972
.p2align 0x4
.long 0x4AE
L_67972:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_67948:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_67949:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_67934
L_67950:
	cmpq $0x1,%r14
	je L_401637
L_67951:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_67949
.p2align 0x4
L_401637:
L_67952:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_67953
L_67969:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_67970+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_67970
.p2align 0x4
.long 0x4E6
L_67970:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_67953:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_401638
L_67954:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
toString_65:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	addq $0x8,%rbp
	leaq (rev_65+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_401638:
L_67968:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_65
.p2align 0x4
.long 0x1
rev_65:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_401644
L_67955:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_67956:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_401643
.p2align 0x4,,0x7
L_67957:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_401642
L_67958:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_67956
.p2align 0x4
L_401642:
L_67960:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_67961+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_401643:
L_67965:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_67966+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_67966
.p2align 0x4
.long 0x45B
L_67966:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_67957
.p2align 0x4
L_401644:
L_67967:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_67960
.p2align 0x4
.long 0x1
L_67961:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_67962
L_67963:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_67964+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_67964
.p2align 0x4
.long 0x451
L_67964:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_67962:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl get_65
.hidden get_65
get_65:
L_67987:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_67988
L_68041:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_68042+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_68042
.p2align 0x4
.long 0x45F
L_68042:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_67988:
	movq 0x8(%rbp),%r11
	movq 0x8(%r11),%r13
	movq 0x0(%rbp),%r11
	movq 0x8(%r11),%r15
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r14
	incq %r14
	jo L_401656
L_67990:
	movq %r14,0x0(%r11)
	movq 0x0(%r15),%r11
	cmpq $0x1,%r11
	je L_401655
L_67991:
	movq 0x8(%r11),%r14
	movq 0x0(%r11),%r11
	xorl %ecx,%ecx
	movq %r11,%r15
.p2align 0x4,,0x7
L_67993:
	movq %r15,%r11
	andq $0x3,%r11
	jnz L_401654
L_68033:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r11
	shrq $0x1,%r11
	cmpq $0xD93,%r11
	jne L_401653
L_68034:
	movq 0x8(%r15),%r11
	cmpq %r13,0x0(%r15)
	movq %r13,(localObjptr+0x0)(%rip)
	je L_401650
L_67994:
	incl %ecx
	jo L_401649
L_67996:
	cmpq $0x1,%r14
	je L_401646
L_67997:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq (localObjptr+0x0)(%rip),%r13
	jmp L_67993
.p2align 0x4
L_401646:
L_67998:
L_67999:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_401648
L_68001:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_68003
L_68032:
	movl %ecx,0x0(%r15)
L_68003:
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_68004+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_401648:
L_68000:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_401649:
L_67995:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_401650:
L_68036:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_68000
L_68037:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_401651
L_68039:
	movl %ecx,0x0(%r15)
	movq %r11,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_401651:
L_68038:
	movq %r11,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_401653:
	movq %r13,(localObjptr+0x0)(%rip)
	jmp L_67994
.p2align 0x4
L_401654:
	movq %r13,(localObjptr+0x0)(%rip)
	jmp L_67994
.p2align 0x4
L_401655:
L_68040:
	xorl %ecx,%ecx
	jmp L_67999
.p2align 0x4
L_401656:
L_67989:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_68004:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xEF70)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_68005+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4AF
L_68005:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_68006+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5AF
L_68006:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_68007
L_68030:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_68031+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_68031
.p2align 0x4
.long 0x45B
L_68031:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_68007:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x0(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x18(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq (globalObjptr+0x9D0)(%rip),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_68008:
	addl 0x0(%r15),%ecx
	movl %ecx,0x20(%rbp)
	jo L_67995
L_68009:
	cmpq $0x1,%r14
	je L_401658
L_68010:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_68008
.p2align 0x4
L_401658:
L_68011:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_68012
L_68028:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_68029+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_68029
.p2align 0x4
.long 0x49C
L_68029:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_68012:
	movl 0x20(%rbp),%ecx
	testl %ecx,%ecx
	jz L_401659
L_68013:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
toString_66:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	addq $0x8,%rbp
	leaq (rev_66+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_401659:
L_68027:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_66
.p2align 0x4
.long 0x1
rev_66:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_401665
L_68014:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_68015:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_401664
.p2align 0x4,,0x7
L_68016:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_401663
L_68017:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_68015
.p2align 0x4
L_401663:
L_68019:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_68020+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_401664:
L_68024:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_68025+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_68025
.p2align 0x4
.long 0x45B
L_68025:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_68016
.p2align 0x4
L_401665:
L_68026:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_68019
.p2align 0x4
.long 0x1
L_68020:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_68021
L_68022:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_68023+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_68023
.p2align 0x4
.long 0x451
L_68023:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_68021:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl simplifyType_0
.hidden simplifyType_0
simplifyType_0:
L_68043:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_68108
L_68044:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_401688
L_68045:
	movq 0x8(%rbp),%r13
	movq 0x20(%r13),%r11
	movq %r11,0x10(%rbp)
	movq 0x18(%r13),%r11
	movq %r11,0x18(%rbp)
	movq 0x10(%r13),%r11
	movq %r11,0x20(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x28(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x30(%rbp)
	movq 0x28(%r13),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x38(%rbp)
	movq 0x0(%r11),%r10
	movq %r10,0x40(%rbp)
	movq 0x0(%rbp),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x48(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_401687
L_68047:
	movq %r15,0x0(%r13)
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_401686
L_68048:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movl $0x0,0x50(%rbp)
	movq %r13,%r15
.p2align 0x4,,0x7
L_68050:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_68051
L_68097:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xD27,%r13
	jne L_68051
L_68098:
	movq 0x8(%r14),%r13
	movq %r13,0x58(%rbp)
	movq 0x38(%rbp),%r13
	cmpq %r13,0x0(%r14)
	je L_401680
L_68051:
	movl 0x50(%rbp),%r13d
	incl %r13d
	movl %r13d,0x54(%rbp)
	jo L_401679
L_68053:
	cmpq $0x1,%r15
	je L_401667
L_68054:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movl %r13d,0x50(%rbp)
	jmp L_68050
.p2align 0x4
L_401667:
L_68055:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_68056
L_68095:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_68096+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_68096
.p2align 0x4
.long 0x632
L_68096:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_68056:
	movl 0x54(%rbp),%ecx
L_68057:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_401677
L_68059:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_68061
L_68094:
	movl %ecx,0x0(%r15)
L_68061:
	movq 0x40(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x28DD,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r13,0x0(%r15)
	movq $0x53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x53,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movl $0x0,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq $0x139B,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r15,0x10(%r11)
	addq $0x20,%r12
	movq $0x1,0x8(%r11)
	movq $0x1A4F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x8(%r15)
	addq $0x18,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r15)
	movq %r11,0x38(%rbp)
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%r10,%r15,1)
	movq %r11,0x0(%r14)
L_68062:
	movq 0x38(%rbp),%r15
	movq 0x8(%r15),%r14
	cmpq $0x1,%r14
	je L_401668
L_68063:
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_401668:
L_68064:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
L_68065:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_68066
L_68068:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xEB0,%r15
	je L_401674
	cmpq $0xEB1,%r15
	je L_401673
	cmpq $0xEB2,%r15
	je L_401671
	cmpq $0xEB3,%r15
	je L_401670
	cmpq $0xEB5,%r15
	je L_401669
L_68066:
	movq 0x0(%rbp),%r15
L_68067:
	movq 0x38(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x8(%r14)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_401669:
L_68089:
	movq 0x0(%r14),%r15
	movq %r15,0x48(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_68090+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp simplifyType_0
.p2align 0x4
L_401670:
L_68084:
	movq 0x0(%r14),%r15
	movq %r15,0x48(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_68085+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp simplifyType_0
.p2align 0x4
L_401671:
L_68080:
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_401672
L_68082:
	movl %r13d,0x50(%rbp)
	movq $0x3879,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_68083+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_5
.p2align 0x4
L_401672:
L_68081:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_401673:
L_68075:
	movq 0x0(%r14),%r15
	movq %r15,0x48(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_68076+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp simplifyType_0
.p2align 0x4
L_401674:
L_68069:
	movq 0x0(%r14),%r15
	movq %r15,0x48(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_68070+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp simplifyType_0
.p2align 0x4
L_401677:
L_68058:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_401679:
L_68052:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_401680:
L_68100:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_68101
L_68105:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_68106+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_68106
.p2align 0x4
.long 0xC01
L_68106:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_68101:
	movl 0x50(%rbp),%r15d
	movslq %r15d,%r14
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r14
	jo L_68058
L_68102:
	movq %r14,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %r15d,0x0(%r14)
	jl L_401681
L_68103:
	movq 0x58(%rbp),%r15
	movq %r15,0x38(%rbp)
	jmp L_68062
.p2align 0x4
L_401681:
L_68104:
	movq (globalObjptr+0x1078)(%rip),%r15
	movl 0x50(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movq 0x58(%rbp),%r15
	movq %r15,0x38(%rbp)
	jmp L_68062
.p2align 0x4
L_401686:
L_68107:
	xorl %ecx,%ecx
	jmp L_68057
.p2align 0x4
L_401687:
L_68046:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_401688:
L_68108:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_68109+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_68109
.p2align 0x4
.long 0x45F
L_68109:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_68045
.p2align 0x4
.long 0xFBF
L_68090:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_68091
L_68092:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_68093+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_68093
.p2align 0x4
.long 0x5F7
L_68093:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_68091:
	movq 0x10(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x58(%rbp)
	movl 0x0(%r15),%r14d
	movq 0x18(%rbp),%r15
	xorl 0x0(%r15),%r14d
	movl %r14d,0x50(%rbp)
	movq $0x1D6B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq %r14,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_68072+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lookup_1
.p2align 0x4
.long 0x7BF
L_68085:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_68086
L_68087:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_68088+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_68088
.p2align 0x4
.long 0x86A
L_68088:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_68086:
	movq 0x30(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x58(%rbp)
	movl 0x0(%r15),%r14d
	movq 0x40(%rbp),%r15
	xorl 0x0(%r15),%r14d
	movl %r14d,0x50(%rbp)
	movq $0x1D67,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq %r14,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_68072+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lookup_1
.p2align 0x4
.long 0x603
L_68083:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq %r15,0x48(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_68072+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tuple_11
.p2align 0x4
.long 0x79B
L_68076:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_68077
L_68078:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_68079+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_68079
.p2align 0x4
.long 0x489
L_68079:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_68077:
	movq 0x28(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x58(%rbp)
	movl 0x0(%r15),%r14d
	movq 0x30(%rbp),%r15
	xorl 0x0(%r15),%r14d
	movl %r14d,0x50(%rbp)
	movq $0x1D63,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq %r14,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_68072+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lookup_1
.p2align 0x4
.long 0x7CB
L_68070:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_68071
L_68073:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_68074+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_68074
.p2align 0x4
.long 0x815
L_68074:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_68071:
	movq 0x20(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x58(%rbp)
	movl 0x0(%r15),%r14d
	movq 0x28(%rbp),%r15
	xorl 0x0(%r15),%r14d
	movl %r14d,0x50(%rbp)
	movq $0x1D61,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq %r14,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_68072+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lookup_1
.p2align 0x4
.long 0x78B
L_68072:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	jmp L_68067
.text
.p2align 0x4
.globl x_1398
.hidden x_1398
x_1398:
L_68110:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_68111
L_68164:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_68165+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_68165
.p2align 0x4
.long 0x45F
L_68165:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_68111:
	movq 0x8(%rbp),%r10
	movq 0x8(%r10),%r9
	movq 0x8(%r9),%r11
	movq 0x0(%r9),%r13
	movq 0x0(%rbp),%r10
	movq 0x10(%r10),%r15
	movq (globalObjptr+0x1068)(%rip),%r10
	movq 0x0(%r10),%r14
	incq %r14
	jo L_401703
L_68113:
	movq %r14,0x0(%r10)
	movq 0x0(%r15),%r10
	cmpq $0x1,%r10
	je L_401702
L_68114:
	movq 0x0(%r10),%r14
	movq 0x8(%r10),%r10
	xorl %ecx,%ecx
	movq %r10,%r15
.p2align 0x4,,0x7
L_68116:
	movq %r14,%r10
	andq $0x3,%r10
	jnz L_401701
L_68156:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r10
	shrq $0x1,%r10
	cmpq $0xCB1,%r10
	jne L_401700
L_68157:
	movq 0x8(%r14),%r10
	cmpq 0x0(%r14),%r11
	movq %r11,(localObjptr+0x8)(%rip)
	je L_401697
L_68117:
	incl %ecx
	jo L_401696
L_68119:
	cmpq $0x1,%r15
	je L_401694
L_68120:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq (localObjptr+0x8)(%rip),%r11
	jmp L_68116
.p2align 0x4
L_401694:
L_68121:
L_68122:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_401695
L_68124:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl x_164
L_68155:
	movl %ecx,0x0(%r15)
x_164:
	movq %r13,0x10(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_68126+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_401695:
L_68123:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_401696:
L_68118:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_401697:
L_68159:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_68123
L_68160:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_401698
L_68162:
	movl %ecx,0x0(%r15)
	movq %r10,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_401698:
L_68161:
	movq %r10,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_401700:
	movq %r11,(localObjptr+0x8)(%rip)
	jmp L_68117
.p2align 0x4
L_401701:
	movq %r11,(localObjptr+0x8)(%rip)
	jmp L_68117
.p2align 0x4
L_401702:
L_68163:
	xorl %ecx,%ecx
	jmp L_68122
.p2align 0x4
L_401703:
L_68112:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_68126:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_68127+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1
L_68127:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_68128+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4AF
L_68128:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xEF78)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_68129+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5AF
L_68129:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_68130+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x51E
L_68130:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_68131
L_68153:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_68154+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_68154
.p2align 0x4
.long 0x4AE
L_68154:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_68131:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_68132:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_68118
L_68133:
	cmpq $0x1,%r14
	je L_401705
L_68134:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_68132
.p2align 0x4
L_401705:
L_68135:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_68136
L_68151:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_68152+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_68152
.p2align 0x4
.long 0x4E6
L_68152:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_68136:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_401706
L_68137:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
toString_67:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	addq $0x8,%rbp
	leaq (rev_67+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_401706:
L_68150:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_67
.p2align 0x4
.long 0x1
rev_67:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_401712
L_68138:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_68139:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_401711
.p2align 0x4,,0x7
L_68140:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_401710
L_68141:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_68139
.p2align 0x4
L_401710:
L_68143:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_145+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_401711:
L_68147:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_68148+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_68148
.p2align 0x4
.long 0x45B
L_68148:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_68140
.p2align 0x4
L_401712:
L_68149:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_68143
.p2align 0x4
.long 0x1
bug_145:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_68144
L_68145:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_68146+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_68146
.p2align 0x4
.long 0x451
L_68146:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_68144:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl get_58
.hidden get_58
get_58:
L_68166:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_68167
L_68192:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_68193+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_68193
.p2align 0x4
.long 0x45F
L_68193:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_68167:
	movq 0x8(%rbp),%r10
	movq 0x8(%r10),%r11
	movq 0x0(%r10),%r13
	movq 0x0(%rbp),%r10
	movq 0x10(%r10),%r15
	movq (globalObjptr+0x1068)(%rip),%r10
	movq 0x0(%r10),%r14
	incq %r14
	jo L_401724
L_68169:
	movq %r14,0x0(%r10)
	movq 0x0(%r15),%r10
	cmpq $0x1,%r10
	je L_401723
L_68170:
	movq 0x8(%r10),%r14
	movq 0x0(%r10),%r10
	xorl %ecx,%ecx
	movq %r10,%r15
.p2align 0x4,,0x7
L_68172:
	movq %r15,%r10
	andq $0x3,%r10
	jnz L_401722
L_68184:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r10
	shrq $0x1,%r10
	cmpq $0xCB8,%r10
	jne L_401721
L_68185:
	movq 0x8(%r15),%r10
	cmpq %r11,0x0(%r15)
	movq %r11,(localObjptr+0x0)(%rip)
	je L_401718
L_68173:
	incl %ecx
	jo L_401717
L_68175:
	cmpq $0x1,%r14
	je L_401714
L_68176:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq (localObjptr+0x0)(%rip),%r11
	jmp L_68172
.p2align 0x4
L_401714:
L_68177:
L_68178:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_401716
L_68180:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_68182
L_68183:
	movl %ecx,0x0(%r15)
L_68182:
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_401716:
L_68179:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_401717:
L_68174:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_401718:
L_68187:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_68179
L_68188:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_401719
L_68190:
	movl %ecx,0x0(%r15)
	movq %r10,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_401719:
L_68189:
	movq %r10,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_401721:
	movq %r11,(localObjptr+0x0)(%rip)
	jmp L_68173
.p2align 0x4
L_401722:
	movq %r11,(localObjptr+0x0)(%rip)
	jmp L_68173
.p2align 0x4
L_401723:
L_68191:
	xorl %ecx,%ecx
	jmp L_68178
.p2align 0x4
L_401724:
L_68168:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl x_1388
.hidden x_1388
x_1388:
L_68194:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_68225
L_68195:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_401738
L_68196:
	movq 0x8(%rbp),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x10(%rbp)
	movq 0x0(%r11),%r14
	movq 0x0(%rbp),%r11
	movq 0x10(%r11),%r10
	movq %r10,0x18(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_401737
L_68198:
	movq %r15,0x0(%r11)
	movq 0x0(%r10),%r11
	cmpq $0x1,%r11
	je L_401736
L_68199:
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r11
	xorl %ecx,%ecx
	movq %r11,%r15
.p2align 0x4,,0x7
L_68201:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_401735
L_68217:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xCEF,%r11
	jne L_401734
L_68218:
	movq 0x8(%r13),%r11
	cmpq %r14,0x0(%r13)
	movq %r14,(localObjptr+0x0)(%rip)
	je L_401731
L_68202:
	incl %ecx
	movl %ecx,0x8(%rbp)
	jo L_401730
L_68204:
	cmpq $0x1,%r15
	je L_401726
L_68205:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x0)(%rip),%r14
	jmp L_68201
.p2align 0x4
L_401726:
L_68206:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_68207
L_68215:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_68216+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_68216
.p2align 0x4
.long 0x798
L_68216:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_68207:
	movl 0x8(%rbp),%ecx
L_68208:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_401728
L_68210:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_68212
L_68214:
	movl %ecx,0x0(%r15)
L_68212:
	movq $0x53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x4B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x8E1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0x8E3,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x8(%r11)
	movq %r14,0x18(%r11)
	movq %r15,0x20(%r11)
	addq $0x30,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r11)
	movq $0x1,0x10(%r11)
	movq $0x13E1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	addq $0x10,%r12
	movq $0x19DF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x18(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r10,0x0(%r13)
L_68213:
	movq 0x0(%r15),%r14
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_401728:
L_68209:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_401730:
L_68203:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_401731:
L_68220:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_68209
L_68221:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_401732
L_68223:
	movl %ecx,0x0(%r14)
	movq %r11,%r15
	jmp L_68213
.p2align 0x4
L_401732:
L_68222:
	movq %r11,%r15
	jmp L_68213
.p2align 0x4
L_401734:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_68202
.p2align 0x4
L_401735:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_68202
.p2align 0x4
L_401736:
L_68224:
	xorl %ecx,%ecx
	jmp L_68208
.p2align 0x4
L_401737:
L_68197:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_401738:
L_68225:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_68226+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_68226
.p2align 0x4
.long 0x45F
L_68226:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_68196
.text
.p2align 0x4
.globl bind_1
.hidden bind_1
bind_1:
L_68227:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_68228
L_68262:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_68263+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_68263
.p2align 0x4
.long 0x45F
L_68263:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_68228:
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x18(%rbp)
	addq $0x28,%rbp
	leaq (L_68229+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x4DC
L_68229:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl 0x28(%rbp),%r15d
	movl %r15d,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_68230
L_68260:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_68261+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_68261
.p2align 0x4
.long 0x798
L_68261:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_68230:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,0x20(%rbp)
	movq %r15,0x8(%r11)
	movq %r14,0x10(%r11)
	addq $0x28,%r12
	movl 0x8(%rbp),%r10d
	movl %r10d,0x0(%r11)
	movl $0x0,0x4(%r11)
	movq 0x18(%rbp),%r10
	movq %r10,0x18(%r11)
	movq $0x2807,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r10,0x28(%rbp)
	addq $0x10,%r12
	movq %r11,0x0(%r10)
	movq 0x10(%rbp),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x30(%rbp)
	movq 0x0(%r11),%r14
	movq 0x0(%rbp),%r11
	movq 0x10(%r11),%r10
	movq %r10,0x38(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_401752
L_68232:
	movq %r15,0x0(%r11)
	movq 0x0(%r10),%r11
	cmpq $0x1,%r11
	je L_401751
L_68233:
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r11
	xorl %ecx,%ecx
	movq %r11,%r15
.p2align 0x4,,0x7
L_68235:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_401750
L_68251:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xCE2,%r11
	jne L_401749
L_68252:
	cmpq %r14,0x0(%r13)
	movq %r14,(localObjptr+0x10)(%rip)
	je L_401746
L_68236:
	incl %ecx
	movl %ecx,0x40(%rbp)
	jo L_401745
L_68238:
	cmpq $0x1,%r15
	je L_401741
L_68239:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x10)(%rip),%r14
	jmp L_68235
.p2align 0x4
L_401741:
L_68240:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_68241
L_68249:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_68250+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_68250
.p2align 0x4
.long 0x700
L_68250:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_68241:
	movl 0x40(%rbp),%ecx
L_68242:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_401743
L_68244:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_68246
L_68248:
	movl %ecx,0x0(%r15)
L_68246:
	movq $0x19C5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x38(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
L_68247:
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_401743:
L_68243:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_401745:
L_68237:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_401746:
L_68254:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_68243
L_68255:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_401747
L_68258:
	movl %ecx,0x0(%r14)
	movq %r13,%r15
L_68257:
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_68247
.p2align 0x4
L_401747:
L_68256:
	movq %r13,%r15
	jmp L_68257
.p2align 0x4
L_401749:
	movq %r14,(localObjptr+0x10)(%rip)
	jmp L_68236
.p2align 0x4
L_401750:
	movq %r14,(localObjptr+0x10)(%rip)
	jmp L_68236
.p2align 0x4
L_401751:
L_68259:
	xorl %ecx,%ecx
	jmp L_68242
.p2align 0x4
L_401752:
L_68231:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl x_1396
.hidden x_1396
x_1396:
L_68264:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_68265
L_68318:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_68319+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_68319
.p2align 0x4
.long 0x45F
L_68319:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_68265:
	movq 0x8(%rbp),%r10
	movq 0x8(%r10),%r9
	movq 0x8(%r9),%r11
	movq 0x0(%r9),%r13
	movq 0x0(%rbp),%r10
	movq 0x10(%r10),%r15
	movq (globalObjptr+0x1068)(%rip),%r10
	movq 0x0(%r10),%r14
	incq %r14
	jo L_401763
L_68267:
	movq %r14,0x0(%r10)
	movq 0x0(%r15),%r10
	cmpq $0x1,%r10
	je L_401762
L_68268:
	movq 0x0(%r10),%r14
	movq 0x8(%r10),%r10
	xorl %ecx,%ecx
	movq %r10,%r15
.p2align 0x4,,0x7
L_68270:
	movq %r14,%r10
	andq $0x3,%r10
	jnz L_401761
L_68310:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r10
	shrq $0x1,%r10
	cmpq $0xCE5,%r10
	jne L_401760
L_68311:
	movq 0x8(%r14),%r10
	cmpq 0x0(%r14),%r11
	movq %r11,(localObjptr+0x8)(%rip)
	je L_401757
L_68271:
	incl %ecx
	jo L_401756
L_68273:
	cmpq $0x1,%r15
	je L_401754
L_68274:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq (localObjptr+0x8)(%rip),%r11
	jmp L_68270
.p2align 0x4
L_401754:
L_68275:
L_68276:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_401755
L_68278:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl x_165
L_68309:
	movl %ecx,0x0(%r15)
x_165:
	movq %r13,0x10(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_68280+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_401755:
L_68277:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_401756:
L_68272:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_401757:
L_68313:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_68277
L_68314:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_401758
L_68316:
	movl %ecx,0x0(%r15)
	movq %r10,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_401758:
L_68315:
	movq %r10,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_401760:
	movq %r11,(localObjptr+0x8)(%rip)
	jmp L_68271
.p2align 0x4
L_401761:
	movq %r11,(localObjptr+0x8)(%rip)
	jmp L_68271
.p2align 0x4
L_401762:
L_68317:
	xorl %ecx,%ecx
	jmp L_68276
.p2align 0x4
L_401763:
L_68266:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_68280:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_68281+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1
L_68281:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_68282+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4AF
L_68282:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xEF78)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_68283+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5AF
L_68283:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_68284+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x51E
L_68284:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_68285
L_68307:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_68308+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_68308
.p2align 0x4
.long 0x4AE
L_68308:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_68285:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_68286:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_68272
L_68287:
	cmpq $0x1,%r14
	je L_401765
L_68288:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_68286
.p2align 0x4
L_401765:
L_68289:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_68290
L_68305:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_68306+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_68306
.p2align 0x4
.long 0x4E6
L_68306:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_68290:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_401766
L_68291:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
toString_68:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	addq $0x8,%rbp
	leaq (rev_68+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_401766:
L_68304:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_68
.p2align 0x4
.long 0x1
rev_68:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_401772
L_68292:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_68293:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_401771
.p2align 0x4,,0x7
L_68294:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_401770
L_68295:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_68293
.p2align 0x4
L_401770:
L_68297:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_146+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_401771:
L_68301:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_68302+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_68302
.p2align 0x4
.long 0x45B
L_68302:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_68294
.p2align 0x4
L_401772:
L_68303:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_68297
.p2align 0x4
.long 0x1
bug_146:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_68298
L_68299:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_68300+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_68300
.p2align 0x4
.long 0x451
L_68300:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_68298:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl new_27
.hidden new_27
new_27:
L_68320:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_68321
L_68428:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_68429+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_68429
.p2align 0x4
.long 0x45B
L_68429:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_68321:
	movq 0x10(%rbp),%r15
	movq 0x30(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_68322+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1404
.p2align 0x4
.long 0x57E
L_68322:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movl 0x50(%rbp),%r14d
	movl %r14d,0x10(%rbp)
	movq 0x18(%rbp),%r13
	movq 0x0(%r13),%r15
	movq (globalObjptr+0xAE0)(%rip),%r13
	movq 0x0(%r13),%r11
	incq %r11
	jo L_401809
L_68324:
	movq %r11,0x0(%r13)
	movq 0x20(%rbp),%r13
	movl 0x0(%r13),%r11d
	andl %r14d,%r11d
	cmpl $0x0,%r11d
	jl L_68339
L_68325:
	movslq %r11d,%r14
	movq %r14,0x48(%rbp)
	cmpq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	jnb L_68327
L_68328:
	movq 0x0(%r15,%r14,8),%r13
	movq %r13,0x50(%rbp)
	cmpq $0x1,%r13
	je L_68336
L_68329:
	movq 0x8(%r13),%r14
	movq %r14,0x58(%rbp)
	movq 0x0(%r13),%r15
.p2align 0x4,,0x7
L_68330:
	movq (globalObjptr+0xAE8)(%rip),%r14
	movq 0x0(%r14),%r13
	incq %r13
	jo L_401805
L_68332:
	movq %r13,0x0(%r14)
	movq 0x8(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x10(%r14),%r15
	movq 0x0(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xEB7,%r13
	je L_401803
	cmpq $0xEBA,%r13
	je L_401790
	cmpq $0xEBB,%r13
	je L_401788
	cmpq $0xEBC,%r13
	je L_401776
.p2align 0x4,,0x7
L_68333:
	movq 0x58(%rbp),%r14
	cmpq $0x1,%r14
	je L_401775
L_68334:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x58(%rbp)
	jmp L_68330
.p2align 0x4
L_401775:
L_68336:
	movq 0x30(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_68337+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_401776:
L_68422:
	movq 0x0(%rbp),%r13
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r11
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0xEBC,%r13
	jne L_68333
L_68423:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r10
	movq 0x10(%r14),%r9
	cmpq %r9,0x10(%r10)
	jne L_68333
L_68425:
	movq %r11,%r15
	movq %r13,%r14
equalss_0:
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r13
	movl %r13d,%ecx
	movslq %ecx,%r11
	cmpq %r11,%r13
	jne L_68344
L_68379:
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r11
	movl %r11d,%ebx
	movslq %ebx,%r10
	cmpq %r10,%r11
	jne L_401784
L_68381:
	cmpl %ebx,%ecx
	jne L_401782
L_68385:
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_840:
	cmpl %ebx,%ecx
	je L_401781
L_68386:
	movslq %ebx,%r11
	cmpq %r13,%r11
	jnb L_401780
L_68388:
	movq 0x0(%r14,%r11,8),%r10
	movq 0x0(%r15,%r11,8),%r9
	movq 0x10(%r9),%r8
	cmpq %r8,0x10(%r10)
	jne L_401778
L_68392:
	incl %ebx
	jo L_401777
L_68393:
	jmp loop_840
.p2align 0x4
L_401777:
L_68339:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_401778:
L_68389:
	movq 0x58(%rbp),%r14
	cmpq $0x1,%r14
	je L_68336
L_68390:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x58(%rbp)
	jmp L_68330
.p2align 0x4
L_401780:
L_68327:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_401781:
L_68395:
	movq 0x60(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_401782:
L_68382:
	movq 0x58(%rbp),%r14
	cmpq $0x1,%r14
	je L_68336
L_68383:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x58(%rbp)
	jmp L_68330
.p2align 0x4
L_401784:
L_68344:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_401788:
L_68417:
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xEBB,%r14
	jne L_68333
L_68418:
	movq %r13,0x78(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x70,%rbp
	leaq (L_68419+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1405
.p2align 0x4
L_401790:
L_68396:
	movq 0x0(%rbp),%r11
	movq 0x10(%r11),%r13
	movq 0x8(%r11),%r10
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xEBA,%r14
	jne L_68333
L_68397:
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r11
	movq %r10,%r15
	andq $0xFF,%r15
	cmpq $0x2,%r15
	jne L_401800
L_68400:
	movq %r11,%r15
	andq $0xFF,%r15
	cmpq $0x2,%r15
	jne L_401798
L_68403:
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movl %r15d,%ecx
	movslq %ecx,%r9
	cmpq %r15,%r9
	jne L_68344
L_68405:
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r9
	movl %r9d,%ebx
	movslq %ebx,%r8
	cmpq %r9,%r8
	jne L_68344
L_68407:
	cmpl %ebx,%ecx
	jne L_68333
L_68409:
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_841:
	cmpl %ebx,%ecx
	je L_68395
L_68410:
	movslq %ebx,%r11
	cmpq %r15,%r11
	jnb L_68327
L_68412:
	movq 0x0(%r14,%r11,8),%r10
	movq 0x0(%r13,%r11,8),%r9
	movq 0x10(%r9),%r8
	cmpq %r8,0x10(%r10)
	jne L_68333
L_68414:
	incl %ebx
	jo L_68339
L_68415:
	jmp loop_841
.p2align 0x4
L_401798:
L_68401:
	andq $0x3,%r11
	jnz L_68333
L_68402:
	jmp L_68333
.p2align 0x4
L_401800:
L_68398:
	andq $0x3,%r10
	jnz L_68333
L_68399:
	jmp L_68333
.p2align 0x4
L_401803:
L_68376:
	movq 0x0(%rbp),%r13
	movq 0x0(%r13),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0xEB7,%r13
	jne L_68333
L_68377:
	movq 0x0(%r15),%r13
	movq %r14,%r15
	movq %r13,%r14
	jmp equalss_0
.p2align 0x4
L_401805:
L_68331:
	movq (globalObjptr+0xAF0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_401809:
L_68323:
	movq (globalObjptr+0xAF8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xFC0
L_68337:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movl 0x60(%rbp),%r15d
	movl %r15d,0x14(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_68338
L_68374:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_68375+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_68375
.p2align 0x4
.long 0xFC3
L_68375:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_68338:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x14(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xD208)(%rip),%r15
	movq %r15,0x18(%r13)
	movq $0xFAF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq %r13,0x0(%r15)
	movq %r13,0x28(%rbp)
	movq 0x8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x38(%rbp),%rdx
	movq 0x0(%rdx),%r14
	movq $0x27C3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq %r15,0x0(%r13)
	movq %rdx,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x0(%rdx)
	movq $0xFB1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl 0x10(%rbp),%r15d
	movl %r15d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x40(%rbp),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_68339
L_68340:
	movl %r13d,0x0(%r15)
	movq 0x18(%rbp),%r13
	movq 0x0(%r13),%r10
	movq $0x28F1,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r14,0x0(%r9)
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r9)
	movq 0x48(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r10),%r14
	jnb L_68327
L_68342:
	movq %r10,%r8
	shrq $0x8,%r8
	movb $0x1,0x0(%r11,%r8,1)
	movq %r9,0x0(%r10,%r14,8)
	movq 0x0(%r13),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r11
	movl %r11d,%r10d
	movslq %r10d,%r9
	cmpq %r11,%r9
	jne L_68344
L_68345:
	movl 0x0(%r15),%r14d
	imull $0x4,%r14d
	jo L_68339
L_68346:
	cmpl %r14d,%r10d
	jnl L_401821
L_68348:
	addl %r10d,%r10d
	jo L_68339
L_68349:
	movq 0x20(%rbp),%r15
	movl 0x0(%r15),%r14d
	shll $0x1,%r14d
	orl $0x1,%r14d
	movl %r14d,0x30(%rbp)
	movslq %r10d,%rdx
	movq %rdx,0x38(%rbp)
	cmpq $0x7FFFFFFF,%rdx
	ja L_401819
L_68350:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x921,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_68351+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_68351
.p2align 0x4
.long 0xFC1
L_68351:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq %rax,0x40(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_838:
	cmpq 0x38(%rbp),%r15
	jnl L_401810
L_68372:
	movq 0x40(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_838
.p2align 0x4
L_401810:
L_68352:
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movl %r13d,0x34(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_68344
L_68354:
	cmpl $0x0,%r13d
	jl L_401817
L_68355:
	movl $0x0,0x50(%rbp)
.p2align 0x4,,0x7
loop_839:
	movl 0x50(%rbp),%r15d
	cmpl 0x34(%rbp),%r15d
	jnl L_401816
L_68357:
	movslq %r15d,%r14
	movq 0x48(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	cmpq $0x1,%r13
	je L_68366
L_68358:
	movq 0x8(%r13),%r15
	movq %r15,0x58(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x60(%rbp)
L_68359:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_401814
.p2align 0x4,,0x7
L_68360:
	movq 0x60(%rbp),%r15
	movl 0x0(%r15),%r14d
	andl 0x30(%rbp),%r14d
	cmpl $0x0,%r14d
	jl L_68339
L_68361:
	movslq %r14d,%r13
	cmpq 0x38(%rbp),%r13
	jnb L_68327
L_68363:
	movq 0x40(%rbp),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq $0x28F1,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r15,0x0(%r10)
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r10,0x0(%r14,%r13,8)
	movq 0x58(%rbp),%r15
	cmpq $0x1,%r15
	je L_401811
L_68364:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x58(%rbp)
	movq %r14,0x60(%rbp)
	jmp L_68359
.p2align 0x4
L_401811:
L_68366:
	incl 0x50(%rbp)
	jmp loop_839
.p2align 0x4
L_401814:
L_68368:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_68369+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_68369
.p2align 0x4
.long 0xFC2
L_68369:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_68360
.p2align 0x4
L_401816:
L_68356:
	movq 0x18(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x20(%rbp),%r14
	movl 0x30(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_401817:
L_68371:
	movq (globalObjptr+0x4F8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_401819:
L_68373:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_401821:
L_68347:
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xFC4
L_68419:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movl 0x70(%rbp),%r15d
	movl %r15d,0x14(%rbp)
	testl %r15d,%r15d
	jnz L_68395
	jmp L_68333
.text
.p2align 0x4
.globl x_1404
.hidden x_1404
x_1404:
L_68430:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_68473
L_68431:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_401842
L_68432:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x30(%r14),%r13
	movq 0x28(%r14),%r11
	movq 0x20(%r14),%r10
	movq 0x18(%r14),%r9
	movl 0x14(%r14),%r8d
	movl 0x10(%r14),%esp
	movl 0xC(%r14),%esi
	movl 0x8(%r14),%edi
	movl 0x4(%r14),%edx
	movl 0x0(%r14),%ecx
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xEB7,%r14
	je L_401841
	cmpq $0xEB8,%r14
	je L_401840
	cmpq $0xEB9,%r14
	je L_401838
	cmpq $0xEBA,%r14
	je L_401837
	cmpq $0xEBB,%r14
	je L_401832
	cmpq $0xEBC,%r14
	je L_401828
L_68433:
	movq 0x0(%r15),%r14
	movl 0x0(%r14),%ebx
	movl %ebx,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_401828:
L_68472:
	movq 0x8(%r15),%r14
	movl 0x0(%r14),%ecx
	movq 0x0(%r15),%r14
	movq %r14,%r15
hashVars_0:
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_401831
L_68437:
	cmpl $0x0,%r13d
	movl %r13d,(localWord32+0x4)(%rip)
	jl L_401830
L_68438:
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_842:
	cmpl (localWord32+0x4)(%rip),%ebx
	jnl L_401829
L_68440:
	movslq %ebx,%r14
	movq 0x0(%r15,%r14,8),%r13
	xorl 0x0(%r13),%ecx
	incl %ebx
	jmp loop_842
.p2align 0x4
L_401829:
L_68439:
	movl %ecx,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_401830:
L_68441:
	movq (globalObjptr+0x4F8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_401831:
L_68436:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_401832:
L_68448:
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_401836
L_68449:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xE4A,%r15
	je L_401835
	cmpq $0xE4B,%r15
	je L_401834
	cmpq $0xE4C,%r15
	je L_401833
L_68450:
	movq %r11,0x10(%rbp)
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r10
	movq $0xECB,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r13,0x0(%r9)
	movq %r10,0x8(%r9)
	movq %r9,0x8(%rbp)
	addq $0x18,%r12
	addq $0x8,%rbp
	leaq (hash_0+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_540
.p2align 0x4
L_401833:
L_68468:
	movq 0x0(%r14),%r15
	movq %r15,0x0(%rbp)
	movq 0x8(%r9),%r14
	movq 0x10(%r14),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x28(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x8(%rbp)
	movq $0x1FFFFFFF7,%r14
	movq %r14,0x18(%rbp)
	movq %r15,0x20(%rbp)
	addq $0x18,%rbp
	leaq (L_68469+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigDiv_0
.p2align 0x4
L_401834:
L_68461:
	movq %r10,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (hash_1+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_541
.p2align 0x4
L_401835:
L_68458:
	movq 0x0(%r14),%r15
	movq 0x0(%r15),%r11
	movq %r11,0x0(%rbp)
	movq 0x8(%r13),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r14),%r10
	movq %r10,0x28(%rbp)
	movq 0x0(%r14),%r10
	movq %r10,0x8(%rbp)
	movq $0x1FFFFFFF7,%r15
	movq %r15,0x18(%rbp)
	movq %r11,0x20(%rbp)
	addq $0x18,%rbp
	leaq (L_68459+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigDiv_0
.p2align 0x4
L_401836:
L_68471:
	movl $0x0,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_401837:
L_68447:
	movq 0x0(%r15),%r14
	movq %r14,%r15
	jmp hashVars_0
.p2align 0x4
L_401838:
L_68443:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xE42,%r15
	je L_401839
L_68446:
	movq 0x0(%r14),%r15
	xorl 0x0(%r15),%esi
	movl %r8d,%ecx
	movl %esi,%ebx
L_68445:
	xorl %ecx,%ebx
	movl %ebx,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_401839:
L_68444:
	movq 0x0(%r14),%r15
	xorl 0x0(%r15),%esp
	movl %r8d,%ecx
	movl %esp,%ebx
	jmp L_68445
.p2align 0x4
L_401840:
L_68442:
	movl 0x0(%r15),%r14d
	movq 0x8(%r15),%r13
	addl 0x0(%r13),%r14d
	xorl %r14d,%edx
	movl %edx,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_401841:
L_68434:
	movq 0x0(%r15),%r14
	movq %r14,%r15
	movl %edi,%ecx
	jmp hashVars_0
.p2align 0x4
L_401842:
L_68473:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_68474+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_68474
.p2align 0x4
.long 0x45F
L_68474:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_68432
.p2align 0x4
.long 0x1
hash_0:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r14d
	movslq %r14d,%r13
	movl %r14d,(localWord32+0x0)(%rip)
	cmpq %r13,%r15
	jne L_68436
L_68452:
	xorl %ecx,%ecx
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_843:
	cmpl (localWord32+0x0)(%rip),%ebx
	jnl L_401845
L_68454:
	movl %ebx,%r14d
	incl %r14d
	movslq %ebx,%r13
	cmpq %r15,%r13
	jnb L_401844
L_68457:
	movq 0x0(%rbp),%r11
	movzbl 0x0(%r11,%r13,1),%r10d
	imull $0x1F,%ecx
	addl %r10d,%ecx
	movl %r14d,%ebx
	jmp loop_843
.p2align 0x4
L_401844:
L_68456:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_401845:
L_68453:
	movl %ecx,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x5AF
L_68469:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq $0x1FFFFFFF7,%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_68470+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x1
hash_1:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r14d
	movslq %r14d,%r13
	movl %r14d,(localWord32+0x0)(%rip)
	cmpq %r13,%r15
	jne L_68436
L_68463:
	xorl %ecx,%ecx
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_844:
	cmpl (localWord32+0x0)(%rip),%ebx
	jnl L_401848
L_68465:
	movl %ebx,%r14d
	incl %r14d
	movslq %ebx,%r13
	cmpq %r15,%r13
	jnb L_68456
L_68467:
	movq 0x0(%rbp),%r11
	movzbl 0x0(%r11,%r13,1),%r10d
	imull $0x1F,%ecx
	addl %ecx,%r10d
	movl %r10d,%ecx
	movl %r14d,%ebx
	jmp loop_844
.p2align 0x4
L_401848:
L_68464:
	movl %ecx,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x5AF
L_68459:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq $0x1FFFFFFF7,%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_68460+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x1
L_68470:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x1
L_68460:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp sextdToWord32_0
.text
.p2align 0x4
.globl x_1405
.hidden x_1405
x_1405:
L_68475:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_68513
L_68476:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_401868
L_68477:
	movq 0x10(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%rbp),%r15
	cmpq $0x1,%r15
	je L_401866
L_68478:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0xE4A,%r13
	je L_401863
	cmpq $0xE4B,%r13
	je L_401855
	cmpq $0xE4C,%r13
	je L_401852
L_68479:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq $0xECB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
L_68480:
	movq 0x0(%rbp),%r14
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_68481
L_68482:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xE49,%r13
	jne L_401850
L_68483:
	movq %r15,0x8(%rbp)
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq $0xECB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r13,0x8(%r14)
	movq %r14,0x0(%rbp)
	addq $0x18,%r12
	jmp equals_3
.p2align 0x4
L_401850:
L_68481:
	movl $0x0,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_401852:
L_68505:
	movq 0x0(%r15),%rsi
L_68506:
	movq 0x0(%rbp),%r15
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_68481
L_68507:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xE4C,%r14
	jne L_68481
L_68508:
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0x0(%r15),%rdi
	xorq %rax,%rax
	call IntInf_equal
L_68509:
	movl %eax,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_401855:
L_68492:
	movq 0x0(%r15),%r13
L_68493:
	movq 0x0(%rbp),%r15
	movq %r15,%r11
	andq $0x3,%r11
	jnz L_68481
L_68494:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r11
	shrq $0x1,%r11
	cmpq $0xE4B,%r11
	jne L_68481
L_68495:
	movq 0x0(%r15),%r11
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r10
	movq %r13,%r14
	andq $0x1,%r14
	cmpq $0x1,%r14
	je L_401858
L_68496:
	movsd 0x0(%r13),%xmm15
L_68497:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_68481
L_68498:
	movsd 0x0(%r11),%xmm14
	ucomisd %xmm15,%xmm14
	setnp %al
	movzbl %al,%eax
	setz %bl
	movzbl %bl,%ebx
	andl %eax,%ebx
	jz L_68481
L_68500:
	movd %xmm15,%r14
	movq 0x10(%r10),%r13
	andq %r13,%r14
	cmpq %r13,%r14
	sete %al
	movzbl %al,%eax
	movd %xmm14,%r14
	andq %r13,%r14
	cmpq %r13,%r14
	sete %bl
	movzbl %bl,%ebx
	cmpl %eax,%ebx
	sete %al
	movzbl %al,%eax
	movl %eax,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_401858:
L_68501:
	shrq $0x1,%r13
	movl %r13d,%r14d
	movd %r14d,%xmm15
	movq %r11,%r14
	andq $0x1,%r14
	cmpq $0x1,%r14
	jne L_68481
L_68502:
	shrq $0x1,%r11
	movl %r11d,%r14d
	movd %r14d,%xmm14
	ucomiss %xmm15,%xmm14
	setnp %al
	movzbl %al,%eax
	setz %bl
	movzbl %bl,%ebx
	andl %eax,%ebx
	jz L_68481
L_68504:
	movd %xmm15,%r14d
	movl 0xC(%r15),%r13d
	andl %r13d,%r14d
	cmpl %r13d,%r14d
	sete %al
	movzbl %al,%eax
	movd %xmm14,%r14d
	andl %r13d,%r14d
	cmpl %r14d,%r13d
	sete %bl
	movzbl %bl,%ebx
	cmpl %eax,%ebx
	sete %al
	movzbl %al,%eax
	movl %eax,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_401863:
L_68484:
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
L_68485:
	movq 0x0(%rbp),%r15
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_68481
L_68486:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0xE4A,%r13
	jne L_68481
L_68487:
	movq 0x0(%r15),%r13
	movq %r13,0x8(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x28(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_68488+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_0
.p2align 0x4
L_401866:
L_68510:
	cmpq $0x1,0x0(%rbp)
	je L_401867
L_68511:
	jmp L_68481
.p2align 0x4
L_401867:
L_68512:
	movl $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_401868:
L_68513:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_68514+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_68514
.p2align 0x4
.long 0x45B
L_68514:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_68477
.p2align 0x4
.long 0x4E5
L_68488:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movl 0x20(%rbp),%r15d
	movl %r15d,0x18(%rbp)
	testl %r15d,%r15d
	jz L_68481
L_68490:
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%rsi
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%rdi
	xorq %rax,%rax
	call IntInf_equal
L_68491:
	movl %eax,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl equals_3
.hidden equals_3
equals_3:
L_68515:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_68516
L_68540:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_68541+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_68541
.p2align 0x4
.long 0x45F
L_68541:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_68516:
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_68517+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_0
.p2align 0x4
.long 0x5AF
L_68517:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movl 0x18(%rbp),%r15d
	testl %r15d,%r15d
	movl %r15d,0x10(%rbp)
	jz L_68519
L_68520:
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movq %r15,0x20(%rbp)
	movl %r15d,%r14d
	movl %r14d,0x28(%rbp)
	movslq %r14d,%r11
	cmpq %r15,%r11
	jne L_68522
L_68523:
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movl %r15d,%r11d
	movslq %r11d,%r10
	cmpq %r15,%r10
	jne L_401875
L_68525:
	cmpl %r14d,%r11d
	jne L_401874
L_68527:
	movl $0x0,0x2C(%rbp)
loop_845:
	movl 0x2C(%rbp),%r15d
	cmpl 0x28(%rbp),%r15d
	je L_401873
L_68528:
	movslq %r15d,%r14
	cmpq 0x20(%rbp),%r14
	jnb L_401872
L_68530:
	movq 0x10(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	movq %r13,0x30(%rbp)
	movq 0x18(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r11
	movq %r11,0x38(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x50(%rbp)
	movq 0x8(%r11),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_68531+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_0
.p2align 0x4
L_401872:
L_68529:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_401873:
L_68539:
	movl $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_401874:
L_68519:
	movl $0x0,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_401875:
L_68522:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xFC5
L_68531:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movl 0x48(%rbp),%r15d
	movl %r15d,0x40(%rbp)
	testl %r15d,%r15d
	jz L_68519
L_68533:
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0x30(%rbp),%r15
	movq 0x0(%r15),%rsi
	movq 0x38(%rbp),%r15
	movq 0x0(%r15),%rdi
	xorq %rax,%rax
	call IntInf_equal
L_68534:
	testl %eax,%eax
	jz L_68519
L_68536:
	movl 0x2C(%rbp),%r15d
	incl %r15d
	jo L_401878
L_68538:
	movl %r15d,0x2C(%rbp)
	jmp loop_845
.p2align 0x4
L_401878:
L_68537:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl get_59
.hidden get_59
get_59:
L_68542:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_68572
L_68543:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_401893
L_68544:
	movq 0x0(%rbp),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x10(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_401892
L_68546:
	movq %r15,0x0(%r13)
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_401891
L_68547:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_68549:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_68550
L_68564:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xD0C,%r13
	jne L_68550
L_68565:
	movq 0x8(%r14),%r13
	movq 0x8(%rbp),%r11
	cmpq %r11,0x0(%r14)
	je L_401886
L_68550:
	incl %ecx
	movl %ecx,0x18(%rbp)
	jo L_401885
L_68552:
	cmpq $0x1,%r15
	je L_401881
L_68553:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_68549
.p2align 0x4
L_401881:
L_68554:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_68555
L_68562:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_68563+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_68563
.p2align 0x4
.long 0x813
L_68563:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_68555:
	movl 0x18(%rbp),%ecx
L_68556:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_401883
L_68558:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_68560
L_68561:
	movl %ecx,0x0(%r15)
L_68560:
	movq $0x53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x197,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x199,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	movq %r15,0x10(%r13)
	addq $0x20,%r12
	movq 0x0(%rbp),%r15
	movq %r15,0x0(%r13)
	movq $0x1A19,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	movq %r13,0x0(%rbp)
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_401883:
L_68557:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_401885:
L_68551:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_401886:
L_68567:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_68557
L_68568:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_401887
L_68570:
	movl %ecx,0x0(%r15)
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_401887:
L_68569:
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_401891:
L_68571:
	xorl %ecx,%ecx
	jmp L_68556
.p2align 0x4
L_401892:
L_68545:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_401893:
L_68572:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_68573+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_68573
.p2align 0x4
.long 0x45F
L_68573:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_68544
.text
.p2align 0x4
.globl get_60
.hidden get_60
get_60:
L_68574:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_68575
L_68632:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_68633+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_68633
.p2align 0x4
.long 0x45F
L_68633:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_68575:
	movq 0x8(%rbp),%r10
	movq 0x8(%r10),%r11
	movq 0x0(%r10),%r13
	movq 0x0(%rbp),%r10
	movq 0x10(%r10),%r15
	movq (globalObjptr+0x1068)(%rip),%r10
	movq 0x0(%r10),%r14
	incq %r14
	jo L_401905
L_68577:
	movq %r14,0x0(%r10)
	movq 0x0(%r15),%r10
	cmpq $0x1,%r10
	je L_401904
L_68578:
	movq 0x8(%r10),%r14
	movq 0x0(%r10),%r10
	xorl %ecx,%ecx
	movq %r10,%r15
.p2align 0x4,,0x7
L_68580:
	movq %r15,%r10
	andq $0x3,%r10
	jnz L_401903
L_68624:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r10
	shrq $0x1,%r10
	cmpq $0xD0A,%r10
	jne L_401902
L_68625:
	movq 0x8(%r15),%r10
	cmpq 0x0(%r15),%r11
	movq %r11,(localObjptr+0x0)(%rip)
	je L_401899
L_68581:
	incl %ecx
	jo L_401898
L_68583:
	cmpq $0x1,%r14
	je L_401895
L_68584:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq (localObjptr+0x0)(%rip),%r11
	jmp L_68580
.p2align 0x4
L_401895:
L_68585:
L_68586:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_401897
L_68588:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl x_166
L_68623:
	movl %ecx,0x0(%r15)
x_166:
	movq 0x0(%r13),%r15
	movq 0x0(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x8(%rbp)
	movq 0x18(%r14),%r11
	movq 0x0(%r13),%r14
	cmpq $0x1,%r14
	jne L_401896
L_68621:
	movq %r11,0x18(%rbp)
	movq %r15,0x20(%rbp)
	addq $0x18,%rbp
	leaq (L_68622+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unique_0
.p2align 0x4
L_401896:
L_68590:
	movq %r14,%r15
L_68591:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_68592+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_401897:
L_68587:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_401898:
L_68582:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_401899:
L_68627:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_68587
L_68628:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_401900
L_68630:
	movl %ecx,0x0(%r15)
	movq %r10,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_401900:
L_68629:
	movq %r10,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_401902:
	movq %r11,(localObjptr+0x0)(%rip)
	jmp L_68581
.p2align 0x4
L_401903:
	movq %r11,(localObjptr+0x0)(%rip)
	jmp L_68581
.p2align 0x4
L_401904:
L_68631:
	xorl %ecx,%ecx
	jmp L_68586
.p2align 0x4
L_401905:
L_68576:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x521
L_68622:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x8(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp L_68591
.p2align 0x4
.long 0x1
L_68592:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_68593+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4AF
L_68593:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xEFC8)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_68594+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5AF
L_68594:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_68595+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x51E
L_68595:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_68596
L_68619:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_68620+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_68620
.p2align 0x4
.long 0x4AE
L_68620:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_68596:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_68597:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_68582
L_68598:
	cmpq $0x1,%r14
	je L_401907
L_68599:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_68597
.p2align 0x4
L_401907:
L_68600:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_68601
L_68617:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_68618+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_68618
.p2align 0x4
.long 0x4E6
L_68618:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_68601:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_401908
L_68602:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
toString_69:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	addq $0x8,%rbp
	leaq (rev_69+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_401908:
L_68616:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_69
.p2align 0x4
.long 0x1
rev_69:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_401914
L_68603:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_68604:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_401913
.p2align 0x4,,0x7
L_68605:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_401912
L_68606:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_68604
.p2align 0x4
L_401912:
L_68608:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_68609+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_401913:
L_68613:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_68614+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_68614
.p2align 0x4
.long 0x45B
L_68614:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_68605
.p2align 0x4
L_401914:
L_68615:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_68608
.p2align 0x4
.long 0x1
L_68609:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_68610
L_68611:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_68612+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_68612
.p2align 0x4
.long 0x451
L_68612:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_68610:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl x_1394
.hidden x_1394
x_1394:
L_68634:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_68635
L_68688:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_68689+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_68689
.p2align 0x4
.long 0x45F
L_68689:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_68635:
	movq 0x8(%rbp),%r10
	movq 0x8(%r10),%r9
	movq 0x8(%r9),%r11
	movq 0x0(%r9),%r13
	movq 0x0(%rbp),%r10
	movq 0x10(%r10),%r15
	movq (globalObjptr+0x1068)(%rip),%r10
	movq 0x0(%r10),%r14
	incq %r14
	jo L_401925
L_68637:
	movq %r14,0x0(%r10)
	movq 0x0(%r15),%r10
	cmpq $0x1,%r10
	je L_401924
L_68638:
	movq 0x0(%r10),%r14
	movq 0x8(%r10),%r10
	xorl %ecx,%ecx
	movq %r10,%r15
.p2align 0x4,,0x7
L_68640:
	movq %r14,%r10
	andq $0x3,%r10
	jnz L_401923
L_68680:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r10
	shrq $0x1,%r10
	cmpq $0xD32,%r10
	jne L_401922
L_68681:
	movq 0x8(%r14),%r10
	cmpq 0x0(%r14),%r11
	movq %r11,(localObjptr+0x8)(%rip)
	je L_401919
L_68641:
	incl %ecx
	jo L_401918
L_68643:
	cmpq $0x1,%r15
	je L_401916
L_68644:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq (localObjptr+0x8)(%rip),%r11
	jmp L_68640
.p2align 0x4
L_401916:
L_68645:
L_68646:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_401917
L_68648:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl x_167
L_68679:
	movl %ecx,0x0(%r15)
x_167:
	movq %r13,0x10(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_68650+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_401917:
L_68647:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_401918:
L_68642:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_401919:
L_68683:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_68647
L_68684:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_401920
L_68686:
	movl %ecx,0x0(%r15)
	movq %r10,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_401920:
L_68685:
	movq %r10,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_401922:
	movq %r11,(localObjptr+0x8)(%rip)
	jmp L_68641
.p2align 0x4
L_401923:
	movq %r11,(localObjptr+0x8)(%rip)
	jmp L_68641
.p2align 0x4
L_401924:
L_68687:
	xorl %ecx,%ecx
	jmp L_68646
.p2align 0x4
L_401925:
L_68636:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_68650:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_68651+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1
L_68651:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_68652+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4AF
L_68652:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xEF78)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_68653+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5AF
L_68653:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_68654+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x51E
L_68654:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_68655
L_68677:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_68678+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_68678
.p2align 0x4
.long 0x4AE
L_68678:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_68655:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_68656:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_68642
L_68657:
	cmpq $0x1,%r14
	je L_401927
L_68658:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_68656
.p2align 0x4
L_401927:
L_68659:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_68660
L_68675:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_68676+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_68676
.p2align 0x4
.long 0x4E6
L_68676:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_68660:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_401928
L_68661:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
toString_70:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	addq $0x8,%rbp
	leaq (rev_70+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_401928:
L_68674:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_70
.p2align 0x4
.long 0x1
rev_70:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_401934
L_68662:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_68663:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_401933
.p2align 0x4,,0x7
L_68664:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_401932
L_68665:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_68663
.p2align 0x4
L_401932:
L_68667:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_147+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_401933:
L_68671:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_68672+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_68672
.p2align 0x4
.long 0x45B
L_68672:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_68664
.p2align 0x4
L_401934:
L_68673:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_68667
.p2align 0x4
.long 0x1
bug_147:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_68668
L_68669:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_68670+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_68670
.p2align 0x4
.long 0x451
L_68670:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_68668:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
