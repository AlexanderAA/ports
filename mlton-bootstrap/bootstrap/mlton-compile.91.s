/* MLton 20130715 (built Mon Jun 13 11:54:01 AEST 2016 on ports.extensibl.com) */
/*   created this file on Mon Jun 13 12:10:28 2016. */
/* Do not edit this file. */
/* Flag settings:  */
/*    align: 8 */
/*    atMLtons: (mlton-compile, @MLton, --) */
/*    chunk: chunk per function */
/*    closureConvertGlobalize: true */
/*    closureConvertShrink: true */
/*    codegen: amd64 */
/*    contifyIntoMain: false */
/*    debug: false */
/*    defaultChar: char8 */
/*    defaultWideChar: widechar32 */
/*    defaultInt: int32 */
/*    defaultReal: real64 */
/*    defaultWord: word32 */
/*    diag passes: [] */
/*    drop passes: [] */
/*    elaborate allowConstant (default): false */
/*    elaborate allowConstant (enabled): true */
/*    elaborate allowFFI (default): false */
/*    elaborate allowFFI (enabled): true */
/*    elaborate allowPrim (default): false */
/*    elaborate allowPrim (enabled): true */
/*    elaborate allowOverload (default): false */
/*    elaborate allowOverload (enabled): true */
/*    elaborate allowRebindEquals (default): false */
/*    elaborate allowRebindEquals (enabled): true */
/*    elaborate deadCode (default): false */
/*    elaborate deadCode (enabled): true */
/*    elaborate forceUsed (default): false */
/*    elaborate forceUsed (enabled): true */
/*    elaborate ffiStr (default):  */
/*    elaborate ffiStr (enabled): true */
/*    elaborate nonexhaustiveExnMatch (default): default */
/*    elaborate nonexhaustiveExnMatch (enabled): true */
/*    elaborate nonexhaustiveMatch (default): warn */
/*    elaborate nonexhaustiveMatch (enabled): true */
/*    elaborate redundantMatch (default): warn */
/*    elaborate redundantMatch (enabled): true */
/*    elaborate resolveScope (default): strdec */
/*    elaborate resolveScope (enabled): true */
/*    elaborate sequenceNonUnit (default): warn */
/*    elaborate sequenceNonUnit (enabled): true */
/*    elaborate warnUnused (default): true */
/*    elaborate warnUnused (enabled): true */
/*    elaborate only: false */
/*    emit main: true */
/*    export header: None */
/*    exn history: false */
/*    generated output format: executable */
/*    gc check: Limit */
/*    indentation: 3 */
/*    inlineIntoMain: true */
/*    inlineLeafA: {loops = true, repeat = true, size = Some 20} */
/*    inlineLeafB: {loops = true, repeat = true, size = Some 40} */
/*    inlineNonRec: {small = 60, product = 320} */
/*    input file: mlton */
/*    keep CoreML: false */
/*    keep def use: true */
/*    keep dot: false */
/*    keep Machine: false */
/*    keep passes: [] */
/*    keep RSSA: false */
/*    keep SSA: false */
/*    keep SSA2: false */
/*    keep SXML: false */
/*    keep XML: false */
/*    extra_: false */
/*    lib dir: /usr/ports/pobj/mlton-20130715/mlton-on-20130715-release/build/lib */
/*    lib target dir: /usr/ports/pobj/mlton-20130715/mlton-on-20130715-release/build/lib/targets/self */
/*    loop passes: 1 */
/*    mark cards: true */
/*    max function size: 10000 */
/*    mlb path vars: [{var = MLTON_ROOT, path = $(LIB_MLTON_DIR)/sml}, {var = SML_LIB, path = $(LIB_MLTON_DIR)/sml}] */
/*    native commented: 0 */
/*    native live stack: false */
/*    native optimize: 1 */
/*    native move hoist: true */
/*    native copy prop: true */
/*    native copy prop cutoff: 1000 */
/*    native cutoff: 100 */
/*    native live transfer: 8 */
/*    native shuffle: true */
/*    native ieee fp: false */
/*    native split: Some 20000 */
/*    optimizationPasses: [<ssa2::default>, <ssa::default>, <sxml::default>, <xml::default>] */
/*    polyvariance: Some {hofo = true, rounds = 2, small = 30, product = 300} */
/*    prefer abs paths: false */
/*    prof passes: [] */
/*    profile: None */
/*    profile branch: false */
/*    profile C: [] */
/*    profile IL: ProfileSource */
/*    profile include/exclude: [(Seq [Star [.], Or [Seq [Seq [[$], [(], [S], [M], [L], [_], [L], [I], [B], [)]]]], Star [.]], false)] */
/*    profile raise: false */
/*    profile stack: false */
/*    profile val: false */
/*    show basis: None */
/*    show def-use: None */
/*    show types: true */
/*    target: self */
/*    target arch: AMD64 */
/*    target OS: OpenBSD */
/*    type check: false */
/*    verbosity: Pass */
/*    warn unrecognized annotation: true */
/*    warn deprecated features: true */
/*    zone cut depth: 100 */
.text
.p2align 0x4
.globl checkSyntaxSigexp_0
.hidden checkSyntaxSigexp_0
checkSyntaxSigexp_0:
L_277140:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_277141
L_277153:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_277154+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_277154
.p2align 0x4
.long 0x45F
L_277154:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_277141:
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xE24,%r15
	je L_492913
	cmpq $0xE25,%r15
	je L_492912
L_277142:
	movq 0x0(%r14),%r15
	movq %r15,0x0(%rbp)
	jmp checkSyntaxSpec_0
.p2align 0x4
L_492912:
L_277152:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_492913:
L_277143:
	movq 0x8(%r14),%r15
	movq %r15,0x18(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x28(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_277144+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp checkSyntaxSigexp_0
.p2align 0x4
.long 0x490
L_277144:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x18(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x20(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	je L_492915
L_277145:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_492915:
L_277146:
	cmpl $0x0,0x20(%rbp)
	jl L_492917
L_277147:
	movl $0x0,0x24(%rbp)
loop_3268:
	movl 0x20(%rbp),%r15d
	cmpl %r15d,0x24(%rbp)
	jl L_492916
L_277148:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_492916:
L_277149:
	movslq 0x24(%rbp),%r15
	movq 0x18(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x30(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_277150+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp checkSyntax_0
.p2align 0x4
L_492917:
L_277151:
	movq (globalObjptr+0x4F8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x609
L_277150:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	incl 0x24(%rbp)
	jmp loop_3268
.text
.p2align 0x4
.globl checkSyntaxSpec_0
.hidden checkSyntaxSpec_0
checkSyntaxSpec_0:
loopS_30:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_277155
L_277492:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_277493+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_277493
.p2align 0x4
.long 0x45F
L_277493:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_277155:
	movq 0x0(%rbp),%r15
	movq %r15,0x10(%rbp)
.p2align 0x4,,0x7
loop_3269:
	movq 0x8(%rbp),%r15
	movq 0x20(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x18(%r15),%r14
	movq 0x10(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x28(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x30(%rbp)
	movq 0x10(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x38(%rbp)
	cmpq $0x1,%r13
	je L_492979
L_277156:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%rax
	shrq $0x1,%rax
	subq $0xE19,%rax
	cmpq $0x9,%rax
	ja L_492918
	leaq jumpTable_762(%rip),%rbx
	jmp *(%rbx,%rax,8)
.data
.p2align 0x4
jumpTable_762:
.quad L_492969,L_492961,L_492952,L_492951,L_492950,L_492949,L_492947,L_492937,L_492929,L_492927
.text
.p2align 0x4
L_492918:
L_277157:
	movq 0x38(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movq %r15,0x40(%rbp)
	movl %r15d,%r14d
	movl %r14d,0x48(%rbp)
	movslq %r14d,%r13
	cmpq %r15,%r13
	jne L_492926
L_277160:
	cmpl $0x0,%r14d
	jl L_492925
L_277161:
	movl $0x0,0x38(%rbp)
loop_3270:
	movl 0x48(%rbp),%r15d
	cmpl %r15d,0x38(%rbp)
	jl L_492924
L_277162:
	movl $0x0,0x30(%rbp)
.p2align 0x4,,0x7
loop_3271:
	movl 0x30(%rbp),%r14d
	cmpl 0x48(%rbp),%r14d
	jnl L_492923
L_277164:
	movslq %r14d,%r15
	movq 0x28(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
loop_3272:
	cmpl 0x30(%rbp),%ecx
	je L_492922
L_277165:
	movslq %ecx,%r14
	cmpq 0x40(%rbp),%r14
	jnb L_492921
L_277168:
	movq 0x8(%r15),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x38(%rbp)
	movq 0x28(%rbp),%r10
	movq 0x0(%r10,%r14,8),%r9
	movq 0x8(%r9),%r8
	movq 0x8(%r8),%rsp
	movq 0x8(%r11),%rsi
	cmpq %rsi,0x8(%rsp)
	je L_492920
L_277169:
	incl %ecx
	jo L_492919
L_277171:
	jmp loop_3272
.p2align 0x4
L_492919:
L_277170:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_492920:
L_277172:
	movq 0x0(%r13),%r15
	movq %r15,0x50(%rbp)
	movq (globalObjptr+0x1830)(%rip),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_277173+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_492921:
L_277167:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_492922:
.p2align 0x4,,0x7
L_277197:
	incl 0x30(%rbp)
	jmp loop_3271
.p2align 0x4
L_492923:
L_277163:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_492924:
L_277211:
	movslq 0x38(%rbp),%r15
	movq 0x28(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x58(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_277212+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp checkSyntax_0
.p2align 0x4
L_492925:
L_277214:
	movq (globalObjptr+0x4F8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_492926:
L_277159:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_492927:
L_277488:
	movq 0x38(%rbp),%r15
	movq 0x0(%r15),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x129D,%r15
	je L_492928
L_277490:
	movq %r14,0x8(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x0(%rbp)
	jmp checkSyntax_1
.p2align 0x4
L_492928:
L_277489:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_492929:
L_277438:
	movq 0x38(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movq %r15,0x30(%rbp)
	movl %r15d,%r14d
	movl %r14d,0x40(%rbp)
	movslq %r14d,%r13
	cmpq %r15,%r13
	jne L_277159
L_277440:
	cmpl $0x0,%r14d
	jl L_277214
L_277441:
	movl $0x0,0x38(%rbp)
.p2align 0x4,,0x7
loop_3284:
	movl 0x38(%rbp),%r14d
	cmpl 0x40(%rbp),%r14d
	jnl L_492934
L_277443:
	movslq %r14d,%r15
	movq 0x28(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
loop_3285:
	cmpl 0x38(%rbp),%ecx
	je L_492933
L_277444:
	movslq %ecx,%r14
	cmpq 0x30(%rbp),%r14
	jnb L_277167
L_277446:
	movq 0x8(%r15),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x48(%rbp)
	movq 0x28(%rbp),%r10
	movq 0x0(%r10,%r14,8),%r9
	movq 0x8(%r9),%r8
	movq 0x8(%r8),%rsp
	movq 0x8(%r11),%rsi
	cmpq %rsi,0x8(%rsp)
	je L_492931
L_277447:
	incl %ecx
	jo L_277170
L_277448:
	jmp loop_3285
.p2align 0x4
L_492931:
L_277449:
	movq 0x0(%r13),%r15
	movq %r15,0x50(%rbp)
	movq (globalObjptr+0x1800)(%rip),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_277450+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_492933:
.p2align 0x4,,0x7
L_277474:
	incl 0x38(%rbp)
	jmp loop_3284
.p2align 0x4
L_492934:
L_277442:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_492937:
L_277382:
	movq 0x38(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movq %r15,0x40(%rbp)
	movl %r15d,%r14d
	movl %r14d,0x48(%rbp)
	movslq %r14d,%r13
	cmpq %r13,%r15
	jne L_277159
L_277384:
	cmpl $0x0,%r14d
	jl L_277214
L_277385:
	movl $0x0,0x38(%rbp)
.p2align 0x4,,0x7
loop_3281:
	movl 0x38(%rbp),%r15d
	cmpl 0x48(%rbp),%r15d
	jnl L_492939
L_277432:
	movslq %r15d,%r14
	movq 0x28(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	jne L_492938
.p2align 0x4,,0x7
L_277435:
	incl 0x38(%rbp)
	jmp loop_3281
.p2align 0x4
L_492938:
L_277433:
	movq %r11,0x58(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_277434+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp checkSyntax_0
.p2align 0x4
L_492939:
L_277386:
	movl $0x0,0x30(%rbp)
.p2align 0x4,,0x7
loop_3282:
	movl 0x30(%rbp),%r14d
	cmpl 0x48(%rbp),%r14d
	jnl L_492944
L_277388:
	movslq %r14d,%r15
	movq 0x28(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
loop_3283:
	cmpl 0x30(%rbp),%ecx
	je L_492943
L_277389:
	movslq %ecx,%r14
	cmpq 0x40(%rbp),%r14
	jnb L_277167
L_277391:
	movq 0x8(%r15),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x38(%rbp)
	movq 0x28(%rbp),%r10
	movq 0x0(%r10,%r14,8),%r9
	movq 0x8(%r9),%r8
	movq 0x8(%r8),%rsp
	movq 0x8(%rsp),%rsi
	cmpq %rsi,0x8(%r11)
	je L_492941
L_277392:
	incl %ecx
	jo L_277170
L_277393:
	jmp loop_3283
.p2align 0x4
L_492941:
L_277394:
	movq 0x0(%r13),%r15
	movq %r15,0x50(%rbp)
	movq (globalObjptr+0x1810)(%rip),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_277395+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_492943:
.p2align 0x4,,0x7
L_277419:
	incl 0x30(%rbp)
	jmp loop_3282
.p2align 0x4
L_492944:
L_277387:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_492947:
L_277378:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_277379
L_277380:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_277381+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_277381
.p2align 0x4
.long 0x2570
L_277381:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_277379:
	movq 0x38(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq $0x10D9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	movq %r15,0x0(%rbp)
	addq $0x18,%r12
	jmp checkSyntaxSigexp_0
.p2align 0x4
L_492949:
L_277377:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_492950:
L_277375:
	movq 0x38(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_277376+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp checkSyntaxSpec_0
.p2align 0x4
L_492951:
L_277374:
	movq 0x38(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	jmp loop_3269
.p2align 0x4
L_492952:
L_277321:
	movq 0x38(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movq %r15,0x30(%rbp)
	movl %r15d,%r14d
	movl %r14d,0x40(%rbp)
	movslq %r14d,%r13
	cmpq %r13,%r15
	jne L_277159
L_277323:
	cmpl $0x0,%r14d
	jl L_277214
L_277324:
	movl $0x0,0x38(%rbp)
loop_3278:
	movl 0x40(%rbp),%r15d
	cmpl %r15d,0x38(%rbp)
	jl L_492958
L_277325:
	movl $0x0,0x38(%rbp)
.p2align 0x4,,0x7
loop_3279:
	movl 0x38(%rbp),%r14d
	cmpl 0x40(%rbp),%r14d
	jnl L_492957
L_277327:
	movslq %r14d,%r15
	movq 0x28(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
loop_3280:
	cmpl %ecx,0x38(%rbp)
	je L_492956
L_277328:
	movslq %ecx,%r14
	cmpq 0x30(%rbp),%r14
	jnb L_277167
L_277330:
	movq 0x8(%r15),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x48(%rbp)
	movq 0x28(%rbp),%r10
	movq 0x0(%r10,%r14,8),%r9
	movq 0x8(%r9),%r8
	movq 0x8(%r8),%rsp
	movq 0x8(%r11),%rsi
	cmpq %rsi,0x8(%rsp)
	je L_492954
L_277331:
	incl %ecx
	jo L_277170
L_277332:
	jmp loop_3280
.p2align 0x4
L_492954:
L_277333:
	movq 0x0(%r13),%r15
	movq %r15,0x50(%rbp)
	movq (globalObjptr+0x1840)(%rip),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_277334+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_492956:
.p2align 0x4,,0x7
L_277358:
	incl 0x38(%rbp)
	jmp loop_3279
.p2align 0x4
L_492957:
L_277326:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_492958:
L_277371:
	movslq 0x38(%rbp),%r15
	movq 0x28(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x50(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_277372+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp checkSyntaxSigexp_0
.p2align 0x4
L_492961:
L_277271:
	movq 0x38(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movq %r15,0x30(%rbp)
	movl %r15d,%r14d
	movl %r14d,0x40(%rbp)
	movslq %r14d,%r13
	cmpq %r15,%r13
	jne L_277159
L_277273:
	cmpl $0x0,%r14d
	jl L_277214
L_277274:
	movl $0x0,0x38(%rbp)
.p2align 0x4,,0x7
loop_3276:
	movl 0x38(%rbp),%r14d
	cmpl 0x40(%rbp),%r14d
	jnl L_492966
L_277276:
	movslq %r14d,%r15
	movq 0x28(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
loop_3277:
	cmpl %ecx,0x38(%rbp)
	je L_492965
L_277277:
	movslq %ecx,%r14
	cmpq 0x30(%rbp),%r14
	jnb L_277167
L_277279:
	movq 0x8(%r15),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x48(%rbp)
	movq 0x28(%rbp),%r10
	movq 0x0(%r10,%r14,8),%r9
	movq 0x8(%r9),%r8
	movq 0x8(%r8),%rsp
	movq 0x8(%r11),%rsi
	cmpq %rsi,0x8(%rsp)
	je L_492963
L_277280:
	incl %ecx
	jo L_277170
L_277281:
	jmp loop_3277
.p2align 0x4
L_492963:
L_277282:
	movq 0x0(%r13),%r15
	movq %r15,0x50(%rbp)
	movq (globalObjptr+0x1820)(%rip),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_277283+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_492965:
.p2align 0x4,,0x7
L_277307:
	incl 0x38(%rbp)
	jmp loop_3276
.p2align 0x4
L_492966:
L_277275:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_492969:
L_277215:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_277216
L_277269:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_277270+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_277270
.p2align 0x4
.long 0x5F3
L_277270:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_277216:
	movq 0x38(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r13,0x30(%rbp)
	movq $0x3A7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x40(%rbp)
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq %r13,0x8(%r15)
	movq 0x28(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movq %r15,0x60(%rbp)
	movl %r15d,%r14d
	movl %r14d,0x68(%rbp)
	movslq %r14d,%r13
	cmpq %r15,%r13
	jne L_277159
L_277218:
	cmpl $0x0,%r14d
	jl L_277214
L_277219:
	movl $0x0,0x38(%rbp)
loop_3273:
	movl 0x68(%rbp),%r15d
	cmpl %r15d,0x38(%rbp)
	jl L_492975
L_277220:
	movl $0x0,0x38(%rbp)
.p2align 0x4,,0x7
loop_3274:
	movl 0x38(%rbp),%r14d
	cmpl 0x68(%rbp),%r14d
	jnl L_492974
L_277222:
	movslq %r14d,%r15
	movq 0x30(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
loop_3275:
	cmpl %ecx,0x38(%rbp)
	je L_492973
L_277223:
	movslq %ecx,%r14
	cmpq 0x60(%rbp),%r14
	jnb L_277167
L_277225:
	movq 0x8(%r15),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x48(%rbp)
	movq 0x30(%rbp),%r10
	movq 0x0(%r10,%r14,8),%r9
	movq 0x8(%r9),%r8
	movq 0x8(%r8),%rsp
	movq 0x8(%rsp),%rsi
	cmpq %rsi,0x8(%r11)
	je L_492971
L_277226:
	incl %ecx
	jo L_277170
L_277227:
	jmp loop_3275
.p2align 0x4
L_492971:
L_277228:
	movq 0x0(%r13),%r15
	movq %r15,0x70(%rbp)
	movq (globalObjptr+0x1740)(%rip),%r15
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_277229+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_492973:
.p2align 0x4,,0x7
L_277253:
	incl 0x38(%rbp)
	jmp loop_3274
.p2align 0x4
L_492974:
L_277221:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_492975:
L_277266:
	movslq 0x38(%rbp),%r15
	movq 0x30(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x78(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_277267+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp checkSyntax_0
.p2align 0x4
L_492979:
L_277491:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x44E3
L_277173:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_277174+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x44EA
L_277212:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	incl 0x38(%rbp)
	jmp loop_3270
.p2align 0x4
.long 0x8F0
L_277450:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_277451+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x44EA
L_277434:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	jmp L_277435
.p2align 0x4
.long 0x44E3
L_277395:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_277396+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4E5
L_277376:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp loop_3269
.p2align 0x4
.long 0x8F0
L_277334:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_277335+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x44F9
L_277372:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	incl 0x38(%rbp)
	jmp loop_3278
.p2align 0x4
.long 0x8F0
L_277283:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_277284+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x44EB
L_277229:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_277230+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x44F3
L_277267:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	incl 0x38(%rbp)
	jmp loop_3273
.p2align 0x4
.long 0x44E3
L_277174:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x38(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_277175+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x8F0
L_277451:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x48(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_277452+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x44E3
L_277396:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x38(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_277397+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x8F0
L_277335:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x48(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_277336+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x8F0
L_277284:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x48(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_277285+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x44EB
L_277230:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x48(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_277231+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x44E4
L_277175:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_277176
L_277208:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_277209+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_277209
.p2align 0x4
.long 0x44E9
L_277209:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_277176:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x60(%rbp)
	addq $0x18,%r12
	movq 0x58(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_277177:
	addl 0x0(%r15),%ecx
	movl %ecx,0x34(%rbp)
	jo L_277170
L_277178:
	cmpq $0x1,%r14
	je L_492981
L_277179:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_277177
.p2align 0x4
L_492981:
L_277180:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_277181
L_277206:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_277207+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_277207
.p2align 0x4
.long 0x44E8
L_277207:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_277181:
	movl 0x34(%rbp),%ecx
	testl %ecx,%ecx
	jz L_492982
L_277182:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
L_277183:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x38(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0xE040)(%rip),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_277184+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_492982:
L_277205:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_277183
.p2align 0x4
.long 0x44E4
L_277452:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_277453
L_277484:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_277485+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_277485
.p2align 0x4
.long 0x44F8
L_277485:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_277453:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x60(%rbp)
	addq $0x18,%r12
	movq 0x58(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_277454:
	addl 0x0(%r15),%ecx
	movl %ecx,0x3C(%rbp)
	jo L_277170
L_277455:
	cmpq $0x1,%r14
	je L_492986
L_277456:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_277454
.p2align 0x4
L_492986:
L_277457:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_277458
L_277482:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_277483+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_277483
.p2align 0x4
.long 0x44E8
L_277483:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_277458:
	movl 0x3C(%rbp),%ecx
	testl %ecx,%ecx
	jz L_492987
L_277459:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
L_277460:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x48(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0xE040)(%rip),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_277461+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_492987:
L_277481:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_277460
.p2align 0x4
.long 0x44E4
L_277397:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_277398
L_277429:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_277430+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_277430
.p2align 0x4
.long 0x44E9
L_277430:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_277398:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x60(%rbp)
	addq $0x18,%r12
	movq 0x58(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_277399:
	addl 0x0(%r15),%ecx
	movl %ecx,0x34(%rbp)
	jo L_277170
L_277400:
	cmpq $0x1,%r14
	je L_492991
L_277401:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_277399
.p2align 0x4
L_492991:
L_277402:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_277403
L_277427:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_277428+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_277428
.p2align 0x4
.long 0x44E8
L_277428:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_277403:
	movl 0x34(%rbp),%ecx
	testl %ecx,%ecx
	jz L_492992
L_277404:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
L_277405:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x38(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0xE040)(%rip),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_277406+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_492992:
L_277426:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_277405
.p2align 0x4
.long 0x44E4
L_277336:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_277337
L_277368:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_277369+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_277369
.p2align 0x4
.long 0x44F8
L_277369:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_277337:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x60(%rbp)
	addq $0x18,%r12
	movq 0x58(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_277338:
	addl 0x0(%r15),%ecx
	movl %ecx,0x3C(%rbp)
	jo L_277170
L_277339:
	cmpq $0x1,%r14
	je L_492996
L_277340:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_277338
.p2align 0x4
L_492996:
L_277341:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_277342
L_277366:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_277367+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_277367
.p2align 0x4
.long 0x44E8
L_277367:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_277342:
	movl 0x3C(%rbp),%ecx
	testl %ecx,%ecx
	jz L_492997
L_277343:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
L_277344:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x48(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0xE040)(%rip),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_277345+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_492997:
L_277365:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_277344
.p2align 0x4
.long 0x44E4
L_277285:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_277286
L_277317:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_277318+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_277318
.p2align 0x4
.long 0x44F8
L_277318:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_277286:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x60(%rbp)
	addq $0x18,%r12
	movq 0x58(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_277287:
	addl 0x0(%r15),%ecx
	movl %ecx,0x3C(%rbp)
	jo L_277170
L_277288:
	cmpq $0x1,%r14
	je L_493001
L_277289:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_277287
.p2align 0x4
L_493001:
L_277290:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_277291
L_277315:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_277316+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_277316
.p2align 0x4
.long 0x44E8
L_277316:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_277291:
	movl 0x3C(%rbp),%ecx
	testl %ecx,%ecx
	jz L_493002
L_277292:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
L_277293:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x48(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0xE040)(%rip),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_277294+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_493002:
L_277314:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_277293
.p2align 0x4
.long 0x44EC
L_277231:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_277232
L_277263:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_277264+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_277264
.p2align 0x4
.long 0x44F2
L_277264:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_277232:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x80(%rbp)
	addq $0x18,%r12
	movq 0x78(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_277233:
	addl 0x0(%r15),%ecx
	movl %ecx,0x3C(%rbp)
	jo L_277170
L_277234:
	cmpq $0x1,%r14
	je L_493006
L_277235:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_277233
.p2align 0x4
L_493006:
L_277236:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_277237
L_277261:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_277262+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_277262
.p2align 0x4
.long 0x44F1
L_277262:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_277237:
	movl 0x3C(%rbp),%ecx
	testl %ecx,%ecx
	jz L_493007
L_277238:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x80(%rbp),%r14
	movq %r14,0x0(%r15)
L_277239:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x48(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0xE040)(%rip),%r15
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_277240+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_493007:
L_277260:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_277239
.p2align 0x4
.long 0x44E3
L_277184:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_277185+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutSpec_0
.p2align 0x4
.long 0x8F0
L_277461:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_277462+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutSpec_0
.p2align 0x4
.long 0x44E3
L_277406:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_277407+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutSpec_0
.p2align 0x4
.long 0x8F0
L_277345:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_277346+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutSpec_0
.p2align 0x4
.long 0x8F0
L_277294:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_277295+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutSpec_0
.p2align 0x4
.long 0x44EB
L_277240:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x88,%rbp
	leaq (L_277241+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_30
.p2align 0x4
.long 0x44E5
L_277185:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	movl 0x70(%rbp),%r15d
	movl %r15d,0x34(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_277186
L_277203:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_277204+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_277204
.p2align 0x4
.long 0x44E7
L_277204:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_277186:
	movq $0xC3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x34(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x68(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x58(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_277187:
	addl 0x0(%r15),%ecx
	movl %ecx,0x34(%rbp)
	jo L_277170
L_277188:
	cmpq $0x1,%r14
	je L_493011
L_277189:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_277187
.p2align 0x4
L_493011:
L_277190:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_277191
L_277201:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_277202+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_277202
.p2align 0x4
.long 0x44E6
L_277202:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_277191:
	movl 0x34(%rbp),%ecx
	testl %ecx,%ecx
	jz L_493013
L_277192:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
L_277193:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_277170
L_277194:
	movl %r13d,0x0(%r15)
	movq %r14,0x58(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x70(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x58,%rbp
	leaq (L_277195+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_493013:
L_277200:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_277193
.p2align 0x4
.long 0x44F4
L_277462:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	movl 0x70(%rbp),%r15d
	movl %r15d,0x3C(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_277463
L_277479:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_277480+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_277480
.p2align 0x4
.long 0x44F7
L_277480:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_277463:
	movq $0xC3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x3C(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x68(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x58(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_277464:
	addl 0x0(%r15),%ecx
	movl %ecx,0x3C(%rbp)
	jo L_277170
L_277465:
	cmpq $0x1,%r14
	je L_493017
L_277466:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_277464
.p2align 0x4
L_493017:
L_277467:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_277468
L_277477:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_277478+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_277478
.p2align 0x4
.long 0x44F6
L_277478:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_277468:
	movl 0x3C(%rbp),%ecx
	testl %ecx,%ecx
	jz L_493019
L_277469:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
L_277470:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_277170
L_277471:
	movl %r13d,0x0(%r15)
	movq 0x48(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq %r14,0x50(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x68(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x50,%rbp
	leaq (L_277472+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_493019:
L_277476:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_277470
.p2align 0x4
.long 0x44E5
L_277407:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	movl 0x70(%rbp),%r15d
	movl %r15d,0x34(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_277408
L_277424:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_277425+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_277425
.p2align 0x4
.long 0x44E7
L_277425:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_277408:
	movq $0xC3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x34(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x68(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x58(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_277409:
	addl 0x0(%r15),%ecx
	movl %ecx,0x34(%rbp)
	jo L_277170
L_277410:
	cmpq $0x1,%r14
	je L_493023
L_277411:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_277409
.p2align 0x4
L_493023:
L_277412:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_277413
L_277422:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_277423+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_277423
.p2align 0x4
.long 0x44E6
L_277423:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_277413:
	movl 0x34(%rbp),%ecx
	testl %ecx,%ecx
	jz L_493025
L_277414:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
L_277415:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_277170
L_277416:
	movl %r13d,0x0(%r15)
	movq %r14,0x58(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x70(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x58,%rbp
	leaq (L_277417+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_493025:
L_277421:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_277415
.p2align 0x4
.long 0x44F4
L_277346:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	movl 0x70(%rbp),%r15d
	movl %r15d,0x3C(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_277347
L_277363:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_277364+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_277364
.p2align 0x4
.long 0x44F7
L_277364:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_277347:
	movq $0xC3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x3C(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x68(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x58(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_277348:
	addl 0x0(%r15),%ecx
	movl %ecx,0x3C(%rbp)
	jo L_277170
L_277349:
	cmpq $0x1,%r14
	je L_493029
L_277350:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_277348
.p2align 0x4
L_493029:
L_277351:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_277352
L_277361:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_277362+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_277362
.p2align 0x4
.long 0x44F6
L_277362:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_277352:
	movl 0x3C(%rbp),%ecx
	testl %ecx,%ecx
	jz L_493031
L_277353:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
L_277354:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_277170
L_277355:
	movl %r13d,0x0(%r15)
	movq 0x48(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq %r14,0x50(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x68(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x50,%rbp
	leaq (L_277356+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_493031:
L_277360:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_277354
.p2align 0x4
.long 0x44F4
L_277295:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	movl 0x70(%rbp),%r15d
	movl %r15d,0x3C(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_277296
L_277312:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_277313+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_277313
.p2align 0x4
.long 0x44F7
L_277313:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_277296:
	movq $0xC3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x3C(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x68(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x58(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_277297:
	addl 0x0(%r15),%ecx
	movl %ecx,0x3C(%rbp)
	jo L_277170
L_277298:
	cmpq $0x1,%r14
	je L_493035
L_277299:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_277297
.p2align 0x4
L_493035:
L_277300:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_277301
L_277310:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_277311+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_277311
.p2align 0x4
.long 0x44F6
L_277311:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_277301:
	movl 0x3C(%rbp),%ecx
	testl %ecx,%ecx
	jz L_493037
L_277302:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
L_277303:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_277170
L_277304:
	movl %r13d,0x0(%r15)
	movq 0x48(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq %r14,0x50(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x68(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x50,%rbp
	leaq (L_277305+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_493037:
L_277309:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_277303
.p2align 0x4
.long 0x44ED
L_277241:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x80(%rbp)
	movl 0x90(%rbp),%r15d
	movl %r15d,0x3C(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_277242
L_277258:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_277259+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_277259
.p2align 0x4
.long 0x44F0
L_277259:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_277242:
	movq $0xC3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x3C(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x80(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x88(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x78(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_277243:
	addl 0x0(%r15),%ecx
	movl %ecx,0x3C(%rbp)
	jo L_277170
L_277244:
	cmpq $0x1,%r14
	je L_493041
L_277245:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_277243
.p2align 0x4
L_493041:
L_277246:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_277247
L_277256:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_277257+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_277257
.p2align 0x4
.long 0x44EF
L_277257:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_277247:
	movl 0x3C(%rbp),%ecx
	testl %ecx,%ecx
	jz L_493043
L_277248:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x88(%rbp),%r14
	movq %r14,0x0(%r15)
L_277249:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_277170
L_277250:
	movl %r13d,0x0(%r15)
	movq %r14,0x78(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x90(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x78,%rbp
	leaq (L_277251+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_493043:
L_277255:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_277249
.p2align 0x4
.long 0x104F
L_277195:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq (globalObjptr+0x1608)(%rip),%r15
	movq (globalObjptr+0x1610)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	jne L_277197
L_277199:
	movq (globalObjptr+0x1618)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x44F5
L_277472:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq (globalObjptr+0x1608)(%rip),%r15
	movq (globalObjptr+0x1610)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_277199
	jmp L_277474
.p2align 0x4
.long 0x104F
L_277417:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq (globalObjptr+0x1610)(%rip),%r15
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_277199
	jmp L_277419
.p2align 0x4
.long 0x44F5
L_277356:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq (globalObjptr+0x1610)(%rip),%r15
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_277199
	jmp L_277358
.p2align 0x4
.long 0x44F5
L_277305:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq (globalObjptr+0x1610)(%rip),%r15
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_277199
	jmp L_277307
.p2align 0x4
.long 0x44EE
L_277251:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq (globalObjptr+0x1608)(%rip),%r15
	movq (globalObjptr+0x1610)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_277199
	jmp L_277253
.text
.p2align 0x4
.globl checkSyntax_0
.hidden checkSyntax_0
checkSyntax_0:
L_277494:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_277495
L_277601:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_277602+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_277602
.p2align 0x4
.long 0x45F
L_277602:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_277495:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xDEB,%r15
	je L_493057
	cmpq $0xDEC,%r15
	je L_493053
L_277496:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_493053:
L_277593:
	movq 0x8(%r14),%r15
	movq %r15,0x10(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x18(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_493056
L_277595:
	cmpl $0x0,%r13d
	jl L_493055
L_277596:
	movl $0x0,0x1C(%rbp)
loop_3291:
	movl 0x18(%rbp),%r15d
	cmpl %r15d,0x1C(%rbp)
	jl L_493054
L_277597:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_493054:
L_277598:
	movslq 0x1C(%rbp),%r15
	movq 0x10(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x28(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_277599+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp checkSyntax_0
.p2align 0x4
L_493055:
L_277513:
	movq (globalObjptr+0x4F8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_493056:
L_277501:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_493057:
L_277497:
	movq 0x0(%r14),%r15
	movq %r15,0x28(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xDED,%r14
	je L_493080
L_277582:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x38(%rbp)
	cmpq %r15,%rdx
	movq %r14,0x30(%rbp)
	jne L_277501
L_277584:
	testq %rdx,%rdx
	jz L_493078
L_277585:
	cmpq $0x7FFFFFFF,%rdx
	ja L_493077
L_277586:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14D7,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_277587+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_277587
.p2align 0x4
.long 0x634
L_277587:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq %rax,%r15
L_277588:
	xorq %r14,%r14
.p2align 0x4,,0x7
loop_3290:
	cmpq 0x38(%rbp),%r14
	jnl L_493058
L_277590:
	movl %r14d,%r13d
	movq %r14,%r11
	movq %r14,%r10
	movslq %r13d,%r9
	movq 0x30(%rbp),%r8
	movq 0x0(%r8,%r9,8),%rsp
	movl %r13d,%r9d
	shlq $0x1,%r9
	orq $0x1,%r9
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r13,1)
	salq $0x4,%r11
	movq %rsp,0x0(%r15,%r11,1)
	movq %r15,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%r8,%r13,1)
	salq $0x4,%r10
	movq %r9,0x8(%r15,%r10,1)
	incq %r14
	jmp loop_3290
.p2align 0x4
L_493058:
L_277589:
	movq $0xB1F,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x30(%rbp)
L_277499:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x30(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq %r14,0x40(%rbp)
	movl %r14d,%r15d
	movl %r15d,0x48(%rbp)
	movslq %r15d,%r13
	cmpq %r13,%r14
	jne L_277501
L_277502:
	cmpl $0x0,%r15d
	jl L_277513
L_277503:
	movl $0x0,0x4C(%rbp)
.p2align 0x4,,0x7
loop_3286:
	movl 0x4C(%rbp),%r15d
	cmpl 0x48(%rbp),%r15d
	jnl L_493067
L_277522:
	movslq %r15d,%r14
	salq $0x4,%r14
	movq 0x30(%rbp),%r15
	movq 0x8(%r15,%r14,1),%r13
	movq %r13,0x50(%rbp)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
loop_3289:
	cmpl %ecx,0x4C(%rbp)
	je L_493066
L_277523:
	movslq %ecx,%r15
	cmpq 0x40(%rbp),%r15
	jnb L_493065
L_277525:
	salq $0x4,%r15
	movq 0x30(%rbp),%r14
	movq 0x8(%r14,%r15,1),%r13
	movq 0x50(%rbp),%r15
	movq %r15,%r14
	andq $0x1,%r14
	cmpq $0x1,%r14
	je L_493062
L_277526:
L_277527:
	movq %r13,%r14
	andq $0x3,%r14
	jnz L_277528
L_277531:
	movq 0x8(%r13),%r14
	cmpq %r14,0x8(%r15)
	je L_493060
L_277528:
	incl %ecx
	jo L_493059
L_277530:
	jmp loop_3289
.p2align 0x4
L_493059:
L_277529:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_493060:
L_277534:
	movq (globalObjptr+0x1728)(%rip),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_277535+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_493062:
L_277576:
	shrq $0x1,%r15
	movl %r15d,%r14d
	movq %r13,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	jne L_277528
L_277577:
	shrq $0x1,%r13
	movl %r13d,%r15d
	cmpl %r14d,%r15d
	je L_277534
	jmp L_277528
.p2align 0x4
L_493065:
L_277524:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_493066:
.p2align 0x4,,0x7
L_277561:
	incl 0x4C(%rbp)
	jmp loop_3286
.p2align 0x4
L_493067:
L_277504:
	movq 0x28(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xDED,%r13
	je L_493071
L_277514:
	movq 0x0(%r14),%r13
	movq %r13,0x10(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r14
	movl %r14d,%r11d
	movl %r11d,0x18(%rbp)
	movslq %r11d,%r10
	cmpq %r10,%r14
	jne L_277501
L_277516:
	cmpl $0x0,%r11d
	jl L_277513
L_277517:
	movl $0x0,0x1C(%rbp)
loop_3288:
	movl 0x18(%rbp),%r15d
	cmpl %r15d,0x1C(%rbp)
	jl L_493068
L_277518:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_493068:
L_277519:
	movslq 0x1C(%rbp),%r15
	movq 0x10(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x28(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_277520+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp checkSyntax_0
.p2align 0x4
L_493071:
L_277505:
	movq 0x0(%r14),%r13
	movq %r13,0x10(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r14
	movl %r14d,%r11d
	movl %r11d,0x18(%rbp)
	movslq %r11d,%r10
	cmpq %r14,%r10
	jne L_277501
L_277507:
	cmpl $0x0,%r11d
	jl L_277513
L_277508:
	movl $0x0,0x1C(%rbp)
loop_3287:
	movl 0x18(%rbp),%r15d
	cmpl %r15d,0x1C(%rbp)
	jl L_493072
L_277509:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_493072:
L_277510:
	movslq 0x1C(%rbp),%r15
	salq $0x4,%r15
	movq 0x10(%rbp),%r14
	movq 0x0(%r14,%r15,1),%r13
	movq %r13,0x28(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_277511+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp checkSyntax_0
.p2align 0x4
L_493077:
L_277591:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_493078:
L_277592:
	movq (globalObjptr+0x16D8)(%rip),%r15
	jmp L_277588
.p2align 0x4
L_493080:
L_277498:
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	jmp L_277499
.p2align 0x4
.long 0x4F4
L_277599:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	incl 0x1C(%rbp)
	jmp loop_3291
.p2align 0x4
.long 0x3491
L_277535:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_277536+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4F4
L_277520:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	incl 0x1C(%rbp)
	jmp loop_3288
.p2align 0x4
.long 0x4F4
L_277511:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	incl 0x1C(%rbp)
	jmp loop_3287
.p2align 0x4
.long 0x3491
L_277536:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r14
	movq %r14,0x58(%rbp)
	movq 0x50(%rbp),%r14
	movq %r14,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	je L_493082
L_277537:
	movq 0x10(%r14),%r15
L_277538:
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_277539+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_493082:
L_277573:
	shrq $0x1,%r14
	movl %r14d,%r15d
	incl %r15d
	jo L_277529
L_277574:
	movl %r15d,0x68(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_277575+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0x21D2
L_277539:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_277540
L_277571:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_277572+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_277572
.p2align 0x4
.long 0x12BE
L_277572:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_277540:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x60(%rbp)
	addq $0x18,%r12
	movq 0x58(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_277541:
	addl 0x0(%r15),%ecx
	movl %ecx,0x50(%rbp)
	jo L_277529
L_277542:
	cmpq $0x1,%r14
	je L_493084
L_277543:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_277541
.p2align 0x4
L_493084:
L_277544:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_277545
L_277569:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_277570+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_277570
.p2align 0x4
.long 0x2DE2
L_277570:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_277545:
	movl 0x50(%rbp),%ecx
	testl %ecx,%ecx
	jz L_493085
L_277546:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
L_277547:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x50(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0xE040)(%rip),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_277548+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_493085:
L_277568:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_277547
.p2align 0x4
.long 0x21D2
L_277575:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x50(%rbp)
	jmp L_277538
.p2align 0x4
.long 0x3491
L_277548:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_277549+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_15
.p2align 0x4
.long 0x12B4
L_277549:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_277550
L_277566:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_277567+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_277567
.p2align 0x4
.long 0x12BA
L_277567:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_277550:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x60(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x68(%rbp)
	addq $0x18,%r12
	movq 0x58(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_277551:
	addl 0x0(%r15),%ecx
	movl %ecx,0x58(%rbp)
	jo L_277529
L_277552:
	cmpq $0x1,%r14
	je L_493089
L_277553:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_277551
.p2align 0x4
L_493089:
L_277554:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_277555
L_277564:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_277565+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_277565
.p2align 0x4
.long 0x44FB
L_277565:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_277555:
	movl 0x58(%rbp),%ecx
	testl %ecx,%ecx
	jz L_493091
L_277556:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
L_277557:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_277529
L_277558:
	movl %r13d,0x0(%r15)
	movq %r14,0x58(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x70(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x58,%rbp
	leaq (L_277559+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_493091:
L_277563:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_277557
.p2align 0x4
.long 0x44FA
L_277559:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq (globalObjptr+0x1608)(%rip),%r15
	movq (globalObjptr+0x1610)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	jne L_277561
L_277562:
	movq (globalObjptr+0x1618)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl checkSyntax_1
.hidden checkSyntax_1
checkSyntax_1:
L_277603:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_277604
L_277826:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_277827+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_277827
.p2align 0x4
.long 0x45F
L_277827:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_277604:
	movq 0x8(%rbp),%r15
	movq 0x20(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x30(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x38(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movl %r15d,%r14d
	movl %r14d,0x40(%rbp)
	movslq %r14d,%r11
	movq %r11,0x48(%rbp)
	cmpq %r15,%r11
	jne L_277606
L_277607:
	cmpl $0x0,%r14d
	jl L_277715
L_277608:
	movl $0x0,0x8(%rbp)
.p2align 0x4,,0x7
loop_3292:
	movl 0x8(%rbp),%r15d
	cmpl 0x40(%rbp),%r15d
	jnl L_493099
L_277813:
	movslq %r15d,%r14
	movq 0x38(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x50(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r15
	movl %r15d,%r14d
	movl %r14d,0xC(%rbp)
	movslq %r14d,%r13
	cmpq %r13,%r15
	jne L_493098
L_277815:
	cmpl $0x0,%r14d
	jl L_493097
L_277816:
	movl $0x0,0x44(%rbp)
.p2align 0x4,,0x7
loop_3306:
	movl 0xC(%rbp),%r15d
	cmpl %r15d,0x44(%rbp)
	jl L_493096
L_277817:
	incl 0x8(%rbp)
	jmp loop_3292
.p2align 0x4
L_493096:
L_277818:
	movslq 0x44(%rbp),%r15
	movq 0x50(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x58(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x68(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_277819+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2020
.p2align 0x4
L_493097:
L_277715:
	movq (globalObjptr+0x4F8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_493098:
L_277606:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_493099:
L_277609:
	movq 0x48(%rbp),%rdx
	cmpq $0x0,%rdx
	sete %r15b
	movzbl %r15b,%r15d
	movl %r15d,0x8(%rbp)
	je L_493154
L_277610:
	cmpq $0x7FFFFFFF,%rdx
	ja L_277722
L_277611:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14F5,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_277612+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_277612
.p2align 0x4
.long 0x44FC
L_277612:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq %rax,0x10(%rbp)
L_277613:
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3293:
	cmpq 0x48(%rbp),%r15
	jnl L_493100
L_277810:
	movl %r15d,%r14d
	movslq %r14d,%r13
	movq 0x38(%rbp),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq 0x10(%r11),%r10
	movq 0x10(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r10,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_3293
.p2align 0x4
L_493100:
L_277614:
	movq 0x10(%rbp),%r15
	movq $0x1867,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq %r14,0x18(%rbp)
	movl %r14d,%r15d
	movslq %r15d,%r13
	cmpq %r14,%r13
	jne L_277606
L_277616:
	testl %r15d,%r15d
	jz L_493151
L_277617:
	cmpl $0x0,%r15d
	movl %r15d,(localWord32+0x0)(%rip)
	jl L_277715
L_277618:
	xorl %ecx,%ecx
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_3294:
	cmpl (localWord32+0x0)(%rip),%ebx
	jnl L_493103
L_277804:
	movslq %ebx,%r15
	movq 0x10(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r11
	movl %r11d,%r10d
	movslq %r10d,%r9
	cmpq %r11,%r9
	jne L_277606
L_277806:
	addl %ecx,%r10d
	jo L_493101
L_277807:
	incl %ebx
	movl %r10d,%ecx
	jmp loop_3294
.p2align 0x4
L_493101:
L_277673:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_493103:
L_277619:
	cmpq $0x0,0x18(%rbp)
	jna L_277621
L_277622:
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movslq %ecx,%rdx
	movq %rdx,0x50(%rbp)
	testq %rdx,%rdx
	jz L_493148
L_277623:
	cmpq $0x7FFFFFFF,%rdx
	ja L_277722
L_277624:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14F7,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_277625+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_277625
.p2align 0x4
.long 0x44FD
L_277625:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq %rax,%r15
L_277626:
	xorl %ecx,%ecx
	movq 0x40(%rbp),%r13
	xorl %ebx,%ebx
	xorq %r14,%r14
.p2align 0x4,,0x7
loop_3295:
	cmpq 0x50(%rbp),%r14
	jnl L_493109
.p2align 0x4,,0x7
loop_3305:
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r11
	movl %r11d,%r10d
	movslq %r10d,%r9
	cmpq %r11,%r9
	jne L_277606
L_277794:
	cmpl %r10d,%ecx
	jl L_493106
L_277795:
	incl %ebx
	jo L_277673
L_277796:
	movslq %ebx,%r11
	cmpq 0x18(%rbp),%r11
	jnb L_493104
L_277798:
	movq 0x10(%rbp),%r10
	movq 0x0(%r10,%r11,8),%r13
	xorl %ecx,%ecx
	jmp loop_3305
.p2align 0x4
L_493104:
L_277621:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_493106:
L_277799:
	movslq %ecx,%r10
	cmpq %r11,%r10
	jnb L_277621
L_277801:
	movq %r14,%r11
	movq %r14,%r9
	incl %ecx
	movq 0x0(%r13,%r10,8),%r8
	movq 0x0(%r8),%rsp
	movq 0x8(%r8),%rsi
	movq %r15,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r10,1)
	salq $0x4,%r11
	movq %rsp,0x0(%r15,%r11,1)
	movq %r15,%r11
	shrq $0x8,%r11
	movb $0x1,0x0(%r8,%r11,1)
	salq $0x4,%r9
	movq %rsi,0x8(%r15,%r9,1)
	incq %r14
	jmp loop_3295
.p2align 0x4
L_493109:
L_277627:
	movq $0x1869,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x10(%rbp)
L_277628:
	movq 0x10(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq %r14,0x18(%rbp)
	movl %r14d,%r15d
	movl %r15d,0xC(%rbp)
	movslq %r15d,%r13
	cmpq %r14,%r13
	jne L_277606
L_277630:
	cmpl $0x0,%r15d
	jl L_277715
L_277631:
	movl $0x0,0x40(%rbp)
.p2align 0x4,,0x7
loop_3296:
	movl 0x40(%rbp),%r14d
	cmpl 0xC(%rbp),%r14d
	jnl L_493114
L_277747:
	movslq %r14d,%r15
	salq $0x4,%r15
	movq 0x10(%rbp),%r14
	movq 0x8(%r14,%r15,1),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
loop_3304:
	cmpl %ecx,0x40(%rbp)
	je L_493113
L_277748:
	movslq %ecx,%r14
	cmpq 0x18(%rbp),%r14
	jnb L_277621
L_277750:
	salq $0x4,%r14
	movq 0x8(%r15),%r13
	movq %r13,0x50(%rbp)
	movq 0x10(%rbp),%r11
	movq 0x8(%r11,%r14,1),%r10
	movq 0x8(%r10),%r9
	movq 0x8(%r13),%r8
	cmpq %r8,0x8(%r9)
	je L_493111
L_277751:
	incl %ecx
	jo L_277673
L_277752:
	jmp loop_3304
.p2align 0x4
L_493111:
L_277753:
	movq 0x0(%r15),%r14
	movq %r14,0x58(%rbp)
	movq (globalObjptr+0x1788)(%rip),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_277754+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_493113:
.p2align 0x4,,0x7
L_277778:
	incl 0x40(%rbp)
	jmp loop_3296
.p2align 0x4
L_493114:
L_277632:
	movl 0x8(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_493144
L_277633:
	movq 0x48(%rbp),%rdx
	cmpq $0x7FFFFFFF,%rdx
	ja L_277722
L_277634:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14F9,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_277635+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_277635
.p2align 0x4
.long 0x44FC
L_277635:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq %rax,0x8(%rbp)
L_277636:
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3297:
	cmpq 0x48(%rbp),%r15
	jnl L_493115
L_277744:
	movl %r15d,%r14d
	movq %r15,%r13
	movq %r15,%r11
	movslq %r14d,%r10
	movq 0x38(%rbp),%r14
	movq 0x0(%r14,%r10,8),%r9
	movq 0x8(%r9),%r8
	movq 0x0(%r8),%rsp
	movq 0x8(%r8),%rsi
	movq 0x8(%rbp),%r14
	movq %r14,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	salq $0x4,%r13
	movq %rsp,0x0(%r14,%r13,1)
	movq %r14,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%r9,%r13,1)
	salq $0x4,%r11
	movq %rsi,0x8(%r14,%r11,1)
	incq %r15
	jmp loop_3297
.p2align 0x4
L_493115:
L_277637:
	movq 0x8(%rbp),%r15
	movq $0xAED,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x30(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x18(%rbp)
	cmpq %rdx,%r15
	movq %r14,0x10(%rbp)
	jne L_277606
L_277639:
	testq %rdx,%rdx
	jz L_493141
L_277640:
	cmpq $0x7FFFFFFF,%rdx
	ja L_277722
L_277641:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14F9,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_277642+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_277642
.p2align 0x4
.long 0xFCF
L_277642:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq %rax,0x30(%rbp)
L_277643:
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3298:
	cmpq 0x18(%rbp),%r15
	jnl L_493116
L_277741:
	movl %r15d,%r14d
	movq %r15,%r13
	movq %r15,%r11
	movslq %r14d,%r10
	movq 0x10(%rbp),%r14
	movq 0x0(%r14,%r10,8),%r9
	movq 0x8(%r9),%r8
	movq 0x0(%r8),%rsp
	movq 0x8(%r8),%rsi
	movq 0x30(%rbp),%r14
	movq %r14,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	salq $0x4,%r13
	movq %rsp,0x0(%r14,%r13,1)
	movq %r14,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%r9,%r13,1)
	salq $0x4,%r11
	movq %rsi,0x8(%r14,%r11,1)
	incq %r15
	jmp loop_3298
.p2align 0x4
L_493116:
L_277644:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_277645
L_277739:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_277740+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_277740
.p2align 0x4
.long 0x575
L_277740:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_277645:
	movq 0x30(%rbp),%r15
	movq $0xAED,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x2853,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq 0x8(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x18(%rbp)
.p2align 0x4,,0x7
L_277646:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_493138
.p2align 0x4,,0x7
L_277647:
	movq 0x10(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq $0xF55,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x18,%r12
	movq %r15,0x8(%r13)
	movq $0x2987,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r13,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_493117
L_277648:
	movq %r15,0x18(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x10(%rbp)
	jmp L_277646
.p2align 0x4
L_493117:
L_277649:
	movq %r13,0x10(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq $0x1,0x18(%rbp)
.p2align 0x4,,0x7
L_277650:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_493137
.p2align 0x4,,0x7
L_277651:
	movq $0x2987,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_493118
L_277652:
	movq %r15,0x18(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x10(%rbp)
	jmp L_277650
.p2align 0x4
L_493118:
L_277653:
	movq 0x18(%rbp),%r13
	cmpq $0x1,%r13
	je L_493132
L_277654:
	movq 0x10(%rbp),%r11
	xorq %r15,%r15
	xchgq %r11,%r14
.p2align 0x4,,0x7
L_277655:
	addq 0x0(%r14),%r15
	movq %r15,0x8(%rbp)
	cmpq $0x1,%r13
	je L_493119
L_277656:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	jmp L_277655
.p2align 0x4
L_493119:
L_277657:
	testq %r15,%r15
	jz L_493131
L_277658:
	cmpq $0x7FFFFFFF,%r15
	ja L_493130
L_277659:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14F9,%rcx
	movq %r15,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_277660+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_277660
.p2align 0x4
.long 0xBEC
L_277660:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq %rax,%r15
L_277661:
	movq 0x18(%rbp),%r10
	movq 0x10(%rbp),%r11
	xorq %r13,%r13
	xorq %r14,%r14
.p2align 0x4,,0x7
loop_3299:
	cmpq 0x8(%rbp),%r14
	jnl L_493122
.p2align 0x4,,0x7
loop_3302:
	cmpq 0x0(%r11),%r13
	jl L_493121
L_277717:
	cmpq $0x1,%r10
	je L_493120
L_277718:
	movq 0x0(%r10),%r9
	movq 0x8(%r10),%r10
	xorq %r13,%r13
	movq %r9,%r11
	jmp loop_3302
.p2align 0x4
L_493120:
L_277719:
	movq (globalObjptr+0x5B8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_493121:
L_277720:
	movq %r13,%r9
	movq %r13,%r8
	movq %r14,%rsp
	movq %r14,%rsi
	salq $0x4,%r9
	movq 0x8(%r11),%rdi
	movq 0x0(%rdi,%r9,1),%rdx
	salq $0x4,%r8
	movq 0x8(%rdi,%r8,1),%r9
	incq %r13
	movq %r15,%r8
	shrq $0x8,%r8
	movq (gcState+0x3C8)(%rip),%rdi
	movb $0x1,0x0(%rdi,%r8,1)
	salq $0x4,%rsp
	movq %rsp,%rax
	movq %rdx,0x0(%r15,%rax,1)
	movq %r15,%r8
	shrq $0x8,%r8
	movb $0x1,0x0(%rdi,%r8,1)
	salq $0x4,%rsi
	movq %r9,0x8(%r15,%rsi,1)
	incq %r14
	jmp loop_3299
.p2align 0x4
L_493122:
L_277662:
	movq $0xAED,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x8(%rbp)
L_277663:
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq %r14,0x10(%rbp)
	movl %r14d,%r15d
	movl %r15d,0x18(%rbp)
	movslq %r15d,%r13
	cmpq %r13,%r14
	jne L_277606
L_277665:
	cmpl $0x0,%r15d
	jl L_277715
L_277666:
	movl $0x0,0x1C(%rbp)
.p2align 0x4,,0x7
loop_3300:
	movl 0x1C(%rbp),%r15d
	cmpl 0x18(%rbp),%r15d
	jnl L_493127
L_277668:
	movslq %r15d,%r14
	movq %r14,%r15
	salq $0x4,%r15
	movq 0x8(%rbp),%r13
	movq 0x0(%r13,%r15,1),%r11
	movq %r11,0x30(%rbp)
	salq $0x4,%r14
	movq 0x8(%r13,%r14,1),%r15
	movq %r15,0x38(%rbp)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
loop_3301:
	cmpl 0x1C(%rbp),%ecx
	je L_493126
L_277669:
	movslq %ecx,%r15
	cmpq 0x10(%rbp),%r15
	jnb L_277621
L_277671:
	salq $0x4,%r15
	movq 0x38(%rbp),%r14
	movq 0x8(%rbp),%r13
	movq 0x8(%r13,%r15,1),%r11
	movq 0x8(%r11),%r10
	cmpq %r10,0x8(%r14)
	je L_493124
L_277672:
	incl %ecx
	jo L_277673
L_277674:
	jmp loop_3301
.p2align 0x4
L_493124:
L_277675:
	movq (globalObjptr+0x1740)(%rip),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_277676+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_493126:
.p2align 0x4,,0x7
L_277700:
	incl 0x1C(%rbp)
	jmp loop_3300
.p2align 0x4
L_493127:
L_277667:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_493130:
L_277722:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_493131:
L_277723:
	movq (globalObjptr+0x1770)(%rip),%r14
	xchgq %r14,%r15
	jmp L_277661
.p2align 0x4
L_493132:
L_277724:
	movq 0x10(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r13,0x18(%rbp)
	cmpq %r13,0xFFFFFFFFFFFFFFF0(%r14)
	movq %r14,0x8(%rbp)
	je L_277663
L_277725:
	testq %r13,%r13
	jz L_493135
L_277726:
	cmpq $0x7FFFFFFF,%r13
	ja L_277722
L_277727:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14F9,%rcx
	movq %r13,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_277728+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_277728
.p2align 0x4
.long 0x579
L_277728:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq %rax,%r15
L_277729:
	xorq %r14,%r14
.p2align 0x4,,0x7
loop_3303:
	cmpq 0x18(%rbp),%r14
	jnl L_493133
L_277731:
	movq %r14,%r13
	movq %r14,%r11
	movq %r14,%r10
	movq %r14,%r9
	salq $0x4,%r13
	movq 0x8(%rbp),%r8
	movq 0x0(%r8,%r13,1),%rsp
	salq $0x4,%r11
	movq 0x8(%r8,%r11,1),%r13
	movq %r15,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r11,1)
	salq $0x4,%r10
	movq %rsp,0x0(%r15,%r10,1)
	movq %r15,%r11
	shrq $0x8,%r11
	movb $0x1,0x0(%r8,%r11,1)
	salq $0x4,%r9
	movq %r13,0x8(%r15,%r9,1)
	incq %r14
	jmp loop_3303
.p2align 0x4
L_493133:
L_277730:
	movq $0xAED,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x8(%rbp)
	jmp L_277663
.p2align 0x4
L_493135:
L_277733:
	movq (globalObjptr+0x1778)(%rip),%r15
	jmp L_277729
.p2align 0x4
L_493137:
L_277735:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_277736+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_277736
.p2align 0x4
.long 0x4DE
L_277736:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_277651
.p2align 0x4
L_493138:
L_277737:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_277738+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_277738
.p2align 0x4
.long 0x4DE
L_277738:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_277647
.p2align 0x4
L_493141:
L_277743:
	movq (globalObjptr+0x1768)(%rip),%r15
	movq %r15,0x30(%rbp)
	jmp L_277643
.p2align 0x4
L_493144:
L_277746:
	movq (globalObjptr+0x1760)(%rip),%r15
	movq %r15,0x8(%rbp)
	jmp L_277636
.p2align 0x4
L_493148:
L_277803:
	movq (globalObjptr+0x1750)(%rip),%r15
	jmp L_277626
.p2align 0x4
L_493151:
L_277809:
	movq (globalObjptr+0x1758)(%rip),%r15
	movq $0x1869,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x10(%rbp)
	jmp L_277628
.p2align 0x4
L_493154:
L_277812:
	movq (globalObjptr+0x1748)(%rip),%r15
	movq %r15,0x10(%rbp)
	jmp L_277613
.p2align 0x4
.long 0x4507
L_277819:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x58(%rbp),%r15
	cmpq $0x1,%r15
	je L_493158
L_277820:
	movq %r15,0x60(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_277821+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp checkSyntax_0
.p2align 0x4
L_493158:
L_277822:
	incl 0x44(%rbp)
	jmp loop_3306
.p2align 0x4
.long 0x44FF
L_277754:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_277755+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x55F
L_277676:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_277677+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4508
L_277821:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	jmp L_277822
.p2align 0x4
.long 0x44FF
L_277755:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x50(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_277756+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x55F
L_277677:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x38(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_277678+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4500
L_277756:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_277757
L_277788:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_277789+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_277789
.p2align 0x4
.long 0x4506
L_277789:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_277757:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x68(%rbp)
	addq $0x18,%r12
	movq 0x60(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_277758:
	addl 0x0(%r15),%ecx
	movl %ecx,0x44(%rbp)
	jo L_277673
L_277759:
	cmpq $0x1,%r14
	je L_493159
L_277760:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_277758
.p2align 0x4
L_493159:
L_277761:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_277762
L_277786:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_277787+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_277787
.p2align 0x4
.long 0x4505
L_277787:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_277762:
	movl 0x44(%rbp),%ecx
	testl %ecx,%ecx
	jz L_493160
L_277763:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
L_277764:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x50(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0xE040)(%rip),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_277765+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_493160:
L_277785:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_277764
.p2align 0x4
.long 0x570
L_277678:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_277679
L_277711:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_277712+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_277712
.p2align 0x4
.long 0xF84
L_277712:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_277679:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x48(%rbp)
	addq $0x18,%r12
	movq 0x40(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_277680:
	addl 0x0(%r15),%ecx
	movl %ecx,0x38(%rbp)
	jo L_277673
L_277681:
	cmpq $0x1,%r14
	je L_493164
L_277682:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_277680
.p2align 0x4
L_493164:
L_277683:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_277684
L_277709:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_277710+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_277710
.p2align 0x4
.long 0x15F8
L_277710:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_277684:
	movl 0x38(%rbp),%ecx
	testl %ecx,%ecx
	jz L_493165
L_277685:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
L_277686:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x38(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0xE040)(%rip),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_277687+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_493165:
L_277708:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_277686
.p2align 0x4
.long 0x44FF
L_277765:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq (globalObjptr+0xE320)(%rip),%r15
	movq %r15,0x78(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x70,%rbp
	leaq (L_277766+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_29
.p2align 0x4
.long 0x55F
L_277687:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq (globalObjptr+0xE320)(%rip),%r15
	movq %r15,0x58(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x50,%rbp
	leaq (L_277688+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_29
.p2align 0x4
.long 0x4501
L_277766:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	movl 0x78(%rbp),%r15d
	movl %r15d,0x44(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_277767
L_277783:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_277784+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_277784
.p2align 0x4
.long 0x4504
L_277784:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_277767:
	movq $0xC3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x44(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x70(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x60(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_277768:
	addl 0x0(%r15),%ecx
	movl %ecx,0x44(%rbp)
	jo L_277673
L_277769:
	cmpq $0x1,%r14
	je L_493169
L_277770:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_277768
.p2align 0x4
L_493169:
L_277771:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_277772
L_277781:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_277782+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_277782
.p2align 0x4
.long 0x4503
L_277782:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_277772:
	movl 0x44(%rbp),%ecx
	testl %ecx,%ecx
	jz L_493171
L_277773:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
L_277774:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_277673
L_277775:
	movl %r13d,0x0(%r15)
	movq 0x50(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq %r14,0x58(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x70(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x58,%rbp
	leaq (L_277776+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_493171:
L_277780:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_277774
.p2align 0x4
.long 0x528
L_277688:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	movl 0x58(%rbp),%r15d
	movl %r15d,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_277689
L_277706:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_277707+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_277707
.p2align 0x4
.long 0x5FC
L_277707:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_277689:
	movq $0xC3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x50(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x58(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x40(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_277690:
	addl 0x0(%r15),%ecx
	movl %ecx,0x40(%rbp)
	jo L_277673
L_277691:
	cmpq $0x1,%r14
	je L_493175
L_277692:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_277690
.p2align 0x4
L_493175:
L_277693:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_277694
L_277704:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_277705+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_277705
.p2align 0x4
.long 0x44FE
L_277705:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_277694:
	movl 0x40(%rbp),%ecx
	testl %ecx,%ecx
	jz L_493177
L_277695:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
L_277696:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_277673
L_277697:
	movl %r13d,0x0(%r15)
	movq 0x38(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq %r14,0x38(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x50(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x38,%rbp
	leaq (L_277698+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_493177:
L_277703:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_277696
.p2align 0x4
.long 0x4502
L_277776:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq (globalObjptr+0x1608)(%rip),%r15
	movq (globalObjptr+0x1610)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	jne L_277778
L_277702:
	movq (globalObjptr+0x1618)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x557
L_277698:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq (globalObjptr+0x1610)(%rip),%r15
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_277702
	jmp L_277700
.text
.p2align 0x4
.globl checkSyntaxStrexp_0
.hidden checkSyntaxStrexp_0
checkSyntaxStrexp_0:
loopS_31:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_277828
L_277843:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_277844+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_277844
.p2align 0x4
.long 0x45F
L_277844:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_277828:
	movq 0x0(%rbp),%r15
.p2align 0x4,,0x7
loop_3307:
	movq 0x8(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x10(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xE27,%r15
	je L_493186
	cmpq $0xE28,%r15
	je L_493185
	cmpq $0xE29,%r15
	je L_493184
	cmpq $0xE2A,%r15
	je L_493183
L_277829:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_493183:
L_277842:
	movq 0x18(%rbp),%r14
	movq 0x8(%r14),%r15
	jmp loop_3307
.p2align 0x4
L_493184:
L_277836:
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_277837+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp checkSyntaxStrexp_0
.p2align 0x4
L_493185:
L_277834:
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_277835+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp checkSyntaxStrdec_0
.p2align 0x4
L_493186:
L_277830:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_277831
L_277832:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_277833+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_277833
.p2align 0x4
.long 0x522
L_277833:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_277831:
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq $0x11B1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	movq %r15,0x0(%rbp)
	addq $0x18,%r12
	jmp checkSyntaxStrdec_0
.p2align 0x4
.long 0x2
L_277837:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je L_493190
L_277838:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xE2B,%r14
	je L_493189
L_277840:
	movq 0x0(%r15),%r14
	movq %r14,0x0(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp checkSyntaxSigexp_0
.p2align 0x4
L_493189:
L_277839:
	movq 0x0(%r15),%r14
	movq %r14,0x0(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp checkSyntaxSigexp_0
.p2align 0x4
L_493190:
L_277841:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4E5
L_277835:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x10(%rbp),%r15
	jmp loop_3307
.text
.p2align 0x4
.globl checkSyntaxDec_0
.hidden checkSyntaxDec_0
checkSyntaxDec_0:
loopS_32:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_277845
L_278029:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_278030+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_278030
.p2align 0x4
.long 0x45F
L_278030:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_277845:
	movq 0x0(%rbp),%r15
	movq %r15,0x10(%rbp)
loop_3308:
	movq 0x8(%rbp),%r15
	movq 0x40(%r15),%r14
	movq 0x38(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x30(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x28(%r15),%r13
	movq 0x20(%r15),%r11
	movq 0x18(%r15),%r10
	movq %r10,0x28(%rbp)
	movq 0x0(%r15),%r10
	movq %r10,0x30(%rbp)
	movq 0x10(%rbp),%r15
	movq 0x8(%r15),%r10
	movq 0xFFFFFFFFFFFFFFF8(%r10),%rax
	shrq $0x1,%rax
	subq $0xE0E,%rax
	cmpq $0x9,%rax
	ja L_493191
	leaq jumpTable_763(%rip),%rbx
	jmp *(%rbx,%rax,8)
.data
.p2align 0x4
jumpTable_763:
.quad L_493230,L_493226,L_493225,L_493224,L_493223,L_493216,L_493215,L_493204,L_493202,L_493201
.text
.p2align 0x4
L_493191:
L_277846:
	movq 0x10(%r10),%r15
	movq %r15,0x10(%rbp)
	movq 0x0(%r10),%r15
	movq %r15,0x18(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x28(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_277848
L_277849:
	cmpl $0x0,%r13d
	jl L_277860
L_277850:
	movl $0x0,0x2C(%rbp)
loop_3309:
	movl 0x28(%rbp),%r15d
	cmpl %r15d,0x2C(%rbp)
	jl L_493195
L_277851:
	movq 0x10(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x18(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_493194
L_277853:
	cmpl $0x0,%r13d
	jl L_493193
L_277854:
	movl $0x0,0x1C(%rbp)
loop_3310:
	movl 0x18(%rbp),%r15d
	cmpl %r15d,0x1C(%rbp)
	jl L_493192
L_277855:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_493192:
L_277856:
	movslq 0x1C(%rbp),%r15
	movq %r15,%r14
	salq $0x4,%r14
	movq 0x10(%rbp),%r13
	movq 0x0(%r13,%r14,1),%r11
	movq %r11,0x28(%rbp)
	salq $0x4,%r15
	movq 0x8(%r13,%r15,1),%r14
	movq %r14,0x38(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_277857+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp checkSyntaxExp_0
.p2align 0x4
L_493193:
L_277860:
	movq (globalObjptr+0x4F8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_493194:
L_277848:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_493195:
L_277861:
	movslq 0x2C(%rbp),%r15
	movq %r15,%r14
	salq $0x4,%r14
	movq 0x18(%rbp),%r13
	movq 0x0(%r13,%r14,1),%r11
	movq %r11,0x30(%rbp)
	salq $0x4,%r15
	movq 0x8(%r13,%r15,1),%r14
	movq 0x8(%r14),%r11
	movq %r11,0x38(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r15
	movl %r15d,%r14d
	movl %r14d,0x40(%rbp)
	movslq %r14d,%r13
	cmpq %r13,%r15
	jne L_277848
L_277863:
	cmpl $0x0,%r14d
	jl L_277860
L_277864:
	movl $0x0,0x44(%rbp)
loop_3311:
	movl 0x40(%rbp),%r15d
	cmpl %r15d,0x44(%rbp)
	jl L_493196
L_277865:
	movq 0x30(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_277866+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp checkSyntax_2
.p2align 0x4
L_493196:
L_277867:
	movslq 0x44(%rbp),%r15
	movq %r15,%r14
	salq $0x4,%r14
	movq 0x38(%rbp),%r13
	movq 0x0(%r13,%r14,1),%r11
	movq %r11,0x48(%rbp)
	salq $0x4,%r15
	movq 0x8(%r13,%r15,1),%r14
	movq %r14,0x58(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_277868+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp checkSyntax_2
.p2align 0x4
L_493201:
L_278027:
	movq %r14,0x28(%rbp)
	movq 0x8(%r10),%r15
	movq %r15,0x20(%rbp)
	movq 0x0(%r10),%r15
	movq %r15,0x10(%rbp)
	addq $0x20,%rbp
	leaq (L_278028+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp checkSyntax_1
.p2align 0x4
L_493202:
L_278024:
	movq 0x0(%r10),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x129D,%r14
	je L_493203
L_278026:
	movq %r11,0x8(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x0(%rbp)
	jmp checkSyntax_1
.p2align 0x4
L_493203:
L_278025:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_493204:
L_277966:
	movq 0x0(%r10),%r15
	movq %r15,0x20(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq %r14,0x38(%rbp)
	movl %r14d,%r15d
	movl %r15d,0x40(%rbp)
	movslq %r15d,%r13
	cmpq %r14,%r13
	jne L_277848
L_277968:
	cmpl $0x0,%r15d
	jl L_277860
L_277969:
	movl $0x0,0x44(%rbp)
.p2align 0x4,,0x7
loop_3319:
	movl 0x44(%rbp),%r15d
	cmpl 0x40(%rbp),%r15d
	jnl L_493207
L_278016:
	movslq %r15d,%r14
	movq 0x20(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	movq 0x0(%r13),%r11
	movq 0x8(%r11),%r10
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r15
	shrq $0x1,%r15
	cmpq $0x1297,%r15
	jne L_278020
L_278017:
	movq 0x0(%r10),%r15
	cmpq $0x1,%r15
	jne L_493205
.p2align 0x4,,0x7
L_278020:
	incl 0x44(%rbp)
	jmp loop_3319
.p2align 0x4
L_493205:
L_278018:
	movq %r15,0x50(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_278019+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp checkSyntax_0
.p2align 0x4
L_493207:
L_277970:
	movl $0x0,0x28(%rbp)
.p2align 0x4,,0x7
loop_3320:
	movl 0x28(%rbp),%r14d
	cmpl 0x40(%rbp),%r14d
	jnl L_493212
L_277972:
	movslq %r14d,%r15
	movq 0x20(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
loop_3321:
	cmpl 0x28(%rbp),%ecx
	je L_493211
L_277973:
	movslq %ecx,%r14
	cmpq 0x38(%rbp),%r14
	jnb L_493210
L_277975:
	movq 0x8(%r15),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x48(%rbp)
	movq 0x20(%rbp),%r10
	movq 0x0(%r10,%r14,8),%r9
	movq 0x8(%r9),%r8
	movq 0x8(%r8),%rsp
	movq 0x8(%r11),%rsi
	cmpq %rsi,0x8(%rsp)
	je L_493209
L_277976:
	incl %ecx
	jo L_493208
L_277977:
	jmp loop_3321
.p2align 0x4
L_493208:
L_277884:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_493209:
L_277978:
	movq 0x0(%r13),%r15
	movq %r15,0x50(%rbp)
	movq (globalObjptr+0x17D8)(%rip),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_277979+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_493210:
L_277881:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_493211:
.p2align 0x4,,0x7
L_278003:
	incl 0x28(%rbp)
	jmp loop_3320
.p2align 0x4
L_493212:
L_277971:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_493215:
L_277965:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_493216:
L_277940:
	movq 0x8(%r10),%r15
	movq %r15,0x10(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x18(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_277848
L_277942:
	cmpl $0x0,%r13d
	jl L_277860
L_277943:
	movl $0x0,0x1C(%rbp)
.p2align 0x4,,0x7
loop_3316:
	movl 0x1C(%rbp),%r15d
	cmpl 0x18(%rbp),%r15d
	jnl L_493220
L_277945:
	movslq %r15d,%r14
	movq 0x10(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	movq %r13,0x30(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movl %r15d,%r14d
	movl %r14d,0x38(%rbp)
	movslq %r14d,%r11
	cmpq %r11,%r15
	jne L_277848
L_277947:
	cmpl $0x0,%r14d
	jl L_277860
L_277948:
	movl $0x0,0x3C(%rbp)
.p2align 0x4,,0x7
loop_3317:
	movl 0x38(%rbp),%r15d
	cmpl %r15d,0x3C(%rbp)
	jl L_493217
L_277949:
	incl 0x1C(%rbp)
	jmp loop_3316
.p2align 0x4
L_493217:
L_277950:
	movslq 0x3C(%rbp),%r15
	movq %r15,%r14
	movq %r15,%r13
	imulq $0x18,%r14
	movq 0x30(%rbp),%r11
	movq 0x0(%r11,%r14,1),%r10
	movq %r10,0x40(%rbp)
	imulq $0x18,%r13
	movq 0x8(%r11,%r13,1),%r14
	movq %r14,0x48(%rbp)
	imulq $0x18,%r15
	movq 0x10(%r11,%r15,1),%r14
	movq %r14,0x58(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_277951+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp checkSyntaxExp_0
.p2align 0x4
L_493220:
L_277944:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_493223:
L_277938:
	movq 0x8(%r10),%r15
	movq %r15,0x10(%rbp)
	movq 0x0(%r10),%r15
	movq %r15,0x20(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_277939+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp checkSyntaxDec_0
.p2align 0x4
L_493224:
L_277937:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_493225:
L_277936:
	movq 0x18(%r10),%r15
	movq %r15,0x0(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp checkSyntax_0
.p2align 0x4
L_493226:
L_277928:
	movq 0x0(%r10),%r15
	movq %r15,0x10(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x18(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_277848
L_277930:
	cmpl $0x0,%r13d
	jl L_277860
L_277931:
	movl $0x0,0x1C(%rbp)
loop_3315:
	movl 0x18(%rbp),%r15d
	cmpl %r15d,0x1C(%rbp)
	jl L_493227
L_277932:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_493227:
L_277933:
	movslq 0x1C(%rbp),%r15
	movq 0x10(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x28(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_277934+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp checkSyntaxDec_0
.p2align 0x4
L_493230:
L_277872:
	movq 0x0(%r10),%r15
	movq %r15,0x0(%rbp)
	movq 0x10(%r13),%r14
	movq %r14,0x8(%rbp)
	movq 0x8(%r13),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%r13),%r14
	movq %r14,0x18(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movq %r15,0x28(%rbp)
	movl %r15d,%r14d
	movl %r14d,0x30(%rbp)
	movslq %r14d,%r13
	cmpq %r13,%r15
	jne L_277848
L_277874:
	cmpl $0x0,%r14d
	jl L_277860
L_277875:
	movl $0x0,0x34(%rbp)
loop_3312:
	movl 0x30(%rbp),%r15d
	cmpl %r15d,0x34(%rbp)
	jl L_493236
L_277876:
	movl $0x0,0x8(%rbp)
.p2align 0x4,,0x7
loop_3313:
	movl 0x8(%rbp),%r14d
	cmpl 0x30(%rbp),%r14d
	jnl L_493235
L_277878:
	movslq %r14d,%r15
	movq 0x20(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
loop_3314:
	cmpl 0x8(%rbp),%ecx
	je L_493234
L_277879:
	movslq %ecx,%r14
	cmpq 0x28(%rbp),%r14
	jnb L_277881
L_277882:
	movq 0x8(%r15),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x38(%rbp)
	movq 0x20(%rbp),%r10
	movq 0x0(%r10,%r14,8),%r9
	movq 0x8(%r9),%r8
	movq 0x8(%r8),%rsp
	movq 0x8(%r11),%rsi
	cmpq %rsi,0x8(%rsp)
	je L_493232
L_277883:
	incl %ecx
	jo L_277884
L_277885:
	jmp loop_3314
.p2align 0x4
L_493232:
L_277886:
	movq 0x0(%r13),%r15
	movq %r15,0x40(%rbp)
	movq (globalObjptr+0x1740)(%rip),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_277887+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_493234:
.p2align 0x4,,0x7
L_277911:
	incl 0x8(%rbp)
	jmp loop_3313
.p2align 0x4
L_493235:
L_277877:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_493236:
L_277925:
	movslq 0x34(%rbp),%r15
	movq 0x20(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x40(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_277926+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp checkSyntax_0
.p2align 0x4
.long 0x639
L_277857:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_277858+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp checkSyntax_2
.p2align 0x4
.long 0x1017
L_277866:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	incl 0x2C(%rbp)
	jmp loop_3309
.p2align 0x4
.long 0x251D
L_277868:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_277869+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp checkSyntaxExp_0
.p2align 0x4
.long 0x4E5
L_278028:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp loop_3308
.p2align 0x4
.long 0x3E4A
L_278019:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_278020
.p2align 0x4
.long 0x44C5
L_277979:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_277980+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4512
L_277951:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x48(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x50(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_277848
L_277953:
	cmpl $0x0,%r13d
	jl L_277860
L_277954:
	movl $0x0,0x54(%rbp)
loop_3318:
	movl 0x50(%rbp),%r15d
	cmpl %r15d,0x54(%rbp)
	jl L_493241
L_277955:
	movq 0x40(%rbp),%r15
	cmpq $0x1,%r15
	je L_493240
L_277956:
	movq %r15,0x48(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_277957+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp checkSyntax_0
.p2align 0x4
L_493240:
L_277958:
	incl 0x3C(%rbp)
	jmp loop_3317
.p2align 0x4
L_493241:
L_277960:
	movslq 0x54(%rbp),%r15
	movq 0x48(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x60(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_277961+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp checkSyntax_2
.p2align 0x4
.long 0x4E5
L_277939:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp loop_3308
.p2align 0x4
.long 0x4F4
L_277934:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	incl 0x1C(%rbp)
	jmp loop_3315
.p2align 0x4
.long 0x4509
L_277887:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_277888+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4511
L_277926:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	incl 0x34(%rbp)
	jmp loop_3312
.p2align 0x4
.long 0x517
L_277858:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	incl 0x1C(%rbp)
	jmp loop_3310
.p2align 0x4
.long 0x27DE
L_277869:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	incl 0x44(%rbp)
	jmp loop_3311
.p2align 0x4
.long 0x44C5
L_277980:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x48(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_277981+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4513
L_277957:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_277958
.p2align 0x4
.long 0x4514
L_277961:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	incl 0x54(%rbp)
	jmp loop_3318
.p2align 0x4
.long 0x4509
L_277888:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x38(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_277889+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x44C6
L_277981:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_277982
L_278013:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_278014+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_278014
.p2align 0x4
.long 0x44CC
L_278014:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_277982:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x60(%rbp)
	addq $0x18,%r12
	movq 0x58(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_277983:
	addl 0x0(%r15),%ecx
	movl %ecx,0x2C(%rbp)
	jo L_277884
L_277984:
	cmpq $0x1,%r14
	je L_493244
L_277985:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_277983
.p2align 0x4
L_493244:
L_277986:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_277987
L_278011:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_278012+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_278012
.p2align 0x4
.long 0x44CB
L_278012:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_277987:
	movl 0x2C(%rbp),%ecx
	testl %ecx,%ecx
	jz L_493245
L_277988:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
L_277989:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x48(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0xE040)(%rip),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_277990+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_493245:
L_278010:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_277989
.p2align 0x4
.long 0x450A
L_277889:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_277890
L_277922:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_277923+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_277923
.p2align 0x4
.long 0x4510
L_277923:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_277890:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x50(%rbp)
	addq $0x18,%r12
	movq 0x48(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_277891:
	addl 0x0(%r15),%ecx
	movl %ecx,0xC(%rbp)
	jo L_277884
L_277892:
	cmpq $0x1,%r14
	je L_493249
L_277893:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_277891
.p2align 0x4
L_493249:
L_277894:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_277895
L_277920:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_277921+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_277921
.p2align 0x4
.long 0x450F
L_277921:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_277895:
	movl 0xC(%rbp),%ecx
	testl %ecx,%ecx
	jz L_493250
L_277896:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
L_277897:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x38(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0xE040)(%rip),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_277898+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_493250:
L_277919:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_277897
.p2align 0x4
.long 0x44C5
L_277990:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_277991+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutDec_1
.p2align 0x4
.long 0x4509
L_277898:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_277899+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_30
.p2align 0x4
.long 0x44C7
L_277991:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	movl 0x70(%rbp),%r15d
	movl %r15d,0x2C(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_277992
L_278008:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_278009+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_278009
.p2align 0x4
.long 0x44CA
L_278009:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_277992:
	movq $0xC3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x2C(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x68(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x58(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_277993:
	addl 0x0(%r15),%ecx
	movl %ecx,0x2C(%rbp)
	jo L_277884
L_277994:
	cmpq $0x1,%r14
	je L_493254
L_277995:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_277993
.p2align 0x4
L_493254:
L_277996:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_277997
L_278006:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_278007+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_278007
.p2align 0x4
.long 0x44C9
L_278007:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_277997:
	movl 0x2C(%rbp),%ecx
	testl %ecx,%ecx
	jz L_493256
L_277998:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
L_277999:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_277884
L_278000:
	movl %r13d,0x0(%r15)
	movq 0x48(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq %r14,0x50(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x68(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x50,%rbp
	leaq (L_278001+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_493256:
L_278005:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_277999
.p2align 0x4
.long 0x450B
L_277899:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	movl 0x60(%rbp),%r15d
	movl %r15d,0xC(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_277900
L_277917:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_277918+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_277918
.p2align 0x4
.long 0x450E
L_277918:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_277900:
	movq $0xC3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0xC(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x58(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x48(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_277901:
	addl 0x0(%r15),%ecx
	movl %ecx,0xC(%rbp)
	jo L_277884
L_277902:
	cmpq $0x1,%r14
	je L_493260
L_277903:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_277901
.p2align 0x4
L_493260:
L_277904:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_277905
L_277915:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_277916+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_277916
.p2align 0x4
.long 0x450D
L_277916:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_277905:
	movl 0xC(%rbp),%ecx
	testl %ecx,%ecx
	jz L_493262
L_277906:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
L_277907:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_277884
L_277908:
	movl %r13d,0x0(%r15)
	movq 0x38(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq %r14,0x40(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x58(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x40,%rbp
	leaq (L_277909+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_493262:
L_277914:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_277907
.p2align 0x4
.long 0x44C8
L_278001:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq (globalObjptr+0x1610)(%rip),%r15
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	jne L_278003
L_277913:
	movq (globalObjptr+0x1618)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x450C
L_277909:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq (globalObjptr+0x1610)(%rip),%r15
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_277913
	jmp L_277911
.text
.p2align 0x4
.globl checkSyntaxExp_0
.hidden checkSyntaxExp_0
checkSyntaxExp_0:
loopS_33:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_278031
L_278202:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_278203+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_278203
.p2align 0x4
.long 0x45F
L_278203:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_278031:
	movq 0x0(%rbp),%r15
	movq %r15,0x10(%rbp)
.p2align 0x4,,0x7
loop_3322:
	movq 0x8(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x10(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%rax
	shrq $0x1,%rax
	subq $0xDFB,%rax
	cmpq $0x11,%rax
	ja L_493268
	leaq jumpTable_764(%rip),%rbx
	jmp *(%rbx,%rax,8)
.data
.p2align 0x4
jumpTable_764:
.quad L_493321,L_493320,L_493319,L_493318,L_493317,L_493316,L_493315,L_493314,L_493310,L_493286,L_493285,L_493281,L_493280,L_493279,L_493278,L_493274,L_493270,L_493269
.text
.p2align 0x4
L_493268:
L_278032:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_493269:
L_278201:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_493270:
L_278192:
	movq 0x0(%r14),%r15
	movq %r15,0x10(%rbp)
	movq 0x8(%rbp),%r14
	movq 0x30(%r14),%r13
	movq %r13,0x18(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x20(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_493273
L_278194:
	cmpl $0x0,%r13d
	jl L_493272
L_278195:
	movl $0x0,0x24(%rbp)
loop_3333:
	movl 0x20(%rbp),%r15d
	cmpl %r15d,0x24(%rbp)
	jl L_493271
L_278196:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_493271:
L_278197:
	movslq 0x24(%rbp),%r15
	movq %r15,%r14
	salq $0x4,%r14
	movq 0x10(%rbp),%r13
	movq 0x0(%r13,%r14,1),%r11
	movq %r11,0x28(%rbp)
	salq $0x4,%r15
	movq 0x8(%r13,%r15,1),%r14
	movq %r14,0x38(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_278198+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp checkSyntax_2
.p2align 0x4
L_493272:
L_278054:
	movq (globalObjptr+0x4F8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_493273:
L_278046:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_493274:
L_278184:
	movq 0x0(%r14),%r15
	movq %r15,0x10(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x18(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_278046
L_278186:
	cmpl $0x0,%r13d
	jl L_278054
L_278187:
	movl $0x0,0x1C(%rbp)
loop_3332:
	movl 0x18(%rbp),%r15d
	cmpl %r15d,0x1C(%rbp)
	jl L_493275
L_278188:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_493275:
L_278189:
	movslq 0x1C(%rbp),%r15
	movq 0x10(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x28(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_278190+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp checkSyntaxExp_0
.p2align 0x4
L_493278:
L_278182:
	movq 0x8(%r14),%r15
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x20(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_278183+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp checkSyntaxExp_0
.p2align 0x4
L_493279:
L_278172:
	movq 0x8(%r14),%r15
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x20(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_278173+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp checkSyntaxExp_0
.p2align 0x4
L_493280:
L_278170:
	movq 0x8(%r14),%r15
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x20(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_278171+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp checkSyntaxDec_0
.p2align 0x4
L_493281:
L_278162:
	movq 0x0(%r14),%r15
	movq %r15,0x10(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x18(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_278046
L_278164:
	cmpl $0x0,%r13d
	jl L_278054
L_278165:
	movl $0x0,0x1C(%rbp)
loop_3330:
	movl 0x18(%rbp),%r15d
	cmpl %r15d,0x1C(%rbp)
	jl L_493282
L_278166:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_493282:
L_278167:
	movslq 0x1C(%rbp),%r15
	movq 0x10(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x28(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_278168+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp checkSyntaxExp_0
.p2align 0x4
L_493285:
L_278161:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_493286:
L_278066:
	movq 0x0(%r14),%r15
	movq %r15,0x18(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1295,%r14
	je L_493306
L_278153:
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movl %r13d,0x40(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_278046
L_278155:
	cmpl $0x0,%r13d
	jl L_278054
L_278156:
	movl $0x0,0x44(%rbp)
loop_3329:
	movl 0x44(%rbp),%r15d
	cmpl 0x40(%rbp),%r15d
	jnl L_493287
L_278158:
	movslq %r15d,%r14
	movq 0x38(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	movq %r13,0x50(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_278159+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp checkSyntaxExp_0
.p2align 0x4
L_493287:
L_278072:
	movq 0x18(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1295,%r14
	je L_493303
L_278139:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x40(%rbp)
	cmpq %rdx,%r15
	movq %r14,0x38(%rbp)
	jne L_278046
L_278141:
	testq %rdx,%rdx
	jz L_493301
L_278142:
	cmpq $0x7FFFFFFF,%rdx
	ja L_493300
L_278143:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14D1,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_278144+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_278144
.p2align 0x4
.long 0xFAF
L_278144:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq %rax,%r15
L_278145:
	xorq %r14,%r14
.p2align 0x4,,0x7
loop_3328:
	cmpq 0x40(%rbp),%r14
	jnl L_493288
L_278147:
	movl %r14d,%r13d
	movq %r14,%r11
	movq %r14,%r10
	movslq %r13d,%r9
	movq 0x38(%rbp),%r8
	movq 0x0(%r8,%r9,8),%rsp
	movl %r13d,%r9d
	shlq $0x1,%r9
	orq $0x1,%r9
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r13,1)
	salq $0x4,%r11
	movq %rsp,0x0(%r15,%r11,1)
	movq %r15,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%r8,%r13,1)
	salq $0x4,%r10
	movq %r9,0x8(%r15,%r10,1)
	incq %r14
	jmp loop_3328
.p2align 0x4
L_493288:
L_278146:
	movq $0xB25,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x18(%rbp)
L_278074:
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x18(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq %r14,0x40(%rbp)
	movl %r14d,%r15d
	movl %r15d,0x48(%rbp)
	movslq %r15d,%r13
	cmpq %r14,%r13
	jne L_278046
L_278076:
	cmpl $0x0,%r15d
	jl L_278054
L_278077:
	movl $0x0,0x4C(%rbp)
.p2align 0x4,,0x7
loop_3326:
	movl 0x4C(%rbp),%r15d
	cmpl 0x48(%rbp),%r15d
	jnl L_493297
L_278079:
	movslq %r15d,%r14
	salq $0x4,%r14
	movq 0x18(%rbp),%r15
	movq 0x8(%r15,%r14,1),%r13
	movq %r13,0x50(%rbp)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
loop_3327:
	cmpl %ecx,0x4C(%rbp)
	je L_493296
L_278080:
	movslq %ecx,%r15
	cmpq 0x40(%rbp),%r15
	jnb L_493295
L_278082:
	salq $0x4,%r15
	movq 0x18(%rbp),%r14
	movq 0x8(%r14,%r15,1),%r13
	movq 0x50(%rbp),%r15
	movq %r15,%r14
	andq $0x1,%r14
	cmpq $0x1,%r14
	je L_493292
L_278083:
L_278084:
	movq %r13,%r14
	andq $0x3,%r14
	jnz L_278085
L_278088:
	movq 0x8(%r15),%r14
	cmpq %r14,0x8(%r13)
	je L_493290
L_278085:
	incl %ecx
	jo L_493289
L_278087:
	jmp loop_3327
.p2align 0x4
L_493289:
L_278086:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_493290:
L_278091:
	movq (globalObjptr+0x1728)(%rip),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_278092+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_493292:
L_278133:
	shrq $0x1,%r15
	movl %r15d,%r14d
	movq %r13,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	jne L_278085
L_278134:
	shrq $0x1,%r13
	movl %r13d,%r15d
	cmpl %r15d,%r14d
	je L_278091
	jmp L_278085
.p2align 0x4
L_493295:
L_278081:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_493296:
.p2align 0x4,,0x7
L_278118:
	incl 0x4C(%rbp)
	jmp loop_3326
.p2align 0x4
L_493297:
L_278078:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_493300:
L_278148:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_493301:
L_278149:
	movq (globalObjptr+0x16D0)(%rip),%r15
	jmp L_278145
.p2align 0x4
L_493303:
L_278073:
	movq 0x0(%r15),%r15
	movq %r15,0x18(%rbp)
	jmp L_278074
.p2align 0x4
L_493306:
L_278067:
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movl %r13d,0x40(%rbp)
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_278046
L_278069:
	cmpl $0x0,%r13d
	jl L_278054
L_278070:
	movl $0x0,0x44(%rbp)
loop_3325:
	movl 0x44(%rbp),%r15d
	cmpl 0x40(%rbp),%r15d
	jnl L_278072
L_278150:
	movslq %r15d,%r14
	salq $0x4,%r14
	movq 0x38(%rbp),%r15
	movq 0x0(%r15,%r14,1),%r13
	movq %r13,0x50(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_278151+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp checkSyntaxExp_0
.p2align 0x4
L_493310:
L_278058:
	movq 0x0(%r14),%r15
	movq %r15,0x10(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x18(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_278046
L_278060:
	cmpl $0x0,%r13d
	jl L_278054
L_278061:
	movl $0x0,0x1C(%rbp)
loop_3324:
	movl 0x18(%rbp),%r15d
	cmpl %r15d,0x1C(%rbp)
	jl L_493311
L_278062:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_493311:
L_278063:
	movslq 0x1C(%rbp),%r15
	movq 0x10(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x28(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_278064+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp checkSyntaxExp_0
.p2align 0x4
L_493314:
L_278057:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_493315:
L_278055:
	movq 0x8(%r14),%r15
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x28(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_278056+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp checkSyntaxExp_0
.p2align 0x4
L_493316:
L_278043:
	movq 0x8(%r14),%r15
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x20(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_278044+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp checkSyntaxExp_0
.p2align 0x4
L_493317:
L_278042:
	movq 0x0(%r14),%r15
	movq %r15,0x10(%rbp)
	jmp loop_3322
.p2align 0x4
L_493318:
L_278039:
	movq 0x10(%r14),%r15
	movq %r15,0x10(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x18(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x28(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_278040+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp checkSyntaxExp_0
.p2align 0x4
L_493319:
L_278037:
	movq 0x8(%r14),%r15
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x20(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_278038+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp checkSyntaxExp_0
.p2align 0x4
L_493320:
L_278035:
	movq 0x8(%r14),%r15
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x20(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_278036+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp checkSyntaxExp_0
.p2align 0x4
L_493321:
L_278033:
	movq 0x8(%r14),%r15
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x20(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_278034+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp checkSyntaxExp_0
.p2align 0x4
.long 0x97C
L_278198:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_278199+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp checkSyntaxExp_0
.p2align 0x4
.long 0x4F4
L_278190:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	incl 0x1C(%rbp)
	jmp loop_3332
.p2align 0x4
.long 0x4E5
L_278183:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp loop_3322
.p2align 0x4
.long 0x4E5
L_278173:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x8(%rbp),%r15
	movq 0x30(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x10(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movl %r13d,0x28(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_278046
L_278175:
	cmpl $0x0,%r13d
	jl L_278054
L_278176:
	movl $0x0,0x10(%rbp)
loop_3331:
	movl 0x28(%rbp),%r15d
	cmpl %r15d,0x10(%rbp)
	jl L_493323
L_278177:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_493323:
L_278178:
	movslq 0x10(%rbp),%r15
	movq %r15,%r14
	salq $0x4,%r14
	movq 0x20(%rbp),%r13
	movq 0x0(%r13,%r14,1),%r11
	movq %r11,0x30(%rbp)
	salq $0x4,%r15
	movq 0x8(%r13,%r15,1),%r14
	movq %r14,0x40(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_278179+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp checkSyntax_2
.p2align 0x4
.long 0x4E5
L_278171:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp loop_3322
.p2align 0x4
.long 0x4F4
L_278168:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	incl 0x1C(%rbp)
	jmp loop_3330
.p2align 0x4
.long 0x1DA5
L_278159:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	incl 0x44(%rbp)
	jmp loop_3329
.p2align 0x4
.long 0x8FD
L_278092:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_278093+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1DA5
L_278151:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	incl 0x44(%rbp)
	jmp loop_3325
.p2align 0x4
.long 0x4F4
L_278064:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	incl 0x1C(%rbp)
	jmp loop_3324
.p2align 0x4
.long 0x490
L_278056:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp checkSyntax_0
.p2align 0x4
.long 0x4E5
L_278044:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x8(%rbp),%r15
	movq 0x30(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x10(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movl %r13d,0x28(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_278046
L_278047:
	cmpl $0x0,%r13d
	jl L_278054
L_278048:
	movl $0x0,0x10(%rbp)
loop_3323:
	movl 0x28(%rbp),%r15d
	cmpl %r15d,0x10(%rbp)
	jl L_493326
L_278049:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_493326:
L_278050:
	movslq 0x10(%rbp),%r15
	movq %r15,%r14
	salq $0x4,%r14
	movq 0x20(%rbp),%r13
	movq 0x0(%r13,%r14,1),%r11
	movq %r11,0x30(%rbp)
	salq $0x4,%r15
	movq 0x8(%r13,%r15,1),%r14
	movq %r14,0x40(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_278051+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp checkSyntax_2
.p2align 0x4
.long 0x5EF
L_278040:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_278041+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp checkSyntaxExp_0
.p2align 0x4
.long 0x4E5
L_278038:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp loop_3322
.p2align 0x4
.long 0x4E5
L_278036:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp loop_3322
.p2align 0x4
.long 0x4E5
L_278034:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp loop_3322
.p2align 0x4
.long 0x5EC
L_278199:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	incl 0x24(%rbp)
	jmp loop_3333
.p2align 0x4
.long 0x608
L_278179:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_278180+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp checkSyntaxExp_0
.p2align 0x4
.long 0x8FD
L_278093:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r14
	movq %r14,0x58(%rbp)
	movq 0x50(%rbp),%r14
	movq %r14,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	je L_493329
L_278094:
	movq 0x10(%r14),%r15
L_278095:
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_278096+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_493329:
L_278130:
	shrq $0x1,%r14
	movl %r14d,%r15d
	incl %r15d
	jo L_278086
L_278131:
	movl %r15d,0x68(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_278132+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0x608
L_278051:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_278052+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp checkSyntaxExp_0
.p2align 0x4
.long 0x4E5
L_278041:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp loop_3322
.p2align 0x4
.long 0x3C5A
L_278180:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	incl 0x10(%rbp)
	jmp loop_3331
.p2align 0x4
.long 0x4515
L_278096:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_278097
L_278128:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_278129+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_278129
.p2align 0x4
.long 0x451B
L_278129:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_278097:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x60(%rbp)
	addq $0x18,%r12
	movq 0x58(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_278098:
	addl 0x0(%r15),%ecx
	movl %ecx,0x50(%rbp)
	jo L_278086
L_278099:
	cmpq $0x1,%r14
	je L_493331
L_278100:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_278098
.p2align 0x4
L_493331:
L_278101:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_278102
L_278126:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_278127+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_278127
.p2align 0x4
.long 0x451A
L_278127:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_278102:
	movl 0x50(%rbp),%ecx
	testl %ecx,%ecx
	jz L_493332
L_278103:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
L_278104:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x50(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0xE040)(%rip),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_278105+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_493332:
L_278125:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_278104
.p2align 0x4
.long 0x4515
L_278132:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x50(%rbp)
	jmp L_278095
.p2align 0x4
.long 0x3C5A
L_278052:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	incl 0x10(%rbp)
	jmp loop_3323
.p2align 0x4
.long 0x8FD
L_278105:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	movl $0x1,0x68(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x68,%rbp
	leaq (L_278106+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutExp_1
.p2align 0x4
.long 0x4516
L_278106:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_278107
L_278123:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_278124+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_278124
.p2align 0x4
.long 0x4519
L_278124:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_278107:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x60(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x68(%rbp)
	addq $0x18,%r12
	movq 0x58(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_278108:
	addl 0x0(%r15),%ecx
	movl %ecx,0x58(%rbp)
	jo L_278086
L_278109:
	cmpq $0x1,%r14
	je L_493336
L_278110:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_278108
.p2align 0x4
L_493336:
L_278111:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_278112
L_278121:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_278122+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_278122
.p2align 0x4
.long 0x4518
L_278122:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_278112:
	movl 0x58(%rbp),%ecx
	testl %ecx,%ecx
	jz L_493338
L_278113:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
L_278114:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_278086
L_278115:
	movl %r13d,0x0(%r15)
	movq %r14,0x58(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x70(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x58,%rbp
	leaq (L_278116+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_493338:
L_278120:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_278114
.p2align 0x4
.long 0x4517
L_278116:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq (globalObjptr+0x1610)(%rip),%r15
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	jne L_278118
L_278119:
	movq (globalObjptr+0x1618)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl checkSyntax_2
.hidden checkSyntax_2
checkSyntax_2:
loopS_34:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_278204
L_278319:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_278320+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_278320
.p2align 0x4
.long 0x45F
L_278320:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_278204:
	movq 0x0(%rbp),%r15
	movq %r15,0x10(%rbp)
.p2align 0x4,,0x7
loop_3334:
	movq 0x8(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x10(%rbp),%r15
	movq 0x8(%r15),%r14
	cmpq $0x1,%r14
	je L_493376
L_278205:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%rax
	shrq $0x1,%rax
	subq $0xDF2,%rax
	cmpq $0x7,%rax
	ja L_493343
	leaq jumpTable_765(%rip),%rbx
	jmp *(%rbx,%rax,8)
.data
.p2align 0x4
jumpTable_765:
.quad L_493372,L_493356,L_493352,L_493351,L_493347,L_493346,L_493345,L_493344
.text
.p2align 0x4
L_493343:
L_278206:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_493344:
L_278317:
	movq 0x8(%r14),%r15
	movq %r15,0x10(%rbp)
	jmp loop_3334
.p2align 0x4
L_493345:
L_278316:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_493346:
L_278314:
	movq 0x8(%r14),%r15
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x28(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_278315+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp checkSyntax_2
.p2align 0x4
L_493347:
L_278306:
	movq 0x0(%r14),%r15
	movq %r15,0x10(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x18(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_493350
L_278308:
	cmpl $0x0,%r13d
	jl L_493349
L_278309:
	movl $0x0,0x1C(%rbp)
loop_3340:
	movl 0x18(%rbp),%r15d
	cmpl %r15d,0x1C(%rbp)
	jl L_493348
L_278310:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_493348:
L_278311:
	movslq 0x1C(%rbp),%r15
	movq 0x10(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x28(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_278312+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp checkSyntax_2
.p2align 0x4
L_493349:
L_278216:
	movq (globalObjptr+0x4F8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_493350:
L_278209:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_493351:
L_278302:
	movq 0x10(%r14),%r15
	movq %r15,0x28(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x10(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_278303+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp checkSyntax_2
.p2align 0x4
L_493352:
L_278294:
	movq 0x0(%r14),%r15
	movq %r15,0x10(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x18(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_278209
L_278296:
	cmpl $0x0,%r13d
	jl L_278216
L_278297:
	movl $0x0,0x1C(%rbp)
loop_3339:
	movl 0x18(%rbp),%r15d
	cmpl %r15d,0x1C(%rbp)
	jl L_493353
L_278298:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_493353:
L_278299:
	movslq 0x1C(%rbp),%r15
	movq 0x10(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x28(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_278300+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp checkSyntax_2
.p2align 0x4
L_493356:
L_278217:
	movq 0x8(%r14),%r15
	movq %r15,0x38(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq %r14,0x40(%rbp)
	movl %r14d,%r15d
	movl %r15d,0x48(%rbp)
	movslq %r15d,%r13
	cmpq %r14,%r13
	jne L_278209
L_278219:
	cmpl $0x0,%r15d
	jl L_278216
L_278220:
	movl $0x0,0x4C(%rbp)
.p2align 0x4,,0x7
loop_3336:
	movl 0x4C(%rbp),%r15d
	cmpl 0x48(%rbp),%r15d
	jnl L_493360
L_278282:
	movslq %r15d,%r14
	salq $0x4,%r14
	movq 0x38(%rbp),%r15
	movq 0x0(%r15,%r14,1),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x107D,%r15
	jne L_493359
L_278283:
	movq 0x10(%r13),%r15
	movq %r15,0x50(%rbp)
	movq 0x8(%r13),%r15
	cmpq $0x1,%r15
	jne L_493358
.p2align 0x4,,0x7
L_278286:
	cmpq $0x1,0x50(%rbp)
	jne L_493357
.p2align 0x4,,0x7
L_278289:
	incl 0x4C(%rbp)
	jmp loop_3336
.p2align 0x4
L_493357:
L_278287:
	movq 0x50(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_278288+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp checkSyntax_2
.p2align 0x4
L_493358:
L_278284:
	movq %r15,0x60(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_278285+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp checkSyntax_0
.p2align 0x4
L_493359:
L_278292:
	movq 0x0(%r13),%r15
	movq %r15,0x58(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_278288+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp checkSyntax_2
.p2align 0x4
L_493360:
L_278221:
	movq 0x10(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x18(%rbp)
	movl $0x0,0x4C(%rbp)
.p2align 0x4,,0x7
loop_3337:
	movl 0x4C(%rbp),%r15d
	cmpl 0x48(%rbp),%r15d
	jnl L_493369
L_278223:
	movslq %r15d,%r14
	salq $0x4,%r14
	movq 0x38(%rbp),%r15
	movq 0x8(%r15,%r14,1),%r13
	movq %r13,0x50(%rbp)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
loop_3338:
	cmpl %ecx,0x4C(%rbp)
	je L_493368
L_278224:
	movslq %ecx,%r15
	cmpq 0x40(%rbp),%r15
	jnb L_493367
L_278226:
	salq $0x4,%r15
	movq 0x38(%rbp),%r14
	movq 0x8(%r14,%r15,1),%r13
	movq 0x50(%rbp),%r15
	movq %r15,%r14
	andq $0x1,%r14
	cmpq $0x1,%r14
	je L_493364
L_278227:
L_278228:
	movq %r13,%r14
	andq $0x3,%r14
	jnz L_278229
L_278232:
	movq 0x8(%r13),%r14
	cmpq %r14,0x8(%r15)
	je L_493362
L_278229:
	incl %ecx
	jo L_493361
L_278231:
	jmp loop_3338
.p2align 0x4
L_493361:
L_278230:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_493362:
L_278235:
	movq (globalObjptr+0x1728)(%rip),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_278236+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_493364:
L_278277:
	shrq $0x1,%r15
	movl %r15d,%r14d
	movq %r13,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	jne L_278229
L_278278:
	shrq $0x1,%r13
	movl %r13d,%r15d
	cmpl %r14d,%r15d
	je L_278235
	jmp L_278229
.p2align 0x4
L_493367:
L_278225:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_493368:
.p2align 0x4,,0x7
L_278262:
	incl 0x4C(%rbp)
	jmp loop_3337
.p2align 0x4
L_493369:
L_278222:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_493372:
L_278207:
	movq 0x0(%r14),%r15
	movq %r15,0x10(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x18(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_278209
L_278210:
	cmpl $0x0,%r13d
	jl L_278216
L_278211:
	movl $0x0,0x1C(%rbp)
loop_3335:
	movl 0x18(%rbp),%r15d
	cmpl %r15d,0x1C(%rbp)
	jl L_493373
L_278212:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_493373:
L_278213:
	movslq 0x1C(%rbp),%r15
	movq 0x10(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x28(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_278214+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp checkSyntax_2
.p2align 0x4
L_493376:
L_278318:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x490
L_278315:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp checkSyntax_0
.p2align 0x4
.long 0x4F4
L_278312:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	incl 0x1C(%rbp)
	jmp loop_3340
.p2align 0x4
.long 0x490
L_278303:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x10(%rbp),%r15
	cmpq $0x1,%r15
	je L_493378
L_278304:
	movq %r15,0x0(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp checkSyntax_0
.p2align 0x4
L_493378:
L_278305:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4F4
L_278300:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	incl 0x1C(%rbp)
	jmp loop_3339
.p2align 0x4
.long 0x1DC7
L_278288:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	jmp L_278289
.p2align 0x4
.long 0x451C
L_278285:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	jmp L_278286
.p2align 0x4
.long 0x8FD
L_278236:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_278237+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4F4
L_278214:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	incl 0x1C(%rbp)
	jmp loop_3335
.p2align 0x4
.long 0x8FD
L_278237:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r14
	movq %r14,0x58(%rbp)
	movq 0x50(%rbp),%r14
	movq %r14,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	je L_493379
L_278238:
	movq 0x10(%r14),%r15
L_278239:
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_278240+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_493379:
L_278274:
	shrq $0x1,%r14
	movl %r14d,%r15d
	incl %r15d
	jo L_278230
L_278275:
	movl %r15d,0x68(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_278276+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0x4515
L_278240:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_278241
L_278272:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_278273+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_278273
.p2align 0x4
.long 0x451B
L_278273:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_278241:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x60(%rbp)
	addq $0x18,%r12
	movq 0x58(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_278242:
	addl 0x0(%r15),%ecx
	movl %ecx,0x50(%rbp)
	jo L_278230
L_278243:
	cmpq $0x1,%r14
	je L_493381
L_278244:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_278242
.p2align 0x4
L_493381:
L_278245:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_278246
L_278270:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_278271+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_278271
.p2align 0x4
.long 0x451A
L_278271:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_278246:
	movl 0x50(%rbp),%ecx
	testl %ecx,%ecx
	jz L_493382
L_278247:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
L_278248:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x50(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0xE040)(%rip),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_278249+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_493382:
L_278269:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_278248
.p2align 0x4
.long 0x4515
L_278276:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x50(%rbp)
	jmp L_278239
.p2align 0x4
.long 0x8FD
L_278249:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_278250+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutT_0
.p2align 0x4
.long 0x4516
L_278250:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_278251
L_278267:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_278268+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_278268
.p2align 0x4
.long 0x4519
L_278268:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_278251:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x60(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x68(%rbp)
	addq $0x18,%r12
	movq 0x58(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_278252:
	addl 0x0(%r15),%ecx
	movl %ecx,0x58(%rbp)
	jo L_278230
L_278253:
	cmpq $0x1,%r14
	je L_493386
L_278254:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_278252
.p2align 0x4
L_493386:
L_278255:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_278256
L_278265:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_278266+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_278266
.p2align 0x4
.long 0x4518
L_278266:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_278256:
	movl 0x58(%rbp),%ecx
	testl %ecx,%ecx
	jz L_493388
L_278257:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
L_278258:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_278230
L_278259:
	movl %r13d,0x0(%r15)
	movq %r14,0x58(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x70(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x58,%rbp
	leaq (L_278260+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_493388:
L_278264:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_278258
.p2align 0x4
.long 0x4517
L_278260:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq (globalObjptr+0x1608)(%rip),%r15
	movq (globalObjptr+0x1610)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	jne L_278262
L_278263:
	movq (globalObjptr+0x1618)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl layout_55
.hidden layout_55
layout_55:
L_278321:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_278487
L_278322:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_493405
L_278323:
	movq 0x8(%rbp),%r15
	movq 0x28(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x8(%r15),%r14
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE32,%r15
	je L_493399
	cmpq $0xE33,%r15
	je L_493393
L_278324:
	movq %r14,0x8(%rbp)
	movq 0x8(%r13),%r15
	movq 0x0(%r13),%r14
	movq $0x11B1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	movq %r13,0x0(%rbp)
	addq $0x18,%r12
	jmp layoutStrdec_0
.p2align 0x4
L_493393:
L_278446:
	movq 0x0(%r13),%r15
	movq %r15,0x30(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_493398
L_278448:
	decl %r13d
	jo L_493397
L_278449:
	movl %r13d,0x40(%rbp)
	movq $0x1,0x38(%rbp)
.p2align 0x4,,0x7
loop_3342:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_493396
.p2align 0x4,,0x7
L_278450:
	movl 0x40(%rbp),%r15d
	cmpl $0x0,%r15d
	jl L_493394
L_278451:
	movl %r15d,%r14d
	decl %r14d
	movslq %r15d,%r13
	movl %r14d,0x40(%rbp)
	movq 0x30(%rbp),%r15
	movq 0x0(%r15,%r13,8),%r14
	movq $0x26F5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x38(%rbp)
	jmp loop_3342
.p2align 0x4
L_493394:
L_278452:
	movq 0x38(%rbp),%r14
	cmpq $0x1,%r14
	je L_493395
L_278453:
	movq 0x8(%r14),%r13
	movq %r13,0x30(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x40(%rbp)
	movq (globalObjptr+0x17A0)(%rip),%r14
	movq %r14,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_278454+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_493395:
L_278484:
	movq $0x1,0x0(%rbp)
	movl $0x0,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_493396:
L_278485:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_278486+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_278486
.p2align 0x4
.long 0x516
L_278486:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_278450
.p2align 0x4
L_493397:
L_278329:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_493398:
L_278327:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_493399:
L_278325:
	movq 0x0(%r13),%r15
	movq %r15,0x30(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_278327
L_278328:
	decl %r13d
	jo L_278329
L_278330:
	movl %r13d,0x40(%rbp)
	movq $0x1,0x38(%rbp)
.p2align 0x4,,0x7
loop_3341:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_493402
.p2align 0x4,,0x7
L_278331:
	movl 0x40(%rbp),%r15d
	cmpl $0x0,%r15d
	jl L_493400
L_278332:
	movl %r15d,%r14d
	decl %r14d
	movslq %r15d,%r13
	movl %r14d,0x40(%rbp)
	movq 0x30(%rbp),%r15
	movq 0x0(%r15,%r13,8),%r14
	movq $0x26E7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x38(%rbp)
	jmp loop_3341
.p2align 0x4
L_493400:
L_278333:
	movq 0x38(%rbp),%r14
	cmpq $0x1,%r14
	je L_493401
L_278334:
	movq 0x8(%r14),%r13
	movq %r13,0x30(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x40(%rbp)
	movq (globalObjptr+0x1790)(%rip),%r14
	movq %r14,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_278335+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_493401:
L_278443:
	movq $0x1,0x0(%rbp)
	movl $0x0,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_493402:
L_278444:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_278445+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_278445
.p2align 0x4
.long 0x1281
L_278445:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_278331
.p2align 0x4
L_493405:
L_278487:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_278488+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_278488
.p2align 0x4
.long 0x45F
L_278488:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_278323
.p2align 0x4
.long 0x70D
L_278454:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_278455+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x7AA
L_278335:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_278336+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x70D
L_278455:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq %r15,0x48(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x40,%rbp
	leaq (L_278456+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2150
.p2align 0x4
.long 0x7AA
L_278336:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r14
	movq %r14,0x38(%rbp)
	movq 0x40(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x48(%rbp)
	movq 0x8(%r14),%r15
	movq 0x8(%r13),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r11
	shrq $0x1,%r11
	cmpq $0xE25,%r11
	je L_493407
L_278337:
	movb $0x0,0x40(%rbp)
L_278338:
	movq 0x8(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_278339+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_493407:
L_278442:
	movb $0x1,0x40(%rbp)
	jmp L_278338
.p2align 0x4
.long 0x4A7
L_278456:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movl 0x48(%rbp),%r15d
	movl %r15d,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_278457
L_278482:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_278483+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_278483
.p2align 0x4
.long 0x516
L_278483:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_278457:
	movq $0xC3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x48(%rbp)
	addq $0x18,%r12
	movl 0x40(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r15
	cmpq $0x1,%r15
	je L_493408
L_278458:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x30(%rbp)
	movq %r14,0x38(%rbp)
	movq $0x1,0x40(%rbp)
L_278459:
	movq (globalObjptr+0xE2C0)(%rip),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_278460+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_493408:
L_278481:
	movq $0x1,%r14
	xchgq %r14,%r15
L_278469:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x48(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_278470+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3782
.p2align 0x4
.long 0x693
L_278339:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_278340+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutSigexp_0
.p2align 0x4
.long 0x98A
L_278460:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x38(%rbp),%r14
	movq %r14,0x58(%rbp)
	movq %r15,0x60(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x58,%rbp
	leaq (L_278461+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2150
.p2align 0x4
.long 0x1
L_278470:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movl 0x8(%rbp),%r15d
	movl %r15d,0x0(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_278471
L_278475:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_278476+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_278476
.p2align 0x4
.long 0x494
L_278476:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_278471:
	movl 0x0(%rbp),%r15d
	testl %r15d,%r15d
	jz L_493411
L_278472:
	decl %r15d
	jo L_278329
L_278473:
	movq $0x1B67,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movl $0x1,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x8(%rbp),%r13
	movq %r13,0x8(%r14)
	movq %r14,0x0(%rbp)
	movl %r15d,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_493411:
L_278474:
	movq $0x1,0x0(%rbp)
	movl $0x0,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x7C4
L_278340:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_278341+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x704
L_278461:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x38(%rbp)
	movl 0x60(%rbp),%r15d
	movl %r15d,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_278462
L_278479:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_278480+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_278480
.p2align 0x4
.long 0x3CA6
L_278480:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_278462:
	movq $0xC3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x50(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x40(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x30(%rbp),%r13
	cmpq $0x1,%r13
	je L_493413
L_278463:
	movq %r14,0x40(%rbp)
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movq %r13,0x30(%rbp)
	movq %r14,0x38(%rbp)
	jmp L_278459
.p2align 0x4
L_493413:
L_278464:
	movq %r15,0x58(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq $0x1,0x60(%rbp)
.p2align 0x4,,0x7
L_278465:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_493415
.p2align 0x4,,0x7
L_278466:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x50(%rbp),%r14
	cmpq $0x1,%r14
	je L_278469
L_278467:
	movq %r15,0x60(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x50(%rbp)
	movq %r15,0x58(%rbp)
	jmp L_278465
.p2align 0x4
L_493415:
L_278477:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_278478+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_278478
.p2align 0x4
.long 0x77F
L_278478:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_278466
.p2align 0x4
.long 0x9F5
L_278341:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq (globalObjptr+0xCD40)(%rip),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_278342+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x33BB
L_278342:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_278343
L_278440:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_278441+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_278441
.p2align 0x4
.long 0x4523
L_278441:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_278343:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x60(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x58(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x68(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x38(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_278344:
	addl 0x0(%r15),%ecx
	movl %ecx,0x38(%rbp)
	jo L_278329
L_278345:
	cmpq $0x1,%r14
	je L_493417
L_278346:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_278344
.p2align 0x4
L_493417:
L_278347:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_278348
L_278438:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_278439+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_278439
.p2align 0x4
.long 0x4522
L_278439:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_278348:
	movl 0x38(%rbp),%ecx
	testl %ecx,%ecx
	jz L_493419
L_278349:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
L_278350:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x38(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movb 0x40(%rbp),%r15b
	testb %r15b,%r15b
	jnz L_493418
L_278351:
	movq 0x48(%rbp),%r15
	movl 0x0(%r15),%r13d
	movq $0x1B65,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x18,%r12
	movl $0x3,0x0(%r11)
	movl $0x0,0x4(%r11)
	movq %r15,0x8(%r11)
	movq $0xC3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r13d,0x0(%r15)
	movq %r11,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x4(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x18,%r12
	movq $0x1,0x8(%r13)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq %r14,0x0(%r15)
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_278352+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3782
.p2align 0x4
L_493418:
L_278423:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x40(%rbp)
	addq $0x18,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_278424+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_493419:
L_278437:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_278350
.p2align 0x4
.long 0x5F1
L_278352:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movl 0x40(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_278353
L_278421:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_278422+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_278422
.p2align 0x4
.long 0x6DF
L_278422:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_278353:
	movl 0x38(%rbp),%ecx
	testl %ecx,%ecx
	jz L_493425
L_278354:
	decl %ecx
	jo L_278329
L_278355:
	movq $0x1B67,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl $0x1,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
L_278356:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x38(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq 0x30(%rbp),%r15
	cmpq $0x1,%r15
	je L_493423
L_278357:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x30(%rbp)
	movq %r14,0x40(%rbp)
	movq $0x1,0x48(%rbp)
L_278358:
	movq (globalObjptr+0xE2C0)(%rip),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_278359+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_493423:
L_278419:
	movq $0x1,%r14
	xchgq %r14,%r15
L_278386:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x38(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_278387+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3782
.p2align 0x4
L_493425:
L_278420:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_278356
.p2align 0x4
.long 0xDDE
L_278424:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_278425
L_278435:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_278436+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_278436
.p2align 0x4
.long 0xDE1
L_278436:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_278425:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x40(%rbp),%r13
	movq %r13,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x50(%rbp)
	addq $0x18,%r12
	movq 0x38(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_278426:
	addl 0x0(%r15),%ecx
	movl %ecx,0x38(%rbp)
	jo L_278329
L_278427:
	cmpq $0x1,%r14
	je L_493427
L_278428:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_278426
.p2align 0x4
L_493427:
L_278429:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_278430
L_278433:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_278434+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_278434
.p2align 0x4
.long 0xF52
L_278434:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_278430:
	movl 0x38(%rbp),%ecx
	testl %ecx,%ecx
	jz L_493428
L_278431:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_278356
.p2align 0x4
L_493428:
L_278432:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_278356
.p2align 0x4
.long 0xBAD
L_278359:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x40(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x58(%rbp)
	movq 0x8(%r14),%r15
	movq 0x8(%r13),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r11
	shrq $0x1,%r11
	cmpq $0xE25,%r11
	je L_493432
L_278360:
	movb $0x0,0x40(%rbp)
L_278361:
	movq 0x8(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_278362+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_493432:
L_278418:
	movb $0x1,0x40(%rbp)
	jmp L_278361
.p2align 0x4
.long 0x1
L_278387:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movl 0x8(%rbp),%r15d
	movl %r15d,0x0(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_278388
L_278392:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_278393+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_278393
.p2align 0x4
.long 0x494
L_278393:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_278388:
	movl 0x0(%rbp),%r15d
	testl %r15d,%r15d
	jz L_493434
L_278389:
	decl %r15d
	jo L_278329
L_278390:
	movq $0x1B67,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movl $0x1,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x8(%rbp),%r13
	movq %r13,0x8(%r14)
	movq %r14,0x0(%rbp)
	movl %r15d,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_493434:
L_278391:
	movq $0x1,0x0(%rbp)
	movl $0x0,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x33BB
L_278362:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_278363+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutSigexp_0
.p2align 0x4
.long 0x451D
L_278363:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_278364+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x451E
L_278364:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq (globalObjptr+0xCD40)(%rip),%r15
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_278365+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x451F
L_278365:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x70(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_278366
L_278416:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_278417+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_278417
.p2align 0x4
.long 0x2F0F
L_278417:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_278366:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x70(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x68(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x60(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x78(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x50(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_278367:
	addl 0x0(%r15),%ecx
	movl %ecx,0x44(%rbp)
	jo L_278329
L_278368:
	cmpq $0x1,%r14
	je L_493436
L_278369:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_278367
.p2align 0x4
L_493436:
L_278370:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_278371
L_278414:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_278415+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_278415
.p2align 0x4
.long 0x4521
L_278415:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_278371:
	movl 0x44(%rbp),%ecx
	testl %ecx,%ecx
	jz L_493438
L_278372:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r15)
L_278373:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x50(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movb 0x40(%rbp),%r15b
	testb %r15b,%r15b
	jnz L_493437
L_278374:
	movq 0x58(%rbp),%r15
	movl 0x0(%r15),%r13d
	movq $0x1B65,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x18,%r12
	movl $0x3,0x0(%r11)
	movl $0x0,0x4(%r11)
	movq %r15,0x8(%r11)
	movq $0xC3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r13d,0x0(%r15)
	movq %r11,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x4(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x18,%r12
	movq $0x1,0x8(%r13)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq %r14,0x0(%r15)
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_278375+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3782
.p2align 0x4
L_493437:
L_278399:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x40(%rbp)
	addq $0x18,%r12
	movq 0x58(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_278400+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_493438:
L_278413:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_278373
.p2align 0x4
.long 0x693
L_278375:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movl 0x58(%rbp),%r15d
	movl %r15d,0x40(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_278376
L_278397:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_278398+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_278398
.p2align 0x4
.long 0x698
L_278398:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_278376:
	movl 0x40(%rbp),%ecx
	testl %ecx,%ecx
	jz L_493446
L_278377:
	decl %ecx
	jo L_278329
L_278378:
	movq $0x1B67,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl $0x1,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
L_278379:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x30(%rbp),%r13
	cmpq $0x1,%r13
	je L_493442
L_278380:
	movq %r15,0x48(%rbp)
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movq %r13,0x30(%rbp)
	movq %r14,0x40(%rbp)
	jmp L_278358
.p2align 0x4
L_493442:
L_278381:
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq %r14,0x48(%rbp)
	movq $0x1,0x50(%rbp)
.p2align 0x4,,0x7
L_278382:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_493444
.p2align 0x4,,0x7
L_278383:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_278386
L_278384:
	movq %r15,0x50(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x40(%rbp)
	movq %r15,0x48(%rbp)
	jmp L_278382
.p2align 0x4
L_493444:
L_278394:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_278395+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_278395
.p2align 0x4
.long 0x9B1
L_278395:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	jmp L_278383
.p2align 0x4
L_493446:
L_278396:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_278379
.p2align 0x4
.long 0xF4E
L_278400:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_278401
L_278411:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_278412+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_278412
.p2align 0x4
.long 0xB9A
L_278412:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_278401:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x58(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x40(%rbp),%r13
	movq %r13,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x60(%rbp)
	addq $0x18,%r12
	movq 0x50(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_278402:
	addl 0x0(%r15),%ecx
	movl %ecx,0x40(%rbp)
	jo L_278329
L_278403:
	cmpq $0x1,%r14
	je L_493448
L_278404:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_278402
.p2align 0x4
L_493448:
L_278405:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_278406
L_278409:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_278410+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_278410
.p2align 0x4
.long 0x4520
L_278410:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_278406:
	movl 0x40(%rbp),%ecx
	testl %ecx,%ecx
	jz L_493449
L_278407:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_278379
.p2align 0x4
L_493449:
L_278408:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_278379
.text
.p2align 0x4
.globl x_2150
.hidden x_2150
x_2150:
L_278489:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_278490
L_278598:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_278599+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_278599
.p2align 0x4
.long 0x4DE
L_278599:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_278490:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_278491+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x67A
L_278491:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_278492+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0xB65
L_278492:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x40(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x127D,%r15
	je L_493454
L_278582:
	movq 0x8(%r14),%r15
	movq %r15,0x18(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r15),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_278583+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_493454:
L_278493:
	movq 0x0(%r14),%r15
	movq %r15,0x60(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (paren_27+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutSpec_0
.p2align 0x4
.long 0xC23
L_278583:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq (globalObjptr+0xA160)(%rip),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_278584+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4524
paren_27:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x10(%rbp)
	movl 0x68(%rbp),%r15d
	movl %r15d,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_278494
L_278580:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_278581+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_278581
.p2align 0x4
.long 0x452A
L_278581:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_278494:
	movq 0x10(%rbp),%r15
	movl 0x18(%rbp),%ecx
paren_28:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x10(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0xD0F8)(%rip),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_278495+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x8A6
L_278584:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_278585+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutSigexp_0
.p2align 0x4
.long 0x1B66
L_278495:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_278496+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4468
L_278585:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_278586
L_278596:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_278597+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_278597
.p2align 0x4
.long 0x452C
L_278597:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_278586:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x58(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x18(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x40(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_278587:
	addl 0x0(%r15),%ecx
	movl %ecx,0x10(%rbp)
	jo L_493459
L_278588:
	cmpq $0x1,%r14
	je L_493456
L_278589:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_278587
.p2align 0x4
L_493456:
L_278590:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_278591
L_278594:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_278595+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_278595
.p2align 0x4
.long 0x452B
L_278595:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_278591:
	movl 0x10(%rbp),%ecx
	testl %ecx,%ecx
	jz L_493457
L_278592:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp paren_28
.p2align 0x4
L_493457:
L_278593:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp paren_28
.p2align 0x4
L_493459:
L_278499:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xC23
L_278496:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_278497
L_278578:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_278579+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_278579
.p2align 0x4
.long 0x85C
L_278579:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_278497:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x58(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_278498:
	addl 0x0(%r15),%ecx
	movl %ecx,0x10(%rbp)
	jo L_278499
L_278500:
	cmpq $0x1,%r14
	je L_493461
L_278501:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_278498
.p2align 0x4
L_493461:
L_278502:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_278503
L_278576:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_278577+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_278577
.p2align 0x4
.long 0x4529
L_278577:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_278503:
	movl 0x10(%rbp),%ecx
	testl %ecx,%ecx
	jz L_493468
L_278504:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
L_278505:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x10(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq 0x30(%rbp),%r15
	cmpq $0x1,%r15
	je L_493463
L_278506:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xE2B,%r14
	je L_493462
L_278559:
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	movq (globalObjptr+0xA160)(%rip),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_278560+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_493462:
L_278507:
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	movq (globalObjptr+0x10A08)(%rip),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_278508+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_493463:
L_278574:
	movq $0x1,%r14
	xorl %ecx,%ecx
	xchgq %r14,%r15
L_278517:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x18(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_278518:
	addl 0x0(%r14),%ecx
	movl %ecx,0x10(%rbp)
	jo L_278499
L_278519:
	cmpq $0x1,%r15
	je L_493464
L_278520:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_278518
.p2align 0x4
L_493464:
L_278521:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_278522
L_278552:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_278553+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_278553
.p2align 0x4
.long 0x4526
L_278553:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_278522:
	movl 0x10(%rbp),%ecx
	testl %ecx,%ecx
	jz L_493465
L_278523:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
L_278524:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x10(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq 0x38(%rbp),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_278525+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutStrexp_0
.p2align 0x4
L_493465:
L_278551:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_278524
.p2align 0x4
L_493468:
L_278575:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_278505
.p2align 0x4
.long 0xC29
L_278560:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_278561+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutSigexp_0
.p2align 0x4
.long 0xC29
L_278508:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_278509+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutSigexp_0
.p2align 0x4
.long 0x4E5
L_278525:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	movl 0x28(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_278526
L_278549:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_278550+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_278550
.p2align 0x4
.long 0x4E1
L_278550:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_278526:
	movq $0xC3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x28(%rbp)
	addq $0x18,%r12
	movl 0x20(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_278527+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4525
L_278561:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_278562
L_278572:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_278573+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_278573
.p2align 0x4
.long 0x4528
L_278573:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_278562:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	addq $0x18,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_278563:
	addl 0x0(%r15),%ecx
	movl %ecx,0x18(%rbp)
	jo L_278499
L_278564:
	cmpq $0x1,%r14
	je L_493473
L_278565:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_278563
.p2align 0x4
L_493473:
L_278566:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_278567
L_278570:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_278571+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_278571
.p2align 0x4
.long 0x4527
L_278571:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_278567:
	movl 0x18(%rbp),%ecx
	testl %ecx,%ecx
	jz L_493474
L_278568:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_278517
.p2align 0x4
L_493474:
L_278569:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_278517
.p2align 0x4
.long 0x4525
L_278509:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_278510
L_278557:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_278558+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_278558
.p2align 0x4
.long 0x4528
L_278558:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_278510:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	addq $0x18,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_278511:
	addl 0x0(%r15),%ecx
	movl %ecx,0x18(%rbp)
	jo L_278499
L_278512:
	cmpq $0x1,%r14
	je L_493478
L_278513:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_278511
.p2align 0x4
L_493478:
L_278514:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_278515
L_278555:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_278556+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_278556
.p2align 0x4
.long 0x4527
L_278556:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_278515:
	movl 0x18(%rbp),%ecx
	testl %ecx,%ecx
	jz L_493479
L_278516:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_278517
.p2align 0x4
L_493479:
L_278554:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_278517
.p2align 0x4
.long 0x785
L_278527:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq (globalObjptr+0xCD40)(%rip),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_278528+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x97C
L_278528:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_278529
L_278547:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_278548+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_278548
.p2align 0x4
.long 0x73B
L_278548:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_278529:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x38(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x8(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_278530:
	addl 0x0(%r15),%ecx
	movl %ecx,0x24(%rbp)
	jo L_278499
L_278531:
	cmpq $0x1,%r14
	je L_493483
L_278532:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_278530
.p2align 0x4
L_493483:
L_278533:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_278534
L_278545:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_278546+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_278546
.p2align 0x4
.long 0x5F3
L_278546:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_278534:
	movl 0x24(%rbp),%ecx
	testl %ecx,%ecx
	jz L_493484
L_278535:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
L_278536:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B65,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x28(%rbp),%r13
	movq %r13,0x8(%r15)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movl 0x20(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r13,0x8(%rbp)
	addq $0x18,%r12
	addq $0x8,%rbp
	leaq (L_278537+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3782
.p2align 0x4
L_493484:
L_278544:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_278536
.p2align 0x4
.long 0x1
L_278537:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movl 0x8(%rbp),%r15d
	movl %r15d,0x0(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_278538
L_278542:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_278543+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_278543
.p2align 0x4
.long 0x494
L_278543:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_278538:
	movl 0x0(%rbp),%r15d
	testl %r15d,%r15d
	jz L_493489
L_278539:
	decl %r15d
	jo L_278499
L_278540:
	movq $0x1B67,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movl $0x1,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x8(%rbp),%r13
	movq %r13,0x8(%r14)
	movq %r14,0x0(%rbp)
	movl %r15d,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_493489:
L_278541:
	movq $0x1,0x0(%rbp)
	movl $0x0,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl x_2000
.hidden x_2000
x_2000:
L_278600:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x38(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_278601
L_279386:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_279387+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_279387
.p2align 0x4
.long 0x976
L_279387:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_278601:
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	movl 0x0(%r14),%r13d
	movl %r13d,0x40(%rbp)
	movq 0x8(%r14),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x48(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x50(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_278602+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp f_11
.p2align 0x4
.long 0x8F0
L_278602:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq $0x1,%r15
	je L_493729
L_278603:
	movq 0x8(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x68(%rbp)
	movq $0x1,0x70(%rbp)
.p2align 0x4,,0x7
L_278604:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_493728
.p2align 0x4,,0x7
L_278605:
	movq $0x2857,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x60(%rbp),%r14
	cmpq $0x1,%r14
	je L_493492
L_278606:
	movq %r15,0x70(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x60(%rbp)
	movq %r15,0x68(%rbp)
	jmp L_278604
.p2align 0x4
L_493492:
L_278607:
	movq 0x70(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq $0x1,0x70(%rbp)
	movl $0x0,0x44(%rbp)
.p2align 0x4,,0x7
L_278608:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_493727
.p2align 0x4,,0x7
L_278609:
	movl 0x44(%rbp),%r15d
	movl %r15d,%r14d
	incl %r14d
	jo L_493726
L_278611:
	movq $0x102F,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq 0x68(%rbp),%r15
	movq %r15,0x8(%r13)
	movq $0x285D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq 0x70(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x60(%rbp),%r13
	cmpq $0x1,%r13
	je L_493493
L_278612:
	movq %r15,0x70(%rbp)
	movl %r14d,0x44(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x60(%rbp)
	movq %r15,0x68(%rbp)
	jmp L_278608
.p2align 0x4
L_493493:
L_278613:
	movq %r15,0x60(%rbp)
L_278614:
	movq 0x60(%rbp),%r15
	cmpq $0x1,%r15
	je L_493725
L_278615:
	movq 0x8(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x70(%rbp)
	movq $0x1,0x78(%rbp)
.p2align 0x4,,0x7
L_278616:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_493724
.p2align 0x4,,0x7
L_278617:
	movq $0x285D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x68(%rbp),%r14
	cmpq $0x1,%r14
	je L_493494
L_278618:
	movq %r15,0x78(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x68(%rbp)
	movq %r15,0x70(%rbp)
	jmp L_278616
.p2align 0x4
L_493494:
L_278619:
	movq 0x78(%rbp),%r14
	movq %r14,0x68(%rbp)
	movq 0x70(%rbp),%r15
	movq $0x1,0x70(%rbp)
.p2align 0x4,,0x7
L_278620:
	movl 0x0(%r15),%r14d
	movl %r14d,0x44(%rbp)
	movq 0x8(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x78(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x80(%rbp)
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_493723
L_278621:
	movq 0x8(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x90(%rbp)
	movq $0x1,0x98(%rbp)
L_278622:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_493722
.p2align 0x4,,0x7
L_278623:
	movq $0x1EE5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x90(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x98(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x88(%rbp),%r14
	cmpq $0x1,%r14
	je L_493495
L_278624:
	movq %r15,0x98(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x88(%rbp)
	movq %r15,0x90(%rbp)
	jmp L_278622
.p2align 0x4
L_493495:
L_278625:
	movq 0x98(%rbp),%r14
	movq %r14,0x88(%rbp)
	movq 0x90(%rbp),%r15
	movq $0x1,0x90(%rbp)
L_278626:
	movq 0x0(%r15),%r13
	movq %r13,0x98(%rbp)
	movq 0x8(%r15),%r13
	cmpq $0x1,%r13
	je L_493721
L_278627:
	movq 0x8(%r13),%r14
	movl 0x0(%r13),%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_278628:
	cmpl $0x16,%ecx
	je L_493497
L_278629:
	cmpq $0x1,%r14
	je L_493496
L_278630:
	movl 0x0(%r14),%ecx
	movq 0x8(%r14),%r14
	jmp L_278628
.p2align 0x4
L_493496:
L_278632:
	movq %r15,0xB0(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0xA8(%rbp)
	addq $0xA8,%rbp
	leaq (L_278633+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp do_delete_1
.p2align 0x4
L_493497:
.p2align 0x4,,0x7
L_279372:
	cmpq $0x1,0x90(%rbp)
	jne L_493719
L_279373:
	movq $0x1,%r15
.p2align 0x4,,0x7
L_279356:
	movq 0x88(%rbp),%r14
	cmpq $0x1,%r14
	je L_493498
L_279357:
	movq %r15,0x90(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x88(%rbp)
	jmp L_278626
.p2align 0x4
L_493498:
L_278661:
	cmpq $0x1,0x70(%rbp)
	je L_493717
L_278662:
	cmpq $0x1,%r15
	je L_493716
L_278663:
	movq 0x8(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x80(%rbp)
	movq $0x1,0x88(%rbp)
L_278664:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_493715
.p2align 0x4,,0x7
L_278665:
	movq $0x2861,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x80(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x88(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x78(%rbp),%r14
	cmpq $0x1,%r14
	je L_493499
L_278666:
	movq %r15,0x88(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x78(%rbp)
	movq %r15,0x80(%rbp)
	jmp L_278664
.p2align 0x4
L_493499:
L_278667:
	movq 0x80(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x70(%rbp)
L_278668:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_493714
.p2align 0x4,,0x7
L_278669:
	movq $0x2861,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x80(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x70(%rbp),%r14
	cmpq $0x1,%r14
	je L_493500
L_278670:
	movq %r15,0x80(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x70(%rbp)
	movq %r15,0x78(%rbp)
	jmp L_278668
.p2align 0x4
L_493500:
L_278672:
	movq 0x68(%rbp),%r14
	cmpq $0x1,%r14
	je L_493501
L_278673:
	movq %r15,0x70(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x68(%rbp)
	jmp L_278620
.p2align 0x4
L_493501:
L_278674:
	movq %r15,0x18(%rbp)
L_278675:
	movq 0x60(%rbp),%r15
	cmpq $0x1,%r15
	je L_493713
L_278676:
	movq 0x8(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x70(%rbp)
	movq $0x1,0x78(%rbp)
.p2align 0x4,,0x7
L_278677:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_493712
.p2align 0x4,,0x7
L_278678:
	movq $0x285D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x68(%rbp),%r14
	cmpq $0x1,%r14
	je L_493502
L_278679:
	movq %r15,0x78(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x68(%rbp)
	movq %r15,0x70(%rbp)
	jmp L_278677
.p2align 0x4
L_493502:
L_278680:
	movq 0x78(%rbp),%r14
	movq %r14,0x68(%rbp)
	movq 0x70(%rbp),%r15
	movq $0x1,0x70(%rbp)
.p2align 0x4,,0x7
L_278681:
	movl 0x0(%r15),%r14d
	movl %r14d,0x44(%rbp)
	movq 0x8(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x78(%rbp)
	movq 0x8(%r14),%r11
	movq %r11,0x80(%rbp)
	movq 0x8(%r13),%r14
	movq 0x8(%r14),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x88(%rbp)
	cmpq $0x1,0x20(%rbp)
	jne L_493702
L_279337:
	movq $0x1,%r15
.p2align 0x4,,0x7
L_278705:
	cmpq $0x1,0x70(%rbp)
	je L_493700
L_278706:
	cmpq $0x1,%r15
	je L_493699
L_278707:
	movq 0x8(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x80(%rbp)
	movq $0x1,0x88(%rbp)
L_278708:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_493698
.p2align 0x4,,0x7
L_278709:
	movq $0x2861,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x80(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x88(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x78(%rbp),%r14
	cmpq $0x1,%r14
	je L_493503
L_278710:
	movq %r15,0x88(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x78(%rbp)
	movq %r15,0x80(%rbp)
	jmp L_278708
.p2align 0x4
L_493503:
L_278711:
	movq 0x80(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x70(%rbp)
L_278712:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_493697
.p2align 0x4,,0x7
L_278713:
	movq $0x2861,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x80(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x70(%rbp),%r14
	cmpq $0x1,%r14
	je L_493504
L_278714:
	movq %r15,0x80(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x70(%rbp)
	movq %r15,0x78(%rbp)
	jmp L_278712
.p2align 0x4
L_493504:
L_278716:
	movq 0x68(%rbp),%r14
	cmpq $0x1,%r14
	je L_493505
L_278717:
	movq %r15,0x70(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x68(%rbp)
	jmp L_278681
.p2align 0x4
L_493505:
L_278718:
	movq %r15,0x68(%rbp)
L_278719:
	movq 0x60(%rbp),%r15
	cmpq $0x1,%r15
	je L_493696
L_278720:
	movq 0x8(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x78(%rbp)
	movq $0x1,0x80(%rbp)
.p2align 0x4,,0x7
L_278721:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_493695
.p2align 0x4,,0x7
L_278722:
	movq $0x285D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x80(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x70(%rbp),%r14
	cmpq $0x1,%r14
	je L_493506
L_278723:
	movq %r15,0x80(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x70(%rbp)
	movq %r15,0x78(%rbp)
	jmp L_278721
.p2align 0x4
L_493506:
L_278724:
	movq 0x80(%rbp),%r14
	movq %r14,0x70(%rbp)
	movq 0x78(%rbp),%r15
	movq $0x1,0x78(%rbp)
.p2align 0x4,,0x7
L_278725:
	movl 0x0(%r15),%r14d
	movl %r14d,0x44(%rbp)
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x80(%rbp)
	movq 0x0(%r14),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x88(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x90(%rbp)
	movq 0x8(%r11),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x98(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0xA0(%rbp)
	cmpl $0x16,0x0(%r11)
	je L_493693
L_278726:
	cmpq $0x1,0x20(%rbp)
	jne L_493690
L_279303:
	movq $0x1,%r15
.p2align 0x4,,0x7
L_278751:
	cmpq $0x1,0x78(%rbp)
	je L_493688
L_278752:
	cmpq $0x1,%r15
	je L_493687
L_278753:
	movq 0x8(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x88(%rbp)
	movq $0x1,0x90(%rbp)
L_278754:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_493686
.p2align 0x4,,0x7
L_278755:
	movq $0x2861,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x88(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x90(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x80(%rbp),%r14
	cmpq $0x1,%r14
	je L_493507
L_278756:
	movq %r15,0x90(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x80(%rbp)
	movq %r15,0x88(%rbp)
	jmp L_278754
.p2align 0x4
L_493507:
L_278757:
	movq 0x88(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0x78(%rbp)
L_278758:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_493685
.p2align 0x4,,0x7
L_278759:
	movq $0x2861,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x80(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x88(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x78(%rbp),%r14
	cmpq $0x1,%r14
	je L_493508
L_278760:
	movq %r15,0x88(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x78(%rbp)
	movq %r15,0x80(%rbp)
	jmp L_278758
.p2align 0x4
L_493508:
L_278762:
	movq 0x70(%rbp),%r14
	cmpq $0x1,%r14
	je L_493509
L_278763:
	movq %r15,0x78(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x70(%rbp)
	jmp L_278725
.p2align 0x4
L_493509:
L_278764:
	movq %r15,0x20(%rbp)
L_278765:
	movq 0x60(%rbp),%r15
	cmpq $0x1,%r15
	je L_493684
L_278766:
	movq 0x8(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x78(%rbp)
	movq $0x1,0x80(%rbp)
.p2align 0x4,,0x7
L_278767:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_493683
.p2align 0x4,,0x7
L_278768:
	movq $0x285D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x80(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x70(%rbp),%r14
	cmpq $0x1,%r14
	je L_493510
L_278769:
	movq %r15,0x80(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x70(%rbp)
	movq %r15,0x78(%rbp)
	jmp L_278767
.p2align 0x4
L_493510:
L_278770:
	movq 0x80(%rbp),%r14
	movq %r14,0x70(%rbp)
	movq 0x78(%rbp),%r15
	movq $0x1,0x78(%rbp)
.p2align 0x4,,0x7
L_278771:
	movl 0x0(%r15),%r14d
	movl %r14d,0x44(%rbp)
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x80(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x90(%rbp)
	movq 0x8(%r13),%r11
	movq 0x8(%r11),%r10
	movq 0x0(%r10),%r9
	movq %r9,0x98(%rbp)
	movq 0x8(%r10),%r9
	movq %r9,0x88(%rbp)
	movq $0x1,0xA0(%rbp)
	movl $0x1,0xA8(%rbp)
.p2align 0x4,,0x7
loop_3343:
	movl 0xA8(%rbp),%r14d
	testl %r14d,%r14d
	jz L_493679
L_278772:
	movq 0x90(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x98(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0xB0(%rbp)
	movq 0x8(%r13),%r14
	movq 0x0(%r14),%r11
	movq %r11,0xB8(%rbp)
	cmpl $0x16,0x0(%r13)
	jne L_493676
L_278780:
	cmpq $0x1,0x78(%rbp)
	jne L_493674
L_279241:
	movq $0x1,%r15
.p2align 0x4,,0x7
L_279242:
	movq 0x70(%rbp),%r14
	cmpq $0x1,%r14
	je L_493511
L_279243:
	movq %r15,0x78(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x70(%rbp)
	jmp L_278771
.p2align 0x4
L_493511:
L_279244:
	movq %r15,0x70(%rbp)
L_278785:
	movq 0x60(%rbp),%r15
	cmpq $0x1,%r15
	je L_493673
L_278786:
	movq 0x8(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x80(%rbp)
	movq $0x1,0x88(%rbp)
.p2align 0x4,,0x7
L_278787:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_493672
.p2align 0x4,,0x7
L_278788:
	movq $0x285D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x80(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x88(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x78(%rbp),%r14
	cmpq $0x1,%r14
	je L_493512
L_278789:
	movq %r15,0x88(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x78(%rbp)
	movq %r15,0x80(%rbp)
	jmp L_278787
.p2align 0x4
L_493512:
L_278790:
	movq 0x88(%rbp),%r14
	movq %r14,0x78(%rbp)
	movq 0x80(%rbp),%r15
	movq $0x1,0x80(%rbp)
.p2align 0x4,,0x7
L_278791:
	movl 0x0(%r15),%r14d
	movl %r14d,0x44(%rbp)
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x88(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x98(%rbp)
	movq 0x8(%r13),%r11
	movq 0x8(%r11),%r10
	movq 0x0(%r10),%r9
	movq %r9,0xA0(%rbp)
	movq 0x8(%r10),%r9
	movq %r9,0x90(%rbp)
	movq $0x1,0xA8(%rbp)
	movl $0x2,0xB0(%rbp)
.p2align 0x4,,0x7
loop_3344:
	movl 0xB0(%rbp),%r14d
	testl %r14d,%r14d
	jz L_493668
L_278792:
	movq 0x98(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0xA0(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0xB8(%rbp)
	movq 0x8(%r13),%r14
	movq 0x0(%r14),%r11
	movq %r11,0xC0(%rbp)
	cmpl $0x16,0x0(%r13)
	jne L_493665
L_278800:
	cmpq $0x1,0x80(%rbp)
	jne L_493663
L_279207:
	movq $0x1,%r15
.p2align 0x4,,0x7
L_279208:
	movq 0x78(%rbp),%r14
	cmpq $0x1,%r14
	je L_493513
L_279209:
	movq %r15,0x80(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x78(%rbp)
	jmp L_278791
.p2align 0x4
L_493513:
L_279210:
	movq %r15,0x78(%rbp)
L_278805:
	movq 0x60(%rbp),%r15
	cmpq $0x1,%r15
	je L_493662
L_278806:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x60(%rbp)
	movq %r14,0x80(%rbp)
	movq $0x1,0x88(%rbp)
.p2align 0x4,,0x7
L_278807:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_493661
.p2align 0x4,,0x7
L_278808:
	movq $0x285D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x80(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x88(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x60(%rbp),%r14
	cmpq $0x1,%r14
	je L_493514
L_278809:
	movq %r15,0x88(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x60(%rbp)
	movq %r15,0x80(%rbp)
	jmp L_278807
.p2align 0x4
L_493514:
L_278810:
	movq 0x88(%rbp),%r14
	movq %r14,0x60(%rbp)
	movq 0x80(%rbp),%r15
	movq $0x1,0x80(%rbp)
.p2align 0x4,,0x7
L_278811:
	movl 0x0(%r15),%r14d
	movl %r14d,0x44(%rbp)
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x88(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x98(%rbp)
	movq 0x8(%r13),%r11
	movq 0x8(%r11),%r10
	movq 0x0(%r10),%r9
	movq %r9,0xA0(%rbp)
	movq 0x8(%r10),%r9
	movq %r9,0x90(%rbp)
	movq $0x1,0xA8(%rbp)
	movl $0x3,0xB0(%rbp)
.p2align 0x4,,0x7
loop_3345:
	movl 0xB0(%rbp),%r14d
	testl %r14d,%r14d
	jz L_493657
L_278812:
	movq 0x98(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0xA0(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0xB8(%rbp)
	movq 0x8(%r13),%r14
	movq 0x0(%r14),%r11
	movq %r11,0xC0(%rbp)
	cmpl $0x16,0x0(%r13)
	jne L_493654
L_278820:
	cmpq $0x1,0x80(%rbp)
	jne L_493652
L_279173:
	movq $0x1,%r15
.p2align 0x4,,0x7
L_279174:
	movq 0x60(%rbp),%r14
	cmpq $0x1,%r14
	je L_493515
L_279175:
	movq %r15,0x80(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x60(%rbp)
	jmp L_278811
.p2align 0x4
L_493515:
L_279176:
	movq %r15,0x60(%rbp)
L_278825:
	cmpq $0x1,0x60(%rbp)
	je L_493650
L_278826:
	movq 0x78(%rbp),%r15
	cmpq $0x1,%r15
	je L_493649
L_278827:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x78(%rbp)
	movq %r14,0x80(%rbp)
	movq $0x1,0x88(%rbp)
.p2align 0x4,,0x7
L_278828:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_493648
.p2align 0x4,,0x7
L_278829:
	movq $0x2861,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x80(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x88(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x78(%rbp),%r14
	cmpq $0x1,%r14
	je L_493516
L_278830:
	movq %r15,0x88(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x78(%rbp)
	movq %r15,0x80(%rbp)
	jmp L_278828
.p2align 0x4
L_493516:
L_278831:
	movq 0x80(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x60(%rbp)
.p2align 0x4,,0x7
L_278832:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_493647
.p2align 0x4,,0x7
L_278833:
	movq $0x2861,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x80(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x60(%rbp),%r14
	cmpq $0x1,%r14
	je L_493517
L_278834:
	movq %r15,0x80(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x60(%rbp)
	movq %r15,0x78(%rbp)
	jmp L_278832
.p2align 0x4
L_493517:
L_278836:
	cmpq $0x1,%r15
	je L_493645
L_278837:
	movq %r15,0x60(%rbp)
L_278838:
	movq 0x70(%rbp),%r15
	cmpq $0x1,%r15
	je L_493644
L_278839:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x70(%rbp)
	movq %r14,0x78(%rbp)
	movq $0x1,0x80(%rbp)
.p2align 0x4,,0x7
L_278840:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_493643
.p2align 0x4,,0x7
L_278841:
	movq $0x2861,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x80(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x70(%rbp),%r14
	cmpq $0x1,%r14
	je L_493518
L_278842:
	movq %r15,0x80(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x70(%rbp)
	movq %r15,0x78(%rbp)
	jmp L_278840
.p2align 0x4
L_493518:
L_278843:
	movq 0x78(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x60(%rbp)
.p2align 0x4,,0x7
L_278844:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_493642
.p2align 0x4,,0x7
L_278845:
	movq $0x2861,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x60(%rbp),%r14
	cmpq $0x1,%r14
	je L_493519
L_278846:
	movq %r15,0x78(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x60(%rbp)
	movq %r15,0x70(%rbp)
	jmp L_278844
.p2align 0x4
L_493519:
L_278848:
	cmpq $0x1,%r15
	je L_493640
L_278849:
	movq %r15,0x60(%rbp)
L_278850:
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je L_493639
L_278851:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x20(%rbp)
	movq %r14,0x70(%rbp)
	movq $0x1,0x78(%rbp)
.p2align 0x4,,0x7
L_278852:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_493638
.p2align 0x4,,0x7
L_278853:
	movq $0x2861,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_493520
L_278854:
	movq %r15,0x78(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x70(%rbp)
	jmp L_278852
.p2align 0x4
L_493520:
L_278855:
	movq 0x78(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x60(%rbp),%r15
	movq 0x70(%rbp),%r14
	movq %r14,0x60(%rbp)
	movq %r15,0x70(%rbp)
.p2align 0x4,,0x7
L_278856:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_493637
.p2align 0x4,,0x7
L_278857:
	movq $0x2861,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_493521
L_278858:
	movq %r15,0x70(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x60(%rbp)
	jmp L_278856
.p2align 0x4
L_493521:
L_278860:
	cmpq $0x1,%r15
	je L_493635
L_278861:
	movq %r15,0x20(%rbp)
L_278862:
	movq 0x68(%rbp),%r15
	cmpq $0x1,%r15
	je L_493634
L_278863:
	movq 0x8(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x0(%r15),%r15
	movq %r15,0x68(%rbp)
	movq $0x1,0x70(%rbp)
.p2align 0x4,,0x7
L_278864:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_493633
.p2align 0x4,,0x7
L_278865:
	movq $0x2861,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x60(%rbp),%r14
	cmpq $0x1,%r14
	je L_493522
L_278866:
	movq %r15,0x70(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x60(%rbp)
	movq %r15,0x68(%rbp)
	jmp L_278864
.p2align 0x4
L_493522:
L_278867:
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x20(%rbp)
.p2align 0x4,,0x7
L_278868:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_493632
.p2align 0x4,,0x7
L_278869:
	movq $0x2861,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_493523
L_278870:
	movq %r15,0x68(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x60(%rbp)
	jmp L_278868
.p2align 0x4
L_493523:
L_278872:
	cmpq $0x1,%r15
	je L_493630
L_278873:
	movq %r15,0x20(%rbp)
L_278874:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_493629
L_278875:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x18(%rbp)
	movq %r14,0x60(%rbp)
	movq $0x1,0x68(%rbp)
.p2align 0x4,,0x7
L_278876:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_493628
.p2align 0x4,,0x7
L_278877:
	movq $0x2861,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_493524
L_278878:
	movq %r15,0x68(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	movq %r15,0x60(%rbp)
	jmp L_278876
.p2align 0x4
L_493524:
L_278879:
	movq 0x68(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x20(%rbp),%r15
	movq 0x60(%rbp),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x60(%rbp)
.p2align 0x4,,0x7
L_278880:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_493627
.p2align 0x4,,0x7
L_278881:
	movq $0x2861,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_493525
L_278882:
	movq %r15,0x60(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_278880
.p2align 0x4
L_493525:
L_278884:
	cmpq $0x1,%r15
	je L_493626
L_278885:
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x60(%rbp)
	movq $0x1,0x68(%rbp)
.p2align 0x4,,0x7
L_278886:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_493625
.p2align 0x4,,0x7
L_278887:
	movq $0x2861,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_493526
L_278888:
	movq %r15,0x68(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_278886
.p2align 0x4
L_493526:
L_278889:
	movq 0x60(%rbp),%r13
	xchgq %r13,%r14
L_278890:
	cmpq $0x1,%r15
	je L_493624
L_278891:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_278892:
	movl 0x4(%r13),%r11d
	cmpl %ecx,%r11d
	jl L_493622
L_278893:
	cmpq $0x1,%r15
	je L_493527
L_278894:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movl %r11d,%ecx
	jmp L_278892
.p2align 0x4
L_493527:
L_278895:
	movl %r11d,0x18(%rbp)
L_278896:
	cmpq $0x1,%r14
	je L_279007
L_278897:
	movq 0x8(%r14),%r15
	movq %r15,0x20(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x60(%rbp)
	movq $0x1,0x68(%rbp)
.p2align 0x4,,0x7
L_278898:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_493620
.p2align 0x4,,0x7
L_278899:
	movq $0x2861,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_493528
L_278900:
	movq %r15,0x68(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x60(%rbp)
	jmp L_278898
.p2align 0x4
L_493528:
L_278901:
	movq 0x68(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq $0x1,0x68(%rbp)
.p2align 0x4,,0x7
L_278902:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_493619
.p2align 0x4,,0x7
L_278903:
	movq 0x60(%rbp),%r14
	movl 0x18(%rbp),%r13d
	cmpl %r13d,0x4(%r14)
	je L_493613
L_278904:
	movq 0x68(%rbp),%r15
	cmpq $0x1,%r15
	je L_493611
L_278905:
L_278906:
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_493529
L_278907:
	movq %r15,0x68(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x60(%rbp)
	jmp L_278902
.p2align 0x4
L_493529:
L_278909:
	cmpq $0x1,%r15
	je L_493533
L_278910:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r13,0x18(%rbp)
	cmpq $0x1,%r14
	je L_278915
L_278911:
	movq 0x8(%r14),%r15
.p2align 0x4,,0x7
L_278912:
	cmpq $0x1,%r15
	je L_493530
L_278913:
	movq 0x8(%r15),%r15
	jmp L_278912
.p2align 0x4
L_493530:
L_278915:
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x18(%r15),%r13
	movq %r13,0x48(%rbp)
	movq 0x20(%r15),%r11
	movq %r11,0x50(%rbp)
	cmpq $0x1,%r14
	je L_493531
L_278916:
	cmpq $0x1,%r13
	jne x_2151
L_278998:
	movq %r14,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_278999+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2153
.p2align 0x4
x_2151:
x_919:
	movq 0x40(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_278917+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2153
.p2align 0x4
L_493531:
L_279002:
	movq %r13,%r15
	andq $0x3,%r15
	jnz x_919
L_279003:
	movq %r13,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_279004+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2153
.p2align 0x4
L_493533:
L_279007:
	movl 0x40(%rbp),%eax
	cmpq $0x4B,%rax
	ja L_493534
	leaq jumpTable_766(%rip),%rbx
	jmp *(%rbx,%rax,8)
.data
.p2align 0x4
jumpTable_766:
.quad L_493610,L_493609,L_493608,L_493607,L_493606,L_493605,L_493604,L_493603,L_493602,L_493601,L_493600,L_493599,L_493598,L_493597,L_493596,L_493595,L_493594,L_493593,L_493592,L_493591,L_493590,L_493589,L_493588,L_493587,L_493586,L_493585,L_493584,L_493583,L_493582,L_493581,L_493580,L_493579,L_493578,L_493577,L_493576,L_493575,L_493574,L_493573,L_493572,L_493571,L_493570,L_493569,L_493568,L_493567,L_493566,L_493565,L_493564,L_493563,L_493562,L_493561,L_493560,L_493559,L_493558,L_493557,L_493556,L_493555,L_493554,L_493553,L_493552,L_493551,L_493550,L_493549,L_493548,L_493547,L_493546,L_493545,L_493544,L_493543,L_493542,L_493541,L_493540,L_493539,L_493538,L_493537,L_493536,L_493535
.text
.p2align 0x4
L_493534:
L_279008:
	movq (globalObjptr+0x10460)(%rip),%r15
L_279009:
	movq %r15,0x60(%rbp)
	leaq L_279021(%rip),%r15
	movq %r15,0x30(%rbp)
	movq %rbp,%r15
	addq $0x38,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x10530)(%rip),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_279010+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_493535:
L_279097:
	movq (globalObjptr+0x10508)(%rip),%r15
	jmp L_279009
.p2align 0x4
L_493536:
L_279096:
	movq (globalObjptr+0x10C00)(%rip),%r15
	jmp L_279009
.p2align 0x4
L_493537:
L_279095:
	movq (globalObjptr+0x10BF8)(%rip),%r15
	jmp L_279009
.p2align 0x4
L_493538:
L_279094:
	movq (globalObjptr+0x10BF0)(%rip),%r15
	jmp L_279009
.p2align 0x4
L_493539:
L_279093:
	movq (globalObjptr+0x10BE8)(%rip),%r15
	jmp L_279009
.p2align 0x4
L_493540:
L_279092:
	movq (globalObjptr+0x10BE0)(%rip),%r15
	jmp L_279009
.p2align 0x4
L_493541:
L_279091:
	movq (globalObjptr+0x10BD8)(%rip),%r15
	jmp L_279009
.p2align 0x4
L_493542:
L_279090:
	movq (globalObjptr+0x10BD0)(%rip),%r15
	jmp L_279009
.p2align 0x4
L_493543:
L_279089:
	movq (globalObjptr+0x10BC8)(%rip),%r15
	jmp L_279009
.p2align 0x4
L_493544:
L_279088:
	movq (globalObjptr+0x10BC0)(%rip),%r15
	jmp L_279009
.p2align 0x4
L_493545:
L_279087:
	movq (globalObjptr+0x10BB8)(%rip),%r15
	jmp L_279009
.p2align 0x4
L_493546:
L_279086:
	movq (globalObjptr+0x10BB0)(%rip),%r15
	jmp L_279009
.p2align 0x4
L_493547:
L_279085:
	movq (globalObjptr+0x10BA8)(%rip),%r15
	jmp L_279009
.p2align 0x4
L_493548:
L_279084:
	movq (globalObjptr+0x10BA0)(%rip),%r15
	jmp L_279009
.p2align 0x4
L_493549:
L_279083:
	movq (globalObjptr+0x10B98)(%rip),%r15
	jmp L_279009
.p2align 0x4
L_493550:
L_279082:
	movq (globalObjptr+0x10B90)(%rip),%r15
	jmp L_279009
.p2align 0x4
L_493551:
L_279081:
	movq (globalObjptr+0x104F8)(%rip),%r15
	jmp L_279009
.p2align 0x4
L_493552:
L_279080:
	movq (globalObjptr+0x10B88)(%rip),%r15
	jmp L_279009
.p2align 0x4
L_493553:
L_279079:
	movq (globalObjptr+0x104F0)(%rip),%r15
	jmp L_279009
.p2align 0x4
L_493554:
L_279078:
	movq (globalObjptr+0x10B80)(%rip),%r15
	jmp L_279009
.p2align 0x4
L_493555:
L_279077:
	movq (globalObjptr+0x10B78)(%rip),%r15
	jmp L_279009
.p2align 0x4
L_493556:
L_279076:
	movq (globalObjptr+0x10490)(%rip),%r15
	jmp L_279009
.p2align 0x4
L_493557:
L_279075:
	movq (globalObjptr+0x10B70)(%rip),%r15
	jmp L_279009
.p2align 0x4
L_493558:
L_279074:
	movq (globalObjptr+0x10B68)(%rip),%r15
	jmp L_279009
.p2align 0x4
L_493559:
L_279073:
	movq (globalObjptr+0x10B60)(%rip),%r15
	jmp L_279009
.p2align 0x4
L_493560:
L_279072:
	movq (globalObjptr+0x10B58)(%rip),%r15
	jmp L_279009
.p2align 0x4
L_493561:
L_279071:
	movq (globalObjptr+0x10B50)(%rip),%r15
	jmp L_279009
.p2align 0x4
L_493562:
L_279070:
	movq (globalObjptr+0x10B48)(%rip),%r15
	jmp L_279009
.p2align 0x4
L_493563:
L_279069:
	movq (globalObjptr+0x104E8)(%rip),%r15
	jmp L_279009
.p2align 0x4
L_493564:
L_279068:
	movq (globalObjptr+0x10B40)(%rip),%r15
	jmp L_279009
.p2align 0x4
L_493565:
L_279067:
	movq (globalObjptr+0x10B38)(%rip),%r15
	jmp L_279009
.p2align 0x4
L_493566:
L_279066:
	movq (globalObjptr+0x10B30)(%rip),%r15
	jmp L_279009
.p2align 0x4
L_493567:
L_279065:
	movq (globalObjptr+0x10B28)(%rip),%r15
	jmp L_279009
.p2align 0x4
L_493568:
L_279064:
	movq (globalObjptr+0x10B20)(%rip),%r15
	jmp L_279009
.p2align 0x4
L_493569:
L_279063:
	movq (globalObjptr+0x104E0)(%rip),%r15
	jmp L_279009
.p2align 0x4
L_493570:
L_279062:
	movq (globalObjptr+0x104D8)(%rip),%r15
	jmp L_279009
.p2align 0x4
L_493571:
L_279061:
	movq (globalObjptr+0x10B18)(%rip),%r15
	jmp L_279009
.p2align 0x4
L_493572:
L_279060:
	movq (globalObjptr+0x10B10)(%rip),%r15
	jmp L_279009
.p2align 0x4
L_493573:
L_279059:
	movq (globalObjptr+0x10B08)(%rip),%r15
	jmp L_279009
.p2align 0x4
L_493574:
L_279058:
	movq (globalObjptr+0x10B00)(%rip),%r15
	jmp L_279009
.p2align 0x4
L_493575:
L_279057:
	movq (globalObjptr+0x10AF8)(%rip),%r15
	jmp L_279009
.p2align 0x4
L_493576:
L_279056:
	movq (globalObjptr+0x104D0)(%rip),%r15
	jmp L_279009
.p2align 0x4
L_493577:
L_279055:
	movq (globalObjptr+0x10AF0)(%rip),%r15
	jmp L_279009
.p2align 0x4
L_493578:
L_279054:
	movq (globalObjptr+0x10AE8)(%rip),%r15
	jmp L_279009
.p2align 0x4
L_493579:
L_279053:
	movq (globalObjptr+0x10AE0)(%rip),%r15
	jmp L_279009
.p2align 0x4
L_493580:
L_279052:
	movq (globalObjptr+0x104C8)(%rip),%r15
	jmp L_279009
.p2align 0x4
L_493581:
L_279051:
	movq (globalObjptr+0x10AD8)(%rip),%r15
	jmp L_279009
.p2align 0x4
L_493582:
L_279050:
	movq (globalObjptr+0x10AD0)(%rip),%r15
	jmp L_279009
.p2align 0x4
L_493583:
L_279049:
	movq (globalObjptr+0x10AC8)(%rip),%r15
	jmp L_279009
.p2align 0x4
L_493584:
L_279048:
	movq (globalObjptr+0x10AC0)(%rip),%r15
	jmp L_279009
.p2align 0x4
L_493585:
L_279047:
	movq (globalObjptr+0x10AB8)(%rip),%r15
	jmp L_279009
.p2align 0x4
L_493586:
L_279046:
	movq (globalObjptr+0x10AB0)(%rip),%r15
	jmp L_279009
.p2align 0x4
L_493587:
L_279045:
	movq (globalObjptr+0x104C0)(%rip),%r15
	jmp L_279009
.p2align 0x4
L_493588:
L_279044:
	movq (globalObjptr+0x10498)(%rip),%r15
	jmp L_279009
.p2align 0x4
L_493589:
L_279043:
	movq (globalObjptr+0x104B8)(%rip),%r15
	jmp L_279009
.p2align 0x4
L_493590:
L_279042:
	movq (globalObjptr+0x10AA8)(%rip),%r15
	jmp L_279009
.p2align 0x4
L_493591:
L_279041:
	movq (globalObjptr+0x10AA0)(%rip),%r15
	jmp L_279009
.p2align 0x4
L_493592:
L_279040:
	movq (globalObjptr+0x10A98)(%rip),%r15
	jmp L_279009
.p2align 0x4
L_493593:
L_279039:
	movq (globalObjptr+0x10488)(%rip),%r15
	jmp L_279009
.p2align 0x4
L_493594:
L_279038:
	movq (globalObjptr+0x10A90)(%rip),%r15
	jmp L_279009
.p2align 0x4
L_493595:
L_279037:
	movq (globalObjptr+0x10A88)(%rip),%r15
	jmp L_279009
.p2align 0x4
L_493596:
L_279036:
	movq (globalObjptr+0x10A80)(%rip),%r15
	jmp L_279009
.p2align 0x4
L_493597:
L_279035:
	movq (globalObjptr+0x10A78)(%rip),%r15
	jmp L_279009
.p2align 0x4
L_493598:
L_279034:
	movq (globalObjptr+0x10A70)(%rip),%r15
	jmp L_279009
.p2align 0x4
L_493599:
L_279033:
	movq (globalObjptr+0x10A68)(%rip),%r15
	jmp L_279009
.p2align 0x4
L_493600:
L_279032:
	movq (globalObjptr+0x10A60)(%rip),%r15
	jmp L_279009
.p2align 0x4
L_493601:
L_279031:
	movq (globalObjptr+0x10A58)(%rip),%r15
	jmp L_279009
.p2align 0x4
L_493602:
L_279030:
	movq (globalObjptr+0x104A0)(%rip),%r15
	jmp L_279009
.p2align 0x4
L_493603:
L_279029:
	movq (globalObjptr+0x10A50)(%rip),%r15
	jmp L_279009
.p2align 0x4
L_493604:
L_279028:
	movq (globalObjptr+0x10A48)(%rip),%r15
	jmp L_279009
.p2align 0x4
L_493605:
L_279027:
	movq (globalObjptr+0x10A40)(%rip),%r15
	jmp L_279009
.p2align 0x4
L_493606:
L_279026:
	movq (globalObjptr+0x10518)(%rip),%r15
	jmp L_279009
.p2align 0x4
L_493607:
L_279025:
	movq (globalObjptr+0x10A38)(%rip),%r15
	jmp L_279009
.p2align 0x4
L_493608:
L_279024:
	movq (globalObjptr+0x10A30)(%rip),%r15
	jmp L_279009
.p2align 0x4
L_493609:
L_279023:
	movq (globalObjptr+0x10A28)(%rip),%r15
	jmp L_279009
.p2align 0x4
L_493610:
L_279022:
	movq (globalObjptr+0x10A20)(%rip),%r15
	jmp L_279009
.p2align 0x4
L_493611:
L_279098:
	movq $0x1,%r14
	xchgq %r14,%r15
L_279099:
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_278909
L_279100:
	movq %r15,0x68(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x60(%rbp)
	jmp L_278902
.p2align 0x4
L_493613:
L_279102:
	movq $0x2861,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	cmpq $0x1,0x68(%rbp)
	je L_279099
L_279103:
	movq %r14,0x70(%rbp)
	movq $0x1,0x78(%rbp)
	movq $0x1,0x60(%rbp)
L_279104:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_493617
.p2align 0x4,,0x7
L_279105:
	movq $0x2861,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x60(%rbp),%r14
	cmpq $0x1,%r14
	je L_493614
L_279106:
	movq %r15,0x78(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x60(%rbp)
	movq %r15,0x70(%rbp)
	jmp L_279104
.p2align 0x4
L_493614:
L_279107:
	movq 0x78(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x68(%rbp),%r15
	movq 0x70(%rbp),%r14
	movq %r14,0x68(%rbp)
	movq %r15,0x70(%rbp)
L_279108:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_493616
.p2align 0x4,,0x7
L_279109:
	movq $0x2861,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x60(%rbp),%r14
	cmpq $0x1,%r14
	je L_278906
L_279110:
	movq %r15,0x70(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x60(%rbp)
	movq %r15,0x68(%rbp)
	jmp L_279108
.p2align 0x4
L_493616:
L_279112:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_279113+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_279113
.p2align 0x4
.long 0x453C
L_279113:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	jmp L_279109
.p2align 0x4
L_493617:
L_279114:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_279115+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_279115
.p2align 0x4
.long 0x453D
L_279115:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	jmp L_279105
.p2align 0x4
L_493619:
L_279117:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_279118+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_279118
.p2align 0x4
.long 0x453E
L_279118:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	jmp L_278903
.p2align 0x4
L_493620:
L_279119:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_279120+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_279120
.p2align 0x4
.long 0x453E
L_279120:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	jmp L_278899
.p2align 0x4
L_493622:
L_279122:
	cmpq $0x1,%r15
	je L_493623
L_279123:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	jmp L_278892
.p2align 0x4
L_493623:
L_279124:
	movl %ecx,0x18(%rbp)
	jmp L_278896
.p2align 0x4
L_493624:
L_279125:
	movl $0x0,0x18(%rbp)
	jmp L_278896
.p2align 0x4
L_493625:
L_279126:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_279127+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_279127
.p2align 0x4
.long 0x453F
L_279127:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	jmp L_278887
.p2align 0x4
L_493626:
L_279128:
	movq $0x1,%r13
	movq %r15,%r14
	movq %r13,%r15
	jmp L_278890
.p2align 0x4
L_493627:
L_279129:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_279130+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_279130
.p2align 0x4
.long 0x44F7
L_279130:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_278881
.p2align 0x4
L_493628:
L_279131:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_279132+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_279132
.p2align 0x4
.long 0x453F
L_279132:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	jmp L_278877
.p2align 0x4
L_493629:
L_279133:
	movq 0x20(%rbp),%r14
	xchgq %r14,%r15
	jmp L_278884
.p2align 0x4
L_493630:
L_279135:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_493631
L_279136:
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x60(%rbp)
	movq 0x8(%r15),%r15
	movq %r15,0x18(%rbp)
	movq $0x1,0x68(%rbp)
	jmp L_278886
.p2align 0x4
L_493631:
L_279137:
	movq $0x1,%r13
	movq %r15,%r14
	movq %r13,%r15
	jmp L_278890
.p2align 0x4
L_493632:
L_279138:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_279139+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_279139
.p2align 0x4
.long 0x453F
L_279139:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	jmp L_278869
.p2align 0x4
L_493633:
L_279140:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_279141+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_279141
.p2align 0x4
.long 0x4540
L_279141:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	jmp L_278865
.p2align 0x4
L_493634:
L_279142:
	movq 0x20(%rbp),%r14
	xchgq %r14,%r15
	jmp L_278872
.p2align 0x4
L_493635:
L_279144:
	movq 0x68(%rbp),%r15
	cmpq $0x1,%r15
	je L_279135
L_279145:
	movq %r15,0x20(%rbp)
	jmp L_278874
.p2align 0x4
L_493637:
L_279147:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_279148+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_279148
.p2align 0x4
.long 0x4540
L_279148:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	jmp L_278857
.p2align 0x4
L_493638:
L_279149:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_279150+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_279150
.p2align 0x4
.long 0x4541
L_279150:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	jmp L_278853
.p2align 0x4
L_493639:
L_279151:
	movq 0x60(%rbp),%r14
	xchgq %r14,%r15
	jmp L_278860
.p2align 0x4
L_493640:
L_279153:
	cmpq $0x1,0x20(%rbp)
	je L_279144
	jmp L_278862
.p2align 0x4
L_493642:
L_279156:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_279157+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_279157
.p2align 0x4
.long 0x4541
L_279157:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	jmp L_278845
.p2align 0x4
L_493643:
L_279158:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_279159+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_279159
.p2align 0x4
.long 0x4542
L_279159:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	jmp L_278841
.p2align 0x4
L_493644:
L_279160:
	movq 0x60(%rbp),%r14
	xchgq %r14,%r15
	jmp L_278848
.p2align 0x4
L_493645:
L_279162:
	movq 0x70(%rbp),%r15
	cmpq $0x1,%r15
	je L_279153
L_279163:
	movq %r15,0x60(%rbp)
	jmp L_278850
.p2align 0x4
L_493647:
L_279165:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_279166+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_279166
.p2align 0x4
.long 0x4542
L_279166:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	jmp L_278833
.p2align 0x4
L_493648:
L_279167:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_279168+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_279168
.p2align 0x4
.long 0x4543
L_279168:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	jmp L_278829
.p2align 0x4
L_493649:
L_279169:
	movq 0x60(%rbp),%r14
	xchgq %r14,%r15
	jmp L_278836
.p2align 0x4
L_493650:
L_279170:
	movq 0x78(%rbp),%r15
	cmpq $0x1,%r15
	je L_279162
L_279171:
	movq %r15,0x60(%rbp)
	jmp L_278838
.p2align 0x4
L_493652:
.p2align 0x4,,0x7
L_278821:
	movq 0x80(%rbp),%r15
.p2align 0x4,,0x7
L_278822:
	movq 0x60(%rbp),%r14
	cmpq $0x1,%r14
	je L_493653
L_278823:
	movq %r15,0x80(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x60(%rbp)
	jmp L_278811
.p2align 0x4
L_493653:
L_278824:
	movq %r15,0x60(%rbp)
	jmp L_278825
.p2align 0x4
L_493654:
L_278813:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_278814
L_278818:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_278819+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_278819
.p2align 0x4
.long 0x4533
L_278819:
	addq $0xFFFFFFFFFFFFFF30,%rbp
L_278814:
	movl 0xB0(%rbp),%r15d
	decl %r15d
	movl %r15d,0x98(%rbp)
	jo L_493655
L_278816:
	movq $0x285F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xB0(%rbp)
	addq $0x18,%r12
	movq 0xB8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xA8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xA0(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xD0,%rbp
	leaq (L_278817+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_121
.p2align 0x4
L_493655:
L_278815:
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_493657:
L_279177:
	movq 0xA8(%rbp),%r15
	cmpq $0x1,%r15
	je L_493660
L_279178:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0xA8(%rbp)
	movq %r14,0xB0(%rbp)
	movq $0x1,0xB8(%rbp)
.p2align 0x4,,0x7
L_279179:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_493659
.p2align 0x4,,0x7
L_279180:
	movq $0x285F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xB0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xB8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xA8(%rbp),%r14
	cmpq $0x1,%r14
	je L_493658
L_279181:
	movq %r15,0xB8(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0xA8(%rbp)
	movq %r15,0xB0(%rbp)
	jmp L_279179
.p2align 0x4
L_493658:
L_279183:
	movq %r15,0xA8(%rbp)
	movq $0x1,0xB0(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0x98(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x90(%rbp)
	movl 0x44(%rbp),%r15d
	movl %r15d,0xA0(%rbp)
	addq $0x90,%rbp
	leaq (L_279184+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tryChange_1
.p2align 0x4
L_493659:
L_279201:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_279202+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_279202
.p2align 0x4
.long 0x4547
L_279202:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	jmp L_279180
.p2align 0x4
L_493660:
L_279203:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_279183
.p2align 0x4
L_493661:
L_279204:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_279205+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_279205
.p2align 0x4
.long 0x4543
L_279205:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	jmp L_278808
.p2align 0x4
L_493662:
L_279206:
	movq $0x1,0x60(%rbp)
	jmp L_278825
.p2align 0x4
L_493663:
.p2align 0x4,,0x7
L_278801:
	movq 0x80(%rbp),%r15
.p2align 0x4,,0x7
L_278802:
	movq 0x78(%rbp),%r14
	cmpq $0x1,%r14
	je L_493664
L_278803:
	movq %r15,0x80(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x78(%rbp)
	jmp L_278791
.p2align 0x4
L_493664:
L_278804:
	movq %r15,0x78(%rbp)
	jmp L_278805
.p2align 0x4
L_493665:
L_278793:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_278794
L_278798:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_278799+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_278799
.p2align 0x4
.long 0x4533
L_278799:
	addq $0xFFFFFFFFFFFFFF30,%rbp
L_278794:
	movl 0xB0(%rbp),%r15d
	decl %r15d
	movl %r15d,0x98(%rbp)
	jo L_493666
L_278796:
	movq $0x285F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xB0(%rbp)
	addq $0x18,%r12
	movq 0xB8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xA8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xA0(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xD0,%rbp
	leaq (L_278797+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_121
.p2align 0x4
L_493666:
L_278795:
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_493668:
L_279211:
	movq 0xA8(%rbp),%r15
	cmpq $0x1,%r15
	je L_493671
L_279212:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0xA8(%rbp)
	movq %r14,0xB0(%rbp)
	movq $0x1,0xB8(%rbp)
.p2align 0x4,,0x7
L_279213:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_493670
.p2align 0x4,,0x7
L_279214:
	movq $0x285F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xB0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xB8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xA8(%rbp),%r14
	cmpq $0x1,%r14
	je L_493669
L_279215:
	movq %r15,0xB8(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0xA8(%rbp)
	movq %r15,0xB0(%rbp)
	jmp L_279213
.p2align 0x4
L_493669:
L_279217:
	movq %r15,0xA8(%rbp)
	movq $0x1,0xB0(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0x98(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x90(%rbp)
	movl 0x44(%rbp),%r15d
	movl %r15d,0xA0(%rbp)
	addq $0x90,%rbp
	leaq (L_279218+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tryChange_1
.p2align 0x4
L_493670:
L_279235:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_279236+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_279236
.p2align 0x4
.long 0x4547
L_279236:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	jmp L_279214
.p2align 0x4
L_493671:
L_279237:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_279217
.p2align 0x4
L_493672:
L_279238:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_279239+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_279239
.p2align 0x4
.long 0x4543
L_279239:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	jmp L_278788
.p2align 0x4
L_493673:
L_279240:
	movq $0x1,0x78(%rbp)
	jmp L_278805
.p2align 0x4
L_493674:
.p2align 0x4,,0x7
L_278781:
	movq 0x78(%rbp),%r15
.p2align 0x4,,0x7
L_278782:
	movq 0x70(%rbp),%r14
	cmpq $0x1,%r14
	je L_493675
L_278783:
	movq %r15,0x78(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x70(%rbp)
	jmp L_278771
.p2align 0x4
L_493675:
L_278784:
	movq %r15,0x70(%rbp)
	jmp L_278785
.p2align 0x4
L_493676:
L_278773:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_278774
L_278778:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_278779+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_278779
.p2align 0x4
.long 0x4531
L_278779:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_278774:
	movl 0xA8(%rbp),%r15d
	decl %r15d
	movl %r15d,0x90(%rbp)
	jo L_493677
L_278776:
	movq $0x285F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xA8(%rbp)
	addq $0x18,%r12
	movq 0xB0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xA0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x98(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC8,%rbp
	leaq (L_278777+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_121
.p2align 0x4
L_493677:
L_278775:
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_493679:
L_279245:
	movq 0xA0(%rbp),%r15
	cmpq $0x1,%r15
	je L_493682
L_279246:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0xA0(%rbp)
	movq %r14,0xA8(%rbp)
	movq $0x1,0xB0(%rbp)
.p2align 0x4,,0x7
L_279247:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_493681
.p2align 0x4,,0x7
L_279248:
	movq $0x285F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xA8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xB0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xA0(%rbp),%r14
	cmpq $0x1,%r14
	je L_493680
L_279249:
	movq %r15,0xB0(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0xA0(%rbp)
	movq %r15,0xA8(%rbp)
	jmp L_279247
.p2align 0x4
L_493680:
L_279251:
	movq %r15,0xA0(%rbp)
	movq $0x1,0xA8(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0xB0(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x88(%rbp)
	movl 0x44(%rbp),%r15d
	movl %r15d,0x98(%rbp)
	addq $0x88,%rbp
	leaq (L_279252+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tryChange_1
.p2align 0x4
L_493681:
L_279269:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_279270+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_279270
.p2align 0x4
.long 0x4549
L_279270:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	jmp L_279248
.p2align 0x4
L_493682:
L_279271:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_279251
.p2align 0x4
L_493683:
L_279272:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_279273+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_279273
.p2align 0x4
.long 0x4542
L_279273:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	jmp L_278768
.p2align 0x4
L_493684:
L_279274:
	movq $0x1,0x70(%rbp)
	jmp L_278785
.p2align 0x4
L_493685:
L_279275:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_279276+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_279276
.p2align 0x4
.long 0x4543
L_279276:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	jmp L_278759
.p2align 0x4
L_493686:
L_279277:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_279278+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_279278
.p2align 0x4
.long 0x4545
L_279278:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	jmp L_278755
.p2align 0x4
L_493687:
L_279279:
	movq 0x78(%rbp),%r15
	jmp L_278762
.p2align 0x4
L_493688:
L_279281:
	movq 0x70(%rbp),%r14
	cmpq $0x1,%r14
	je L_493689
L_279282:
	movq %r15,0x78(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x70(%rbp)
	jmp L_278725
.p2align 0x4
L_493689:
L_279283:
	movq %r15,0x20(%rbp)
	jmp L_278765
.p2align 0x4
L_493690:
L_278727:
	movq 0x20(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0xA8(%rbp)
	movl 0x0(%r15),%r14d
	movl %r14d,0xB0(%rbp)
	movq $0x1,0xB8(%rbp)
.p2align 0x4,,0x7
L_278728:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_493692
.p2align 0x4,,0x7
L_278729:
	movq $0x1EE3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0xB0(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0xB8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xA8(%rbp),%r14
	cmpq $0x1,%r14
	je L_493691
L_278730:
	movq %r15,0xB8(%rbp)
	movl 0x0(%r14),%r15d
	movq 0x8(%r14),%r14
	movq %r14,0xA8(%rbp)
	movl %r15d,0xB0(%rbp)
	jmp L_278728
.p2align 0x4
L_493691:
L_278731:
	movq 0xB8(%rbp),%r15
	movq %r15,0xA8(%rbp)
	movq $0x1,0xB8(%rbp)
L_278732:
	movq 0x88(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC8,%rbp
	leaq (L_278733+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_121
.p2align 0x4
L_493692:
L_279301:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_279302+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_279302
.p2align 0x4
.long 0x454D
L_279302:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	jmp L_278729
.p2align 0x4
L_493693:
L_279304:
	movq 0x78(%rbp),%r15
	cmpq $0x1,%r15
	je L_493694
L_279305:
	jmp L_278762
.p2align 0x4
L_493694:
L_279306:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_279281
.p2align 0x4
L_493695:
L_279307:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_279308+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_279308
.p2align 0x4
.long 0x4542
L_279308:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	jmp L_278722
.p2align 0x4
L_493696:
L_279309:
	movq $0x1,0x20(%rbp)
	jmp L_278765
.p2align 0x4
L_493697:
L_279310:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_279311+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_279311
.p2align 0x4
.long 0x4542
L_279311:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	jmp L_278713
.p2align 0x4
L_493698:
L_279312:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_279313+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_279313
.p2align 0x4
.long 0x4543
L_279313:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	jmp L_278709
.p2align 0x4
L_493699:
L_279314:
	movq 0x70(%rbp),%r15
	jmp L_278716
.p2align 0x4
L_493700:
L_279315:
	movq 0x68(%rbp),%r14
	cmpq $0x1,%r14
	je L_493701
L_279316:
	movq %r15,0x70(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x68(%rbp)
	jmp L_278681
.p2align 0x4
L_493701:
L_279317:
	movq %r15,0x68(%rbp)
	jmp L_278719
.p2align 0x4
L_493702:
L_278682:
	movq 0x20(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x90(%rbp)
	movl 0x0(%r15),%r14d
	movl %r14d,0x98(%rbp)
	movq $0x1,0xA0(%rbp)
.p2align 0x4,,0x7
L_278683:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_493711
.p2align 0x4,,0x7
L_278684:
	movq $0x1EE3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x98(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0xA0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x90(%rbp),%r14
	cmpq $0x1,%r14
	je L_493703
L_278685:
	movq %r15,0xA0(%rbp)
	movl 0x0(%r14),%r15d
	movq 0x8(%r14),%r14
	movq %r14,0x90(%rbp)
	movl %r15d,0x98(%rbp)
	jmp L_278683
.p2align 0x4
L_493703:
L_278686:
	movq 0xA0(%rbp),%r15
	movq %r15,0x90(%rbp)
	movl 0x98(%rbp),%ecx
	movq $0x1,0x98(%rbp)
L_278687:
	cmpl $0x0,%ecx
	je L_493710
	cmpl $0x1,%ecx
	je L_493709
	cmpl $0x2,%ecx
	je L_493708
	cmpl $0x3,%ecx
	je L_493707
	cmpl $0x4,%ecx
	je L_493706
	cmpl $0x5,%ecx
	je L_493705
	cmpl $0x6,%ecx
	je L_493704
L_278688:
	movq $0x1,%r15
L_278689:
	movq $0x1023,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movq 0x88(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r15,0x8(%r14)
	movq $0x1025,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movl %ecx,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl $0x0,0x4(%r13)
	movq $0x285F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq %r14,0xC8(%rbp)
	movq 0x80(%rbp),%r14
	movq %r14,0xA8(%rbp)
	movq %r15,0xB0(%rbp)
	movl 0x44(%rbp),%r14d
	movl %r14d,0xB8(%rbp)
	movq $0x1,0xC0(%rbp)
	movq 0x78(%rbp),%r14
	movq %r14,0xD0(%rbp)
	movq %r15,0xD8(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0xE0(%rbp)
	addq $0xA8,%rbp
	leaq (L_278690+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tryChange_1
.p2align 0x4
L_493704:
L_279334:
	movq (globalObjptr+0x3E48)(%rip),%r15
	jmp L_278689
.p2align 0x4
L_493705:
L_279333:
	movq (globalObjptr+0x3E40)(%rip),%r15
	jmp L_278689
.p2align 0x4
L_493706:
L_279332:
	movq (globalObjptr+0x3E50)(%rip),%r15
	jmp L_278689
.p2align 0x4
L_493707:
L_279331:
	movq (globalObjptr+0x3E38)(%rip),%r15
	jmp L_278689
.p2align 0x4
L_493708:
L_279330:
	movq (globalObjptr+0x3E58)(%rip),%r15
	jmp L_278689
.p2align 0x4
L_493709:
L_279329:
	movq (globalObjptr+0x3E30)(%rip),%r15
	jmp L_278689
.p2align 0x4
L_493710:
L_279328:
	movq (globalObjptr+0x3E60)(%rip),%r15
	jmp L_278689
.p2align 0x4
L_493711:
L_279335:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_279336+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_279336
.p2align 0x4
.long 0x4550
L_279336:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	jmp L_278684
.p2align 0x4
L_493712:
L_279338:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_279339+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_279339
.p2align 0x4
.long 0x4541
L_279339:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	jmp L_278678
.p2align 0x4
L_493713:
L_279340:
	movq $0x1,0x68(%rbp)
	jmp L_278719
.p2align 0x4
L_493714:
L_279341:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_279342+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_279342
.p2align 0x4
.long 0x4542
L_279342:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	jmp L_278669
.p2align 0x4
L_493715:
L_279343:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_279344+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_279344
.p2align 0x4
.long 0x4543
L_279344:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	jmp L_278665
.p2align 0x4
L_493716:
L_279345:
	movq 0x70(%rbp),%r15
	jmp L_278672
.p2align 0x4
L_493717:
L_279346:
	movq 0x68(%rbp),%r14
	cmpq $0x1,%r14
	je L_493718
L_279347:
	movq %r15,0x70(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x68(%rbp)
	jmp L_278620
.p2align 0x4
L_493718:
L_279348:
	movq %r15,0x18(%rbp)
	jmp L_278675
.p2align 0x4
L_493719:
.p2align 0x4,,0x7
L_279354:
	movq 0x90(%rbp),%r15
.p2align 0x4,,0x7
L_278658:
	movq 0x88(%rbp),%r14
	cmpq $0x1,%r14
	je L_278661
L_278659:
	movq %r15,0x90(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x88(%rbp)
	jmp L_278626
.p2align 0x4
L_493721:
	movq %r13,%r15
	jmp L_278632
.p2align 0x4
L_493722:
L_279375:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_279376+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_279376
.p2align 0x4
.long 0x4546
L_279376:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	jmp L_278623
.p2align 0x4
L_493723:
L_279377:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_278661
.p2align 0x4
L_493724:
L_279378:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_279379+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_279379
.p2align 0x4
.long 0x4541
L_279379:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	jmp L_278617
.p2align 0x4
L_493725:
L_279380:
	movq $0x1,0x18(%rbp)
	jmp L_278675
.p2align 0x4
L_493726:
L_278610:
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_493727:
L_279381:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_279382+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_279382
.p2align 0x4
.long 0x4540
L_279382:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	jmp L_278609
.p2align 0x4
L_493728:
L_279383:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_279384+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_279384
.p2align 0x4
.long 0x4540
L_279384:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	jmp L_278605
.p2align 0x4
L_493729:
L_279385:
	movq $0x1,0x60(%rbp)
	jmp L_278614
.p2align 0x4
.long 0x452D
L_278633:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0xA0(%rbp)
	cmpq $0x1,%r15
	je L_279372
L_278634:
	movq 0x18(%r15),%r14
	movq %r14,0xA8(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0xB0(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0xB8(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xC0(%rbp)
	movq 0x98(%rbp),%r15
	cmpq $0x1,%r15
	je L_493741
L_278635:
	movl 0x0(%r15),%r14d
	movq 0x8(%r15),%r15
	movq %r15,0x98(%rbp)
	movl %r14d,0xA0(%rbp)
	movq $0x1,0xC8(%rbp)
.p2align 0x4,,0x7
L_278636:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_493740
.p2align 0x4,,0x7
L_278637:
	movl 0xA0(%rbp),%r14d
	cmpl $0x0,%r14d
	je L_493739
	cmpl $0x1,%r14d
	je L_493738
	cmpl $0x2,%r14d
	je L_493737
	cmpl $0x3,%r14d
	je L_493736
	cmpl $0x4,%r14d
	je L_493735
	cmpl $0x5,%r14d
	je L_493734
	cmpl $0x6,%r14d
	je L_493733
L_278638:
	movq $0x1,%r15
L_278639:
	movq $0x1023,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movq 0xB0(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r15,0x8(%r14)
	movq $0x1025,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movl 0xA0(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x285F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0xC8(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x98(%rbp),%r13
	cmpq $0x1,%r13
	je L_493730
L_278640:
	movq %r14,0xC8(%rbp)
	movl 0x0(%r13),%r14d
	movq 0x8(%r13),%r13
	movq %r13,0x98(%rbp)
	movl %r14d,0xA0(%rbp)
	jmp L_278636
.p2align 0x4
L_493730:
L_278641:
	movq %r15,0xA0(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0x98(%rbp)
	movq $0x1,0xC8(%rbp)
.p2align 0x4,,0x7
L_278642:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_493732
.p2align 0x4,,0x7
L_278643:
	movq $0x285F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xA0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xC8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x98(%rbp),%r14
	cmpq $0x1,%r14
	je L_493731
L_278644:
	movq %r15,0xC8(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x98(%rbp)
	movq %r15,0xA0(%rbp)
	jmp L_278642
.p2align 0x4
L_493731:
L_278646:
	movq 0x80(%rbp),%r14
	movq %r14,0xA0(%rbp)
	movq 0xA8(%rbp),%r14
	movq %r14,0xC8(%rbp)
	movq 0xB8(%rbp),%r14
	movq %r14,0xD0(%rbp)
	movq 0x10(%rbp),%r14
	movq %r14,0xD8(%rbp)
	movq 0xC0(%rbp),%r14
	movq %r14,0xB8(%rbp)
	movq %r15,0xC0(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0xA8(%rbp)
	movl 0x44(%rbp),%r15d
	movl %r15d,0xB0(%rbp)
	addq $0xA0,%rbp
	leaq (L_278647+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tryChange_1
.p2align 0x4
L_493732:
L_279359:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_279360+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_279360
.p2align 0x4
.long 0x454B
L_279360:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	jmp L_278643
.p2align 0x4
L_493733:
L_279367:
	movq (globalObjptr+0x3E48)(%rip),%r15
	jmp L_278639
.p2align 0x4
L_493734:
L_279366:
	movq (globalObjptr+0x3E40)(%rip),%r15
	jmp L_278639
.p2align 0x4
L_493735:
L_279365:
	movq (globalObjptr+0x3E50)(%rip),%r15
	jmp L_278639
.p2align 0x4
L_493736:
L_279364:
	movq (globalObjptr+0x3E38)(%rip),%r15
	jmp L_278639
.p2align 0x4
L_493737:
L_279363:
	movq (globalObjptr+0x3E58)(%rip),%r15
	jmp L_278639
.p2align 0x4
L_493738:
L_279362:
	movq (globalObjptr+0x3E30)(%rip),%r15
	jmp L_278639
.p2align 0x4
L_493739:
L_279361:
	movq (globalObjptr+0x3E60)(%rip),%r15
	jmp L_278639
.p2align 0x4
L_493740:
L_279368:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_279369+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_279369
.p2align 0x4
.long 0x4551
L_279369:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	jmp L_278637
.p2align 0x4
L_493741:
L_279370:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_278646
.p2align 0x4
.long 0x4534
L_278999:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	leaq L_278996(%rip),%r14
	movq %r14,0x30(%rbp)
	movq %rbp,%r14
	addq $0x38,%r14
	subq (gcState+0x560)(%rip),%r14
	movq %r14,(gcState+0x20)(%rip)
	movq %r15,0x68(%rbp)
	movq (globalObjptr+0x10520)(%rip),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_279000+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x4534
L_278917:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	leaq L_278997(%rip),%r14
	movq %r14,0x30(%rbp)
	movq %rbp,%r14
	addq $0x38,%r14
	subq (gcState+0x560)(%rip),%r14
	movq %r14,(gcState+0x20)(%rip)
	movq %r15,0x68(%rbp)
	movq (globalObjptr+0x10468)(%rip),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_278918+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x4534
L_279004:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	leaq L_278996(%rip),%r14
	movq %r14,0x30(%rbp)
	movq %rbp,%r14
	addq $0x38,%r14
	subq (gcState+0x560)(%rip),%r14
	movq %r14,(gcState+0x20)(%rip)
	movq %r15,0x68(%rbp)
	movq (globalObjptr+0x10528)(%rip),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_279000+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x1283
L_279010:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_279011
L_279019:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_279020+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_279020
.p2align 0x4
.long 0x453B
L_279020:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_279011:
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x58(%rbp)
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	leaq L_279018(%rip),%r15
	movq %r15,0x30(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_279012+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x651
L_279021:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4532
L_278817:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movq 0xD0(%rbp),%r15
	movq 0xB0(%rbp),%r14
	movq %r14,0xA8(%rbp)
	movl 0x98(%rbp),%r14d
	movl %r14d,0xB0(%rbp)
	movq %r15,0x98(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0xA0(%rbp)
	jmp loop_3345
.p2align 0x4
.long 0x4544
L_279184:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x88(%rbp)
	cmpq $0x1,0x80(%rbp)
	je L_279174
L_279185:
	cmpq $0x1,%r15
	je L_278821
L_279186:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x88(%rbp)
	movq %r14,0x90(%rbp)
	movq $0x1,0x98(%rbp)
.p2align 0x4,,0x7
L_279187:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_493747
.p2align 0x4,,0x7
L_279188:
	movq $0x2861,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x90(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x98(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x88(%rbp),%r14
	cmpq $0x1,%r14
	je L_493744
L_279189:
	movq %r15,0x98(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x88(%rbp)
	movq %r15,0x90(%rbp)
	jmp L_279187
.p2align 0x4
L_493744:
L_279190:
	movq 0x90(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0x80(%rbp)
.p2align 0x4,,0x7
L_279191:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_493746
.p2align 0x4,,0x7
L_279192:
	movq $0x2861,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x88(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x90(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x80(%rbp),%r14
	cmpq $0x1,%r14
	je L_278822
L_279193:
	movq %r15,0x90(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x80(%rbp)
	movq %r15,0x88(%rbp)
	jmp L_279191
.p2align 0x4
L_493746:
L_279195:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_279196+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_279196
.p2align 0x4
.long 0x4545
L_279196:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	jmp L_279192
.p2align 0x4
L_493747:
L_279197:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_279198+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_279198
.p2align 0x4
.long 0x4546
L_279198:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	jmp L_279188
.p2align 0x4
.long 0x4532
L_278797:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movq 0xD0(%rbp),%r15
	movq 0xB0(%rbp),%r14
	movq %r14,0xA8(%rbp)
	movl 0x98(%rbp),%r14d
	movl %r14d,0xB0(%rbp)
	movq %r15,0x98(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0xA0(%rbp)
	jmp loop_3344
.p2align 0x4
.long 0x4544
L_279218:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x88(%rbp)
	cmpq $0x1,0x80(%rbp)
	je L_279208
L_279219:
	cmpq $0x1,%r15
	je L_278801
L_279220:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x88(%rbp)
	movq %r14,0x90(%rbp)
	movq $0x1,0x98(%rbp)
.p2align 0x4,,0x7
L_279221:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_493753
.p2align 0x4,,0x7
L_279222:
	movq $0x2861,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x90(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x98(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x88(%rbp),%r14
	cmpq $0x1,%r14
	je L_493750
L_279223:
	movq %r15,0x98(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x88(%rbp)
	movq %r15,0x90(%rbp)
	jmp L_279221
.p2align 0x4
L_493750:
L_279224:
	movq 0x90(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0x80(%rbp)
.p2align 0x4,,0x7
L_279225:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_493752
.p2align 0x4,,0x7
L_279226:
	movq $0x2861,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x88(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x90(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x80(%rbp),%r14
	cmpq $0x1,%r14
	je L_278802
L_279227:
	movq %r15,0x90(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x80(%rbp)
	movq %r15,0x88(%rbp)
	jmp L_279225
.p2align 0x4
L_493752:
L_279229:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_279230+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_279230
.p2align 0x4
.long 0x4545
L_279230:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	jmp L_279226
.p2align 0x4
L_493753:
L_279231:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_279232+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_279232
.p2align 0x4
.long 0x4546
L_279232:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	jmp L_279222
.p2align 0x4
.long 0x4530
L_278777:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq 0xA8(%rbp),%r14
	movq %r14,0xA0(%rbp)
	movl 0x90(%rbp),%r14d
	movl %r14d,0xA8(%rbp)
	movq %r15,0x90(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0x98(%rbp)
	jmp loop_3343
.p2align 0x4
.long 0x4548
L_279252:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x80(%rbp)
	cmpq $0x1,0x78(%rbp)
	je L_279242
L_279253:
	cmpq $0x1,%r15
	je L_278781
L_279254:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x80(%rbp)
	movq %r14,0x88(%rbp)
	movq $0x1,0x90(%rbp)
.p2align 0x4,,0x7
L_279255:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_493759
.p2align 0x4,,0x7
L_279256:
	movq $0x2861,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x88(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x90(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x80(%rbp),%r14
	cmpq $0x1,%r14
	je L_493756
L_279257:
	movq %r15,0x90(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x80(%rbp)
	movq %r15,0x88(%rbp)
	jmp L_279255
.p2align 0x4
L_493756:
L_279258:
	movq 0x88(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0x78(%rbp)
.p2align 0x4,,0x7
L_279259:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_493758
.p2align 0x4,,0x7
L_279260:
	movq $0x2861,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x80(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x88(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x78(%rbp),%r14
	cmpq $0x1,%r14
	je L_278782
L_279261:
	movq %r15,0x88(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x78(%rbp)
	movq %r15,0x80(%rbp)
	jmp L_279259
.p2align 0x4
L_493758:
L_279263:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_279264+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_279264
.p2align 0x4
.long 0x4543
L_279264:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	jmp L_279260
.p2align 0x4
L_493759:
L_279265:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_279266+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_279266
.p2align 0x4
.long 0x4545
L_279266:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	jmp L_279256
.p2align 0x4
.long 0x452F
L_278733:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0xC0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_278734
L_279299:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_279300+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_279300
.p2align 0x4
.long 0x454C
L_279300:
	addq $0xFFFFFFFFFFFFFF30,%rbp
L_278734:
	movq $0x285F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x90(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movl 0xB0(%rbp),%r13d
	cmpl $0x0,%r13d
	je L_493768
	cmpl $0x1,%r13d
	je L_493767
	cmpl $0x2,%r13d
	je L_493766
	cmpl $0x3,%r13d
	je L_493765
	cmpl $0x4,%r13d
	je L_493764
	cmpl $0x5,%r13d
	je L_493763
	cmpl $0x6,%r13d
	je L_493762
L_278735:
	movq $0x1,%r14
L_278736:
	movq %r15,0xE0(%rbp)
	movq $0x1023,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x10(%r15)
	addq $0x20,%r12
	movq 0x98(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r14,0x8(%r15)
	movq $0x1025,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movl 0xB0(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq $0x285F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq %r15,0xE8(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq %r14,0xD0(%rbp)
	movl 0x44(%rbp),%r15d
	movl %r15d,0xD8(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0xF0(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0xF8(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x100(%rbp)
	addq $0xC8,%rbp
	leaq (L_278737+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tryChange_1
.p2align 0x4
L_493762:
L_279298:
	movq (globalObjptr+0x3E48)(%rip),%r14
	jmp L_278736
.p2align 0x4
L_493763:
L_279297:
	movq (globalObjptr+0x3E40)(%rip),%r14
	jmp L_278736
.p2align 0x4
L_493764:
L_279296:
	movq (globalObjptr+0x3E50)(%rip),%r14
	jmp L_278736
.p2align 0x4
L_493765:
L_279295:
	movq (globalObjptr+0x3E38)(%rip),%r14
	jmp L_278736
.p2align 0x4
L_493766:
L_279294:
	movq (globalObjptr+0x3E58)(%rip),%r14
	jmp L_278736
.p2align 0x4
L_493767:
L_279293:
	movq (globalObjptr+0x3E30)(%rip),%r14
	jmp L_278736
.p2align 0x4
L_493768:
L_279292:
	movq (globalObjptr+0x3E60)(%rip),%r14
	jmp L_278736
.p2align 0x4
.long 0x452D
L_278690:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0xA0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_278691
L_279326:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_279327+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_279327
.p2align 0x4
.long 0x454F
L_279327:
	addq $0xFFFFFFFFFFFFFF50,%rbp
L_278691:
	cmpq $0x1,0x98(%rbp)
	je L_493776
L_278692:
	movq 0xA0(%rbp),%r15
	cmpq $0x1,%r15
	je L_493775
L_278693:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0xA0(%rbp)
	movq %r14,0xA8(%rbp)
	movq $0x1,0xB0(%rbp)
.p2align 0x4,,0x7
L_278694:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_493774
.p2align 0x4,,0x7
L_278695:
	movq $0x2861,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xA8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xB0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xA0(%rbp),%r14
	cmpq $0x1,%r14
	je L_493770
L_278696:
	movq %r15,0xB0(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0xA0(%rbp)
	movq %r15,0xA8(%rbp)
	jmp L_278694
.p2align 0x4
L_493770:
L_278697:
	movq 0xA8(%rbp),%r15
	movq %r15,0xA0(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0xA8(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0x98(%rbp)
.p2align 0x4,,0x7
L_278698:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_493773
.p2align 0x4,,0x7
L_278699:
	movq $0x2861,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xA0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xA8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x98(%rbp),%r14
	cmpq $0x1,%r14
	je L_493771
L_278700:
	movq %r15,0xA8(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x98(%rbp)
	movq %r15,0xA0(%rbp)
	jmp L_278698
.p2align 0x4
L_493771:
L_278702:
	movq 0x90(%rbp),%r14
	cmpq $0x1,%r14
	je L_278705
L_278703:
	movq %r15,0x98(%rbp)
	movl 0x0(%r14),%ecx
	movq 0x8(%r14),%r14
	movq %r14,0x90(%rbp)
	jmp L_278687
.p2align 0x4
L_493773:
L_279318:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_279319+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_279319
.p2align 0x4
.long 0x454E
L_279319:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	jmp L_278699
.p2align 0x4
L_493774:
L_279320:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_279321+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_279321
.p2align 0x4
.long 0x4549
L_279321:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	jmp L_278695
.p2align 0x4
L_493775:
L_279322:
	movq 0x98(%rbp),%r14
	xchgq %r14,%r15
	jmp L_278702
.p2align 0x4
L_493776:
L_279323:
	movq 0x90(%rbp),%r15
	cmpq $0x1,%r15
	je L_493777
L_279324:
	movl 0x0(%r15),%ecx
	movq 0x8(%r15),%r15
	movq %r15,0x90(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0x98(%rbp)
	jmp L_278687
.p2align 0x4
L_493777:
L_279325:
	movq 0xA0(%rbp),%r14
	xchgq %r14,%r15
	jmp L_278705
.p2align 0x4
.long 0x452E
L_278647:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r15
	movq %r15,0x98(%rbp)
	cmpq $0x1,0x90(%rbp)
	je L_279356
L_278648:
	cmpq $0x1,%r15
	je L_279354
L_278649:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x98(%rbp)
	movq %r14,0xA0(%rbp)
	movq $0x1,0xA8(%rbp)
.p2align 0x4,,0x7
L_278650:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_493782
.p2align 0x4,,0x7
L_278651:
	movq $0x2861,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xA0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xA8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x98(%rbp),%r14
	cmpq $0x1,%r14
	je L_493779
L_278652:
	movq %r15,0xA8(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x98(%rbp)
	movq %r15,0xA0(%rbp)
	jmp L_278650
.p2align 0x4
L_493779:
L_278653:
	movq 0xA0(%rbp),%r15
	movq %r15,0x98(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0xA0(%rbp)
	movq 0xA8(%rbp),%r15
	movq %r15,0x90(%rbp)
.p2align 0x4,,0x7
L_278654:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_493781
.p2align 0x4,,0x7
L_278655:
	movq $0x2861,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x98(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xA0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x90(%rbp),%r14
	cmpq $0x1,%r14
	je L_278658
L_278656:
	movq %r15,0xA0(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x90(%rbp)
	movq %r15,0x98(%rbp)
	jmp L_278654
.p2align 0x4
L_493781:
L_279349:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_279350+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_279350
.p2align 0x4
.long 0x454F
L_279350:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	jmp L_278655
.p2align 0x4
L_493782:
L_279351:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_279352+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_279352
.p2align 0x4
.long 0x454E
L_279352:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	jmp L_278651
.p2align 0x4
.long 0x4534
L_279000:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
L_278922:
	movq %r15,0x68(%rbp)
	leaq L_278996(%rip),%r15
	movq %r15,0x30(%rbp)
	movq (globalObjptr+0x10478)(%rip),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_278923+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x651
L_278996:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4534
L_278918:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq (globalObjptr+0x10470)(%rip),%r14
	movq %r14,0x68(%rbp)
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_278919+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x651
L_278997:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x453A
L_279012:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	incl %r13d
	jo L_493785
L_279014:
	movl %r13d,0x0(%r14)
	movq (globalObjptr+0x9D0)(%rip),%r14
	movq %r14,0x48(%rbp)
	movq %r15,0x50(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x60(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x48,%rbp
	leaq (L_279015+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_493785:
L_279013:
	movq 0x38(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x651
L_279018:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x452F
L_278737:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0xB0(%rbp)
	cmpq $0x1,0xB8(%rbp)
	je L_493792
L_278738:
	cmpq $0x1,%r15
	je L_493791
L_278739:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0xB0(%rbp)
	movq %r14,0xC0(%rbp)
	movq $0x1,0xC8(%rbp)
.p2align 0x4,,0x7
L_278740:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_493790
.p2align 0x4,,0x7
L_278741:
	movq $0x2861,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xC0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xC8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xB0(%rbp),%r14
	cmpq $0x1,%r14
	je L_493786
L_278742:
	movq %r15,0xC8(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0xB0(%rbp)
	movq %r15,0xC0(%rbp)
	jmp L_278740
.p2align 0x4
L_493786:
L_278743:
	movq 0xC8(%rbp),%r15
	movq %r15,0xB0(%rbp)
	movq 0xB8(%rbp),%r15
	movq 0xC0(%rbp),%r14
	movq %r14,0xB8(%rbp)
	movq %r15,0xC0(%rbp)
.p2align 0x4,,0x7
L_278744:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_493789
.p2align 0x4,,0x7
L_278745:
	movq $0x2861,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xB8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xC0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xB0(%rbp),%r14
	cmpq $0x1,%r14
	je L_493787
L_278746:
	movq %r15,0xC0(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0xB0(%rbp)
	movq %r15,0xB8(%rbp)
	jmp L_278744
.p2align 0x4
L_493787:
L_278748:
	movq 0xA8(%rbp),%r14
	cmpq $0x1,%r14
	je L_278751
L_278749:
	movq %r15,0xB8(%rbp)
	movl 0x0(%r14),%r15d
	movq 0x8(%r14),%r14
	movq %r14,0xA8(%rbp)
	movl %r15d,0xB0(%rbp)
	jmp L_278732
.p2align 0x4
L_493789:
L_279284:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_279285+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_279285
.p2align 0x4
.long 0x454A
L_279285:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	jmp L_278745
.p2align 0x4
L_493790:
L_279286:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_279287+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_279287
.p2align 0x4
.long 0x454B
L_279287:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	jmp L_278741
.p2align 0x4
L_493791:
L_279288:
	movq 0xB8(%rbp),%r14
	xchgq %r14,%r15
	jmp L_278748
.p2align 0x4
L_493792:
L_279289:
	movq 0xA8(%rbp),%r14
	cmpq $0x1,%r14
	je L_278751
L_279290:
	movl 0x0(%r14),%r13d
	movq 0x8(%r14),%r14
	movq %r14,0xA8(%rbp)
	movq %r15,0xB8(%rbp)
	movl %r13d,0xB0(%rbp)
	jmp L_278732
.p2align 0x4
.long 0x4534
L_278923:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_278924
L_278994:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_278995+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_278995
.p2align 0x4
.long 0x44C3
L_278995:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_278924:
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x68(%rbp)
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	leaq L_278993(%rip),%r15
	movq %r15,0x30(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_278925+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4534
L_278919:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x48(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_278920+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2153
.p2align 0x4
.long 0x904
L_279015:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq (globalObjptr+0x1608)(%rip),%r15
	movq (globalObjptr+0x1610)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_493795
L_279016:
	movq 0x38(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_493795:
L_279017:
	movq 0x38(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4535
L_278925:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	incl %r13d
	jo L_493796
L_278927:
	movl %r13d,0x0(%r14)
	movq %r15,0x70(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x80(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq (globalObjptr+0x9D0)(%rip),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_278928+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_493796:
L_278926:
	movq 0x38(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x651
L_278993:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x447D
L_278920:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq %rbp,%r15
	addq $0x38,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x60(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_278921+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x4536
L_278928:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq (globalObjptr+0x1608)(%rip),%r15
	movq (globalObjptr+0x1610)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_493816
L_278929:
	movq 0x18(%rbp),%r15
	movl 0x0(%r15),%r14d
	movl %r14d,0x20(%rbp)
	movq 0x58(%rbp),%r15
	cmpq $0x1,%r15
	je L_493815
L_278930:
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq $0x1,0x50(%rbp)
.p2align 0x4,,0x7
L_278931:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_493814
.p2align 0x4,,0x7
L_278932:
	movq $0x2857,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_493797
L_278933:
	movq %r15,0x50(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	movq %r15,0x28(%rbp)
	jmp L_278931
.p2align 0x4
L_493797:
L_278934:
	movq 0x50(%rbp),%r15
	movq %r15,0x18(%rbp)
	movl 0x20(%rbp),%ecx
.p2align 0x4,,0x7
L_278935:
	testl %ecx,%ecx
	jz L_493800
L_278936:
	decl %ecx
	jo L_493799
L_278938:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_493798
L_278939:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x18(%rbp)
	movq %r14,0x28(%rbp)
	jmp L_278935
.p2align 0x4
L_493798:
L_278940:
	movq 0x38(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_493799:
L_278937:
	movq 0x38(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_493800:
L_278941:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_278942
L_278987:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_278988+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_278988
.p2align 0x4
.long 0x4539
L_278988:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_278942:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_493812
L_278943:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x18(%rbp)
	movq %r14,0x50(%rbp)
	movq $0x1,0x58(%rbp)
.p2align 0x4,,0x7
L_278944:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_493811
.p2align 0x4,,0x7
L_278945:
	movq $0x2857,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_493801
L_278946:
	movq %r15,0x58(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	movq %r15,0x50(%rbp)
	jmp L_278944
.p2align 0x4
L_493801:
L_278947:
	movq %r15,0x18(%rbp)
L_278948:
	movq 0x28(%rbp),%r14
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r13
	movq %r13,0x50(%rbp)
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_493802
L_278949:
	movq 0x8(%r14),%r13
	movq %r13,0x28(%rbp)
L_278950:
	movq 0x0(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x60,%rbp
	leaq (L_278951+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_121
.p2align 0x4
L_493802:
L_278983:
	movq %r15,0x28(%rbp)
L_278955:
	movq 0x48(%rbp),%r15
	cmpq $0x1,%r15
	je L_278965
L_278956:
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r15),%r15
	movq %r15,0x48(%rbp)
	movq $0x1,0x58(%rbp)
.p2align 0x4,,0x7
L_278957:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_493809
.p2align 0x4,,0x7
L_278958:
	movq $0x285F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_493803
L_278959:
	movq %r15,0x58(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x40(%rbp)
	movq %r15,0x48(%rbp)
	jmp L_278957
.p2align 0x4
L_493803:
L_278960:
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x28(%rbp)
.p2align 0x4,,0x7
L_278961:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_493808
.p2align 0x4,,0x7
L_278962:
	movq $0x26E1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1027,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x1029,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_493804
L_278963:
	movq %r15,0x48(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x40(%rbp)
	jmp L_278961
.p2align 0x4
L_493804:
L_278964:
	movq %r15,0x28(%rbp)
L_278965:
	movq $0x102D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x40(%rbp)
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_493807
L_278966:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x18(%rbp)
	movq %r14,0x48(%rbp)
	movq $0x1,0x58(%rbp)
.p2align 0x4,,0x7
L_278967:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_493806
.p2align 0x4,,0x7
L_278968:
	movq $0x2857,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_493805
L_278969:
	movq %r15,0x58(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	movq %r15,0x48(%rbp)
	jmp L_278967
.p2align 0x4
L_493805:
L_278971:
	movq $0x2857,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x40(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x1591,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,(gcState+0x20)(%rip)
	movl 0x20(%rbp),%r14d
	movl %r14d,0x48(%rbp)
	movq 0x50(%rbp),%r14
	movq %r14,0x58(%rbp)
	movq %r15,0x50(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x48,%rbp
	leaq (L_278972+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp parseStep_7
.p2align 0x4
L_493806:
L_278973:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_278974+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_278974
.p2align 0x4
.long 0x27C1
L_278974:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	jmp L_278968
.p2align 0x4
L_493807:
L_278975:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_278971
.p2align 0x4
L_493808:
L_278976:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_278977+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_278977
.p2align 0x4
.long 0x4538
L_278977:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	jmp L_278962
.p2align 0x4
L_493809:
L_278978:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_278979+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_278979
.p2align 0x4
.long 0x27C1
L_278979:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	jmp L_278958
.p2align 0x4
L_493811:
L_278984:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_278985+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_278985
.p2align 0x4
.long 0x27C1
L_278985:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	jmp L_278945
.p2align 0x4
L_493812:
L_278986:
	movq $0x1,0x18(%rbp)
	jmp L_278948
.p2align 0x4
L_493814:
L_278989:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_278990+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_278990
.p2align 0x4
.long 0x4538
L_278990:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	jmp L_278932
.p2align 0x4
L_493815:
L_278991:
	movq 0x38(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_493816:
L_278992:
	movq 0x38(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4534
L_278921:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	jmp L_278922
.p2align 0x4
.long 0x4537
L_278951:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_278952
L_278981:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_278982+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_278982
.p2align 0x4
.long 0x4538
L_278982:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_278952:
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_493817
L_278953:
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	movq 0x40(%rbp),%r15
	jmp L_278950
.p2align 0x4
L_493817:
L_278954:
	movq 0x40(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_278955
.p2align 0x4
.long 0x904
L_278972:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	movl 0x50(%rbp),%r15d
	movl %r15d,0x48(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x60(%rbp),%r14
	movq %r14,0x58(%rbp)
	movq 0x68(%rbp),%r13
	movq %r13,0x60(%rbp)
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq %r13,0x10(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl f_11
.hidden f_11
f_11:
L_279388:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_279406
L_279389:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_493823
L_279390:
	movq 0x0(%rbp),%r13
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r14
	cmpq $0x1,%r14
	je L_493819
L_279391:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq %r11,0x0(%rbp)
	movq %r13,%r14
L_279392:
	movq $0x1591,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	movq %r13,0x10(%rbp)
	addq $0x18,%r12
	addq $0x10,%rbp
	leaq (L_279393+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp f_11
.p2align 0x4
L_493819:
L_279397:
	cmpq $0x1,%r15
	je L_493822
L_279398:
	movq 0x8(%r15),%r14
	movq %r14,0x0(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_279399:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_493821
.p2align 0x4,,0x7
L_279400:
	movq $0x2857,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_493820
L_279401:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_279399
.p2align 0x4
L_493820:
L_279402:
	movq 0x10(%rbp),%r13
	movq 0x8(%rbp),%r11
	movq %r11,0x0(%rbp)
	movq $0x1,%r15
	movq %r13,%r14
	jmp L_279392
.p2align 0x4
L_493821:
L_279403:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_279404+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_279404
.p2align 0x4
.long 0x45B
L_279404:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_279400
.p2align 0x4
L_493822:
L_279405:
	movq $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_493823:
L_279406:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_279407+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_279407
.p2align 0x4
.long 0x451
L_279407:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	jmp L_279390
.p2align 0x4
.long 0x4AF
L_279393:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_279394
L_279395:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_279396+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_279396
.p2align 0x4
.long 0x45F
L_279396:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_279394:
	movq $0x2857,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl do_delete_1
.hidden do_delete_1
do_delete_1:
L_279408:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_279431
L_279409:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_493830
L_279410:
	movq 0x8(%rbp),%r15
	cmpq $0x1,%r15
	je L_493829
L_279411:
	movq 0x8(%r15),%r14
	movq %r14,%r13
	movq %r13,0x10(%rbp)
	movl 0x0(%r15),%r14d
	cmpq $0x1,%r13
	je L_493827
L_279412:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r11
	movq %r11,0x8(%rbp)
	movq 0x8(%r11),%r15
	movq 0x8(%r15),%r10
	movq %r10,0x18(%rbp)
	cmpl %r14d,0x0(%r11)
	jne L_493826
L_279415:
	movq %r13,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_279416+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_121
.p2align 0x4
L_493826:
L_279414:
	movq $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_493827:
L_279423:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r11
	movq 0x8(%r11),%r15
	movq 0x0(%r15),%r10
	movq %r10,0x8(%rbp)
	movq 0x8(%r15),%r10
	movq %r10,0x10(%rbp)
	cmpl %r14d,0x0(%r11)
	jne L_279414
L_279425:
	movq %r13,0x28(%rbp)
	movq $0x285F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x18(%rbp)
	movq %r11,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	addq $0x28,%rbp
	leaq (L_279426+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_121
.p2align 0x4
L_493829:
L_279430:
	movq 0x0(%rbp),%r14
	movq 0x8(%r14),%r13
	movq 0x8(%r13),%r11
	movq 0x8(%r11),%r10
	movq $0x2863,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r10,0x8(%r13)
	movq %r10,0x10(%r13)
	addq $0x28,%r12
	movq $0x1,0x0(%r13)
	movq %r14,0x18(%r13)
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_493830:
L_279431:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_279432+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_279432
.p2align 0x4
.long 0x45F
L_279432:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_279410
.p2align 0x4
.long 0x5EF
L_279416:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq %r15,0x28(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_279417+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp do_delete_1
.p2align 0x4
.long 0x5EF
L_279426:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_279427
L_279428:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_279429+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_279429
.p2align 0x4
.long 0x4E9
L_279429:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_279427:
	movq $0x2863,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x28,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x8(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x18(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4E0
L_279417:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_279418
L_279421:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_279422+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_279422
.p2align 0x4
.long 0x4E7
L_279422:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_279418:
	movq 0x10(%rbp),%r15
	cmpq $0x1,%r15
	je L_279414
L_279419:
	movq 0x18(%r15),%r14
	movq 0x10(%r15),%r13
	movq 0x0(%r15),%r11
	movq $0x285F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r11
	movq %r11,0x0(%r15)
	movq $0x2863,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x10(%r11)
	movq %r14,0x18(%r11)
	addq $0x28,%r12
	movq 0x18(%rbp),%r15
	movq %r15,0x8(%r11)
	movq %r11,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl tryChange_1
.hidden tryChange_1
tryChange_1:
L_279433:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_279434
L_279516:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_279517+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_279517
.p2align 0x4
.long 0x563
L_279517:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_279434:
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je L_493847
L_279435:
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	movq $0x1,0x50(%rbp)
.p2align 0x4,,0x7
L_279436:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_493846
.p2align 0x4,,0x7
L_279437:
	movq $0x285F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_493835
L_279438:
	movq %r15,0x50(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x40(%rbp)
	movq %r15,0x48(%rbp)
	jmp L_279436
.p2align 0x4
L_493835:
L_279439:
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x28(%rbp)
.p2align 0x4,,0x7
L_279440:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_493845
.p2align 0x4,,0x7
L_279441:
	movq $0x26E1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1027,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x1029,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_493836
L_279442:
	movq %r15,0x48(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x40(%rbp)
	jmp L_279440
.p2align 0x4
L_493836:
L_279443:
L_279444:
	movq 0x20(%rbp),%r13
	cmpq $0x1,%r13
	je L_493844
L_279445:
	movq 0x8(%r13),%r14
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_279446:
	incl %ecx
	cmpq $0x1,%r14
	je L_493837
L_279447:
	movq 0x8(%r14),%r14
	jmp L_279446
.p2align 0x4
L_493837:
L_279448:
L_279449:
	addl 0x10(%rbp),%ecx
	jo L_493843
L_279451:
	movq 0x18(%rbp),%r13
	cmpq $0x1,%r13
	je L_493842
L_279452:
	movq 0x8(%r13),%r14
	xorl %ebx,%ebx
.p2align 0x4,,0x7
L_279453:
	incl %ebx
	cmpq $0x1,%r14
	je L_493838
L_279454:
	movq 0x8(%r14),%r14
	jmp L_279453
.p2align 0x4
L_493838:
L_279455:
L_279456:
	subl %ebx,%ecx
	jo L_493841
L_279458:
	addl $0x1E,%ecx
	jo L_493840
L_279460:
	incl %ecx
	jo L_493839
L_279462:
	movl %ecx,0x40(%rbp)
	movq %r15,0x58(%rbp)
	movq (globalObjptr+0x3E68)(%rip),%r15
	movq %r15,0x48(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x40,%rbp
	leaq (L_279463+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp parseStep_7
.p2align 0x4
L_493839:
L_279461:
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_493840:
L_279459:
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_493841:
L_279457:
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_493842:
L_279509:
	xorl %ebx,%ebx
	jmp L_279456
.p2align 0x4
L_493843:
L_279450:
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_493844:
L_279510:
	xorl %ecx,%ecx
	jmp L_279449
.p2align 0x4
L_493845:
L_279511:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_279512+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_279512
.p2align 0x4
.long 0x59F
L_279512:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	jmp L_279441
.p2align 0x4
L_493846:
L_279513:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_279514+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_279514
.p2align 0x4
.long 0x566
L_279514:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	jmp L_279437
.p2align 0x4
L_493847:
L_279515:
	movq 0x28(%rbp),%r14
	xchgq %r14,%r15
	jmp L_279444
.p2align 0x4
.long 0x608
L_279463:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x28(%rbp)
	movl 0x48(%rbp),%r15d
	movl %r15d,0x14(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_279465
L_279507:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_279508+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_279508
.p2align 0x4
.long 0xB63
L_279508:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_279465:
	movq 0x28(%rbp),%r15
	andq $0x3,%r15
	jz L_493903
L_279466:
	movl $0x1E,%ecx
	subl 0x14(%rbp),%ecx
	jo L_493902
L_279468:
	decl %ecx
	jo L_493901
L_279470:
L_279471:
	movq 0x20(%rbp),%r13
	cmpq $0x1,%r13
	je L_493900
L_279472:
	movl %ecx,0x14(%rbp)
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
.p2align 0x4,,0x7
L_279473:
	movl 0x0(%r15),%eax
	subq $0x7,%rax
	cmpq $0x3C,%rax
	ja L_493849
	leaq jumpTable_767(%rip),%rbx
	jmp *(%rbx,%rax,8)
.data
.p2align 0x4
jumpTable_767:
.quad L_279485,L_279485,L_279485,L_279474,L_279485,L_279474,L_279474,L_279485,L_279474,L_279474,L_279474,L_279485,L_279485,L_279485,L_279485,L_279474,L_279474,L_279485,L_279485,L_279485,L_279485,L_279485,L_279485,L_279485,L_279485,L_279474,L_279485,L_279485,L_279485,L_279485,L_279485,L_279474,L_279474,L_279485,L_279485,L_279474,L_279485,L_279485,L_279485,L_279485,L_279485,L_279485,L_279485,L_279474,L_279474,L_279485,L_279474,L_279474,L_279485,L_279485,L_279485,L_279485,L_279485,L_279485,L_279485,L_279485,L_279485,L_279485,L_279474,L_279485,L_493854
.text
.p2align 0x4
L_493849:
L_279474:
	cmpq $0x1,%r14
	je L_493850
L_279475:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_279473
.p2align 0x4
L_493850:
L_279476:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_279477
L_279483:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_279484+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_279484
.p2align 0x4
.long 0x991
L_279484:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_279477:
	xorl %ecx,%ecx
	movl 0x14(%rbp),%ebx
L_279478:
	incl %ecx
	jo L_493852
L_279480:
	cmpl %ecx,%ebx
	jl L_493851
L_279481:
	movq $0x102B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %ebx,0x4(%r15)
	addq $0x30,%r12
	movl 0x10(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movq 0x8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x20(%r15)
	movq $0x2861,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_493851:
L_279482:
	movq $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_493852:
L_279479:
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_493854:
L_279485:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_279486
L_279487:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_279488+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_279488
.p2align 0x4
.long 0x991
L_279488:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_279486:
	movl $0x3,%ecx
	movl 0x14(%rbp),%ebx
	jmp L_279478
.p2align 0x4
L_493900:
L_279489:
	xorl %r15d,%r15d
	movl %ecx,%ebx
	movl %r15d,%ecx
	jmp L_279478
.p2align 0x4
L_493901:
L_279469:
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_493902:
L_279467:
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_493903:
L_279490:
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r14
	andq $0x3,%r14
	jz L_493906
L_279491:
	movl $0x1E,%ecx
	subl 0x14(%rbp),%ecx
	jo L_493905
L_279493:
	decl %ecx
	jo L_493904
L_279495:
	jmp L_279471
.p2align 0x4
L_493904:
L_279494:
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_493905:
L_279492:
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_493906:
L_279496:
	movl $0x1E,%r13d
	subl 0x14(%rbp),%r13d
	jo L_493911
L_279498:
	decl %r13d
	jo L_493910
L_279500:
	cmpl $0x0,%r13d
	jnl L_493908
L_279504:
	movq 0x20(%rbp),%r11
	cmpq $0x1,%r11
	je L_493907
L_279505:
	movl %r13d,0x14(%rbp)
	movq 0x8(%r11),%r14
	movq 0x0(%r11),%r15
	jmp L_279473
.p2align 0x4
L_493907:
L_279506:
	xorl %ecx,%ecx
	movl %r13d,%ebx
	jmp L_279478
.p2align 0x4
L_493908:
L_279501:
	movq 0x20(%rbp),%r13
	cmpq $0x1,%r13
	je L_493909
L_279502:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
	movl $0x1E,0x14(%rbp)
	jmp L_279473
.p2align 0x4
L_493909:
L_279503:
	xorl %ecx,%ecx
	movl $0x1E,%ebx
	jmp L_279478
.p2align 0x4
L_493910:
L_279499:
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_493911:
L_279497:
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl x_2153
.hidden x_2153
x_2153:
L_279518:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x10(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_279519
L_279617:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_279618+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_279618
.p2align 0x4
.long 0x452
L_279618:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_279519:
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_493990
L_279520:
	movq 0x8(%r14),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r14),%r15
	movq $0x1,0x20(%rbp)
L_279521:
	movl 0x0(%r15),%eax
	cmpq $0x4B,%rax
	ja L_493913
	leaq jumpTable_768(%rip),%rbx
	jmp *(%rbx,%rax,8)
.data
.p2align 0x4
jumpTable_768:
.quad L_493989,L_493988,L_493987,L_493986,L_493985,L_493984,L_493983,L_493982,L_493981,L_493980,L_493979,L_493978,L_493977,L_493976,L_493975,L_493974,L_493973,L_493972,L_493971,L_493970,L_493969,L_493968,L_493967,L_493966,L_493965,L_493964,L_493963,L_493962,L_493961,L_493960,L_493959,L_493958,L_493957,L_493956,L_493955,L_493954,L_493953,L_493952,L_493951,L_493950,L_493949,L_493948,L_493947,L_493946,L_493945,L_493944,L_493943,L_493942,L_493941,L_493940,L_493939,L_493938,L_493937,L_493936,L_493935,L_493934,L_493933,L_493932,L_493931,L_493930,L_493929,L_493928,L_493927,L_493926,L_493925,L_493924,L_493923,L_493922,L_493921,L_493920,L_493919,L_493918,L_493917,L_493916,L_493915,L_493914
.text
.p2align 0x4
L_493913:
L_279522:
	movq (globalObjptr+0x10460)(%rip),%r15
L_279523:
	movq %r15,0x30(%rbp)
	leaq L_279539(%rip),%r15
	movq %r15,0x8(%rbp)
	movq %rbp,%r15
	addq $0x10,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_279524+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_493914:
L_279615:
	movq (globalObjptr+0x10508)(%rip),%r15
	jmp L_279523
.p2align 0x4
L_493915:
L_279614:
	movq (globalObjptr+0x10C00)(%rip),%r15
	jmp L_279523
.p2align 0x4
L_493916:
L_279613:
	movq (globalObjptr+0x10BF8)(%rip),%r15
	jmp L_279523
.p2align 0x4
L_493917:
L_279612:
	movq (globalObjptr+0x10BF0)(%rip),%r15
	jmp L_279523
.p2align 0x4
L_493918:
L_279611:
	movq (globalObjptr+0x10BE8)(%rip),%r15
	jmp L_279523
.p2align 0x4
L_493919:
L_279610:
	movq (globalObjptr+0x10BE0)(%rip),%r15
	jmp L_279523
.p2align 0x4
L_493920:
L_279609:
	movq (globalObjptr+0x10BD8)(%rip),%r15
	jmp L_279523
.p2align 0x4
L_493921:
L_279608:
	movq (globalObjptr+0x10BD0)(%rip),%r15
	jmp L_279523
.p2align 0x4
L_493922:
L_279607:
	movq (globalObjptr+0x10BC8)(%rip),%r15
	jmp L_279523
.p2align 0x4
L_493923:
L_279606:
	movq (globalObjptr+0x10BC0)(%rip),%r15
	jmp L_279523
.p2align 0x4
L_493924:
L_279605:
	movq (globalObjptr+0x10BB8)(%rip),%r15
	jmp L_279523
.p2align 0x4
L_493925:
L_279604:
	movq (globalObjptr+0x10BB0)(%rip),%r15
	jmp L_279523
.p2align 0x4
L_493926:
L_279603:
	movq (globalObjptr+0x10BA8)(%rip),%r15
	jmp L_279523
.p2align 0x4
L_493927:
L_279602:
	movq (globalObjptr+0x10BA0)(%rip),%r15
	jmp L_279523
.p2align 0x4
L_493928:
L_279601:
	movq (globalObjptr+0x10B98)(%rip),%r15
	jmp L_279523
.p2align 0x4
L_493929:
L_279600:
	movq (globalObjptr+0x10B90)(%rip),%r15
	jmp L_279523
.p2align 0x4
L_493930:
L_279599:
	movq (globalObjptr+0x104F8)(%rip),%r15
	jmp L_279523
.p2align 0x4
L_493931:
L_279598:
	movq (globalObjptr+0x10B88)(%rip),%r15
	jmp L_279523
.p2align 0x4
L_493932:
L_279597:
	movq (globalObjptr+0x104F0)(%rip),%r15
	jmp L_279523
.p2align 0x4
L_493933:
L_279596:
	movq (globalObjptr+0x10B80)(%rip),%r15
	jmp L_279523
.p2align 0x4
L_493934:
L_279595:
	movq (globalObjptr+0x10B78)(%rip),%r15
	jmp L_279523
.p2align 0x4
L_493935:
L_279594:
	movq (globalObjptr+0x10490)(%rip),%r15
	jmp L_279523
.p2align 0x4
L_493936:
L_279593:
	movq (globalObjptr+0x10B70)(%rip),%r15
	jmp L_279523
.p2align 0x4
L_493937:
L_279592:
	movq (globalObjptr+0x10B68)(%rip),%r15
	jmp L_279523
.p2align 0x4
L_493938:
L_279591:
	movq (globalObjptr+0x10B60)(%rip),%r15
	jmp L_279523
.p2align 0x4
L_493939:
L_279590:
	movq (globalObjptr+0x10B58)(%rip),%r15
	jmp L_279523
.p2align 0x4
L_493940:
L_279589:
	movq (globalObjptr+0x10B50)(%rip),%r15
	jmp L_279523
.p2align 0x4
L_493941:
L_279588:
	movq (globalObjptr+0x10B48)(%rip),%r15
	jmp L_279523
.p2align 0x4
L_493942:
L_279587:
	movq (globalObjptr+0x104E8)(%rip),%r15
	jmp L_279523
.p2align 0x4
L_493943:
L_279586:
	movq (globalObjptr+0x10B40)(%rip),%r15
	jmp L_279523
.p2align 0x4
L_493944:
L_279585:
	movq (globalObjptr+0x10B38)(%rip),%r15
	jmp L_279523
.p2align 0x4
L_493945:
L_279584:
	movq (globalObjptr+0x10B30)(%rip),%r15
	jmp L_279523
.p2align 0x4
L_493946:
L_279583:
	movq (globalObjptr+0x10B28)(%rip),%r15
	jmp L_279523
.p2align 0x4
L_493947:
L_279582:
	movq (globalObjptr+0x10B20)(%rip),%r15
	jmp L_279523
.p2align 0x4
L_493948:
L_279581:
	movq (globalObjptr+0x104E0)(%rip),%r15
	jmp L_279523
.p2align 0x4
L_493949:
L_279580:
	movq (globalObjptr+0x104D8)(%rip),%r15
	jmp L_279523
.p2align 0x4
L_493950:
L_279579:
	movq (globalObjptr+0x10B18)(%rip),%r15
	jmp L_279523
.p2align 0x4
L_493951:
L_279578:
	movq (globalObjptr+0x10B10)(%rip),%r15
	jmp L_279523
.p2align 0x4
L_493952:
L_279577:
	movq (globalObjptr+0x10B08)(%rip),%r15
	jmp L_279523
.p2align 0x4
L_493953:
L_279576:
	movq (globalObjptr+0x10B00)(%rip),%r15
	jmp L_279523
.p2align 0x4
L_493954:
L_279575:
	movq (globalObjptr+0x10AF8)(%rip),%r15
	jmp L_279523
.p2align 0x4
L_493955:
L_279574:
	movq (globalObjptr+0x104D0)(%rip),%r15
	jmp L_279523
.p2align 0x4
L_493956:
L_279573:
	movq (globalObjptr+0x10AF0)(%rip),%r15
	jmp L_279523
.p2align 0x4
L_493957:
L_279572:
	movq (globalObjptr+0x10AE8)(%rip),%r15
	jmp L_279523
.p2align 0x4
L_493958:
L_279571:
	movq (globalObjptr+0x10AE0)(%rip),%r15
	jmp L_279523
.p2align 0x4
L_493959:
L_279570:
	movq (globalObjptr+0x104C8)(%rip),%r15
	jmp L_279523
.p2align 0x4
L_493960:
L_279569:
	movq (globalObjptr+0x10AD8)(%rip),%r15
	jmp L_279523
.p2align 0x4
L_493961:
L_279568:
	movq (globalObjptr+0x10AD0)(%rip),%r15
	jmp L_279523
.p2align 0x4
L_493962:
L_279567:
	movq (globalObjptr+0x10AC8)(%rip),%r15
	jmp L_279523
.p2align 0x4
L_493963:
L_279566:
	movq (globalObjptr+0x10AC0)(%rip),%r15
	jmp L_279523
.p2align 0x4
L_493964:
L_279565:
	movq (globalObjptr+0x10AB8)(%rip),%r15
	jmp L_279523
.p2align 0x4
L_493965:
L_279564:
	movq (globalObjptr+0x10AB0)(%rip),%r15
	jmp L_279523
.p2align 0x4
L_493966:
L_279563:
	movq (globalObjptr+0x104C0)(%rip),%r15
	jmp L_279523
.p2align 0x4
L_493967:
L_279562:
	movq (globalObjptr+0x10498)(%rip),%r15
	jmp L_279523
.p2align 0x4
L_493968:
L_279561:
	movq (globalObjptr+0x104B8)(%rip),%r15
	jmp L_279523
.p2align 0x4
L_493969:
L_279560:
	movq (globalObjptr+0x10AA8)(%rip),%r15
	jmp L_279523
.p2align 0x4
L_493970:
L_279559:
	movq (globalObjptr+0x10AA0)(%rip),%r15
	jmp L_279523
.p2align 0x4
L_493971:
L_279558:
	movq (globalObjptr+0x10A98)(%rip),%r15
	jmp L_279523
.p2align 0x4
L_493972:
L_279557:
	movq (globalObjptr+0x10488)(%rip),%r15
	jmp L_279523
.p2align 0x4
L_493973:
L_279556:
	movq (globalObjptr+0x10A90)(%rip),%r15
	jmp L_279523
.p2align 0x4
L_493974:
L_279555:
	movq (globalObjptr+0x10A88)(%rip),%r15
	jmp L_279523
.p2align 0x4
L_493975:
L_279554:
	movq (globalObjptr+0x10A80)(%rip),%r15
	jmp L_279523
.p2align 0x4
L_493976:
L_279553:
	movq (globalObjptr+0x10A78)(%rip),%r15
	jmp L_279523
.p2align 0x4
L_493977:
L_279552:
	movq (globalObjptr+0x10A70)(%rip),%r15
	jmp L_279523
.p2align 0x4
L_493978:
L_279551:
	movq (globalObjptr+0x10A68)(%rip),%r15
	jmp L_279523
.p2align 0x4
L_493979:
L_279550:
	movq (globalObjptr+0x10A60)(%rip),%r15
	jmp L_279523
.p2align 0x4
L_493980:
L_279549:
	movq (globalObjptr+0x10A58)(%rip),%r15
	jmp L_279523
.p2align 0x4
L_493981:
L_279548:
	movq (globalObjptr+0x104A0)(%rip),%r15
	jmp L_279523
.p2align 0x4
L_493982:
L_279547:
	movq (globalObjptr+0x10A50)(%rip),%r15
	jmp L_279523
.p2align 0x4
L_493983:
L_279546:
	movq (globalObjptr+0x10A48)(%rip),%r15
	jmp L_279523
.p2align 0x4
L_493984:
L_279545:
	movq (globalObjptr+0x10A40)(%rip),%r15
	jmp L_279523
.p2align 0x4
L_493985:
L_279544:
	movq (globalObjptr+0x10518)(%rip),%r15
	jmp L_279523
.p2align 0x4
L_493986:
L_279543:
	movq (globalObjptr+0x10A38)(%rip),%r15
	jmp L_279523
.p2align 0x4
L_493987:
L_279542:
	movq (globalObjptr+0x10A30)(%rip),%r15
	jmp L_279523
.p2align 0x4
L_493988:
L_279541:
	movq (globalObjptr+0x10A28)(%rip),%r15
	jmp L_279523
.p2align 0x4
L_493989:
L_279540:
	movq (globalObjptr+0x10A20)(%rip),%r15
	jmp L_279523
.p2align 0x4
L_493990:
L_279616:
	movq $0x1,%r15
L_279532:
	movq %r15,0x20(%rbp)
	leaq L_279534(%rip),%r15
	movq %r15,0x8(%rbp)
	movq %rbp,%r15
	addq $0x10,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x20,%rbp
	leaq (L_279533+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x519
L_279524:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_279525
L_279537:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_279538+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_279538
.p2align 0x4
.long 0x51C
L_279538:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_279525:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_493992
L_279526:
	movq %r15,0x20(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	jmp L_279521
.p2align 0x4
L_493992:
L_279527:
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq $0x1,0x28(%rbp)
.p2align 0x4,,0x7
L_279528:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_493994
.p2align 0x4,,0x7
L_279529:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_279532
L_279530:
	movq %r15,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_279528
.p2align 0x4
L_493994:
L_279535:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_279536+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_279536
.p2align 0x4
.long 0x51C
L_279536:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_279529
.p2align 0x4
.long 0x72E
L_279539:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x48A
L_279533:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x10(%rbp),%r14
	movq %r14,(gcState+0x20)(%rip)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x72E
L_279534:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl openBasis_0
.hidden openBasis_0
openBasis_0:
L_279619:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_279694
L_279620:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_494017
L_279621:
	movq 0x10(%rbp),%r15
	movq 0x30(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x40(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x48(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x58(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x88(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x90(%rbp)
	movq 0x10(%r14),%r13
	movq %r13,0x98(%rbp)
	movq 0x18(%r14),%r13
	movq %r13,0xA0(%rbp)
	movq 0x28(%r14),%r13
	movq %r13,0xA8(%rbp)
	movq 0x30(%r14),%r13
	movq %r13,0xB0(%rbp)
	movq 0x38(%r14),%r13
	movq %r13,0xB8(%rbp)
	movq 0x50(%r15),%r14
	movq 0x0(%r14),%r11
	movq %r11,0xC0(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movl %r15d,%r14d
	movl %r14d,0xC8(%rbp)
	movslq %r14d,%r11
	cmpq %r15,%r11
	jne L_279623
L_279624:
	cmpl $0x0,%r14d
	jl L_279657
L_279625:
	movl $0x0,0x10(%rbp)
loop_3346:
	movl 0xC8(%rbp),%r15d
	cmpl %r15d,0x10(%rbp)
	jl L_494014
L_279626:
	movq 0xB0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x10(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_279623
L_279628:
	cmpl $0x0,%r13d
	jl L_279657
L_279629:
	movl $0x0,0x14(%rbp)
loop_3347:
	movl 0x10(%rbp),%r15d
	cmpl %r15d,0x14(%rbp)
	jl L_494011
L_279630:
	movq 0xA8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x10(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_279623
L_279632:
	cmpl $0x0,%r13d
	jl L_279657
L_279633:
	movl $0x0,0x14(%rbp)
loop_3348:
	movl 0x10(%rbp),%r15d
	cmpl %r15d,0x14(%rbp)
	jl L_494008
L_279634:
	movq 0xA0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x10(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_279623
L_279636:
	cmpl $0x0,%r13d
	jl L_279657
L_279637:
	movl $0x0,0x14(%rbp)
loop_3349:
	movl 0x10(%rbp),%r15d
	cmpl %r15d,0x14(%rbp)
	jl L_494005
L_279638:
	movq 0x98(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x10(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_279623
L_279640:
	cmpl $0x0,%r13d
	jl L_279657
L_279641:
	movl $0x0,0x14(%rbp)
loop_3350:
	movl 0x10(%rbp),%r15d
	cmpl %r15d,0x14(%rbp)
	jl L_494002
L_279642:
	movq 0x88(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x10(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_279623
L_279644:
	cmpl $0x0,%r13d
	jl L_279657
L_279645:
	movl $0x0,0x14(%rbp)
loop_3351:
	movl 0x10(%rbp),%r15d
	cmpl %r15d,0x14(%rbp)
	jl L_493999
L_279646:
	movq 0x90(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x10(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_493998
L_279648:
	cmpl $0x0,%r13d
	jl L_493997
L_279649:
	movl $0x0,0x14(%rbp)
loop_3352:
	movl 0x10(%rbp),%r15d
	cmpl %r15d,0x14(%rbp)
	jl L_493996
L_279650:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_493996:
L_279651:
	movslq 0x14(%rbp),%r15
	movq 0x90(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x8(%r13),%r11
	movl 0x0(%r13),%r10d
	movq 0x10(%r13),%r9
	movq 0x18(%r13),%r8
	movq $0x1711,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r10d,0x0(%r15)
	movq %r11,0x8(%r15)
	movq %r9,0x18(%r15)
	movq %r8,0x20(%r15)
	addq $0x30,%r12
	movl $0x0,0x4(%r15)
	movq 0xC0(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0xD0(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0xD8(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0xE0(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0xE8(%rbp)
	addq $0xD0,%rbp
	leaq (L_279652+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1236
.p2align 0x4
L_493997:
L_279657:
	movq (globalObjptr+0x4F8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_493998:
L_279623:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_493999:
L_279658:
	movslq 0x14(%rbp),%r15
	movq 0x88(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x8(%r13),%r11
	movl 0x0(%r13),%r10d
	movq 0x10(%r13),%r9
	movq 0x18(%r13),%r8
	movq $0x170F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r10d,0x0(%r15)
	movq %r11,0x8(%r15)
	movq %r9,0x18(%r15)
	movq %r8,0x20(%r15)
	addq $0x30,%r12
	movl $0x0,0x4(%r15)
	movq 0xC0(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0xD0(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0xD8(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0xE0(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0xE8(%rbp)
	addq $0xD0,%rbp
	leaq (L_279659+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1237
.p2align 0x4
L_494002:
L_279664:
	movslq 0x14(%rbp),%r15
	movq 0x98(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x8(%r13),%r11
	movl 0x0(%r13),%r10d
	movq 0x10(%r13),%r9
	movq 0x18(%r13),%r8
	movq $0x170D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r10d,0x0(%r15)
	movq %r11,0x8(%r15)
	movq %r9,0x18(%r15)
	movq %r8,0x20(%r15)
	addq $0x30,%r12
	movl $0x0,0x4(%r15)
	movq 0xC0(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0xD0(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0xD8(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0xE0(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0xE8(%rbp)
	addq $0xD0,%rbp
	leaq (L_279665+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1238
.p2align 0x4
L_494005:
L_279670:
	movslq 0x14(%rbp),%r15
	movq 0xA0(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x8(%r13),%r11
	movl 0x0(%r13),%r10d
	movq 0x10(%r13),%r9
	movq 0x18(%r13),%r8
	movq $0x17D3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r10d,0x0(%r15)
	movq %r11,0x8(%r15)
	movq %r9,0x18(%r15)
	movq %r8,0x20(%r15)
	addq $0x30,%r12
	movl $0x0,0x4(%r15)
	movq 0xC0(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0xD0(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0xD8(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0xE0(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0xE8(%rbp)
	addq $0xD0,%rbp
	leaq (L_279671+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1993
.p2align 0x4
L_494008:
L_279676:
	movslq 0x14(%rbp),%r15
	movq 0xA8(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x8(%r13),%r11
	movl 0x0(%r13),%r10d
	movq 0x10(%r13),%r9
	movq 0x18(%r13),%r8
	movq $0x17D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r10d,0x0(%r15)
	movq %r11,0x8(%r15)
	movq %r9,0x18(%r15)
	movq %r8,0x20(%r15)
	addq $0x30,%r12
	movl $0x0,0x4(%r15)
	movq 0xC0(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0xD0(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0xD8(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0xE0(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0xE8(%rbp)
	addq $0xD0,%rbp
	leaq (L_279677+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1992
.p2align 0x4
L_494011:
L_279682:
	movslq 0x14(%rbp),%r15
	movq 0xB0(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x8(%r13),%r11
	movl 0x0(%r13),%r10d
	movq 0x10(%r13),%r9
	movq 0x18(%r13),%r8
	movq $0x17D7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r10d,0x0(%r15)
	movq %r11,0x8(%r15)
	movq %r9,0x18(%r15)
	movq %r8,0x20(%r15)
	addq $0x30,%r12
	movl $0x0,0x4(%r15)
	movq 0xC0(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0xD0(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0xD8(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0xE0(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0xE8(%rbp)
	addq $0xD0,%rbp
	leaq (L_279683+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1991
.p2align 0x4
L_494014:
L_279688:
	movslq 0x10(%rbp),%r15
	movq 0xB8(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x8(%r13),%r11
	movl 0x0(%r13),%r10d
	movq 0x10(%r13),%r9
	movq 0x18(%r13),%r8
	movq $0x17D9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r10d,0x0(%r15)
	movq %r11,0x8(%r15)
	movq %r9,0x18(%r15)
	movq %r8,0x20(%r15)
	addq $0x30,%r12
	movl $0x0,0x4(%r15)
	movq 0xC0(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0xD8(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0xE0(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0xE8(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0xF0(%rbp)
	addq $0xD8,%rbp
	leaq (L_279689+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1990
.p2align 0x4
L_494017:
L_279694:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_279695+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_279695
.p2align 0x4
.long 0x45B
L_279695:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_279621
.p2align 0x4
.long 0x4552
L_279652:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_279653
L_279654:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_279655+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_279655
.p2align 0x4
.long 0x4553
L_279655:
	addq $0xFFFFFFFFFFFFFF30,%rbp
L_279653:
	incl 0x14(%rbp)
	jmp loop_3352
.p2align 0x4
.long 0x4554
L_279659:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_279660
L_279661:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_279662+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_279662
.p2align 0x4
.long 0x4555
L_279662:
	addq $0xFFFFFFFFFFFFFF30,%rbp
L_279660:
	incl 0x14(%rbp)
	jmp loop_3351
.p2align 0x4
.long 0x4556
L_279665:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_279666
L_279667:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_279668+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_279668
.p2align 0x4
.long 0x4557
L_279668:
	addq $0xFFFFFFFFFFFFFF30,%rbp
L_279666:
	incl 0x14(%rbp)
	jmp loop_3350
.p2align 0x4
.long 0x4558
L_279671:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_279672
L_279673:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_279674+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_279674
.p2align 0x4
.long 0x4559
L_279674:
	addq $0xFFFFFFFFFFFFFF30,%rbp
L_279672:
	incl 0x14(%rbp)
	jmp loop_3349
.p2align 0x4
.long 0x455A
L_279677:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_279678
L_279679:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_279680+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_279680
.p2align 0x4
.long 0x455B
L_279680:
	addq $0xFFFFFFFFFFFFFF30,%rbp
L_279678:
	incl 0x14(%rbp)
	jmp loop_3348
.p2align 0x4
.long 0x455C
L_279683:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_279684
L_279685:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_279686+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_279686
.p2align 0x4
.long 0x455D
L_279686:
	addq $0xFFFFFFFFFFFFFF30,%rbp
L_279684:
	incl 0x14(%rbp)
	jmp loop_3347
.p2align 0x4
.long 0x455E
L_279689:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_279690
L_279691:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_279692+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_279692
.p2align 0x4
.long 0x455F
L_279692:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_279690:
	incl 0x10(%rbp)
	jmp loop_3346
.text
.p2align 0x4
.globl x_1990
.hidden x_1990
x_1990:
L_279696:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_279697
L_279762:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_279763+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_279763
.p2align 0x4
.long 0x4AE
L_279763:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_279697:
	movq 0x18(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x10(%rbp),%r15
	movq 0x28(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movl 0x0(%r15),%r14d
	movl %r14d,0x50(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x70(%rbp)
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_279698+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_23
.p2align 0x4
.long 0x729
L_279698:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_279699
L_279760:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_279761+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_279761
.p2align 0x4
.long 0x72C
L_279761:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_279699:
	movq 0x10(%rbp),%r14
	movq 0x0(%r14),%r13
	cmpq $0x1,%r13
	je L_279706
L_279700:
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r15,0x18(%rbp)
	movq %r13,%r15
.p2align 0x4,,0x7
L_279701:
	movq 0x18(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x1071,%r13
	je L_494037
L_279702:
	cmpq $0x1,%r15
	je L_494027
L_279703:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r14,0x18(%rbp)
	jmp L_279701
.p2align 0x4
L_494027:
L_279704:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_279706
L_279753:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_279754+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_279754
.p2align 0x4
.long 0x72C
L_279754:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_279706:
	movq $0x1E5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x20E3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq 0x10(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x20E5,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r10,0x0(%r13)
	movq %r15,0x10(%rbp)
L_279707:
	movq 0x10(%rbp),%r13
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_494033
L_279708:
	movq 0x8(%r15),%r14
	movq 0x58(%rbp),%r11
	movq 0x0(%r15),%r10
	movq 0x10(%r10),%r9
	movq 0x8(%r9),%r8
	cmpq %r8,0x8(%r11)
	je L_494030
L_279709:
	movq 0x40(%rbp),%r11
	movq 0x0(%r11),%r14
	movq $0x268B,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x8(%r10)
	addq $0x18,%r12
	movq %r13,0x0(%r10)
	movq %r11,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq %r10,0x0(%r11)
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_494028
L_279710:
L_279711:
	movq $0x11CB,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x30,%r12
	movl 0x50(%rbp),%r14d
	movl %r14d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq 0x58(%rbp),%r14
	movq %r14,0x10(%r13)
	movq 0x60(%rbp),%r14
	movq %r14,0x18(%r13)
	movq 0x68(%rbp),%r14
	movq %r14,0x20(%r13)
	movq $0x24EB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r15
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_494028:
L_279712:
	movq 0x30(%rbp),%r13
	cmpq $0x1,0x0(%r13)
L_279714:
	movq $0x6E5,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0x53,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movl $0x0,0x0(%r11)
	movl $0x0,0x4(%r11)
	movq 0x28(%rbp),%r10
	movl 0x0(%r10),%r9d
	testl %r9d,%r9d
L_279716:
	movq $0x6E7,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r13,0x8(%r10)
	addq $0x18,%r12
	movq %r11,0x0(%r10)
	movq 0x20(%rbp),%r13
	movq 0x10(%r13),%r9
	movl 0x0(%r9),%r8d
	testl %r8d,%r8d
	jnz L_494029
L_279717:
	movl $0x1,0x0(%r11)
	xchgq %r10,%r14
	jmp L_279711
.p2align 0x4
L_494029:
	xchgq %r10,%r14
	jmp L_279711
.p2align 0x4
L_494030:
L_279721:
	movq 0x48(%rbp),%r11
	cmpq $0x1,%r11
	je L_494031
L_279722:
	movq %r14,%r15
	movq %r11,%r14
L_279723:
	movq $0x11CB,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x30,%r12
	movl 0x50(%rbp),%r14d
	movl %r14d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq 0x58(%rbp),%r14
	movq %r14,0x10(%r13)
	movq 0x60(%rbp),%r14
	movq %r14,0x18(%r13)
	movq 0x68(%rbp),%r14
	movq %r14,0x20(%r13)
	movq $0x24EB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r15
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_494031:
L_279724:
	movq 0x30(%rbp),%r10
	cmpq $0x1,0x0(%r10)
L_279726:
	movq $0x6E5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x53,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	addq $0x10,%r12
	movl $0x0,0x0(%r10)
	movl $0x0,0x4(%r10)
	movq 0x28(%rbp),%r9
	movl 0x0(%r9),%r8d
	testl %r8d,%r8d
L_279728:
	movq $0x6E7,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r15,0x8(%r9)
	addq $0x18,%r12
	movq %r10,0x0(%r9)
	movq 0x20(%rbp),%r8
	movq 0x10(%r8),%rsp
	movl 0x0(%rsp),%esi
	testl %esi,%esi
	jnz L_494032
L_279729:
	movl $0x1,0x0(%r10)
	movq %r14,%r15
	movq %r9,%r14
	jmp L_279723
.p2align 0x4
L_494032:
	movq %r14,%r15
	movq %r9,%r14
	jmp L_279723
.p2align 0x4
L_494033:
L_279733:
	movq 0x58(%rbp),%r15
	movl 0x0(%r15),%r14d
	testl %r14d,%r14d
	jz new_55
L_279746:
	movq 0x38(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x98(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x70(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x80(%rbp)
	movq %r14,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_279747+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_0
.p2align 0x4
new_55:
new_18:
	movq 0x40(%rbp),%r14
	movq 0x0(%r14),%r15
	movq $0x268B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x10(%rbp),%r11
	movq %r11,0x0(%r13)
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	movq 0x48(%rbp),%r15
	cmpq $0x1,%r15
	je L_494034
L_279735:
L_279736:
	movq $0x11CB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x30,%r12
	movl 0x50(%rbp),%r15d
	movl %r15d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x58(%rbp),%r15
	movq %r15,0x10(%r14)
	movq 0x60(%rbp),%r15
	movq %r15,0x18(%r14)
	movq 0x68(%rbp),%r15
	movq %r15,0x20(%r14)
	movq $0x24EB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_494034:
L_279737:
	movq 0x30(%rbp),%r14
	cmpq $0x1,0x0(%r14)
L_279739:
	movq $0x6E5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x53,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movl $0x0,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq 0x28(%rbp),%r11
	movl 0x0(%r11),%r10d
	testl %r10d,%r10d
L_279741:
	movq $0x6E7,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x8(%r11)
	addq $0x18,%r12
	movq %r13,0x0(%r11)
	movq 0x20(%rbp),%r14
	movq 0x10(%r14),%r10
	movl 0x0(%r10),%r9d
	testl %r9d,%r9d
	jnz L_494035
L_279742:
	movl $0x1,0x0(%r13)
	xchgq %r11,%r15
	jmp L_279736
.p2align 0x4
L_494035:
	xchgq %r11,%r15
	jmp L_279736
.p2align 0x4
L_494037:
L_279755:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_279756
L_279757:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_279758+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_279758
.p2align 0x4
.long 0x72D
L_279758:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_279756:
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	jmp L_279707
.p2align 0x4
.long 0x72A
L_279747:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movb 0x90(%rbp),%r15b
	movb %r15b,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_279748
L_279751:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_279752+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_279752
.p2align 0x4
.long 0x72B
L_279752:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_279748:
	movb 0x38(%rbp),%r15b
	testb %r15b,%r15b
	jz new_18
L_279750:
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x20E7,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x0(%r15)
	movq $0x1943,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x80(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	movq %r13,0x8(%r10)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%r11,%r15,1)
	movq %r10,0x0(%r14)
	jmp new_18
.text
.p2align 0x4
.globl force_1
.hidden force_1
force_1:
L_279764:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x10(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_280024
L_279765:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_494045
L_279766:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_494044
L_279767:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x1496,%r13
	je L_494043
L_279769:
	movq 0x0(%r14),%r13
	movq %r13,0x18(%rbp)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq $0x1,0x0(%r15)
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x206F,%r15
	je L_494042
L_280022:
	movq 0x28(%r13),%r15
	movq 0x20(%r13),%r14
	movq 0x18(%r13),%r11
	movq 0x10(%r13),%r10
	movq %r10,0x30(%rbp)
	movq 0x8(%r13),%r10
	movq %r10,0x28(%rbp)
	movq 0x0(%r13),%r10
	movq %r10,0x40(%rbp)
	movq $0x409,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r11,0x0(%r13)
	movq %r14,0x8(%r13)
	movq %r15,0x10(%r13)
	movq %r13,0x38(%rbp)
	addq $0x20,%r12
	leaq L_279790(%rip),%r15
	movq %r15,0x8(%rbp)
	movq %rbp,%r15
	addq $0x10,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x28,%rbp
	leaq (L_279854+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp wrapLexAndParse_0
.p2align 0x4
L_494042:
L_279770:
	movq 0x78(%r13),%r15
	movq %r15,0xA8(%rbp)
	movq 0x70(%r13),%r15
	movq %r15,0x20(%rbp)
	movq 0x68(%r13),%r14
	movq %r14,0x28(%rbp)
	movq 0x60(%r13),%r14
	movq %r14,0x30(%rbp)
	movq 0x58(%r13),%r14
	movq %r14,0x38(%rbp)
	movq 0x50(%r13),%r14
	movq %r14,0x40(%rbp)
	movq 0x48(%r13),%r14
	movq %r14,0x48(%rbp)
	movq 0x40(%r13),%r14
	movq %r14,0x50(%rbp)
	movq 0x38(%r13),%r14
	movq %r14,0x58(%rbp)
	movq 0x30(%r13),%r14
	movq %r14,0x60(%rbp)
	movq 0x28(%r13),%r14
	movq %r14,0x68(%rbp)
	movq 0x20(%r13),%r14
	movq %r14,0x70(%rbp)
	movq 0x18(%r13),%r14
	movq %r14,0x78(%rbp)
	movq 0x10(%r13),%r14
	movq %r14,0x80(%rbp)
	movq 0x8(%r13),%r14
	movq %r14,0x88(%rbp)
	movq 0x0(%r13),%r14
	movq %r14,0x90(%rbp)
	leaq L_279790(%rip),%r14
	movq %r14,0x8(%rbp)
	movq %rbp,%r14
	addq $0x10,%r14
	subq (gcState+0x560)(%rip),%r14
	movq %r14,(gcState+0x20)(%rip)
	movq %r15,0xA0(%rbp)
	addq $0xA0,%rbp
	leaq (L_279771+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1208
.p2align 0x4
L_494043:
L_279768:
	movq 0x0(%r14),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_494044:
L_280023:
	movq $0x12,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_494045:
L_280024:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_280025+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_280025
.p2align 0x4
.long 0x452
L_280025:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_279766
.p2align 0x4
.long 0xB26
L_279854:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_279855
L_279856:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_279857+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_279857
.p2align 0x4
.long 0xB27
L_279857:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_279855:
	movq 0x20(%rbp),%r15
L_279785:
	movq $0x292D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq 0x0(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r14,0x0(%r13)
	movq %r15,0x0(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x72E
L_279790:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_279791
L_279792:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_279793+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_279793
.p2align 0x4
.long 0xB28
L_279793:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_279791:
	movq 0x20(%rbp),%r15
L_279777:
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq $0x292F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x0(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4560
L_279771:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movl 0xA0(%rbp),%r15d
	movl %r15d,0x98(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_279772
L_280020:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_280021+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_280021
.p2align 0x4
.long 0x457A
L_280021:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_279772:
	movl 0x98(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_494049
L_279773:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x88(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xAC8)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x10438)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0xA0(%rbp)
	addq $0xA0,%rbp
	leaq (x_920+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_494049:
L_279794:
	movq 0x20(%rbp),%r15
	movq %r15,0xA0(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0xA8(%rbp)
	addq $0xA0,%rbp
	leaq (L_279795+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1208
.p2align 0x4
.long 0x4561
x_920:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x90(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x30(%rbp)
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_279774+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4563
L_279795:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movl 0xA0(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_279796
L_280018:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_280019+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_280019
.p2align 0x4
.long 0x4579
L_280019:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_279796:
	movl 0x28(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_494051
L_279797:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x88(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xAD8)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x10438)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0xA0(%rbp)
	addq $0xA0,%rbp
	leaq (x_920+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_494051:
L_279798:
	movq $0x11AF,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x28(%rbp)
	addq $0x20,%r12
	movq 0x38(%rbp),%r11
	movq %r11,0x0(%r13)
	movq 0x20(%rbp),%r11
	movq %r11,0x8(%r13)
	movq 0x30(%rbp),%r11
	movq %r11,0x10(%r13)
	movq $0x254F,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,0x88(%rbp)
	addq $0x18,%r12
	movq %r13,0x0(%r11)
	movq 0x40(%rbp),%r13
	movq %r13,0x8(%r11)
	cmpq $0x1,%r13
	je L_279806
L_279799:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
.p2align 0x4,,0x7
L_279800:
	movq 0x10(%r15),%r10
	movq 0x30(%rbp),%r9
	cmpq %r9,%r10
	je L_279940
L_279801:
	movq 0xFFFFFFFFFFFFFFF0(%r9),%r13
	cmpq 0xFFFFFFFFFFFFFFF0(%r10),%r13
	jne L_494074
L_279930:
	xorq %r11,%r11
	movq %r10,%r15
.p2align 0x4,,0x7
vectorEqualLoop_221:
	cmpq %r11,%r13
	je L_494073
L_279931:
	movq 0x30(%rbp),%r9
	movb 0x0(%r9,%r11,1),%r10b
	cmpb %r10b,0x0(%r15,%r11,1)
	jne L_494052
L_279938:
	incq %r11
	jmp vectorEqualLoop_221
.p2align 0x4
L_494052:
L_279932:
	cmpq $0x1,%r14
	je L_494053
L_279933:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_279800
.p2align 0x4
L_494053:
L_279934:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_279806
L_279936:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_279937+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_279937
.p2align 0x4
.long 0x456B
L_279937:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_279806:
	movq 0x30(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq %r14,0x28(%rbp)
	movl %r14d,%ecx
	movslq %ecx,%r15
	cmpq %r15,%r14
	jne L_494071
L_279809:
	movl $0x0,0x38(%rbp)
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_3353:
	cmpl %ecx,%ebx
	jnl L_494056
L_279922:
	movl %ebx,%r15d
	incl %r15d
	movslq %ebx,%r14
	cmpq 0x28(%rbp),%r14
	jnb L_494054
L_279927:
	movq 0x30(%rbp),%r13
	movzbl 0x0(%r13,%r14,1),%r11d
	movl 0x38(%rbp),%r14d
	imull $0x1F,%r14d
	addl %r14d,%r11d
	movl %r11d,0x38(%rbp)
	movl %r15d,%ebx
	jmp loop_3353
.p2align 0x4
L_494054:
L_279923:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_279816
L_279925:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_279926+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_279926
.p2align 0x4
.long 0xFC7
L_279926:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_279816:
	movq $0x6,%r15
	jmp L_279777
.p2align 0x4
L_494056:
L_279810:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_279811
L_279920:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_279921+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_279921
.p2align 0x4
.long 0x456B
L_279921:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_279811:
	movq 0x58(%rbp),%r13
	movq 0x0(%r13),%r15
	movq (globalObjptr+0xAE0)(%rip),%r13
	movq 0x0(%r13),%r14
	incq %r14
	jo L_494069
L_279813:
	movq %r14,0x0(%r13)
	movq 0x60(%rbp),%r13
	movl 0x0(%r13),%r11d
	andl 0x38(%rbp),%r11d
	cmpl $0x0,%r11d
	jl L_494067
L_279814:
	movslq %r11d,%r13
	movq %r13,0x38(%rbp)
	cmpq 0xFFFFFFFFFFFFFFF0(%r15),%r13
	jnb L_279816
L_279817:
	movq 0x0(%r15,%r13,8),%r11
	movq %r11,0x40(%rbp)
	cmpq $0x1,%r11
	je L_279829
L_279818:
	movq 0x8(%r11),%r14
	movq 0x0(%r11),%r15
.p2align 0x4,,0x7
L_279819:
	movq (globalObjptr+0xAE8)(%rip),%r10
	movq 0x0(%r10),%r13
	incq %r13
	jo L_494063
L_279824:
	movq %r13,0x0(%r10)
	movq 0x8(%r15),%r13
	cmpq 0x30(%rbp),%r13
	je L_279916
L_279825:
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r10
	cmpq %r10,0x28(%rbp)
	jne L_494060
L_279909:
	xorq %r11,%r11
.p2align 0x4,,0x7
vectorEqualLoop_220:
	cmpq 0x28(%rbp),%r11
	je L_494059
L_279910:
	movq 0x30(%rbp),%r9
	movb 0x0(%r9,%r11,1),%r10b
	cmpb %r10b,0x0(%r13,%r11,1)
	jne L_494057
L_279914:
	incq %r11
	jmp vectorEqualLoop_220
.p2align 0x4
L_494057:
L_279911:
	cmpq $0x1,%r14
	je L_494058
L_279912:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_279819
.p2align 0x4
L_494058:
L_279829:
	movq 0x30(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_279830+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromString_24
.p2align 0x4
L_494059:
L_279916:
	movq 0x0(%r15),%r14
	movq %r14,%r15
L_279853:
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_279854+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp force_1
.p2align 0x4
L_494060:
L_279826:
	cmpq $0x1,%r14
	je L_279829
L_279827:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_279819
.p2align 0x4
L_494063:
L_279820:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_279821
L_279822:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_279823+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	movq %r10,%rbx
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_279823
.p2align 0x4
.long 0xFC7
L_279823:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_279821:
	movq (globalObjptr+0xAF0)(%rip),%r15
	jmp L_279777
.p2align 0x4
L_494067:
L_279775:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_279776
L_279778:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_279779+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_279779
.p2align 0x4
.long 0xFC7
L_279779:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_279776:
	movq $0x3,%r15
	jmp L_279777
.p2align 0x4
L_494069:
L_279812:
	movq (globalObjptr+0xAF8)(%rip),%r15
	jmp L_279777
.p2align 0x4
L_494071:
L_279808:
	movq (globalObjptr+0x4D8)(%rip),%r15
	jmp L_279777
.p2align 0x4
L_494073:
L_279940:
	movq (globalObjptr+0x10C08)(%rip),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_279941+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_494074:
L_279802:
	cmpq $0x1,%r14
	je L_494075
L_279803:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_279800
.p2align 0x4
L_494075:
L_279804:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_279806
L_279928:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_279929+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_279929
.p2align 0x4
.long 0x456B
L_279929:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	jmp L_279806
.p2align 0x4
.long 0x4562
L_279774:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	incl %r13d
	jo L_279775
L_279780:
	movl %r13d,0x0(%r14)
	movq 0x30(%rbp),%r14
	movq %r14,0x38(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r14
	movq %r14,0x40(%rbp)
	movq 0x28(%rbp),%r14
	movq %r14,0x48(%rbp)
	movq %r15,0x30(%rbp)
	movq (globalObjptr+0x9D0)(%rip),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_279781+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
.long 0x4564
L_279830:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x28(%rbp)
	movl 0xA0(%rbp),%r15d
	movl %r15d,0x48(%rbp)
	movq 0xA8(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_279831
L_279907:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_279908+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_279908
.p2align 0x4
.long 0x456A
L_279908:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_279831:
	movq 0x50(%rbp),%r15
	cmpq $0x1,%r15
	je L_494086
L_279832:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x50(%rbp)
	movq %r14,0x90(%rbp)
	movq $0x1,0x98(%rbp)
.p2align 0x4,,0x7
L_279833:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_494085
.p2align 0x4,,0x7
L_279834:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x90(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x98(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x50(%rbp),%r14
	cmpq $0x1,%r14
	je L_494081
L_279835:
	movq %r15,0x98(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x50(%rbp)
	movq %r15,0x90(%rbp)
	jmp L_279833
.p2align 0x4
L_494081:
L_279836:
	movq 0x98(%rbp),%r15
	cmpq $0x1,%r15
	je L_494084
L_279837:
	movq 0x8(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x90(%rbp)
	movq $0x1,0x98(%rbp)
.p2align 0x4,,0x7
L_279838:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_494083
.p2align 0x4,,0x7
L_279839:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x90(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x98(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x50(%rbp),%r14
	cmpq $0x1,%r14
	je L_494082
L_279840:
	movq %r15,0x98(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x50(%rbp)
	movq %r15,0x90(%rbp)
	jmp L_279838
.p2align 0x4
L_494082:
L_279842:
	movq %r15,0xA8(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x98(%rbp)
	movl 0x48(%rbp),%r15d
	movl %r15d,0xA0(%rbp)
	movq (globalObjptr+0xD3B8)(%rip),%r15
	movq %r15,0xB0(%rbp)
	addq $0x98,%rbp
	leaq (L_279843+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_537
.p2align 0x4
L_494083:
L_279901:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_279902+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_279902
.p2align 0x4
.long 0x4569
L_279902:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	jmp L_279839
.p2align 0x4
L_494084:
L_279903:
	movq $0x1,%r13
	xchgq %r13,%r15
	jmp L_279842
.p2align 0x4
L_494085:
L_279904:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_279905+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_279905
.p2align 0x4
.long 0x4569
L_279905:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	jmp L_279834
.p2align 0x4
L_494086:
L_279906:
	movq 0x30(%rbp),%r14
	xchgq %r14,%r15
L_279845:
	movq $0x40E1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x28(%r14)
	addq $0x38,%r12
	movq 0x68(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x20(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x70(%rbp),%r15
	movq %r15,0x10(%r14)
	movq 0x88(%rbp),%r15
	movq %r15,0x18(%r14)
	movq 0x78(%rbp),%r15
	movq %r15,0x20(%r14)
	movq $0x292F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0xFAB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0xFAD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r14,0x0(%r15)
	movq %r14,0x28(%rbp)
	movq 0x30(%rbp),%rdx
	movq %rdx,0x8(%r15)
	movq 0x80(%rbp),%r14
	movl 0x0(%r14),%r13d
	incl %r13d
	jo L_279775
L_279846:
	movl %r13d,0x0(%r14)
	movq 0x58(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x28F3,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	addq $0x18,%r12
	movq 0x40(%rbp),%r15
	movq %r15,0x8(%r10)
	movq 0x38(%rbp),%r15
	cmpq 0xFFFFFFFFFFFFFFF0(%r11),%r15
	jnb L_279816
L_279848:
	movq %r11,%r9
	shrq $0x8,%r9
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r9,1)
	movq %r10,0x0(%r11,%r15,8)
	movq 0x0(%r13),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r11
	movl %r11d,%r10d
	movslq %r10d,%r9
	cmpq %r11,%r9
	jne L_279808
L_279850:
	movl 0x0(%r14),%r15d
	imull $0x4,%r15d
	jo L_279775
L_279851:
	cmpl %r15d,%r10d
	jnl L_494104
L_279858:
	addl %r10d,%r10d
	jo L_279775
L_279859:
	movq 0x60(%rbp),%r15
	movl 0x0(%r15),%r14d
	shll $0x1,%r14d
	orl $0x1,%r14d
	movl %r14d,0x20(%rbp)
	movslq %r10d,%rdx
	movq %rdx,0x30(%rbp)
	cmpq $0x7FFFFFFF,%rdx
	ja L_494102
L_279860:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x411,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_279861+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_279861
.p2align 0x4
.long 0x4565
L_279861:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq %rax,0x38(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3354:
	cmpq 0x30(%rbp),%r15
	jnl L_494087
L_279897:
	movq 0x38(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_3354
.p2align 0x4
L_494087:
L_279862:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_279863
L_279895:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_279896+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_279896
.p2align 0x4
.long 0x4567
L_279896:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_279863:
	movq 0x58(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movl %r13d,0x24(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_279808
L_279865:
	cmpl $0x0,%r13d
	jl L_494099
L_279866:
	movl $0x0,0x48(%rbp)
.p2align 0x4,,0x7
loop_3355:
	movl 0x48(%rbp),%r15d
	cmpl 0x24(%rbp),%r15d
	jnl L_494098
L_279868:
	movslq %r15d,%r14
	movq 0x40(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	cmpq $0x1,%r13
	je L_279881
L_279869:
	movq 0x8(%r13),%r15
	movq %r15,0x50(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x68(%rbp)
L_279870:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_494096
.p2align 0x4,,0x7
L_279871:
	movq 0x68(%rbp),%r13
	movq 0x8(%r13),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%ecx
	movslq %ecx,%r13
	cmpq %r15,%r13
	jne L_279808
L_279873:
	movl $0x0,0x4C(%rbp)
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_3356:
	cmpl %ecx,%ebx
	jnl L_494090
L_279885:
	movl %ebx,%r13d
	incl %r13d
	movslq %ebx,%r11
	cmpq %r15,%r11
	jnb L_494088
L_279890:
	movzbl 0x0(%r14,%r11,1),%r10d
	movl 0x4C(%rbp),%r11d
	imull $0x1F,%r11d
	addl %r11d,%r10d
	movl %r10d,0x4C(%rbp)
	movl %r13d,%ebx
	jmp loop_3356
.p2align 0x4
L_494088:
L_279886:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_279816
L_279888:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_279889+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_279889
.p2align 0x4
.long 0xFC7
L_279889:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	jmp L_279816
.p2align 0x4
L_494090:
L_279874:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_494094
.p2align 0x4,,0x7
L_279875:
	movl 0x4C(%rbp),%r15d
	andl 0x20(%rbp),%r15d
	cmpl $0x0,%r15d
	jl L_279775
L_279876:
	movslq %r15d,%r14
	cmpq 0x30(%rbp),%r14
	jnb L_279816
L_279878:
	movq 0x38(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	movq $0x28F3,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq 0x68(%rbp),%r13
	movq %r13,0x0(%r11)
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r11,0x0(%r15,%r14,8)
	movq 0x50(%rbp),%r15
	cmpq $0x1,%r15
	je L_494091
L_279879:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x50(%rbp)
	movq %r14,0x68(%rbp)
	jmp L_279870
.p2align 0x4
L_494091:
L_279881:
	incl 0x48(%rbp)
	jmp loop_3355
.p2align 0x4
L_494094:
L_279883:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_279884+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_279884
.p2align 0x4
.long 0x4566
L_279884:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	jmp L_279875
.p2align 0x4
L_494096:
L_279891:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_279892+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_279892
.p2align 0x4
.long 0x4566
L_279892:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	jmp L_279871
.p2align 0x4
L_494098:
L_279867:
	movq 0x58(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x60(%rbp),%r14
	movl 0x20(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movq 0x28(%rbp),%r14
	movq %r14,%r15
	jmp L_279853
.p2align 0x4
L_494099:
L_279894:
	movq (globalObjptr+0x4F8)(%rip),%r15
	jmp L_279777
.p2align 0x4
L_494102:
L_279898:
	movq $0x5,%r15
	jmp L_279777
.p2align 0x4
L_494104:
L_279852:
	movq 0x28(%rbp),%r15
	jmp L_279853
.p2align 0x4
.long 0x2552
L_279941:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_279942+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0xB26
L_279781:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_279782
L_279788:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_279789+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_279789
.p2align 0x4
.long 0xFC7
L_279789:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_279782:
	movq (globalObjptr+0x1610)(%rip),%r15
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_494110
L_279784:
	movq (globalObjptr+0xAB8)(%rip),%r15
	jmp L_279785
.p2align 0x4
L_494110:
L_279787:
	movq (globalObjptr+0x1618)(%rip),%r15
	jmp L_279777
.p2align 0x4
.long 0x4564
L_279843:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_279844
L_279899:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_279900+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_279900
.p2align 0x4
.long 0x4568
L_279900:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_279844:
	movq 0x28(%rbp),%r15
	jmp L_279845
.p2align 0x4
.long 0x3CCB
L_279942:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_279943
L_280014:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_280015+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_280015
.p2align 0x4
.long 0x719
L_280015:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_279943:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x58(%rbp)
	addq $0x18,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_279944:
	addl 0x0(%r15),%ecx
	movl %ecx,0x20(%rbp)
	jo L_279775
L_279945:
	cmpq $0x1,%r14
	je L_494113
L_279946:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_279944
.p2align 0x4
L_494113:
L_279947:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_279948
L_280012:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_280013+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_280013
.p2align 0x4
.long 0x4578
L_280013:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_279948:
	movl 0x20(%rbp),%ecx
	testl %ecx,%ecx
	jz L_494115
L_279949:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
L_279950:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x20(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq 0x28(%rbp),%r15
	movq $0x1,0x30(%rbp)
	movq 0x40(%rbp),%r14
	movq %r14,0x28(%rbp)
L_279951:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movq %r13,0x40(%rbp)
	movq 0x48(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x58(%rbp)
	movq 0x0(%r15),%r13
	cmpq $0x1,%r14
	je L_494114
L_279952:
	movq %r13,0x80(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x60(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x68(%rbp)
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_279953+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp file_0
.p2align 0x4
L_494114:
L_280010:
	movq (globalObjptr+0x10C10)(%rip),%r15
L_279964:
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_279965+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_494115:
L_280011:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_279950
.p2align 0x4
.long 0x7CE
L_279953:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x68(%rbp),%r15
	movl 0x0(%r15),%r14d
	movl %r14d,0x88(%rbp)
	movl 0x4(%r15),%r14d
	movl %r14d,0x78(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x88,%rbp
	leaq (L_279954+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0x2531
L_279965:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq (globalObjptr+0xA160)(%rip),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_279966+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x456C
L_279954:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x68(%rbp)
	movl 0x78(%rbp),%r15d
	movl %r15d,0x80(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_279955+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0x4570
L_279966:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_279967+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x7CF
L_279955:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x78(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_279956
L_280008:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_280009+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_280009
.p2align 0x4
.long 0x7D6
L_280009:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_279956:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xA050)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_279957+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x4571
L_279967:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_279968
L_280002:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_280003+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_280003
.p2align 0x4
.long 0x4576
L_280003:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_279968:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x60(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x68(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x58(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_279969:
	addl 0x0(%r15),%ecx
	movl %ecx,0x40(%rbp)
	jo L_279775
L_279970:
	cmpq $0x1,%r14
	je L_494120
L_279971:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_279969
.p2align 0x4
L_494120:
L_279972:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_279973
L_280000:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_280001+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_280001
.p2align 0x4
.long 0x4575
L_280001:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_279973:
	movl 0x40(%rbp),%ecx
	testl %ecx,%ecx
	jz L_494124
L_279974:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
L_279975:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x28(%rbp),%r13
	cmpq $0x1,%r13
	je L_494121
L_279976:
	movq %r15,0x30(%rbp)
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movq %r13,0x28(%rbp)
	movq %r14,%r15
	jmp L_279951
.p2align 0x4
L_494121:
L_279977:
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq %r14,0x30(%rbp)
	movq $0x1,0x40(%rbp)
.p2align 0x4,,0x7
L_279978:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_494123
.p2align 0x4,,0x7
L_279979:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_494122
L_279980:
	movq %r15,0x40(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x30(%rbp)
	jmp L_279978
.p2align 0x4
L_494122:
L_279981:
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_279982+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3782
.p2align 0x4
L_494123:
L_279997:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_279998+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_279998
.p2align 0x4
.long 0x4574
L_279998:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	jmp L_279979
.p2align 0x4
L_494124:
L_279999:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_279975
.p2align 0x4
.long 0x456D
L_279957:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x60(%rbp),%r15
	movl 0x0(%r15),%r14d
	movl %r14d,0x88(%rbp)
	movl 0x4(%r15),%r14d
	movl %r14d,0x78(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x88,%rbp
	leaq (L_279958+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0x4572
L_279982:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movl 0x60(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_279983
L_279995:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_279996+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_279996
.p2align 0x4
.long 0x4573
L_279996:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_279983:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_494130
L_279984:
	decl %ecx
	jo L_279775
L_279985:
	movq $0x1B67,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl $0x1,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
L_279986:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_279775
L_279987:
	movl %r13d,0x0(%r15)
	movq %r14,0x28(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x40(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x28,%rbp
	leaq (L_279988+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_494130:
L_279994:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_279986
.p2align 0x4
.long 0x456E
L_279958:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x60(%rbp)
	movl 0x78(%rbp),%r15d
	movl %r15d,0x80(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_279959+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0xB26
L_279988:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_279989
L_279992:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_279993+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_279993
.p2align 0x4
.long 0xFC7
L_279993:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_279989:
	movq (globalObjptr+0x1610)(%rip),%r15
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_279787
	jmp L_279784
.p2align 0x4
.long 0x2536
L_279959:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_279960
L_280006:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_280007+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_280007
.p2align 0x4
.long 0x7D3
L_280007:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_279960:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xA050)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_279961+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x456F
L_279961:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_279962
L_280004:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_280005+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_280005
.p2align 0x4
.long 0x4577
L_280005:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_279962:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xD3C0)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xDEC0)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_279963+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x2531
L_279963:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	jmp L_279964
