/* MLton 20130715 (built Mon Jun 13 11:54:01 AEST 2016 on ports.extensibl.com) */
/*   created this file on Mon Jun 13 12:09:56 2016. */
/* Do not edit this file. */
/* Flag settings:  */
/*    align: 8 */
/*    atMLtons: (mlton-compile, @MLton, --) */
/*    chunk: chunk per function */
/*    closureConvertGlobalize: true */
/*    closureConvertShrink: true */
/*    codegen: amd64 */
/*    contifyIntoMain: false */
/*    debug: false */
/*    defaultChar: char8 */
/*    defaultWideChar: widechar32 */
/*    defaultInt: int32 */
/*    defaultReal: real64 */
/*    defaultWord: word32 */
/*    diag passes: [] */
/*    drop passes: [] */
/*    elaborate allowConstant (default): false */
/*    elaborate allowConstant (enabled): true */
/*    elaborate allowFFI (default): false */
/*    elaborate allowFFI (enabled): true */
/*    elaborate allowPrim (default): false */
/*    elaborate allowPrim (enabled): true */
/*    elaborate allowOverload (default): false */
/*    elaborate allowOverload (enabled): true */
/*    elaborate allowRebindEquals (default): false */
/*    elaborate allowRebindEquals (enabled): true */
/*    elaborate deadCode (default): false */
/*    elaborate deadCode (enabled): true */
/*    elaborate forceUsed (default): false */
/*    elaborate forceUsed (enabled): true */
/*    elaborate ffiStr (default):  */
/*    elaborate ffiStr (enabled): true */
/*    elaborate nonexhaustiveExnMatch (default): default */
/*    elaborate nonexhaustiveExnMatch (enabled): true */
/*    elaborate nonexhaustiveMatch (default): warn */
/*    elaborate nonexhaustiveMatch (enabled): true */
/*    elaborate redundantMatch (default): warn */
/*    elaborate redundantMatch (enabled): true */
/*    elaborate resolveScope (default): strdec */
/*    elaborate resolveScope (enabled): true */
/*    elaborate sequenceNonUnit (default): warn */
/*    elaborate sequenceNonUnit (enabled): true */
/*    elaborate warnUnused (default): true */
/*    elaborate warnUnused (enabled): true */
/*    elaborate only: false */
/*    emit main: true */
/*    export header: None */
/*    exn history: false */
/*    generated output format: executable */
/*    gc check: Limit */
/*    indentation: 3 */
/*    inlineIntoMain: true */
/*    inlineLeafA: {loops = true, repeat = true, size = Some 20} */
/*    inlineLeafB: {loops = true, repeat = true, size = Some 40} */
/*    inlineNonRec: {small = 60, product = 320} */
/*    input file: mlton */
/*    keep CoreML: false */
/*    keep def use: true */
/*    keep dot: false */
/*    keep Machine: false */
/*    keep passes: [] */
/*    keep RSSA: false */
/*    keep SSA: false */
/*    keep SSA2: false */
/*    keep SXML: false */
/*    keep XML: false */
/*    extra_: false */
/*    lib dir: /usr/ports/pobj/mlton-20130715/mlton-on-20130715-release/build/lib */
/*    lib target dir: /usr/ports/pobj/mlton-20130715/mlton-on-20130715-release/build/lib/targets/self */
/*    loop passes: 1 */
/*    mark cards: true */
/*    max function size: 10000 */
/*    mlb path vars: [{var = MLTON_ROOT, path = $(LIB_MLTON_DIR)/sml}, {var = SML_LIB, path = $(LIB_MLTON_DIR)/sml}] */
/*    native commented: 0 */
/*    native live stack: false */
/*    native optimize: 1 */
/*    native move hoist: true */
/*    native copy prop: true */
/*    native copy prop cutoff: 1000 */
/*    native cutoff: 100 */
/*    native live transfer: 8 */
/*    native shuffle: true */
/*    native ieee fp: false */
/*    native split: Some 20000 */
/*    optimizationPasses: [<ssa2::default>, <ssa::default>, <sxml::default>, <xml::default>] */
/*    polyvariance: Some {hofo = true, rounds = 2, small = 30, product = 300} */
/*    prefer abs paths: false */
/*    prof passes: [] */
/*    profile: None */
/*    profile branch: false */
/*    profile C: [] */
/*    profile IL: ProfileSource */
/*    profile include/exclude: [(Seq [Star [.], Or [Seq [Seq [[$], [(], [S], [M], [L], [_], [L], [I], [B], [)]]]], Star [.]], false)] */
/*    profile raise: false */
/*    profile stack: false */
/*    profile val: false */
/*    show basis: None */
/*    show def-use: None */
/*    show types: true */
/*    target: self */
/*    target arch: AMD64 */
/*    target OS: OpenBSD */
/*    type check: false */
/*    verbosity: Pass */
/*    warn unrecognized annotation: true */
/*    warn deprecated features: true */
/*    zone cut depth: 100 */
.text
.p2align 0x4
.globl x_1860
.hidden x_1860
x_1860:
L_217323:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_218417
L_217324:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_468545
L_217325:
	movq 0x0(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x1F0(%rbp)
	movq 0x10(%r14),%r13
	movq %r13,0x1F8(%rbp)
	movl 0x0(%r14),%r11d
	movl %r11d,0x200(%rbp)
	movq 0x18(%r14),%r15
	movq %r15,0x208(%rbp)
	movq $0x71,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x210(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x47B,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,0x218(%rbp)
	addq $0x18,%r12
	movq 0x8(%rbp),%r10
	movq %r10,0x0(%r11)
	movq %r14,0x8(%r11)
	movq $0x71,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x220(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x47B,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,0x228(%rbp)
	addq $0x18,%r12
	movq %r10,0x0(%r11)
	movq %r14,0x8(%r11)
	movq 0x10(%rbp),%r14
	movq 0x0(%r14),%r11
	movq %r11,%r14
	andq $0x3,%r14
	cmpq $0x1,%r14
	je L_468532
	cmpq $0x2,%r14
	je L_468531
L_217326:
	movq $0x23A5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x10(%rbp)
	addq $0x18,%r12
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq $0x92B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x230(%rbp)
	addq $0x10,%r12
	movq %r14,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_217327:
	incl %ecx
	movl %ecx,0x204(%rbp)
	jo L_468530
L_217329:
	cmpq $0x1,%r15
	je L_468528
L_217330:
	movq 0x8(%r15),%r15
	jmp L_217327
.p2align 0x4
L_468528:
L_217331:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_217332
L_217945:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x240,%rbp
	leaq (L_217946+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_217946
.p2align 0x4
.long 0x34E8
L_217946:
	addq $0xFFFFFFFFFFFFFDC0,%rbp
L_217332:
	movq $0x4071,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x230(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x238(%rbp)
	movl 0x204(%rbp),%r15d
	movl %r15d,0x240(%rbp)
	addq $0x238,%rbp
	leaq (L_217333+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
L_468530:
L_217328:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_468531:
L_217978:
	shrq $0x2,%r11
	movl %r11d,0x10(%rbp)
	movq $0xD1B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x230(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0xD1D,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,0x238(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r11)
	movq $0xD1F,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r10,0x240(%rbp)
	addq $0x18,%r12
	movq %r11,0x0(%r10)
	movq %r14,0x8(%r10)
	movq $0x71,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x248(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x47B,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,0x250(%rbp)
	addq $0x18,%r12
	movq 0x8(%rbp),%r10
	movq %r10,0x0(%r11)
	movq %r14,0x8(%r11)
	movq $0x71,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x258(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x47B,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,0x260(%rbp)
	addq $0x18,%r12
	movq %r10,0x0(%r11)
	movq %r14,0x8(%r11)
	movq %r15,0x268(%rbp)
	movq %r13,%r15
L_217979:
	movq 0x0(%r15),%r14
	movq %r14,0x270(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x278(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x280(%rbp)
	movq $0x35AB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x28,%r12
	movq 0x258(%rbp),%r13
	movq %r13,0x0(%r15)
	movq %r13,0x8(%r15)
	movq 0x230(%rbp),%r13
	movq %r13,0x10(%r15)
	movq 0x18(%rbp),%r13
	movq %r13,0x18(%r15)
	movq %r15,0x290(%rbp)
	movq %r14,0x298(%rbp)
	addq $0x290,%rbp
	leaq (L_217980+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_0
.p2align 0x4
L_468532:
L_217947:
	movq $0x23A5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x10(%rbp)
	addq $0x18,%r12
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_217948:
	incl %ecx
	movl %ecx,0x204(%rbp)
	jo L_217328
L_217949:
	cmpq $0x1,%r15
	je L_468533
L_217950:
	movq 0x8(%r15),%r15
	jmp L_217948
.p2align 0x4
L_468533:
L_217951:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_217952
L_217976:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x238,%rbp
	leaq (L_217977+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_217977
.p2align 0x4
.long 0x352D
L_217977:
	addq $0xFFFFFFFFFFFFFDC8,%rbp
L_217952:
	movslq 0x204(%rbp),%r15
	movq %r15,0x230(%rbp)
	testq %r15,%r15
	jz L_468542
L_217953:
	cmpq $0x7FFFFFFF,%r15
	ja L_468541
L_217954:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_217955
L_217972:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x240,%rbp
	leaq (L_217973+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_217973
.p2align 0x4
.long 0x3529
L_217973:
	addq $0xFFFFFFFFFFFFFDC0,%rbp
L_217955:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x16A9,%rcx
	movq 0x230(%rbp),%rdx
	movq $0x40,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x240,%rbp
	leaq (L_217956+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_217956
.p2align 0x4
.long 0x3529
L_217956:
	addq $0xFFFFFFFFFFFFFDC0,%rbp
	movq %rax,0x238(%rbp)
L_217957:
	movq 0x10(%rbp),%r15
	movq $0x0,0x10(%rbp)
loop_2408:
	movq 0x230(%rbp),%r14
	cmpq %r14,0x10(%rbp)
	jnl L_468535
L_217959:
	cmpq $0x1,%r15
	je L_468534
L_217960:
	movq 0x8(%r15),%r14
	movq %r14,0x240(%rbp)
	movq 0x0(%r15),%r14
	movq 0x18(%r14),%r13
	movq 0x20(%r14),%r11
	movq %r11,0x248(%rbp)
	movq $0x400B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r15,0x258(%rbp)
	addq $0x10,%r12
	movl $0x1,0x260(%rbp)
	addq $0x258,%rbp
	leaq (L_217961+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
L_468534:
L_217647:
	movq (globalObjptr+0x4B0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_468535:
L_217958:
	movq 0x238(%rbp),%r15
	movq $0x18CB,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x10(%rbp)
L_217363:
	movq 0x20(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x230(%rbp)
	cmpq $0x1,%r14
	je L_468536
L_217364:
	movq (globalObjptr+0x10200)(%rip),%r15
	movq %r15,0x240(%rbp)
	addq $0x240,%rbp
	leaq (L_217365+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_468536:
L_217374:
	movq 0x10(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x20(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_468539
L_217376:
	cmpl $0x0,%r13d
	jl L_468538
L_217377:
	movq $0x1,0x230(%rbp)
	movl $0x0,0x24(%rbp)
loop_2385:
	movl 0x20(%rbp),%r15d
	cmpl %r15d,0x24(%rbp)
	jl L_468537
L_217378:
	movq $0x19D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0xD45,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x20(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x28(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x3CD3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x240(%rbp)
	movl 0x38(%rbp),%r15d
	movl %r15d,0x248(%rbp)
	movl $0x0,0x24C(%rbp)
	addq $0x240,%rbp
	leaq (L_217379+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fold_0
.p2align 0x4
L_468537:
L_217867:
	movslq 0x24(%rbp),%r15
	movq %r15,%r14
	salq $0x4,%r14
	movq 0x10(%rbp),%r13
	movq 0x0(%r13,%r14,1),%r11
	movq %r11,0x238(%rbp)
	salq $0x4,%r15
	movq 0x8(%r13,%r15,1),%r14
	movq %r14,0x240(%rbp)
	movq $0xD0B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x248(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq 0x28(%rbp),%r15
	movq %r15,0x258(%rbp)
	addq $0x258,%rbp
	leaq (L_217868+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_468538:
L_217619:
	movq (globalObjptr+0x4F8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_468539:
L_217346:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_468541:
L_217649:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_468542:
L_217975:
	movq (globalObjptr+0x75F0)(%rip),%r14
	movq %r14,0x238(%rbp)
	jmp L_217957
.p2align 0x4
L_468545:
L_218417:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1F8,%rbp
	leaq (L_218418+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218418
.p2align 0x4
.long 0x3552
L_218418:
	addq $0xFFFFFFFFFFFFFE08,%rbp
	jmp L_217325
.p2align 0x4
.long 0x34E5
L_217333:
	addq $0xFFFFFFFFFFFFFDC8,%rbp
	movq 0x238(%rbp),%r14
	movq %r14,0x230(%rbp)
	movq 0x208(%rbp),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_217334:
	incl %ecx
	movl %ecx,0x204(%rbp)
	jo L_217328
L_217335:
	cmpq $0x1,%r15
	je L_468547
L_217336:
	movq 0x8(%r15),%r15
	jmp L_217334
.p2align 0x4
L_468547:
L_217337:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_217338
L_217943:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x240,%rbp
	leaq (L_217944+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_217944
.p2align 0x4
.long 0x34E8
L_217944:
	addq $0xFFFFFFFFFFFFFDC0,%rbp
L_217338:
	movslq 0x204(%rbp),%r15
	movq %r15,0x238(%rbp)
	testq %r15,%r15
	jz L_468570
L_217339:
	cmpq $0x7FFFFFFF,%r15
	ja L_217649
L_217340:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_217341
L_217939:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x248,%rbp
	leaq (L_217940+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_217940
.p2align 0x4
.long 0x34E6
L_217940:
	addq $0xFFFFFFFFFFFFFDB8,%rbp
L_217341:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1427,%rcx
	movq 0x238(%rbp),%rdx
	movq $0x10,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x248,%rbp
	leaq (L_217342+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_217342
.p2align 0x4
.long 0x34E6
L_217342:
	addq $0xFFFFFFFFFFFFFDB8,%rbp
	movq %rax,0x240(%rbp)
L_217343:
	movq 0x10(%rbp),%r15
	movq $0x0,0x10(%rbp)
loop_2380:
	movq 0x238(%rbp),%r14
	cmpq %r14,0x10(%rbp)
	jnl L_468550
L_217930:
	cmpq $0x1,%r15
	je L_217647
L_217931:
	movq 0x8(%r15),%r14
	movq %r14,0x248(%rbp)
	movq 0x0(%r15),%r14
	movq 0x20(%r14),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movl %r15d,%r14d
	movslq %r14d,%r11
	cmpq %r11,%r15
	jne L_217346
L_217933:
	movl %r14d,0x260(%rbp)
	movq $0x3FA3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r15,0x258(%rbp)
	addq $0x10,%r12
	addq $0x258,%rbp
	leaq (L_217934+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
L_468550:
L_217344:
	movq 0x240(%rbp),%r15
	movq $0x177B,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq %r14,0x10(%rbp)
	movl %r14d,%r15d
	movslq %r15d,%r13
	cmpq %r13,%r14
	jne L_217346
L_217347:
	testl %r15d,%r15d
	jz L_468566
L_217348:
	cmpl $0x0,%r15d
	movl %r15d,(localWord32+0x0)(%rip)
	jl L_217619
L_217349:
	xorl %ecx,%ecx
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_2381:
	cmpl (localWord32+0x0)(%rip),%ebx
	jnl L_468553
L_217923:
	movslq %ebx,%r15
	movq 0x240(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r11
	movl %r11d,%r10d
	movslq %r10d,%r9
	cmpq %r11,%r9
	jne L_217346
L_217925:
	addl %ecx,%r10d
	jo L_217328
L_217926:
	incl %ebx
	movl %r10d,%ecx
	jmp loop_2381
.p2align 0x4
L_468553:
L_217350:
	cmpq $0x0,0x10(%rbp)
	jna L_217352
L_217353:
	movq 0x240(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x238(%rbp)
	movslq %ecx,%rdx
	movq %rdx,0x248(%rbp)
	testq %rdx,%rdx
	jz L_468563
L_217354:
	cmpq $0x7FFFFFFF,%rdx
	ja L_217649
L_217355:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x95F,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x258,%rbp
	leaq (L_217356+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_217356
.p2align 0x4
.long 0x34E7
L_217356:
	addq $0xFFFFFFFFFFFFFDA8,%rbp
	movq %rax,%r15
L_217357:
	xorl %ecx,%ecx
	movq 0x238(%rbp),%r13
	xorl %ebx,%ebx
	xorq %r14,%r14
.p2align 0x4,,0x7
loop_2382:
	cmpq 0x248(%rbp),%r14
	jnl L_468559
.p2align 0x4,,0x7
loop_2407:
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r11
	movl %r11d,%r10d
	movslq %r10d,%r9
	cmpq %r9,%r11
	jne L_217346
L_217913:
	cmpl %r10d,%ecx
	jl L_468556
L_217914:
	incl %ebx
	jo L_217328
L_217915:
	movslq %ebx,%r11
	cmpq 0x10(%rbp),%r11
	jnb L_468554
L_217917:
	movq 0x240(%rbp),%r10
	movq 0x0(%r10,%r11,8),%r13
	xorl %ecx,%ecx
	jmp loop_2407
.p2align 0x4
L_468554:
L_217352:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_468556:
L_217918:
	movslq %ecx,%r10
	cmpq %r11,%r10
	jnb L_217352
L_217920:
	movq 0x0(%r13,%r10,8),%r11
	incl %ecx
	movq %r15,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r11,0x0(%r15,%r14,8)
	incq %r14
	jmp loop_2382
.p2align 0x4
L_468559:
L_217358:
	movq $0x6ED,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x10(%rbp)
L_217359:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x16A9,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x240,%rbp
	leaq (L_217360+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_217360
.p2align 0x4
.long 0x34E8
L_217360:
	addq $0xFFFFFFFFFFFFFDC0,%rbp
	movq %rax,0x238(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2383:
	cmpq $0x1,%r15
	jnl L_468560
L_217910:
	movq %r15,%r14
	movq %r15,%r13
	movq 0x238(%rbp),%r11
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	salq $0x4,%r14
	movq 0x10(%rbp),%r10
	movq %r10,0x0(%r11,%r14,1)
	movq %r11,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r9,%r14,1)
	salq $0x4,%r13
	movq 0x230(%rbp),%r14
	movq %r14,0x8(%r11,%r13,1)
	incq %r15
	jmp loop_2383
.p2align 0x4
L_468560:
L_217361:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_217362
L_217908:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x248,%rbp
	leaq (L_217909+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_217909
.p2align 0x4
.long 0x3525
L_217909:
	addq $0xFFFFFFFFFFFFFDB8,%rbp
L_217362:
	movq 0x238(%rbp),%r15
	movq $0x18CB,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x10(%rbp)
	jmp L_217363
.p2align 0x4
L_468563:
L_217922:
	movq (globalObjptr+0xFE8)(%rip),%r15
	jmp L_217357
.p2align 0x4
L_468566:
L_217928:
	movq $0x1,0x240(%rbp)
	movl $0x0,0x248(%rbp)
	addq $0x240,%rbp
	leaq (L_217929+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
L_468570:
L_217942:
	movq (globalObjptr+0x75E0)(%rip),%r14
	movq %r14,0x240(%rbp)
	jmp L_217343
.p2align 0x4
.long 0x352E
L_217980:
	addq $0xFFFFFFFFFFFFFD70,%rbp
	movq 0x270(%rbp),%r15
	movq %r15,0x290(%rbp)
	movq 0x260(%rbp),%r15
	movq %r15,0x298(%rbp)
	addq $0x290,%rbp
	leaq (L_217981+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_32
.p2align 0x4
.long 0x352A
L_217961:
	addq $0xFFFFFFFFFFFFFDA8,%rbp
	movq 0x258(%rbp),%r15
	movq %r15,0x250(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_217962
L_217969:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x260,%rbp
	leaq (L_217970+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_217970
.p2align 0x4
.long 0x352C
L_217970:
	addq $0xFFFFFFFFFFFFFDA0,%rbp
L_217962:
	movq 0x248(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_217346
L_217964:
	movl %r13d,0x268(%rbp)
	movq $0x3FA5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq %r14,0x260(%rbp)
	addq $0x260,%rbp
	leaq (L_217965+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
.long 0x34E9
L_217365:
	addq $0xFFFFFFFFFFFFFDC0,%rbp
	movq 0x240(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_217366
L_217905:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x240,%rbp
	leaq (L_217906+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_217906
.p2align 0x4
.long 0x34E8
L_217906:
	addq $0xFFFFFFFFFFFFFDC0,%rbp
L_217366:
	movq $0x3E37,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x238(%rbp)
	addq $0x10,%r12
	movq 0x230(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x9D8)(%rip),%r14
	movq %r14,0x248(%rbp)
	movq 0x20(%rbp),%r14
	movq %r14,0x250(%rbp)
	movq %r15,0x258(%rbp)
	addq $0x248,%rbp
	leaq (L_217367+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3780
.p2align 0x4
.long 0x34EB
L_217379:
	addq $0xFFFFFFFFFFFFFDC0,%rbp
	movl 0x3C(%rbp),%r15d
	movl %r15d,%r14d
	decl %r14d
	movl %r14d,0x30(%rbp)
	movslq %r15d,%rdx
	movq %rdx,0x210(%rbp)
	cmpq $0x7FFFFFFF,%rdx
	ja L_217649
L_217380:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xD47,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x240,%rbp
	leaq (L_217381+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_217381
.p2align 0x4
.long 0x34EC
L_217381:
	addq $0xFFFFFFFFFFFFFDC0,%rbp
	movq %rax,0x38(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2386:
	cmpq 0x210(%rbp),%r15
	jnl L_468576
L_217865:
	movq 0x38(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_2386
.p2align 0x4
L_468576:
L_217382:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_217383
L_217863:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x240,%rbp
	leaq (L_217864+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_217864
.p2align 0x4
.long 0x351A
L_217864:
	addq $0xFFFFFFFFFFFFFDC0,%rbp
L_217383:
	movq $0xD49,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x238(%rbp)
	movq $0x4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq %r15,0x240(%rbp)
	movq $0x4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl 0x30(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq %r15,0x248(%rbp)
	movq $0xD43,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq %r15,0x250(%rbp)
	movq $0x4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq %r15,0x258(%rbp)
	movq $0x71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq %r15,0x260(%rbp)
	movq $0x71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x89,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x270(%rbp)
	movq %r15,0x268(%rbp)
	movq 0x40(%rbp),%r15
	movq 0x8(%r15),%r14
	movq $0xD15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0xD17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x48(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r13,0x280(%rbp)
	movq $0x71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x47B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq 0x8(%rbp),%r11
	movq %r11,0x0(%r13)
	movq %r15,0x8(%r13)
	movq $0x89,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r15,0x8(%r11)
	addq $0x18,%r12
	movq $0x8DB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x8(%r15)
	addq $0x30,%r12
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r11
	movq %r11,0x10(%r15)
	movq 0x58(%rbp),%r10
	movq %r10,0x18(%r15)
	movq 0x50(%rbp),%r9
	movq %r9,0x20(%r15)
	movq %r15,0x288(%rbp)
	movq $0x8FD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x40,%r12
	movq %r12,(gcState+0x0)(%rip)
	movq %r14,0x0(%r15)
	movq %r14,0x278(%rbp)
	movq %r11,0x10(%r15)
	movq %r10,0x18(%r15)
	movq %r9,0x20(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x28(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x30(%r15)
	movq %r15,0x290(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x909,%rcx
	movq 0x210(%rbp),%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2A0,%rbp
	leaq (L_217384+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_217384
.p2align 0x4
.long 0x34ED
L_217384:
	addq $0xFFFFFFFFFFFFFD60,%rbp
	movq %rax,0x38(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2387:
	cmpq 0x210(%rbp),%r15
	jnl L_468577
L_217862:
	movq 0x38(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_2387
.p2align 0x4
L_468577:
L_217385:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_217386
L_217860:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2A0,%rbp
	leaq (L_217861+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_217861
.p2align 0x4
.long 0x3519
L_217861:
	addq $0xFFFFFFFFFFFFFD60,%rbp
L_217386:
	movq $0x90B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x298(%rbp)
	movq $0x4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq %r15,0x2A0(%rbp)
	movq $0x4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r12,(gcState+0x0)(%rip)
	movl 0x30(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq %r15,0x2A8(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x90D,%rcx
	movq 0x210(%rbp),%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2B8,%rbp
	leaq (L_217387+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_217387
.p2align 0x4
.long 0x34EE
L_217387:
	addq $0xFFFFFFFFFFFFFD48,%rbp
	movq %rax,0x38(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2388:
	cmpq 0x210(%rbp),%r15
	jnl L_468578
L_217859:
	movq 0x38(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_2388
.p2align 0x4
L_468578:
L_217388:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_217389
L_217857:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2B8,%rbp
	leaq (L_217858+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_217858
.p2align 0x4
.long 0x3518
L_217858:
	addq $0xFFFFFFFFFFFFFD48,%rbp
L_217389:
	movq $0x90F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x4B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x4B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movl 0x30(%rbp),%r11d
	movl %r11d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq $0x911,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x18(%r11)
	addq $0x40,%r12
	movq %r12,(gcState+0x0)(%rip)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r11)
	movq 0x88(%rbp),%r14
	movq %r14,0x10(%r11)
	movq %r15,0x20(%r11)
	movq %r15,0x2B0(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x28(%r11)
	movq 0x78(%rbp),%r15
	movq %r15,0x30(%r11)
	movq %r11,0x2B8(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x913,%rcx
	movq 0x210(%rbp),%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2C8,%rbp
	leaq (L_217390+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_217390
.p2align 0x4
.long 0x34EF
L_217390:
	addq $0xFFFFFFFFFFFFFD38,%rbp
	movq %rax,0x38(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2389:
	cmpq 0x210(%rbp),%r15
	jnl L_468579
L_217856:
	movq 0x38(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_2389
.p2align 0x4
L_468579:
L_217391:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_217392
L_217854:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2C8,%rbp
	leaq (L_217855+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_217855
.p2align 0x4
.long 0x3517
L_217855:
	addq $0xFFFFFFFFFFFFFD38,%rbp
L_217392:
	movq $0x915,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x78(%rbp)
	addq $0x10,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x4B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x4B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movl 0x30(%rbp),%r11d
	movl %r11d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq $0x917,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,0x80(%rbp)
	movq %r14,0x0(%r11)
	movq %r13,0x10(%r11)
	addq $0x38,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r11)
	movq %r15,0x18(%r11)
	movq 0x98(%rbp),%r15
	movq %r15,0x20(%r11)
	movq 0x90(%rbp),%r15
	movq %r15,0x28(%r11)
	movq $0x919,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x88(%rbp)
	addq $0x50,%r12
	movq %r11,0x0(%r15)
	movq 0x2B8(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x2A0(%rbp),%r13
	movq %r13,0x10(%r15)
	movq %r14,0x18(%r15)
	movq 0x2A8(%rbp),%r14
	movq %r14,0x20(%r15)
	movq 0x298(%rbp),%r14
	movq %r14,0x28(%r15)
	movq 0xB0(%rbp),%r14
	movq %r14,0x30(%r15)
	movq 0xA8(%rbp),%r14
	movq %r14,0x38(%r15)
	movq 0xA0(%rbp),%r14
	movq %r14,0x40(%r15)
	movq $0xD11,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x210(%rbp)
	addq $0x28,%r12
	movq 0xD0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xC8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xC0(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0xB8(%rbp),%r14
	movq %r14,0x18(%r15)
	movb $0x7,0x2C8(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0x2D0(%rbp)
	addq $0x2C8,%rbp
	leaq (L_217393+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp runtimeOp_0
.p2align 0x4
.long 0x351B
L_217868:
	addq $0xFFFFFFFFFFFFFDA8,%rbp
	movl 0x258(%rbp),%r15d
	movl %r15d,0x204(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_217869
L_217878:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x258,%rbp
	leaq (L_217879+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_217879
.p2align 0x4
.long 0x3520
L_217879:
	addq $0xFFFFFFFFFFFFFDA8,%rbp
L_217869:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x204(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0x10210)(%rip),%r15
	movq %r15,0x18(%r13)
	movq $0xD0D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x250(%rbp)
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq 0x248(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x23A7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x258(%rbp)
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x230(%rbp),%r13
	movq %r13,0x8(%r14)
	movq $0x33D5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x20,%r12
	movq 0x220(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r13,0x10(%r14)
	movq %r14,0x268(%rbp)
	movq 0x240(%rbp),%r15
	movq %r15,0x270(%rbp)
	addq $0x268,%rbp
	leaq (L_217870+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_5
.p2align 0x4
.long 0x3527
L_217934:
	addq $0xFFFFFFFFFFFFFDA8,%rbp
	movq 0x258(%rbp),%r15
	movq %r15,0x250(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_217935
L_217936:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x260,%rbp
	leaq (L_217937+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_217937
.p2align 0x4
.long 0x3528
L_217937:
	addq $0xFFFFFFFFFFFFFDA0,%rbp
L_217935:
	movq 0x240(%rbp),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq 0x10(%rbp),%r13
	movq 0x250(%rbp),%r11
	movq %r11,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x10(%rbp)
	movq 0x248(%rbp),%r15
	jmp loop_2380
.p2align 0x4
.long 0x3526
L_217929:
	addq $0xFFFFFFFFFFFFFDC0,%rbp
	movq 0x240(%rbp),%r15
	movq %r15,0x10(%rbp)
	jmp L_217359
.p2align 0x4
.long 0x352F
L_217981:
	addq $0xFFFFFFFFFFFFFD70,%rbp
	movq 0x290(%rbp),%r15
	movq %r15,0x270(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_217982
L_218415:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x290,%rbp
	leaq (L_218416+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218416
.p2align 0x4
.long 0x354E
L_218416:
	addq $0xFFFFFFFFFFFFFD70,%rbp
L_217982:
	movq 0x278(%rbp),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x288(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_468598
L_217983:
	movq %r15,0x0(%r13)
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_468597
L_217984:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_217986:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_217987
L_218407:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xCC2,%r13
	jne L_217987
L_218408:
	movq 0x248(%rbp),%r13
	cmpq %r13,0x0(%r14)
	je L_468592
L_217987:
	incl %ecx
	movl %ecx,0x14(%rbp)
	jo L_217328
L_217988:
	cmpq $0x1,%r15
	je L_468587
L_217989:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_217986
.p2align 0x4
L_468587:
L_217990:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_217991
L_218405:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x298,%rbp
	leaq (L_218406+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218406
.p2align 0x4
.long 0x3551
L_218406:
	addq $0xFFFFFFFFFFFFFD68,%rbp
L_217991:
	movl 0x14(%rbp),%ecx
L_217992:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_468589
L_217993:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_217995
L_218404:
	movl %ecx,0x0(%r15)
L_217995:
	movq $0x1985,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x248(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x270(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x288(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	movq $0x35F7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x258(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x278(%rbp)
	addq $0x278,%rbp
	leaq (L_217996+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_0
.p2align 0x4
L_468589:
L_217414:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_468592:
L_218410:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_217414
L_218411:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_217653
L_218413:
	movl %ecx,0x0(%r15)
L_217653:
	movq (globalObjptr+0x578)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_468597:
L_218414:
	xorl %ecx,%ecx
	jmp L_217992
.p2align 0x4
L_468598:
L_217404:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x352B
L_217965:
	addq $0xFFFFFFFFFFFFFDA0,%rbp
	movq 0x260(%rbp),%r15
	movq %r15,0x248(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_217966
L_217967:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x260,%rbp
	leaq (L_217968+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_217968
.p2align 0x4
.long 0x352C
L_217968:
	addq $0xFFFFFFFFFFFFFDA0,%rbp
L_217966:
	movq 0x238(%rbp),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq 0x10(%rbp),%r11
	movq %r11,%r15
	salq $0x4,%r15
	movq 0x248(%rbp),%r10
	movq %r10,0x0(%r14,%r15,1)
	movq %r14,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,%r15
	salq $0x4,%r15
	movq 0x250(%rbp),%r13
	movq %r13,0x8(%r14,%r15,1)
	incq %r11
	movq %r11,0x10(%rbp)
	movq 0x240(%rbp),%r15
	jmp loop_2408
.p2align 0x4
.long 0x34EA
L_217367:
	addq $0xFFFFFFFFFFFFFDB8,%rbp
	movq 0x248(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x248(%rbp)
	movq 0x230(%rbp),%r15
	movq %r15,0x250(%rbp)
	addq $0x248,%rbp
	leaq (L_217368+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x34F0
L_217393:
	addq $0xFFFFFFFFFFFFFD38,%rbp
	movq 0x2C8(%rbp),%r15
	movq %r15,0x30(%rbp)
	movb $0x2,0x2C8(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0x2D0(%rbp)
	addq $0x2C8,%rbp
	leaq (L_217394+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp runtimeOp_0
.p2align 0x4
.long 0x351C
L_217870:
	addq $0xFFFFFFFFFFFFFD98,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_217871
L_217876:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x268,%rbp
	leaq (L_217877+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_217877
.p2align 0x4
.long 0x351F
L_217877:
	addq $0xFFFFFFFFFFFFFD98,%rbp
L_217871:
	movq $0x337F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x210(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x250(%rbp),%r13
	movq %r13,0x8(%r15)
	movq %r14,0x10(%r15)
	movq %r15,0x268(%rbp)
	movq 0x238(%rbp),%r15
	movq %r15,0x270(%rbp)
	addq $0x268,%rbp
	leaq (L_217872+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_5
.p2align 0x4
.long 0x3530
L_217996:
	addq $0xFFFFFFFFFFFFFD88,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_217997
L_218402:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x278,%rbp
	leaq (L_218403+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218403
.p2align 0x4
.long 0x3550
L_218403:
	addq $0xFFFFFFFFFFFFFD88,%rbp
L_217997:
	movq 0x268(%rbp),%r14
	cmpq $0x1,%r14
	je L_468602
L_217998:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x268(%rbp)
	jmp L_217979
.p2align 0x4
L_468602:
L_217999:
	movq $0x71,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x268(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x89,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x270(%rbp)
	addq $0x18,%r12
	movq %r14,0x0(%r13)
	movq %r14,0x8(%r13)
	movq 0x208(%rbp),%r14
	movq %r14,0x278(%rbp)
	movq 0x1F8(%rbp),%r15
L_218000:
	movq 0x18(%r15),%r14
	movq 0x20(%r15),%r13
	movq %r13,0x290(%rbp)
	movq $0x35A9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x20,%r12
	movq 0x270(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r14,0x10(%r15)
	movq %r15,0x288(%rbp)
	addq $0x288,%rbp
	leaq (L_218001+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_0
.p2align 0x4
.long 0x34EA
L_217368:
	addq $0xFFFFFFFFFFFFFDB8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_217369
L_217903:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x248,%rbp
	leaq (L_217904+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_217904
.p2align 0x4
.long 0x3523
L_217904:
	addq $0xFFFFFFFFFFFFFDB8,%rbp
L_217369:
	movq 0x10(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x20(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_217346
L_217371:
	cmpl $0x0,%r13d
	jl L_217619
L_217372:
	movl $0x0,0x24(%rbp)
loop_2384:
	movl 0x24(%rbp),%r15d
	cmpl 0x20(%rbp),%r15d
	jnl L_217374
L_217881:
	movslq %r15d,%r14
	movq %r14,%r15
	salq $0x4,%r15
	movq 0x10(%rbp),%r13
	movq 0x0(%r13,%r15,1),%r11
	movq %r11,0x240(%rbp)
	salq $0x4,%r14
	movq 0x8(%r13,%r14,1),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_217346
L_217883:
	movl %r13d,0x258(%rbp)
	movq $0x3CC1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x250(%rbp)
	addq $0x250,%rbp
	leaq (L_217884+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
.long 0x34F1
L_217394:
	addq $0xFFFFFFFFFFFFFD38,%rbp
	movq 0x2C8(%rbp),%r15
	movq %r15,0x38(%rbp)
	movb $0x0,0x2C8(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0x2D0(%rbp)
	addq $0x2C8,%rbp
	leaq (L_217395+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp runtimeOp_0
.p2align 0x4
.long 0x351D
L_217872:
	addq $0xFFFFFFFFFFFFFD98,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_217873
L_217874:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x268,%rbp
	leaq (L_217875+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_217875
.p2align 0x4
.long 0x351E
L_217875:
	addq $0xFFFFFFFFFFFFFD98,%rbp
L_217873:
	incl 0x24(%rbp)
	movq 0x258(%rbp),%r15
	movq %r15,0x230(%rbp)
	jmp loop_2385
.p2align 0x4
.long 0x3531
L_218001:
	addq $0xFFFFFFFFFFFFFD78,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218002
L_218400:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x288,%rbp
	leaq (L_218401+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218401
.p2align 0x4
.long 0x3548
L_218401:
	addq $0xFFFFFFFFFFFFFD78,%rbp
L_218002:
	movq 0x278(%rbp),%r14
	cmpq $0x1,%r14
	je L_468610
L_218003:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x278(%rbp)
	jmp L_218000
.p2align 0x4
L_468610:
L_218004:
	movq 0x208(%rbp),%r13
	movq %r13,0x270(%rbp)
	movq 0x1F8(%rbp),%r15
L_218005:
	movq 0x20(%r15),%r13
	movq %r13,0x278(%rbp)
	movq 0x18(%r15),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x280(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_217404
L_218006:
	movq %r15,0x0(%r13)
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_468623
L_218007:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movl $0x0,0x14(%rbp)
	movq %r13,%r15
.p2align 0x4,,0x7
L_218009:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_218010
L_218389:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xCAD,%r13
	jne L_218010
L_218390:
	movq 0x8(%r14),%r13
	movq %r13,0x288(%rbp)
	movq 0x268(%rbp),%r13
	cmpq %r13,0x0(%r14)
	je L_468617
L_218010:
	movl 0x14(%rbp),%r13d
	incl %r13d
	movl %r13d,0x204(%rbp)
	jo L_217328
L_218011:
	cmpq $0x1,%r15
	je L_468611
L_218012:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movl %r13d,0x14(%rbp)
	jmp L_218009
.p2align 0x4
L_468611:
L_218013:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218014
L_218387:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x290,%rbp
	leaq (L_218388+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218388
.p2align 0x4
.long 0x354E
L_218388:
	addq $0xFFFFFFFFFFFFFD70,%rbp
L_218014:
	movl 0x204(%rbp),%ecx
L_218015:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_217414
L_218016:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_218018
L_218386:
	movl %ecx,0x0(%r15)
L_218018:
	movq $0x19D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x19D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x11F3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq $0x195B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq 0x268(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x280(%rbp),%r14
	movq 0x0(%r14),%r11
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r10,0x0(%r14)
	movq %r13,%r15
L_218019:
	movq 0x8(%r15),%r14
	movq 0x0(%r14),%r13
	cmpq $0x1,%r13
	je L_468612
L_218020:
	movq 0x8(%r13),%r14
	movq %r14,0x280(%rbp)
	movq 0x0(%r13),%r15
	movq $0x1,0x288(%rbp)
L_218021:
	movq %r15,0x298(%rbp)
	movq 0x260(%rbp),%r15
	movq %r15,0x2A0(%rbp)
	addq $0x298,%rbp
	leaq (L_218022+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_32
.p2align 0x4
L_468612:
L_218385:
	movq $0x1,%r15
L_218026:
	movq $0x35F9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x28,%r12
	movq 0x240(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x250(%rbp),%r15
	movq %r15,0x10(%r14)
	movq 0x260(%rbp),%r15
	movq %r15,0x18(%r14)
	movq %r14,0x280(%rbp)
	movq 0x278(%rbp),%r15
	movq %r15,0x288(%rbp)
	addq $0x280,%rbp
	leaq (L_218027+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_0
.p2align 0x4
L_468617:
L_218392:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218393
L_218397:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x298,%rbp
	leaq (L_218398+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218398
.p2align 0x4
.long 0x354F
L_218398:
	addq $0xFFFFFFFFFFFFFD68,%rbp
L_218393:
	movl 0x14(%rbp),%r14d
	movslq %r14d,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_217414
L_218394:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %r14d,0x0(%r13)
	jl L_468618
L_218395:
	movq 0x288(%rbp),%r15
	jmp L_218019
.p2align 0x4
L_468618:
L_218396:
	movq (globalObjptr+0x1078)(%rip),%r14
	movl 0x14(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movq 0x288(%rbp),%r15
	jmp L_218019
.p2align 0x4
L_468623:
L_218399:
	xorl %ecx,%ecx
	jmp L_218015
.p2align 0x4
.long 0x3521
L_217884:
	addq $0xFFFFFFFFFFFFFDB0,%rbp
	movq 0x250(%rbp),%r15
	movq %r15,0x248(%rbp)
	movq %r15,0x250(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x258(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0x260(%rbp)
	movq (globalObjptr+0xD0F8)(%rip),%r15
	movq %r15,0x268(%rbp)
	addq $0x250,%rbp
	leaq (L_217885+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
.long 0x34F2
L_217395:
	addq $0xFFFFFFFFFFFFFD38,%rbp
	movq 0x2C8(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq (gcState+0x458)(%rip),%r15
	subq %r12,%r15
	cmpq $0x2E8,%r15
	jnb L_217396
L_217852:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	movq $0x2E8,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2C8,%rbp
	leaq (L_217853+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_217853
.p2align 0x4
.long 0x3516
L_217853:
	addq $0xFFFFFFFFFFFFFD38,%rbp
L_217396:
	movq $0x91B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x48,%r12
	movq 0x2B8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xF8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xF0(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0xD8(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x290(%rbp),%r14
	movq %r14,0x20(%r15)
	movq 0xE8(%rbp),%r13
	movq %r13,0x28(%r15)
	movq 0xE0(%rbp),%r11
	movq %r11,0x30(%r15)
	movq 0x88(%rbp),%r10
	movq %r10,0x38(%r15)
	movq $0xD0F,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	addq $0xB8,%r12
	movq %r15,0x0(%r9)
	movq 0x38(%rbp),%r8
	movq %r8,0x8(%r9)
	movq 0x90(%rbp),%r8
	movq %r8,0x10(%r9)
	movq 0x150(%rbp),%r8
	movq %r8,0x18(%r9)
	movq 0x148(%rbp),%r8
	movq %r8,0x20(%r9)
	movq 0x140(%rbp),%rsp
	movq %rsp,0x28(%r9)
	movq 0x138(%rbp),%rsp
	movq %rsp,0x30(%r9)
	movq 0x130(%rbp),%rsp
	movq %rsp,0x38(%r9)
	movq 0x30(%rbp),%rsp
	movq %rsp,0x40(%r9)
	movq 0x128(%rbp),%rsp
	movq %rsp,0x48(%r9)
	movq 0xC8(%rbp),%rsp
	movq %rsp,0x50(%r9)
	movq 0x120(%rbp),%rsi
	movq %rsi,0x58(%r9)
	movq %r11,0x60(%r9)
	movq 0x118(%rbp),%r11
	movq %r11,0x68(%r9)
	movq 0x110(%rbp),%r11
	movq %r11,0x70(%r9)
	movq %r13,0x78(%r9)
	movq 0x108(%rbp),%r13
	movq %r13,0x80(%r9)
	movq 0xD0(%rbp),%r13
	movq %r13,0x88(%r9)
	movq %r15,0x90(%r9)
	movq %r14,0x98(%r9)
	movq %r14,0xA0(%r9)
	movq 0x100(%rbp),%r13
	movq %r13,0xA8(%r9)
	movq $0x71,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movl $0x0,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq $0x89,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x18,%r12
	movq %r13,0x0(%r11)
	movq %r13,0x8(%r11)
	movq $0x18CD,0x0(%r12)
	movq %r12,%rsi
	addq $0x8,%rsi
	movq %rsi,0x98(%rbp)
	movq %r9,0x10(%rsi)
	movq %r13,0x38(%rsi)
	movq %r15,0x58(%rsi)
	movq %r15,0x80(%rsi)
	movq %r11,0x130(%rsi)
	addq $0x1C0,%r12
	movq 0x1C8(%rbp),%r15
	movq %r15,0x0(%rsi)
	movq 0x1C0(%rbp),%r15
	movq %r15,0x8(%rsi)
	movq 0x278(%rbp),%r15
	movq %r15,0x18(%rsi)
	movq 0x40(%rbp),%r13
	movq %r13,0x20(%rsi)
	movq 0x268(%rbp),%r13
	movq %r13,0x28(%rsi)
	movq 0x218(%rbp),%r13
	movq %r13,0x30(%rsi)
	movq 0x1B8(%rbp),%r13
	movq %r13,0x40(%rsi)
	movq 0x80(%rbp),%r13
	movq %r13,0x48(%rsi)
	movq 0x1B0(%rbp),%r13
	movq %r13,0x50(%rsi)
	movq 0x1A8(%rbp),%r13
	movq %r13,0x60(%rsi)
	movq 0x210(%rbp),%r13
	movq %r13,0x68(%rsi)
	movq 0x1A0(%rbp),%r13
	movq %r13,0x70(%rsi)
	movq %r14,0x78(%rsi)
	movq 0x198(%rbp),%r13
	movq %r13,0x88(%rsi)
	movq 0x260(%rbp),%r13
	movq %r13,0x90(%rsi)
	movq 0x250(%rbp),%r11
	movq %r11,0x98(%rsi)
	movq 0x258(%rbp),%r11
	movq %r11,0xA0(%rsi)
	movq %r13,0xA8(%rsi)
	movq 0x20(%rbp),%r13
	movq %r13,0xB0(%rsi)
	movq 0x10(%rbp),%r13
	movq %r13,0xB8(%rsi)
	movq 0x28(%rbp),%r13
	movq %r13,0xC0(%rsi)
	movq 0x190(%rbp),%r13
	movq %r13,0xC8(%rsi)
	movq 0x18(%rbp),%r13
	movq %r13,0xD0(%rsi)
	movq 0x238(%rbp),%r13
	movq %r13,0xD8(%rsi)
	movq 0x248(%rbp),%r13
	movq %r13,0xE0(%rsi)
	movq 0x240(%rbp),%r13
	movq %r13,0xE8(%rsi)
	movq %r15,0xF0(%rsi)
	movq 0x270(%rbp),%r13
	movq %r13,0xF8(%rsi)
	movq 0x188(%rbp),%r13
	movq %r13,0x100(%rsi)
	movq 0x68(%rbp),%r13
	movq %r13,0x108(%rsi)
	movq 0x70(%rbp),%r13
	movq %r13,0x110(%rsi)
	movq 0x180(%rbp),%r13
	movq %r13,0x118(%rsi)
	movq 0x178(%rbp),%r13
	movq %r13,0x120(%rsi)
	movq %r15,0x128(%rsi)
	movq 0x60(%rbp),%r15
	movq %r15,0x138(%rsi)
	movq 0x58(%rbp),%r15
	movq %r15,0x140(%rsi)
	movq 0x50(%rbp),%r15
	movq %r15,0x148(%rsi)
	movq %r10,0x150(%rsi)
	movq %r14,0x158(%rsi)
	movq %rsp,0x160(%rsi)
	movq 0x288(%rbp),%r15
	movq %r15,0x168(%rsi)
	movq 0x48(%rbp),%r15
	movq %r15,0x170(%rsi)
	movq 0x228(%rbp),%r15
	movq %r15,0x178(%rsi)
	movq 0x170(%rbp),%r15
	movq %r15,0x180(%rsi)
	movq %r8,0x188(%rsi)
	movq 0x168(%rbp),%r15
	movq %r15,0x190(%rsi)
	movq 0x280(%rbp),%r15
	movq %r15,0x198(%rsi)
	movq 0x160(%rbp),%r15
	movq %r15,0x1A0(%rsi)
	movq 0x158(%rbp),%r15
	movq %r15,0x1A8(%rsi)
	movq 0x8(%rbp),%r15
	movq %r15,0x1B0(%rsi)
	movl $0x1,0x2C0(%rbp)
	movq 0x1F8(%rbp),%r15
	movq %r15,0x2C8(%rbp)
	movq %rsi,0x2D0(%rbp)
	addq $0x2C0,%rbp
	leaq (L_217397+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1936
.p2align 0x4
.long 0x3532
L_218022:
	addq $0xFFFFFFFFFFFFFD68,%rbp
	movq 0x298(%rbp),%r15
	movq %r15,0x290(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218023
L_218383:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2A0,%rbp
	leaq (L_218384+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218384
.p2align 0x4
.long 0x354D
L_218384:
	addq $0xFFFFFFFFFFFFFD60,%rbp
L_218023:
	movq $0x23C1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x290(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x288(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x280(%rbp),%r14
	cmpq $0x1,%r14
	je L_218026
L_218024:
	movq %r15,0x288(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x280(%rbp)
	jmp L_218021
.p2align 0x4
.long 0x3533
L_218027:
	addq $0xFFFFFFFFFFFFFD80,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218028
L_218381:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x280,%rbp
	leaq (L_218382+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218382
.p2align 0x4
.long 0x3547
L_218382:
	addq $0xFFFFFFFFFFFFFD80,%rbp
L_218028:
	movq 0x270(%rbp),%r14
	cmpq $0x1,%r14
	je L_468629
L_218029:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x270(%rbp)
	jmp L_218005
.p2align 0x4
L_468629:
L_218030:
	movl 0x10(%rbp),%r13d
	testl %r13d,%r13d
	jz L_218152
L_218031:
	movq 0x238(%rbp),%r13
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_468630
L_218032:
	movq 0x8(%r11),%r13
	movq %r13,0x238(%rbp)
	movq 0x0(%r11),%r11
	movq %r11,%r15
L_218033:
	movq 0x0(%r15),%r14
	movq %r14,0x240(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x250(%rbp)
	movq %r14,0x278(%rbp)
	addq $0x278,%rbp
	leaq (L_218034+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_2
.p2align 0x4
L_468630:
L_218066:
	movq $0x71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x238(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x230(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_468631
L_218067:
	movq 0x8(%r14),%r15
	movq %r15,0x230(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x240(%rbp)
	movq $0x1,0x250(%rbp)
L_218068:
	movq 0x240(%rbp),%r15
	movq %r15,0x278(%rbp)
	addq $0x278,%rbp
	leaq (L_218069+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_2
.p2align 0x4
L_468631:
L_218358:
	movq $0x1,0x230(%rbp)
L_218078:
	movq 0x230(%rbp),%r14
	cmpq $0x1,%r14
	je L_468661
L_218079:
	movq 0x8(%r14),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_218080:
	incl %ecx
	jo L_217328
L_218081:
	cmpq $0x1,%r15
	je L_468632
L_218082:
	movq 0x8(%r15),%r15
	jmp L_218080
.p2align 0x4
L_468632:
L_218083:
L_218084:
	movslq %ecx,%rdx
	movq %rdx,0x238(%rbp)
	cmpq $0x7FFFFFFF,%rdx
	ja L_217649
L_218085:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xA89,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x278,%rbp
	leaq (L_218086+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218086
.p2align 0x4
.long 0x3536
L_218086:
	addq $0xFFFFFFFFFFFFFD88,%rbp
	movq %rax,0x240(%rbp)
	movq 0x230(%rbp),%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2409:
	cmpq 0x238(%rbp),%r15
	jnl L_468634
L_218347:
	cmpq $0x1,%r14
	je L_217647
L_218348:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq 0x240(%rbp),%r11
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r13,0x0(%r11,%r15,8)
	incq %r15
	jmp loop_2409
.p2align 0x4
L_468634:
L_218087:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218088
L_218345:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x278,%rbp
	leaq (L_218346+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218346
.p2align 0x4
.long 0x354A
L_218346:
	addq $0xFFFFFFFFFFFFFD88,%rbp
L_218088:
	movq 0x238(%rbp),%r15
	movl %r15d,%r14d
	movl %r14d,0x14(%rbp)
	movslq %r14d,%r13
	cmpq %r13,%r15
	jne L_217346
L_218090:
	testl %r14d,%r14d
	jz L_468641
L_218091:
	movq $0x18CF,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x230(%rbp)
	addq $0x18,%r12
	movq 0x240(%rbp),%r11
	movq %r11,0x0(%r13)
	movq %r11,0x8(%r13)
	cmpq $0x0,%r15
	jna L_217352
L_218093:
	movq 0x0(%r11),%r15
	cmpl $0x0,%r14d
	jl L_217619
L_218094:
	movq %r15,0x250(%rbp)
	movl $0x0,0x204(%rbp)
	movl $0x0,0x270(%rbp)
loop_2410:
	movl 0x14(%rbp),%r15d
	cmpl %r15d,0x270(%rbp)
	jl L_468638
L_218095:
	decl %r15d
	movslq 0x204(%rbp),%r14
	movq 0x238(%rbp),%r13
	cmpq %r13,%r14
	jnb L_217352
L_218097:
	movq 0x240(%rbp),%r11
	movq 0x0(%r11,%r14,8),%r10
	movslq %r15d,%r9
	cmpq %r13,%r9
	jnb L_217352
L_218099:
	movq 0x0(%r11,%r9,8),%r13
	movq %r11,%r8
	shrq $0x8,%r8
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r8,1)
	movq %r13,0x0(%r11,%r14,8)
	movq %r11,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%rsp,%r14,1)
	movq %r10,0x0(%r11,%r9,8)
	decl %r15d
	jo L_217328
L_218100:
	movl %r15d,0x278(%rbp)
	movl $0x0,0x27C(%rbp)
	movq %r11,0x280(%rbp)
	movq 0x230(%rbp),%r15
	movq %r15,0x288(%rbp)
	addq $0x278,%rbp
	leaq (L_218101+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp qsort_21
.p2align 0x4
L_468638:
L_218335:
	movslq 0x270(%rbp),%r14
	movq 0x240(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r11
	movq %r11,0x278(%rbp)
	movq %r11,0x288(%rbp)
	addq $0x288,%rbp
	leaq (L_218336+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_2
.p2align 0x4
L_468641:
L_218104:
	movl 0x14(%rbp),%r15d
	decl %r15d
	jo L_217328
L_218105:
	movl %r15d,0x14(%rbp)
	movq $0x1,0x230(%rbp)
.p2align 0x4,,0x7
loop_2411:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_468655
.p2align 0x4,,0x7
L_218106:
	movl 0x14(%rbp),%r15d
	cmpl $0x0,%r15d
	jl L_468642
L_218107:
	movl %r15d,%r14d
	decl %r14d
	movslq %r15d,%r13
	movl %r14d,0x14(%rbp)
	movq 0x240(%rbp),%r15
	movq 0x0(%r15,%r13,8),%r14
	movq $0x23C1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x230(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x230(%rbp)
	jmp loop_2411
.p2align 0x4
L_468642:
L_218108:
	movq 0x230(%rbp),%r14
	cmpq $0x1,%r14
	je L_218152
L_218109:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r14
	movq %r14,0x230(%rbp)
	movq %r13,%r15
L_218110:
	cmpq $0x1,%r15
	je L_468643
L_218111:
	movq 0x8(%r15),%r14
	movq %r14,0x238(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x240(%rbp)
	movq $0x1,0x250(%rbp)
L_218112:
	movq 0x230(%rbp),%r15
	movq %r15,0x278(%rbp)
	addq $0x278,%rbp
	leaq (L_218113+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_2
.p2align 0x4
L_468643:
L_218152:
	movq $0xD41,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x10(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x71,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x230(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x208(%rbp),%r14
	movq %r14,0x238(%rbp)
	movq 0x1F8(%rbp),%r15
L_218153:
	movq 0x18(%r15),%r13
	movq %r13,0x240(%rbp)
	movq 0x20(%r15),%r11
	movq %r11,0x250(%rbp)
	movq 0x10(%r13),%r15
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r14
	incq %r14
	jo L_217404
L_218154:
	movq %r14,0x0(%r13)
	movq 0x0(%r15),%r13
	cmpq $0x1,%r13
	je L_468652
L_218155:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_218157:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_218158
L_218195:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xCC2,%r13
	jne L_218158
L_218196:
	movq 0x8(%r14),%r13
	movq 0x248(%rbp),%r11
	cmpq %r11,0x0(%r14)
	je L_468647
L_218158:
	incl %ecx
	jo L_217328
L_218159:
	cmpq $0x1,%r15
	je L_468644
L_218160:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_218157
.p2align 0x4
L_468644:
L_218161:
L_218162:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_217414
L_218163:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl x_767
L_218194:
	movl %ecx,0x0(%r15)
x_767:
	movq 0x8(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x240(%rbp),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_218165+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_468647:
L_218198:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_217414
L_218199:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_468648
L_218306:
	movl %ecx,0x0(%r14)
	movq %r13,%r15
x_768:
	movq %r15,0x278(%rbp)
	addq $0x278,%rbp
	leaq (L_218201+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_2
.p2align 0x4
L_468648:
L_218200:
	movq %r13,%r15
	jmp x_768
.p2align 0x4
L_468652:
L_218307:
	xorl %ecx,%ecx
	jmp L_218162
.p2align 0x4
L_468655:
L_218331:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x278,%rbp
	leaq (L_218332+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218332
.p2align 0x4
.long 0x3549
L_218332:
	addq $0xFFFFFFFFFFFFFD88,%rbp
	jmp L_218106
.p2align 0x4
L_468661:
L_218351:
	xorl %ecx,%ecx
	jmp L_218084
.p2align 0x4
.long 0x3521
L_217885:
	addq $0xFFFFFFFFFFFFFDB0,%rbp
	movq 0x250(%rbp),%r15
	movq %r15,0x248(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_217886
L_217900:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x258,%rbp
	leaq (L_217901+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_217901
.p2align 0x4
.long 0x3520
L_217901:
	addq $0xFFFFFFFFFFFFFDA8,%rbp
L_217886:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x250(%rbp)
	addq $0x18,%r12
	movq 0x248(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x10218)(%rip),%r14
	movq %r14,0x8(%r15)
	movq 0x240(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_217346
L_217888:
	movl %r13d,0x268(%rbp)
	movq $0x3B13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x260(%rbp)
	addq $0x260,%rbp
	leaq (L_217889+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
.long 0x34F3
L_217397:
	addq $0xFFFFFFFFFFFFFD40,%rbp
	movq 0x208(%rbp),%r14
	cmpq $0x1,%r14
	je L_468666
L_217398:
	movq 0x8(%r14),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r14),%r15
L_217399:
	movq %r15,0x2C8(%rbp)
	movl $0x0,0x2C0(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0x2D0(%rbp)
	addq $0x2C0,%rbp
	leaq (L_217400+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1936
.p2align 0x4
L_468666:
L_217403:
	movq 0x1F8(%rbp),%r13
	movq 0x18(%r13),%r11
	movq %r11,0x18(%rbp)
	movq 0x10(%r11),%r15
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r14
	incq %r14
	jo L_217404
L_217405:
	movq %r14,0x0(%r13)
	movq 0x0(%r15),%r13
	cmpq $0x1,%r13
	je L_468721
L_217406:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r13
	movl $0x0,0x28(%rbp)
	movq %r13,%r15
.p2align 0x4,,0x7
L_217408:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_217409
L_217448:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0xCBE,%r13
	jne L_217409
L_217449:
	movq 0x8(%r15),%r13
	movq %r13,0x30(%rbp)
	movq 0x0(%r15),%r13
	cmpq %r13,0x220(%rbp)
	je L_468670
L_217409:
	movl 0x28(%rbp),%r13d
	incl %r13d
	jo L_217328
L_217410:
	cmpq $0x1,%r14
	je L_468667
L_217411:
	movl %r13d,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_217408
.p2align 0x4
L_468667:
	movl %r13d,%ecx
L_217413:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_217414
L_217415:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl x_766
L_217447:
	movl %ecx,0x0(%r15)
x_766:
	movq 0x8(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_217417+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_468670:
L_217451:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_217452
L_217848:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2C0,%rbp
	leaq (L_217849+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_217849
.p2align 0x4
.long 0x3515
L_217849:
	addq $0xFFFFFFFFFFFFFD40,%rbp
L_217452:
	movl 0x28(%rbp),%r14d
	movslq %r14d,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_217414
L_217453:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %r14d,0x0(%r13)
	jl L_468716
L_217454:
	movq 0x30(%rbp),%r15
L_217455:
	movq 0x0(%r15),%r14
	movq $0x17D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x28(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r13)
	movq 0x230(%rbp),%r14
	cmpq $0x1,%r14
	je L_468715
L_217456:
	movq 0x8(%r14),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r14),%r15
	movq $0x1,0x30(%rbp)
.p2align 0x4,,0x7
L_217457:
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x8(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x40(%rbp)
	cmpq $0x1,%r13
	je L_468714
L_217458:
	movq 0x8(%r13),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_217459:
	incl %ecx
	jo L_217328
L_217460:
	cmpq $0x1,%r15
	je L_468671
L_217461:
	movq 0x8(%r15),%r15
	jmp L_217459
.p2align 0x4
L_468671:
L_217462:
L_217463:
	movslq %ecx,%r15
	movq %r15,0x48(%rbp)
	testq %r15,%r15
	jnz L_468711
L_217844:
	movq (globalObjptr+0x75F8)(%rip),%r15
	movq %r15,0x50(%rbp)
.p2align 0x4,,0x7
L_217467:
	movq 0x40(%rbp),%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2390:
	cmpq 0x48(%rbp),%r15
	jnl L_468673
L_217840:
	cmpq $0x1,%r14
	je L_217647
L_217841:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq 0x50(%rbp),%r11
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r13,0x0(%r11,%r15,8)
	incq %r15
	jmp loop_2390
.p2align 0x4
L_468673:
L_217468:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_468710
.p2align 0x4,,0x7
L_217469:
	movq 0x50(%rbp),%r14
	movq $0x1207,0xFFFFFFFFFFFFFFF8(%r14)
	movq $0x4B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x40(%rbp)
	addq $0x10,%r12
	movl $0xFFFFFFFF,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq $0x4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0xFFFFFFFF,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x4B,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movl $0xFFFFFFFF,0x0(%r11)
	movl $0x0,0x4(%r11)
	movq $0x4B,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	addq $0x10,%r12
	movl $0xFFFFFFFF,0x0(%r10)
	movl $0x0,0x4(%r10)
	movq $0x4B,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	addq $0x10,%r12
	movl $0xFFFFFFFF,0x0(%r9)
	movl $0x0,0x4(%r9)
	movq $0x4B,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r8,0x48(%rbp)
	addq $0x10,%r12
	movl $0xFFFFFFFF,0x0(%r8)
	movl $0x0,0x4(%r8)
	movq $0x4B,0x0(%r12)
	movq %r12,%rsp
	addq $0x8,%rsp
	movq %rsp,0x58(%rbp)
	addq $0x10,%r12
	movl $0xFFFFFFFF,0x0(%rsp)
	movl $0x0,0x4(%rsp)
	movq $0x4B,0x0(%r12)
	movq %r12,%rsi
	addq $0x8,%rsi
	movq %rsi,0x60(%rbp)
	addq $0x10,%r12
	movl $0xFFFFFFFF,0x0(%rsi)
	movl $0x0,0x4(%rsi)
	movq $0x4B,0x0(%r12)
	movq %r12,%rdi
	addq $0x8,%rdi
	movq %rdi,0x68(%rbp)
	addq $0x10,%r12
	movl $0xFFFFFFFF,0x0(%rdi)
	movl $0x0,0x4(%rdi)
	movq $0x4B,0x0(%r12)
	movq %r12,%rdx
	addq $0x8,%rdx
	movq %rdx,0x70(%rbp)
	addq $0x10,%r12
	movl $0xFFFFFFFF,0x0(%rdx)
	movl $0x0,0x4(%rdx)
	movq $0x4B,0x0(%r12)
	movq %r12,%rcx
	addq $0x8,%rcx
	movq %rcx,0x80(%rbp)
	addq $0x10,%r12
	movl $0xFFFFFFFF,0x0(%rcx)
	movl $0x0,0x4(%rcx)
	movq $0x4B,0x0(%r12)
	movq %r12,%rbx
	addq $0x8,%rbx
	movq %rbx,0x88(%rbp)
	addq $0x10,%r12
	movl $0xFFFFFFFF,0x0(%rbx)
	movl $0x0,0x4(%rbx)
	movq $0x1209,0x0(%r12)
	movq %r12,%rax
	addq $0x8,%rax
	movq %rax,0x90(%rbp)
	movq %r11,0x8(%rax)
	movq %r9,0x10(%rax)
	movq %r10,0x50(%rax)
	movq %r15,0x58(%rax)
	addq $0x68,%r12
	movq %r13,0x0(%rax)
	movq %rsp,0x18(%rax)
	movq %rdi,0x20(%rax)
	movq %rcx,0x28(%rax)
	movq %rbx,0x30(%rax)
	movq %rdx,0x38(%rax)
	movq %rsi,0x40(%rax)
	movq %r8,0x48(%rax)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movl %r11d,0x98(%rbp)
	movslq %r11d,%r15
	cmpq %r15,%r13
	jne L_217346
L_217471:
	cmpl $0x0,%r11d
	jl L_217619
L_217472:
	movq $0x1,%r15
	movl $0x0,0x9C(%rbp)
loop_2391:
	movl 0x98(%rbp),%r14d
	cmpl %r14d,0x9C(%rbp)
	jl L_468692
L_217473:
	cmpq $0x1,%r15
	je L_217494
L_217474:
	movq 0x8(%r15),%r14
	movq %r14,0x98(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xA0(%rbp)
L_217475:
	movq 0xA0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r15
	movq %r15,%r13
	andq $0x7,%r13
	cmpq $0x2,%r13
	je L_468690
	cmpq $0x5,%r13
	je L_468689
	cmpq $0x6,%r13
	je L_468687
L_217476:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_217477
L_217791:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0xF53,%r13
	je L_468685
	cmpq $0xF54,%r13
	je L_468674
L_217477:
	movq 0x0(%r14),%r15
	movq %r15,0xA8(%rbp)
	movq %r15,0x2C0(%rbp)
	addq $0x2C0,%rbp
	leaq (L_217478+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_468674:
L_217793:
	movq 0x40(%rbp),%r15
	movq %r15,0xA8(%rbp)
.p2align 0x4,,0x7
L_217488:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_468684
.p2align 0x4,,0x7
L_217489:
	movq 0xA8(%rbp),%r15
	movl 0x0(%r15),%r14d
	incl %r14d
	jo L_217328
L_217490:
	movl %r14d,0x0(%r15)
	movq 0xA0(%rbp),%r15
	movq 0x8(%r15),%r13
	movq 0x0(%r13),%r15
	andq $0x1,%r15
	jnz L_468682
L_217491:
	movl %r14d,%r15d
	shlq $0x1,%r15
	orq $0x1,%r15
	movq %r15,0x0(%r13)
	movq 0x98(%rbp),%r15
	cmpq $0x1,%r15
	je L_468675
L_217492:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x98(%rbp)
	movq %r14,0xA0(%rbp)
	jmp L_217475
.p2align 0x4
L_468675:
L_217494:
	movq $0x120B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x90(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x10(%r15)
	movq $0x2395,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x18(%rbp),%r13
	cmpq $0x1,%r13
	je L_468676
L_217495:
	movq %r14,0x30(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x18(%rbp)
	jmp L_217457
.p2align 0x4
L_468676:
L_217496:
	movq %r14,0x18(%rbp)
L_217497:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_468677
L_217498:
	movq 0x8(%r14),%r13
	movq %r13,0x30(%rbp)
	movq 0x0(%r14),%r15
L_217499:
	movq 0x10(%r15),%r14
	movq %r14,0x2C8(%rbp)
	movq $0x2,0x2C0(%rbp)
	addq $0x2C0,%rbp
	leaq (L_217500+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_7
.p2align 0x4
L_468677:
L_217504:
	movq 0x10(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x19D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x30(%rbp)
	addq $0x10,%r12
	movq %r13,0x0(%r14)
	cmpq $0x1,%r13
	je L_468681
L_217505:
	movq 0x8(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_217506:
	incl %ecx
	movl %ecx,0x38(%rbp)
	jo L_217328
L_217507:
	cmpq $0x1,%r15
	je L_468678
L_217508:
	movq 0x8(%r15),%r15
	jmp L_217506
.p2align 0x4
L_468678:
L_217509:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_217510
L_217763:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2C0,%rbp
	leaq (L_217764+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_217764
.p2align 0x4
.long 0x350E
L_217764:
	addq $0xFFFFFFFFFFFFFD40,%rbp
L_217510:
	movl 0x38(%rbp),%ecx
L_217511:
	movl %ecx,0x2C8(%rbp)
	movq $0x4009,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x2C0(%rbp)
	addq $0x2C0,%rbp
	leaq (L_217512+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
L_468681:
L_217765:
	xorl %ecx,%ecx
	jmp L_217511
.p2align 0x4
L_468682:
L_217769:
	movq 0xA0(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x1D8(%rbp),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (toString_320+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_1
.p2align 0x4
L_468684:
L_217786:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2C0,%rbp
	leaq (L_217787+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_217787
.p2align 0x4
.long 0x3510
L_217787:
	addq $0xFFFFFFFFFFFFFD40,%rbp
	jmp L_217489
.p2align 0x4
L_468685:
L_217792:
	movq 0x48(%rbp),%r15
	movq %r15,0xA8(%rbp)
	jmp L_217488
.p2align 0x4
L_468687:
L_217796:
	shrq $0x3,%r15
	movb %r15b,%r14b
	testb %r14b,%r14b
	jnz L_468688
L_217797:
	movq 0x60(%rbp),%r15
	movq %r15,0xA8(%rbp)
	jmp L_217488
.p2align 0x4
L_468688:
L_217798:
	movq 0x58(%rbp),%r15
	movq %r15,0xA8(%rbp)
	jmp L_217488
.p2align 0x4
L_468689:
L_217795:
	movq 0x40(%rbp),%r15
	movq %r15,0xA8(%rbp)
	jmp L_217488
.p2align 0x4
L_468690:
L_217794:
	movq 0x40(%rbp),%r15
	movq %r15,0xA8(%rbp)
	jmp L_217488
.p2align 0x4
L_468692:
L_217800:
	movslq 0x9C(%rbp),%r14
	movq 0x50(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r11
	movq 0x0(%r11),%r10
	movq %r10,0xA0(%rbp)
	movq 0x8(%r11),%r10
	movq %r10,0xA8(%rbp)
	movq 0x30(%r11),%r10
L_217801:
	movq %r10,%r14
	andq $0x3,%r14
	jnz L_217803
L_217828:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r14
	shrq $0x1,%r14
	cmpq $0xF68,%r14
	jne L_217803
L_217829:
	movq 0x8(%r10),%r14
	cmpq $0x1,%r14
	jne L_468703
.p2align 0x4,,0x7
L_217803:
	movq 0xA8(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movl %r11d,0xB0(%rbp)
	movslq %r11d,%r10
	cmpq %r10,%r13
	jne L_217346
L_217805:
	cmpl $0x0,%r11d
	jl L_217619
L_217806:
	movl $0x0,0xB4(%rbp)
loop_2406:
	movl 0xB0(%rbp),%r14d
	cmpl %r14d,0xB4(%rbp)
	jl L_468696
L_217808:
	movq 0xA0(%rbp),%r14
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_217809
L_217814:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xF6E,%r13
	je L_468694
L_217809:
	movq %r15,0xA0(%rbp)
.p2align 0x4,,0x7
L_217810:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_468693
.p2align 0x4,,0x7
L_217811:
	incl 0x9C(%rbp)
	movq 0xA0(%rbp),%r15
	jmp loop_2391
.p2align 0x4
L_468693:
L_217812:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2C0,%rbp
	leaq (L_217813+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_217813
.p2align 0x4
.long 0x3511
L_217813:
	addq $0xFFFFFFFFFFFFFD40,%rbp
	jmp L_217811
.p2align 0x4
L_468694:
L_217815:
	movq %r15,0x2C0(%rbp)
	movq 0xA0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x2C8(%rbp)
	movq 0x1D0(%rbp),%r15
	movq %r15,0x2D0(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0x2D8(%rbp)
	addq $0x2C0,%rbp
	leaq (L_217816+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1937
.p2align 0x4
L_468696:
L_217817:
	movslq 0xB4(%rbp),%r14
	movq 0xA8(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r11
L_217818:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_468700
L_217821:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xF62,%r14
	je L_468698
	cmpq $0xF63,%r14
	je L_468697
	movq %r15,(localObjptr+0x0)(%rip)
.p2align 0x4,,0x7
L_217820:
	incl 0xB4(%rbp)
	movq (localObjptr+0x0)(%rip),%r15
	jmp loop_2406
.p2align 0x4
L_468697:
L_217826:
	movq %r15,0x2C0(%rbp)
	movq 0x0(%r11),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x2C8(%rbp)
	movq 0x1D0(%rbp),%r15
	movq %r15,0x2D0(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0x2D8(%rbp)
	addq $0x2C0,%rbp
	leaq (L_217824+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1937
.p2align 0x4
L_468698:
L_217822:
	movq 0x8(%r11),%r14
	cmpq $0x1,%r14
	je L_468699
L_217823:
	movq %r15,0x2C0(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x2C8(%rbp)
	movq 0x1D0(%rbp),%r15
	movq %r15,0x2D0(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0x2D8(%rbp)
	addq $0x2C0,%rbp
	leaq (L_217824+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1937
.p2align 0x4
L_468699:
	movq %r15,(localObjptr+0x0)(%rip)
	jmp L_217820
.p2align 0x4
L_468700:
	movq %r15,(localObjptr+0x0)(%rip)
	jmp L_217820
.p2align 0x4
L_468703:
L_217830:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xF65,%r13
	je L_468705
	cmpq $0xF66,%r13
	je L_468704
L_217831:
	movq 0x0(%r14),%r13
	movq $0x1EB3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	addq $0x10,%r12
L_217832:
	movq %r15,0x2C0(%rbp)
	movq %r14,0x2C8(%rbp)
	movq 0x1D0(%rbp),%r15
	movq %r15,0x2D0(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0x2D8(%rbp)
	addq $0x2C0,%rbp
	leaq (L_217833+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1937
.p2align 0x4
L_468704:
L_217835:
	movq 0x0(%r14),%r13
	movq $0x1EBB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	addq $0x10,%r12
	jmp L_217832
.p2align 0x4
L_468705:
L_217834:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq $0x1EB5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r11,0x0(%r14)
	movq %r13,0x8(%r14)
	addq $0x18,%r12
	jmp L_217832
.p2align 0x4
L_468710:
L_217838:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2C0,%rbp
	leaq (L_217839+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_217839
.p2align 0x4
.long 0x3514
L_217839:
	addq $0xFFFFFFFFFFFFFD40,%rbp
	jmp L_217469
.p2align 0x4
L_468711:
L_217464:
	movq 0x48(%rbp),%rdx
	cmpq $0x7FFFFFFF,%rdx
	ja L_217649
L_217465:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x16AB,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2C0,%rbp
	leaq (L_217466+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_217466
.p2align 0x4
.long 0x34F5
L_217466:
	addq $0xFFFFFFFFFFFFFD40,%rbp
	movq %rax,0x50(%rbp)
	jmp L_217467
.p2align 0x4
L_468714:
L_217845:
	xorl %ecx,%ecx
	jmp L_217463
.p2align 0x4
L_468715:
L_217846:
	movq $0x1,0x18(%rbp)
	jmp L_217497
.p2align 0x4
L_468716:
L_217847:
	movq (globalObjptr+0x1078)(%rip),%r14
	movl 0x28(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movq 0x30(%rbp),%r15
	jmp L_217455
.p2align 0x4
L_468721:
L_217850:
	xorl %ecx,%ecx
	jmp L_217413
.p2align 0x4
.long 0x3530
L_218034:
	addq $0xFFFFFFFFFFFFFD88,%rbp
	movq 0x278(%rbp),%r15
	movq %r15,0x270(%rbp)
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1452,%r15
	jne L_468723
L_218036:
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r13
	movl 0x0(%r13),%r11d
	movl %r11d,0x14(%rbp)
	movq 0x240(%rbp),%r15
	movq %r15,0x278(%rbp)
	addq $0x278,%rbp
	leaq (L_218037+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_2
.p2align 0x4
L_468723:
L_218035:
	movq (globalObjptr+0x1500)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3530
L_218069:
	addq $0xFFFFFFFFFFFFFD88,%rbp
	movq 0x278(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r15,0x270(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1452,%r15
	jne L_218035
L_218070:
	movq 0x8(%r14),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x270(%rbp)
	movq %r13,0x280(%rbp)
	movq 0x238(%rbp),%r15
	movq %r15,0x288(%rbp)
	addq $0x280,%rbp
	leaq (L_218071+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_2
.p2align 0x4
.long 0x3537
L_218101:
	addq $0xFFFFFFFFFFFFFD88,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218102
L_218333:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x278,%rbp
	leaq (L_218334+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218334
.p2align 0x4
.long 0x354A
L_218334:
	addq $0xFFFFFFFFFFFFFD88,%rbp
L_218102:
	movq $0x3D39,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x240(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r15,0x278(%rbp)
	movl 0x14(%rbp),%r15d
	movl %r15d,0x280(%rbp)
	movl $0x1,0x284(%rbp)
	addq $0x278,%rbp
	leaq (L_218103+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fold_0
.p2align 0x4
.long 0x354B
L_218336:
	addq $0xFFFFFFFFFFFFFD78,%rbp
	movq 0x288(%rbp),%r15
	movq %r15,0x280(%rbp)
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1452,%r15
	jne L_218035
L_218337:
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r13
	movl 0x0(%r13),%r11d
	movl %r11d,0x274(%rbp)
	movq 0x250(%rbp),%r15
	movq %r15,0x288(%rbp)
	addq $0x288,%rbp
	leaq (L_218338+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_2
.p2align 0x4
.long 0x3530
L_218113:
	addq $0xFFFFFFFFFFFFFD88,%rbp
	movq 0x278(%rbp),%r15
	movq %r15,0x270(%rbp)
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1452,%r15
	jne L_218035
L_218114:
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r13
	movl 0x0(%r13),%r11d
	movl %r11d,0x14(%rbp)
	movq 0x240(%rbp),%r15
	movq %r15,0x278(%rbp)
	addq $0x278,%rbp
	leaq (L_218115+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_2
.p2align 0x4
.long 0x1
L_218165:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_218166+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x353A
L_218201:
	addq $0xFFFFFFFFFFFFFD88,%rbp
	movq 0x278(%rbp),%r15
	movq %r15,0x270(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218202
L_218304:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x280,%rbp
	leaq (L_218305+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218305
.p2align 0x4
.long 0x3545
L_218305:
	addq $0xFFFFFFFFFFFFFD80,%rbp
L_218202:
	movq 0x270(%rbp),%r13
	movq 0x0(%r13),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1452,%r14
	jne L_218035
L_218203:
	movq 0x8(%r15),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x270(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_217404
L_218204:
	movq %r15,0x0(%r13)
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_468739
L_218205:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movl $0x0,0x204(%rbp)
	movq %r13,%r15
.p2align 0x4,,0x7
L_218207:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_218208
L_218293:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xCAD,%r13
	jne L_218208
L_218294:
	movq 0x8(%r14),%r13
	movq %r13,0x278(%rbp)
	movq 0x230(%rbp),%r13
	cmpq %r13,0x0(%r14)
	je L_468733
L_218208:
	movl 0x204(%rbp),%r13d
	incl %r13d
	movl %r13d,0x278(%rbp)
	jo L_217328
L_218209:
	cmpq $0x1,%r15
	je L_468728
L_218210:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movl %r13d,0x204(%rbp)
	jmp L_218207
.p2align 0x4
L_468728:
L_218211:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218212
L_218291:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x288,%rbp
	leaq (L_218292+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218292
.p2align 0x4
.long 0x3543
L_218292:
	addq $0xFFFFFFFFFFFFFD78,%rbp
L_218212:
	movl 0x278(%rbp),%ecx
L_218213:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_217414
L_218214:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_218216
L_218290:
	movl %ecx,0x0(%r15)
L_218216:
	movq $0x19D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x19D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x11F3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq 0x0(%r14),%r15
	movq $0x23C5,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x8(%r11)
	addq $0x18,%r12
	movq %r13,0x0(%r11)
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r15,1)
	movq %r11,0x0(%r14)
	movq $0x195B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq 0x230(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x270(%rbp),%r14
	movq 0x0(%r14),%r11
	movq $0x28DF,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r15,0x0(%r9)
	movq %r11,0x8(%r9)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%r10,%r15,1)
	movq %r9,0x0(%r14)
	movq %r13,%r15
L_218217:
	movq 0x8(%r15),%r14
	movq 0x0(%r14),%r15
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x240(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	movq $0x35A7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x28,%r12
	movq 0x230(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r13
	movq %r13,0x8(%r15)
	movq %r14,0x10(%r15)
	movq 0x260(%rbp),%r14
	movq %r14,0x18(%r15)
	movq %r15,0x278(%rbp)
	movq 0x250(%rbp),%r15
	movq %r15,0x280(%rbp)
	addq $0x278,%rbp
	leaq (L_218218+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_0
.p2align 0x4
L_468733:
L_218296:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218297
L_218301:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x288,%rbp
	leaq (L_218302+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218302
.p2align 0x4
.long 0x3544
L_218302:
	addq $0xFFFFFFFFFFFFFD78,%rbp
L_218297:
	movl 0x204(%rbp),%r14d
	movslq %r14d,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_217414
L_218298:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %r14d,0x0(%r13)
	jl L_468734
L_218299:
	movq 0x278(%rbp),%r15
	jmp L_218217
.p2align 0x4
L_468734:
L_218300:
	movq (globalObjptr+0x1078)(%rip),%r14
	movl 0x204(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movq 0x278(%rbp),%r15
	jmp L_218217
.p2align 0x4
L_468739:
L_218303:
	xorl %ecx,%ecx
	jmp L_218213
.p2align 0x4
.long 0x3522
L_217889:
	addq $0xFFFFFFFFFFFFFDA0,%rbp
	movq 0x260(%rbp),%r15
	movq %r15,0x240(%rbp)
	movq %r15,0x260(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x268(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0x270(%rbp)
	movq (globalObjptr+0xD0F8)(%rip),%r15
	movq %r15,0x278(%rbp)
	addq $0x260,%rbp
	leaq (L_217890+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
.long 0x34F4
L_217400:
	addq $0xFFFFFFFFFFFFFD40,%rbp
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_217403
L_217401:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	jmp L_217399
.p2align 0x4
.long 0x1
L_217417:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_217418+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x34F6
L_217478:
	addq $0xFFFFFFFFFFFFFD40,%rbp
	movl 0x2C0(%rbp),%r15d
	movl %r15d,0xB0(%rbp)
	cmpl $0x8,%r15d
	je L_468747
	cmpl $0x10,%r15d
	je L_468746
	cmpl $0x20,%r15d
	je L_468745
	cmpl $0x40,%r15d
	je L_468744
L_217479:
	movq 0xA8(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x1D0(%rbp),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_217480+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1197
.p2align 0x4
L_468744:
L_217790:
	movq 0x88(%rbp),%r15
	movq %r15,0xA8(%rbp)
	jmp L_217488
.p2align 0x4
L_468745:
L_217789:
	movq 0x80(%rbp),%r14
	movq %r14,0xA8(%rbp)
	jmp L_217488
.p2align 0x4
L_468746:
L_217788:
	movq 0x70(%rbp),%r14
	movq %r14,0xA8(%rbp)
	jmp L_217488
.p2align 0x4
L_468747:
L_217487:
	movq 0x68(%rbp),%r14
	movq %r14,0xA8(%rbp)
	jmp L_217488
.p2align 0x4
.long 0x34F7
L_217500:
	addq $0xFFFFFFFFFFFFFD40,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_217501
L_217766:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2C0,%rbp
	leaq (L_217767+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_217767
.p2align 0x4
.long 0x350F
L_217767:
	addq $0xFFFFFFFFFFFFFD40,%rbp
L_217501:
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_217504
L_217502:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	jmp L_217499
.p2align 0x4
.long 0x34F8
L_217512:
	addq $0xFFFFFFFFFFFFFD40,%rbp
	movq 0x2C0(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_217513
L_217761:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2C0,%rbp
	leaq (L_217762+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_217762
.p2align 0x4
.long 0x350E
L_217762:
	addq $0xFFFFFFFFFFFFFD40,%rbp
L_217513:
	movq 0x30(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_217346
L_217515:
	movl %r13d,%r14d
	decl %r14d
	jo L_217328
L_217516:
	movl %r13d,0x2C8(%rbp)
	movq $0x4005,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movl %r14d,0x0(%r13)
	addq $0x18,%r12
	movl $0x0,0x4(%r13)
	movq %r15,0x8(%r13)
	movq %r13,0x2C0(%rbp)
	addq $0x2C0,%rbp
	leaq (L_217517+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
.long 0x1
toString_320:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (rev_320+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x3512
L_217816:
	addq $0xFFFFFFFFFFFFFD40,%rbp
	movq 0x2C0(%rbp),%r15
	movq %r15,0xA0(%rbp)
	jmp L_217810
.p2align 0x4
.long 0x3513
L_217824:
	addq $0xFFFFFFFFFFFFFD40,%rbp
	movq 0x2C0(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq %r15,(localObjptr+0x0)(%rip)
	jmp L_217820
.p2align 0x4
.long 0x3513
L_217833:
	addq $0xFFFFFFFFFFFFFD40,%rbp
	movq 0x2C0(%rbp),%r15
	movq %r15,0xB0(%rbp)
	jmp L_217803
.p2align 0x4
.long 0x3530
L_218037:
	addq $0xFFFFFFFFFFFFFD88,%rbp
	movq 0x278(%rbp),%r15
	movq %r15,0x270(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218038
L_218377:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x280,%rbp
	leaq (L_218378+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218378
.p2align 0x4
.long 0x3547
L_218378:
	addq $0xFFFFFFFFFFFFFD80,%rbp
L_218038:
	movq 0x270(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1452,%r15
	jne L_218035
L_218039:
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r13
	movl 0x0(%r13),%r11d
	addl 0x14(%rbp),%r11d
	jo L_217328
L_218040:
	cmpl %r11d,0x10(%rbp)
	jl L_468753
L_218041:
	movq 0x250(%rbp),%r15
	movq %r15,0x278(%rbp)
	addq $0x278,%rbp
	leaq (L_218042+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_2
.p2align 0x4
L_468753:
L_218374:
	movq 0x238(%rbp),%r14
	cmpq $0x1,%r14
	je L_218066
L_218375:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x238(%rbp)
	jmp L_218033
.p2align 0x4
.long 0x3533
L_218071:
	addq $0xFFFFFFFFFFFFFD80,%rbp
	movq 0x280(%rbp),%r15
	movq %r15,0x278(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218072
L_218356:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x288,%rbp
	leaq (L_218357+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218357
.p2align 0x4
.long 0x3548
L_218357:
	addq $0xFFFFFFFFFFFFFD78,%rbp
L_218072:
	movq 0x278(%rbp),%r15
	cmpq $0x1,%r15
	je L_468761
L_218073:
L_218074:
	movl 0x0(%r15),%r14d
	testl %r14d,%r14d
	jnz L_468759
L_218075:
	movl $0x1,0x0(%r15)
	movq $0x23C1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x240(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x250(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x230(%rbp),%r14
	cmpq $0x1,%r14
	je L_468758
L_218076:
	movq %r15,0x250(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x230(%rbp)
	movq %r15,0x240(%rbp)
	jmp L_218068
.p2align 0x4
L_468758:
L_218077:
	movq %r15,0x230(%rbp)
	jmp L_218078
.p2align 0x4
L_468759:
L_218352:
	movq 0x230(%rbp),%r15
	cmpq $0x1,%r15
	je L_468760
L_218353:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x230(%rbp)
	movq %r14,0x240(%rbp)
	jmp L_218068
.p2align 0x4
L_468760:
L_218354:
	movq 0x250(%rbp),%r15
	movq %r15,0x230(%rbp)
	jmp L_218078
.p2align 0x4
L_468761:
L_218355:
	movq $0x53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x1953,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq 0x238(%rbp),%r11
	movq %r11,0x0(%r13)
	movq %r14,0x8(%r13)
	movq 0x270(%rbp),%r11
	movq 0x0(%r11),%r10
	movq $0x28DF,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r13,0x0(%r9)
	movq %r10,0x8(%r9)
	addq $0x18,%r12
	movq %r11,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r9,0x0(%r11)
	xchgq %r14,%r15
	jmp L_218074
.p2align 0x4
.long 0x3537
L_218103:
	addq $0xFFFFFFFFFFFFFD88,%rbp
	jmp L_218104
.p2align 0x4
.long 0x354B
L_218338:
	addq $0xFFFFFFFFFFFFFD78,%rbp
	movq 0x288(%rbp),%r14
	movq %r14,0x280(%rbp)
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1452,%r14
	jne L_218035
L_218339:
	movq 0x8(%r15),%r14
	movq 0x0(%r14),%r13
	movl 0x0(%r13),%r11d
	cmpl %r11d,0x274(%rbp)
	jl L_468763
L_218340:
	movq 0x250(%rbp),%r15
	movl 0x204(%rbp),%ecx
L_218341:
	movq %r15,0x250(%rbp)
	movl %ecx,0x204(%rbp)
	incl 0x270(%rbp)
	jmp loop_2410
.p2align 0x4
L_468763:
L_218342:
	movq 0x278(%rbp),%r15
	movl 0x270(%rbp),%ecx
	jmp L_218341
.p2align 0x4
.long 0x3530
L_218115:
	addq $0xFFFFFFFFFFFFFD88,%rbp
	movq 0x278(%rbp),%r15
	movq %r15,0x270(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218116
L_218327:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x280,%rbp
	leaq (L_218328+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218328
.p2align 0x4
.long 0x3547
L_218328:
	addq $0xFFFFFFFFFFFFFD80,%rbp
L_218116:
	movq 0x270(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1452,%r15
	jne L_218035
L_218117:
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r13
	movl 0x0(%r13),%r11d
	addl 0x14(%rbp),%r11d
	jo L_217328
L_218118:
	cmpl %r11d,0x10(%rbp)
	jl L_468765
L_218119:
	movq 0x230(%rbp),%r15
	movq %r15,0x278(%rbp)
	addq $0x278,%rbp
	leaq (L_218120+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_2
.p2align 0x4
L_468765:
L_218324:
	movq $0x23C1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x240(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x250(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x238(%rbp),%r14
	cmpq $0x1,%r14
	je L_468766
L_218325:
	movq %r15,0x250(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x238(%rbp)
	movq %r15,0x240(%rbp)
	jmp L_218112
.p2align 0x4
L_468766:
L_218326:
	movq 0x250(%rbp),%r15
	movq %r15,0x230(%rbp)
	movq 0x240(%rbp),%r15
	movq %r15,0x238(%rbp)
	movq $0x1,0x240(%rbp)
.p2align 0x4,,0x7
L_218145:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_468768
.p2align 0x4,,0x7
L_218146:
	movq $0x23C1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x238(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x240(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x230(%rbp),%r14
	cmpq $0x1,%r14
	je L_468767
L_218147:
	movq %r15,0x240(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x230(%rbp)
	movq %r15,0x238(%rbp)
	jmp L_218145
.p2align 0x4
L_468767:
L_218148:
	movq 0x240(%rbp),%r15
	movq 0x238(%rbp),%r14
	movq %r14,0x230(%rbp)
	jmp L_218110
.p2align 0x4
L_468768:
L_218149:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x278,%rbp
	leaq (L_218150+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218150
.p2align 0x4
.long 0x3539
L_218150:
	addq $0xFFFFFFFFFFFFFD88,%rbp
	jmp L_218146
.p2align 0x4
.long 0x1
L_218166:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_218167+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x353B
L_218218:
	addq $0xFFFFFFFFFFFFFD88,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218219
L_218288:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x278,%rbp
	leaq (L_218289+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218289
.p2align 0x4
.long 0x3542
L_218289:
	addq $0xFFFFFFFFFFFFFD88,%rbp
L_218219:
	movq 0x238(%rbp),%r14
	cmpq $0x1,%r14
	je L_468772
L_218220:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x238(%rbp)
	jmp L_218153
.p2align 0x4
L_468772:
L_218221:
	movq 0x208(%rbp),%r13
	movq %r13,0x230(%rbp)
	movq 0x1F8(%rbp),%r15
L_218222:
	movq 0x20(%r15),%r14
	movq %r14,0x238(%rbp)
	movq 0x18(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x240(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x280(%rbp)
	movq $0x3E09,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x248(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x278(%rbp)
	addq $0x278,%rbp
	leaq (L_218223+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp remove_0
.p2align 0x4
.long 0x3522
L_217890:
	addq $0xFFFFFFFFFFFFFDA0,%rbp
	movq 0x260(%rbp),%r15
	movq %r15,0x240(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_217891
L_217898:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x260,%rbp
	leaq (L_217899+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_217899
.p2align 0x4
.long 0x3524
L_217899:
	addq $0xFFFFFFFFFFFFFDA0,%rbp
L_217891:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x240(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x10220)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x250(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x248(%rbp)
	addq $0x248,%rbp
	leaq (L_217892+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp record_3
.p2align 0x4
.long 0x1
L_217418:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_217419+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1
L_217480:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_217481
L_217485:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_217486+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_217486
.p2align 0x4
.long 0x451
L_217486:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_217481:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xDD98)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_586+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x34F8
L_217517:
	addq $0xFFFFFFFFFFFFFD40,%rbp
	movq 0x2C0(%rbp),%r14
	movq %r14,0x30(%rbp)
	movq 0x20(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x38(%rbp)
	cmpq $0x1,%r13
	je L_468831
L_217518:
	movq 0x8(%r13),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_217519:
	incl %ecx
	jo L_217328
L_217520:
	cmpq $0x1,%r15
	je L_468776
L_217521:
	movq 0x8(%r15),%r15
	jmp L_217519
.p2align 0x4
L_468776:
L_217522:
L_217523:
	movslq %ecx,%rdx
	movq %rdx,0x20(%rbp)
	testq %rdx,%rdx
	jz L_468829
L_217524:
	cmpq $0x7FFFFFFF,%rdx
	ja L_217649
L_217525:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x16AD,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2C0,%rbp
	leaq (L_217526+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_217526
.p2align 0x4
.long 0x34F9
L_217526:
	addq $0xFFFFFFFFFFFFFD40,%rbp
	movq %rax,0x40(%rbp)
L_217527:
	movq 0x38(%rbp),%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2392:
	cmpq 0x20(%rbp),%r15
	jnl L_468778
L_217755:
	cmpq $0x1,%r14
	je L_217647
L_217756:
	movq %r15,%r13
	movq %r15,%r11
	movq %r15,%r10
	movq 0x0(%r14),%r9
	movq 0x8(%r14),%r14
	movq 0x8(%r9),%r8
	movl 0x0(%r9),%esp
	movl 0x4(%r9),%esi
	movq 0x40(%rbp),%r9
	movq %r9,%rdi
	shrq $0x8,%rdi
	movq (gcState+0x3C8)(%rip),%rdx
	movb $0x1,0x0(%rdx,%rdi,1)
	salq $0x4,%r13
	movq %r8,0x8(%r9,%r13,1)
	salq $0x4,%r11
	movl %esp,0x0(%r9,%r11,1)
	salq $0x4,%r10
	movl %esi,0x4(%r9,%r10,1)
	incq %r15
	jmp loop_2392
.p2align 0x4
L_468778:
L_217528:
	movq 0x40(%rbp),%r15
	movq $0xA2B,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x20(%rbp)
	cmpq %r14,%rdx
	jne L_217346
L_217530:
	decl %r13d
	movl %r13d,0x38(%rbp)
	jo L_217328
L_217531:
	testq %rdx,%rdx
	jz L_468825
L_217532:
	cmpq $0x7FFFFFFF,%rdx
	ja L_217649
L_217533:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x16AD,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2C0,%rbp
	leaq (L_217534+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_217534
.p2align 0x4
.long 0x34FA
L_217534:
	addq $0xFFFFFFFFFFFFFD40,%rbp
	movq %rax,0x48(%rbp)
L_217535:
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2393:
	cmpq 0x20(%rbp),%r15
	jnl L_468780
L_217751:
	movl %r15d,%r14d
	movl 0x38(%rbp),%r13d
	subl %r14d,%r13d
	jo L_217328
L_217752:
	movq %r15,%r14
	movq %r15,%r11
	movq %r15,%r10
	movslq %r13d,%r9
	movq %r9,%r13
	movq %r9,%r8
	salq $0x4,%r13
	movq 0x40(%rbp),%rsp
	movq 0x8(%rsp,%r13,1),%rsi
	salq $0x4,%r8
	movl 0x0(%rsp,%r8,1),%r13d
	salq $0x4,%r9
	movl 0x4(%rsp,%r9,1),%r8d
	movq 0x48(%rbp),%r9
	movq %r9,%rsp
	shrq $0x8,%rsp
	movq (gcState+0x3C8)(%rip),%rdi
	movq %rsp,%rax
	movb $0x1,0x0(%rdi,%rax,1)
	salq $0x4,%r14
	movq %rsi,0x8(%r9,%r14,1)
	salq $0x4,%r11
	movl %r13d,0x0(%r9,%r11,1)
	salq $0x4,%r10
	movl %r8d,0x4(%r9,%r10,1)
	incq %r15
	jmp loop_2393
.p2align 0x4
L_468780:
L_217536:
	movq 0x48(%rbp),%r14
	movq $0xA2B,0xFFFFFFFFFFFFFFF8(%r14)
	movq 0x250(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x20(%rbp)
	cmpq $0x1,%r13
	je L_468823
L_217537:
	movq 0x8(%r13),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_217538:
	incl %ecx
	jo L_217328
L_217539:
	cmpq $0x1,%r15
	je L_468781
L_217540:
	movq 0x8(%r15),%r15
	jmp L_217538
.p2align 0x4
L_468781:
L_217541:
L_217542:
	movslq %ecx,%rdx
	movq %rdx,0x38(%rbp)
	testq %rdx,%rdx
	jz L_468821
L_217543:
	cmpq $0x7FFFFFFF,%rdx
	ja L_217649
L_217544:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x16AF,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2C0,%rbp
	leaq (L_217545+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_217545
.p2align 0x4
.long 0x34FB
L_217545:
	addq $0xFFFFFFFFFFFFFD40,%rbp
	movq %rax,0x40(%rbp)
L_217546:
	movq 0x20(%rbp),%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2394:
	cmpq 0x38(%rbp),%r15
	jnl L_468783
L_217745:
	cmpq $0x1,%r14
	je L_217647
L_217746:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq 0x40(%rbp),%r11
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r13,0x0(%r11,%r15,8)
	incq %r15
	jmp loop_2394
.p2align 0x4
L_468783:
L_217547:
	movq 0x40(%rbp),%r15
	movq $0xA2D,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x20(%rbp)
	cmpq %r14,%rdx
	jne L_217346
L_217549:
	decl %r13d
	movl %r13d,0x38(%rbp)
	jo L_217328
L_217550:
	testq %rdx,%rdx
	jz L_468817
L_217551:
	cmpq $0x7FFFFFFF,%rdx
	ja L_217649
L_217552:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x16AF,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2C0,%rbp
	leaq (L_217553+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_217553
.p2align 0x4
.long 0x34FC
L_217553:
	addq $0xFFFFFFFFFFFFFD40,%rbp
	movq %rax,0x50(%rbp)
L_217554:
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2395:
	cmpq 0x20(%rbp),%r15
	jnl L_468785
L_217741:
	movl %r15d,%r14d
	movl 0x38(%rbp),%r13d
	subl %r14d,%r13d
	jo L_217328
L_217742:
	movslq %r13d,%r14
	movq 0x40(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r11
	movq 0x50(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r11,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_2395
.p2align 0x4
L_468785:
L_217555:
	movq 0x50(%rbp),%r13
	movq $0xA2D,0xFFFFFFFFFFFFFFF8(%r13)
	movq 0x18(%rbp),%r13
	cmpq $0x1,%r13
	je L_468815
L_217556:
	movq 0x8(%r13),%r11
	movq %r11,0x20(%rbp)
	movq 0x0(%r13),%r15
	movq $0x1,%r14
.p2align 0x4,,0x7
L_217557:
	movq 0x10(%r15),%r13
	movq %r13,0x38(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r11
	movl %r11d,%r10d
	movl %r10d,0x40(%rbp)
	movslq %r10d,%r15
	cmpq %r11,%r15
	jne L_217346
L_217559:
	cmpl $0x0,%r10d
	jl L_217619
L_217560:
	movl $0x0,0x44(%rbp)
	movq %r14,%r15
loop_2396:
	movl 0x40(%rbp),%r13d
	cmpl %r13d,0x44(%rbp)
	jl L_468787
L_217561:
	movq 0x20(%rbp),%r13
	cmpq $0x1,%r13
	je L_468786
L_217562:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movq %r13,0x20(%rbp)
	xchgq %r14,%r15
	jmp L_217557
.p2align 0x4
L_468786:
L_217563:
	movq %r15,0x20(%rbp)
L_217564:
	movq 0x1E0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x40(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x58(%rbp)
	movq $0x3,0x2C0(%rbp)
	movq $0x9,0x2C8(%rbp)
	movq %r14,0x2D0(%rbp)
	addq $0x2C0,%rbp
	leaq (L_217565+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
L_468787:
L_217662:
	movslq 0x44(%rbp),%r14
	movq 0x38(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r11
	movq 0x0(%r11),%r10
	movq %r10,0x58(%rbp)
	movq 0x8(%r11),%r10
	movq %r10,0x60(%rbp)
	movq 0x30(%r11),%r10
L_217663:
	movq %r10,%r14
	andq $0x3,%r14
	jnz L_217665
L_217723:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r14
	shrq $0x1,%r14
	cmpq $0xF68,%r14
	je L_468810
	cmpq $0xF69,%r14
	je L_468809
L_217724:
	movl 0x0(%r10),%ecx
	movq %r15,(localObjptr+0x0)(%rip)
L_217725:
	movslq %ecx,%r15
	movq 0x48(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_217352
L_217727:
	salq $0x4,%r15
	movq 0x8(%r14,%r15,1),%r13
	movq (localObjptr+0x0)(%rip),%r14
	movq %r14,%r15
	andq %r13,%r15
	andq $0x1,%r15
	jz L_468806
L_217728:
	cmpq %r14,%r13
	jl L_468805
L_217729:
	movq %r13,%r15
L_217665:
	movq 0x60(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movl %r11d,0x68(%rbp)
	movslq %r11d,%r10
	cmpq %r10,%r13
	jne L_217346
L_217667:
	cmpl $0x0,%r11d
	jl L_217619
L_217668:
	movl $0x0,0x6C(%rbp)
loop_2401:
	movl 0x68(%rbp),%r14d
	cmpl %r14d,0x6C(%rbp)
	jl L_468795
L_217670:
	movq 0x58(%rbp),%r14
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_468794
L_217673:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xF6A,%r13
	je L_468793
	cmpq $0xF6D,%r13
	je L_468789
	cmpq $0xF6E,%r13
	je L_468788
	movq %r15,(localObjptr+0x0)(%rip)
.p2align 0x4,,0x7
L_217672:
	incl 0x44(%rbp)
	movq (localObjptr+0x0)(%rip),%r15
	jmp loop_2396
.p2align 0x4
L_468788:
L_217693:
	movq %r15,0x2C0(%rbp)
	movq 0x58(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x2C8(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x148(%rbp),%r15
	movq %r15,0x2D0(%rbp)
	movq 0x170(%rbp),%r15
	movq %r15,0x2D8(%rbp)
	addq $0x2C0,%rbp
	leaq (L_217694+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp doOperand_0
.p2align 0x4
L_468789:
L_217685:
	movq 0x58(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x60(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r14
	movl %r14d,%r11d
	movl %r11d,0x68(%rbp)
	movslq %r11d,%r10
	cmpq %r10,%r14
	jne L_217346
L_217687:
	cmpl $0x0,%r11d
	jl L_217619
L_217688:
	movl $0x0,0x58(%rbp)
.p2align 0x4,,0x7
loop_2403:
	movl 0x58(%rbp),%r14d
	cmpl 0x68(%rbp),%r14d
	jnl L_468790
L_217690:
	movq %r15,0x2C0(%rbp)
	movslq %r14d,%r15
	movq 0x60(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x2C8(%rbp)
	movq 0x148(%rbp),%r15
	movq %r15,0x2D0(%rbp)
	movq 0x170(%rbp),%r15
	movq %r15,0x2D8(%rbp)
	addq $0x2C0,%rbp
	leaq (L_217691+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp doOperand_0
.p2align 0x4
L_468790:
	movq %r15,(localObjptr+0x0)(%rip)
	jmp L_217672
.p2align 0x4
L_468793:
L_217674:
	movq %r15,0x2C0(%rbp)
	movq 0x58(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x2C8(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x148(%rbp),%r15
	movq %r15,0x2D0(%rbp)
	movq 0x170(%rbp),%r15
	movq %r15,0x2D8(%rbp)
	addq $0x2C0,%rbp
	leaq (L_217675+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp doOperand_0
.p2align 0x4
L_468794:
	movq %r15,(localObjptr+0x0)(%rip)
	jmp L_217672
.p2align 0x4
L_468795:
L_217702:
	movslq 0x6C(%rbp),%r14
	movq 0x60(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r11
L_217703:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_468802
L_217706:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xF62,%r14
	je L_468797
	cmpq $0xF63,%r14
	je L_468796
	movq %r15,(localObjptr+0x0)(%rip)
.p2align 0x4,,0x7
L_217705:
	incl 0x6C(%rbp)
	movq (localObjptr+0x0)(%rip),%r15
	jmp loop_2401
.p2align 0x4
L_468796:
L_217719:
	movq %r15,0x2C0(%rbp)
	movq 0x0(%r11),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x2C8(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x148(%rbp),%r15
	movq %r15,0x2D0(%rbp)
	movq 0x170(%rbp),%r15
	movq %r15,0x2D8(%rbp)
	addq $0x2C0,%rbp
	leaq (L_217720+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp doOperand_0
.p2align 0x4
L_468797:
L_217707:
	movq 0x8(%r11),%r14
	movq 0x0(%r11),%r13
	movq %r13,0x70(%rbp)
	cmpq $0x1,%r14
	jne L_468801
.p2align 0x4,,0x7
L_217710:
	movq 0x70(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movl %r11d,0x80(%rbp)
	movslq %r11d,%r10
	cmpq %r10,%r13
	jne L_217346
L_217712:
	cmpl $0x0,%r11d
	jl L_217619
L_217713:
	movl $0x0,0x84(%rbp)
.p2align 0x4,,0x7
loop_2405:
	movl 0x84(%rbp),%r14d
	cmpl 0x80(%rbp),%r14d
	jnl L_468798
L_217715:
	movq %r15,0x2C0(%rbp)
	movslq %r14d,%r15
	movq 0x70(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x2C8(%rbp)
	movq 0x148(%rbp),%r15
	movq %r15,0x2D0(%rbp)
	movq 0x170(%rbp),%r15
	movq %r15,0x2D8(%rbp)
	addq $0x2C0,%rbp
	leaq (L_217716+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp doOperand_0
.p2align 0x4
L_468798:
	movq %r15,(localObjptr+0x0)(%rip)
	jmp L_217705
.p2align 0x4
L_468801:
L_217708:
	movq %r15,0x2C0(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x2C8(%rbp)
	movq 0x148(%rbp),%r15
	movq %r15,0x2D0(%rbp)
	movq 0x170(%rbp),%r15
	movq %r15,0x2D8(%rbp)
	addq $0x2C0,%rbp
	leaq (L_217709+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp doOperand_0
.p2align 0x4
L_468802:
	movq %r15,(localObjptr+0x0)(%rip)
	jmp L_217705
.p2align 0x4
L_468805:
	movq %r14,%r15
	jmp L_217665
.p2align 0x4
L_468806:
L_217731:
	movq (c_stackP+0x0)(%rip),%rsp
	movq %r13,%rsi
	movq %r14,%rdi
	xorq %rax,%rax
	call IntInf_compare
L_217732:
	cmpl $0x0,%eax
	jg L_468807
L_217733:
	movq %r13,%r15
	jmp L_217665
.p2align 0x4
L_468807:
	movq %r14,%r15
	jmp L_217665
.p2align 0x4
L_468809:
L_217738:
	movl 0x0(%r10),%ecx
	movq %r15,(localObjptr+0x0)(%rip)
	jmp L_217725
.p2align 0x4
L_468810:
L_217735:
	movq 0x0(%r10),%r14
	movq %r14,%r13
	andq $0x1,%r13
	jz L_217665
L_217737:
	shrq $0x1,%r14
	movl %r14d,%ecx
	movq %r15,(localObjptr+0x0)(%rip)
	jmp L_217725
.p2align 0x4
L_468815:
L_217740:
	movq $0x1,0x20(%rbp)
	jmp L_217564
.p2align 0x4
L_468817:
L_217744:
	movq (globalObjptr+0x7620)(%rip),%r15
	movq %r15,0x50(%rbp)
	jmp L_217554
.p2align 0x4
L_468821:
L_217749:
	movq (globalObjptr+0x7618)(%rip),%r15
	movq %r15,0x40(%rbp)
	jmp L_217546
.p2align 0x4
L_468823:
L_217750:
	xorl %ecx,%ecx
	jmp L_217542
.p2align 0x4
L_468825:
L_217754:
	movq (globalObjptr+0x7610)(%rip),%r15
	movq %r15,0x48(%rbp)
	jmp L_217535
.p2align 0x4
L_468829:
L_217759:
	movq (globalObjptr+0x7608)(%rip),%r15
	movq %r15,0x40(%rbp)
	jmp L_217527
.p2align 0x4
L_468831:
L_217760:
	xorl %ecx,%ecx
	jmp L_217523
.p2align 0x4
.long 0x1
rev_320:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_468834
L_217770:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_217771:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_468833
.p2align 0x4,,0x7
L_217772:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_468832
L_217773:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_217771
.p2align 0x4
L_468832:
L_217775:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_217776+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_468833:
L_217783:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_217784+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_217784
.p2align 0x4
.long 0x45B
L_217784:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_217772
.p2align 0x4
L_468834:
L_217785:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_217775
.p2align 0x4
.long 0x3530
L_218042:
	addq $0xFFFFFFFFFFFFFD88,%rbp
	movq 0x278(%rbp),%r15
	movq %r15,0x270(%rbp)
	movq 0x240(%rbp),%r15
	movq %r15,0x280(%rbp)
	addq $0x280,%rbp
	leaq (L_218043+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_2
.p2align 0x4
.long 0x3530
L_218120:
	addq $0xFFFFFFFFFFFFFD88,%rbp
	movq 0x278(%rbp),%r15
	movq %r15,0x270(%rbp)
	movq 0x240(%rbp),%r15
	movq %r15,0x280(%rbp)
	addq $0x280,%rbp
	leaq (L_218121+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_2
.p2align 0x4
.long 0x4AF
L_218167:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xED10)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_218168+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x353C
L_218223:
	addq $0xFFFFFFFFFFFFFD88,%rbp
	movq 0x278(%rbp),%r15
	movq %r15,0x250(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218224
L_218286:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x278,%rbp
	leaq (L_218287+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218287
.p2align 0x4
.long 0x3541
L_218287:
	addq $0xFFFFFFFFFFFFFD88,%rbp
L_218224:
	movq 0x240(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x250(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r14,0x280(%rbp)
	movq $0x3DB5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x268(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x278(%rbp)
	addq $0x278,%rbp
	leaq (L_218225+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp remove_0
.p2align 0x4
.long 0x34EA
L_217892:
	addq $0xFFFFFFFFFFFFFDB8,%rbp
	movq 0x248(%rbp),%r15
	movq %r15,0x240(%rbp)
	movq (globalObjptr+0x9D8)(%rip),%r14
	movq %r14,0x248(%rbp)
	movq %r15,0x250(%rbp)
	movq 0x238(%rbp),%r15
	movq %r15,0x258(%rbp)
	addq $0x248,%rbp
	leaq (L_217893+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3780
.p2align 0x4
.long 0x4AF
L_217419:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0x10208)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_217420+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1
bug_586:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_217482
L_217483:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_217484+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_217484
.p2align 0x4
.long 0x451
L_217484:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_217482:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x34FD
L_217565:
	addq $0xFFFFFFFFFFFFFD40,%rbp
	movq 0x2C0(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_217566
L_217660:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2C0,%rbp
	leaq (L_217661+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_217661
.p2align 0x4
.long 0x3509
L_217661:
	addq $0xFFFFFFFFFFFFFD40,%rbp
L_217566:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x2C0(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x2C8(%rbp)
	addq $0x2C0,%rbp
	leaq (L_217567+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1183
.p2align 0x4
.long 0x350B
L_217694:
	addq $0xFFFFFFFFFFFFFD40,%rbp
	movq 0x2C0(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x60(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movl %r11d,0x68(%rbp)
	movslq %r11d,%r10
	cmpq %r13,%r10
	jne L_217346
L_217696:
	cmpl $0x0,%r11d
	jl L_217619
L_217697:
	movl $0x0,0x58(%rbp)
loop_2404:
	movl 0x58(%rbp),%r14d
	cmpl 0x68(%rbp),%r14d
	jnl L_468838
L_217699:
	movq %r15,0x2C0(%rbp)
	movslq %r14d,%r15
	movq 0x60(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x2C8(%rbp)
	movq 0x148(%rbp),%r15
	movq %r15,0x2D0(%rbp)
	movq 0x170(%rbp),%r15
	movq %r15,0x2D8(%rbp)
	addq $0x2C0,%rbp
	leaq (L_217700+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp doOperand_0
.p2align 0x4
L_468838:
	movq %r15,(localObjptr+0x0)(%rip)
	jmp L_217672
.p2align 0x4
.long 0x350B
L_217691:
	addq $0xFFFFFFFFFFFFFD40,%rbp
	movq 0x2C0(%rbp),%r15
	movq %r15,0x70(%rbp)
	incl 0x58(%rbp)
	jmp loop_2403
.p2align 0x4
.long 0x350A
L_217675:
	addq $0xFFFFFFFFFFFFFD40,%rbp
	movq 0x2C0(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq $0x1,0x60(%rbp)
L_217677:
	movq 0x68(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%ecx
	movslq %ecx,%r13
	cmpq %r14,%r13
	jne L_217346
L_217679:
	cmpl $0x0,%ecx
	jl L_217619
L_217680:
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_2402:
	cmpl %ecx,%ebx
	jnl L_468841
L_217682:
	incl %ebx
	jmp loop_2402
.p2align 0x4
L_468841:
L_217681:
	movq 0x58(%rbp),%r15
	movq %r15,(localObjptr+0x0)(%rip)
	jmp L_217672
.p2align 0x4
.long 0x350C
L_217720:
	addq $0xFFFFFFFFFFFFFD40,%rbp
	movq 0x2C0(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq %r15,0x2C0(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x2C8(%rbp)
	movq 0x148(%rbp),%r15
	movq %r15,0x2D0(%rbp)
	movq 0x170(%rbp),%r15
	movq %r15,0x2D8(%rbp)
	addq $0x2C0,%rbp
	leaq (L_217721+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp doOperand_0
.p2align 0x4
.long 0x350C
L_217716:
	addq $0xFFFFFFFFFFFFFD40,%rbp
	movq 0x2C0(%rbp),%r15
	movq %r15,0x88(%rbp)
	incl 0x84(%rbp)
	jmp loop_2405
.p2align 0x4
.long 0x350C
L_217709:
	addq $0xFFFFFFFFFFFFFD40,%rbp
	movq 0x2C0(%rbp),%r15
	movq %r15,0x80(%rbp)
	jmp L_217710
.p2align 0x4
.long 0x1
L_217776:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_217777
L_217781:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_217782+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_217782
.p2align 0x4
.long 0x451
L_217782:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_217777:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x7600)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xDD80)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_587+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x3533
L_218043:
	addq $0xFFFFFFFFFFFFFD80,%rbp
	movq 0x280(%rbp),%r15
	movq %r15,0x278(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218044
L_218372:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x288,%rbp
	leaq (L_218373+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218373
.p2align 0x4
.long 0x3548
L_218373:
	addq $0xFFFFFFFFFFFFFD78,%rbp
L_218044:
	movq 0x278(%rbp),%r15
	cmpq %r15,0x270(%rbp)
	je L_468845
L_218045:
	movq 0x250(%rbp),%r15
	movq %r15,0x278(%rbp)
	addq $0x278,%rbp
	leaq (L_218046+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_2
.p2align 0x4
L_468845:
L_218369:
	movq 0x238(%rbp),%r14
	cmpq $0x1,%r14
	je L_218066
L_218370:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x238(%rbp)
	jmp L_218033
.p2align 0x4
.long 0x3533
L_218121:
	addq $0xFFFFFFFFFFFFFD80,%rbp
	movq 0x280(%rbp),%r15
	movq %r15,0x278(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218122
L_218322:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x288,%rbp
	leaq (L_218323+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218323
.p2align 0x4
.long 0x3548
L_218323:
	addq $0xFFFFFFFFFFFFFD78,%rbp
L_218122:
	movq 0x270(%rbp),%r15
	cmpq %r15,0x278(%rbp)
	je L_468848
L_218123:
	movq 0x230(%rbp),%r15
	movq %r15,0x278(%rbp)
	addq $0x278,%rbp
	leaq (L_218124+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_2
.p2align 0x4
L_468848:
L_218319:
	movq 0x238(%rbp),%r15
	cmpq $0x1,%r15
	je L_468849
L_218320:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x238(%rbp)
	movq %r14,0x240(%rbp)
	jmp L_218112
.p2align 0x4
L_468849:
L_218321:
	movq 0x250(%rbp),%r14
	xchgq %r14,%r15
L_218143:
	cmpq $0x1,%r15
	je L_218152
L_218144:
	movq 0x8(%r15),%r14
	movq %r14,0x230(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x238(%rbp)
	movq $0x1,0x240(%rbp)
	jmp L_218145
.p2align 0x4
.long 0x5AF
L_218168:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_218169+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x353C
L_218225:
	addq $0xFFFFFFFFFFFFFD88,%rbp
	movq 0x278(%rbp),%r15
	movq %r15,0x250(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218226
L_218284:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x278,%rbp
	leaq (L_218285+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218285
.p2align 0x4
.long 0x3541
L_218285:
	addq $0xFFFFFFFFFFFFFD88,%rbp
L_218226:
	movq 0x240(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x250(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x35FB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x258(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x278(%rbp)
	movq 0x238(%rbp),%r15
	movq %r15,0x280(%rbp)
	addq $0x278,%rbp
	leaq (L_218227+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_0
.p2align 0x4
.long 0x34EA
L_217893:
	addq $0xFFFFFFFFFFFFFDB8,%rbp
	movq 0x248(%rbp),%r15
	movq %r15,0x240(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x248(%rbp)
	movq 0x230(%rbp),%r15
	movq %r15,0x250(%rbp)
	addq $0x248,%rbp
	leaq (L_217894+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x5AF
L_217420:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_217421+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x34FE
L_217567:
	addq $0xFFFFFFFFFFFFFD40,%rbp
	movq 0x2C0(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq $0x9,0x2C0(%rbp)
	movq %r15,0x2C8(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x2D0(%rbp)
	addq $0x2C0,%rbp
	leaq (L_217568+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigRem_0
.p2align 0x4
.long 0x350B
L_217700:
	addq $0xFFFFFFFFFFFFFD40,%rbp
	movq 0x2C0(%rbp),%r15
	movq %r15,0x70(%rbp)
	incl 0x58(%rbp)
	jmp loop_2404
.p2align 0x4
.long 0x350D
L_217721:
	addq $0xFFFFFFFFFFFFFD40,%rbp
	movq 0x2C0(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq %r15,(localObjptr+0x0)(%rip)
	jmp L_217705
.p2align 0x4
.long 0x1
bug_587:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_217778
L_217779:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_217780+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_217780
.p2align 0x4
.long 0x451
L_217780:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_217778:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3530
L_218046:
	addq $0xFFFFFFFFFFFFFD88,%rbp
	movq 0x278(%rbp),%r15
	movq %r15,0x270(%rbp)
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1452,%r15
	jne L_218035
L_218047:
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r13
	movl 0x0(%r13),%r11d
	movl %r11d,0x14(%rbp)
	movq 0x240(%rbp),%r15
	movq %r15,0x278(%rbp)
	addq $0x278,%rbp
	leaq (L_218048+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_2
.p2align 0x4
.long 0x3530
L_218124:
	addq $0xFFFFFFFFFFFFFD88,%rbp
	movq 0x278(%rbp),%r15
	movq %r15,0x270(%rbp)
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1452,%r15
	jne L_218035
L_218125:
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r13
	movl 0x0(%r13),%r11d
	movl %r11d,0x14(%rbp)
	movq 0x240(%rbp),%r15
	movq %r15,0x278(%rbp)
	addq $0x278,%rbp
	leaq (L_218126+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_2
.p2align 0x4
.long 0x51E
L_218169:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218170
L_218192:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_218193+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218193
.p2align 0x4
.long 0x4AE
L_218193:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_218170:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_218171:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_217328
L_218172:
	cmpq $0x1,%r14
	je L_468856
L_218173:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_218171
.p2align 0x4
L_468856:
L_218174:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218175
L_218190:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_218191+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218191
.p2align 0x4
.long 0x4E6
L_218191:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_218175:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_468857
L_218176:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
toString_321:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	addq $0x8,%rbp
	leaq (rev_321+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_468857:
L_218189:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_321
.p2align 0x4
.long 0x353D
L_218227:
	addq $0xFFFFFFFFFFFFFD88,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218228
L_218282:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x278,%rbp
	leaq (L_218283+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218283
.p2align 0x4
.long 0x3540
L_218283:
	addq $0xFFFFFFFFFFFFFD88,%rbp
L_218228:
	movq 0x230(%rbp),%r14
	cmpq $0x1,%r14
	je L_468861
L_218229:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x230(%rbp)
	jmp L_218222
.p2align 0x4
L_468861:
L_218230:
	movq 0x10(%rbp),%r13
	movq 0x0(%r13),%r14
	movq %r14,0x230(%rbp)
	cmpq $0x1,%r14
	je L_468874
L_218231:
	movq 0x8(%r14),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_218232:
	incl %ecx
	movl %ecx,0x10(%rbp)
	jo L_217328
L_218233:
	cmpq $0x1,%r15
	je L_468862
L_218234:
	movq 0x8(%r15),%r15
	jmp L_218232
.p2align 0x4
L_468862:
L_218235:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218236
L_218279:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x240,%rbp
	leaq (L_218280+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218280
.p2align 0x4
.long 0x353E
L_218280:
	addq $0xFFFFFFFFFFFFFDC0,%rbp
L_218236:
	movl 0x10(%rbp),%ecx
L_218237:
	movslq %ecx,%r15
	movq %r15,0x10(%rbp)
	testq %r15,%r15
	jz L_468871
L_218238:
	cmpq $0x7FFFFFFF,%r15
	ja L_217649
L_218239:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218240
L_218275:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x240,%rbp
	leaq (L_218276+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218276
.p2align 0x4
.long 0x353E
L_218276:
	addq $0xFFFFFFFFFFFFFDC0,%rbp
L_218240:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x16A9,%rcx
	movq 0x10(%rbp),%rdx
	movq $0x40,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x240,%rbp
	leaq (L_218241+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218241
.p2align 0x4
.long 0x353E
L_218241:
	addq $0xFFFFFFFFFFFFFDC0,%rbp
	movq %rax,0x238(%rbp)
L_218242:
	movq 0x230(%rbp),%r15
	movq $0x0,0x230(%rbp)
loop_2412:
	movq 0x10(%rbp),%r14
	cmpq %r14,0x230(%rbp)
	jnl L_468868
L_218244:
	cmpq $0x1,%r15
	je L_217647
L_218245:
	movq 0x8(%r15),%r14
	movq %r14,0x240(%rbp)
	movq 0x0(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x248(%rbp)
	movq 0x8(%r14),%r13
	movq 0x0(%r13),%r11
	movq $0x19D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x250(%rbp)
	addq $0x10,%r12
	movq %r11,0x0(%r14)
	cmpq $0x1,%r11
	je L_468866
L_218246:
	movq 0x8(%r11),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_218247:
	incl %ecx
	movl %ecx,0x204(%rbp)
	jo L_217328
L_218248:
	cmpq $0x1,%r15
	je L_468863
L_218249:
	movq 0x8(%r15),%r15
	jmp L_218247
.p2align 0x4
L_468863:
L_218250:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218251
L_218271:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x260,%rbp
	leaq (L_218272+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218272
.p2align 0x4
.long 0x352C
L_218272:
	addq $0xFFFFFFFFFFFFFDA0,%rbp
L_218251:
	movl 0x204(%rbp),%ecx
L_218252:
	movl %ecx,0x260(%rbp)
	movq $0x4009,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x250(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x258(%rbp)
	addq $0x258,%rbp
	leaq (L_218253+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
L_468866:
L_218273:
	xorl %ecx,%ecx
	jmp L_218252
.p2align 0x4
L_468868:
L_218243:
	movq 0x238(%rbp),%r15
	movq $0x18CB,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x10(%rbp)
	jmp L_217363
.p2align 0x4
L_468871:
L_218278:
	movq (globalObjptr+0x75E8)(%rip),%r14
	movq %r14,0x238(%rbp)
	jmp L_218242
.p2align 0x4
L_468874:
L_218281:
	xorl %ecx,%ecx
	jmp L_218237
.p2align 0x4
.long 0x34EA
L_217894:
	addq $0xFFFFFFFFFFFFFDB8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_217895
L_217896:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x248,%rbp
	leaq (L_217897+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_217897
.p2align 0x4
.long 0x3523
L_217897:
	addq $0xFFFFFFFFFFFFFDB8,%rbp
L_217895:
	incl 0x24(%rbp)
	jmp loop_2384
.p2align 0x4
.long 0x51E
L_217421:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_217422
L_217445:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_217446+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_217446
.p2align 0x4
.long 0x4AE
L_217446:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_217422:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_217423:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_217328
L_217424:
	cmpq $0x1,%r14
	je L_468877
L_217425:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_217423
.p2align 0x4
L_468877:
L_217426:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_217427
L_217443:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_217444+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_217444
.p2align 0x4
.long 0x4E6
L_217444:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_217427:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_468878
L_217428:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
toString_319:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	addq $0x8,%rbp
	leaq (rev_319+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_468878:
L_217442:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_319
.p2align 0x4
.long 0x34FF
L_217568:
	addq $0xFFFFFFFFFFFFFD40,%rbp
	movq 0x2C0(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq %r15,0x2C0(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x2C8(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x2D0(%rbp)
	addq $0x2C0,%rbp
	leaq (L_217569+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x3530
L_218048:
	addq $0xFFFFFFFFFFFFFD88,%rbp
	movq 0x278(%rbp),%r15
	movq %r15,0x270(%rbp)
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1452,%r15
	jne L_218035
L_218049:
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r13
	movl 0x0(%r13),%r11d
	movl %r11d,0x204(%rbp)
	movq 0x250(%rbp),%r15
	movq %r15,0x278(%rbp)
	addq $0x278,%rbp
	leaq (L_218050+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_2
.p2align 0x4
.long 0x3530
L_218126:
	addq $0xFFFFFFFFFFFFFD88,%rbp
	movq 0x278(%rbp),%r15
	movq %r15,0x270(%rbp)
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1452,%r15
	jne L_218035
L_218127:
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r13
	movl 0x0(%r13),%r11d
	movl %r11d,0x204(%rbp)
	movq 0x230(%rbp),%r15
	movq %r15,0x278(%rbp)
	addq $0x278,%rbp
	leaq (L_218128+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_2
.p2align 0x4
.long 0x1
rev_321:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_468886
L_218177:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_218178:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_468885
.p2align 0x4,,0x7
L_218179:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_468884
L_218180:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_218178
.p2align 0x4
L_468884:
L_218182:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_588+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_468885:
L_218186:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_218187+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218187
.p2align 0x4
.long 0x45B
L_218187:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_218179
.p2align 0x4
L_468886:
L_218188:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_218182
.p2align 0x4
.long 0x352A
L_218253:
	addq $0xFFFFFFFFFFFFFDA8,%rbp
	movq 0x258(%rbp),%r15
	movq %r15,0x250(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218254
L_218269:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x260,%rbp
	leaq (L_218270+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218270
.p2align 0x4
.long 0x352C
L_218270:
	addq $0xFFFFFFFFFFFFFDA0,%rbp
L_218254:
	movq 0x248(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x19D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x258(%rbp)
	addq $0x10,%r12
	movq %r13,0x0(%r14)
	cmpq $0x1,%r13
	je L_468890
L_218255:
	movq 0x8(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_218256:
	incl %ecx
	movl %ecx,0x204(%rbp)
	jo L_217328
L_218257:
	cmpq $0x1,%r15
	je L_468887
L_218258:
	movq 0x8(%r15),%r15
	jmp L_218256
.p2align 0x4
L_468887:
L_218259:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218260
L_218266:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x268,%rbp
	leaq (L_218267+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218267
.p2align 0x4
.long 0x353F
L_218267:
	addq $0xFFFFFFFFFFFFFD98,%rbp
L_218260:
	movl 0x204(%rbp),%ecx
L_218261:
	movl %ecx,0x268(%rbp)
	movq $0x4009,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x258(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x260(%rbp)
	addq $0x260,%rbp
	leaq (L_218262+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
L_468890:
L_218268:
	xorl %ecx,%ecx
	jmp L_218261
.p2align 0x4
.long 0x1
rev_319:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_468894
L_217429:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_217430:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_468893
.p2align 0x4,,0x7
L_217431:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_468892
L_217432:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_217430
.p2align 0x4
L_468892:
L_217434:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_217435+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_468893:
L_217439:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_217440+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_217440
.p2align 0x4
.long 0x45B
L_217440:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_217431
.p2align 0x4
L_468894:
L_217441:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_217434
.p2align 0x4
.long 0x3500
L_217569:
	addq $0xFFFFFFFFFFFFFD40,%rbp
	movq 0x2C0(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_217570
L_217658:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2C0,%rbp
	leaq (L_217659+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_217659
.p2align 0x4
.long 0x3508
L_217659:
	addq $0xFFFFFFFFFFFFFD40,%rbp
L_217570:
	movq 0x1E8(%rbp),%r14
	cmpq $0x1,%r14
	je L_468897
L_217571:
	movq 0x28(%r14),%r13
	movq %r13,0x38(%rbp)
	movq 0x20(%r14),%r13
	movq %r13,0x40(%rbp)
	movq 0x18(%r14),%r13
	movq %r13,0x58(%rbp)
	movq 0x10(%r14),%r13
	movq %r13,0x60(%rbp)
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq $0x437F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	addq $0x10,%r12
	movq $0x71,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x68(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq $0x8CF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,0x70(%rbp)
	movq %r14,0x0(%r11)
	addq $0x18,%r12
	movq %r13,0x8(%r11)
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_468895
L_217572:
	movq 0x8(%r14),%r13
	movq %r13,0x80(%rbp)
	movq 0x0(%r14),%r15
L_217573:
	movl 0x0(%r15),%r14d
	movl %r14d,0x88(%rbp)
	movq 0x8(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x90(%rbp)
	movq %r13,0x2C0(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x2C8(%rbp)
	addq $0x2C0,%rbp
	leaq (L_217574+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_3
.p2align 0x4
L_468895:
L_217579:
	movq 0x30(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_217346
L_217581:
	movl %r13d,0x2C8(%rbp)
	movq $0x3741,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x70(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x2C0(%rbp)
	addq $0x2C0,%rbp
	leaq (L_217582+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_8
.p2align 0x4
L_468897:
L_217657:
	movq $0x1,0x30(%rbp)
L_217595:
	movq 0x298(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movl %r13d,0x40(%rbp)
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_217346
L_217597:
	cmpl $0x0,%r13d
	jl L_217619
L_217598:
	movq $0x1,0x58(%rbp)
	movl $0x0,0x44(%rbp)
.p2align 0x4,,0x7
loop_2398:
	movl 0x44(%rbp),%r15d
	cmpl 0x40(%rbp),%r15d
	jnl L_468901
L_217631:
	movslq %r15d,%r14
	movq 0x38(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	cmpq $0x1,%r13
	je L_468900
L_217632:
	movq 0x0(%r13),%r15
	movq %r15,0x60(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x58(%rbp)
L_217633:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_468899
.p2align 0x4,,0x7
L_217634:
	movq 0x60(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x10(%r15),%r13
	movq $0x1205,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq $0x2397,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x68(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x58(%rbp),%r15
	cmpq $0x1,%r15
	je L_468898
L_217635:
	movq %r14,0x68(%rbp)
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x58(%rbp)
	movq %r14,0x60(%rbp)
	jmp L_217633
.p2align 0x4
L_468898:
L_217636:
	xchgq %r14,%r15
L_217637:
	movq %r15,0x58(%rbp)
	incl 0x44(%rbp)
	jmp loop_2398
.p2align 0x4
L_468899:
L_217638:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2C0,%rbp
	leaq (L_217639+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_217639
.p2align 0x4
.long 0x3505
L_217639:
	addq $0xFFFFFFFFFFFFFD40,%rbp
	jmp L_217634
.p2align 0x4
L_468900:
L_217640:
	movq 0x58(%rbp),%r15
	jmp L_217637
.p2align 0x4
L_468901:
L_217599:
	movq 0x2B0(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x38(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r14
	movl %r14d,%r11d
	movl %r11d,0x40(%rbp)
	movslq %r11d,%r10
	cmpq %r10,%r14
	jne L_217346
L_217601:
	cmpl $0x0,%r11d
	jl L_217619
L_217602:
	movq $0x1,0x60(%rbp)
	movl $0x0,0x44(%rbp)
.p2align 0x4,,0x7
loop_2399:
	movl 0x44(%rbp),%r15d
	cmpl 0x40(%rbp),%r15d
	jnl L_468905
L_217620:
	movslq %r15d,%r14
	movq 0x38(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	cmpq $0x1,%r13
	je L_468904
L_217621:
	movq 0x0(%r13),%r15
	movq %r15,0x68(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x60(%rbp)
L_217622:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_468903
.p2align 0x4,,0x7
L_217623:
	movq 0x68(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x10(%r15),%r13
	movq $0x1203,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq $0x239B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x70(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x60(%rbp),%r15
	cmpq $0x1,%r15
	je L_468902
L_217624:
	movq %r14,0x70(%rbp)
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x60(%rbp)
	movq %r14,0x68(%rbp)
	jmp L_217622
.p2align 0x4
L_468902:
L_217625:
	xchgq %r14,%r15
L_217626:
	movq %r15,0x60(%rbp)
	incl 0x44(%rbp)
	jmp loop_2399
.p2align 0x4
L_468903:
L_217627:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x210,%rbp
	leaq (L_217628+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_217628
.p2align 0x4
.long 0x3504
L_217628:
	addq $0xFFFFFFFFFFFFFDF0,%rbp
	jmp L_217623
.p2align 0x4
L_468904:
L_217629:
	movq 0x60(%rbp),%r15
	jmp L_217626
.p2align 0x4
L_468905:
L_217603:
	movq 0x78(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x38(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r14
	movl %r14d,%r11d
	movl %r11d,0x40(%rbp)
	movslq %r11d,%r10
	cmpq %r14,%r10
	jne L_217346
L_217605:
	cmpl $0x0,%r11d
	jl L_217619
L_217606:
	movq $0x1,%r14
	movl $0x0,0x44(%rbp)
	movq %r14,%r15
.p2align 0x4,,0x7
loop_2400:
	movl 0x44(%rbp),%r14d
	cmpl 0x40(%rbp),%r14d
	jnl L_468909
L_217608:
	movslq %r14d,%r13
	movq 0x38(%rbp),%r14
	movq 0x0(%r14,%r13,8),%r11
	cmpq $0x1,%r11
	je L_468908
L_217609:
	movq %r15,0x78(%rbp)
	movq 0x8(%r11),%r15
	movq %r15,0x68(%rbp)
	movq 0x0(%r11),%r15
	movq %r15,0x70(%rbp)
L_217610:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_468907
.p2align 0x4,,0x7
L_217611:
	movq 0x70(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x10(%r15),%r13
	movq $0x1201,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq $0x239D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x78(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x68(%rbp),%r15
	cmpq $0x1,%r15
	je L_468906
L_217612:
	movq %r14,0x78(%rbp)
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x68(%rbp)
	movq %r14,0x70(%rbp)
	jmp L_217610
.p2align 0x4
L_468906:
L_217613:
	movq %r14,(localObjptr+0x0)(%rip)
L_217614:
	incl 0x44(%rbp)
	movq (localObjptr+0x0)(%rip),%r15
	jmp loop_2400
.p2align 0x4
L_468907:
L_217615:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x210,%rbp
	leaq (L_217616+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_217616
.p2align 0x4
.long 0x3504
L_217616:
	addq $0xFFFFFFFFFFFFFDF0,%rbp
	jmp L_217611
.p2align 0x4
L_468908:
	movq %r15,(localObjptr+0x0)(%rip)
	jmp L_217614
.p2align 0x4
L_468909:
L_217607:
	movq %r15,0x0(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x30(%rbp)
	movl 0x200(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x1F0(%rbp),%r15
	movq %r15,0x18(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3530
L_218050:
	addq $0xFFFFFFFFFFFFFD88,%rbp
	movq 0x278(%rbp),%r15
	movq %r15,0x270(%rbp)
	movq 0x240(%rbp),%r15
	movq %r15,0x280(%rbp)
	addq $0x280,%rbp
	leaq (L_218051+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_2
.p2align 0x4
.long 0x3530
L_218128:
	addq $0xFFFFFFFFFFFFFD88,%rbp
	movq 0x278(%rbp),%r15
	movq %r15,0x270(%rbp)
	movq 0x240(%rbp),%r15
	movq %r15,0x280(%rbp)
	addq $0x280,%rbp
	leaq (L_218129+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_2
.p2align 0x4
.long 0x1
bug_588:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218183
L_218184:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_218185+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218185
.p2align 0x4
.long 0x451
L_218185:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_218183:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x352B
L_218262:
	addq $0xFFFFFFFFFFFFFDA0,%rbp
	movq 0x260(%rbp),%r15
	movq %r15,0x248(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218263
L_218264:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x260,%rbp
	leaq (L_218265+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218265
.p2align 0x4
.long 0x352C
L_218265:
	addq $0xFFFFFFFFFFFFFDA0,%rbp
L_218263:
	movq 0x238(%rbp),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq 0x230(%rbp),%r11
	movq %r11,%r15
	salq $0x4,%r15
	movq 0x248(%rbp),%r10
	movq %r10,0x0(%r14,%r15,1)
	movq %r14,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,%r15
	salq $0x4,%r15
	movq 0x250(%rbp),%r13
	movq %r13,0x8(%r14,%r15,1)
	incq %r11
	movq %r11,0x230(%rbp)
	movq 0x240(%rbp),%r15
	jmp loop_2412
.p2align 0x4
.long 0x1
L_217435:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_217436
L_217437:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_217438+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_217438
.p2align 0x4
.long 0x451
L_217438:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_217436:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3501
L_217574:
	addq $0xFFFFFFFFFFFFFD40,%rbp
	movq 0x2C0(%rbp),%r15
	movq %r15,0x98(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_217575
L_217654:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2C0,%rbp
	leaq (L_217655+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_217655
.p2align 0x4
.long 0x3507
L_217655:
	addq $0xFFFFFFFFFFFFFD40,%rbp
L_217575:
	movq 0x98(%rbp),%r15
	andq $0x1,%r15
	jnz L_217653
L_217576:
	movq $0x1955,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x88(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x90(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	movq 0x80(%rbp),%r14
	cmpq $0x1,%r14
	je L_217579
L_217577:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x80(%rbp)
	jmp L_217573
.p2align 0x4
.long 0x3502
L_217582:
	addq $0xFFFFFFFFFFFFFD40,%rbp
	movq 0x2C0(%rbp),%r14
	movq %r14,0x30(%rbp)
	movq 0x60(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x68(%rbp)
	cmpq $0x1,%r13
	je L_468930
L_217583:
	movq 0x8(%r13),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_217584:
	incl %ecx
	jo L_217328
L_217585:
	cmpq $0x1,%r15
	je L_468923
L_217586:
	movq 0x8(%r15),%r15
	jmp L_217584
.p2align 0x4
L_468923:
L_217587:
L_217588:
	movslq %ecx,%rdx
	movq %rdx,0x60(%rbp)
	testq %rdx,%rdx
	jz L_468928
L_217589:
	cmpq $0x7FFFFFFF,%rdx
	ja L_217649
L_217590:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1431,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2C0,%rbp
	leaq (L_217591+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_217591
.p2align 0x4
.long 0x3503
L_217591:
	addq $0xFFFFFFFFFFFFFD40,%rbp
	movq %rax,0x70(%rbp)
L_217592:
	movq 0x68(%rbp),%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2397:
	cmpq 0x60(%rbp),%r15
	jnl L_468925
L_217644:
	cmpq $0x1,%r14
	je L_217647
L_217645:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq 0x70(%rbp),%r11
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r13,0x0(%r11,%r15,8)
	incq %r15
	jmp loop_2397
.p2align 0x4
L_468925:
L_217593:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_217594
L_217642:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2C0,%rbp
	leaq (L_217643+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_217643
.p2align 0x4
.long 0x3506
L_217643:
	addq $0xFFFFFFFFFFFFFD40,%rbp
L_217594:
	movq 0x70(%rbp),%r15
	movq $0xAFB,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x2399,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x30,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq 0x58(%rbp),%r15
	movq %r15,0x10(%r14)
	movq 0x40(%rbp),%r15
	movq %r15,0x18(%r14)
	movq 0x38(%rbp),%r15
	movq %r15,0x20(%r14)
	movq %r14,0x30(%rbp)
	jmp L_217595
.p2align 0x4
L_468928:
L_217650:
	movq (globalObjptr+0xD38)(%rip),%r15
	movq %r15,0x70(%rbp)
	jmp L_217592
.p2align 0x4
L_468930:
L_217651:
	xorl %ecx,%ecx
	jmp L_217588
.p2align 0x4
.long 0x3534
L_218051:
	addq $0xFFFFFFFFFFFFFD80,%rbp
	movq 0x280(%rbp),%r15
	movq %r15,0x240(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218052
L_218367:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x280,%rbp
	leaq (L_218368+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218368
.p2align 0x4
.long 0x3547
L_218368:
	addq $0xFFFFFFFFFFFFFD80,%rbp
L_218052:
	movq 0x240(%rbp),%r15
	movq 0x270(%rbp),%r14
	cmpq %r14,%r15
	je L_218059
L_218053:
	movq 0x0(%r14),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0x1452,%r11
	jne L_218054
L_218055:
	movl 0x0(%r13),%r11d
	movq 0x0(%r15),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r10
	shrq $0x1,%r10
	cmpq $0x1452,%r10
	jne L_218054
L_218056:
	movl 0x0(%r13),%r10d
	cmpl %r10d,%r11d
	jl L_468936
L_218057:
	movq $0x28A7,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq %r14,0x0(%r13)
	movq %r15,%r9
	shrq $0x8,%r9
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r9,1)
	movq %r13,0x0(%r15)
	cmpl %r11d,%r10d
	jne L_218059
L_218361:
	movq 0x0(%r14),%r15
	movq %r15,%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	movq %r11,%r10
	shrq $0x1,%r10
	cmpq $0x1452,%r10
	jne L_468934
L_218362:
	movl 0x0(%r13),%r11d
	incl %r11d
	jo L_217328
L_218363:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0x1452,%r13
	jne L_468932
L_218364:
	movq 0x8(%r15),%r13
	movq $0x28A5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r11d,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x4(%r15)
	movq %r14,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%r8,%r13,1)
	movq %r15,0x0(%r14)
L_218059:
	movl 0x14(%rbp),%r15d
	addl 0x204(%rbp),%r15d
	movl %r15d,0x240(%rbp)
	jo L_217328
L_218060:
	movq 0x250(%rbp),%r15
	movq %r15,0x278(%rbp)
	addq $0x278,%rbp
	leaq (L_218061+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_2
.p2align 0x4
L_468932:
L_218313:
	movq (globalObjptr+0x1508)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_468934:
L_218054:
	movq (globalObjptr+0x1688)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_468936:
L_218365:
	movq $0x28A7,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq %r15,0x0(%r13)
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	jmp L_218059
.p2align 0x4
.long 0x3534
L_218129:
	addq $0xFFFFFFFFFFFFFD80,%rbp
	movq 0x280(%rbp),%r15
	movq %r15,0x240(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218130
L_218317:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x280,%rbp
	leaq (L_218318+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218318
.p2align 0x4
.long 0x3547
L_218318:
	addq $0xFFFFFFFFFFFFFD80,%rbp
L_218130:
	movq 0x270(%rbp),%r15
	movq 0x240(%rbp),%r14
	cmpq %r14,%r15
	je L_218136
L_218131:
	movq 0x0(%r15),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0x1452,%r11
	jne L_218054
L_218132:
	movl 0x0(%r13),%r11d
	movq 0x0(%r14),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r10
	shrq $0x1,%r10
	cmpq $0x1452,%r10
	jne L_218054
L_218133:
	movl 0x0(%r13),%r10d
	cmpl %r10d,%r11d
	jl L_468946
L_218134:
	movq $0x28A7,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq %r15,0x0(%r13)
	movq %r14,%r9
	shrq $0x8,%r9
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r9,1)
	movq %r13,0x0(%r14)
	cmpl %r11d,%r10d
	jne L_218136
L_218310:
	movq 0x0(%r15),%r14
	movq %r14,%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	movq %r11,%r10
	shrq $0x1,%r10
	cmpq $0x1452,%r10
	jne L_218054
L_218311:
	movl 0x0(%r13),%r11d
	incl %r11d
	jo L_217328
L_218312:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x1452,%r13
	jne L_218313
L_218314:
	movq 0x8(%r14),%r13
	movq $0x28A5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %r11d,0x0(%r14)
	movq %r13,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r15,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%r8,%r13,1)
	movq %r14,0x0(%r15)
L_218136:
	movl 0x14(%rbp),%r15d
	addl 0x204(%rbp),%r15d
	movl %r15d,0x240(%rbp)
	jo L_217328
L_218137:
	movq 0x230(%rbp),%r15
	movq %r15,0x278(%rbp)
	addq $0x278,%rbp
	leaq (L_218138+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_2
.p2align 0x4
L_468946:
L_218315:
	movq $0x28A7,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq %r14,0x0(%r13)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x0(%r15)
	jmp L_218136
.p2align 0x4
.long 0x3535
L_218061:
	addq $0xFFFFFFFFFFFFFD88,%rbp
	movq 0x278(%rbp),%r15
	movq %r15,0x250(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218062
L_218359:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x278,%rbp
	leaq (L_218360+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218360
.p2align 0x4
.long 0x354C
L_218360:
	addq $0xFFFFFFFFFFFFFD88,%rbp
L_218062:
	movq 0x250(%rbp),%r14
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1452,%r14
	jne L_218035
L_218063:
	movq 0x8(%r15),%r14
	movq 0x0(%r14),%r13
	movl 0x240(%rbp),%r11d
	movl %r11d,0x0(%r13)
	movq 0x238(%rbp),%r14
	cmpq $0x1,%r14
	je L_218066
L_218064:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x238(%rbp)
	jmp L_218033
.p2align 0x4
.long 0x3538
L_218138:
	addq $0xFFFFFFFFFFFFFD88,%rbp
	movq 0x278(%rbp),%r15
	movq %r15,0x270(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218139
L_218308:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x280,%rbp
	leaq (L_218309+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218309
.p2align 0x4
.long 0x3546
L_218309:
	addq $0xFFFFFFFFFFFFFD80,%rbp
L_218139:
	movq 0x270(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1452,%r15
	jne L_218035
L_218140:
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r13
	movl 0x240(%rbp),%r11d
	movl %r11d,0x0(%r13)
	movq 0x238(%rbp),%r15
	cmpq $0x1,%r15
	je L_468954
L_218141:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x238(%rbp)
	movq %r14,0x240(%rbp)
	jmp L_218112
.p2align 0x4
L_468954:
L_218142:
	movq 0x250(%rbp),%r14
	xchgq %r14,%r15
	jmp L_218143
.text
.p2align 0x4
.globl x_1936
.hidden x_1936
x_1936:
L_218419:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_219054
L_218420:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_468958
L_218421:
	movq 0x10(%rbp),%r15
	movq 0x1B0(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x1A0(%r15),%r14
	movq 0x198(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x190(%r15),%r13
	movq %r13,0x28(%rbp)
	movq 0x188(%r15),%r13
	movq %r13,0x30(%rbp)
	movq 0x180(%r15),%r13
	movq %r13,0x38(%rbp)
	movq 0x178(%r15),%r13
	movq %r13,0x40(%rbp)
	movq 0x170(%r15),%r13
	movq %r13,0x48(%rbp)
	movq 0x168(%r15),%r13
	movq %r13,0x50(%rbp)
	movq 0x160(%r15),%r13
	movq %r13,0x58(%rbp)
	movq 0x158(%r15),%r13
	movq %r13,0x60(%rbp)
	movq 0x150(%r15),%r13
	movq %r13,0x68(%rbp)
	movq 0x148(%r15),%r13
	movq %r13,0x70(%rbp)
	movq 0x140(%r15),%r13
	movq %r13,0x78(%rbp)
	movq 0x138(%r15),%r13
	movq %r13,0x80(%rbp)
	movq 0x130(%r15),%r13
	movq %r13,0x88(%rbp)
	movq 0x118(%r15),%r13
	movq %r13,0x90(%rbp)
	movq 0x110(%r15),%r13
	movq %r13,0x98(%rbp)
	movq 0x108(%r15),%r13
	movq %r13,0xA0(%rbp)
	movq 0x100(%r15),%r13
	movq %r13,0xA8(%rbp)
	movq 0xF8(%r15),%r13
	movq %r13,0xB0(%rbp)
	movq 0xE8(%r15),%r13
	movq %r13,0xB8(%rbp)
	movq 0xE0(%r15),%r13
	movq %r13,0xC0(%rbp)
	movq 0xD8(%r15),%r13
	movq %r13,0xC8(%rbp)
	movq 0xD0(%r15),%r13
	movq %r13,0xD0(%rbp)
	movq 0xC8(%r15),%r13
	movq %r13,0xD8(%rbp)
	movq 0xC0(%r15),%r13
	movq %r13,0xE0(%rbp)
	movq 0xB8(%r15),%r13
	movq %r13,0xE8(%rbp)
	movq 0xB0(%r15),%r13
	movq %r13,0xF0(%rbp)
	movq 0xA8(%r15),%r13
	movq %r13,0xF8(%rbp)
	movq 0xA0(%r15),%r13
	movq %r13,0x100(%rbp)
	movq 0x98(%r15),%r13
	movq %r13,0x108(%rbp)
	movq 0x90(%r15),%r13
	movq %r13,0x110(%rbp)
	movq 0x88(%r15),%r13
	movq %r13,0x118(%rbp)
	movq 0x80(%r15),%r13
	movq %r13,0x120(%rbp)
	movq 0x78(%r15),%r13
	movq %r13,0x128(%rbp)
	movq 0x70(%r15),%r13
	movq %r13,0x130(%rbp)
	movq 0x68(%r15),%r13
	movq %r13,0x138(%rbp)
	movq 0x60(%r15),%r13
	movq %r13,0x140(%rbp)
	movq 0x58(%r15),%r13
	movq %r13,0x148(%rbp)
	movq 0x50(%r15),%r13
	movq %r13,0x150(%rbp)
	movq 0x48(%r15),%r13
	movq %r13,0x158(%rbp)
	movq 0x40(%r15),%r13
	movq %r13,0x160(%rbp)
	movq 0x38(%r15),%r13
	movq %r13,0x168(%rbp)
	movq 0x30(%r15),%r13
	movq %r13,0x170(%rbp)
	movq 0x28(%r15),%r13
	movq %r13,0x178(%rbp)
	movq 0x20(%r15),%r13
	movq %r13,0x180(%rbp)
	movq 0x18(%r15),%r13
	movq %r13,0x188(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x190(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x198(%rbp)
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x1A0(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x1A8(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x1B0(%rbp)
	movq 0x18(%r15),%r13
	movq %r13,0x1B8(%rbp)
	movq 0x20(%r15),%r13
	movq %r13,0x1C0(%rbp)
	movq 0x28(%r15),%r11
	movq %r11,0x1C8(%rbp)
	movq $0x71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x1D0(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x36F1,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,0x1D8(%rbp)
	addq $0x18,%r12
	movq %r15,0x0(%r11)
	movq %r15,0x8(%r11)
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movl %r15d,%r11d
	movslq %r11d,%r10
	movq %r10,0x1E0(%rbp)
	cmpq %r10,%r15
	jne L_468957
L_218424:
	movq $0x437B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x8(%rbp)
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x71,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x10(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x8CF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,0x1E8(%rbp)
	addq $0x18,%r12
	movq %r15,0x0(%r11)
	movq %r14,0x8(%r11)
	movq $0x35D1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r14,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r15,0x1F8(%rbp)
	movq %r13,0x200(%rbp)
	addq $0x1F8,%rbp
	leaq (L_218425+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_0
.p2align 0x4
L_468957:
L_218423:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_468958:
L_219054:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_219055+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219055
.p2align 0x4
.long 0x4E8
L_219055:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_218421
.p2align 0x4
.long 0x3553
L_218425:
	addq $0xFFFFFFFFFFFFFE08,%rbp
	movq 0x1E0(%rbp),%rdx
	cmpq $0x7FFFFFFF,%rdx
	ja L_468961
L_218426:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xF1,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1F8,%rbp
	leaq (L_218427+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218427
.p2align 0x4
.long 0x3554
L_218427:
	addq $0xFFFFFFFFFFFFFE08,%rbp
	xorq %r15,%r15
	movq %rax,%r14
.p2align 0x4,,0x7
loop_2413:
	cmpq 0x1E0(%rbp),%r15
	jnl L_468960
L_219052:
	movl $0x0,0x0(%r14,%r15,4)
	incq %r15
	jmp loop_2413
.p2align 0x4
L_468960:
L_218428:
	movq %r14,0x208(%rbp)
	movq 0x1A0(%rbp),%r15
	movq %r15,0x1F0(%rbp)
	movq 0x1D8(%rbp),%r15
	movq %r15,0x1F8(%rbp)
	movq 0x1C0(%rbp),%r15
	movq %r15,0x200(%rbp)
	movq 0x1E8(%rbp),%r15
	movq %r15,0x210(%rbp)
	addq $0x1F0,%rbp
	leaq (L_218429+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp visit_0
.p2align 0x4
L_468961:
L_218965:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3555
L_218429:
	addq $0xFFFFFFFFFFFFFE10,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218430
L_219050:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1F0,%rbp
	leaq (L_219051+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219051
.p2align 0x4
.long 0x35D5
L_219051:
	addq $0xFFFFFFFFFFFFFE10,%rbp
L_218430:
	movq $0x35CF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x1F0(%rbp)
	movq 0x1C0(%rbp),%r15
	movq %r15,0x1F8(%rbp)
	addq $0x1F0,%rbp
	leaq (L_218431+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_0
.p2align 0x4
.long 0x3556
L_218431:
	addq $0xFFFFFFFFFFFFFE10,%rbp
	movq 0x1E0(%rbp),%rdx
	testq %rdx,%rdx
	jz L_469002
L_218432:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1699,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1F0,%rbp
	leaq (L_218433+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218433
.p2align 0x4
.long 0x3557
L_218433:
	addq $0xFFFFFFFFFFFFFE10,%rbp
	movq %rax,0x10(%rbp)
L_218434:
	movl $0x0,0x4(%rbp)
	movq $0x0,0x1D8(%rbp)
loop_2414:
	movq 0x1E0(%rbp),%r15
	cmpq %r15,0x1D8(%rbp)
	jl L_469001
L_218435:
	movq 0x10(%rbp),%r15
	movq $0x187B,0xFFFFFFFFFFFFFFF8(%r15)
	movslq 0x4(%rbp),%rdx
	movq %rdx,0x1C0(%rbp)
	testq %rdx,%rdx
	jz L_469000
L_218436:
	cmpq $0x7FFFFFFF,%rdx
	ja L_218965
L_218437:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x143B,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1D8,%rbp
	leaq (L_218438+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218438
.p2align 0x4
.long 0x3558
L_218438:
	addq $0xFFFFFFFFFFFFFE28,%rbp
	movq %rax,0x1D0(%rbp)
L_218439:
	xorl %ecx,%ecx
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2415:
	cmpq 0x1C0(%rbp),%r15
	jnl L_468966
.p2align 0x4,,0x7
loop_2428:
	movslq %ecx,%r14
	movq 0x10(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r11
	cmpq $0x1,%r11
	jne L_468964
L_219032:
	incl %ecx
	jo L_468963
L_219033:
	jmp loop_2428
.p2align 0x4
L_468963:
L_218479:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_468964:
L_219030:
	incl %ecx
	jo L_218479
L_219031:
	movq 0x1D0(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r11,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_2415
.p2align 0x4
L_468966:
L_218440:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218441
L_219027:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1E0,%rbp
	leaq (L_219028+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219028
.p2align 0x4
.long 0x35D1
L_219028:
	addq $0xFFFFFFFFFFFFFE20,%rbp
L_218441:
	movq 0x1D0(%rbp),%r15
	movq $0x779,0xFFFFFFFFFFFFFFF8(%r15)
	cmpq $0x1,0x1B0(%rbp)
	je L_468996
L_218442:
	movq 0x20(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x1C0(%rbp)
	movq 0x0(%r14),%r15
	cmpq $0x1,%r15
	je L_218453
L_218443:
	movq 0x8(%r15),%r14
	movq %r14,0x1D8(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x1E0(%rbp)
.p2align 0x4,,0x7
L_218444:
	movq 0x1E0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x1E8(%rbp)
	movq 0x1B0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r13
	movq %r13,0x1F0(%rbp)
	movl %r13d,%r15d
	movl %r15d,0x4(%rbp)
	movslq %r15d,%r11
	cmpq %r13,%r11
	jne L_218423
L_218446:
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r13,%r10
	jne L_218423
L_218448:
	cmpl %r11d,%r15d
	je L_468990
L_218449:
	movq 0x1D8(%rbp),%r15
	cmpq $0x1,%r15
	je L_468967
L_218450:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x1D8(%rbp)
	movq %r14,0x1E0(%rbp)
	jmp L_218444
.p2align 0x4
L_468967:
L_218451:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218453
L_219008:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r14d
	movl %r14d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r14
	movq %r14,%rdi
	xorq %rax,%rax
	addq $0x1E0,%rbp
	leaq (L_219009+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219009
.p2align 0x4
.long 0x35CE
L_219009:
	addq $0xFFFFFFFFFFFFFE20,%rbp
L_218453:
	movq 0x1B0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	movq %r11,0x1D8(%rbp)
	cmpq %r14,%r11
	jne L_218423
L_218455:
	testq %r11,%r11
	jz L_468987
L_218456:
	cmpq $0x7FFFFFFF,%r11
	ja L_218965
L_218457:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218458
L_219004:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1E8,%rbp
	leaq (L_219005+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219005
.p2align 0x4
.long 0x3559
L_219005:
	addq $0xFFFFFFFFFFFFFE18,%rbp
L_218458:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x16A3,%rcx
	movq 0x1D8(%rbp),%rdx
	movq $0x30,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1E8,%rbp
	leaq (L_218459+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218459
.p2align 0x4
.long 0x3559
L_218459:
	addq $0xFFFFFFFFFFFFFE18,%rbp
	movq %rax,0x1E0(%rbp)
L_218460:
	movq $0x0,0x1E8(%rbp)
loop_2416:
	movq 0x1D8(%rbp),%r14
	cmpq %r14,0x1E8(%rbp)
	jl L_468984
L_218461:
	movq 0x1E0(%rbp),%r15
	movq $0x901,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x11FB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x1B0(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x10(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x23AD,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r10,0x0(%r13)
L_218462:
	movq 0x1A8(%rbp),%r14
	cmpq $0x1,%r14
	je L_468983
L_218463:
	movq %r14,0x10(%rbp)
	movq %r15,0x1A8(%rbp)
L_218464:
	movq 0x10(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x1B0(%rbp)
	cmpq %rdx,%r14
	jne L_218423
L_218466:
	testq %rdx,%rdx
	jz L_468981
L_218467:
	cmpq $0x7FFFFFFF,%rdx
	ja L_218965
L_218468:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x16A5,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1E0,%rbp
	leaq (L_218469+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218469
.p2align 0x4
.long 0x355A
L_218469:
	addq $0xFFFFFFFFFFFFFE20,%rbp
	movq %rax,0x1C0(%rbp)
L_218470:
	movq $0x1,%r15
	movq $0x0,0x1D8(%rbp)
loop_2417:
	movq 0x1D8(%rbp),%r14
	cmpq 0x1B0(%rbp),%r14
	jnl L_468968
L_218979:
	movq %r15,0x1F0(%rbp)
	movl %r14d,%r15d
	movslq %r15d,%r14
	movq 0x10(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	movq %r13,0x1E0(%rbp)
	movq %r13,0x1F8(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x200(%rbp)
	addq $0x1F0,%rbp
	leaq (L_218980+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp align_0
.p2align 0x4
L_468968:
L_218471:
	movq 0x1C0(%rbp),%r15
	movq $0x8FF,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x10(%rbp)
L_218472:
	movq 0x40(%rbp),%r10
	movq 0x8(%r10),%r11
	movq 0x0(%r10),%r13
	movq 0x1B8(%rbp),%r10
	movq 0x10(%r10),%r15
	movq (globalObjptr+0x1068)(%rip),%r10
	movq 0x0(%r10),%r14
	incq %r14
	jo L_468979
L_218474:
	movq %r14,0x0(%r10)
	movq 0x0(%r15),%r10
	cmpq $0x1,%r10
	je L_468978
L_218475:
	movq 0x8(%r10),%r14
	movq 0x0(%r10),%r10
	movl $0x0,0x4(%rbp)
	movq %r10,%r15
.p2align 0x4,,0x7
L_218477:
	movq %r15,%r10
	andq $0x3,%r10
	jnz L_468977
L_218518:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r10
	shrq $0x1,%r10
	cmpq $0xCBE,%r10
	jne L_468976
L_218519:
	movq 0x8(%r15),%r10
	movq %r10,0x40(%rbp)
	cmpq 0x0(%r15),%r11
	movq %r11,(localObjptr+0x0)(%rip)
	je L_468972
L_218478:
	movl 0x4(%rbp),%r10d
	incl %r10d
	jo L_218479
L_218480:
	cmpq $0x1,%r14
	je L_468969
L_218481:
	movl %r10d,0x4(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq (localObjptr+0x0)(%rip),%r11
	jmp L_218477
.p2align 0x4
L_468969:
	movl %r10d,%ecx
L_218483:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_468970
L_218485:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl x_769
L_218517:
	movl %ecx,0x0(%r15)
x_769:
	movq %r13,0x10(%rbp)
	movq 0x1B8(%rbp),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_218487+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_468970:
L_218484:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_468972:
L_218521:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218522
L_218976:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1E0,%rbp
	leaq (L_218977+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218977
.p2align 0x4
.long 0x355A
L_218977:
	addq $0xFFFFFFFFFFFFFE20,%rbp
L_218522:
	movl 0x4(%rbp),%r15d
	movslq %r15d,%r14
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r14
	jo L_218484
L_218523:
	movq %r14,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %r15d,0x0(%r14)
	jnl L_218525
L_218975:
	movl %r15d,0x0(%r14)
L_218525:
	movq $0xC8D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x1B0(%rbp)
	addq $0x20,%r12
	movl 0x0(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x10(%r15)
	movq $0x3347,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq %r14,0x1E0(%rbp)
	movq 0x1C8(%rbp),%r15
	movq %r15,0x1E8(%rbp)
	addq $0x1E0,%rbp
	leaq (L_218526+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_3
.p2align 0x4
L_468976:
	movq %r11,(localObjptr+0x0)(%rip)
	jmp L_218478
.p2align 0x4
L_468977:
	movq %r11,(localObjptr+0x0)(%rip)
	jmp L_218478
.p2align 0x4
L_468978:
L_218978:
	xorl %ecx,%ecx
	jmp L_218483
.p2align 0x4
L_468979:
L_218473:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_468981:
L_218997:
	movq (globalObjptr+0x75D0)(%rip),%r15
	movq %r15,0x1C0(%rbp)
	jmp L_218470
.p2align 0x4
L_468983:
L_218998:
	movq %r15,0x1A8(%rbp)
	movq $0x1,0x10(%rbp)
	jmp L_218472
.p2align 0x4
L_468984:
L_218999:
	movq 0x1E8(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x1B0(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x1F8(%rbp)
	movl $0x0,0x200(%rbp)
	movq 0x1C0(%rbp),%r15
	movq %r15,0x208(%rbp)
	addq $0x1F8,%rbp
	leaq (L_219000+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp new_25
.p2align 0x4
L_468987:
L_219007:
	movq (globalObjptr+0x7530)(%rip),%r15
	movq %r15,0x1E0(%rbp)
	jmp L_218460
.p2align 0x4
L_468990:
L_219010:
	movl $0x0,0x1F8(%rbp)
loop_2427:
	movl 0x1F8(%rbp),%r15d
	cmpl %r15d,0x4(%rbp)
	je L_468992
L_219011:
	movslq %r15d,%r14
	cmpq 0x1F0(%rbp),%r14
	jnb L_468991
L_219013:
	movq 0x1B0(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	movq %r13,0x210(%rbp)
	movq 0x1E8(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	movq %r13,0x208(%rbp)
	addq $0x208,%rbp
	leaq (not_56+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_1
.p2align 0x4
L_468991:
L_219012:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_468992:
L_219022:
	movq 0x1E0(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,%r15
	jmp L_218462
.p2align 0x4
L_468996:
L_219024:
	movq 0x1A8(%rbp),%r15
	cmpq $0x1,%r15
	je L_468997
L_219025:
	movq %r15,0x10(%rbp)
	movq $0x1,0x1A8(%rbp)
	jmp L_218464
.p2align 0x4
L_468997:
L_219026:
	movq $0x1,0x10(%rbp)
	movq $0x1,0x1A8(%rbp)
	jmp L_218472
.p2align 0x4
L_469000:
L_219035:
	movq (globalObjptr+0x75C8)(%rip),%r15
	movq %r15,0x1D0(%rbp)
	jmp L_218439
.p2align 0x4
L_469001:
L_219036:
	movq 0x1D8(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x1C0(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x1E8(%rbp)
	movq 0x10(%r13),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x1F0(%rbp)
	movq %r14,0x200(%rbp)
	movq 0x1D0(%rbp),%r15
	movq %r15,0x208(%rbp)
	addq $0x200,%rbp
	leaq (L_219037+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_1
.p2align 0x4
L_469002:
L_219049:
	movq (globalObjptr+0x75C0)(%rip),%r15
	movq %r15,0x10(%rbp)
	jmp L_218434
.p2align 0x4
.long 0x35C4
L_218980:
	addq $0xFFFFFFFFFFFFFE10,%rbp
	movq 0x1F0(%rbp),%r15
	movq %r15,0x1E8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218981
L_218994:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1F8,%rbp
	leaq (L_218995+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218995
.p2align 0x4
.long 0x35CB
L_218995:
	addq $0xFFFFFFFFFFFFFE08,%rbp
L_218981:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x1E8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq %r15,0x1F8(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x200(%rbp)
	addq $0x1F8,%rbp
	leaq (L_218982+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1183
.p2align 0x4
.long 0x1
L_218487:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_218488+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x355B
L_218526:
	addq $0xFFFFFFFFFFFFFE20,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218527
L_218973:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1E0,%rbp
	leaq (L_218974+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218974
.p2align 0x4
.long 0x35C3
L_218974:
	addq $0xFFFFFFFFFFFFFE20,%rbp
L_218527:
	movq $0x36E7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%r12
	movq 0x1B0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x50(%rbp),%r13
	movq %r13,0x10(%r15)
	movq 0x60(%rbp),%r13
	movq %r13,0x18(%r15)
	movq 0x68(%rbp),%r13
	movq %r13,0x20(%r15)
	movq %r14,0x28(%r15)
	movq 0x88(%rbp),%r14
	movq %r14,0x30(%r15)
	movq 0x1D0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x4(%rbp)
	movslq %r13d,%r11
	movq %r11,0x1C0(%rbp)
	cmpq %r14,%r11
	jne L_218423
L_218529:
	movq $0x71,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x50(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x8CF,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x68(%rbp)
	addq $0x18,%r12
	movq 0x8(%rbp),%r11
	movq %r11,0x0(%r13)
	movq %r14,0x8(%r13)
	movq $0x35D1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq %r14,0x0(%r13)
	movq %r14,0x8(%r13)
	movq %r13,0x1E0(%rbp)
	movq %r15,0x1E8(%rbp)
	addq $0x1E0,%rbp
	leaq (L_218530+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_0
.p2align 0x4
.long 0x35CC
L_219000:
	addq $0xFFFFFFFFFFFFFE08,%rbp
	movq 0x1F8(%rbp),%r15
	movq %r15,0x1F0(%rbp)
	movl 0x200(%rbp),%r15d
	movl %r15d,0x4(%rbp)
	movl 0x204(%rbp),%r15d
	movl %r15d,0x1F8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_219001
L_219002:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x208,%rbp
	leaq (L_219003+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219003
.p2align 0x4
.long 0x35CD
L_219003:
	addq $0xFFFFFFFFFFFFFDF8,%rbp
L_219001:
	movq $0xFB5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x4(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl 0x1F8(%rbp),%r14d
	movl %r14d,0x4(%r15)
	movq 0x1F0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1ECD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq 0x1E0(%rbp),%r15
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x1E8(%rbp),%r13
	movq %r14,0x0(%r15,%r13,8)
	incq %r13
	movq %r13,0x1E8(%rbp)
	jmp loop_2416
.p2align 0x4
.long 0x35CF
not_56:
	addq $0xFFFFFFFFFFFFFDF8,%rbp
	movl 0x208(%rbp),%r15d
	movl %r15d,0x1FC(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_219014
L_219020:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x208,%rbp
	leaq (L_219021+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219021
.p2align 0x4
.long 0x35D0
L_219021:
	addq $0xFFFFFFFFFFFFFDF8,%rbp
L_219014:
	movl 0x1FC(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_469008
L_219015:
	movq 0x1D8(%rbp),%r15
	cmpq $0x1,%r15
	je L_218453
L_219016:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x1D8(%rbp)
	movq %r14,0x1E0(%rbp)
	jmp L_218444
.p2align 0x4
L_469008:
L_219018:
	movl 0x1F8(%rbp),%r15d
	incl %r15d
	jo L_218479
L_219019:
	movl %r15d,0x1F8(%rbp)
	jmp loop_2427
.p2align 0x4
.long 0x35D2
L_219037:
	addq $0xFFFFFFFFFFFFFE00,%rbp
	movq 0x200(%rbp),%r15
	movq %r15,0x1F8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_219038
L_219047:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x208,%rbp
	leaq (L_219048+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219048
.p2align 0x4
.long 0x35D4
L_219048:
	addq $0xFFFFFFFFFFFFFDF8,%rbp
L_219038:
	movq 0x1F8(%rbp),%r15
	andq $0x1,%r15
	jnz L_469011
L_219039:
	movl $0x0,0x1F8(%rbp)
L_219040:
	movq 0x1F0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x210(%rbp)
	movq $0x3DB3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x1D0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x208(%rbp)
	addq $0x208,%rbp
	leaq (L_219041+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp remove_0
.p2align 0x4
L_469011:
L_219046:
	movq 0x1F8(%rbp),%r15
	shrq $0x1,%r15
	movl %r15d,%r14d
	movl %r14d,0x1F8(%rbp)
	jmp L_219040
.p2align 0x4
.long 0x35C5
L_218982:
	addq $0xFFFFFFFFFFFFFE08,%rbp
	movq 0x1F8(%rbp),%r15
	movq %r15,0x1F0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218983
L_218992:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x200,%rbp
	leaq (L_218993+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218993
.p2align 0x4
.long 0x35CA
L_218993:
	addq $0xFFFFFFFFFFFFFE00,%rbp
L_218983:
	movq $0x1147,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x1F8(%rbp)
	addq $0x18,%r12
	movq 0x1E0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x1F0(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x0(%r14),%r15
	movq %r15,0x200(%rbp)
	movq 0x38(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x228(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x208(%rbp)
	movq $0x11,0x218(%rbp)
	movq %r15,0x220(%rbp)
	addq $0x218,%rbp
	leaq (L_218984+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigRem_0
.p2align 0x4
.long 0x1
L_218488:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_218489+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x355C
L_218530:
	addq $0xFFFFFFFFFFFFFE20,%rbp
	movq 0x1C0(%rbp),%rdx
	cmpq $0x7FFFFFFF,%rdx
	ja L_218965
L_218531:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xF1,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1E0,%rbp
	leaq (L_218532+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218532
.p2align 0x4
.long 0x355D
L_218532:
	addq $0xFFFFFFFFFFFFFE20,%rbp
	xorq %r15,%r15
	movq %rax,%r14
.p2align 0x4,,0x7
loop_2418:
	cmpq 0x1C0(%rbp),%r15
	jnl L_469014
L_218971:
	movl $0x0,0x0(%r14,%r15,4)
	incq %r15
	jmp loop_2418
.p2align 0x4
L_469014:
L_218533:
	movq %r14,0x1F8(%rbp)
	movq 0x1A0(%rbp),%r15
	movq %r15,0x1E0(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x1E8(%rbp)
	movq 0x1D0(%rbp),%r15
	movq %r15,0x1F0(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x200(%rbp)
	addq $0x1E0,%rbp
	leaq (L_218534+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp visit_0
.p2align 0x4
.long 0x35D3
L_219041:
	addq $0xFFFFFFFFFFFFFDF8,%rbp
	movq 0x208(%rbp),%r14
	movq %r14,0x200(%rbp)
	movq 0x1F0(%rbp),%r13
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r14,0x0(%r13)
	movl 0x1F8(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_469016
L_219042:
	movl 0x4(%rbp),%ecx
	movq $0x1,%r15
L_219043:
	movl %ecx,0x4(%rbp)
	movq 0x10(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x1D8(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x1D8(%rbp)
	jmp loop_2414
.p2align 0x4
L_469016:
L_219044:
	movl 0x4(%rbp),%ecx
	incl %ecx
	jo L_218479
L_219045:
	movq 0x1E8(%rbp),%r15
	jmp L_219043
.p2align 0x4
.long 0x35C6
L_218984:
	addq $0xFFFFFFFFFFFFFDE8,%rbp
	movq 0x218(%rbp),%r15
	movq %r15,0x1E0(%rbp)
	cmpq $0x1,%r15
	jne L_469018
L_218986:
	movq 0x200(%rbp),%r15
	movq %r15,0x210(%rbp)
	movq 0x208(%rbp),%r15
	movq %r15,0x218(%rbp)
	movq $0x11,0x208(%rbp)
	addq $0x208,%rbp
	leaq (L_218987+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigQuot_0
.p2align 0x4
L_469018:
L_218948:
	movq (globalObjptr+0x1510)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4AF
L_218489:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0x10208)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_218490+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x355E
L_218534:
	addq $0xFFFFFFFFFFFFFE20,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218535
L_218969:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1E0,%rbp
	leaq (L_218970+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218970
.p2align 0x4
.long 0x35C2
L_218970:
	addq $0xFFFFFFFFFFFFFE20,%rbp
L_218535:
	movq $0x35CF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x1E0(%rbp)
	movq 0x1D0(%rbp),%r15
	movq %r15,0x1E8(%rbp)
	addq $0x1E0,%rbp
	leaq (L_218536+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_0
.p2align 0x4
.long 0x35C7
L_218987:
	addq $0xFFFFFFFFFFFFFDF8,%rbp
	movq 0x208(%rbp),%r15
	movq %r15,0x1E0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218988
L_218990:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x208,%rbp
	leaq (L_218991+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218991
.p2align 0x4
.long 0x35C9
L_218991:
	addq $0xFFFFFFFFFFFFFDF8,%rbp
L_218988:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x1E0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x1E8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x208(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x210(%rbp)
	addq $0x208,%rbp
	leaq (L_218989+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1183
.p2align 0x4
.long 0x5AF
L_218490:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_218491+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x355F
L_218536:
	addq $0xFFFFFFFFFFFFFE20,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218537
L_218967:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1E0,%rbp
	leaq (L_218968+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218968
.p2align 0x4
.long 0x3560
L_218968:
	addq $0xFFFFFFFFFFFFFE20,%rbp
L_218537:
	movq 0x1C8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	movq %r11,0x48(%rbp)
	movl %r13d,0x8(%rbp)
	cmpq %r14,%r11
	jne L_218423
L_218539:
	testq %r11,%r11
	jz L_469025
L_218540:
	cmpq $0x7FFFFFFF,%r11
	ja L_218965
L_218541:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218542
L_218962:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1E0,%rbp
	leaq (L_218963+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218963
.p2align 0x4
.long 0x3560
L_218963:
	addq $0xFFFFFFFFFFFFFE20,%rbp
L_218542:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x16A5,%rcx
	movq 0x48(%rbp),%rdx
	movq $0x10,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1E0,%rbp
	leaq (L_218543+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218543
.p2align 0x4
.long 0x3560
L_218543:
	addq $0xFFFFFFFFFFFFFE20,%rbp
	movq %rax,0x50(%rbp)
L_218544:
	movq $0x1,%r15
	movq $0x0,0x68(%rbp)
loop_2419:
	movq 0x68(%rbp),%r14
	cmpq 0x48(%rbp),%r14
	jnl L_469021
L_218941:
	movq %r15,0x1E0(%rbp)
	movl %r14d,%r15d
	movslq %r15d,%r14
	movq 0x1C8(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x88(%rbp)
	movq %r11,0x1E8(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x1F0(%rbp)
	addq $0x1E0,%rbp
	leaq (L_218942+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp align_0
.p2align 0x4
L_469021:
L_218545:
	movq 0x50(%rbp),%r15
	movq $0x8FF,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r10,%r13
	jne L_218423
L_218547:
	movq %r10,0x1E8(%rbp)
	movq $0x4093,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq %r15,0x0(%r13)
	movq %r13,0x1E0(%rbp)
	addq $0x1E0,%rbp
	leaq (L_218548+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldiP_0
.p2align 0x4
L_469025:
L_218966:
	movq (globalObjptr+0x75D8)(%rip),%r15
	movq %r15,0x50(%rbp)
	jmp L_218544
.p2align 0x4
.long 0x35C8
L_218989:
	addq $0xFFFFFFFFFFFFFDF8,%rbp
	movq 0x208(%rbp),%r15
	movq %r15,0x1E0(%rbp)
	movq 0x1C0(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x1D8(%rbp),%r13
	movq 0x1F8(%rbp),%r11
	movq %r11,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x1D8(%rbp)
	jmp loop_2417
.p2align 0x4
.long 0x51E
L_218491:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218492
L_218515:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_218516+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218516
.p2align 0x4
.long 0x4AE
L_218516:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_218492:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_218493:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_218479
L_218494:
	cmpq $0x1,%r14
	je L_469028
L_218495:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_218493
.p2align 0x4
L_469028:
L_218496:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218497
L_218513:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_218514+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218514
.p2align 0x4
.long 0x4E6
L_218514:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_218497:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_469029
L_218498:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
toString_322:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	addq $0x8,%rbp
	leaq (rev_322+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_469029:
L_218512:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_322
.p2align 0x4
.long 0x35B9
L_218942:
	addq $0xFFFFFFFFFFFFFE20,%rbp
	movq 0x1E0(%rbp),%r15
	movq %r15,0x1B0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218943
L_218960:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1E0,%rbp
	leaq (L_218961+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218961
.p2align 0x4
.long 0x35C1
L_218961:
	addq $0xFFFFFFFFFFFFFE20,%rbp
L_218943:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x1B0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq %r15,0x1E0(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x1E8(%rbp)
	addq $0x1E0,%rbp
	leaq (L_218944+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1183
.p2align 0x4
.long 0x355F
L_218548:
	addq $0xFFFFFFFFFFFFFE20,%rbp
	movq 0x1E0(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218549
L_218939:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1E0,%rbp
	leaq (L_218940+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218940
.p2align 0x4
.long 0x35B8
L_218940:
	addq $0xFFFFFFFFFFFFFE20,%rbp
L_218549:
	movq 0x90(%rbp),%r15
	movq 0xE8(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0xE0(%r15),%r13
	movq %r13,0x68(%rbp)
	movq 0xD0(%r15),%r13
	movq %r13,0x88(%rbp)
	movq 0xC8(%r15),%r13
	movq %r13,0x1B0(%rbp)
	movq 0xC0(%r15),%r13
	movq %r13,0x1D8(%rbp)
	movq 0xB8(%r15),%r13
	movq %r13,0x1E0(%rbp)
	movq 0xB0(%r15),%r13
	movq %r13,0x1E8(%rbp)
	movq 0xA8(%r15),%r13
	movq %r13,0x1F0(%rbp)
	movq 0x98(%r15),%r13
	movq %r13,0x1F8(%rbp)
	movq 0x90(%r15),%r13
	movq %r13,0x200(%rbp)
	movq 0x88(%r15),%r13
	movq %r13,0x208(%rbp)
	movq 0x80(%r15),%r13
	movq %r13,0x210(%rbp)
	movq 0x78(%r15),%r13
	movq %r13,0x218(%rbp)
	movq 0x70(%r15),%r13
	movq %r13,0x220(%rbp)
	movq 0x68(%r15),%r13
	movq %r13,0x228(%rbp)
	movq 0x60(%r15),%r13
	movq %r13,0x230(%rbp)
	movq 0x58(%r15),%r13
	movq %r13,0x238(%rbp)
	movq 0x50(%r15),%r13
	movq %r13,0x240(%rbp)
	movq 0x48(%r15),%r13
	movq %r13,0x248(%rbp)
	movq 0x40(%r15),%r13
	movq %r13,0x250(%rbp)
	movq 0x38(%r15),%r13
	movq %r13,0x258(%rbp)
	movq 0x30(%r15),%r13
	movq %r13,0x260(%rbp)
	movq 0x28(%r15),%r13
	movq %r13,0x268(%rbp)
	movq 0x20(%r15),%r13
	movq %r13,0x270(%rbp)
	movq 0x18(%r15),%r13
	movq %r13,0x278(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x280(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x288(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x290(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x298(%rbp)
	cmpq $0x1,%r15
	je L_469034
L_218550:
	movq (globalObjptr+0x10228)(%rip),%r15
	movq %r15,0x2A8(%rbp)
	addq $0x2A8,%rbp
	leaq (L_218551+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_469034:
L_218564:
	movq 0x88(%rbp),%r15
	movq 0x58(%r15),%r14
	movq %r14,0x90(%rbp)
	movq 0x48(%r15),%r14
	movq %r14,0x298(%rbp)
	movq 0x40(%r15),%r13
	movq %r13,0x2A0(%rbp)
	movq 0x38(%r15),%r13
	movq %r13,0x2A8(%rbp)
	movq 0x30(%r15),%r13
	movq %r13,0x2B0(%rbp)
	movq 0x28(%r15),%r13
	movq %r13,0x2B8(%rbp)
	movq 0x20(%r15),%r13
	movq %r13,0x2C0(%rbp)
	movq 0x18(%r15),%r13
	movq %r13,0x2C8(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x2D0(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x2D8(%rbp)
	movq 0x50(%r15),%r13
	movq 0x10(%r13),%r11
	movq 0x8(%r13),%r10
	movq 0x0(%r13),%r9
	movq 0x18(%r13),%r8
	movq 0x8(%r8),%rsp
	movq $0x3D61,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x60(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0xA3F,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x2E0(%rbp)
	movq %rsp,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r11,0x10(%r13)
	movq %r10,0x18(%r13)
	movq %r9,0x20(%r13)
	addq $0x30,%r12
	movq 0x0(%r14),%r15
	movq %r15,0x2E8(%rbp)
	cmpq $0x1,%r15
	je L_469035
L_218565:
	movq $0x4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x88(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x35E1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x2F8(%rbp)
	movq 0x1D0(%rbp),%r15
	movq %r15,0x300(%rbp)
	addq $0x2F8,%rbp
	leaq (L_218566+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_0
.p2align 0x4
L_469035:
L_218607:
	movq $0x71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x88(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x47B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x2A0(%rbp)
	addq $0x18,%r12
	movq 0x90(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq $0x71,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x2E8(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0xCC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x2F0(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0xD2F,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x2F8(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0x19D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x300(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0xD2B,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x20,%r12
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	movq 0x2E0(%rbp),%r14
	movq %r14,0x10(%r11)
	movq 0x2A8(%rbp),%r14
	movq 0x8(%r14),%r13
	movq $0xD2D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x308(%rbp)
	movq %r13,0x0(%r14)
	movq %r11,0x8(%r14)
	addq $0x30,%r12
	movq 0x2C0(%rbp),%r13
	movq %r13,0x10(%r14)
	movq 0x2B8(%rbp),%r13
	movq %r13,0x18(%r14)
	movq 0x2B0(%rbp),%r13
	movq %r13,0x20(%r14)
	movq $0x35BF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x28,%r12
	movq %r15,0x0(%r14)
	movq %r15,0x8(%r14)
	movq 0x2C8(%rbp),%r15
	movq %r15,0x10(%r14)
	movq 0x2D0(%rbp),%r15
	movq %r15,0x18(%r14)
	movq %r14,0x318(%rbp)
	movq 0x1D0(%rbp),%r15
	movq %r15,0x320(%rbp)
	addq $0x318,%rbp
	leaq (L_218608+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_0
.p2align 0x4
.long 0x1
rev_322:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_469039
L_218499:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_218500:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_469038
.p2align 0x4,,0x7
L_218501:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_469037
L_218502:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_218500
.p2align 0x4
L_469037:
L_218504:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_218505+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_469038:
L_218509:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_218510+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218510
.p2align 0x4
.long 0x45B
L_218510:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_218501
.p2align 0x4
L_469039:
L_218511:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_218504
.p2align 0x4
.long 0x35BA
L_218944:
	addq $0xFFFFFFFFFFFFFE20,%rbp
	movq 0x1E0(%rbp),%r15
	movq %r15,0x1D8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218945
L_218958:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1E8,%rbp
	leaq (L_218959+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218959
.p2align 0x4
.long 0x35C0
L_218959:
	addq $0xFFFFFFFFFFFFFE18,%rbp
L_218945:
	movq $0x1147,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x1E0(%rbp)
	addq $0x18,%r12
	movq 0x88(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x1D8(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x0(%r14),%r15
	movq %r15,0x1E8(%rbp)
	movq 0x38(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x210(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x1F0(%rbp)
	movq $0x11,0x200(%rbp)
	movq %r15,0x208(%rbp)
	addq $0x200,%rbp
	leaq (L_218946+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigRem_0
.p2align 0x4
.long 0x3561
L_218551:
	addq $0xFFFFFFFFFFFFFD58,%rbp
	movq 0x2A8(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq 0x1B8(%rbp),%r15
	movq %r15,0x2A8(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x2B0(%rbp)
	addq $0x2A8,%rbp
	leaq (L_218552+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
.long 0x3564
L_218566:
	addq $0xFFFFFFFFFFFFFD08,%rbp
	movq (globalObjptr+0x10230)(%rip),%r15
	movq %r15,0x2F8(%rbp)
	addq $0x2F8,%rbp
	leaq (L_218567+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x356A
L_218608:
	addq $0xFFFFFFFFFFFFFCE8,%rbp
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x95F,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x318,%rbp
	leaq (L_218609+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218609
.p2align 0x4
.long 0x356B
L_218609:
	addq $0xFFFFFFFFFFFFFCE8,%rbp
	movq %rax,0x2A8(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2420:
	cmpq $0x1,%r15
	jnl L_469041
L_218909:
	movq 0x2A8(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x2C8(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_2420
.p2align 0x4
L_469041:
L_218610:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218611
L_218907:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x318,%rbp
	leaq (L_218908+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218908
.p2align 0x4
.long 0x35AD
L_218908:
	addq $0xFFFFFFFFFFFFFCE8,%rbp
L_218611:
	movq $0xA33,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x2A8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x4B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0xA35,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x20,%r12
	movq 0x2C8(%rbp),%r15
	movq %r15,0x10(%r13)
	movq $0xA37,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movb $0x1,%r14b
	movzbl %r14b,%r11d
	movl %r11d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0xA39,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0xA3B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0xA3D,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r14,0x10(%r11)
	movq %r13,0x18(%r11)
	addq $0x28,%r12
	movq (globalObjptr+0xCE00)(%rip),%r15
	movq %r15,0x8(%r11)
	movq $0x334F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x8(%r15)
	addq $0x18,%r12
	movq 0x308(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x318(%rbp)
	movq 0x1C8(%rbp),%r15
	movq %r15,0x320(%rbp)
	addq $0x318,%rbp
	leaq (L_218612+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_3
.p2align 0x4
.long 0x1
L_218505:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218506
L_218507:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_218508+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218508
.p2align 0x4
.long 0x451
L_218508:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_218506:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x35BB
L_218946:
	addq $0xFFFFFFFFFFFFFE00,%rbp
	movq 0x200(%rbp),%r15
	movq %r15,0x88(%rbp)
	cmpq $0x1,%r15
	jne L_218948
L_218949:
	movq 0x1E8(%rbp),%r15
	movq %r15,0x1F8(%rbp)
	movq 0x1F0(%rbp),%r15
	movq %r15,0x200(%rbp)
	movq $0x11,0x1F0(%rbp)
	addq $0x1F0,%rbp
	leaq (L_218950+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigQuot_0
.p2align 0x4
.long 0x3562
L_218552:
	addq $0xFFFFFFFFFFFFFD58,%rbp
	movq 0x2A8(%rbp),%r15
	movq %r15,0x2A0(%rbp)
	movq %r15,0x2A8(%rbp)
	addq $0x2A8,%rbp
	leaq (L_218553+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3564
L_218567:
	addq $0xFFFFFFFFFFFFFD08,%rbp
	movq 0x2F8(%rbp),%r15
	movq %r15,0x2F0(%rbp)
	movq 0x1B8(%rbp),%r15
	movq %r15,0x300(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0x308(%rbp)
	addq $0x300,%rbp
	leaq (L_218568+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
.long 0x356C
L_218612:
	addq $0xFFFFFFFFFFFFFCE8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218613
L_218905:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x318,%rbp
	leaq (L_218906+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218906
.p2align 0x4
.long 0x35AC
L_218906:
	addq $0xFFFFFFFFFFFFFCE8,%rbp
L_218613:
	movq $0x35E3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x40,%r12
	movq 0x2F8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x2F0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x2D8(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x2E8(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x2E0(%rbp),%r14
	movq %r14,0x20(%r15)
	movq 0x308(%rbp),%r14
	movq %r14,0x28(%r15)
	movq 0x2A0(%rbp),%r14
	movq %r14,0x30(%r15)
	movq %r15,0x310(%rbp)
	movq 0x1D0(%rbp),%r15
	movq %r15,0x318(%rbp)
	addq $0x310,%rbp
	leaq (L_218614+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_0
.p2align 0x4
.long 0x35BC
L_218950:
	addq $0xFFFFFFFFFFFFFE10,%rbp
	movq 0x1F0(%rbp),%r15
	movq %r15,0x88(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218951
L_218956:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1F0,%rbp
	leaq (L_218957+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218957
.p2align 0x4
.long 0x35BF
L_218957:
	addq $0xFFFFFFFFFFFFFE10,%rbp
L_218951:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x88(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x1B0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x1F0(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x1F8(%rbp)
	addq $0x1F0,%rbp
	leaq (L_218952+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1183
.p2align 0x4
.long 0x3562
L_218553:
	addq $0xFFFFFFFFFFFFFD58,%rbp
	movq 0x2A8(%rbp),%r15
	movq %r15,0x2A0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218554
L_218936:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2B0,%rbp
	leaq (L_218937+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218937
.p2align 0x4
.long 0x359F
L_218937:
	addq $0xFFFFFFFFFFFFFD50,%rbp
L_218554:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x2A0(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x2A8(%rbp)
	addq $0x18,%r12
	movq 0x90(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_218555:
	addl 0x0(%r15),%ecx
	movl %ecx,0xC(%rbp)
	jo L_218479
L_218556:
	cmpq $0x1,%r14
	je L_469047
L_218557:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_218555
.p2align 0x4
L_469047:
L_218558:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218559
L_218934:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2B8,%rbp
	leaq (L_218935+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218935
.p2align 0x4
.long 0x35B7
L_218935:
	addq $0xFFFFFFFFFFFFFD48,%rbp
L_218559:
	movl 0xC(%rbp),%ecx
	testl %ecx,%ecx
	jz L_469048
L_218560:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x2A8(%rbp),%r14
	movq %r14,0x0(%r15)
x_770:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x2B0(%rbp)
	movq $0x3E37,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x298(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x2B8(%rbp)
	movq (globalObjptr+0x9D8)(%rip),%r15
	movq %r15,0x2A8(%rbp)
	addq $0x2A8,%rbp
	leaq (L_218561+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3780
.p2align 0x4
L_469048:
L_218933:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp x_770
.p2align 0x4
.long 0x3565
L_218568:
	addq $0xFFFFFFFFFFFFFD00,%rbp
	movq 0x300(%rbp),%r15
	movq %r15,0x2F8(%rbp)
	movq %r15,0x300(%rbp)
	addq $0x300,%rbp
	leaq (L_218569+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x356D
L_218614:
	addq $0xFFFFFFFFFFFFFCF0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218615
L_218903:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x310,%rbp
	leaq (L_218904+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218904
.p2align 0x4
.long 0x35AB
L_218904:
	addq $0xFFFFFFFFFFFFFCF0,%rbp
L_218615:
	movq 0x2D8(%rbp),%r14
	movq 0x30(%r14),%r15
	movq 0x28(%r14),%r13
	movq 0x20(%r14),%r11
	movq 0x38(%r14),%r10
	movq 0x8(%r10),%r9
	movq $0x3D55,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x2E0(%rbp),%r10
	movq %r10,0x0(%r14)
	movq 0x2E8(%rbp),%r10
	movq %r10,0x8(%r14)
	movq $0xCDF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r10,0x2A8(%rbp)
	movq %r9,0x0(%r10)
	movq %r14,0x8(%r10)
	movq %r15,0x10(%r10)
	movq %r13,0x18(%r10)
	movq %r11,0x20(%r10)
	addq $0x30,%r12
	movq 0x300(%rbp),%r14
	movq 0x0(%r14),%r15
	cmpq $0x1,%r15
	je L_469052
L_218616:
	movq 0x8(%r15),%r14
	movq %r14,0x2B0(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,%r15
L_218617:
	movq %r15,0x308(%rbp)
	movq 0x2A8(%rbp),%r15
	movq %r15,0x310(%rbp)
	addq $0x308,%rbp
	leaq (L_218618+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1323
.p2align 0x4
L_469052:
L_218622:
	movq $0x334D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x2E8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x308(%rbp)
	movq 0x1C8(%rbp),%r15
	movq %r15,0x310(%rbp)
	addq $0x308,%rbp
	leaq (L_218623+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_3
.p2align 0x4
.long 0x35BD
L_218952:
	addq $0xFFFFFFFFFFFFFE10,%rbp
	movq 0x1F0(%rbp),%r15
	movq %r15,0x88(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218953
L_218954:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1F0,%rbp
	leaq (L_218955+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218955
.p2align 0x4
.long 0x35BE
L_218955:
	addq $0xFFFFFFFFFFFFFE10,%rbp
L_218953:
	movq 0x50(%rbp),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq 0x68(%rbp),%r13
	movq 0x1E0(%rbp),%r11
	movq %r11,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x68(%rbp)
	movq 0x88(%rbp),%r15
	jmp loop_2419
.p2align 0x4
.long 0x3561
L_218561:
	addq $0xFFFFFFFFFFFFFD58,%rbp
	movq 0x2A8(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x2A0(%rbp)
	movq 0x298(%rbp),%r15
	movq %r15,0x2A8(%rbp)
	addq $0x2A0,%rbp
	leaq (L_218562+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x3565
L_218569:
	addq $0xFFFFFFFFFFFFFD00,%rbp
	movq 0x300(%rbp),%r15
	movq %r15,0x2F8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218570
L_218928:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x308,%rbp
	leaq (L_218929+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218929
.p2align 0x4
.long 0x35B5
L_218929:
	addq $0xFFFFFFFFFFFFFCF8,%rbp
L_218570:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x2F8(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x300(%rbp)
	addq $0x18,%r12
	movq 0x2F0(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_218571:
	addl 0x0(%r15),%ecx
	movl %ecx,0xC(%rbp)
	jo L_218479
L_218572:
	cmpq $0x1,%r14
	je L_469055
L_218573:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_218571
.p2align 0x4
L_469055:
L_218574:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218575
L_218926:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x310,%rbp
	leaq (L_218927+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218927
.p2align 0x4
.long 0x35B4
L_218927:
	addq $0xFFFFFFFFFFFFFCF0,%rbp
L_218575:
	movl 0xC(%rbp),%ecx
	testl %ecx,%ecx
	jz L_469056
L_218576:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x300(%rbp),%r14
	movq %r14,0x0(%r15)
L_218577:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x2F0(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x10238)(%rip),%r15
	movq %r15,0x300(%rbp)
	addq $0x300,%rbp
	leaq (L_218578+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_469056:
L_218925:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_218577
.p2align 0x4
.long 0x356E
L_218618:
	addq $0xFFFFFFFFFFFFFCF8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218619
L_218900:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x308,%rbp
	leaq (L_218901+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218901
.p2align 0x4
.long 0x35AA
L_218901:
	addq $0xFFFFFFFFFFFFFCF8,%rbp
L_218619:
	movq 0x2B0(%rbp),%r14
	cmpq $0x1,%r14
	je L_218622
L_218620:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x2B0(%rbp)
	jmp L_218617
.p2align 0x4
.long 0x356F
L_218623:
	addq $0xFFFFFFFFFFFFFCF8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218624
L_218898:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x308,%rbp
	leaq (L_218899+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218899
.p2align 0x4
.long 0x35A9
L_218899:
	addq $0xFFFFFFFFFFFFFCF8,%rbp
L_218624:
	movq $0x35BD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x2E8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x308(%rbp)
	movq 0x1D0(%rbp),%r15
	movq %r15,0x310(%rbp)
	addq $0x308,%rbp
	leaq (L_218625+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_0
.p2align 0x4
.long 0x3563
L_218562:
	addq $0xFFFFFFFFFFFFFD60,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218564
L_218931:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2A0,%rbp
	leaq (L_218932+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218932
.p2align 0x4
.long 0x35B6
L_218932:
	addq $0xFFFFFFFFFFFFFD60,%rbp
	jmp L_218564
.p2align 0x4
.long 0x3565
L_218578:
	addq $0xFFFFFFFFFFFFFD00,%rbp
	movq 0x300(%rbp),%r15
	movq %r15,0x2F8(%rbp)
	movl 0x4(%rbp),%r15d
	movl %r15d,0x308(%rbp)
	movq 0x2A0(%rbp),%r15
	movq %r15,0x310(%rbp)
	addq $0x308,%rbp
	leaq (L_218579+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0x3570
L_218625:
	addq $0xFFFFFFFFFFFFFCF8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218626
L_218896:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x308,%rbp
	leaq (L_218897+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218897
.p2align 0x4
.long 0x35A8
L_218897:
	addq $0xFFFFFFFFFFFFFCF8,%rbp
L_218626:
	movq 0x2F0(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_469107
L_218627:
	movq 0x8(%r14),%r15
	movq %r15,0x2A8(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x2B0(%rbp)
	movq $0x1,0x2B8(%rbp)
.p2align 0x4,,0x7
L_218628:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_469106
.p2align 0x4,,0x7
L_218629:
	movq $0x263D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x2B0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x2B8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x2A8(%rbp),%r14
	cmpq $0x1,%r14
	je L_469064
L_218630:
	movq %r15,0x2B8(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x2A8(%rbp)
	movq %r15,0x2B0(%rbp)
	jmp L_218628
.p2align 0x4
L_469064:
L_218631:
	movq 0x2B8(%rbp),%r15
	movq %r15,0x2A8(%rbp)
	movq $0x1,0x2B8(%rbp)
	movq $0x1,0x2C0(%rbp)
.p2align 0x4,,0x7
L_218632:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_469105
.p2align 0x4,,0x7
L_218633:
	movq 0x2B0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x131C,%r14
	je L_469100
L_218888:
	movq 0x0(%r15),%r14
	movq $0x2637,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x2C0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x2A8(%rbp),%r14
	cmpq $0x1,%r14
	je L_469065
L_218889:
	movq %r15,0x2C0(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x2A8(%rbp)
	movq %r15,0x2B0(%rbp)
	jmp L_218632
.p2align 0x4
L_469065:
L_218890:
	movq %r15,0x2A8(%rbp)
	movq 0x2B8(%rbp),%r15
loop_2421:
	cmpq $0x1,%r15
	je L_218658
L_218640:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
.p2align 0x4,,0x7
L_218641:
	movq 0x8(%r14),%r13
	movq %r13,0x2B0(%rbp)
	movq 0x0(%r14),%r13
	movq 0x0(%r13),%r11
	movq 0x0(%r11),%r10
	cmpq $0x1,%r10
	je loop_2422
L_218642:
	movq %r15,0x2C8(%rbp)
	movq 0x8(%r10),%r15
	movq %r15,0x2B8(%rbp)
	movq 0x0(%r10),%r15
	movq %r15,0x2C0(%rbp)
L_218643:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_469098
.p2align 0x4,,0x7
L_218644:
	movq 0x2C0(%rbp),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x2D0(%rbp)
	movq 0x2A8(%rbp),%r13
	cmpq $0x1,%r13
	je L_218651
L_218645:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
.p2align 0x4,,0x7
L_218646:
	movq 0x2C0(%rbp),%r13
	movq 0x0(%r13),%r11
	cmpq %r11,0x0(%r15)
	je L_469095
L_218647:
	cmpq $0x1,%r14
	je L_469066
L_218648:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_218646
.p2align 0x4
L_469066:
L_218649:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_469094
.p2align 0x4,,0x7
L_218651:
	movq 0x2D0(%rbp),%r15
	cmpq $0x1,0x8(%r15)
	je L_469092
L_218652:
	movq 0x2B8(%rbp),%r15
	cmpq $0x1,%r15
	je L_469067
L_218653:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x2B8(%rbp)
	movq %r14,0x2C0(%rbp)
	jmp L_218643
.p2align 0x4
L_469067:
L_218654:
	movq 0x2C8(%rbp),%r14
	xchgq %r14,%r15
loop_2422:
	cmpq $0x1,%r15
	je L_469068
L_218655:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_218641
.p2align 0x4
L_469068:
L_218656:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218658
L_218869:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x308,%rbp
	leaq (L_218870+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218870
.p2align 0x4
.long 0x35A3
L_218870:
	addq $0xFFFFFFFFFFFFFCF8,%rbp
L_218658:
	movq 0x2F8(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_469090
L_218659:
	movq 0x8(%r14),%r15
	movq %r15,0x2A8(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x2B0(%rbp)
	movq $0x1,0x2B8(%rbp)
.p2align 0x4,,0x7
L_218660:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_469089
.p2align 0x4,,0x7
L_218661:
	movq $0x2643,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x2B0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x2B8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x2A8(%rbp),%r14
	cmpq $0x1,%r14
	je L_469069
L_218662:
	movq %r15,0x2B8(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x2A8(%rbp)
	movq %r15,0x2B0(%rbp)
	jmp L_218660
.p2align 0x4
L_469069:
L_218663:
	movq 0x2B8(%rbp),%r15
	movq %r15,0x2A8(%rbp)
	movq $0x1,0x2B8(%rbp)
	movq $0x1,0x2C0(%rbp)
.p2align 0x4,,0x7
L_218664:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_469088
.p2align 0x4,,0x7
L_218665:
	movq 0x2B0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x131F,%r14
	je L_469083
L_218861:
	movq 0x0(%r15),%r14
	movq $0x2637,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x2C0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x2A8(%rbp),%r14
	cmpq $0x1,%r14
	je L_469070
L_218862:
	movq %r15,0x2C0(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x2A8(%rbp)
	movq %r15,0x2B0(%rbp)
	jmp L_218664
.p2align 0x4
L_469070:
L_218863:
	movq %r15,0x2A8(%rbp)
	movq 0x2B8(%rbp),%r15
loop_2423:
	cmpq $0x1,%r15
	je L_218690
L_218672:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
.p2align 0x4,,0x7
L_218673:
	movq 0x0(%r14),%r13
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je loop_2424
L_218674:
	movq %r15,0x2C0(%rbp)
	movq 0x8(%r11),%r15
	movq %r15,0x2B0(%rbp)
	movq 0x0(%r11),%r15
	movq %r15,0x2B8(%rbp)
L_218675:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_469081
.p2align 0x4,,0x7
L_218676:
	movq 0x2B8(%rbp),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x2C8(%rbp)
	movq 0x2A8(%rbp),%r13
	cmpq $0x1,%r13
	je L_218683
L_218677:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
.p2align 0x4,,0x7
L_218678:
	movq 0x2B8(%rbp),%r13
	movq 0x0(%r15),%r11
	cmpq %r11,0x0(%r13)
	je L_469078
L_218679:
	cmpq $0x1,%r14
	je L_469071
L_218680:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_218678
.p2align 0x4
L_469071:
L_218681:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_469077
.p2align 0x4,,0x7
L_218683:
	movq 0x2C8(%rbp),%r15
	movq 0x0(%r15),%r14
	movb 0x0(%r14),%r15b
	testb %r15b,%r15b
	jz L_469073
L_218844:
	movb $0x0,0x0(%r14)
	movq $0x2645,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x2B8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x2C0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x2B0(%rbp),%r14
	cmpq $0x1,%r14
	je L_469072
L_218845:
	movq %r15,0x2C0(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x2B0(%rbp)
	movq %r15,0x2B8(%rbp)
	jmp L_218675
.p2align 0x4
L_469072:
L_218846:
	movq 0x2C0(%rbp),%r15
	movq 0x2B8(%rbp),%r13
	xchgq %r13,%r14
	jmp L_218673
.p2align 0x4
L_469073:
L_218684:
	movq 0x2B0(%rbp),%r15
	cmpq $0x1,%r15
	je L_469074
L_218685:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x2B0(%rbp)
	movq %r14,0x2B8(%rbp)
	jmp L_218675
.p2align 0x4
L_469074:
L_218686:
	movq 0x2C0(%rbp),%r14
	xchgq %r14,%r15
loop_2424:
	cmpq $0x1,%r15
	je L_469075
L_218687:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_218673
.p2align 0x4
L_469075:
L_218688:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218690
L_218842:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2B0,%rbp
	leaq (L_218843+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218843
.p2align 0x4
.long 0x359F
L_218843:
	addq $0xFFFFFFFFFFFFFD50,%rbp
L_218690:
	movq $0x71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x2A8(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0xC83,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x2B0(%rbp)
	addq $0x20,%r12
	movq 0x88(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x2A0(%rbp),%r11
	movq %r11,0x8(%r14)
	movq %r15,0x10(%r14)
	movq $0x35E5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x20,%r12
	movq %r15,0x0(%r14)
	movq %r11,0x8(%r14)
	movq %r13,0x10(%r14)
	movq %r14,0x2C0(%rbp)
	movq 0x1D0(%rbp),%r15
	movq %r15,0x2C8(%rbp)
	addq $0x2C0,%rbp
	leaq (L_218691+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_0
.p2align 0x4
L_469077:
L_218847:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2D8,%rbp
	leaq (L_218848+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218848
.p2align 0x4
.long 0x35A0
L_218848:
	addq $0xFFFFFFFFFFFFFD28,%rbp
	jmp L_218683
.p2align 0x4
L_469078:
L_218849:
	movq 0x2B0(%rbp),%r15
	cmpq $0x1,%r15
	je L_469079
L_218850:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x2B0(%rbp)
	movq %r14,0x2B8(%rbp)
	jmp L_218675
.p2align 0x4
L_469079:
L_218851:
	movq 0x2C0(%rbp),%r14
	xchgq %r14,%r15
	jmp loop_2424
.p2align 0x4
L_469081:
L_218853:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2D0,%rbp
	leaq (L_218854+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218854
.p2align 0x4
.long 0x35A1
L_218854:
	addq $0xFFFFFFFFFFFFFD30,%rbp
	jmp L_218676
.p2align 0x4
L_469083:
L_218666:
	movq 0x0(%r15),%r14
	movq 0x10(%r14),%r15
	movq 0x2C0(%rbp),%r13
	cmpq $0x1,%r13
	je L_218669
L_218667:
	movq 0x0(%r13),%r11
	movq 0x0(%r14),%r10
	cmpq %r10,0x0(%r11)
	jne L_469085
L_218857:
	movq 0x2A8(%rbp),%r13
	cmpq $0x1,%r13
	je L_469084
L_218858:
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x2A8(%rbp)
	movq %r15,0x2B0(%rbp)
	jmp L_218664
.p2align 0x4
L_469084:
L_218859:
	movq 0x2B8(%rbp),%r15
	movq 0x2C0(%rbp),%r14
	movq %r14,0x2A8(%rbp)
	jmp loop_2423
.p2align 0x4
L_469085:
L_218669:
	movq 0x0(%r15),%r13
	movb $0x0,0x0(%r13)
	movq $0x2645,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x2B8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x2A8(%rbp),%r14
	cmpq $0x1,%r14
	je L_469086
L_218670:
	movq %r15,0x2B8(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x2A8(%rbp)
	movq %r15,0x2B0(%rbp)
	jmp L_218664
.p2align 0x4
L_469086:
L_218671:
	movq 0x2C0(%rbp),%r14
	movq %r14,0x2A8(%rbp)
	jmp loop_2423
.p2align 0x4
L_469088:
L_218864:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2D0,%rbp
	leaq (L_218865+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218865
.p2align 0x4
.long 0x35A1
L_218865:
	addq $0xFFFFFFFFFFFFFD30,%rbp
	jmp L_218665
.p2align 0x4
L_469089:
L_218866:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2C8,%rbp
	leaq (L_218867+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218867
.p2align 0x4
.long 0x35A2
L_218867:
	addq $0xFFFFFFFFFFFFFD38,%rbp
	jmp L_218661
.p2align 0x4
L_469090:
L_218868:
	movq $0x1,%r15
	movq $0x1,0x2A8(%rbp)
	jmp loop_2423
.p2align 0x4
L_469092:
L_218871:
	movq 0x2D0(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x2B0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1145,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x2C0(%rbp),%r13
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	movq $0x2647,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x2C8(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x2B8(%rbp),%r13
	cmpq $0x1,%r13
	je L_469093
L_218872:
	movq %r14,0x2C8(%rbp)
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movq %r13,0x2B8(%rbp)
	movq %r14,0x2C0(%rbp)
	jmp L_218643
.p2align 0x4
L_469093:
L_218873:
	movq 0x2C8(%rbp),%r11
	movq %r15,%r14
	movq %r11,%r15
	jmp L_218641
.p2align 0x4
L_469094:
L_218874:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x308,%rbp
	leaq (L_218875+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218875
.p2align 0x4
.long 0x35A4
L_218875:
	addq $0xFFFFFFFFFFFFFCF8,%rbp
	jmp L_218651
.p2align 0x4
L_469095:
L_218876:
	movq 0x2B8(%rbp),%r15
	cmpq $0x1,%r15
	je L_469096
L_218877:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x2B8(%rbp)
	movq %r14,0x2C0(%rbp)
	jmp L_218643
.p2align 0x4
L_469096:
L_218878:
	movq 0x2C8(%rbp),%r14
	xchgq %r14,%r15
	jmp loop_2422
.p2align 0x4
L_469098:
L_218880:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x308,%rbp
	leaq (L_218881+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218881
.p2align 0x4
.long 0x35A5
L_218881:
	addq $0xFFFFFFFFFFFFFCF8,%rbp
	jmp L_218644
.p2align 0x4
L_469100:
L_218634:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq $0x1145,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	movq 0x10(%r14),%r11
	movq 0x2C0(%rbp),%r10
	cmpq $0x1,%r10
	je L_469104
L_218635:
	movq 0x0(%r10),%r9
	movq 0x0(%r14),%r8
	cmpq %r8,0x0(%r9)
	jne L_469102
L_218884:
	movq 0x2A8(%rbp),%r14
	cmpq $0x1,%r14
	je L_469101
L_218885:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq %r14,0x2A8(%rbp)
	movq %r13,0x2B0(%rbp)
	jmp L_218632
.p2align 0x4
L_469101:
L_218886:
	movq 0x2B8(%rbp),%r15
	movq 0x2C0(%rbp),%r14
	movq %r14,0x2A8(%rbp)
	jmp loop_2421
.p2align 0x4
L_469102:
	movq %r13,%r14
	movq %r15,%r13
	movq %r11,%r15
L_218637:
	movq %r15,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r14,0x8(%r15)
	movq $0x2647,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq 0x2B8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x2A8(%rbp),%r14
	cmpq $0x1,%r14
	je L_469103
L_218638:
	movq %r15,0x2B8(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x2A8(%rbp)
	movq %r15,0x2B0(%rbp)
	jmp L_218632
.p2align 0x4
L_469103:
L_218639:
	movq 0x2C0(%rbp),%r14
	movq %r14,0x2A8(%rbp)
	jmp loop_2421
.p2align 0x4
L_469104:
	movq %r13,%r14
	movq %r15,%r13
	movq %r11,%r15
	jmp L_218637
.p2align 0x4
L_469105:
L_218891:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x308,%rbp
	leaq (L_218892+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218892
.p2align 0x4
.long 0x35A6
L_218892:
	addq $0xFFFFFFFFFFFFFCF8,%rbp
	jmp L_218633
.p2align 0x4
L_469106:
L_218893:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x308,%rbp
	leaq (L_218894+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218894
.p2align 0x4
.long 0x35A7
L_218894:
	addq $0xFFFFFFFFFFFFFCF8,%rbp
	jmp L_218629
.p2align 0x4
L_469107:
L_218895:
	movq $0x1,%r15
	movq $0x1,0x2A8(%rbp)
	jmp loop_2421
.p2align 0x4
.long 0x3566
L_218579:
	addq $0xFFFFFFFFFFFFFCF8,%rbp
	movq 0x308(%rbp),%r15
	movq %r15,0x300(%rbp)
	movq %r15,0x308(%rbp)
	addq $0x308,%rbp
	leaq (L_218580+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3571
L_218691:
	addq $0xFFFFFFFFFFFFFD40,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218692
L_218840:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2C0,%rbp
	leaq (L_218841+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218841
.p2align 0x4
.long 0x359E
L_218841:
	addq $0xFFFFFFFFFFFFFD40,%rbp
L_218692:
	movq 0x298(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_469109
L_218693:
	movq $0x35BB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x20,%r12
	movq 0x90(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x2B0(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0x2C0(%rbp)
	movq 0x1D0(%rbp),%r15
	movq %r15,0x2C8(%rbp)
	addq $0x2C0,%rbp
	leaq (L_218694+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_0
.p2align 0x4
L_469109:
L_218696:
	movq $0x71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x88(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x90(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x3361,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq %r14,0x2C0(%rbp)
	movq 0x1C8(%rbp),%r15
	movq %r15,0x2C8(%rbp)
	addq $0x2C0,%rbp
	leaq (L_218697+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_3
.p2align 0x4
.long 0x3566
L_218580:
	addq $0xFFFFFFFFFFFFFCF8,%rbp
	movq 0x308(%rbp),%r15
	movq %r15,0x300(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218581
L_218923:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x310,%rbp
	leaq (L_218924+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218924
.p2align 0x4
.long 0x35B3
L_218924:
	addq $0xFFFFFFFFFFFFFCF0,%rbp
L_218581:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x300(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x308(%rbp)
	addq $0x18,%r12
	movq 0x2F8(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_218582:
	addl 0x0(%r15),%ecx
	movl %ecx,0x4(%rbp)
	jo L_218479
L_218583:
	cmpq $0x1,%r14
	je L_469111
L_218584:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_218582
.p2align 0x4
L_469111:
L_218585:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218586
L_218921:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x318,%rbp
	leaq (L_218922+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218922
.p2align 0x4
.long 0x35B2
L_218922:
	addq $0xFFFFFFFFFFFFFCE8,%rbp
L_218586:
	movl 0x4(%rbp),%ecx
	testl %ecx,%ecx
	jz L_469112
L_218587:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x308(%rbp),%r14
	movq %r14,0x0(%r15)
L_218588:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x2F8(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x10240)(%rip),%r15
	movq %r15,0x308(%rbp)
	addq $0x308,%rbp
	leaq (L_218589+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_469112:
L_218920:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_218588
.p2align 0x4
.long 0x3572
L_218694:
	addq $0xFFFFFFFFFFFFFD40,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218696
L_218837:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2C0,%rbp
	leaq (L_218838+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218838
.p2align 0x4
.long 0x359D
L_218838:
	addq $0xFFFFFFFFFFFFFD40,%rbp
	jmp L_218696
.p2align 0x4
.long 0x3573
L_218697:
	addq $0xFFFFFFFFFFFFFD40,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218698
L_218835:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2C0,%rbp
	leaq (L_218836+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218836
.p2align 0x4
.long 0x359C
L_218836:
	addq $0xFFFFFFFFFFFFFD40,%rbp
L_218698:
	movq $0x35E7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x90(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x88(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x2B0(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0x2C0(%rbp)
	movq 0x1D0(%rbp),%r15
	movq %r15,0x2C8(%rbp)
	addq $0x2C0,%rbp
	leaq (L_218699+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_0
.p2align 0x4
.long 0x3566
L_218589:
	addq $0xFFFFFFFFFFFFFCF8,%rbp
	movq 0x308(%rbp),%r15
	movq %r15,0x300(%rbp)
	movq 0x88(%rbp),%r15
	movl 0x0(%r15),%r14d
	movl %r14d,0x310(%rbp)
	movq 0x2A0(%rbp),%r15
	movq %r15,0x318(%rbp)
	addq $0x310,%rbp
	leaq (L_218590+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0x3573
L_218699:
	addq $0xFFFFFFFFFFFFFD40,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218700
L_218833:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2C0,%rbp
	leaq (L_218834+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218834
.p2align 0x4
.long 0x359C
L_218834:
	addq $0xFFFFFFFFFFFFFD40,%rbp
L_218700:
	movq $0xC87,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x38,%r12
	movq 0x88(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x208(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x200(%rbp),%r13
	movq %r13,0x10(%r15)
	movq 0x1F8(%rbp),%r13
	movq %r13,0x18(%r15)
	movq %r14,0x20(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x28(%r15)
	movq 0x210(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x298(%rbp)
	movq $0xC89,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x2A0(%rbp)
	movq %r15,0x8(%r14)
	addq $0x30,%r12
	movq %r13,0x0(%r14)
	movq 0x1B0(%rbp),%r15
	movq %r15,0x10(%r14)
	movq 0x1D8(%rbp),%r15
	movq %r15,0x18(%r14)
	movq 0x1E0(%rbp),%r15
	movq %r15,0x20(%r14)
	movq 0x48(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_218423
L_218702:
	cmpl 0x8(%rbp),%r13d
	je L_469118
L_218703:
	movq (globalObjptr+0x1E40)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_469118:
L_218704:
	movl 0x8(%rbp),%ecx
	decl %ecx
	jo L_218479
L_218705:
	movq $0x1,0x8(%rbp)
loop_2425:
	cmpl $0x0,%ecx
	jl L_469121
L_218706:
	movl %ecx,%r15d
	decl %r15d
	movl %r15d,0x4(%rbp)
	movslq %ecx,%r15
	movq 0x48(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x88(%rbp)
	movq 0x1C8(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r11
	movq 0x0(%r11),%r10
	movq %r10,0x210(%rbp)
	movq 0x8(%r11),%r10
L_218707:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_218708
L_218709:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xF59,%r15
	jne L_469119
L_218710:
	movq %r10,0x2C8(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x2B8(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x2D0(%rbp)
	addq $0x2C8,%rbp
	leaq (L_218711+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1315
.p2align 0x4
L_469119:
L_218708:
	movq (globalObjptr+0x51C0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_469121:
L_218717:
	movq 0x8(%rbp),%r15
	movq %r15,0x2C0(%rbp)
	movq 0x220(%rbp),%r15
	movq %r15,0x2C8(%rbp)
	addq $0x2C0,%rbp
	leaq (L_218718+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp new_30
.p2align 0x4
.long 0x3567
L_218590:
	addq $0xFFFFFFFFFFFFFCF0,%rbp
	movq 0x310(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq %r15,0x310(%rbp)
	addq $0x310,%rbp
	leaq (L_218591+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3574
L_218711:
	addq $0xFFFFFFFFFFFFFD38,%rbp
	movq 0x2C8(%rbp),%r15
	movq %r15,0x2C0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218712
L_218715:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2D0,%rbp
	leaq (L_218716+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218716
.p2align 0x4
.long 0x3575
L_218716:
	addq $0xFFFFFFFFFFFFFD30,%rbp
L_218712:
	movq 0x2C0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x10DC,%r15
	jne L_469125
L_218714:
	movq $0x2141,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x88(%rbp),%r13
	movq %r13,0x0(%r15)
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	movq $0x1147,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x210(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x2B8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x262F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x8(%rbp),%r15
	movq %r15,0x8(%r14)
	movq %r14,0x8(%rbp)
	movl 0x4(%rbp),%ecx
	jmp loop_2425
.p2align 0x4
L_469125:
L_218713:
	movq $0x9,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3576
L_218718:
	addq $0xFFFFFFFFFFFFFD40,%rbp
	movq 0x2C0(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218719
L_218831:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2C0,%rbp
	leaq (L_218832+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218832
.p2align 0x4
.long 0x359B
L_218832:
	addq $0xFFFFFFFFFFFFFD40,%rbp
L_218719:
	movq 0x90(%rbp),%r15
	movl 0x0(%r15),%r14d
	testl %r14d,%r14d
	jnz L_469127
L_218720:
	movq $0x1,0x8(%rbp)
L_218721:
	movq $0xC85,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x40,%r12
	movq 0x298(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x1B0(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x1D8(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x1E0(%rbp),%r14
	movq %r14,0x20(%r15)
	movq 0x1E8(%rbp),%r14
	movq %r14,0x28(%r15)
	movq 0x1F0(%rbp),%r14
	movq %r14,0x30(%r15)
	movq $0x71,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x47B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x48(%rbp)
	addq $0x18,%r12
	movq 0x68(%rbp),%r11
	movq %r11,0x0(%r13)
	movq %r14,0x8(%r13)
	movq $0x89,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq $0x36EB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x88(%rbp)
	movq %r13,0x0(%r14)
	movq %r15,0x78(%r14)
	addq $0xB0,%r12
	movq 0x2A0(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x248(%rbp),%r15
	movq %r15,0x10(%r14)
	movq 0x250(%rbp),%r15
	movq %r15,0x18(%r14)
	movq 0x258(%rbp),%r15
	movq %r15,0x20(%r14)
	movq 0x260(%rbp),%r15
	movq %r15,0x28(%r14)
	movq 0x268(%rbp),%r15
	movq %r15,0x30(%r14)
	movq 0x270(%rbp),%r15
	movq %r15,0x38(%r14)
	movq 0x278(%rbp),%r15
	movq %r15,0x40(%r14)
	movq 0x280(%rbp),%r15
	movq %r15,0x48(%r14)
	movq 0x220(%rbp),%r15
	movq %r15,0x50(%r14)
	movq 0x288(%rbp),%r15
	movq %r15,0x58(%r14)
	movq 0x208(%rbp),%r15
	movq %r15,0x60(%r14)
	movq 0x200(%rbp),%r15
	movq %r15,0x68(%r14)
	movq 0x228(%rbp),%r15
	movq %r15,0x70(%r14)
	movq 0x238(%rbp),%r15
	movq %r15,0x80(%r14)
	movq 0x230(%rbp),%r15
	movq %r15,0x88(%r14)
	movq 0x8(%rbp),%r15
	movq %r15,0x90(%r14)
	movq 0x2A8(%rbp),%r15
	movq %r15,0x98(%r14)
	movq 0x2B0(%rbp),%r15
	movq %r15,0xA0(%r14)
	movq $0x437B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x290(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x71,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x90(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x8CF,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x1F8(%rbp)
	movq %r15,0x0(%r13)
	addq $0x18,%r12
	movq %r14,0x8(%r13)
	movq $0x35D1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r14,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r15,0x250(%rbp)
	movq 0x1D0(%rbp),%r15
	movq %r15,0x258(%rbp)
	addq $0x250,%rbp
	leaq (L_218722+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_0
.p2align 0x4
L_469127:
L_218801:
	movq 0x228(%rbp),%r15
	movq %r15,0x2C0(%rbp)
	addq $0x2C0,%rbp
	leaq (L_218802+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x3567
L_218591:
	addq $0xFFFFFFFFFFFFFCF0,%rbp
	movq 0x310(%rbp),%r15
	movq %r15,0x88(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218592
L_218918:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x310,%rbp
	leaq (L_218919+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218919
.p2align 0x4
.long 0x35B1
L_218919:
	addq $0xFFFFFFFFFFFFFCF0,%rbp
L_218592:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x88(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x2A0(%rbp)
	addq $0x18,%r12
	movq 0x300(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_218593:
	addl 0x0(%r15),%ecx
	movl %ecx,0x4(%rbp)
	jo L_218479
L_218594:
	cmpq $0x1,%r14
	je L_469129
L_218595:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_218593
.p2align 0x4
L_469129:
L_218596:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218597
L_218916:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x308,%rbp
	leaq (L_218917+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218917
.p2align 0x4
.long 0x35B0
L_218917:
	addq $0xFFFFFFFFFFFFFCF8,%rbp
L_218597:
	movl 0x4(%rbp),%ecx
	testl %ecx,%ecx
	jz L_469130
L_218598:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x2A0(%rbp),%r14
	movq %r14,0x0(%r15)
L_218599:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x2F8(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x2F0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x2F8(%rbp)
	addq $0x2F8,%rbp
	leaq (L_218600+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3782
.p2align 0x4
L_469130:
L_218915:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_218599
.p2align 0x4
.long 0x3577
L_218722:
	addq $0xFFFFFFFFFFFFFDB0,%rbp
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xF1,%rcx
	movq 0x1C0(%rbp),%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x250,%rbp
	leaq (L_218723+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218723
.p2align 0x4
.long 0x3578
L_218723:
	addq $0xFFFFFFFFFFFFFDB0,%rbp
	xorq %r15,%r15
	movq %rax,%r14
.p2align 0x4,,0x7
loop_2426:
	cmpq 0x1C0(%rbp),%r15
	jnl L_469134
L_218800:
	movl $0x0,0x0(%r14,%r15,4)
	incq %r15
	jmp loop_2426
.p2align 0x4
L_469134:
L_218724:
	movq %r14,0x268(%rbp)
	movq 0x1A0(%rbp),%r15
	movq %r15,0x250(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x258(%rbp)
	movq 0x1D0(%rbp),%r15
	movq %r15,0x260(%rbp)
	movq 0x1F8(%rbp),%r15
	movq %r15,0x270(%rbp)
	addq $0x250,%rbp
	leaq (L_218725+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp visit_0
.p2align 0x4
.long 0x3594
L_218802:
	addq $0xFFFFFFFFFFFFFD40,%rbp
	movl 0x2C0(%rbp),%r15d
	movl %r15d,0x4(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218803
L_218829:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2C0,%rbp
	leaq (L_218830+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218830
.p2align 0x4
.long 0x359A
L_218830:
	addq $0xFFFFFFFFFFFFFD40,%rbp
L_218803:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x4(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xEC10)(%rip),%r15
	movq %r15,0x18(%r13)
	movq $0x1EA9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x48(%rbp)
	movq %r13,0x0(%r15)
	addq $0x10,%r12
	movq 0x230(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r13),%r11
	movq 0x8(%r13),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_469135
L_218804:
	movq %r14,0x2C8(%rbp)
	movq 0x0(%r9),%r15
	movq %r15,0x2C0(%rbp)
	addq $0x2C0,%rbp
	leaq (L_218805+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_469135:
L_218824:
	movq %r11,0x8(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_218825+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x3568
L_218600:
	addq $0xFFFFFFFFFFFFFD08,%rbp
	movl 0x2F8(%rbp),%r15d
	movl %r15d,0x4(%rbp)
	movq 0x300(%rbp),%r15
	movq %r15,0x88(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218601
L_218913:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2F8,%rbp
	leaq (L_218914+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218914
.p2align 0x4
.long 0x35AF
L_218914:
	addq $0xFFFFFFFFFFFFFD08,%rbp
L_218601:
	movl 0x4(%rbp),%ecx
	testl %ecx,%ecx
	jz L_469138
L_218602:
	decl %ecx
	jo L_218479
L_218603:
	movq $0x1B67,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl $0x1,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x88(%rbp),%r14
	movq %r14,0x8(%r15)
x_771:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x300(%rbp)
	movq $0x3E37,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x2E8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x308(%rbp)
	movq (globalObjptr+0x9D8)(%rip),%r15
	movq %r15,0x2F8(%rbp)
	addq $0x2F8,%rbp
	leaq (L_218604+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3780
.p2align 0x4
L_469138:
L_218912:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp x_771
.p2align 0x4
.long 0x3579
L_218725:
	addq $0xFFFFFFFFFFFFFDB0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218726
L_218798:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x250,%rbp
	leaq (L_218799+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218799
.p2align 0x4
.long 0x3593
L_218799:
	addq $0xFFFFFFFFFFFFFDB0,%rbp
L_218726:
	movq $0x35CF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x90(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x250(%rbp)
	movq 0x1D0(%rbp),%r15
	movq %r15,0x258(%rbp)
	addq $0x250,%rbp
	leaq (L_218727+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_0
.p2align 0x4
.long 0x3595
L_218805:
	addq $0xFFFFFFFFFFFFFD40,%rbp
	movq 0x2C0(%rbp),%r15
	movq %r15,0x88(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218806
L_218822:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2C0,%rbp
	leaq (L_218823+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218823
.p2align 0x4
.long 0x3599
L_218823:
	addq $0xFFFFFFFFFFFFFD40,%rbp
L_218806:
	movq $0x493,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x88(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x2C0(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x2C8(%rbp)
	movq 0x1F8(%rbp),%r15
	movq %r15,0x2D0(%rbp)
	addq $0x2C0,%rbp
	leaq (L_218807+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_102
.p2align 0x4
.long 0x1
L_218825:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (bug_590+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x3568
L_218604:
	addq $0xFFFFFFFFFFFFFD08,%rbp
	movq 0x2F8(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x2F0(%rbp)
	movq 0x2E8(%rbp),%r15
	movq %r15,0x2F8(%rbp)
	addq $0x2F0,%rbp
	leaq (L_218605+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x357A
L_218727:
	addq $0xFFFFFFFFFFFFFDB0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218728
L_218796:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x250,%rbp
	leaq (L_218797+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218797
.p2align 0x4
.long 0x3592
L_218797:
	addq $0xFFFFFFFFFFFFFDB0,%rbp
L_218728:
	movq 0x50(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x88(%rbp)
	cmpq $0x1,%r14
	je L_469142
L_218729:
	movq $0xD3F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x50(%rbp)
	addq $0x28,%r12
	movq %r14,0x0(%r15)
	movq 0x240(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x18(%r15)
	movq (globalObjptr+0x10248)(%rip),%r15
	movq %r15,0x250(%rbp)
	addq $0x250,%rbp
	leaq (L_218730+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_469142:
L_218764:
	movq $0x35A5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x88,%r12
	movq 0xA8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xB0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xB8(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0xC0(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0xC8(%rbp),%r14
	movq %r14,0x20(%r15)
	movq 0xD0(%rbp),%r14
	movq %r14,0x28(%r15)
	movq 0xD8(%rbp),%r14
	movq %r14,0x30(%r15)
	movq 0xE0(%rbp),%r14
	movq %r14,0x38(%r15)
	movq 0xE8(%rbp),%r14
	movq %r14,0x40(%r15)
	movq 0xF0(%rbp),%r14
	movq %r14,0x48(%r15)
	movq 0xF8(%rbp),%r14
	movq %r14,0x50(%r15)
	movq 0x100(%rbp),%r14
	movq %r14,0x58(%r15)
	movq 0x108(%rbp),%r14
	movq %r14,0x60(%r15)
	movq 0x110(%rbp),%r14
	movq %r14,0x68(%r15)
	movq 0x118(%rbp),%r14
	movq %r14,0x70(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x78(%r15)
	movq %r15,0x1E0(%rbp)
	movq 0x1D0(%rbp),%r15
	movq %r15,0x1E8(%rbp)
	addq $0x1E0,%rbp
	leaq (L_218765+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_0
.p2align 0x4
.long 0x3596
L_218807:
	addq $0xFFFFFFFFFFFFFD40,%rbp
	movq 0x2C0(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x2C8(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x238(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r13),%r11
	movq 0x8(%r13),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_469144
L_218808:
	movq %r14,0x2C8(%rbp)
	movq 0x0(%r9),%r15
	movq %r15,0x2C0(%rbp)
	addq $0x2C0,%rbp
	leaq (L_218809+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_469144:
L_218817:
	movq %r11,0x8(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_218818+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x1
bug_590:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218826
L_218827:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_218828+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218828
.p2align 0x4
.long 0x451
L_218828:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_218826:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3569
L_218605:
	addq $0xFFFFFFFFFFFFFD10,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218607
L_218910:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2F0,%rbp
	leaq (L_218911+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218911
.p2align 0x4
.long 0x35AE
L_218911:
	addq $0xFFFFFFFFFFFFFD10,%rbp
	jmp L_218607
.p2align 0x4
.long 0x357B
L_218730:
	addq $0xFFFFFFFFFFFFFDB0,%rbp
	movq 0x250(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq 0x1B8(%rbp),%r15
	movq %r15,0x250(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x258(%rbp)
	addq $0x250,%rbp
	leaq (L_218731+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
.long 0x3585
L_218765:
	addq $0xFFFFFFFFFFFFFE20,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218766
L_218770:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1E0,%rbp
	leaq (L_218771+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218771
.p2align 0x4
.long 0x3587
L_218771:
	addq $0xFFFFFFFFFFFFFE20,%rbp
L_218766:
	movq $0xD13,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0xA0,%r12
	movq 0x178(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x170(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x18(%rbp),%r11
	movq %r11,0x10(%r15)
	movq 0x168(%rbp),%r11
	movq %r11,0x18(%r15)
	movq 0x10(%rbp),%r11
	movq %r11,0x20(%r15)
	movq 0x160(%rbp),%r10
	movq %r10,0x28(%r15)
	movq 0x158(%rbp),%r10
	movq %r10,0x30(%r15)
	movq 0x150(%rbp),%r10
	movq %r10,0x38(%r15)
	movq 0x148(%rbp),%r10
	movq %r10,0x40(%r15)
	movq 0x140(%rbp),%r10
	movq %r10,0x48(%r15)
	movq 0x1A8(%rbp),%r9
	movq %r9,0x50(%r15)
	movq 0x138(%rbp),%r8
	movq %r8,0x58(%r15)
	movq 0x38(%rbp),%rsp
	movq %rsp,0x60(%r15)
	movq 0x30(%rbp),%rsi
	movq %rsi,0x68(%r15)
	movq 0x28(%rbp),%rdi
	movq %rdi,0x70(%r15)
	movq 0x130(%rbp),%rdx
	movq %rdx,0x78(%r15)
	movq 0x48(%rbp),%rdx
	movq %rdx,0x80(%r15)
	movq 0x128(%rbp),%rcx
	movq %rcx,0x88(%r15)
	movq 0x120(%rbp),%rbx
	movq %rbx,0x90(%r15)
	movq 0x180(%rbp),%rbx
	movq 0x8(%rbx),%rax
	movq $0xD19,0x0(%r12)
	movq %r12,%rbx
	addq $0x8,%rbx
	movq %r15,0x58(%rbx)
	movq %rax,0x60(%rbx)
	addq $0xE8,%r12
	movq 0x198(%rbp),%r15
	movq %r15,0x0(%rbx)
	movq 0xD0(%rbp),%r15
	movq %r15,0x8(%rbx)
	movq %r10,0x10(%rbx)
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbx)
	movq 0x58(%rbp),%r15
	movq %r15,0x20(%rbx)
	movq %r8,0x28(%rbx)
	movq %rcx,0x30(%rbx)
	movq %r14,0x38(%rbx)
	movq %rsp,0x40(%rbx)
	movq %rsi,0x48(%rbx)
	movq %rdi,0x50(%rbx)
	movq 0xA0(%rbp),%r15
	movq %r15,0x68(%rbx)
	movq 0x98(%rbp),%r15
	movq %r15,0x70(%rbx)
	movq 0x70(%rbp),%r15
	movq %r15,0x78(%rbx)
	movq 0x78(%rbp),%r15
	movq %r15,0x80(%rbx)
	movq 0x80(%rbp),%r15
	movq %r15,0x88(%rbx)
	movq 0x190(%rbp),%r15
	movq %r15,0x90(%rbx)
	movq 0x188(%rbp),%r15
	movq %r15,0x98(%rbx)
	movq 0x8(%rbp),%r15
	movq %r15,0xA0(%rbx)
	movq %r13,0xA8(%rbx)
	movq 0x40(%rbp),%r15
	movq %r15,0xB0(%rbx)
	movq %r9,0xB8(%rbx)
	movq 0x1B8(%rbp),%r15
	movq %r15,0xC0(%rbx)
	movq %r11,0xC8(%rbx)
	movq %rdx,0xD0(%rbx)
	movq 0x1A0(%rbp),%r15
	movq %r15,0xD8(%rbx)
	movq $0x35FD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %rbx,0x0(%r15)
	movq %r15,0x1E0(%rbp)
	addq $0x10,%r12
	movq 0x1D0(%rbp),%r15
	movq %r15,0x1E8(%rbp)
	addq $0x1E0,%rbp
	leaq (L_218767+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_0
.p2align 0x4
.long 0x3595
L_218809:
	addq $0xFFFFFFFFFFFFFD40,%rbp
	movq 0x2C0(%rbp),%r15
	movq %r15,0x88(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218810
L_218815:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2C0,%rbp
	leaq (L_218816+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218816
.p2align 0x4
.long 0x3599
L_218816:
	addq $0xFFFFFFFFFFFFFD40,%rbp
L_218810:
	movq $0x493,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x88(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x3,0x8(%r15)
	movq %r15,0x2C0(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x2C8(%rbp)
	movq 0x1F8(%rbp),%r15
	movq %r15,0x2D0(%rbp)
	addq $0x2C0,%rbp
	leaq (L_218811+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_102
.p2align 0x4
.long 0x1
L_218818:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (bug_589+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x357C
L_218731:
	addq $0xFFFFFFFFFFFFFDB0,%rbp
	movq 0x250(%rbp),%r15
	movq %r15,0x1B0(%rbp)
	movq %r15,0x250(%rbp)
	addq $0x250,%rbp
	leaq (L_218732+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3586
L_218767:
	addq $0xFFFFFFFFFFFFFE20,%rbp
	movl 0x0(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_469149
L_218768:
	movq $0x1,0x0(%rbp)
	movq 0x1D0(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp foreachi_0
.p2align 0x4
L_469149:
L_218769:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3597
L_218811:
	addq $0xFFFFFFFFFFFFFD40,%rbp
	movq 0x2C0(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x2C8(%rbp),%r15
	movq %r15,0x88(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218812
L_218813:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2C0,%rbp
	leaq (L_218814+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218814
.p2align 0x4
.long 0x3598
L_218814:
	addq $0xFFFFFFFFFFFFFD40,%rbp
L_218812:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x8(%rbp)
	jmp L_218721
.p2align 0x4
.long 0x1
bug_589:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218819
L_218820:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_218821+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218821
.p2align 0x4
.long 0x451
L_218821:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_218819:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x357C
L_218732:
	addq $0xFFFFFFFFFFFFFDB0,%rbp
	movq 0x250(%rbp),%r15
	movq %r15,0x1B0(%rbp)
	movq (globalObjptr+0x10250)(%rip),%r15
	movq %r15,0x250(%rbp)
	addq $0x250,%rbp
	leaq (L_218733+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x357D
L_218733:
	addq $0xFFFFFFFFFFFFFDB0,%rbp
	movq 0x250(%rbp),%r15
	movq %r15,0x1C0(%rbp)
	cmpq $0x1,0x8(%rbp)
	je L_469152
L_218734:
	movq (globalObjptr+0xDF50)(%rip),%r15
	movq %r15,0x250(%rbp)
	addq $0x250,%rbp
	leaq (L_218735+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_469152:
L_218790:
	movq (globalObjptr+0xDF58)(%rip),%r15
	movq %r15,0x250(%rbp)
	addq $0x250,%rbp
	leaq (L_218791+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x357E
L_218735:
	addq $0xFFFFFFFFFFFFFDB0,%rbp
	movq 0x250(%rbp),%r15
	movq %r15,0x1D8(%rbp)
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x1E0(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x250(%rbp)
	movq 0x218(%rbp),%r15
	movq %r15,0x258(%rbp)
	addq $0x250,%rbp
	leaq (L_218736+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1197
.p2align 0x4
.long 0x3590
L_218791:
	addq $0xFFFFFFFFFFFFFDB0,%rbp
	movq 0x250(%rbp),%r15
	movq %r15,0x1D8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218792
L_218793:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x250,%rbp
	leaq (L_218794+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218794
.p2align 0x4
.long 0x3591
L_218794:
	addq $0xFFFFFFFFFFFFFDB0,%rbp
L_218792:
	movq 0x1D8(%rbp),%r15
L_218750:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x1C0(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x1B0(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x1D8(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x90(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r14,%r15
	movq %r11,%r14
.p2align 0x4,,0x7
L_218751:
	addl 0x0(%r14),%ecx
	movl %ecx,0x4(%rbp)
	jo L_218479
L_218752:
	cmpq $0x1,%r15
	je L_469153
L_218753:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_218751
.p2align 0x4
L_469153:
L_218754:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218755
L_218779:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x250,%rbp
	leaq (L_218780+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218780
.p2align 0x4
.long 0x358B
L_218780:
	addq $0xFFFFFFFFFFFFFDB0,%rbp
L_218755:
	movl 0x4(%rbp),%ecx
	testl %ecx,%ecx
	jz L_469154
L_218756:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x1D8(%rbp),%r14
	movq %r14,0x0(%r15)
x_772:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x258(%rbp)
	movq $0x3E37,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x88(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x260(%rbp)
	movq (globalObjptr+0x9D8)(%rip),%r15
	movq %r15,0x250(%rbp)
	addq $0x250,%rbp
	leaq (L_218757+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3780
.p2align 0x4
L_469154:
L_218778:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp x_772
.p2align 0x4
.long 0x357F
L_218736:
	addq $0xFFFFFFFFFFFFFDB0,%rbp
	movq 0x250(%rbp),%r15
	movq %r15,0x1E8(%rbp)
	movq %r15,0x250(%rbp)
	addq $0x250,%rbp
	leaq (L_218737+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3582
L_218757:
	addq $0xFFFFFFFFFFFFFDB0,%rbp
	movq 0x250(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x250(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x258(%rbp)
	addq $0x250,%rbp
	leaq (L_218758+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x357F
L_218737:
	addq $0xFFFFFFFFFFFFFDB0,%rbp
	movq 0x250(%rbp),%r15
	movq %r15,0x1E8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218738
L_218788:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x250,%rbp
	leaq (L_218789+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218789
.p2align 0x4
.long 0x358F
L_218789:
	addq $0xFFFFFFFFFFFFFDB0,%rbp
L_218738:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x1F0(%rbp)
	addq $0x18,%r12
	movq 0x1E8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xDE20)(%rip),%r14
	movq %r14,0x8(%r15)
	movq 0x1E0(%rbp),%r15
	movq %r15,0x250(%rbp)
	movq 0x218(%rbp),%r15
	movq %r15,0x258(%rbp)
	addq $0x250,%rbp
	leaq (L_218739+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1197
.p2align 0x4
.long 0x3582
L_218758:
	addq $0xFFFFFFFFFFFFFDB0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218759
L_218776:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x250,%rbp
	leaq (L_218777+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218777
.p2align 0x4
.long 0x358A
L_218777:
	addq $0xFFFFFFFFFFFFFDB0,%rbp
L_218759:
	movq $0x3349,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x28,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x240(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x88(%rbp),%r14
	movq %r14,0x18(%r15)
	movq %r15,0x250(%rbp)
	movq 0x1C8(%rbp),%r15
	movq %r15,0x258(%rbp)
	addq $0x250,%rbp
	leaq (L_218760+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_3
.p2align 0x4
.long 0x3580
L_218739:
	addq $0xFFFFFFFFFFFFFDB0,%rbp
	movq 0x250(%rbp),%r15
	movq %r15,0x1E0(%rbp)
	movq %r15,0x250(%rbp)
	addq $0x250,%rbp
	leaq (L_218740+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3583
L_218760:
	addq $0xFFFFFFFFFFFFFDB0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218761
L_218774:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x250,%rbp
	leaq (L_218775+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218775
.p2align 0x4
.long 0x3589
L_218775:
	addq $0xFFFFFFFFFFFFFDB0,%rbp
L_218761:
	movq $0x35B9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x38,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r14,0x8(%r15)
	movq 0x240(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x88(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x20(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x28(%r15)
	movq %r15,0x1E0(%rbp)
	movq 0x1D0(%rbp),%r15
	movq %r15,0x1E8(%rbp)
	addq $0x1E0,%rbp
	leaq (L_218762+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_0
.p2align 0x4
.long 0x3580
L_218740:
	addq $0xFFFFFFFFFFFFFDB0,%rbp
	movq 0x250(%rbp),%r15
	movq %r15,0x1E0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218741
L_218786:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x250,%rbp
	leaq (L_218787+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218787
.p2align 0x4
.long 0x358E
L_218787:
	addq $0xFFFFFFFFFFFFFDB0,%rbp
L_218741:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x1E0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xECF8)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x1F0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x250(%rbp)
	addq $0x250,%rbp
	leaq (L_218742+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp record_3
.p2align 0x4
.long 0x3584
L_218762:
	addq $0xFFFFFFFFFFFFFE20,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218764
L_218772:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1E0,%rbp
	leaq (L_218773+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218773
.p2align 0x4
.long 0x3588
L_218773:
	addq $0xFFFFFFFFFFFFFE20,%rbp
	jmp L_218764
.p2align 0x4
.long 0x3581
L_218742:
	addq $0xFFFFFFFFFFFFFDB0,%rbp
	movq 0x250(%rbp),%r15
	movq %r15,0x1E0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218743
L_218784:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x250,%rbp
	leaq (L_218785+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218785
.p2align 0x4
.long 0x358D
L_218785:
	addq $0xFFFFFFFFFFFFFDB0,%rbp
L_218743:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x1E0(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x1E8(%rbp)
	addq $0x18,%r12
	movq 0x1D8(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_218744:
	addl 0x0(%r15),%ecx
	movl %ecx,0x4(%rbp)
	jo L_218479
L_218745:
	cmpq $0x1,%r14
	je L_469163
L_218746:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_218744
.p2align 0x4
L_469163:
L_218747:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_218748
L_218782:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x250,%rbp
	leaq (L_218783+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_218783
.p2align 0x4
.long 0x358C
L_218783:
	addq $0xFFFFFFFFFFFFFDB0,%rbp
L_218748:
	movl 0x4(%rbp),%r15d
	testl %r15d,%r15d
	jz L_469164
L_218749:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x1E8(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,%r15
	jmp L_218750
.p2align 0x4
L_469164:
L_218781:
	movq (globalObjptr+0x9D0)(%rip),%r14
	movq %r14,%r15
	jmp L_218750
.text
.p2align 0x4
.globl foreach_7
.hidden foreach_7
foreach_7:
L_219056:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x18(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_219057
L_219698:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_219699+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219699
.p2align 0x4
.long 0x45C
L_219699:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_219057:
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x20(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_219059
L_219060:
	cmpl $0x0,%r13d
	jl L_219188
L_219061:
	movl $0x0,0x24(%rbp)
.p2align 0x4,,0x7
loop_2429:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_469295
.p2align 0x4,,0x7
L_219062:
	movl 0x24(%rbp),%r15d
	cmpl 0x20(%rbp),%r15d
	jnl L_469294
L_219064:
	movslq %r15d,%r14
	movq 0x8(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	movq %r13,0x28(%rbp)
	movq 0x0(%rbp),%r15
	cmpq $0x1,%r15
	je L_469279
	cmpq $0x2,%r15
	je L_469278
	cmpq $0x3,%r15
	je L_469277
	cmpq $0x5,%r15
	je L_469276
	cmpq $0x6,%r15
	je L_469275
L_219065:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%rax
	shrq $0x1,%rax
	subq $0x1935,%rax
	cmpq $0xD,%rax
	ja L_469168
	leaq jumpTable_660(%rip),%rbx
	jmp *(%rbx,%rax,8)
.data
.p2align 0x4
jumpTable_660:
.quad L_469274,L_469273,L_469265,L_469259,L_469244,L_469224,L_469223,L_469211,L_469208,L_469199,L_469198,L_469190,L_469182,L_469169
.text
.p2align 0x4
L_469168:
L_219066:
	movq 0x0(%rbp),%r15
	movq 0x90(%r15),%r14
	movq 0x88(%r15),%r13
	movq 0x80(%r15),%r11
	movq 0x78(%r15),%r10
	movq 0x70(%r15),%r9
	movq 0x68(%r15),%r8
	movq 0x60(%r15),%rsp
	movq 0x58(%r15),%rsi
	movq 0x50(%r15),%rdi
	movq 0x48(%r15),%rdx
	movq 0x40(%r15),%rcx
	movq 0x38(%r15),%rbx
	movq 0x30(%r15),%rax
	movq %rax,(localObjptr+0x60)(%rip)
	movq 0x28(%r15),%rax
	movq %rax,(localObjptr+0x68)(%rip)
	movq 0x20(%r15),%rax
	movq %rax,(localObjptr+0x70)(%rip)
	movq 0x18(%r15),%rax
	movq %rax,(localObjptr+0x78)(%rip)
	movq 0x10(%r15),%rax
	movq %rax,(localObjptr+0x80)(%rip)
	movq 0x8(%r15),%rax
	movq %rax,(localObjptr+0x88)(%rip)
	movq 0x0(%r15),%rax
	movq $0x3071,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	movq %r11,0x10(%r15)
	movq %r10,0x18(%r15)
	movq %r9,0x20(%r15)
	movq %r8,0x28(%r15)
	movq %rsp,0x30(%r15)
	movq %rsi,0x38(%r15)
	movq %rdi,0x40(%r15)
	movq %rdx,0x48(%r15)
	movq %rcx,0x50(%r15)
	movq %rbx,0x58(%r15)
	movq (localObjptr+0x60)(%rip),%r14
	movq %r14,0x60(%r15)
	movq (localObjptr+0x68)(%rip),%r14
	movq %r14,0x68(%r15)
	movq (localObjptr+0x70)(%rip),%r14
	movq %r14,0x70(%r15)
	movq (localObjptr+0x78)(%rip),%r14
	movq %r14,0x78(%r15)
	movq (localObjptr+0x80)(%rip),%r14
	movq %r14,0x80(%r15)
	movq (localObjptr+0x88)(%rip),%r14
	movq %r14,0x88(%r15)
	addq $0xA0,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x90(%r15)
	movq %r15,0x38(%rbp)
	movq $0x3051,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %rax,0x8(%r15)
	addq $0x18,%r12
	movq %r14,0x0(%r15)
	movq %r15,0x30(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0xED00)(%rip),%r15
	movq %r15,0x40(%rbp)
	addq $0x30,%rbp
	leaq (L_219067+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp check_1
.p2align 0x4
L_469169:
L_219637:
	movq 0x0(%rbp),%r11
	movq 0x8(%r11),%r14
	movq 0x0(%r11),%r10
	movq %r10,0x30(%rbp)
	movq 0x28(%rbp),%r11
	movq 0x28(%r11),%r10
	movq 0x10(%r10),%r9
	movq %r9,0x38(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_469181
L_219638:
	movq %r15,0x0(%r11)
	movq 0x0(%r9),%r11
	cmpq $0x1,%r11
	je L_469180
L_219639:
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r11
	xorl %ecx,%ecx
	movq %r11,%r15
.p2align 0x4,,0x7
L_219641:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_469179
L_219654:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xDA3,%r11
	jne L_469178
L_219655:
	cmpq %r14,0x0(%r13)
	movq %r14,(localObjptr+0x0)(%rip)
	je L_469175
L_219642:
	incl %ecx
	movl %ecx,0x40(%rbp)
	jo L_469174
L_219643:
	cmpq $0x1,%r15
	je L_469170
L_219644:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x0)(%rip),%r14
	jmp L_219641
.p2align 0x4
L_469170:
L_219645:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_469173
.p2align 0x4,,0x7
L_219646:
	movl 0x40(%rbp),%ecx
L_219647:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_469172
L_219648:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_219650
L_219651:
	movl %ecx,0x0(%r15)
L_219650:
	movq $0x1B47,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x38(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
.p2align 0x4,,0x7
L_219068:
	incl 0x24(%rbp)
	jmp loop_2429
.p2align 0x4
L_469172:
L_219120:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x1080)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_469173:
L_219652:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_219653+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219653
.p2align 0x4
.long 0x1643
L_219653:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_219646
.p2align 0x4
L_469174:
L_219104:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_469175:
L_219657:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_219120
L_219658:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_219133
L_219660:
	movl %ecx,0x0(%r15)
L_219133:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x578)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_469178:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_219642
.p2align 0x4
L_469179:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_219642
.p2align 0x4
L_469180:
L_219661:
	xorl %ecx,%ecx
	jmp L_219647
.p2align 0x4
L_469181:
L_219109:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x1088)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_469182:
L_219602:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r11
	movq 0x0(%r15),%r10
	movq %r10,0x30(%rbp)
	movq 0x28(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x28(%r15),%r13
	movq 0x30(%r15),%r10
	cmpq $0x2,%r10
	je L_219068
L_219603:
	andq $0x3,%r10
	jnz L_219604
L_219635:
L_219604:
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r10d
	movslq %r10d,%r9
	cmpq %r15,%r9
	jne L_469187
L_219606:
	cmpl $0x0,%r10d
	jng L_219608
L_219628:
	cmpq $0x0,%r15
	jna L_469185
L_219631:
	movq 0x0(%r14),%r15
L_219632:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_219608
L_219633:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xF61,%r14
	je L_219068
L_219608:
	movq %r13,0x40(%rbp)
	movq %r11,0x48(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x40,%rbp
	leaq (L_219609+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_469185:
L_219630:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_469187:
L_219059:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x4D8)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_469190:
L_219530:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x28(%rbp),%r15
	movq 0x20(%r15),%r14
	movq 0x28(%r15),%r13
	movq %r13,0x50(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	movq %r11,0x58(%rbp)
	cmpq %r15,%r11
	movq %r14,0x48(%rbp)
	jne L_219059
L_219532:
	testq %r11,%r11
	jz L_469196
L_219533:
	cmpq $0x7FFFFFFF,%r11
	ja L_469195
L_219534:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_219535
L_219598:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_219599+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219599
.p2align 0x4
.long 0x35D6
L_219599:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_219535:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14BD,%rcx
	movq 0x58(%rbp),%rdx
	movq $0x18,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_219536+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219536
.p2align 0x4
.long 0x35D6
L_219536:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq %rax,0x28(%rbp)
L_219537:
	movq $0x0,0x60(%rbp)
loop_2438:
	movq 0x58(%rbp),%r15
	cmpq %r15,0x60(%rbp)
	jl L_469191
L_219538:
	movq 0x28(%rbp),%r15
	movq $0x186D,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,(gcState+0x20)(%rip)
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_219539+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concatV_1
.p2align 0x4
L_469191:
L_219589:
	movq 0x60(%rbp),%r14
	movl %r14d,%r13d
	movslq %r13d,%r15
	movq 0x48(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xF65,%r15
	je L_469193
	cmpq $0xF66,%r15
	je L_469192
L_219590:
	movq 0x0(%r13),%r15
	movq $0x1EB3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
L_219591:
	movq %r15,0x70(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x30(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_219592+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toAMD64Operand_0
.p2align 0x4
L_469192:
L_219597:
	movq 0x0(%r13),%r15
	movq $0x1EBB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
	jmp L_219591
.p2align 0x4
L_469193:
L_219596:
	movq 0x8(%r13),%r15
	movq 0x0(%r13),%r14
	movq $0x1EB5,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq %r13,%r15
	jmp L_219591
.p2align 0x4
L_469195:
L_219140:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_469196:
L_219601:
	movq (globalObjptr+0xED0)(%rip),%r15
	movq %r15,0x28(%rbp)
	jmp L_219537
.p2align 0x4
L_469198:
L_219528:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x28(%rbp),%r15
	movq 0x28(%r15),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x30(%rbp)
	movq 0x0(%r11),%r15
	movq %r15,0x48(%rbp)
	movq $0x3D87,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x40(%rbp)
	addq $0x10,%r12
	addq $0x40,%rbp
	leaq (L_219529+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp remove_0
.p2align 0x4
L_469199:
L_219480:
	movq 0x0(%rbp),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x30(%rbp)
	movq 0x8(%r14),%r11
	movq %r11,0x38(%rbp)
	movq 0x0(%r14),%r11
	movq %r11,0x40(%rbp)
	movq 0x28(%rbp),%r14
	movq 0x28(%r14),%r11
	movq %r11,0x48(%rbp)
	movq 0x30(%r14),%r11
	cmpq $0x2,%r11
	je L_219521
L_219481:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_219068
L_219482:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xF68,%r15
	je L_469203
	cmpq $0xF69,%r15
	je L_469201
L_219483:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x1EB2,%r15
	je L_469200
L_219516:
	movq 0x0(%r13),%r11
	movq %r11,%r15
L_219517:
	movq %r15,0x60(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0xE388)(%rip),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_219486+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_469200:
L_219484:
	movq 0x0(%r13),%r15
L_219485:
	movq %r15,0x60(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0xE388)(%rip),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_219486+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_469201:
L_219524:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x1EB2,%r15
	je L_469202
L_219526:
	movq 0x0(%r13),%r15
	jmp L_219517
.p2align 0x4
L_469202:
L_219525:
	movq 0x0(%r13),%r15
	jmp L_219485
.p2align 0x4
L_469203:
L_219518:
	movq 0x10(%r11),%r15
	movl 0x18(%r15),%r14d
	testl %r14d,%r14d
	jz L_219068
L_219521:
	movq 0x30(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1EB2,%r15
	je L_469204
L_219523:
	movq 0x0(%r14),%r15
	jmp L_219517
.p2align 0x4
L_469204:
L_219522:
	movq 0x0(%r14),%r15
	jmp L_219485
.p2align 0x4
L_469208:
L_219468:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r13,0x30(%rbp)
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r13
L_219469:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_219068
L_219470:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xF6C,%r15
	jne L_219068
L_219471:
	movq %r14,0x48(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x40(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x40,%rbp
	leaq (L_219472+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_39
.p2align 0x4
L_469211:
L_219385:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x38(%rbp)
	movq $0x47B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x40(%rbp)
	addq $0x18,%r12
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x28(%r15),%r14
	movq 0x30(%r15),%r13
	cmpq $0x2,%r13
	je jump_5
L_219386:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_219387
L_219438:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xF68,%r15
	jne jump_4
L_219463:
	movq 0x10(%r13),%r15
	movl 0x18(%r15),%r11d
	testl %r11d,%r11d
	jnz jump_3
.p2align 0x4,,0x7
L_219387:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_469221
.p2align 0x4,,0x7
L_219388:
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_219068
	cmpq $0x2,%r14
	je L_219068
L_219389:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xF6B,%r15
	je L_469218
	cmpq $0xF6C,%r15
	je L_469217
	cmpq $0xF6D,%r15
	je L_469214
	cmpq $0xF6E,%r15
	je L_469213
L_219390:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq %r13,0x28(%rbp)
L_219391:
	cmpq $0x1,%r15
	je L_469212
L_219392:
	movq %r15,0x48(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x40(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_219393+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_39
.p2align 0x4
L_469212:
L_219396:
	movq $0x3637,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x38(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movb $0x1,0x30(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x30,%rbp
	leaq (L_219067+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldP_0
.p2align 0x4
L_469213:
L_219424:
	movq 0x20(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0x10(%r14),%r15
L_219425:
	movq %r15,0x50(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x40(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_219426+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_39
.p2align 0x4
L_469214:
L_219414:
	movq 0x18(%r14),%r13
	movq 0x10(%r14),%r15
	movq %r13,%r14
.p2align 0x4,,0x7
L_219415:
	movl 0x14(%r15),%r13d
	testl %r13d,%r13d
	jnz L_219068
L_219416:
	cmpq $0x1,%r14
	je L_219068
L_219417:
	movq %r14,0x30(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_219418+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_39
.p2align 0x4
L_469217:
L_219408:
	movq 0x0(%r14),%r15
L_219409:
	movq %r15,0x30(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_219410+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_39
.p2align 0x4
L_469218:
L_219402:
	movq 0x0(%r14),%r15
L_219403:
	movq %r15,0x30(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_219404+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_39
.p2align 0x4
L_469221:
L_219436:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_219437+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219437
.p2align 0x4
.long 0x35E6
L_219437:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	jmp L_219388
.p2align 0x4
jump_3:
	movq %r14,%r15
jump_1:
	movq %r15,0x58(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x40(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_219440+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_39
.p2align 0x4
jump_4:
	movq %r14,%r15
	jmp jump_1
.p2align 0x4
jump_5:
	movq %r14,%r15
	jmp jump_1
.p2align 0x4
L_469223:
L_219379:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x28(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_219380+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_46
.p2align 0x4
L_469224:
L_219334:
	movq 0x0(%rbp),%r15
	movq 0x20(%r15),%r11
	movq 0x18(%r15),%r13
	movq 0x10(%r15),%r10
	movq 0x8(%r15),%r9
	movq 0x0(%r15),%r8
	movq %r8,0x30(%rbp)
	movq 0x28(%rbp),%r15
	movq 0x28(%r15),%r14
	movq 0x30(%r15),%r8
	cmpq $0x2,%r8
	je x_1941
L_219335:
	movq %r8,%r15
	andq $0x3,%r15
	jnz L_219336
L_219362:
	movq 0xFFFFFFFFFFFFFFF8(%r8),%r15
	shrq $0x1,%r15
	cmpq $0xF68,%r15
	je L_469238
	cmpq $0xF69,%r15
	je L_469237
L_219363:
	movl 0x0(%r8),%ecx
L_219364:
	movq $0x1161,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl %ecx,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq %r14,0x8(%r15)
	movq 0x0(%r11),%r13
	movq $0x25EB,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r15,0x0(%r8)
	movq %r13,0x8(%r8)
	addq $0x18,%r12
	movq %r11,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r8,0x0(%r11)
	movl %ecx,%r15d
	shlq $0x1,%r15
	orq $0x1,%r15
	movq %r10,%r11
	movq %r9,%r10
L_219337:
	movq $0x53,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movl $0x0,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq $0x133D,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	addq $0x10,%r12
	movb $0x2,%r8b
	movzbl %r8b,%ecx
	movl %ecx,0x0(%r9)
	movl $0x0,0x4(%r9)
	movq $0x133F,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r8,0x38(%rbp)
	movq %r15,0x0(%r8)
	movq %r9,0x8(%r8)
	movq %r13,0x10(%r8)
	movq %r11,0x18(%r8)
	addq $0x30,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x20(%r8)
	movq 0x10(%r14),%r13
	movq %r13,0x40(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_219109
L_219338:
	movq %r15,0x0(%r11)
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_469235
L_219339:
	movq 0x0(%r11),%r14
	movq 0x8(%r11),%r11
	xorl %ecx,%ecx
	movq %r11,%r15
.p2align 0x4,,0x7
L_219341:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_469234
L_219354:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xD75,%r13
	jne L_469233
L_219355:
	cmpq 0x0(%r14),%r10
	movq %r10,(localObjptr+0x18)(%rip)
	je L_469230
L_219342:
	incl %ecx
	movl %ecx,0x28(%rbp)
	jo L_219104
L_219343:
	cmpq $0x1,%r15
	je L_469225
L_219344:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq (localObjptr+0x18)(%rip),%r10
	jmp L_219341
.p2align 0x4
L_469225:
L_219345:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_469228
.p2align 0x4,,0x7
L_219346:
	movl 0x28(%rbp),%ecx
L_219347:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_219120
L_219348:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_219350
L_219351:
	movl %ecx,0x0(%r15)
L_219350:
	movq $0x1AEB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x40(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	jmp L_219068
.p2align 0x4
L_469228:
L_219352:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_219353+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219353
.p2align 0x4
.long 0x5B4
L_219353:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_219346
.p2align 0x4
L_469230:
L_219357:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_219120
L_219358:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_219133
L_219360:
	movl %ecx,0x0(%r15)
	jmp L_219133
.p2align 0x4
L_469233:
	movq %r10,(localObjptr+0x18)(%rip)
	jmp L_219342
.p2align 0x4
L_469234:
	movq %r10,(localObjptr+0x18)(%rip)
	jmp L_219342
.p2align 0x4
L_469235:
L_219361:
	xorl %ecx,%ecx
	jmp L_219347
.p2align 0x4
L_469237:
L_219377:
	movl 0x0(%r8),%ecx
	jmp L_219364
.p2align 0x4
L_469238:
L_219365:
	movq 0x0(%r8),%r15
	movq %r15,%rsp
	andq $0x1,%rsp
	jnz L_469242
L_219366:
	cmpq $0x2,%r8
	je x_1940
L_219367:
	movq %r8,%r15
	andq $0x3,%r15
	jnz L_219336
L_219368:
	movq 0xFFFFFFFFFFFFFFF8(%r8),%r15
	shrq $0x1,%r15
	cmpq $0xF68,%r15
	jne x_1939
L_219371:
	movq 0x10(%r8),%rsp
	movl 0x18(%rsp),%esi
	testl %esi,%esi
	jz L_469240
	movq %r13,%r15
	movq %r11,%r13
	movq %r10,%r11
	movq %r9,%r10
x_773:
	movl 0x0(%r15),%r9d
	movl %r9d,%r8d
	incl %r9d
	jo L_219104
L_219370:
	movl %r9d,0x0(%r15)
	movq $0x1161,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r8d,0x0(%r15)
	addq $0x18,%r12
	movl $0x0,0x4(%r15)
	movq %r14,0x8(%r15)
	movq 0x0(%r13),%r9
	movq $0x25EB,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r15,0x0(%r8)
	movq %r9,0x8(%r8)
	addq $0x18,%r12
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r15,1)
	movq %r8,0x0(%r13)
	xorq %r15,%r15
	jmp L_219337
.p2align 0x4
L_469240:
L_219336:
	xorq %r15,%r15
	movq %r10,%r11
	movq %r9,%r10
	jmp L_219337
.p2align 0x4
x_1939:
	movq %r13,%r15
	movq %r11,%r13
	movq %r10,%r11
	movq %r9,%r10
	jmp x_773
.p2align 0x4
x_1940:
	movq %r13,%r15
	movq %r11,%r13
	movq %r10,%r11
	movq %r9,%r10
	jmp x_773
.p2align 0x4
L_469242:
L_219376:
	shrq $0x1,%r15
	movl %r15d,%ecx
	jmp L_219364
.p2align 0x4
x_1941:
	movq %r13,%r15
	movq %r11,%r13
	movq %r10,%r11
	movq %r9,%r10
	jmp x_773
.p2align 0x4
L_469244:
L_219189:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movl %r13d,0x58(%rbp)
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_219059
L_219191:
	cmpl $0x0,%r13d
	jl L_469257
L_219192:
	movl $0x0,0x28(%rbp)
loop_2436:
	movl 0x58(%rbp),%r13d
	cmpl %r13d,0x28(%rbp)
	jl L_469252
L_219194:
	movq 0x48(%rbp),%r13
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_219068
L_219195:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xF6D,%r15
	jne L_219068
L_219196:
	movq 0x10(%r13),%r11
	movq %r11,0x28(%rbp)
	movq 0x28(%r11),%r13
	movq %r13,0x50(%rbp)
	cmpq $0x1,%r13
	je L_219068
L_219197:
	cmpq (globalObjptr+0xDAC0)(%rip),%r13
	je L_219068
L_219198:
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	cmpq $0x10,%r15
	jne L_219200
L_219286:
	xorq %r14,%r14
.p2align 0x4,,0x7
vectorEqualLoop_185:
	cmpq %r15,%r14
	je L_219068
L_219287:
	movq 0x50(%rbp),%r13
	movq (globalObjptr+0xDAC0)(%rip),%r10
	movb 0x0(%r10,%r14,1),%r11b
	cmpb %r11b,0x0(%r13,%r14,1)
	jne L_469245
L_219289:
	incq %r14
	jmp vectorEqualLoop_185
.p2align 0x4
L_469245:
L_219200:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x50(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_219201+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1942
.p2align 0x4
L_469252:
L_219293:
	movslq 0x28(%rbp),%r15
	movq 0x50(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
L_219294:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_219295
L_219296:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xF62,%r15
	jne L_219295
L_219297:
	movq 0x10(%r13),%r15
L_219298:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_219295
L_219299:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x10C1,%r14
	je L_469253
.p2align 0x4,,0x7
L_219295:
	incl 0x28(%rbp)
	jmp loop_2436
.p2align 0x4
L_469253:
L_219300:
	movb 0x2(%r15),%r14b
	movb %r14b,0x2C(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x60(%rbp)
	movw 0x0(%r15),%r13w
	movw %r13w,0x2E(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq %r14,0x70(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_219301+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1942
.p2align 0x4
L_469257:
L_219188:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x4F8)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_469259:
L_219158:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x28(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movl %r13d,0x48(%rbp)
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_219059
L_219160:
	cmpl $0x0,%r13d
	jl L_219188
L_219161:
	movl $0x0,0x28(%rbp)
loop_2434:
	movl 0x28(%rbp),%r15d
	cmpl 0x48(%rbp),%r15d
	jnl L_219068
L_219163:
	movslq %r15d,%r14
	movq 0x40(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
L_219164:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_219165
L_219166:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xF61,%r15
	je L_469260
.p2align 0x4,,0x7
L_219165:
	incl 0x28(%rbp)
	jmp loop_2434
.p2align 0x4
L_469260:
L_219167:
	movl 0x0(%r13),%r15d
	movl %r15d,0x58(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x30(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_219168+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_469265:
L_219081:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x28(%rbp),%r15
	movq 0x20(%r15),%r14
	movq 0x28(%r15),%r13
	movq %r13,0x50(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	movq %r11,0x58(%rbp)
	cmpq %r15,%r11
	movq %r14,0x48(%rbp)
	jne L_219059
L_219083:
	testq %r11,%r11
	jz L_469271
L_219084:
	cmpq $0x7FFFFFFF,%r11
	ja L_219140
L_219085:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_219086
L_219154:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_219155+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219155
.p2align 0x4
.long 0x35D6
L_219155:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_219086:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14B9,%rcx
	movq 0x58(%rbp),%rdx
	movq $0x18,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_219087+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219087
.p2align 0x4
.long 0x35D6
L_219087:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq %rax,0x28(%rbp)
L_219088:
	movq $0x0,0x60(%rbp)
loop_2430:
	movq 0x58(%rbp),%r15
	cmpq %r15,0x60(%rbp)
	jl L_469266
L_219089:
	movq 0x28(%rbp),%r15
	movq $0x1871,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,(gcState+0x20)(%rip)
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_219090+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concatV_2
.p2align 0x4
L_469266:
L_219145:
	movq 0x60(%rbp),%r14
	movl %r14d,%r13d
	movslq %r13d,%r15
	movq 0x48(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xF65,%r15
	je L_469268
	cmpq $0xF66,%r15
	je L_469267
L_219146:
	movq 0x0(%r13),%r15
	movq $0x1EB3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
L_219147:
	movq %r15,0x70(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x30(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_219148+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toX86Operand_0
.p2align 0x4
L_469267:
L_219153:
	movq 0x0(%r13),%r15
	movq $0x1EBB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
	jmp L_219147
.p2align 0x4
L_469268:
L_219152:
	movq 0x8(%r13),%r15
	movq 0x0(%r13),%r14
	movq $0x1EB5,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq %r13,%r15
	jmp L_219147
.p2align 0x4
L_469271:
L_219157:
	movq (globalObjptr+0xEB8)(%rip),%r15
	movq %r15,0x28(%rbp)
	jmp L_219088
.p2align 0x4
L_469273:
L_219079:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x28(%rbp),%r15
	movq 0x28(%r15),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x30(%rbp)
	movq 0x0(%r11),%r15
	movq %r15,0x48(%rbp)
	movq $0x3D7F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x40(%rbp)
	addq $0x10,%r12
	addq $0x40,%rbp
	leaq (L_219080+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp remove_0
.p2align 0x4
L_469274:
L_219069:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x28(%rbp),%r15
	movq 0x28(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x38(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq %r13,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_219070+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_2
.p2align 0x4
L_469275:
L_219694:
	movq 0x28(%rbp),%r14
	movq 0x28(%r14),%r13
	movq 0x10(%r13),%r11
	movq %r11,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq $0x1,0x0(%r11)
	jmp L_219068
.p2align 0x4
L_469276:
L_219693:
	movq 0x28(%rbp),%r14
	movq 0x28(%r14),%r13
	movq 0x10(%r13),%r11
	movq %r11,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq $0x1,0x0(%r11)
	jmp L_219068
.p2align 0x4
L_469277:
L_219692:
	movq 0x28(%rbp),%r14
	movq 0x28(%r14),%r13
	movq 0x10(%r13),%r11
	movq %r11,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq $0x1,0x0(%r11)
	jmp L_219068
.p2align 0x4
L_469278:
L_219691:
	movq 0x28(%rbp),%r14
	movq 0x28(%r14),%r13
	movq 0x10(%r13),%r11
	movq %r11,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq $0x1,0x0(%r11)
	jmp L_219068
.p2align 0x4
L_469279:
L_219662:
	movq 0x28(%rbp),%r11
	movq 0x28(%r11),%r10
	movq 0x8(%r10),%r9
	movq 0x18(%r10),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r14
	movl %r14d,%r11d
	movslq %r11d,%r10
	movl %r11d,(localWord32+0x0)(%rip)
	cmpq %r10,%r14
	jne L_219059
L_219664:
	xorl %ecx,%ecx
	xorl %ebx,%ebx
	xchgq %r9,%r15
.p2align 0x4,,0x7
loop_2442:
	cmpl (localWord32+0x0)(%rip),%ebx
	jnl L_469282
L_219687:
	movl %ebx,%r11d
	incl %r11d
	movslq %ebx,%r10
	cmpq %r14,%r10
	jnb L_219630
L_219689:
	incl %ecx
	jo L_219104
L_219690:
	movl %r11d,%ebx
	jmp loop_2442
.p2align 0x4
L_469282:
L_219665:
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_2443:
	cmpl %ecx,%ebx
	je L_219068
L_219666:
	movslq %ebx,%r11
	cmpq %r14,%r11
	jnb L_219630
L_219668:
	movb 0x0(%r13,%r11,1),%dl
	cmpb $0x41,%dl
	jb L_469288
L_219669:
	cmpb $0x61,%dl
	jb L_469286
L_219670:
	cmpb $0x7A,%dl
	jna L_469285
	movq %r15,(localObjptr+0x8)(%rip)
L_219675:
	cmpb $0x5F,%dl
	jne L_469284
L_219672:
	incl %ebx
	jo L_219104
L_219673:
	movq (localObjptr+0x8)(%rip),%r15
	jmp loop_2443
.p2align 0x4
L_469284:
L_219676:
	movq (localObjptr+0x8)(%rip),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq $0x1,0x0(%r15)
	jmp L_219068
.p2align 0x4
L_469285:
	movq %r15,(localObjptr+0x8)(%rip)
	jmp L_219672
.p2align 0x4
L_469286:
L_219678:
	cmpb $0x5A,%dl
	jna L_469287
	movq %r15,(localObjptr+0x8)(%rip)
	jmp L_219675
.p2align 0x4
L_469287:
	movq %r15,(localObjptr+0x8)(%rip)
	jmp L_219672
.p2align 0x4
L_469288:
L_219681:
	cmpb $0x30,%dl
	jb L_469290
L_219682:
	cmpb $0x39,%dl
	jna L_469289
	movq %r15,(localObjptr+0x8)(%rip)
	jmp L_219675
.p2align 0x4
L_469289:
	movq %r15,(localObjptr+0x8)(%rip)
	jmp L_219672
.p2align 0x4
L_469290:
	movq %r15,(localObjptr+0x8)(%rip)
	jmp L_219675
.p2align 0x4
L_469294:
L_219063:
	movq 0x18(%rbp),%r14
	movq %r14,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_469295:
L_219695:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_219696+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219696
.p2align 0x4
.long 0x495
L_219696:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	jmp L_219062
.p2align 0x4
.long 0xC6F
L_219067:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	jmp L_219068
.p2align 0x4
.long 0x568
L_219609:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_219610
L_219626:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_219627+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219627
.p2align 0x4
.long 0x578
L_219627:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_219610:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x858)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x10280)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_219611+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x35D7
L_219539:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x30(%rbp)
	cmpq %rdx,%r14
	movq %r15,0x28(%rbp)
	jne L_219059
L_219541:
	cmpq $0x0,%rdx
	sete %bl
	movzbl %bl,%ebx
	movl %ebx,0x48(%rbp)
	je L_469321
L_219542:
	cmpq $0x7FFFFFFF,%rdx
	ja L_219140
L_219543:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14BF,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_219544+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219544
.p2align 0x4
.long 0x59E
L_219544:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq %rax,0x58(%rbp)
L_219545:
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2439:
	cmpq 0x30(%rbp),%r15
	jnl L_469300
L_219586:
	movl %r15d,%r14d
	movslq %r14d,%r13
	movq 0x28(%rbp),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq 0x8(%r11),%r10
	movq 0x58(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r10,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_2439
.p2align 0x4
L_469300:
L_219546:
	movq 0x58(%rbp),%r15
	movq $0x186F,0xFFFFFFFFFFFFFFF8(%r15)
	movl 0x48(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_219549
L_219547:
	cmpq $0x7FFFFFFF,0x30(%rbp)
	ja L_219140
L_219549:
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2440:
	cmpq 0x30(%rbp),%r15
	jnl L_469301
L_219583:
	incq %r15
	jmp loop_2440
.p2align 0x4
L_469301:
L_219550:
	movq 0x58(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_219059
L_219552:
	decl %r13d
	jo L_219104
L_219553:
	movl %r13d,0x30(%rbp)
	movq $0x1,0x28(%rbp)
.p2align 0x4,,0x7
loop_2441:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_469315
.p2align 0x4,,0x7
L_219554:
	movl 0x30(%rbp),%r15d
	cmpl $0x0,%r15d
	jl L_469302
L_219555:
	movl %r15d,%r14d
	decl %r14d
	movslq %r15d,%r13
	movl %r14d,0x30(%rbp)
	movq 0x58(%rbp),%r15
	movq 0x0(%r15,%r13,8),%r14
	movq $0x22F9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x28(%rbp)
	jmp loop_2441
.p2align 0x4
L_469302:
L_219556:
	movq 0x50(%rbp),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x30(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r14
	incq %r14
	jo L_219109
L_219557:
	movq %r14,0x0(%r13)
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_469313
L_219558:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_219560:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_219561
L_219573:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xD80,%r13
	jne L_219561
L_219574:
	movq 0x0(%r14),%r13
	cmpq %r13,0x38(%rbp)
	je L_469308
L_219561:
	incl %ecx
	movl %ecx,0x48(%rbp)
	jo L_219104
L_219562:
	cmpq $0x1,%r15
	je L_469303
L_219563:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_219560
.p2align 0x4
L_469303:
L_219564:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_219565
L_219571:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_219572+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219572
.p2align 0x4
.long 0x35D8
L_219572:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_219565:
	movl 0x48(%rbp),%ecx
L_219566:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_219120
L_219567:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_219569
L_219570:
	movl %ecx,0x0(%r15)
L_219569:
	movq $0x1B01,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	jmp L_219068
.p2align 0x4
L_469308:
L_219576:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_219120
L_219577:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_219133
L_219579:
	movl %ecx,0x0(%r15)
	jmp L_219133
.p2align 0x4
L_469313:
L_219580:
	xorl %ecx,%ecx
	jmp L_219566
.p2align 0x4
L_469315:
L_219581:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_219582+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219582
.p2align 0x4
.long 0x35D9
L_219582:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	jmp L_219554
.p2align 0x4
L_469321:
L_219588:
	movq (globalObjptr+0xED8)(%rip),%r15
	movq %r15,0x58(%rbp)
	jmp L_219545
.p2align 0x4
.long 0x35DA
L_219592:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_219593
L_219594:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_219595+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219595
.p2align 0x4
.long 0x142F
L_219595:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_219593:
	movq 0x28(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x60(%rbp),%r14
	movq 0x68(%rbp),%r13
	movq %r13,0x0(%r15,%r14,8)
	incq %r14
	movq %r14,0x60(%rbp)
	jmp loop_2438
.p2align 0x4
.long 0x568
L_219529:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x30(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp L_219068
.p2align 0x4
.long 0x100D
L_219486:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x38(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_219487+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_33
.p2align 0x4
.long 0x568
L_219472:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x30(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x58(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x38(%rbp)
	movq 0x18(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x40(%rbp)
	movq %r13,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_219473+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_2
.p2align 0x4
.long 0x5BF
L_219393:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_219394
L_219399:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_219400+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219400
.p2align 0x4
.long 0x5AB
L_219400:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_219394:
	movq 0x40(%rbp),%r15
	movq 0x8(%r15),%r14
	movb 0x0(%r14),%r15b
	cmpb $0x1,%r15b
	je L_469325
	cmpb $0x2,%r15b
	je L_469324
	jmp L_219396
.p2align 0x4
L_469324:
L_219398:
	movb $0x1,0x0(%r14)
	jmp L_219396
.p2align 0x4
L_469325:
L_219397:
	movb $0x0,0x0(%r14)
	jmp L_219396
.p2align 0x4
.long 0xFBD
L_219426:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x8(%r15),%r14
	movb 0x0(%r14),%r15b
	cmpb $0x1,%r15b
	je L_469328
	cmpb $0x2,%r15b
	je L_469327
jump_0:
	movq 0x28(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_219428+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_39
.p2align 0x4
L_469327:
L_219433:
	movb $0x1,0x0(%r14)
	jmp jump_0
.p2align 0x4
L_469328:
L_219432:
	movb $0x0,0x0(%r14)
	jmp jump_0
.p2align 0x4
.long 0xC6F
L_219418:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x8(%r15),%r14
	movb 0x0(%r14),%r15b
	cmpb $0x1,%r15b
	je L_469330
	cmpb $0x2,%r15b
	je L_469329
	jmp L_219068
.p2align 0x4
L_469329:
L_219421:
	movb $0x1,0x0(%r14)
	jmp L_219068
.p2align 0x4
L_469330:
L_219420:
	movb $0x0,0x0(%r14)
	jmp L_219068
.p2align 0x4
.long 0xC6F
L_219410:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x8(%r15),%r14
	movb 0x0(%r14),%r15b
	cmpb $0x1,%r15b
	je L_469332
	cmpb $0x2,%r15b
	je L_469331
	jmp L_219068
.p2align 0x4
L_469331:
L_219413:
	movb $0x1,0x0(%r14)
	jmp L_219068
.p2align 0x4
L_469332:
L_219412:
	movb $0x0,0x0(%r14)
	jmp L_219068
.p2align 0x4
.long 0xC6F
L_219404:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x8(%r15),%r14
	movb 0x0(%r14),%r15b
	cmpb $0x1,%r15b
	je L_469334
	cmpb $0x2,%r15b
	je L_469333
	jmp L_219068
.p2align 0x4
L_469333:
L_219407:
	movb $0x1,0x0(%r14)
	jmp L_219068
.p2align 0x4
L_469334:
L_219406:
	movb $0x0,0x0(%r14)
	jmp L_219068
.p2align 0x4
.long 0x100D
L_219440:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_219441
L_219461:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_219462+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219462
.p2align 0x4
.long 0x582
L_219462:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_219441:
	movq 0x28(%rbp),%r15
	movq 0x8(%r15),%r14
	movb 0x0(%r14),%r15b
	cmpb $0x1,%r15b
	je L_469342
	cmpb $0x2,%r15b
	je L_469335
	jmp L_219387
.p2align 0x4
L_469335:
L_219452:
	movb $0x1,0x0(%r14)
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_219068
	cmpq $0x2,%r14
	je L_219068
L_219453:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xF6B,%r15
	je L_469339
	cmpq $0xF6C,%r15
	je L_469338
	cmpq $0xF6D,%r15
	je L_469337
	cmpq $0xF6E,%r15
	je L_469336
L_219454:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq %r13,0x28(%rbp)
	jmp L_219391
.p2align 0x4
L_469336:
L_219458:
	movq 0x20(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0x10(%r14),%r15
	jmp L_219425
.p2align 0x4
L_469337:
L_219457:
	movq 0x18(%r14),%r13
	movq 0x10(%r14),%r15
	movq %r13,%r14
	jmp L_219415
.p2align 0x4
L_469338:
L_219456:
	movq 0x0(%r14),%r15
	jmp L_219409
.p2align 0x4
L_469339:
L_219455:
	movq 0x0(%r14),%r15
	jmp L_219403
.p2align 0x4
L_469342:
L_219443:
	movb $0x0,0x0(%r14)
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_219068
	cmpq $0x2,%r14
	je L_219068
L_219444:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xF6B,%r15
	je L_469346
	cmpq $0xF6C,%r15
	je L_469345
	cmpq $0xF6D,%r15
	je L_469344
	cmpq $0xF6E,%r15
	je L_469343
L_219445:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq %r13,0x28(%rbp)
	jmp L_219391
.p2align 0x4
L_469343:
L_219449:
	movq 0x20(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0x10(%r14),%r15
	jmp L_219425
.p2align 0x4
L_469344:
L_219448:
	movq 0x18(%r14),%r13
	movq 0x10(%r14),%r15
	movq %r13,%r14
	jmp L_219415
.p2align 0x4
L_469345:
L_219447:
	movq 0x0(%r14),%r15
	jmp L_219409
.p2align 0x4
L_469346:
L_219446:
	movq 0x0(%r14),%r15
	jmp L_219403
.p2align 0x4
.long 0x568
L_219380:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_219381
L_219383:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_219384+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219384
.p2align 0x4
.long 0x578
L_219384:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_219381:
	movq $0x3E37,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x50(%rbp)
	movq (globalObjptr+0x9D8)(%rip),%r15
	movq %r15,0x40(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_219382+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3780
.p2align 0x4
.long 0x2097
L_219201:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_219202
L_219284:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_219285+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219285
.p2align 0x4
.long 0x35E2
L_219285:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_219202:
	movq 0x30(%rbp),%r14
	movl 0x0(%r14),%r13d
	testl %r13d,%r13d
	jnz L_219068
L_219203:
	movl $0x1,0x0(%r14)
	movq 0x28(%rbp),%r13
	movb 0x20(%r13),%r14b
	movb %r14b,0x48(%rbp)
	movb 0x21(%r13),%r14b
	movq 0x38(%r13),%r11
	movw 0x0(%r11),%r10w
	movw %r10w,0x4A(%rbp)
	movq 0x8(%r11),%r10
	movq %r10,0x58(%rbp)
	cmpb $0x1,%r14b
	je L_469352
L_219204:
	testb %r14b,%r14b
	jnz L_469351
L_219205:
	movq (globalObjptr+0xE8E0)(%rip),%r15
L_219206:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xEC8)(%rip),%r15
	movq %r15,0x8(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0xEE08)(%rip),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_219207+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_469351:
L_219278:
	movq (globalObjptr+0xE950)(%rip),%r15
	jmp L_219206
.p2align 0x4
L_469352:
L_219279:
	movb 0x48(%rbp),%r14b
	cmpb $0x1,%r14b
	je L_469385
	cmpb $0x2,%r14b
	je L_469383
L_219280:
	movq (globalObjptr+0xA188)(%rip),%r15
L_219209:
	movw 0x4A(%rbp),%r14w
	andw $0x1,%r14w
	jnz L_469370
L_219210:
	movq %r15,0x30(%rbp)
	movq (globalObjptr+0xEE10)(%rip),%r15
	movq %r15,0x28(%rbp)
	movq (globalObjptr+0x10260)(%rip),%r15
	movq %r15,0x48(%rbp)
L_219211:
	movq 0x58(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%ebx
	movslq %ebx,%r13
	cmpq %r13,%r14
	jne L_219059
L_219213:
	decl %ebx
	jo L_219104
L_219214:
	xorl %r15d,%r15d
	movq $0x1,0x60(%rbp)
	movl %ebx,%ecx
	movl %r15d,%ebx
loop_2437:
	cmpl $0x0,%ecx
	jl L_469366
L_219215:
	movl %ecx,%r15d
	decl %r15d
	movl %r15d,0x68(%rbp)
	movslq %ecx,%r15
	movq 0x58(%rbp),%r14
	movzbq 0x0(%r14,%r15,1),%rax
	subq $0x1,%rax
	cmpq $0xA,%rax
	ja L_469353
	leaq jumpTable_661(%rip),%rcx
	jmp *(%rcx,%rax,8)
.data
.p2align 0x4
jumpTable_661:
.quad L_469365,L_469364,L_469363,L_469362,L_469361,L_469360,L_469359,L_469358,L_469357,L_469356,L_469355
.text
.p2align 0x4
L_469353:
L_219216:
	movq (globalObjptr+0xDFA8)(%rip),%r15
	movq %r15,0x70(%rbp)
L_219217:
	movl %ebx,%r15d
	incl %r15d
	movl %r15d,0x6C(%rbp)
	jo L_219104
L_219218:
	movl %ebx,0x80(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_219219+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_469355:
L_219237:
	movq (globalObjptr+0xAFD8)(%rip),%r15
	movq %r15,0x70(%rbp)
	jmp L_219217
.p2align 0x4
L_469356:
L_219236:
	movq (globalObjptr+0xDFD0)(%rip),%r15
	movq %r15,0x70(%rbp)
	jmp L_219217
.p2align 0x4
L_469357:
L_219235:
	movq (globalObjptr+0xDFC8)(%rip),%r15
	movq %r15,0x70(%rbp)
	jmp L_219217
.p2align 0x4
L_469358:
L_219234:
	movq (globalObjptr+0xDFC0)(%rip),%r15
	movq %r15,0x70(%rbp)
	jmp L_219217
.p2align 0x4
L_469359:
L_219233:
	movq (globalObjptr+0xDFB8)(%rip),%r15
	movq %r15,0x70(%rbp)
	jmp L_219217
.p2align 0x4
L_469360:
L_219232:
	movq (globalObjptr+0xAC88)(%rip),%r15
	movq %r15,0x70(%rbp)
	jmp L_219217
.p2align 0x4
L_469361:
L_219231:
	movq (globalObjptr+0xD080)(%rip),%r15
	movq %r15,0x70(%rbp)
	jmp L_219217
.p2align 0x4
L_469362:
L_219230:
	movq (globalObjptr+0xD088)(%rip),%r15
	movq %r15,0x70(%rbp)
	jmp L_219217
.p2align 0x4
L_469363:
L_219229:
	movq (globalObjptr+0xCE30)(%rip),%r15
	movq %r15,0x70(%rbp)
	jmp L_219217
.p2align 0x4
L_469364:
L_219228:
	movq (globalObjptr+0xDFB0)(%rip),%r15
	movq %r15,0x70(%rbp)
	jmp L_219217
.p2align 0x4
L_469365:
L_219227:
	movq (globalObjptr+0xD0F0)(%rip),%r15
	movq %r15,0x70(%rbp)
	jmp L_219217
.p2align 0x4
L_469366:
L_219238:
	movq 0x60(%rbp),%r15
	cmpq $0x1,%r15
	je L_469367
L_219239:
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x8(%r15),%r15
	movq %r15,0x60(%rbp)
	movq (globalObjptr+0xE1E8)(%rip),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_219240+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3781
.p2align 0x4
L_469367:
L_219256:
	movq $0x1,%r14
	xchgq %r14,%r15
L_219242:
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_219243+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_469370:
L_219257:
	movw 0x4A(%rbp),%r11w
	shrw $0x1,%r11w
	movb %r11b,%dl
	movq (globalObjptr+0x10260)(%rip),%r13
	movq 0x50(%rbp),%r14
toString_323:
	movzbq %dl,%rax
	subq $0x1,%rax
	cmpq $0xA,%rax
	ja L_469371
	leaq jumpTable_662(%rip),%rbx
	jmp *(%rbx,%rax,8)
.data
.p2align 0x4
jumpTable_662:
.quad L_469382,L_469381,L_469380,L_469379,L_469378,L_469377,L_469376,L_469375,L_469374,L_469373,L_469372
.text
.p2align 0x4
L_469371:
L_219258:
	movq %r15,0x30(%rbp)
	movq %r13,0x48(%rbp)
	movq %r14,0x50(%rbp)
	movq (globalObjptr+0xDFA8)(%rip),%r15
	movq %r15,0x28(%rbp)
	jmp L_219211
.p2align 0x4
L_469372:
L_219269:
	movq %r15,0x30(%rbp)
	movq %r13,0x48(%rbp)
	movq %r14,0x50(%rbp)
	movq (globalObjptr+0xAFD8)(%rip),%r15
	movq %r15,0x28(%rbp)
	jmp L_219211
.p2align 0x4
L_469373:
L_219268:
	movq %r15,0x30(%rbp)
	movq %r13,0x48(%rbp)
	movq %r14,0x50(%rbp)
	movq (globalObjptr+0xDFD0)(%rip),%r15
	movq %r15,0x28(%rbp)
	jmp L_219211
.p2align 0x4
L_469374:
L_219267:
	movq %r15,0x30(%rbp)
	movq %r13,0x48(%rbp)
	movq %r14,0x50(%rbp)
	movq (globalObjptr+0xDFC8)(%rip),%r15
	movq %r15,0x28(%rbp)
	jmp L_219211
.p2align 0x4
L_469375:
L_219266:
	movq %r15,0x30(%rbp)
	movq %r13,0x48(%rbp)
	movq %r14,0x50(%rbp)
	movq (globalObjptr+0xDFC0)(%rip),%r15
	movq %r15,0x28(%rbp)
	jmp L_219211
.p2align 0x4
L_469376:
L_219265:
	movq %r15,0x30(%rbp)
	movq %r13,0x48(%rbp)
	movq %r14,0x50(%rbp)
	movq (globalObjptr+0xDFB8)(%rip),%r15
	movq %r15,0x28(%rbp)
	jmp L_219211
.p2align 0x4
L_469377:
L_219264:
	movq %r15,0x30(%rbp)
	movq %r13,0x48(%rbp)
	movq %r14,0x50(%rbp)
	movq (globalObjptr+0xAC88)(%rip),%r15
	movq %r15,0x28(%rbp)
	jmp L_219211
.p2align 0x4
L_469378:
L_219263:
	movq %r15,0x30(%rbp)
	movq %r13,0x48(%rbp)
	movq %r14,0x50(%rbp)
	movq (globalObjptr+0xD080)(%rip),%r15
	movq %r15,0x28(%rbp)
	jmp L_219211
.p2align 0x4
L_469379:
L_219262:
	movq %r15,0x30(%rbp)
	movq %r13,0x48(%rbp)
	movq %r14,0x50(%rbp)
	movq (globalObjptr+0xD088)(%rip),%r15
	movq %r15,0x28(%rbp)
	jmp L_219211
.p2align 0x4
L_469380:
L_219261:
	movq %r15,0x30(%rbp)
	movq %r13,0x48(%rbp)
	movq %r14,0x50(%rbp)
	movq (globalObjptr+0xCE30)(%rip),%r15
	movq %r15,0x28(%rbp)
	jmp L_219211
.p2align 0x4
L_469381:
L_219260:
	movq %r15,0x30(%rbp)
	movq %r13,0x48(%rbp)
	movq %r14,0x50(%rbp)
	movq (globalObjptr+0xDFB0)(%rip),%r15
	movq %r15,0x28(%rbp)
	jmp L_219211
.p2align 0x4
L_469382:
L_219259:
	movq %r15,0x30(%rbp)
	movq %r13,0x48(%rbp)
	movq %r14,0x50(%rbp)
	movq (globalObjptr+0xD0F0)(%rip),%r15
	movq %r15,0x28(%rbp)
	jmp L_219211
.p2align 0x4
L_469383:
L_219282:
	movq (globalObjptr+0xA188)(%rip),%r15
L_219275:
	movw 0x4A(%rbp),%r14w
	andw $0x1,%r14w
	jnz L_469384
L_219276:
	movq %r15,0x30(%rbp)
	movq (globalObjptr+0xEE10)(%rip),%r15
	movq %r15,0x28(%rbp)
	movq (globalObjptr+0x10270)(%rip),%r15
	movq %r15,0x48(%rbp)
	jmp L_219211
.p2align 0x4
L_469384:
L_219277:
	movw 0x4A(%rbp),%r11w
	shrw $0x1,%r11w
	movb %r11b,%dl
	movq (globalObjptr+0x10270)(%rip),%r13
	movq 0x50(%rbp),%r14
	jmp toString_323
.p2align 0x4
L_469385:
L_219281:
	movq (globalObjptr+0xA188)(%rip),%r15
L_219271:
	movw 0x4A(%rbp),%r14w
	andw $0x1,%r14w
	jnz L_469386
L_219272:
	movq %r15,0x30(%rbp)
	movq (globalObjptr+0xEE10)(%rip),%r15
	movq %r15,0x28(%rbp)
	movq (globalObjptr+0xAE08)(%rip),%r15
	movq %r15,0x48(%rbp)
	jmp L_219211
.p2align 0x4
L_469386:
L_219273:
	movw 0x4A(%rbp),%r11w
	shrw $0x1,%r11w
	movb %r11b,%dl
	movq (globalObjptr+0xAE08)(%rip),%r13
	movq 0x50(%rbp),%r14
	jmp toString_323
.p2align 0x4
.long 0x35E3
L_219301:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_219302
L_219331:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_219332+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219332
.p2align 0x4
.long 0x35E5
L_219332:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_219302:
	movq 0x68(%rbp),%r13
	movl 0x0(%r13),%r11d
	testl %r11d,%r11d
	jnz L_219295
L_219303:
	movl $0x1,0x0(%r13)
	movb 0x2C(%rbp),%r13b
	cmpb $0x1,%r13b
	je L_469404
	cmpb $0x2,%r13b
	je L_469402
L_219304:
	movw 0x2E(%rbp),%r13w
	andw $0x1,%r13w
	jnz L_469389
L_219305:
	movq (globalObjptr+0xEE10)(%rip),%r15
	movq (globalObjptr+0x10260)(%rip),%r14
L_219306:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq 0x60(%rbp),%r11
	movq %r11,0x0(%r13)
	movq (globalObjptr+0xB00)(%rip),%r11
	movq %r11,0x8(%r13)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq (globalObjptr+0xA188)(%rip),%r13
	movq %r13,0x0(%r11)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r11,0x8(%r13)
	addq $0x18,%r12
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0x10278)(%rip),%r13
	movq %r13,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r13,0x68(%rbp)
	addq $0x18,%r12
	addq $0x68,%rbp
	leaq (L_219307+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_469389:
L_219311:
	movw 0x2E(%rbp),%r14w
	shrw $0x1,%r14w
	movb %r14b,%dl
	movq (globalObjptr+0x10260)(%rip),%r15
toString_324:
	movzbq %dl,%rax
	subq $0x1,%rax
	cmpq $0xA,%rax
	ja L_469390
	leaq jumpTable_663(%rip),%rbx
	jmp *(%rbx,%rax,8)
.data
.p2align 0x4
jumpTable_663:
.quad L_469401,L_469400,L_469399,L_469398,L_469397,L_469396,L_469395,L_469394,L_469393,L_469392,L_469391
.text
.p2align 0x4
L_469390:
L_219312:
	movq (globalObjptr+0xDFA8)(%rip),%r13
	movq %r15,%r14
	movq %r13,%r15
	jmp L_219306
.p2align 0x4
L_469391:
L_219323:
	movq (globalObjptr+0xAFD8)(%rip),%r13
	movq %r15,%r14
	movq %r13,%r15
	jmp L_219306
.p2align 0x4
L_469392:
L_219322:
	movq (globalObjptr+0xDFD0)(%rip),%r13
	movq %r15,%r14
	movq %r13,%r15
	jmp L_219306
.p2align 0x4
L_469393:
L_219321:
	movq (globalObjptr+0xDFC8)(%rip),%r13
	movq %r15,%r14
	movq %r13,%r15
	jmp L_219306
.p2align 0x4
L_469394:
L_219320:
	movq (globalObjptr+0xDFC0)(%rip),%r13
	movq %r15,%r14
	movq %r13,%r15
	jmp L_219306
.p2align 0x4
L_469395:
L_219319:
	movq (globalObjptr+0xDFB8)(%rip),%r13
	movq %r15,%r14
	movq %r13,%r15
	jmp L_219306
.p2align 0x4
L_469396:
L_219318:
	movq (globalObjptr+0xAC88)(%rip),%r13
	movq %r15,%r14
	movq %r13,%r15
	jmp L_219306
.p2align 0x4
L_469397:
L_219317:
	movq (globalObjptr+0xD080)(%rip),%r13
	movq %r15,%r14
	movq %r13,%r15
	jmp L_219306
.p2align 0x4
L_469398:
L_219316:
	movq (globalObjptr+0xD088)(%rip),%r13
	movq %r15,%r14
	movq %r13,%r15
	jmp L_219306
.p2align 0x4
L_469399:
L_219315:
	movq (globalObjptr+0xCE30)(%rip),%r13
	movq %r15,%r14
	movq %r13,%r15
	jmp L_219306
.p2align 0x4
L_469400:
L_219314:
	movq (globalObjptr+0xDFB0)(%rip),%r13
	movq %r15,%r14
	movq %r13,%r15
	jmp L_219306
.p2align 0x4
L_469401:
L_219313:
	movq (globalObjptr+0xD0F0)(%rip),%r13
	movq %r15,%r14
	movq %r13,%r15
	jmp L_219306
.p2align 0x4
L_469402:
L_219327:
	movw 0x2E(%rbp),%r13w
	andw $0x1,%r13w
	jnz L_469403
L_219328:
	movq (globalObjptr+0xEE10)(%rip),%r15
	movq (globalObjptr+0x10270)(%rip),%r14
	jmp L_219306
.p2align 0x4
L_469403:
L_219329:
	movw 0x2E(%rbp),%r14w
	shrw $0x1,%r14w
	movb %r14b,%dl
	movq (globalObjptr+0x10270)(%rip),%r15
	jmp toString_324
.p2align 0x4
L_469404:
L_219324:
	movw 0x2E(%rbp),%r11w
	andw $0x1,%r11w
	jnz L_469405
L_219325:
	movq (globalObjptr+0xEE10)(%rip),%r15
	movq (globalObjptr+0xAE08)(%rip),%r14
	jmp L_219306
.p2align 0x4
L_469405:
L_219326:
	movw 0x2E(%rbp),%r14w
	shrw $0x1,%r14w
	movb %r14b,%dl
	movq (globalObjptr+0xAE08)(%rip),%r15
	jmp toString_324
.p2align 0x4
.long 0x35DB
L_219168:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_219169
L_219185:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_219186+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219186
.p2align 0x4
.long 0x35DC
L_219186:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_219169:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xE020)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_219170+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x35D7
L_219090:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x30(%rbp)
	cmpq %r14,%rdx
	movq %r15,0x28(%rbp)
	jne L_219059
L_219092:
	cmpq $0x0,%rdx
	sete %bl
	movzbl %bl,%ebx
	movl %ebx,0x48(%rbp)
	je L_469430
L_219093:
	cmpq $0x7FFFFFFF,%rdx
	ja L_219140
L_219094:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14BB,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_219095+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219095
.p2align 0x4
.long 0x59E
L_219095:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq %rax,0x58(%rbp)
L_219096:
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2431:
	cmpq 0x30(%rbp),%r15
	jnl L_469409
L_219142:
	movl %r15d,%r14d
	movslq %r14d,%r13
	movq 0x28(%rbp),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq 0x8(%r11),%r10
	movq 0x58(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r10,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_2431
.p2align 0x4
L_469409:
L_219097:
	movq 0x58(%rbp),%r15
	movq $0x1873,0xFFFFFFFFFFFFFFF8(%r15)
	movl 0x48(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_219100
L_219098:
	cmpq $0x7FFFFFFF,0x30(%rbp)
	ja L_219140
L_219100:
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2432:
	cmpq 0x30(%rbp),%r15
	jnl L_469410
L_219138:
	incq %r15
	jmp loop_2432
.p2align 0x4
L_469410:
L_219101:
	movq 0x58(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_219059
L_219103:
	decl %r13d
	jo L_219104
L_219105:
	movl %r13d,0x30(%rbp)
	movq $0x1,0x28(%rbp)
.p2align 0x4,,0x7
loop_2433:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_469424
.p2align 0x4,,0x7
L_219106:
	movl 0x30(%rbp),%r15d
	cmpl $0x0,%r15d
	jl L_469411
L_219107:
	movl %r15d,%r14d
	decl %r14d
	movslq %r15d,%r13
	movl %r14d,0x30(%rbp)
	movq 0x58(%rbp),%r15
	movq 0x0(%r15,%r13,8),%r14
	movq $0x222B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x28(%rbp)
	jmp loop_2433
.p2align 0x4
L_469411:
L_219108:
	movq 0x50(%rbp),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x30(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r14
	incq %r14
	jo L_219109
L_219110:
	movq %r14,0x0(%r13)
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_469422
L_219111:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_219113:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_219114
L_219127:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xD77,%r13
	jne L_219114
L_219128:
	movq 0x38(%rbp),%r13
	cmpq %r13,0x0(%r14)
	je L_469417
L_219114:
	incl %ecx
	movl %ecx,0x48(%rbp)
	jo L_219104
L_219115:
	cmpq $0x1,%r15
	je L_469412
L_219116:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_219113
.p2align 0x4
L_469412:
L_219117:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_219118
L_219125:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_219126+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219126
.p2align 0x4
.long 0x35D8
L_219126:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_219118:
	movl 0x48(%rbp),%ecx
L_219119:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_219120
L_219121:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_219123
L_219124:
	movl %ecx,0x0(%r15)
L_219123:
	movq $0x1AEF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	jmp L_219068
.p2align 0x4
L_469417:
L_219130:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_219120
L_219131:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_219133
L_219134:
	movl %ecx,0x0(%r15)
	jmp L_219133
.p2align 0x4
L_469422:
L_219135:
	xorl %ecx,%ecx
	jmp L_219119
.p2align 0x4
L_469424:
L_219136:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_219137+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219137
.p2align 0x4
.long 0x35D9
L_219137:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	jmp L_219106
.p2align 0x4
L_469430:
L_219144:
	movq (globalObjptr+0xEC0)(%rip),%r15
	movq %r15,0x58(%rbp)
	jmp L_219096
.p2align 0x4
.long 0x35DA
L_219148:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_219149
L_219150:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_219151+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219151
.p2align 0x4
.long 0x142F
L_219151:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_219149:
	movq 0x28(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x60(%rbp),%r14
	movq 0x68(%rbp),%r13
	movq %r13,0x0(%r15,%r14,8)
	incq %r14
	movq %r14,0x60(%rbp)
	jmp loop_2430
.p2align 0x4
.long 0x568
L_219080:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x30(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp L_219068
.p2align 0x4
.long 0x52B
L_219070:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_219071
L_219077:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_219078+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219078
.p2align 0x4
.long 0x5AA
L_219078:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_219071:
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_469434
L_219072:
L_219073:
	movl 0x0(%r15),%r14d
	testl %r14d,%r14d
	jnz L_469433
L_219074:
	movl $0x1,0x0(%r15)
	jmp L_219068
.p2align 0x4
L_469433:
L_219075:
	movq (globalObjptr+0xEB0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_469434:
L_219076:
	movq $0x53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x1953,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq 0x30(%rbp),%r11
	movq %r11,0x0(%r13)
	movq %r14,0x8(%r13)
	movq 0x38(%rbp),%r11
	movq 0x0(%r11),%r10
	movq $0x28DF,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r13,0x0(%r9)
	movq %r10,0x8(%r9)
	addq $0x18,%r12
	movq %r11,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r9,0x0(%r11)
	xchgq %r14,%r15
	jmp L_219073
.p2align 0x4
.long 0x568
L_219611:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq %r15,0x40(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_219612+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x1FC5
L_219487:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movl 0x60(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	cmpl $0x0,%r15d
	jl L_469436
L_219488:
	movl %r15d,0x60(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_219489+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_469436:
L_219510:
	negl %r15d
	jo L_219104
L_219511:
	movl %r15d,0x60(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_219512+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0x543
L_219473:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_219474
L_219478:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_219479+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219479
.p2align 0x4
.long 0xC72
L_219479:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_219474:
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_469438
L_219475:
L_219476:
	movl $0x1,0x0(%r15)
	jmp L_219068
.p2align 0x4
L_469438:
L_219477:
	movq $0x53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x1953,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq 0x38(%rbp),%r11
	movq %r11,0x0(%r13)
	movq %r14,0x8(%r13)
	movq 0x40(%rbp),%r11
	movq 0x0(%r11),%r10
	movq $0x28DF,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r13,0x0(%r9)
	movq %r10,0x8(%r9)
	addq $0x18,%r12
	movq %r11,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r9,0x0(%r11)
	xchgq %r14,%r15
	jmp L_219476
.p2align 0x4
.long 0xC6F
L_219428:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x8(%r15),%r14
	movb 0x0(%r14),%r15b
	cmpb $0x1,%r15b
	je L_469441
	cmpb $0x2,%r15b
	je L_469440
	jmp L_219068
.p2align 0x4
L_469440:
L_219431:
	movb $0x1,0x0(%r14)
	jmp L_219068
.p2align 0x4
L_469441:
L_219430:
	movb $0x0,0x0(%r14)
	jmp L_219068
.p2align 0x4
.long 0x568
L_219382:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_219067+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x11B9
L_219207:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x28(%rbp)
	movb 0x48(%rbp),%r14b
	cmpb $0x1,%r14b
	je L_219271
	cmpb $0x2,%r14b
	je L_219275
L_219208:
	jmp L_219209
.p2align 0x4
.long 0x35DD
L_219219:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x78(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_219220
L_219225:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_219226+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219226
.p2align 0x4
.long 0x35E0
L_219226:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_219220:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x10268)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_219221+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0xC95
L_219240:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_219241
L_219254:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_219255+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219255
.p2align 0x4
.long 0xC97
L_219255:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_219241:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_219242
.p2align 0x4
.long 0x35E1
L_219243:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_219244
L_219252:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_219253+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219253
.p2align 0x4
.long 0xCA0
L_219253:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_219244:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xB10)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xED68)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x48(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_219245+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x35E4
L_219307:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x38(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x1EB2,%r13
	je L_469447
L_219310:
	movq 0x0(%r14),%r13
	movq %r13,0x70(%rbp)
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_219309+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_469447:
L_219308:
	movq 0x0(%r14),%r13
	movq %r13,0x70(%rbp)
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_219309+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x35DB
L_219170:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x38(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1EB2,%r14
	je L_469448
L_219184:
	movq 0x0(%r15),%r14
	movq %r14,0x68(%rbp)
	movq (globalObjptr+0x10258)(%rip),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_219172+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_469448:
L_219171:
	movq 0x0(%r15),%r14
	movq %r14,0x68(%rbp)
	movq (globalObjptr+0x10258)(%rip),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_219172+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x568
L_219612:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_219613
L_219624:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_219625+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219625
.p2align 0x4
.long 0x559
L_219625:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_219613:
	movq 0x30(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x10(%r14),%r15
	movq 0x18(%r14),%r13
	movq 0x8(%r14),%r11
	cmpb $0x1,0x0(%r11)
	jne L_219068
L_219614:
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_219068
L_219615:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x14AE,%r15
	je L_469449
L_219622:
	movq %r13,0x38(%rbp)
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq $0x16FB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r13,0x8(%r14)
	movq %r14,0x30(%rbp)
	addq $0x18,%r12
	addq $0x30,%rbp
	leaq (L_219067+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp flushBuf_0
.p2align 0x4
L_469449:
L_219616:
	movq %r13,0x40(%rbp)
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq $0x16FB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r13,0x8(%r14)
	movq %r14,0x38(%rbp)
	addq $0x18,%r12
	leaq L_219618(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x38,%rbp
	leaq (L_219617+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp flushBuf_0
.p2align 0x4
.long 0x35E7
L_219489:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq (globalObjptr+0x808)(%rip),%r15
	movl 0x0(%r15),%r14d
	testl %r14d,%r14d
	jz L_469453
L_219490:
	movq 0x48(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_219491+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_469453:
L_219507:
	movq 0x30(%rbp),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x1EB2,%r15
	je L_469454
L_219509:
	movq 0x0(%r13),%r14
	movq 0x28(%rbp),%r15
L_219504:
	movq %r15,0x58(%rbp)
	movq %r14,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_219496+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_469454:
L_219508:
	movq 0x0(%r13),%r14
	movq 0x28(%rbp),%r15
L_219495:
	movq %r15,0x58(%rbp)
	movq %r14,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_219496+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x35E7
L_219512:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_219513
L_219514:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_219515+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219515
.p2align 0x4
.long 0x35E8
L_219515:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_219513:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xD3C0)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_219489+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x35DE
L_219221:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x70(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_219222
L_219223:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_219224+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219224
.p2align 0x4
.long 0x35DF
L_219224:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_219222:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x60(%rbp)
	movl 0x6C(%rbp),%ebx
	movl 0x68(%rbp),%ecx
	jmp loop_2437
.p2align 0x4
.long 0x5C0
L_219245:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_219246
L_219250:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_219251+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219251
.p2align 0x4
.long 0x538
L_219251:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_219246:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xB00)(%rip),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_219247+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x35E4
L_219309:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	jmp L_219295
.p2align 0x4
.long 0xD14
L_219172:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x38(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1EB2,%r14
	je L_469458
L_219183:
	movq 0x0(%r15),%r14
	movq %r14,0x68(%rbp)
	movq (globalObjptr+0xED68)(%rip),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_219174+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_469458:
L_219173:
	movq 0x0(%r15),%r14
	movq %r14,0x68(%rbp)
	movq (globalObjptr+0xED68)(%rip),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_219174+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x56C
L_219617:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_219068
.p2align 0x4
.long 0x25
L_219618:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_219619
L_219620:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_219621+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219621
.p2align 0x4
.long 0x508
L_219621:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_219619:
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x20(%r14),%r13
	movq $0x1419,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x20,%r12
	movq (globalObjptr+0xF590)(%rip),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x10(%r15)
	movq $0x1933,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	addq $0x10,%r12
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1FC3
L_219491:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_219492
L_219505:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_219506+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219506
.p2align 0x4
.long 0x582
L_219506:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_219492:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x5480)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xEDC8)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_219493+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x14DC
L_219496:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x30(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1EB2,%r14
	je L_469461
L_219502:
	movq 0x0(%r15),%r14
	movq %r14,0x60(%rbp)
	movq (globalObjptr+0xEDA0)(%rip),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_219498+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_469461:
L_219497:
	movq 0x0(%r15),%r14
	movq %r14,0x60(%rbp)
	movq (globalObjptr+0xEDA0)(%rip),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_219498+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x5C0
L_219247:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x38(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x1EB2,%r13
	je L_469462
L_219249:
	movq 0x0(%r14),%r14
	movq %r14,0x38(%rbp)
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_219067+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_469462:
L_219248:
	movq 0x0(%r14),%r14
	movq %r14,0x38(%rbp)
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_219067+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0xD14
L_219174:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x38(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1EB2,%r14
	je L_469463
L_219182:
	movq 0x0(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (loop_2435+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_469463:
L_219175:
	movq 0x0(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (loop_2435+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x14DC
L_219493:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x30(%rbp),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r14
	shrq $0x1,%r14
	cmpq $0x1EB2,%r14
	je L_469464
L_219503:
	movq 0x0(%r13),%r14
	jmp L_219504
.p2align 0x4
L_469464:
L_219494:
	movq 0x0(%r13),%r14
	jmp L_219495
.p2align 0x4
.long 0x5FA
L_219498:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_219499
L_219500:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_219501+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219501
.p2align 0x4
.long 0x737
L_219501:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_219499:
	movq 0x40(%rbp),%r15
	movq 0x20(%r15),%r14
	movq 0x18(%r15),%r13
	movq 0x10(%r15),%r11
	movq 0x8(%r15),%r10
	movq $0x3D5F,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r14,0x8(%r9)
	movq %r13,0x10(%r9)
	movq %r11,0x18(%r9)
	addq $0x28,%r12
	movq %r15,0x0(%r9)
	movq 0x18(%r10),%r15
	movq 0x10(%r10),%r14
	movq 0x8(%r10),%r13
	movq 0x0(%r10),%r11
	movq $0xCDF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	movq %r9,0x8(%r10)
	movq %r14,0x10(%r10)
	movq %r13,0x18(%r10)
	movq %r11,0x20(%r10)
	movq %r10,0x38(%rbp)
	addq $0x30,%r12
	movq 0x48(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_219067+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1323
.p2align 0x4
.long 0x35DB
loop_2435:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x38(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1EB2,%r14
	je L_469466
L_219181:
	movq 0x0(%r15),%r14
	movq %r14,0x60(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_219177+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_469466:
L_219176:
	movq 0x0(%r15),%r14
	movq %r14,0x60(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_219177+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x35DB
L_219177:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x38(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1EB2,%r14
	je L_469467
L_219180:
	movq 0x0(%r15),%r14
	movq %r14,0x60(%rbp)
	movq (globalObjptr+0xA1A8)(%rip),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_219179+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_469467:
L_219178:
	movq 0x0(%r15),%r14
	movq %r14,0x60(%rbp)
	movq (globalObjptr+0xA1A8)(%rip),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_219179+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x35DB
L_219179:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	jmp L_219165
.text
.p2align 0x4
.globl concatV_2
.hidden concatV_2
concatV_2:
L_219700:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_219701
L_219735:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_219736+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219736
.p2align 0x4
.long 0x451
L_219736:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_219701:
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq %r14,0x8(%rbp)
	movl %r14d,%r15d
	movslq %r15d,%r13
	cmpq %r13,%r14
	jne L_219703
L_219704:
	testl %r15d,%r15d
	jz L_469481
L_219705:
	cmpl $0x0,%r15d
	movl %r15d,(localWord32+0x0)(%rip)
	jl L_469480
L_219706:
	xorl %ecx,%ecx
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_2444:
	cmpl (localWord32+0x0)(%rip),%ebx
	jnl L_469470
L_219729:
	movslq %ebx,%r15
	movq 0x0(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r11
	movl %r11d,%r10d
	movslq %r10d,%r9
	cmpq %r11,%r9
	jne L_469469
L_219731:
	addl %ecx,%r10d
	jo L_469468
L_219732:
	incl %ebx
	movl %r10d,%ecx
	jmp loop_2444
.p2align 0x4
L_469468:
L_219720:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_469469:
L_219703:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_469470:
L_219707:
	cmpq $0x0,0x8(%rbp)
	jna L_219709
L_219710:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	movslq %ecx,%rdx
	movq %rdx,0x18(%rbp)
	testq %rdx,%rdx
	jz L_469478
L_219711:
	cmpq $0x7FFFFFFF,%rdx
	ja L_469477
L_219712:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1479,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_219713+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219713
.p2align 0x4
.long 0x112A
L_219713:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq %rax,%r15
L_219714:
	xorl %ecx,%ecx
	movq 0x10(%rbp),%r13
	xorl %ebx,%ebx
	xorq %r14,%r14
.p2align 0x4,,0x7
loop_2445:
	cmpq 0x18(%rbp),%r14
	jnl L_469476
.p2align 0x4,,0x7
loop_2446:
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r11
	movl %r11d,%r10d
	movslq %r10d,%r9
	cmpq %r11,%r9
	jne L_219703
L_219718:
	cmpl %r10d,%ecx
	jl L_469473
L_219719:
	incl %ebx
	jo L_219720
L_219721:
	movslq %ebx,%r11
	cmpq 0x8(%rbp),%r11
	jnb L_469471
L_219723:
	movq 0x0(%rbp),%r10
	movq 0x0(%r10,%r11,8),%r13
	xorl %ecx,%ecx
	jmp loop_2446
.p2align 0x4
L_469471:
L_219709:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_469473:
L_219724:
	movslq %ecx,%r10
	cmpq %r11,%r10
	jnb L_219709
L_219726:
	movq 0x0(%r13,%r10,8),%r11
	incl %ecx
	movq %r15,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r11,0x0(%r15,%r14,8)
	incq %r14
	jmp loop_2445
.p2align 0x4
L_469476:
L_219715:
	movq $0xAE3,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_469477:
L_219727:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_469478:
L_219728:
	movq (globalObjptr+0xFF0)(%rip),%r15
	jmp L_219714
.p2align 0x4
L_469480:
L_219733:
	movq (globalObjptr+0x4F8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_469481:
L_219734:
	movq $0x1,0x0(%rbp)
	movl $0x0,0x8(%rbp)
	jmp tabulate_41
.text
.p2align 0x4
.globl tabulate_41
.hidden tabulate_41
tabulate_41:
L_219737:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_219738
L_219899:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_219900+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219900
.p2align 0x4
.long 0x457
L_219900:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_219738:
	movslq 0x8(%rbp),%rdx
	movq %rdx,0x10(%rbp)
	testq %rdx,%rdx
	jz L_469500
L_219739:
	cmpq $0x7FFFFFFF,%rdx
	ja L_469499
L_219740:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1479,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_219741+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219741
.p2align 0x4
.long 0x452
L_219741:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq %rax,0x8(%rbp)
L_219742:
	movq $0x0,0x18(%rbp)
.p2align 0x4,,0x7
loop_2447:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_469498
.p2align 0x4,,0x7
L_219743:
	movq 0x18(%rbp),%r15
	cmpq 0x10(%rbp),%r15
	jnl L_469497
L_219745:
	movl %r15d,%r14d
	movq 0x0(%rbp),%r15
	cmpq $0x1,%r15
	je L_469496
L_219746:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%rax
	shrq $0x1,%rax
	subq $0x1C0C,%rax
	cmpq $0x7,%rax
	ja L_469484
	leaq jumpTable_664(%rip),%rbx
	jmp *(%rbx,%rax,8)
.data
.p2align 0x4
jumpTable_664:
.quad L_469493,L_469492,L_469491,L_469490,L_469488,L_469487,L_469486,L_469485
.text
.p2align 0x4
L_469484:
L_219747:
	movq 0x0(%rbp),%r15
	movq 0x18(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x8(%r15),%r11
	movq %r11,0x28(%rbp)
	movq 0x0(%r15),%r11
	movq %r11,0x30(%rbp)
	movslq %r14d,%r11
	movq 0x20(%r15),%r10
	movb 0x0(%r10,%r11,1),%r14b
	movb %r14b,0x38(%rbp)
	movl 0x0(%r13),%r14d
	movl %r14d,0x3C(%rbp)
	movq 0x10(%r15),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x40(%rbp)
	movq 0x8(%r13),%r10
	movq 0x8(%r10),%r9
	movq %r9,0x48(%rbp)
	movslq %r14d,%r9
	shlq $0x1,%r9
	orq $0x1,%r9
	movq %r9,0x50(%rbp)
	movq 0x0(%r10),%r14
	movq 0x8(%r14),%r9
	movq %r9,0x58(%rbp)
	movq 0x0(%r14),%r9
	movq %r9,0x60(%rbp)
	movq %r11,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_219748+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_469485:
L_219871:
	movq 0x0(%rbp),%r15
	movq 0x18(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x8(%r15),%r11
	movq %r11,0x28(%rbp)
	movq 0x0(%r15),%r11
	movq %r11,0x30(%rbp)
	movslq %r14d,%r11
	movq 0x20(%r15),%r10
	movb 0x0(%r10,%r11,1),%r14b
	movb %r14b,0x38(%rbp)
	movl 0x0(%r13),%r14d
	movl %r14d,0x3C(%rbp)
	movq 0x10(%r15),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x40(%rbp)
	movq 0x8(%r13),%r10
	movq 0x8(%r10),%r9
	movq %r9,0x48(%rbp)
	movslq %r14d,%r9
	shlq $0x1,%r9
	orq $0x1,%r9
	movq %r9,0x50(%rbp)
	movq 0x0(%r10),%r14
	movq 0x8(%r14),%r9
	movq %r9,0x58(%rbp)
	movq 0x0(%r14),%r9
	movq %r9,0x60(%rbp)
	movq %r11,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_219872+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_469486:
L_219848:
	movq 0x0(%rbp),%r15
	movq 0x18(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x8(%r15),%r11
	movq %r11,0x28(%rbp)
	movq 0x0(%r15),%r11
	movq %r11,0x30(%rbp)
	movslq %r14d,%r11
	movq 0x20(%r15),%r10
	movb 0x0(%r10,%r11,1),%r14b
	movb %r14b,0x38(%rbp)
	movl 0x0(%r13),%r14d
	movl %r14d,0x3C(%rbp)
	movq 0x10(%r15),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x40(%rbp)
	movq 0x8(%r13),%r10
	movq 0x8(%r10),%r9
	movq %r9,0x48(%rbp)
	movslq %r14d,%r9
	shlq $0x1,%r9
	orq $0x1,%r9
	movq %r9,0x50(%rbp)
	movq 0x0(%r10),%r14
	movq 0x8(%r14),%r9
	movq %r9,0x58(%rbp)
	movq 0x0(%r14),%r9
	movq %r9,0x60(%rbp)
	movq %r11,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_219849+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_469487:
L_219825:
	movq 0x0(%rbp),%r15
	movq 0x18(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x8(%r15),%r11
	movq %r11,0x28(%rbp)
	movq 0x0(%r15),%r11
	movq %r11,0x30(%rbp)
	movslq %r14d,%r11
	movq 0x20(%r15),%r10
	movb 0x0(%r10,%r11,1),%r14b
	movb %r14b,0x38(%rbp)
	movl 0x0(%r13),%r14d
	movl %r14d,0x3C(%rbp)
	movq 0x10(%r15),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x40(%rbp)
	movq 0x8(%r13),%r10
	movq 0x8(%r10),%r9
	movq %r9,0x48(%rbp)
	movslq %r14d,%r9
	shlq $0x1,%r9
	orq $0x1,%r9
	movq %r9,0x50(%rbp)
	movq 0x0(%r10),%r14
	movq 0x8(%r14),%r9
	movq %r9,0x58(%rbp)
	movq 0x0(%r14),%r9
	movq %r9,0x60(%rbp)
	movq %r11,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_219826+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_469488:
L_219823:
	movq 0x0(%rbp),%r13
	movl 0x0(%r13),%r11d
	movq 0x8(%r13),%r10
	subl %r14d,%r11d
	jo L_469489
L_219824:
	movslq %r11d,%r15
	movq 0x0(%r10,%r15,8),%r10
	movq %r10,%r15
.p2align 0x4,,0x7
L_219759:
	movq 0x8(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x18(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x18(%rbp)
	jmp loop_2447
.p2align 0x4
L_469489:
L_219757:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_469490:
L_219822:
	movq 0x0(%rbp),%r14
	movb 0x0(%r14),%r13b
	movq 0x8(%r14),%r15
	movq $0xC29,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movzbl %r13b,%r11d
	movl %r11d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq %r14,%r15
	jmp L_219759
.p2align 0x4
L_469491:
L_219799:
	movq 0x0(%rbp),%r15
	movq 0x18(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x8(%r15),%r11
	movq %r11,0x28(%rbp)
	movq 0x0(%r15),%r11
	movq %r11,0x30(%rbp)
	movslq %r14d,%r11
	movq 0x20(%r15),%r10
	movb 0x0(%r10,%r11,1),%r14b
	movb %r14b,0x38(%rbp)
	movl 0x0(%r13),%r14d
	movl %r14d,0x3C(%rbp)
	movq 0x10(%r15),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x40(%rbp)
	movq 0x8(%r13),%r10
	movq 0x8(%r10),%r9
	movq %r9,0x48(%rbp)
	movslq %r14d,%r9
	shlq $0x1,%r9
	orq $0x1,%r9
	movq %r9,0x50(%rbp)
	movq 0x0(%r10),%r14
	movq 0x8(%r14),%r9
	movq %r9,0x58(%rbp)
	movq 0x0(%r14),%r9
	movq %r9,0x60(%rbp)
	movq %r11,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_219800+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_469492:
L_219776:
	movq 0x0(%rbp),%r15
	movq 0x18(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x8(%r15),%r11
	movq %r11,0x28(%rbp)
	movq 0x0(%r15),%r11
	movq %r11,0x30(%rbp)
	movslq %r14d,%r11
	movq 0x20(%r15),%r10
	movb 0x0(%r10,%r11,1),%r14b
	movb %r14b,0x38(%rbp)
	movl 0x0(%r13),%r14d
	movl %r14d,0x3C(%rbp)
	movq 0x10(%r15),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x40(%rbp)
	movq 0x8(%r13),%r10
	movq 0x8(%r10),%r9
	movq %r9,0x48(%rbp)
	movslq %r14d,%r9
	shlq $0x1,%r9
	orq $0x1,%r9
	movq %r9,0x50(%rbp)
	movq 0x0(%r10),%r14
	movq 0x8(%r14),%r9
	movq %r9,0x58(%rbp)
	movq 0x0(%r14),%r9
	movq %r9,0x60(%rbp)
	movq %r11,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_219777+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_469493:
L_219772:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	cmpl $0x0,%r14d
	je L_469495
	cmpl $0x1,%r14d
	je L_469494
L_219773:
	movq (globalObjptr+0x4A8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_469494:
L_219775:
	movq %r11,%r15
	jmp L_219759
.p2align 0x4
L_469495:
	movq %r13,%r15
	jmp L_219759
.p2align 0x4
L_469496:
L_219894:
	movq (globalObjptr+0x4A0)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_469497:
L_219744:
	movq 0x8(%rbp),%r14
	movq $0xAE3,0xFFFFFFFFFFFFFFF8(%r14)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_469498:
L_219895:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_219896+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219896
.p2align 0x4
.long 0x45C
L_219896:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	jmp L_219743
.p2align 0x4
L_469499:
L_219897:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_469500:
L_219898:
	movq (globalObjptr+0xC38)(%rip),%r15
	movq %r15,0x8(%rbp)
	jmp L_219742
.p2align 0x4
.long 0x35E9
L_219748:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movl 0x70(%rbp),%r15d
	movl %r15d,0x68(%rbp)
	movl %r15d,0x70(%rbp)
	movq $0x3,0x78(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x70,%rbp
	leaq (L_219749+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x35E9
L_219872:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movl 0x70(%rbp),%r15d
	movl %r15d,0x68(%rbp)
	movl %r15d,0x70(%rbp)
	movq $0x3,0x78(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x70,%rbp
	leaq (L_219873+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x35E9
L_219849:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movl 0x70(%rbp),%r15d
	movl %r15d,0x68(%rbp)
	movl %r15d,0x70(%rbp)
	movq $0x3,0x78(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x70,%rbp
	leaq (L_219850+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x35E9
L_219826:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movl 0x70(%rbp),%r15d
	movl %r15d,0x68(%rbp)
	movl %r15d,0x70(%rbp)
	movq $0x3,0x78(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x70,%rbp
	leaq (L_219827+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x35E9
L_219800:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movl 0x70(%rbp),%r15d
	movl %r15d,0x68(%rbp)
	movl %r15d,0x70(%rbp)
	movq $0x3,0x78(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x70,%rbp
	leaq (L_219801+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x35E9
L_219777:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movl 0x70(%rbp),%r15d
	movl %r15d,0x68(%rbp)
	movl %r15d,0x70(%rbp)
	movq $0x3,0x78(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x70,%rbp
	leaq (L_219778+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x35EA
L_219749:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_219750+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x35EA
L_219873:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_219874+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x35EA
L_219850:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_219851+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x35EA
L_219827:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_219828+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x35EA
L_219801:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_219802+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x35EA
L_219778:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_219779+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x5C9
L_219750:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_219751
L_219770:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_219771+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219771
.p2align 0x4
.long 0xFBC
L_219771:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_219751:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x21C9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq 0x48(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq %r14,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_219752+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_0
.p2align 0x4
.long 0x5C9
L_219874:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_219875
L_219892:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_219893+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219893
.p2align 0x4
.long 0xFBC
L_219893:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_219875:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x21C9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq 0x48(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq %r14,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_219876+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_0
.p2align 0x4
.long 0x5C9
L_219851:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_219852
L_219869:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_219870+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219870
.p2align 0x4
.long 0xFBC
L_219870:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_219852:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x21C9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq 0x48(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq %r14,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_219853+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_0
.p2align 0x4
.long 0x5C9
L_219828:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_219829
L_219846:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_219847+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219847
.p2align 0x4
.long 0xFBC
L_219847:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_219829:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x21C9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq 0x48(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq %r14,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_219830+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_0
.p2align 0x4
.long 0x5C9
L_219802:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_219803
L_219820:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_219821+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219821
.p2align 0x4
.long 0xFBC
L_219821:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_219803:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x21C9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq 0x48(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq %r14,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_219804+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_0
.p2align 0x4
.long 0x5C9
L_219779:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_219780
L_219797:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_219798+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219798
.p2align 0x4
.long 0xFBC
L_219798:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_219780:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x21C9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq 0x48(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq %r14,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_219781+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_0
.p2align 0x4
.long 0x11AD
L_219752:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	movb 0x38(%rbp),%r14b
	movb %r14b,0x48(%rbp)
	movq 0x28(%rbp),%r14
	movq %r14,0x50(%rbp)
	movq %r15,0x58(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x48,%rbp
	leaq (memloc_20+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp shift_5
.p2align 0x4
.long 0x11AD
L_219876:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	movb 0x38(%rbp),%r14b
	movb %r14b,0x48(%rbp)
	movq 0x28(%rbp),%r14
	movq %r14,0x50(%rbp)
	movq %r15,0x58(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x48,%rbp
	leaq (memloc_25+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp shift_5
.p2align 0x4
.long 0x11AD
L_219853:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	movb 0x38(%rbp),%r14b
	movb %r14b,0x48(%rbp)
	movq 0x28(%rbp),%r14
	movq %r14,0x50(%rbp)
	movq %r15,0x58(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x48,%rbp
	leaq (memloc_24+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp shift_5
.p2align 0x4
.long 0x11AD
L_219830:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	movb 0x38(%rbp),%r14b
	movb %r14b,0x48(%rbp)
	movq 0x28(%rbp),%r14
	movq %r14,0x50(%rbp)
	movq %r15,0x58(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x48,%rbp
	leaq (memloc_23+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp shift_5
.p2align 0x4
.long 0x11AD
L_219804:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	movb 0x38(%rbp),%r14b
	movb %r14b,0x48(%rbp)
	movq 0x28(%rbp),%r14
	movq %r14,0x50(%rbp)
	movq %r15,0x58(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x48,%rbp
	leaq (memloc_22+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp shift_5
.p2align 0x4
.long 0x11AD
L_219781:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	movb 0x38(%rbp),%r14b
	movb %r14b,0x48(%rbp)
	movq 0x28(%rbp),%r14
	movq %r14,0x50(%rbp)
	movq %r15,0x58(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x48,%rbp
	leaq (memloc_21+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp shift_5
.p2align 0x4
.long 0x35EB
memloc_20:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_219753
L_219768:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_219769+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219769
.p2align 0x4
.long 0x35EC
L_219769:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_219753:
	movq $0x21D1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0xC29,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movb 0x38(%rbp),%r13b
	movzbl %r13b,%ecx
	movl %ecx,0x0(%r14)
	movl $0x0,0x4(%r14)
	cmpb $0x1,%r13b
	je L_469513
	cmpb $0x2,%r13b
	je L_469512
	cmpb $0x3,%r13b
	je L_469511
	cmpb $0x6,%r13b
	je L_469510
	cmpb $0x7,%r13b
	je L_469509
L_219755:
	movl $0x4,%ecx
	movq %r14,%r15
L_219756:
	addl 0x3C(%rbp),%ecx
	jo L_219757
L_219758:
	movq 0x20(%rbp),%r14
	movl %ecx,0x0(%r14)
	jmp L_219759
.p2align 0x4
L_469509:
L_219767:
	movl $0x1,%ecx
	movq %r14,%r15
	jmp L_219756
.p2align 0x4
L_469510:
	movq %r14,%r15
L_219761:
	movl $0x2,%ecx
	jmp L_219756
.p2align 0x4
L_469511:
L_219763:
	movl $0x8,%ecx
	movq %r14,%r15
	jmp L_219756
.p2align 0x4
L_469512:
L_219762:
	movl $0xA,%ecx
	movq %r14,%r15
	jmp L_219756
.p2align 0x4
L_469513:
	movq %r14,%r15
	jmp L_219761
.p2align 0x4
.long 0x35EB
memloc_25:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_219877
L_219890:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_219891+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219891
.p2align 0x4
.long 0x35EC
L_219891:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_219877:
	movq $0x21D1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0xC29,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movb 0x38(%rbp),%r13b
	movzbl %r13b,%ecx
	movl %ecx,0x0(%r14)
	movl $0x0,0x4(%r14)
	cmpb $0x1,%r13b
	je L_469520
	cmpb $0x2,%r13b
	je L_469519
	cmpb $0x3,%r13b
	je L_469518
	cmpb $0x6,%r13b
	je L_469517
	cmpb $0x7,%r13b
	je L_469516
L_219879:
	movl $0x4,%ecx
	movq %r14,%r15
L_219880:
	addl 0x3C(%rbp),%ecx
	jo L_219757
L_219881:
	movq 0x20(%rbp),%r14
	movl %ecx,0x0(%r14)
	jmp L_219759
.p2align 0x4
L_469516:
L_219889:
	movl $0x1,%ecx
	movq %r14,%r15
	jmp L_219880
.p2align 0x4
L_469517:
	movq %r14,%r15
L_219883:
	movl $0x2,%ecx
	jmp L_219880
.p2align 0x4
L_469518:
L_219885:
	movl $0x8,%ecx
	movq %r14,%r15
	jmp L_219880
.p2align 0x4
L_469519:
L_219884:
	movl $0xA,%ecx
	movq %r14,%r15
	jmp L_219880
.p2align 0x4
L_469520:
	movq %r14,%r15
	jmp L_219883
.p2align 0x4
.long 0x35EB
memloc_24:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_219854
L_219867:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_219868+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219868
.p2align 0x4
.long 0x35EC
L_219868:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_219854:
	movq $0x21D1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0xC29,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movb 0x38(%rbp),%r13b
	movzbl %r13b,%ecx
	movl %ecx,0x0(%r14)
	movl $0x0,0x4(%r14)
	cmpb $0x1,%r13b
	je L_469527
	cmpb $0x2,%r13b
	je L_469526
	cmpb $0x3,%r13b
	je L_469525
	cmpb $0x6,%r13b
	je L_469524
	cmpb $0x7,%r13b
	je L_469523
L_219856:
	movl $0x4,%ecx
	movq %r14,%r15
L_219857:
	addl 0x3C(%rbp),%ecx
	jo L_219757
L_219858:
	movq 0x20(%rbp),%r14
	movl %ecx,0x0(%r14)
	jmp L_219759
.p2align 0x4
L_469523:
L_219866:
	movl $0x1,%ecx
	movq %r14,%r15
	jmp L_219857
.p2align 0x4
L_469524:
	movq %r14,%r15
L_219860:
	movl $0x2,%ecx
	jmp L_219857
.p2align 0x4
L_469525:
L_219862:
	movl $0x8,%ecx
	movq %r14,%r15
	jmp L_219857
.p2align 0x4
L_469526:
L_219861:
	movl $0xA,%ecx
	movq %r14,%r15
	jmp L_219857
.p2align 0x4
L_469527:
	movq %r14,%r15
	jmp L_219860
.p2align 0x4
.long 0x35EB
memloc_23:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_219831
L_219844:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_219845+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219845
.p2align 0x4
.long 0x35EC
L_219845:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_219831:
	movq $0x21D1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0xC29,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movb 0x38(%rbp),%r13b
	movzbl %r13b,%ecx
	movl %ecx,0x0(%r14)
	movl $0x0,0x4(%r14)
	cmpb $0x1,%r13b
	je L_469534
	cmpb $0x2,%r13b
	je L_469533
	cmpb $0x3,%r13b
	je L_469532
	cmpb $0x6,%r13b
	je L_469531
	cmpb $0x7,%r13b
	je L_469530
L_219833:
	movl $0x4,%ecx
	movq %r14,%r15
L_219834:
	addl 0x3C(%rbp),%ecx
	jo L_219757
L_219835:
	movq 0x20(%rbp),%r14
	movl %ecx,0x0(%r14)
	jmp L_219759
.p2align 0x4
L_469530:
L_219843:
	movl $0x1,%ecx
	movq %r14,%r15
	jmp L_219834
.p2align 0x4
L_469531:
	movq %r14,%r15
L_219837:
	movl $0x2,%ecx
	jmp L_219834
.p2align 0x4
L_469532:
L_219839:
	movl $0x8,%ecx
	movq %r14,%r15
	jmp L_219834
.p2align 0x4
L_469533:
L_219838:
	movl $0xA,%ecx
	movq %r14,%r15
	jmp L_219834
.p2align 0x4
L_469534:
	movq %r14,%r15
	jmp L_219837
.p2align 0x4
.long 0x35EB
memloc_22:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_219805
L_219818:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_219819+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219819
.p2align 0x4
.long 0x35EC
L_219819:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_219805:
	movq $0x21D1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0xC29,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movb 0x38(%rbp),%r13b
	movzbl %r13b,%ecx
	movl %ecx,0x0(%r14)
	movl $0x0,0x4(%r14)
	cmpb $0x1,%r13b
	je L_469541
	cmpb $0x2,%r13b
	je L_469540
	cmpb $0x3,%r13b
	je L_469539
	cmpb $0x6,%r13b
	je L_469538
	cmpb $0x7,%r13b
	je L_469537
L_219807:
	movl $0x4,%ecx
	movq %r14,%r15
L_219808:
	addl 0x3C(%rbp),%ecx
	jo L_219757
L_219809:
	movq 0x20(%rbp),%r14
	movl %ecx,0x0(%r14)
	jmp L_219759
.p2align 0x4
L_469537:
L_219817:
	movl $0x1,%ecx
	movq %r14,%r15
	jmp L_219808
.p2align 0x4
L_469538:
	movq %r14,%r15
L_219811:
	movl $0x2,%ecx
	jmp L_219808
.p2align 0x4
L_469539:
L_219813:
	movl $0x8,%ecx
	movq %r14,%r15
	jmp L_219808
.p2align 0x4
L_469540:
L_219812:
	movl $0xA,%ecx
	movq %r14,%r15
	jmp L_219808
.p2align 0x4
L_469541:
	movq %r14,%r15
	jmp L_219811
.p2align 0x4
.long 0x35EB
memloc_21:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_219782
L_219795:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_219796+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_219796
.p2align 0x4
.long 0x35EC
L_219796:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_219782:
	movq $0x21D1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0xC29,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movb 0x38(%rbp),%r13b
	movzbl %r13b,%ecx
	movl %ecx,0x0(%r14)
	movl $0x0,0x4(%r14)
	cmpb $0x1,%r13b
	je L_469548
	cmpb $0x2,%r13b
	je L_469547
	cmpb $0x3,%r13b
	je L_469546
	cmpb $0x6,%r13b
	je L_469545
	cmpb $0x7,%r13b
	je L_469544
L_219784:
	movl $0x4,%ecx
	movq %r14,%r15
L_219785:
	addl 0x3C(%rbp),%ecx
	jo L_219757
L_219786:
	movq 0x20(%rbp),%r14
	movl %ecx,0x0(%r14)
	jmp L_219759
.p2align 0x4
L_469544:
L_219794:
	movl $0x1,%ecx
	movq %r14,%r15
	jmp L_219785
.p2align 0x4
L_469545:
	movq %r14,%r15
L_219788:
	movl $0x2,%ecx
	jmp L_219785
.p2align 0x4
L_469546:
L_219790:
	movl $0x8,%ecx
	movq %r14,%r15
	jmp L_219785
.p2align 0x4
L_469547:
L_219789:
	movl $0xA,%ecx
	movq %r14,%r15
	jmp L_219785
.p2align 0x4
L_469548:
	movq %r14,%r15
	jmp L_219788
