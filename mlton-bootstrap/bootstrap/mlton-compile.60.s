/* MLton 20130715 (built Mon Jun 13 11:54:01 AEST 2016 on ports.extensibl.com) */
/*   created this file on Mon Jun 13 12:09:31 2016. */
/* Do not edit this file. */
/* Flag settings:  */
/*    align: 8 */
/*    atMLtons: (mlton-compile, @MLton, --) */
/*    chunk: chunk per function */
/*    closureConvertGlobalize: true */
/*    closureConvertShrink: true */
/*    codegen: amd64 */
/*    contifyIntoMain: false */
/*    debug: false */
/*    defaultChar: char8 */
/*    defaultWideChar: widechar32 */
/*    defaultInt: int32 */
/*    defaultReal: real64 */
/*    defaultWord: word32 */
/*    diag passes: [] */
/*    drop passes: [] */
/*    elaborate allowConstant (default): false */
/*    elaborate allowConstant (enabled): true */
/*    elaborate allowFFI (default): false */
/*    elaborate allowFFI (enabled): true */
/*    elaborate allowPrim (default): false */
/*    elaborate allowPrim (enabled): true */
/*    elaborate allowOverload (default): false */
/*    elaborate allowOverload (enabled): true */
/*    elaborate allowRebindEquals (default): false */
/*    elaborate allowRebindEquals (enabled): true */
/*    elaborate deadCode (default): false */
/*    elaborate deadCode (enabled): true */
/*    elaborate forceUsed (default): false */
/*    elaborate forceUsed (enabled): true */
/*    elaborate ffiStr (default):  */
/*    elaborate ffiStr (enabled): true */
/*    elaborate nonexhaustiveExnMatch (default): default */
/*    elaborate nonexhaustiveExnMatch (enabled): true */
/*    elaborate nonexhaustiveMatch (default): warn */
/*    elaborate nonexhaustiveMatch (enabled): true */
/*    elaborate redundantMatch (default): warn */
/*    elaborate redundantMatch (enabled): true */
/*    elaborate resolveScope (default): strdec */
/*    elaborate resolveScope (enabled): true */
/*    elaborate sequenceNonUnit (default): warn */
/*    elaborate sequenceNonUnit (enabled): true */
/*    elaborate warnUnused (default): true */
/*    elaborate warnUnused (enabled): true */
/*    elaborate only: false */
/*    emit main: true */
/*    export header: None */
/*    exn history: false */
/*    generated output format: executable */
/*    gc check: Limit */
/*    indentation: 3 */
/*    inlineIntoMain: true */
/*    inlineLeafA: {loops = true, repeat = true, size = Some 20} */
/*    inlineLeafB: {loops = true, repeat = true, size = Some 40} */
/*    inlineNonRec: {small = 60, product = 320} */
/*    input file: mlton */
/*    keep CoreML: false */
/*    keep def use: true */
/*    keep dot: false */
/*    keep Machine: false */
/*    keep passes: [] */
/*    keep RSSA: false */
/*    keep SSA: false */
/*    keep SSA2: false */
/*    keep SXML: false */
/*    keep XML: false */
/*    extra_: false */
/*    lib dir: /usr/ports/pobj/mlton-20130715/mlton-on-20130715-release/build/lib */
/*    lib target dir: /usr/ports/pobj/mlton-20130715/mlton-on-20130715-release/build/lib/targets/self */
/*    loop passes: 1 */
/*    mark cards: true */
/*    max function size: 10000 */
/*    mlb path vars: [{var = MLTON_ROOT, path = $(LIB_MLTON_DIR)/sml}, {var = SML_LIB, path = $(LIB_MLTON_DIR)/sml}] */
/*    native commented: 0 */
/*    native live stack: false */
/*    native optimize: 1 */
/*    native move hoist: true */
/*    native copy prop: true */
/*    native copy prop cutoff: 1000 */
/*    native cutoff: 100 */
/*    native live transfer: 8 */
/*    native shuffle: true */
/*    native ieee fp: false */
/*    native split: Some 20000 */
/*    optimizationPasses: [<ssa2::default>, <ssa::default>, <sxml::default>, <xml::default>] */
/*    polyvariance: Some {hofo = true, rounds = 2, small = 30, product = 300} */
/*    prefer abs paths: false */
/*    prof passes: [] */
/*    profile: None */
/*    profile branch: false */
/*    profile C: [] */
/*    profile IL: ProfileSource */
/*    profile include/exclude: [(Seq [Star [.], Or [Seq [Seq [[$], [(], [S], [M], [L], [_], [L], [I], [B], [)]]]], Star [.]], false)] */
/*    profile raise: false */
/*    profile stack: false */
/*    profile val: false */
/*    show basis: None */
/*    show def-use: None */
/*    show types: true */
/*    target: self */
/*    target arch: AMD64 */
/*    target OS: OpenBSD */
/*    type check: false */
/*    verbosity: Pass */
/*    warn unrecognized annotation: true */
/*    warn deprecated features: true */
/*    zone cut depth: 100 */
.text
.p2align 0x4
.globl finish_10
.hidden finish_10
finish_10:
L_181744:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_181745
L_181919:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_181920+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_181920
.p2align 0x4
.long 0x45B
L_181920:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_181745:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x10(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_181747
L_181748:
	decl %r13d
	movl %r13d,0x28(%rbp)
	jo L_181749
L_181750:
	movq $0x1,0x30(%rbp)
	movl %r13d,0x2C(%rbp)
.p2align 0x4,,0x7
loop_1870:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_455304
.p2align 0x4,,0x7
L_181751:
	movl 0x2C(%rbp),%r15d
	cmpl $0x0,%r15d
	jl L_455248
L_181752:
	movl %r15d,%r14d
	decl %r14d
	movslq %r15d,%r13
	movl %r14d,0x2C(%rbp)
	movq 0x10(%rbp),%r15
	movq 0x0(%r15,%r13,8),%r14
	movq $0x20ED,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x30(%rbp)
	jmp loop_1870
.p2align 0x4
L_455248:
L_181753:
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_455303
L_181754:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	movq %r13,0x38(%rbp)
	movq $0x1,0x40(%rbp)
.p2align 0x4,,0x7
L_181755:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_455302
.p2align 0x4,,0x7
L_181756:
	movq 0x40(%rbp),%r13
	cmpq $0x1,%r13
	je L_181764
L_181757:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
.p2align 0x4,,0x7
L_181758:
	movq 0x38(%rbp),%r9
	movq 0x8(%r9),%r8
	movq 0x10(%r8),%rsp
	movq 0x8(%r15),%r9
	movq 0x10(%r9),%r13
	cmpq %rsp,%r13
	je L_455299
L_181759:
	movq 0xFFFFFFFFFFFFFFF0(%rsp),%r11
	cmpq 0xFFFFFFFFFFFFFFF0(%r13),%r11
	jne L_455296
L_181898:
	xorq %r10,%r10
	movq %rsp,%r15
.p2align 0x4,,0x7
vectorEqualLoop_151:
	cmpq %r10,%r11
	je L_455294
L_181899:
	movb 0x0(%r13,%r10,1),%r9b
	cmpb %r9b,0x0(%r15,%r10,1)
	jne L_455249
L_181906:
	incq %r10
	jmp vectorEqualLoop_151
.p2align 0x4
L_455249:
L_181900:
	cmpq $0x1,%r14
	je L_455250
L_181901:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_181758
.p2align 0x4
L_455250:
L_181902:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_455293
.p2align 0x4,,0x7
L_181764:
	movq $0x20ED,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_455251
L_181765:
	movq %r15,0x40(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	movq %r15,0x38(%rbp)
	jmp L_181755
.p2align 0x4
L_455251:
L_181766:
	movq %r15,0x30(%rbp)
L_181767:
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je L_455292
L_181768:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x20(%rbp)
	movq %r14,0x38(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x40(%rbp)
.p2align 0x4,,0x7
L_181769:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_455291
.p2align 0x4,,0x7
L_181770:
	movq 0x30(%rbp),%r13
	cmpq $0x1,%r13
	je L_181778
L_181771:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
.p2align 0x4,,0x7
L_181772:
	movq 0x38(%rbp),%r9
	movq 0x8(%r9),%r8
	movq 0x10(%r8),%rsp
	movq 0x8(%r15),%r9
	movq 0x10(%r9),%r13
	cmpq %rsp,%r13
	je L_455288
L_181773:
	movq 0xFFFFFFFFFFFFFFF0(%rsp),%r11
	cmpq 0xFFFFFFFFFFFFFFF0(%r13),%r11
	jne L_455285
L_181877:
	xorq %r10,%r10
	movq %rsp,%r15
.p2align 0x4,,0x7
vectorEqualLoop_150:
	cmpq %r10,%r11
	je L_455283
L_181878:
	movb 0x0(%r13,%r10,1),%r9b
	cmpb %r9b,0x0(%r15,%r10,1)
	jne L_455252
L_181885:
	incq %r10
	jmp vectorEqualLoop_150
.p2align 0x4
L_455252:
L_181879:
	cmpq $0x1,%r14
	je L_455253
L_181880:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_181772
.p2align 0x4
L_455253:
L_181881:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_455282
.p2align 0x4,,0x7
L_181778:
	movq $0x20ED,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_455254
L_181779:
	movq %r15,0x40(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x38(%rbp)
	jmp L_181769
.p2align 0x4
L_455254:
L_181780:
	movq %r15,0x20(%rbp)
L_181781:
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_455281
L_181782:
	movq 0x8(%r14),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_181783:
	incl %ecx
	jo L_181749
L_181784:
	cmpq $0x1,%r15
	je L_455255
L_181785:
	movq 0x8(%r15),%r15
	jmp L_181783
.p2align 0x4
L_455255:
L_181786:
L_181787:
	movslq %ecx,%rdx
	movq %rdx,0x30(%rbp)
	testq %rdx,%rdx
	jz L_455279
L_181788:
	cmpq $0x7FFFFFFF,%rdx
	ja L_455278
L_181789:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1497,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_181790+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_181790
.p2align 0x4
.long 0x5FD
L_181790:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq %rax,0x38(%rbp)
L_181791:
	movq 0x20(%rbp),%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_1871:
	cmpq 0x30(%rbp),%r15
	jnl L_455257
L_181869:
	cmpq $0x1,%r14
	je L_455256
L_181870:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq 0x38(%rbp),%r11
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r13,0x0(%r11,%r15,8)
	incq %r15
	jmp loop_1871
.p2align 0x4
L_455256:
L_181871:
	movq (globalObjptr+0x4B0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_455257:
L_181792:
	movq 0x38(%rbp),%r15
	movq $0x59,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_455277
L_181793:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x18(%rbp)
	movq %r14,0x20(%rbp)
	movq $0x1,0x30(%rbp)
.p2align 0x4,,0x7
L_181794:
	movq 0x38(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%ecx
	movslq %ecx,%r14
	cmpq %r14,%r15
	jne L_455276
L_181796:
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_1872:
	cmpl %ecx,%ebx
	je L_455264
L_181797:
	movslq %ebx,%r14
	cmpq %r15,%r14
	jnb L_455263
L_181799:
	movq 0x20(%rbp),%r10
	movq 0x8(%r10),%r9
	movq 0x10(%r9),%r8
	movq %r8,0x40(%rbp)
	movq 0x38(%rbp),%r10
	movq 0x0(%r10,%r14,8),%r9
	movq 0x8(%r9),%rsp
	movq 0x10(%rsp),%rsi
	cmpq %rsi,%r8
	je L_181809
L_181800:
	movq 0xFFFFFFFFFFFFFFF0(%r8),%r13
	cmpq %r13,0xFFFFFFFFFFFFFFF0(%rsi)
	jne L_181802
L_181804:
	xorq %r11,%r11
	movq %rsi,%r14
.p2align 0x4,,0x7
vectorEqualLoop_149:
	cmpq %r13,%r11
	je L_455260
L_181805:
	movq 0x40(%rbp),%r9
	movb 0x0(%r9,%r11,1),%r10b
	cmpb %r10b,0x0(%r14,%r11,1)
	jne L_455258
L_181807:
	incq %r11
	jmp vectorEqualLoop_149
.p2align 0x4
L_455258:
L_181802:
	incl %ebx
	jo L_455259
L_181803:
	jmp loop_1872
.p2align 0x4
L_455259:
L_181749:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_455260:
L_181809:
	movq 0x20(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	movq (globalObjptr+0xF5B0)(%rip),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_181810+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_455263:
L_181798:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_455264:
L_181862:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_455275
.p2align 0x4,,0x7
L_181863:
	movq $0x20ED,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_455265
L_181864:
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_181794
.p2align 0x4
L_455265:
L_181865:
	movq 0x30(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq $0x1,0x30(%rbp)
.p2align 0x4,,0x7
L_181827:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_455274
.p2align 0x4,,0x7
L_181828:
	movq $0x20ED,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_455266
L_181829:
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_181827
.p2align 0x4
L_455266:
L_181830:
	movq %r15,0x18(%rbp)
L_181831:
	movq $0x1,0x20(%rbp)
.p2align 0x4,,0x7
loop_1873:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_455273
.p2align 0x4,,0x7
L_181832:
	movl 0x28(%rbp),%r15d
	cmpl $0x0,%r15d
	jl L_455267
L_181833:
	movl %r15d,%r14d
	decl %r14d
	movslq %r15d,%r13
	movl %r14d,0x28(%rbp)
	movq 0x10(%rbp),%r15
	movq 0x0(%r15,%r13,8),%r14
	movq $0x20ED,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x20(%rbp)
	jmp loop_1873
.p2align 0x4
L_455267:
L_181834:
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_455272
L_181835:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r13,0x28(%rbp)
	movq $0x1,0x30(%rbp)
.p2align 0x4,,0x7
L_181836:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_455271
.p2align 0x4,,0x7
L_181837:
	movq $0x20ED,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_455268
L_181838:
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x28(%rbp)
	jmp L_181836
.p2align 0x4
L_455268:
L_181839:
	movq 0x30(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x50(%rbp)
.p2align 0x4,,0x7
L_181840:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_455270
.p2align 0x4,,0x7
L_181841:
	movq $0x20ED,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_455269
L_181842:
	movq %r15,0x50(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x40(%rbp)
	movq %r15,0x48(%rbp)
	jmp L_181840
.p2align 0x4
L_455269:
L_181844:
	movq $0xB55,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq %r14,0x0(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_455270:
L_181845:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_181846+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_181846
.p2align 0x4
.long 0x9B1
L_181846:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	jmp L_181841
.p2align 0x4
L_455271:
L_181847:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_181848+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_181848
.p2align 0x4
.long 0x5E7
L_181848:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_181837
.p2align 0x4
L_455272:
L_181849:
	movq 0x18(%rbp),%r13
	movq %r13,%r15
	jmp L_181844
.p2align 0x4
L_455273:
L_181850:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_181851+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_181851
.p2align 0x4
.long 0x64C
L_181851:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_181832
.p2align 0x4
L_455274:
L_181852:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_181853+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_181853
.p2align 0x4
.long 0xA8F
L_181853:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_181828
.p2align 0x4
L_455275:
L_181866:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_181867+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_181867
.p2align 0x4
.long 0x735
L_181867:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_181863
.p2align 0x4
L_455276:
L_181747:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_455277:
L_181868:
	movq $0x1,0x18(%rbp)
	jmp L_181831
.p2align 0x4
L_455278:
L_181872:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_455279:
L_181873:
	movq (globalObjptr+0xD20)(%rip),%r15
	movq %r15,0x38(%rbp)
	jmp L_181791
.p2align 0x4
L_455281:
L_181874:
	xorl %ecx,%ecx
	jmp L_181787
.p2align 0x4
L_455282:
L_181883:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_181884+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_181884
.p2align 0x4
.long 0x1E33
L_181884:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_181778
.p2align 0x4
L_455283:
L_181886:
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je L_455284
L_181887:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x20(%rbp)
	movq %r14,0x38(%rbp)
	jmp L_181769
.p2align 0x4
L_455284:
L_181888:
	movq 0x40(%rbp),%r15
	movq %r15,0x20(%rbp)
	jmp L_181781
.p2align 0x4
L_455285:
L_181774:
	cmpq $0x1,%r14
	je L_455286
L_181775:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_181772
.p2align 0x4
L_455286:
L_181776:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_181778
L_181875:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_181876+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_181876
.p2align 0x4
.long 0x1E33
L_181876:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_181778
.p2align 0x4
L_455288:
L_181889:
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je L_455289
L_181890:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x20(%rbp)
	movq %r14,0x38(%rbp)
	jmp L_181769
.p2align 0x4
L_455289:
L_181891:
	movq 0x40(%rbp),%r15
	movq %r15,0x20(%rbp)
	jmp L_181781
.p2align 0x4
L_455291:
L_181893:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_181894+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_181894
.p2align 0x4
.long 0x1E33
L_181894:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_181770
.p2align 0x4
L_455292:
L_181895:
	movq 0x30(%rbp),%r15
	movq %r15,0x20(%rbp)
	jmp L_181781
.p2align 0x4
L_455293:
L_181904:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_181905+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_181905
.p2align 0x4
.long 0x1E33
L_181905:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_181764
.p2align 0x4
L_455294:
L_181907:
	movq 0x30(%rbp),%r15
	cmpq $0x1,%r15
	je L_455295
L_181908:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x30(%rbp)
	movq %r14,0x38(%rbp)
	jmp L_181755
.p2align 0x4
L_455295:
L_181909:
	movq 0x40(%rbp),%r15
	movq %r15,0x30(%rbp)
	jmp L_181767
.p2align 0x4
L_455296:
L_181760:
	cmpq $0x1,%r14
	je L_455297
L_181761:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_181758
.p2align 0x4
L_455297:
L_181762:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_181764
L_181896:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_181897+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_181897
.p2align 0x4
.long 0x1E33
L_181897:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_181764
.p2align 0x4
L_455299:
L_181910:
	movq 0x30(%rbp),%r15
	cmpq $0x1,%r15
	je L_455300
L_181911:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x30(%rbp)
	movq %r14,0x38(%rbp)
	jmp L_181755
.p2align 0x4
L_455300:
L_181912:
	movq 0x40(%rbp),%r15
	movq %r15,0x30(%rbp)
	jmp L_181767
.p2align 0x4
L_455302:
L_181914:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_181915+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_181915
.p2align 0x4
.long 0x1E33
L_181915:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_181756
.p2align 0x4
L_455303:
L_181916:
	movq $0x1,0x30(%rbp)
	jmp L_181767
.p2align 0x4
L_455304:
L_181917:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_181918+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_181918
.p2align 0x4
.long 0xA27
L_181918:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_181751
.p2align 0x4
.long 0xB2C
L_181810:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_181811+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x251D
L_181811:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq (globalObjptr+0xF5B8)(%rip),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_181812+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1FDF
L_181812:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_181813
L_181859:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_181860+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_181860
.p2align 0x4
.long 0x1B68
L_181860:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_181813:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x58(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_181814:
	addl 0x0(%r15),%ecx
	movl %ecx,0x20(%rbp)
	jo L_181749
L_181815:
	cmpq $0x1,%r14
	je L_455308
L_181816:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_181814
.p2align 0x4
L_455308:
L_181817:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_181818
L_181857:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_181858+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_181858
.p2align 0x4
.long 0x251E
L_181858:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_181818:
	movl 0x20(%rbp),%ecx
	testl %ecx,%ecx
	jz L_455310
L_181819:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
L_181820:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_181749
L_181821:
	movl %r13d,0x0(%r15)
	movq %r14,0x50(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x60(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq (globalObjptr+0x9D0)(%rip),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_181822+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_455310:
L_181856:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_181820
.p2align 0x4
.long 0xB29
L_181822:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq (globalObjptr+0x1608)(%rip),%r15
	movq (globalObjptr+0x1610)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_455316
L_181823:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_455314
L_181824:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x18(%rbp)
	movq %r14,0x20(%rbp)
	jmp L_181794
.p2align 0x4
L_455314:
L_181825:
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_455315
L_181826:
	movq 0x8(%r14),%r15
	movq %r15,0x18(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x20(%rbp)
	movq $0x1,0x30(%rbp)
	jmp L_181827
.p2align 0x4
L_455315:
L_181854:
	movq $0x1,0x18(%rbp)
	jmp L_181831
.p2align 0x4
L_455316:
L_181855:
	movq (globalObjptr+0x1618)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl loopTypBind_0
.hidden loopTypBind_0
loopTypBind_0:
L_181921:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_182038
L_181922:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_455322
L_181923:
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	movq %r11,0x20(%rbp)
	cmpq %r15,%r11
	movq %r14,0x18(%rbp)
	jne L_455321
L_181926:
	testq %r11,%r11
	jz L_455320
L_181927:
	cmpq $0x7FFFFFFF,%r11
	ja L_455319
L_181928:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_181929
L_182034:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_182035+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182035
.p2align 0x4
.long 0x4DF
L_182035:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_181929:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1585,%rcx
	movq 0x20(%rbp),%rdx
	movq $0x30,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_181930+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_181930
.p2align 0x4
.long 0x4DF
L_181930:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq %rax,0x28(%rbp)
L_181931:
	movq $0x1,%r14
	movq $0x1,%r15
	movq $0x0,0x30(%rbp)
loop_1874:
	movq $0xB55,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x38(%rbp)
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	cmpq %r15,0x30(%rbp)
	jl L_455317
L_181932:
	movq 0x28(%rbp),%r15
	movq $0x3A5,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x8(%rbp),%r14
	movq 0x0(%r14),%r11
	movq $0x3A7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r11,0x0(%r14)
	addq $0x18,%r12
	movq %r15,0x8(%r14)
	movq %r14,0x8(%rbp)
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_455317:
L_181933:
	movq 0x30(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x18(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r11
	movq 0x0(%r11),%r10
	movq %r10,0x58(%rbp)
	movq 0x8(%r11),%r10
	movq %r10,0x40(%rbp)
	movq 0x10(%r11),%r10
	movq %r10,0x48(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x58,%rbp
	leaq (L_181934+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp rename_0
.p2align 0x4
L_455319:
L_182036:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_455320:
L_182037:
	movq (globalObjptr+0x4EC8)(%rip),%r15
	movq %r15,0x28(%rbp)
	jmp L_181931
.p2align 0x4
L_455321:
L_181925:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_455322:
L_182038:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_182039+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182039
.p2align 0x4
.long 0x45B
L_182039:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_181923
.p2align 0x4
.long 0x1234
L_181934:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x48(%rbp),%r14
	movq %r14,0x60(%rbp)
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_181935+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3885
.p2align 0x4
.long 0x101D
L_181935:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_181936
L_182032:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_182033+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182033
.p2align 0x4
.long 0x2524
L_182033:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_181936:
	movq $0x10C7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x60(%rbp)
	addq $0x20,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x58(%rbp),%r13
	movq %r13,0x10(%r15)
	movq 0x48(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x68(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_181925
L_181938:
	decl %r13d
	jo L_455358
L_181940:
	movl %r13d,0x48(%rbp)
	movq $0x1,0x40(%rbp)
.p2align 0x4,,0x7
loop_1875:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_455357
.p2align 0x4,,0x7
L_181941:
	movl 0x48(%rbp),%r15d
	cmpl $0x0,%r15d
	jl L_455324
L_181942:
	movl %r15d,%r14d
	decl %r14d
	movslq %r15d,%r13
	movl %r14d,0x48(%rbp)
	movq 0x50(%rbp),%r15
	movq 0x0(%r15,%r13,8),%r14
	movq $0x20ED,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x40(%rbp)
	jmp loop_1875
.p2align 0x4
L_455324:
L_181943:
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_455356
L_181944:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq %r14,0x40(%rbp)
	movq %r13,0x48(%rbp)
	movq $0x1,0x50(%rbp)
.p2align 0x4,,0x7
L_181945:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_455355
.p2align 0x4,,0x7
L_181946:
	movq 0x50(%rbp),%r13
	cmpq $0x1,%r13
	je L_181954
L_181947:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
.p2align 0x4,,0x7
L_181948:
	movq 0x48(%rbp),%r9
	movq 0x8(%r9),%r8
	movq 0x10(%r8),%rsp
	movq 0x8(%r15),%r9
	movq 0x10(%r9),%r13
	cmpq %rsp,%r13
	je L_455351
L_181949:
	movq 0xFFFFFFFFFFFFFFF0(%rsp),%r11
	cmpq %r11,0xFFFFFFFFFFFFFFF0(%r13)
	jne L_455348
L_182005:
	xorq %r10,%r10
	movq %rsp,%r15
.p2align 0x4,,0x7
vectorEqualLoop_153:
	cmpq %r10,%r11
	je L_455345
L_182006:
	movb 0x0(%r13,%r10,1),%r9b
	cmpb %r9b,0x0(%r15,%r10,1)
	jne L_455325
L_182013:
	incq %r10
	jmp vectorEqualLoop_153
.p2align 0x4
L_455325:
L_182007:
	cmpq $0x1,%r14
	je L_455326
L_182008:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_181948
.p2align 0x4
L_455326:
L_182009:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_455344
.p2align 0x4,,0x7
L_181954:
	movq $0x20ED,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_455327
L_181955:
	movq %r15,0x50(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x40(%rbp)
	movq %r15,0x48(%rbp)
	jmp L_181945
.p2align 0x4
L_455327:
L_181956:
	movq %r15,0x40(%rbp)
L_181957:
	movq 0x68(%rbp),%r15
	cmpq $0x1,%r15
	je L_455343
L_181958:
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movq $0x1,0x58(%rbp)
.p2align 0x4,,0x7
L_181959:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_455342
.p2align 0x4,,0x7
L_181960:
	movq 0x40(%rbp),%r13
	cmpq $0x1,%r13
	je L_181968
L_181961:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
.p2align 0x4,,0x7
L_181962:
	movq 0x50(%rbp),%r9
	movq 0x8(%r9),%r8
	movq 0x10(%r8),%rsp
	movq 0x8(%r15),%r9
	movq 0x10(%r9),%r13
	cmpq %rsp,%r13
	je L_455338
L_181963:
	movq 0xFFFFFFFFFFFFFFF0(%rsp),%r11
	cmpq %r11,0xFFFFFFFFFFFFFFF0(%r13)
	jne L_455335
L_181978:
	xorq %r10,%r10
	movq %rsp,%r15
.p2align 0x4,,0x7
vectorEqualLoop_152:
	cmpq %r11,%r10
	je L_455332
L_181979:
	movb 0x0(%r15,%r10,1),%r9b
	cmpb %r9b,0x0(%r13,%r10,1)
	jne L_455328
L_181986:
	incq %r10
	jmp vectorEqualLoop_152
.p2align 0x4
L_455328:
L_181980:
	cmpq $0x1,%r14
	je L_455329
L_181981:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_181962
.p2align 0x4
L_455329:
L_181982:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_455331
.p2align 0x4,,0x7
L_181968:
	movq $0x20ED,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_455330
L_181969:
	movq %r15,0x58(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	movq %r15,0x50(%rbp)
	jmp L_181959
.p2align 0x4
L_455330:
L_181971:
	movq $0xB55,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq $0x1,0x0(%r14)
	movq %r14,0x70(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_181972+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp combineUp_0
.p2align 0x4
L_455331:
L_181984:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_181985+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_181985
.p2align 0x4
.long 0x232C
L_181985:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_181968
.p2align 0x4
L_455332:
L_181987:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_455334
.p2align 0x4,,0x7
L_181988:
	movq 0x48(%rbp),%r15
	cmpq $0x1,%r15
	je L_455333
L_181989:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x48(%rbp)
	movq %r14,0x50(%rbp)
	jmp L_181959
.p2align 0x4
L_455333:
L_181990:
	movq 0x58(%rbp),%r14
	xchgq %r14,%r15
	jmp L_181971
.p2align 0x4
L_455334:
L_181991:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_181992+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_181992
.p2align 0x4
.long 0x2521
L_181992:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_181988
.p2align 0x4
L_455335:
L_181964:
	cmpq $0x1,%r14
	je L_455336
L_181965:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_181962
.p2align 0x4
L_455336:
L_181966:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_181968
L_181976:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_181977+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_181977
.p2align 0x4
.long 0x232C
L_181977:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_181968
.p2align 0x4
L_455338:
L_181993:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_455340
.p2align 0x4,,0x7
L_181994:
	movq 0x48(%rbp),%r15
	cmpq $0x1,%r15
	je L_455339
L_181995:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x48(%rbp)
	movq %r14,0x50(%rbp)
	jmp L_181959
.p2align 0x4
L_455339:
L_181996:
	movq 0x58(%rbp),%r14
	xchgq %r14,%r15
	jmp L_181971
.p2align 0x4
L_455340:
L_181997:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_181998+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_181998
.p2align 0x4
.long 0x2521
L_181998:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_181994
.p2align 0x4
L_455342:
L_182000:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_182001+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182001
.p2align 0x4
.long 0x232C
L_182001:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_181960
.p2align 0x4
L_455343:
L_182002:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_181971
.p2align 0x4
L_455344:
L_182011:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_182012+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182012
.p2align 0x4
.long 0x2522
L_182012:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	jmp L_181954
.p2align 0x4
L_455345:
L_182014:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_455347
.p2align 0x4,,0x7
L_182015:
	movq 0x40(%rbp),%r15
	cmpq $0x1,%r15
	je L_455346
L_182016:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x40(%rbp)
	movq %r14,0x48(%rbp)
	jmp L_181945
.p2align 0x4
L_455346:
L_182017:
	movq 0x50(%rbp),%r15
	movq %r15,0x40(%rbp)
	jmp L_181957
.p2align 0x4
L_455347:
L_182018:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_182019+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182019
.p2align 0x4
.long 0x2523
L_182019:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	jmp L_182015
.p2align 0x4
L_455348:
L_181950:
	cmpq $0x1,%r14
	je L_455349
L_181951:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_181948
.p2align 0x4
L_455349:
L_181952:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_181954
L_182003:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_182004+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182004
.p2align 0x4
.long 0x2522
L_182004:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	jmp L_181954
.p2align 0x4
L_455351:
L_182020:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_455353
.p2align 0x4,,0x7
L_182021:
	movq 0x40(%rbp),%r15
	cmpq $0x1,%r15
	je L_455352
L_182022:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x40(%rbp)
	movq %r14,0x48(%rbp)
	jmp L_181945
.p2align 0x4
L_455352:
L_182023:
	movq 0x50(%rbp),%r15
	movq %r15,0x40(%rbp)
	jmp L_181957
.p2align 0x4
L_455353:
L_182024:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_182025+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182025
.p2align 0x4
.long 0x2523
L_182025:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	jmp L_182021
.p2align 0x4
L_455355:
L_182027:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_182028+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182028
.p2align 0x4
.long 0x2522
L_182028:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	jmp L_181946
.p2align 0x4
L_455356:
L_182029:
	movq $0x1,0x40(%rbp)
	jmp L_181957
.p2align 0x4
L_455357:
L_182030:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_182031+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182031
.p2align 0x4
.long 0x2523
L_182031:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	jmp L_181941
.p2align 0x4
L_455358:
L_181939:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x251F
L_181972:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_181973
L_181974:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_181975+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_181975
.p2align 0x4
.long 0x2520
L_181975:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_181973:
	movq 0x28(%rbp),%r13
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq 0x30(%rbp),%r11
	movq 0x60(%rbp),%r10
	movq %r10,0x0(%r13,%r11,8)
	incq %r11
	movq %r11,0x30(%rbp)
	movq 0x38(%rbp),%r14
	movq 0x40(%rbp),%r15
	jmp loop_1874
.text
.p2align 0x4
.globl loopDatBind_0
.hidden loopDatBind_0
loopDatBind_0:
L_182040:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_182189
L_182041:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_455367
L_182042:
	movq 0x10(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0x8(%r14),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movl %r15d,%r14d
	movslq %r14d,%r11
	movq %r11,0x38(%rbp)
	cmpq %r15,%r11
	movq %r13,0x30(%rbp)
	jne L_455366
L_182045:
	testq %r11,%r11
	jz L_455365
L_182046:
	cmpq $0x7FFFFFFF,%r11
	ja L_455364
L_182047:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_182048
L_182185:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_182186+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182186
.p2align 0x4
.long 0xF30
L_182186:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_182048:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x158B,%rcx
	movq 0x38(%rbp),%rdx
	movq $0x18,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_182049+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182049
.p2align 0x4
.long 0xF30
L_182049:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq %rax,0x10(%rbp)
L_182050:
	movq $0x1,%r14
	movq $0x1,%r15
	movq $0x0,0x40(%rbp)
loop_1876:
	movq $0xB55,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x48(%rbp)
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x38(%rbp),%r15
	cmpq %r15,0x40(%rbp)
	jl L_455362
L_182051:
	movq 0x10(%rbp),%r15
	movq $0x11B9,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x0(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x58,%rbp
	leaq (L_182052+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loopTypBind_0
.p2align 0x4
L_455362:
L_182060:
	movq 0x40(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x30(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x68(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x50(%rbp)
	movq 0x10(%r13),%r11
	movq %r11,0x58(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x68,%rbp
	leaq (L_182061+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp rename_0
.p2align 0x4
L_455364:
L_182181:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_455365:
L_182188:
	movq (globalObjptr+0x4ED0)(%rip),%r15
	movq %r15,0x10(%rbp)
	jmp L_182050
.p2align 0x4
L_455366:
L_182044:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_455367:
L_182189:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_182190+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182190
.p2align 0x4
.long 0x45B
L_182190:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_182042
.p2align 0x4
.long 0x1A42
L_182052:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_182053
L_182058:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_182059+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182059
.p2align 0x4
.long 0x835
L_182059:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_182053:
	movq $0x11BB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x8(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x11BD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x28(%rbp)
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x18(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_182054+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp combineUp_0
.p2align 0x4
.long 0x2525
L_182061:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_182062
L_182183:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_182184+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182184
.p2align 0x4
.long 0x2530
L_182184:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_182062:
	movq 0x58(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	movq %r11,0x70(%rbp)
	cmpq %r11,%r14
	jne L_182044
L_182064:
	testq %r11,%r11
	jz L_455410
L_182065:
	cmpq $0x7FFFFFFF,%r11
	ja L_182181
L_182066:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_182067
L_182178:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_182179+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182179
.p2align 0x4
.long 0x2526
L_182179:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_182067:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x149B,%rcx
	movq 0x70(%rbp),%rdx
	movq $0x38,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_182068+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182068
.p2align 0x4
.long 0x2526
L_182068:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq %rax,0x78(%rbp)
L_182069:
	movq $0x1,%r15
	movq $0x1,0x80(%rbp)
	movq $0x0,0x88(%rbp)
loop_1877:
	movq $0xB55,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x90(%rbp)
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x80(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x70(%rbp),%r15
	cmpq %r15,0x88(%rbp)
	jl L_455406
L_182070:
	movq 0x78(%rbp),%r15
	movq $0xB1D,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x10C1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x58(%rbp)
	addq $0x20,%r12
	movq 0x60(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x50(%rbp),%r11
	movq %r11,0x8(%r14)
	movq %r15,0x10(%r14)
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movl %r15d,%r14d
	movslq %r14d,%r11
	cmpq %r15,%r11
	jne L_182044
L_182072:
	decl %r14d
	jo L_455404
L_182074:
	movl %r14d,0x68(%rbp)
	movq $0x1,0x50(%rbp)
.p2align 0x4,,0x7
loop_1878:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_455403
.p2align 0x4,,0x7
L_182075:
	movl 0x68(%rbp),%r15d
	cmpl $0x0,%r15d
	jl L_455370
L_182076:
	movl %r15d,%r14d
	decl %r14d
	movslq %r15d,%r13
	movl %r14d,0x68(%rbp)
	movq 0x60(%rbp),%r15
	movq 0x0(%r15,%r13,8),%r14
	movq $0x20ED,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x50(%rbp)
	jmp loop_1878
.p2align 0x4
L_455370:
L_182077:
	movq 0x50(%rbp),%r14
	cmpq $0x1,%r14
	je L_455402
L_182078:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq %r14,0x50(%rbp)
	movq %r13,0x60(%rbp)
	movq $0x1,0x68(%rbp)
.p2align 0x4,,0x7
L_182079:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_455401
.p2align 0x4,,0x7
L_182080:
	movq 0x68(%rbp),%r13
	cmpq $0x1,%r13
	je L_182088
L_182081:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
.p2align 0x4,,0x7
L_182082:
	movq 0x60(%rbp),%r9
	movq 0x8(%r9),%r8
	movq 0x10(%r8),%rsp
	movq 0x8(%r15),%r9
	movq 0x10(%r9),%r13
	cmpq %rsp,%r13
	je L_455397
L_182083:
	movq 0xFFFFFFFFFFFFFFF0(%rsp),%r11
	cmpq 0xFFFFFFFFFFFFFFF0(%r13),%r11
	jne L_455394
L_182139:
	xorq %r10,%r10
	movq %rsp,%r15
.p2align 0x4,,0x7
vectorEqualLoop_155:
	cmpq %r11,%r10
	je L_455391
L_182140:
	movb 0x0(%r13,%r10,1),%r9b
	cmpb %r9b,0x0(%r15,%r10,1)
	jne L_455371
L_182147:
	incq %r10
	jmp vectorEqualLoop_155
.p2align 0x4
L_455371:
L_182141:
	cmpq $0x1,%r14
	je L_455372
L_182142:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_182082
.p2align 0x4
L_455372:
L_182143:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_455390
.p2align 0x4,,0x7
L_182088:
	movq $0x20ED,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x50(%rbp),%r14
	cmpq $0x1,%r14
	je L_455373
L_182089:
	movq %r15,0x68(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x50(%rbp)
	movq %r15,0x60(%rbp)
	jmp L_182079
.p2align 0x4
L_455373:
L_182090:
	movq %r15,0x50(%rbp)
L_182091:
	movq 0x80(%rbp),%r15
	cmpq $0x1,%r15
	je L_455389
L_182092:
	movq 0x8(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x68(%rbp)
	movq $0x1,0x70(%rbp)
.p2align 0x4,,0x7
L_182093:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_455388
.p2align 0x4,,0x7
L_182094:
	movq 0x50(%rbp),%r13
	cmpq $0x1,%r13
	je L_182102
L_182095:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
.p2align 0x4,,0x7
L_182096:
	movq 0x68(%rbp),%r9
	movq 0x8(%r9),%r8
	movq 0x10(%r8),%rsp
	movq 0x8(%r15),%r9
	movq 0x10(%r9),%r13
	cmpq %r13,%rsp
	je L_455384
L_182097:
	movq 0xFFFFFFFFFFFFFFF0(%rsp),%r11
	cmpq 0xFFFFFFFFFFFFFFF0(%r13),%r11
	jne L_455381
L_182112:
	xorq %r10,%r10
	movq %rsp,%r15
.p2align 0x4,,0x7
vectorEqualLoop_154:
	cmpq %r10,%r11
	je L_455378
L_182113:
	movb 0x0(%r15,%r10,1),%r9b
	cmpb %r9b,0x0(%r13,%r10,1)
	jne L_455374
L_182120:
	incq %r10
	jmp vectorEqualLoop_154
.p2align 0x4
L_455374:
L_182114:
	cmpq $0x1,%r14
	je L_455375
L_182115:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_182096
.p2align 0x4
L_455375:
L_182116:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_455377
.p2align 0x4,,0x7
L_182102:
	movq $0x20ED,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x60(%rbp),%r14
	cmpq $0x1,%r14
	je L_455376
L_182103:
	movq %r15,0x70(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x60(%rbp)
	movq %r15,0x68(%rbp)
	jmp L_182093
.p2align 0x4
L_455376:
L_182105:
	movq $0xB55,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq $0x1,0x0(%r14)
	movq %r14,0x68(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_182106+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp combineUp_0
.p2align 0x4
L_455377:
L_182118:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_182119+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182119
.p2align 0x4
.long 0x1D23
L_182119:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	jmp L_182102
.p2align 0x4
L_455378:
L_182121:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_455380
.p2align 0x4,,0x7
L_182122:
	movq 0x60(%rbp),%r15
	cmpq $0x1,%r15
	je L_455379
L_182123:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x60(%rbp)
	movq %r14,0x68(%rbp)
	jmp L_182093
.p2align 0x4
L_455379:
L_182124:
	movq 0x70(%rbp),%r14
	xchgq %r14,%r15
	jmp L_182105
.p2align 0x4
L_455380:
L_182125:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_182126+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182126
.p2align 0x4
.long 0x2528
L_182126:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	jmp L_182122
.p2align 0x4
L_455381:
L_182098:
	cmpq $0x1,%r14
	je L_455382
L_182099:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_182096
.p2align 0x4
L_455382:
L_182100:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_182102
L_182110:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_182111+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182111
.p2align 0x4
.long 0x1D23
L_182111:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	jmp L_182102
.p2align 0x4
L_455384:
L_182127:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_455386
.p2align 0x4,,0x7
L_182128:
	movq 0x60(%rbp),%r15
	cmpq $0x1,%r15
	je L_455385
L_182129:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x60(%rbp)
	movq %r14,0x68(%rbp)
	jmp L_182093
.p2align 0x4
L_455385:
L_182130:
	movq 0x70(%rbp),%r14
	xchgq %r14,%r15
	jmp L_182105
.p2align 0x4
L_455386:
L_182131:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_182132+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182132
.p2align 0x4
.long 0x2528
L_182132:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	jmp L_182128
.p2align 0x4
L_455388:
L_182134:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_182135+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182135
.p2align 0x4
.long 0x1D23
L_182135:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	jmp L_182094
.p2align 0x4
L_455389:
L_182136:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_182105
.p2align 0x4
L_455390:
L_182145:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_182146+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182146
.p2align 0x4
.long 0x2529
L_182146:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	jmp L_182088
.p2align 0x4
L_455391:
L_182148:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_455393
.p2align 0x4,,0x7
L_182149:
	movq 0x50(%rbp),%r15
	cmpq $0x1,%r15
	je L_455392
L_182150:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x50(%rbp)
	movq %r14,0x60(%rbp)
	jmp L_182079
.p2align 0x4
L_455392:
L_182151:
	movq 0x68(%rbp),%r15
	movq %r15,0x50(%rbp)
	jmp L_182091
.p2align 0x4
L_455393:
L_182152:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_182153+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182153
.p2align 0x4
.long 0x252A
L_182153:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	jmp L_182149
.p2align 0x4
L_455394:
L_182084:
	cmpq $0x1,%r14
	je L_455395
L_182085:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_182082
.p2align 0x4
L_455395:
L_182086:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_182088
L_182137:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_182138+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182138
.p2align 0x4
.long 0x2529
L_182138:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	jmp L_182088
.p2align 0x4
L_455397:
L_182154:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_455399
.p2align 0x4,,0x7
L_182155:
	movq 0x50(%rbp),%r15
	cmpq $0x1,%r15
	je L_455398
L_182156:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x50(%rbp)
	movq %r14,0x60(%rbp)
	jmp L_182079
.p2align 0x4
L_455398:
L_182157:
	movq 0x68(%rbp),%r15
	movq %r15,0x50(%rbp)
	jmp L_182091
.p2align 0x4
L_455399:
L_182158:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_182159+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182159
.p2align 0x4
.long 0x252A
L_182159:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	jmp L_182155
.p2align 0x4
L_455401:
L_182161:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_182162+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182162
.p2align 0x4
.long 0x2529
L_182162:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	jmp L_182080
.p2align 0x4
L_455402:
L_182163:
	movq $0x1,0x50(%rbp)
	jmp L_182091
.p2align 0x4
L_455403:
L_182164:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_182165+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182165
.p2align 0x4
.long 0x252B
L_182165:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	jmp L_182075
.p2align 0x4
L_455404:
L_182073:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_455406:
L_182166:
	movq 0x88(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x58(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x0(%r13),%r11
	movq 0x8(%r13),%r10
	movq %r10,0x80(%rbp)
	cmpq $0x1,%r11
	je L_455407
L_182167:
	movq %r11,0xA0(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0xA8(%rbp)
	addq $0xA0,%rbp
	leaq (L_182168+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3885
.p2align 0x4
L_455407:
L_182177:
	movq (globalObjptr+0x4EC0)(%rip),%r15
	movq $0x1,%r14
L_182170:
	movq %r15,0xA8(%rbp)
	movq $0x10D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x98(%rbp)
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x80(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x90(%rbp),%r15
	movq %r15,0xB0(%rbp)
	addq $0xA8,%rbp
	leaq (L_182171+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp combineUp_0
.p2align 0x4
L_455410:
L_182182:
	movq (globalObjptr+0x4ED8)(%rip),%r15
	movq %r15,0x78(%rbp)
	jmp L_182069
.p2align 0x4
.long 0x51A
L_182054:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_182055
L_182056:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_182057+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182057
.p2align 0x4
.long 0x489
L_182057:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_182055:
	movq $0xB55,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x0(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xBF7
L_182106:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_182107
L_182108:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_182109+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182109
.p2align 0x4
.long 0x2527
L_182109:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_182107:
	movq 0x10(%rbp),%r13
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq 0x40(%rbp),%r11
	movq 0x58(%rbp),%r10
	movq %r10,0x0(%r13,%r11,8)
	incq %r11
	movq %r11,0x40(%rbp)
	movq 0x48(%rbp),%r14
	movq 0x50(%rbp),%r15
	jmp loop_1876
.p2align 0x4
.long 0x252C
L_182168:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r15
	movq %r15,0x98(%rbp)
	movq 0xA8(%rbp),%r15
	movq %r15,0xA0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_182169
L_182175:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_182176+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182176
.p2align 0x4
.long 0x252F
L_182176:
	addq $0xFFFFFFFFFFFFFF50,%rbp
L_182169:
	movq 0x98(%rbp),%r15
	movq 0xA0(%rbp),%r14
	jmp L_182170
.p2align 0x4
.long 0x252D
L_182171:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0x90(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_182172
L_182173:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_182174+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182174
.p2align 0x4
.long 0x252E
L_182174:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_182172:
	movq 0x78(%rbp),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq 0x88(%rbp),%r13
	movq 0x98(%rbp),%r11
	movq %r11,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x88(%rbp)
	movq 0x80(%rbp),%r15
	movq 0x90(%rbp),%r14
	movq %r14,0x80(%rbp)
	jmp loop_1877
.text
.p2align 0x4
.globl tuple_8
.hidden tuple_8
tuple_8:
L_182191:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_182212
L_182192:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_455425
L_182193:
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_455424
L_182195:
	cmpl $0x1,%r13d
	je L_455422
L_182196:
	testl %r13d,%r13d
	jz L_455421
L_182197:
	cmpq $0x0,%r14
	jna L_455420
L_182200:
	movq 0x0(%r15),%r14
	movq 0x0(%r14),%r11
	decl %r13d
	jo L_455419
L_182202:
	movslq %r13d,%r14
	movq 0x0(%r15,%r14,8),%r13
	movq 0x0(%r13),%r10
	cmpq $0x1,%r11
	je L_455418
L_182203:
	movq 0x0(%r11),%r15
	cmpq $0x1,%r10
	je L_455417
L_182204:
	movq 0x8(%r10),%r11
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r11,0x8(%r14)
	addq $0x18,%r12
	movq %r14,%r15
L_182205:
	movq $0x252D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x0(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1C09,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x10,%r12
	movq $0x13D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r13,0x8(%r14)
	movq %r14,0x0(%rbp)
	addq $0x18,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_455417:
L_182206:
	movq %r11,%r15
	jmp L_182205
.p2align 0x4
L_455418:
L_182207:
	movq %r10,%r15
	jmp L_182205
.p2align 0x4
L_455419:
L_182201:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_455420:
L_182199:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_455421:
L_182208:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_182205
.p2align 0x4
L_455422:
L_182209:
	cmpq $0x0,%r14
	jna L_182199
L_182211:
	movq 0x0(%r15),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_455424:
L_182194:
	movq (globalObjptr+0x4D8)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_455425:
L_182212:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_182213+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182213
.p2align 0x4
.long 0x451
L_182213:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	jmp L_182193
.text
.p2align 0x4
.globl f_0
.hidden f_0
f_0:
L_182214:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_182215
L_182223:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_182224+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182224
.p2align 0x4
.long 0x451
L_182224:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_182215:
	movq (globalObjptr+0x2578)(%rip),%r15
	cmpl $0x1BC0,0x0(%r15)
	jl L_455427
L_182216:
	movq $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_455427:
L_182217:
	movq 0x0(%rbp),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_182218+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp f_6
.p2align 0x4
.long 0x4AF
L_182218:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_182219+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp f_0
.p2align 0x4
.long 0x521
L_182219:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_182220
L_182221:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_182222+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182222
.p2align 0x4
.long 0x4E8
L_182222:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_182220:
	movq $0x1EDF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl f_6
.hidden f_6
f_6:
L_182225:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_182226
L_182252:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_182253+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182253
.p2align 0x4
.long 0x451
L_182253:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_182226:
	movq (globalObjptr+0x2578)(%rip),%r15
	movl 0x0(%r15),%r14d
	movl %r14d,%r13d
	addl $0x2,%r13d
	jo L_182227
L_182228:
	movl %r13d,0x0(%r15)
	movq 0x0(%rbp),%r11
	movq 0x0(%r11),%r10
	movq %r10,%r9
	movslq %r14d,%r8
	cmpq 0xFFFFFFFFFFFFFFF0(%r9),%r8
	jnb L_182230
L_182231:
	movzbl 0x0(%r9,%r8,1),%esp
	incl %r14d
	jo L_182227
L_182232:
	movslq %r14d,%r9
	cmpq 0xFFFFFFFFFFFFFFF0(%r10),%r9
	jnb L_182230
L_182234:
	movzbl 0x0(%r10,%r9,1),%r14d
	imull $0x100,%r14d
	jo L_182227
L_182235:
	addl %esp,%r14d
	jo L_182227
L_182236:
	testl %r14d,%r14d
	jz L_455437
L_182237:
	decl %r14d
	movl %r14d,0x8(%rbp)
	jo L_182227
L_182238:
	movl %r13d,%r14d
	addl $0x2,%r14d
	jo L_182227
L_182239:
	movl %r14d,0x0(%r15)
	movq 0x0(%r11),%r15
	movq %r15,%r14
	movslq %r13d,%r10
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r10
	jnb L_182230
L_182241:
	movzbl 0x0(%r14,%r10,1),%r9d
	incl %r13d
	jo L_182227
L_182242:
	movslq %r13d,%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	jnb L_455432
L_182244:
	movzbl 0x0(%r15,%r14,1),%r13d
	imull $0x100,%r13d
	jo L_182227
L_182245:
	addl %r9d,%r13d
	movl %r13d,0xC(%rbp)
	jo L_455430
L_182246:
	movq %r11,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_182247+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp f_6
.p2align 0x4
L_455430:
L_182227:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_455432:
L_182230:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_455437:
L_182251:
	movq $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x25
L_182247:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_182248
L_182249:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_182250+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182250
.p2align 0x4
.long 0x24
L_182250:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_182248:
	movq $0x1BBF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x8(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl 0xC(%rbp),%r14d
	movl %r14d,0x4(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl f_1
.hidden f_1
f_1:
L_182254:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_182255
L_182283:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_182284+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182284
.p2align 0x4
.long 0x45B
L_182284:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_182255:
	movq (globalObjptr+0x2578)(%rip),%r15
	cmpl $0x1504,0x0(%r15)
	jl L_455446
L_182256:
	movq $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_455446:
L_182257:
	movq (globalObjptr+0x2578)(%rip),%r15
	movl 0x0(%r15),%r14d
	movl %r14d,%r13d
	addl $0x2,%r13d
	jo L_182258
L_182259:
	movl %r13d,0x0(%r15)
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,%r11
	movslq %r14d,%r10
	cmpq 0xFFFFFFFFFFFFFFF0(%r11),%r10
	jnb L_182261
L_182262:
	movzbl 0x0(%r11,%r10,1),%r9d
	incl %r14d
	jo L_182258
L_182263:
	movslq %r14d,%r15
	cmpq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	jnb L_182261
L_182265:
	movzbl 0x0(%r13,%r15,1),%r14d
	imull $0x100,%r14d
	jo L_182258
L_182266:
	addl %r9d,%r14d
	jo L_182258
L_182267:
	cmpl $0x0,%r14d
	je L_455450
	cmpl $0x1,%r14d
	je L_455449
L_182268:
	subl $0x2,%r14d
	jo L_455448
L_182269:
	movslq %r14d,%r15
	movq 0x8(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_455447
L_182271:
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x18(%rbp)
L_182272:
	movq 0x0(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_182273+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp f_7
.p2align 0x4
L_455447:
L_182261:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_455448:
L_182258:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_455449:
L_182282:
	movq $0x1,0x18(%rbp)
	jmp L_182272
.p2align 0x4
L_455450:
L_182281:
	movq $0x0,0x18(%rbp)
	jmp L_182272
.p2align 0x4
.long 0xB9C
L_182273:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_182274
L_182279:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_182280+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182280
.p2align 0x4
.long 0xFED
L_182280:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_182274:
	movq $0x12A3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x28(%rbp)
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x38,%rbp
	leaq (L_182275+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp f_1
.p2align 0x4
.long 0x51A
L_182275:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_182276
L_182277:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_182278+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182278
.p2align 0x4
.long 0x488
L_182278:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_182276:
	movq $0x1EE1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl f_7
.hidden f_7
f_7:
L_182285:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_182286
L_182319:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_182320+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182320
.p2align 0x4
.long 0x451
L_182320:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_182286:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq (globalObjptr+0x2578)(%rip),%r15
	movl 0x0(%r15),%r11d
	movl %r11d,%r10d
	addl $0x2,%r10d
	jo L_182287
L_182288:
	movl %r10d,0x0(%r15)
	movq 0x0(%r14),%r9
	movq %r9,%r8
	movslq %r11d,%rsp
	cmpq 0xFFFFFFFFFFFFFFF0(%r8),%rsp
	jnb L_182290
L_182291:
	movq %rsp,%rax
	movzbl 0x0(%r8,%rax,1),%esp
	incl %r11d
	jo L_182287
L_182292:
	movslq %r11d,%r8
	cmpq 0xFFFFFFFFFFFFFFF0(%r9),%r8
	jnb L_182290
L_182294:
	movzbl 0x0(%r9,%r8,1),%r11d
	imull $0x100,%r11d
	jo L_182287
L_182295:
	addl %esp,%r11d
	jo L_182287
L_182296:
	testl %r11d,%r11d
	jz L_455471
L_182297:
	decl %r11d
	movl %r11d,0x8(%rbp)
	jo L_182287
L_182298:
	movl %r10d,%r11d
	addl $0x2,%r11d
	jo L_182287
L_182299:
	movl %r11d,0x0(%r15)
	movq 0x0(%r14),%r15
	movq %r15,%r11
	movslq %r10d,%r9
	cmpq 0xFFFFFFFFFFFFFFF0(%r11),%r9
	jnb L_182290
L_182301:
	movzbl 0x0(%r11,%r9,1),%r8d
	incl %r10d
	jo L_182287
L_182302:
	movslq %r10d,%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	jnb L_182290
L_182304:
	movzbl 0x0(%r15,%r14,1),%r11d
	imull $0x100,%r11d
	jo L_182287
L_182305:
	addl %r8d,%r11d
	jo L_182287
L_182306:
	cmpl $0x0,%r11d
	je L_455463
	cmpl $0x1,%r11d
	je L_455462
L_182307:
	subl $0x2,%r11d
	jo L_455461
L_182308:
	movslq %r11d,%r15
	cmpq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	jnb L_455460
L_182310:
	movq 0x0(%r13,%r15,8),%r14
	movq %r14,0x10(%rbp)
L_182311:
	movq 0x0(%rbp),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_182312+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp f_7
.p2align 0x4
L_455460:
L_182290:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_455461:
L_182287:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_455462:
L_182317:
	movq $0x1,0x10(%rbp)
	jmp L_182311
.p2align 0x4
L_455463:
L_182316:
	movq $0x0,0x10(%rbp)
	jmp L_182311
.p2align 0x4
L_455471:
L_182318:
	movq $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x48A
L_182312:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_182313
L_182314:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_182315+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182315
.p2align 0x4
.long 0x27
L_182315:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_182313:
	movq $0x1BBD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movl 0x8(%rbp),%r14d
	movl %r14d,0x8(%r15)
	movl $0x0,0xC(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl f_2
.hidden f_2
f_2:
L_182321:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_182322
L_182339:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_182340+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182340
.p2align 0x4
.long 0x451
L_182340:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_182322:
	movq (globalObjptr+0x2578)(%rip),%r15
	cmpl $0x4C0,0x0(%r15)
	jl L_455480
L_182323:
	movq $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_455480:
L_182324:
	movq (globalObjptr+0x2578)(%rip),%r15
	movl 0x0(%r15),%r14d
	movl %r14d,%r13d
	addl $0x2,%r13d
	jo L_182325
L_182326:
	movl %r13d,0x0(%r15)
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,%r11
	movslq %r14d,%r10
	cmpq 0xFFFFFFFFFFFFFFF0(%r11),%r10
	jnb L_182328
L_182329:
	movzbl 0x0(%r11,%r10,1),%r9d
	incl %r14d
	jo L_182325
L_182330:
	movslq %r14d,%r11
	cmpq 0xFFFFFFFFFFFFFFF0(%r13),%r11
	jnb L_455483
L_182332:
	movzbl 0x0(%r13,%r11,1),%r14d
	imull $0x100,%r14d
	jo L_182325
L_182333:
	addl %r9d,%r14d
	movl %r14d,0x8(%rbp)
	jo L_455481
L_182334:
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_182335+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp f_2
.p2align 0x4
L_455481:
L_182325:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_455483:
L_182328:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x25
L_182335:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_182336
L_182337:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_182338+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182338
.p2align 0x4
.long 0x24
L_182338:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_182336:
	movq $0x1B59,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x8(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl f_3
.hidden f_3
f_3:
L_182341:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_182342
L_182350:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_182351+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182351
.p2align 0x4
.long 0x451
L_182351:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_182342:
	movq (globalObjptr+0x3E90)(%rip),%r15
	cmpl $0x21C,0x0(%r15)
	jl L_455489
L_182343:
	movq $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_455489:
L_182344:
	movq 0x0(%rbp),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_182345+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp f_8
.p2align 0x4
.long 0x4AF
L_182345:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_182346+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp f_3
.p2align 0x4
.long 0x521
L_182346:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_182347
L_182348:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_182349+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182349
.p2align 0x4
.long 0x4E8
L_182349:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_182347:
	movq $0x1EDF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl f_8
.hidden f_8
f_8:
L_182352:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_182353
L_182379:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_182380+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182380
.p2align 0x4
.long 0x451
L_182380:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_182353:
	movq (globalObjptr+0x3E90)(%rip),%r15
	movl 0x0(%r15),%r14d
	movl %r14d,%r13d
	addl $0x2,%r13d
	jo L_182354
L_182355:
	movl %r13d,0x0(%r15)
	movq 0x0(%rbp),%r11
	movq 0x0(%r11),%r10
	movq %r10,%r9
	movslq %r14d,%r8
	cmpq 0xFFFFFFFFFFFFFFF0(%r9),%r8
	jnb L_182357
L_182358:
	movzbl 0x0(%r9,%r8,1),%esp
	incl %r14d
	jo L_182354
L_182359:
	movslq %r14d,%r9
	cmpq 0xFFFFFFFFFFFFFFF0(%r10),%r9
	jnb L_182357
L_182361:
	movzbl 0x0(%r10,%r9,1),%r14d
	imull $0x100,%r14d
	jo L_182354
L_182362:
	addl %esp,%r14d
	jo L_182354
L_182363:
	testl %r14d,%r14d
	jz L_455499
L_182364:
	decl %r14d
	movl %r14d,0x8(%rbp)
	jo L_182354
L_182365:
	movl %r13d,%r14d
	addl $0x2,%r14d
	jo L_182354
L_182366:
	movl %r14d,0x0(%r15)
	movq 0x0(%r11),%r15
	movq %r15,%r14
	movslq %r13d,%r10
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r10
	jnb L_182357
L_182368:
	movzbl 0x0(%r14,%r10,1),%r9d
	incl %r13d
	jo L_182354
L_182369:
	movslq %r13d,%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	jnb L_455494
L_182371:
	movzbl 0x0(%r15,%r14,1),%r13d
	imull $0x100,%r13d
	jo L_182354
L_182372:
	addl %r9d,%r13d
	movl %r13d,0xC(%rbp)
	jo L_455492
L_182373:
	movq %r11,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_182374+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp f_8
.p2align 0x4
L_455492:
L_182354:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_455494:
L_182357:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_455499:
L_182378:
	movq $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x25
L_182374:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_182375
L_182376:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_182377+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182377
.p2align 0x4
.long 0x24
L_182377:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_182375:
	movq $0x1BBF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x8(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl 0xC(%rbp),%r14d
	movl %r14d,0x4(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl f_4
.hidden f_4
f_4:
L_182381:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_182382
L_182410:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_182411+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182411
.p2align 0x4
.long 0x45B
L_182411:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_182382:
	movq (globalObjptr+0x3E90)(%rip),%r15
	cmpl $0x198,0x0(%r15)
	jl L_455508
L_182383:
	movq $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_455508:
L_182384:
	movq (globalObjptr+0x3E90)(%rip),%r15
	movl 0x0(%r15),%r14d
	movl %r14d,%r13d
	addl $0x2,%r13d
	jo L_182385
L_182386:
	movl %r13d,0x0(%r15)
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,%r11
	movslq %r14d,%r10
	cmpq 0xFFFFFFFFFFFFFFF0(%r11),%r10
	jnb L_182388
L_182389:
	movzbl 0x0(%r11,%r10,1),%r9d
	incl %r14d
	jo L_182385
L_182390:
	movslq %r14d,%r15
	cmpq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	jnb L_182388
L_182392:
	movzbl 0x0(%r13,%r15,1),%r14d
	imull $0x100,%r14d
	jo L_182385
L_182393:
	addl %r9d,%r14d
	jo L_182385
L_182394:
	cmpl $0x0,%r14d
	je L_455512
	cmpl $0x1,%r14d
	je L_455511
L_182395:
	subl $0x2,%r14d
	jo L_455510
L_182396:
	movslq %r14d,%r15
	movq 0x8(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_455509
L_182398:
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x18(%rbp)
L_182399:
	movq 0x0(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_182400+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp f_9
.p2align 0x4
L_455509:
L_182388:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_455510:
L_182385:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_455511:
L_182409:
	movq $0x1,0x18(%rbp)
	jmp L_182399
.p2align 0x4
L_455512:
L_182408:
	movq $0x0,0x18(%rbp)
	jmp L_182399
.p2align 0x4
.long 0xB9C
L_182400:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_182401
L_182406:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_182407+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182407
.p2align 0x4
.long 0xFED
L_182407:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_182401:
	movq $0x12A3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x28(%rbp)
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x38,%rbp
	leaq (L_182402+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp f_4
.p2align 0x4
.long 0x51A
L_182402:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_182403
L_182404:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_182405+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182405
.p2align 0x4
.long 0x488
L_182405:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_182403:
	movq $0x1EE1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl f_9
.hidden f_9
f_9:
L_182412:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_182413
L_182446:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_182447+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182447
.p2align 0x4
.long 0x451
L_182447:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_182413:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq (globalObjptr+0x3E90)(%rip),%r15
	movl 0x0(%r15),%r11d
	movl %r11d,%r10d
	addl $0x2,%r10d
	jo L_182414
L_182415:
	movl %r10d,0x0(%r15)
	movq 0x0(%r14),%r9
	movq %r9,%r8
	movslq %r11d,%rsp
	cmpq 0xFFFFFFFFFFFFFFF0(%r8),%rsp
	jnb L_182417
L_182418:
	movq %rsp,%rax
	movzbl 0x0(%r8,%rax,1),%esp
	incl %r11d
	jo L_182414
L_182419:
	movslq %r11d,%r8
	cmpq 0xFFFFFFFFFFFFFFF0(%r9),%r8
	jnb L_182417
L_182421:
	movzbl 0x0(%r9,%r8,1),%r11d
	imull $0x100,%r11d
	jo L_182414
L_182422:
	addl %esp,%r11d
	jo L_182414
L_182423:
	testl %r11d,%r11d
	jz L_455533
L_182424:
	decl %r11d
	movl %r11d,0x8(%rbp)
	jo L_182414
L_182425:
	movl %r10d,%r11d
	addl $0x2,%r11d
	jo L_182414
L_182426:
	movl %r11d,0x0(%r15)
	movq 0x0(%r14),%r15
	movq %r15,%r11
	movslq %r10d,%r9
	cmpq 0xFFFFFFFFFFFFFFF0(%r11),%r9
	jnb L_182417
L_182428:
	movzbl 0x0(%r11,%r9,1),%r8d
	incl %r10d
	jo L_182414
L_182429:
	movslq %r10d,%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	jnb L_182417
L_182431:
	movzbl 0x0(%r15,%r14,1),%r11d
	imull $0x100,%r11d
	jo L_182414
L_182432:
	addl %r8d,%r11d
	jo L_182414
L_182433:
	cmpl $0x0,%r11d
	je L_455525
	cmpl $0x1,%r11d
	je L_455524
L_182434:
	subl $0x2,%r11d
	jo L_455523
L_182435:
	movslq %r11d,%r15
	cmpq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	jnb L_455522
L_182437:
	movq 0x0(%r13,%r15,8),%r14
	movq %r14,0x10(%rbp)
L_182438:
	movq 0x0(%rbp),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_182439+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp f_9
.p2align 0x4
L_455522:
L_182417:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_455523:
L_182414:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_455524:
L_182444:
	movq $0x1,0x10(%rbp)
	jmp L_182438
.p2align 0x4
L_455525:
L_182443:
	movq $0x0,0x10(%rbp)
	jmp L_182438
.p2align 0x4
L_455533:
L_182445:
	movq $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x48A
L_182439:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_182440
L_182441:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_182442+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182442
.p2align 0x4
.long 0x27
L_182442:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_182440:
	movq $0x1BBD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movl 0x8(%rbp),%r14d
	movl %r14d,0x8(%r15)
	movl $0x0,0xC(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl f_5
.hidden f_5
f_5:
L_182448:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_182449
L_182466:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_182467+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182467
.p2align 0x4
.long 0x451
L_182467:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_182449:
	movq (globalObjptr+0x3E90)(%rip),%r15
	cmpl $0xA8,0x0(%r15)
	jl L_455542
L_182450:
	movq $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_455542:
L_182451:
	movq (globalObjptr+0x3E90)(%rip),%r15
	movl 0x0(%r15),%r14d
	movl %r14d,%r13d
	addl $0x2,%r13d
	jo L_182452
L_182453:
	movl %r13d,0x0(%r15)
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,%r11
	movslq %r14d,%r10
	cmpq 0xFFFFFFFFFFFFFFF0(%r11),%r10
	jnb L_182455
L_182456:
	movzbl 0x0(%r11,%r10,1),%r9d
	incl %r14d
	jo L_182452
L_182457:
	movslq %r14d,%r11
	cmpq 0xFFFFFFFFFFFFFFF0(%r13),%r11
	jnb L_455545
L_182459:
	movzbl 0x0(%r13,%r11,1),%r14d
	imull $0x100,%r14d
	jo L_182452
L_182460:
	addl %r9d,%r14d
	movl %r14d,0x8(%rbp)
	jo L_455543
L_182461:
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_182462+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp f_5
.p2align 0x4
L_455543:
L_182452:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_455545:
L_182455:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x25
L_182462:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_182463
L_182464:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_182465+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182465
.p2align 0x4
.long 0x24
L_182465:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_182463:
	movq $0x1B59,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x8(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl x_1201
.hidden x_1201
x_1201:
L_182468:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_182469
L_182482:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_182483+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182483
.p2align 0x4
.long 0x4E8
L_182483:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_182469:
	movq 0x10(%rbp),%r15
loop_1879:
	movq 0x8(%r15),%r14
	cmpq $0x1,%r14
	je L_455555
	cmpq $0x2,%r14
	je L_455551
L_182470:
	movq 0x8(%r14),%r15
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x30(%rbp)
	movb 0x0(%rbp),%r15b
	movb %r15b,0x20(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_182471+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1201
.p2align 0x4
L_455551:
L_182476:
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movw 0x0(%r13),%r15w
	movw %r15w,%r11w
	andw $0x1,%r11w
	jnz L_455554
L_182477:
	movzbw 0x0(%rbp),%r15w
	shlw $0x1,%r15w
	orw $0x1,%r15w
	movw %r15w,0x0(%r13)
	movw 0x0(%r14),%r15w
	movw %r15w,%r14w
	andw $0x3,%r14w
	cmpw $0x1,%r14w
	je L_455553
	cmpw $0x2,%r14w
	je L_455552
L_182478:
	movl $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_455552:
L_182480:
	shrw $0x2,%r15w
	movb %r15b,%r14b
	cmpb %r14b,0x0(%rbp)
	sete %al
	movzbl %al,%eax
	movl %eax,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_455553:
L_182473:
	movl $0x0,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_455554:
L_182481:
	shrw $0x1,%r15w
	movb %r15b,%r14b
	cmpb %r14b,0x0(%rbp)
	sete %al
	movzbl %al,%eax
	movl %eax,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_455555:
L_182475:
	movzbw 0x0(%rbp),%r15w
	shlw $0x2,%r15w
	orw $0x2,%r15w
	movw %r15w,0x0(%rbp)
	jmp up_0
.p2align 0x4
.long 0x4E5
L_182471:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movl 0x20(%rbp),%r14d
	movl %r14d,0x4(%rbp)
	testl %r14d,%r14d
	jz L_182473
L_182474:
	movq 0x10(%rbp),%r15
	jmp loop_1879
.text
.p2align 0x4
.globl x_1202
.hidden x_1202
x_1202:
L_182484:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_182514
L_182485:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_455570
L_182486:
	movzbq 0x0(%rbp),%rax
	subq $0x1,%rax
	cmpq $0xA,%rax
	ja L_455558
	leaq jumpTable_612(%rip),%rbx
	jmp *(%rbx,%rax,8)
.data
.p2align 0x4
jumpTable_612:
.quad L_455569,L_455568,L_455567,L_455566,L_455565,L_455564,L_455563,L_455562,L_455561,L_455560,L_455559
.text
.p2align 0x4
L_455558:
L_182487:
	movq (globalObjptr+0xD860)(%rip),%r14
	movq 0x18(%rbp),%r15
x_572:
	movq 0x10(%r15),%r13
	movq %r13,0x0(%rbp)
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r11,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r15,0x10(%rbp)
	addq $0x18,%r12
	addq $0x10,%rbp
	leaq (L_182488+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_455559:
L_182508:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x5658)(%rip),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_182509+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_455560:
L_182507:
	movq (globalObjptr+0xD660)(%rip),%r14
	movq 0x18(%rbp),%r15
	jmp x_572
.p2align 0x4
L_455561:
L_182506:
	movq (globalObjptr+0xEDB8)(%rip),%r14
	movq 0x18(%rbp),%r15
	jmp x_572
.p2align 0x4
L_455562:
L_182505:
	movq (globalObjptr+0xD878)(%rip),%r14
	movq 0x18(%rbp),%r15
	jmp x_572
.p2align 0x4
L_455563:
L_182504:
	movq (globalObjptr+0xD860)(%rip),%r14
	movq 0x18(%rbp),%r15
	jmp x_572
.p2align 0x4
L_455564:
L_182498:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x5650)(%rip),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_182499+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_455565:
L_182497:
	movq (globalObjptr+0xD878)(%rip),%r14
	movq 0x20(%rbp),%r15
	jmp x_572
.p2align 0x4
L_455566:
L_182496:
	movq (globalObjptr+0xD860)(%rip),%r14
	movq 0x20(%rbp),%r15
	jmp x_572
.p2align 0x4
L_455567:
L_182495:
	movq (globalObjptr+0xD660)(%rip),%r14
	movq 0x18(%rbp),%r15
	jmp x_572
.p2align 0x4
L_455568:
L_182494:
	movq (globalObjptr+0xEDB8)(%rip),%r14
	movq 0x18(%rbp),%r15
	jmp x_572
.p2align 0x4
L_455569:
L_182493:
	movq (globalObjptr+0xD878)(%rip),%r14
	movq 0x18(%rbp),%r15
	jmp x_572
.p2align 0x4
L_455570:
L_182514:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_182515+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182515
.p2align 0x4
.long 0x4E9
L_182515:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	jmp L_182486
.p2align 0x4
.long 0x4AF
L_182488:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_182489+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x2B
L_182509:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_182510+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x2B
L_182499:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_182500+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x521
L_182489:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movl 0x18(%rbp),%r15d
	movl %r15d,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_182490
L_182491:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_182492+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182492
.p2align 0x4
.long 0x8E6
L_182492:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_182490:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	movq $0x13,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movl 0x10(%rbp),%r13d
	movl %r13d,0x18(%rbp)
	movq %r14,0x10(%rbp)
	movq %r15,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x48F
L_182510:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl 0x28(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_182511
L_182512:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_182513+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182513
.p2align 0x4
.long 0x49C
L_182513:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_182511:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	movq $0x13,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq %r15,0x8(%rbp)
	movq %r14,0x10(%rbp)
	movl 0x20(%rbp),%r15d
	movl %r15d,0x18(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x48F
L_182500:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl 0x28(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_182501
L_182502:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_182503+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182503
.p2align 0x4
.long 0x49C
L_182503:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_182501:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	movq $0x13,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq %r15,0x8(%rbp)
	movq %r14,0x10(%rbp)
	movl 0x20(%rbp),%r15d
	movl %r15d,0x18(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl x_1203
.hidden x_1203
x_1203:
L_182516:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_182546
L_182517:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_455587
L_182518:
	movzbq 0x0(%rbp),%rax
	subq $0x1,%rax
	cmpq $0xA,%rax
	ja L_455575
	leaq jumpTable_613(%rip),%rbx
	jmp *(%rbx,%rax,8)
.data
.p2align 0x4
jumpTable_613:
.quad L_455586,L_455585,L_455584,L_455583,L_455582,L_455581,L_455580,L_455579,L_455578,L_455577,L_455576
.text
.p2align 0x4
L_455575:
L_182519:
	movq (globalObjptr+0xD860)(%rip),%r14
	movq 0x18(%rbp),%r15
x_573:
	movq 0x10(%r15),%r13
	movq %r13,0x0(%rbp)
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r11,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r15,0x10(%rbp)
	addq $0x18,%r12
	addq $0x10,%rbp
	leaq (L_182520+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_455576:
L_182540:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x5658)(%rip),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_182541+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_455577:
L_182539:
	movq (globalObjptr+0xD660)(%rip),%r14
	movq 0x18(%rbp),%r15
	jmp x_573
.p2align 0x4
L_455578:
L_182538:
	movq (globalObjptr+0xEDB8)(%rip),%r14
	movq 0x18(%rbp),%r15
	jmp x_573
.p2align 0x4
L_455579:
L_182537:
	movq (globalObjptr+0xD878)(%rip),%r14
	movq 0x18(%rbp),%r15
	jmp x_573
.p2align 0x4
L_455580:
L_182536:
	movq (globalObjptr+0xD860)(%rip),%r14
	movq 0x18(%rbp),%r15
	jmp x_573
.p2align 0x4
L_455581:
L_182530:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x5650)(%rip),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_182531+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_455582:
L_182529:
	movq (globalObjptr+0xD878)(%rip),%r14
	movq 0x20(%rbp),%r15
	jmp x_573
.p2align 0x4
L_455583:
L_182528:
	movq (globalObjptr+0xD860)(%rip),%r14
	movq 0x20(%rbp),%r15
	jmp x_573
.p2align 0x4
L_455584:
L_182527:
	movq (globalObjptr+0xD660)(%rip),%r14
	movq 0x18(%rbp),%r15
	jmp x_573
.p2align 0x4
L_455585:
L_182526:
	movq (globalObjptr+0xEDB8)(%rip),%r14
	movq 0x18(%rbp),%r15
	jmp x_573
.p2align 0x4
L_455586:
L_182525:
	movq (globalObjptr+0xD878)(%rip),%r14
	movq 0x18(%rbp),%r15
	jmp x_573
.p2align 0x4
L_455587:
L_182546:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_182547+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182547
.p2align 0x4
.long 0x4E9
L_182547:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	jmp L_182518
.p2align 0x4
.long 0x4AF
L_182520:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_182521+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x2B
L_182541:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_182542+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x2B
L_182531:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_182532+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x521
L_182521:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movl 0x18(%rbp),%r15d
	movl %r15d,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_182522
L_182523:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_182524+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182524
.p2align 0x4
.long 0x8E6
L_182524:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_182522:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	movq $0x13,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movl 0x10(%rbp),%r13d
	movl %r13d,0x18(%rbp)
	movq %r14,0x10(%rbp)
	movq %r15,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x48F
L_182542:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl 0x28(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_182543
L_182544:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_182545+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182545
.p2align 0x4
.long 0x49C
L_182545:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_182543:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	movq $0x13,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq %r15,0x8(%rbp)
	movq %r14,0x10(%rbp)
	movl 0x20(%rbp),%r15d
	movl %r15d,0x18(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x48F
L_182532:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl 0x28(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_182533
L_182534:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_182535+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182535
.p2align 0x4
.long 0x49C
L_182535:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_182533:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	movq $0x13,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq %r15,0x8(%rbp)
	movq %r14,0x10(%rbp)
	movl 0x20(%rbp),%r15d
	movl %r15d,0x18(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl layout_0
.hidden layout_0
layout_0:
L_182548:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_182587
L_182549:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_455596
L_182551:
	movq 0x0(%rbp),%r15
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_182552
L_182569:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xC97,%r14
	je L_455594
	cmpq $0xC98,%r14
	je L_455593
	cmpq $0xC99,%r14
	je L_455592
L_182552:
	movq (globalObjptr+0xCA00)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_182553+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_455592:
L_182572:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r11
	movq 0x10(%r14),%r10
	movq %r10,0x8(%rbp)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0xA18)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r15,0x18(%rbp)
	addq $0x18,%r12
	addq $0x18,%rbp
	leaq (L_182573+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_455593:
L_182571:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x0(%rbp)
	jmp str_3
.p2align 0x4
L_455594:
L_182570:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x0(%rbp)
	jmp str_3
.p2align 0x4
L_455596:
L_182587:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_182588+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182588
.p2align 0x4
.long 0x451
L_182588:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	jmp L_182551
.p2align 0x4
.long 0x4AF
L_182553:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_182554+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp name_0
.p2align 0x4
.long 0x521
L_182573:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_182574+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x521
L_182554:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_182555+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x521
L_182574:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_182575+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_0
.p2align 0x4
.long 0x521
L_182555:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_182556
L_182567:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_182568+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182568
.p2align 0x4
.long 0x4E8
L_182568:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_182556:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x18(%rbp)
	addq $0x18,%r12
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_182557:
	addl 0x0(%r15),%ecx
	movl %ecx,0x20(%rbp)
	jo L_455601
L_182559:
	cmpq $0x1,%r14
	je L_455598
L_182560:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_182557
.p2align 0x4
L_455598:
L_182561:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_182562
L_182565:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_182566+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182566
.p2align 0x4
.long 0x49C
L_182566:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_182562:
	movl 0x20(%rbp),%r15d
	testl %r15d,%r15d
	jz L_455599
L_182563:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_455599:
L_182564:
	movq (globalObjptr+0x9D0)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_455601:
L_182558:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x2B
L_182575:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_182576
L_182585:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_182586+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182586
.p2align 0x4
.long 0x2C
L_182586:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_182576:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	addq $0x18,%r12
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_182577:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_182558
L_182578:
	cmpq $0x1,%r14
	je L_455603
L_182579:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_182577
.p2align 0x4
L_455603:
L_182580:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_182581
L_182583:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_182584+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182584
.p2align 0x4
.long 0x4E6
L_182584:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_182581:
	movl 0x28(%rbp),%r15d
	testl %r15d,%r15d
	jz L_182564
L_182582:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl mkCanonical_0
.hidden mkCanonical_0
mkCanonical_0:
L_182589:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_182590
L_182683:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_182684+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182684
.p2align 0x4
.long 0x451
L_182684:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_182590:
	movq 0x0(%rbp),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_182591+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromString_24
.p2align 0x4
.long 0x1
L_182591:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movl 0x10(%rbp),%r15d
	movl %r15d,0x8(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq $0x1,%r15
	je L_182627
L_182592:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x10(%rbp)
	movq %r14,0x18(%rbp)
	movq $0x1,0x20(%rbp)
.p2align 0x4,,0x7
L_182593:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_455643
.p2align 0x4,,0x7
L_182594:
	movq 0x18(%rbp),%r14
	cmpq %r14,(globalObjptr+0xA058)(%rip)
	je L_455641
L_182595:
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movq %r13,0x28(%rbp)
	testq %r13,%r13
	jnz vectorEqual_69
L_182667:
	xorq %r15,%r15
.p2align 0x4,,0x7
vectorEqualLoop_159:
	cmpq 0x28(%rbp),%r15
	je L_455639
L_182668:
	movq 0x18(%rbp),%r14
	movq (globalObjptr+0xA058)(%rip),%r11
	movb 0x0(%r11,%r15,1),%r13b
	cmpb %r13b,0x0(%r14,%r15,1)
	jne L_455609
L_182673:
	incq %r15
	jmp vectorEqualLoop_159
.p2align 0x4
L_455609:
L_182669:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_455638
.p2align 0x4,,0x7
vectorEqual_69:
	movq 0x18(%rbp),%r14
	cmpq %r14,(globalObjptr+0xA050)(%rip)
	je L_455636
L_182597:
	cmpq $0x1,0x28(%rbp)
	jne vectorEqual_70
L_182654:
	xorq %r15,%r15
.p2align 0x4,,0x7
vectorEqualLoop_158:
	cmpq 0x28(%rbp),%r15
	je L_455634
L_182655:
	movq 0x18(%rbp),%r14
	movq (globalObjptr+0xA050)(%rip),%r11
	movb 0x0(%r11,%r15,1),%r13b
	cmpb %r13b,0x0(%r14,%r15,1)
	jne L_455610
L_182660:
	incq %r15
	jmp vectorEqualLoop_158
.p2align 0x4
L_455610:
L_182656:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_455633
.p2align 0x4,,0x7
vectorEqual_70:
	movq 0x18(%rbp),%r14
	cmpq %r14,(globalObjptr+0xA048)(%rip)
	je L_182618
L_182599:
	cmpq $0x2,0x28(%rbp)
	jne canonName_0
L_182609:
	xorq %r15,%r15
.p2align 0x4,,0x7
vectorEqualLoop_156:
	cmpq 0x28(%rbp),%r15
	je L_455616
L_182610:
	movq 0x18(%rbp),%r14
	movq (globalObjptr+0xA048)(%rip),%r11
	movb 0x0(%r11,%r15,1),%r13b
	cmpb %r13b,0x0(%r14,%r15,1)
	jne L_455611
L_182615:
	incq %r15
	jmp vectorEqualLoop_156
.p2align 0x4
L_455611:
L_182611:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_455615
.p2align 0x4,,0x7
canonName_0:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_455612
L_182601:
	movq %r15,0x20(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x18(%rbp)
	jmp L_182593
.p2align 0x4
L_455612:
L_182602:
	movq 0x20(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq $0x1,0x20(%rbp)
.p2align 0x4,,0x7
L_182603:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_455614
.p2align 0x4,,0x7
L_182604:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_455613
L_182605:
	movq %r15,0x20(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x18(%rbp)
	jmp L_182603
.p2align 0x4
L_455613:
L_182606:
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xD3B8)(%rip),%r15
	movq %r15,0x18(%rbp)
	jmp toString_537
.p2align 0x4
L_455614:
L_182607:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_182608+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182608
.p2align 0x4
.long 0x659
L_182608:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	jmp L_182604
.p2align 0x4
L_455615:
L_182613:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_182614+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182614
.p2align 0x4
.long 0x659
L_182614:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	jmp canonName_0
.p2align 0x4
L_455616:
L_182616:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_455631
.p2align 0x4,,0x7
L_182618:
	movq 0x20(%rbp),%r11
	cmpq $0x1,%r11
	je L_455627
L_182619:
	movq 0x8(%r11),%r10
	movq %r10,0x18(%rbp)
	movq 0x0(%r11),%r15
	cmpq (globalObjptr+0xA048)(%rip),%r15
	je L_182638
L_182620:
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	cmpq $0x2,%r14
	jne L_455624
L_182630:
	xorq %r13,%r13
.p2align 0x4,,0x7
vectorEqualLoop_157:
	cmpq %r14,%r13
	je L_455621
L_182631:
	movq (globalObjptr+0xA048)(%rip),%r11
	movb 0x0(%r15,%r13,1),%r10b
	cmpb %r10b,0x0(%r11,%r13,1)
	jne L_455617
L_182635:
	incq %r13
	jmp vectorEqualLoop_157
.p2align 0x4
L_455617:
L_182632:
	movq 0x10(%rbp),%r15
	cmpq $0x1,%r15
	je L_455618
L_182633:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x10(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq %r14,0x18(%rbp)
	jmp L_182593
.p2align 0x4
L_455618:
L_182634:
	movq 0x18(%rbp),%r14
	xchgq %r14,%r15
L_182624:
	cmpq $0x1,%r15
	je L_455619
L_182625:
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	movq $0x1,0x20(%rbp)
	jmp L_182603
.p2align 0x4
L_455619:
L_182627:
	movl 0x8(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_455620
L_182628:
	movq $0x1,0x10(%rbp)
	movq (globalObjptr+0xA050)(%rip),%r15
	movq %r15,0x18(%rbp)
	movq $0x1,0x20(%rbp)
	jmp L_182603
.p2align 0x4
L_455620:
L_182629:
	movq $0x1,0x10(%rbp)
	movq (globalObjptr+0xA058)(%rip),%r15
	movq %r15,0x18(%rbp)
	movq $0x1,0x20(%rbp)
	jmp L_182603
.p2align 0x4
L_455621:
L_182636:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_455623
.p2align 0x4,,0x7
L_182638:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq (globalObjptr+0xA048)(%rip),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r13
	movq %r13,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_455622
L_182639:
	movq %r13,0x20(%rbp)
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r13,0x18(%rbp)
	jmp L_182593
.p2align 0x4
L_455622:
L_182640:
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xA048)(%rip),%r15
	movq %r15,0x18(%rbp)
	movq $0x1,0x20(%rbp)
	jmp L_182603
.p2align 0x4
L_455623:
L_182641:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_182642+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182642
.p2align 0x4
.long 0x798
L_182642:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	jmp L_182638
.p2align 0x4
L_455624:
L_182621:
	movq 0x10(%rbp),%r15
	cmpq $0x1,%r15
	je L_455625
L_182622:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x10(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq %r14,0x18(%rbp)
	jmp L_182593
.p2align 0x4
L_455625:
L_182623:
	movq 0x18(%rbp),%r14
	xchgq %r14,%r15
	jmp L_182624
.p2align 0x4
L_455627:
L_182644:
	movl 0x8(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_455629
L_182645:
	movq 0x10(%rbp),%r15
	cmpq $0x1,%r15
	je L_455628
L_182646:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x10(%rbp)
	movq %r14,0x18(%rbp)
	movq (globalObjptr+0x7C0)(%rip),%r15
	movq %r15,0x20(%rbp)
	jmp L_182593
.p2align 0x4
L_455628:
L_182647:
	movq $0x1,0x10(%rbp)
	movq (globalObjptr+0xA048)(%rip),%r15
	movq %r15,0x18(%rbp)
	movq $0x1,0x20(%rbp)
	jmp L_182603
.p2align 0x4
L_455629:
L_182648:
	movq 0x10(%rbp),%r15
	cmpq $0x1,%r15
	je L_182627
L_182649:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x10(%rbp)
	movq %r14,0x18(%rbp)
	movq $0x1,0x20(%rbp)
	jmp L_182593
.p2align 0x4
L_455631:
L_182651:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_182652+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182652
.p2align 0x4
.long 0x192F
L_182652:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	jmp L_182618
.p2align 0x4
L_455633:
L_182658:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_182659+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182659
.p2align 0x4
.long 0x5DE
L_182659:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp vectorEqual_70
.p2align 0x4
L_455634:
L_182661:
	movq 0x10(%rbp),%r15
	cmpq $0x1,%r15
	je L_455635
L_182662:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x10(%rbp)
	movq %r14,0x18(%rbp)
	jmp L_182593
.p2align 0x4
L_455635:
L_182663:
	movq 0x20(%rbp),%r14
	xchgq %r14,%r15
	jmp L_182624
.p2align 0x4
L_455636:
L_182664:
	movq 0x10(%rbp),%r15
	cmpq $0x1,%r15
	je L_455637
L_182665:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x10(%rbp)
	movq %r14,0x18(%rbp)
	jmp L_182593
.p2align 0x4
L_455637:
L_182666:
	movq 0x20(%rbp),%r14
	xchgq %r14,%r15
	jmp L_182624
.p2align 0x4
L_455638:
L_182671:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_182672+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182672
.p2align 0x4
.long 0x5DE
L_182672:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp vectorEqual_69
.p2align 0x4
L_455639:
L_182674:
	movq 0x10(%rbp),%r15
	cmpq $0x1,%r15
	je L_455640
L_182675:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x10(%rbp)
	movq %r14,0x18(%rbp)
	jmp L_182593
.p2align 0x4
L_455640:
L_182676:
	movq 0x20(%rbp),%r14
	xchgq %r14,%r15
	jmp L_182624
.p2align 0x4
L_455641:
L_182677:
	movq 0x10(%rbp),%r15
	cmpq $0x1,%r15
	je L_455642
L_182678:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq %r15,0x10(%rbp)
	movq %r13,0x18(%rbp)
	jmp L_182593
.p2align 0x4
L_455642:
L_182679:
	movq 0x20(%rbp),%r13
	xchgq %r13,%r15
	jmp L_182624
.p2align 0x4
L_455643:
L_182680:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_182681+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182681
.p2align 0x4
.long 0x659
L_182681:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	jmp L_182594
.text
.p2align 0x4
.globl fromString_24
.hidden fromString_24
fromString_24:
L_182685:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_182686
L_182740:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_182741+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182741
.p2align 0x4
.long 0x451
L_182741:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_182686:
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
	movq $0x0,0x18(%rbp)
	movq $0x0,0x20(%rbp)
.p2align 0x4,,0x7
loop_1880:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_455664
.p2align 0x4,,0x7
L_182687:
	movq 0x20(%rbp),%r15
	cmpq 0x8(%rbp),%r15
	jnl L_455646
L_182735:
	movq 0x0(%rbp),%r14
	cmpb $0x2F,0x0(%r14,%r15,1)
	je L_455645
L_182736:
	incq %r15
	movq %r15,0x20(%rbp)
	jmp loop_1880
.p2align 0x4
L_455645:
L_182737:
	movq %r15,%r14
	incq %r14
	movq 0x18(%rbp),%r13
	subq %r13,%r15
	movq $0x225,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x8(%r11)
	addq $0x20,%r12
	movq %r13,0x0(%r11)
	movq %r14,0x18(%rbp)
	movq %r14,0x20(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x10(%r11)
	movq $0x295B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x10(%rbp)
	jmp loop_1880
.p2align 0x4
L_455646:
L_182688:
	movq 0x18(%rbp),%r14
	subq %r14,%r15
	movq $0x225,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x20,%r12
	movq %r14,0x0(%r13)
	movq 0x0(%rbp),%r15
	movq %r15,0x10(%r13)
	movq %r13,0x8(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_182689:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_455663
.p2align 0x4,,0x7
L_182690:
	movq $0x295B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_455647
L_182691:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_182689
.p2align 0x4
L_455647:
L_182692:
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_182693:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_455662
.p2align 0x4,,0x7
L_182694:
	movq 0x8(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x18(%rbp)
	movq 0x10(%r14),%r15
	movq %r15,0x20(%rbp)
	movq 0x8(%r14),%r11
	movq %r11,0x28(%rbp)
	testq %r13,%r13
	jnz L_182696
L_182728:
	cmpq 0xFFFFFFFFFFFFFFF0(%r15),%r11
	jne L_455656
L_182730:
L_182703:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x10(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x0(%rbp),%r13
	cmpq $0x1,%r13
	je L_455648
L_182704:
	movq %r14,0x10(%rbp)
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movq %r13,0x0(%rbp)
	movq %r14,0x8(%rbp)
	jmp L_182693
.p2align 0x4
L_455648:
L_182705:
	movq %r15,0x8(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_182706:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_455655
.p2align 0x4,,0x7
L_182707:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_455649
L_182708:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_182706
.p2align 0x4
L_455649:
L_182709:
	movq 0x8(%rbp),%r11
	cmpq %r11,(globalObjptr+0xA058)(%rip)
	je L_182717
L_182710:
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r10
	testq %r10,%r10
	jnz L_455653
L_182712:
	xorq %r13,%r13
	xchgq %r10,%r14
.p2align 0x4,,0x7
vectorEqualLoop_160:
	cmpq %r14,%r13
	je L_455651
L_182713:
	movq (globalObjptr+0xA058)(%rip),%r11
	movq 0x8(%rbp),%r9
	movb 0x0(%r9,%r13,1),%r10b
	cmpb %r10b,0x0(%r11,%r13,1)
	jne L_455650
L_182715:
	incq %r13
	jmp vectorEqualLoop_160
.p2align 0x4
L_455650:
L_182714:
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xA058)(%rip),%r15
	movq %r15,0x0(%rbp)
	movl $0x0,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_455651:
L_182717:
	cmpq $0x1,0x10(%rbp)
	je L_455652
L_182718:
	movq (globalObjptr+0xA058)(%rip),%r15
	movq %r15,0x0(%rbp)
	movl $0x1,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_455652:
L_182719:
	movq (globalObjptr+0xA058)(%rip),%r15
	movq %r15,0x0(%rbp)
	movl $0x0,0x8(%rbp)
	movq $0x1,0x10(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_455653:
L_182711:
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xA058)(%rip),%r15
	movq %r15,0x0(%rbp)
	movl $0x0,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_455655:
L_182721:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_182722+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182722
.p2align 0x4
.long 0x45B
L_182722:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_182707
.p2align 0x4
L_455656:
L_182696:
	movq 0x28(%rbp),%r15
	testq %r15,%r15
	jnz L_455659
L_182727:
	movq (globalObjptr+0x5A8)(%rip),%r15
	movq %r15,0x8(%rbp)
.p2align 0x4,,0x7
L_182700:
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_1881:
	cmpq 0x28(%rbp),%r15
	jnl L_455657
L_182725:
	movq 0x18(%rbp),%r14
	addq %r15,%r14
	movq 0x8(%rbp),%r13
	movq 0x20(%rbp),%r10
	movb 0x0(%r10,%r14,1),%r11b
	movb %r11b,0x0(%r13,%r15,1)
	incq %r15
	jmp loop_1881
.p2align 0x4
L_455657:
L_182701:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_455658
.p2align 0x4,,0x7
L_182702:
	movq 0x8(%rbp),%r15
	movq $0x7,0xFFFFFFFFFFFFFFF8(%r15)
	jmp L_182703
.p2align 0x4
L_455658:
L_182723:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_182724+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182724
.p2align 0x4
.long 0x45B
L_182724:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_182702
.p2align 0x4
L_455659:
L_182697:
	movq 0x28(%rbp),%rdx
	cmpq $0x7FFFFFFF,%rdx
	ja L_455660
L_182698:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x51,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_182699+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182699
.p2align 0x4
.long 0x977
L_182699:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq %rax,0x8(%rbp)
	jmp L_182700
.p2align 0x4
L_455660:
L_182726:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_455662:
L_182731:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_182732+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182732
.p2align 0x4
.long 0x45B
L_182732:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_182694
.p2align 0x4
L_455663:
L_182733:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_182734+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182734
.p2align 0x4
.long 0x45B
L_182734:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_182690
.p2align 0x4
L_455664:
L_182738:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_182739+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182739
.p2align 0x4
.long 0x48E
L_182739:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	jmp L_182687
.text
.p2align 0x4
.globl toString_537
.hidden toString_537
toString_537:
L_182742:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_182743
L_182870:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_182871+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182871
.p2align 0x4
.long 0x798
L_182871:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_182743:
	movq 0x0(%rbp),%r13
	cmpq (globalObjptr+0xA058)(%rip),%r13
	je L_182752
L_182744:
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	testq %r15,%r15
	jnz L_182746
L_182747:
	xorq %r14,%r14
.p2align 0x4,,0x7
vectorEqualLoop_161:
	cmpq %r15,%r14
	je L_455667
L_182748:
	movq (globalObjptr+0xA058)(%rip),%r13
	movq 0x0(%rbp),%r10
	movb 0x0(%r10,%r14,1),%r11b
	cmpb %r11b,0x0(%r13,%r14,1)
	jne L_455666
L_182750:
	incq %r14
	jmp vectorEqualLoop_161
.p2align 0x4
L_455666:
L_182746:
	movq $0xF,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_455667:
L_182752:
	movl 0x8(%rbp),%r11d
	testl %r11d,%r11d
	jnz L_182757
L_182753:
	movq 0x10(%rbp),%r11
	cmpq $0x1,%r11
	je L_182778
L_182754:
	movq 0x0(%r11),%r15
	cmpq (globalObjptr+0xA058)(%rip),%r15
	je L_182746
L_182755:
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	testq %r14,%r14
	jnz L_182757
L_182861:
	xorq %r13,%r13
.p2align 0x4,,0x7
vectorEqualLoop_164:
	cmpq %r13,%r14
	je L_182746
L_182862:
	movq (globalObjptr+0xA058)(%rip),%r10
	movb 0x0(%r10,%r13,1),%r11b
	cmpb %r11b,0x0(%r15,%r13,1)
	jne L_455668
L_182864:
	incq %r13
	jmp vectorEqualLoop_164
.p2align 0x4
L_455668:
L_182757:
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_182778
L_182758:
	movq 0x8(%r14),%r13
	movq %r13,0x20(%rbp)
	movq 0x0(%r14),%r15
.p2align 0x4,,0x7
L_182759:
	cmpq (globalObjptr+0xA058)(%rip),%r15
	je L_455697
L_182760:
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	testq %r14,%r14
	jnz L_182762
L_182850:
	xorq %r13,%r13
.p2align 0x4,,0x7
vectorEqualLoop_163:
	cmpq %r13,%r14
	je L_455670
L_182851:
	movq (globalObjptr+0xA058)(%rip),%r11
	movb 0x0(%r15,%r13,1),%r10b
	cmpb %r10b,0x0(%r11,%r13,1)
	jne L_455669
L_182853:
	incq %r13
	jmp vectorEqualLoop_163
.p2align 0x4
L_455669:
L_182762:
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_182763+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromString_24
.p2align 0x4
L_455670:
L_182854:
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_455671
L_182855:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	jmp L_182759
.p2align 0x4
L_455671:
L_182778:
	movl 0x8(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_455694
L_182779:
	movq 0x10(%rbp),%r15
	cmpq $0x1,%r15
	je L_455693
L_182780:
	movq 0x8(%r15),%r14
	movq %r14,0x8(%rbp)
	movq 0x0(%r15),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xA058)(%rip),%r15
	movq %r15,0x20(%rbp)
	movq $0x1,0x28(%rbp)
.p2align 0x4,,0x7
L_182781:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_455692
.p2align 0x4,,0x7
L_182782:
	movq 0x10(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq $0x225,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x20,%r12
	movq $0x0,0x0(%r13)
	movq %r15,0x10(%r13)
	movq $0x295B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_455672
L_182783:
	movq %r15,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x10(%rbp)
	jmp L_182781
.p2align 0x4
L_455672:
L_182784:
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%rbp)
L_182785:
	cmpq $0x1,%r15
	je L_455691
L_182786:
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq $0x1,0x28(%rbp)
.p2align 0x4,,0x7
L_182787:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_455690
.p2align 0x4,,0x7
L_182788:
	movq $0x295B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_455673
L_182789:
	movq %r15,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_182787
.p2align 0x4
L_455673:
L_182790:
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_455683
L_182791:
	movq 0x20(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x10(%rbp)
L_182792:
	andq $0x3,%r15
	jz L_455674
L_182793:
	movq (c_stackP+0x0)(%rip),%rsp
	movq (globalObjptr+0xC9C8)(%rip),%rdi
	xorq %rax,%rax
	call MLton_bug
.p2align 0x4
L_455674:
L_182794:
	movq 0x28(%rbp),%r11
	movq 0x8(%r11),%r13
	movq 0x0(%r11),%r14
	movq 0x10(%rbp),%r15
.p2align 0x4,,0x7
L_182795:
	incq %r15
	addq 0x8(%r14),%r15
	movq %r15,0x30(%rbp)
	cmpq $0x1,%r13
	je L_455675
L_182796:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	jmp L_182795
.p2align 0x4
L_455675:
L_182797:
	testq %r15,%r15
	jz L_455682
L_182798:
	cmpq $0x7FFFFFFF,%r15
	ja L_455681
L_182799:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x51,%rcx
	movq %r15,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_182800+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182800
.p2align 0x4
.long 0xEAC
L_182800:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq %rax,0x38(%rbp)
L_182801:
	movq 0x20(%rbp),%r8
	movq 0x0(%r8),%r14
	movq 0x10(%r8),%r13
	xorq %r11,%r11
	movl $0x1,%ecx
	xorq %r15,%r15
	movq 0x10(%rbp),%r10
	movq 0x28(%rbp),%r9
.p2align 0x4,,0x7
loop_1882:
	cmpq 0x30(%rbp),%r15
	jnl L_455679
.p2align 0x4,,0x7
loop_1883:
	cmpq %r10,%r11
	jl L_455678
L_182808:
	cmpl $0x1,%ecx
	je L_455677
L_182809:
	cmpq $0x1,%r9
	je L_455676
L_182810:
	movq 0x0(%r9),%r8
	movq 0x8(%r9),%r9
	movq 0x10(%r8),%r13
	movq 0x8(%r8),%r10
	movq 0x0(%r8),%r14
	xorq %r11,%r11
	movl $0x1,%ecx
	jmp loop_1883
.p2align 0x4
L_455676:
L_182811:
	movq (globalObjptr+0x6F0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_455677:
L_182812:
	movq $0x1,%r10
	movq 0x18(%rbp),%r13
	xorq %r14,%r14
	xorq %r11,%r11
	xorl %ecx,%ecx
	jmp loop_1883
.p2align 0x4
L_455678:
L_182813:
	movq %r11,%r8
	addq %r14,%r8
	movq 0x38(%rbp),%rsp
	movb 0x0(%r13,%r8,1),%sil
	movb %sil,0x0(%rsp,%r15,1)
	incq %r11
	incq %r15
	jmp loop_1882
.p2align 0x4
L_455679:
L_182802:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_182803
L_182805:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_182806+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182806
.p2align 0x4
.long 0x1108
L_182806:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_182803:
	movq 0x38(%rbp),%r15
	movq $0x7,0xFFFFFFFFFFFFFFF8(%r15)
L_182804:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x0(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	jmp concat_0
.p2align 0x4
L_455681:
L_182815:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_455682:
L_182816:
	movq (globalObjptr+0x6E8)(%rip),%r14
	movq %r14,0x38(%rbp)
	jmp L_182801
.p2align 0x4
L_455683:
L_182817:
	movq 0x20(%rbp),%r13
	movq 0x0(%r13),%r14
	movq %r14,0x10(%rbp)
	movq 0x10(%r13),%r11
	movq %r11,0x18(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x28(%rbp)
	testq %r14,%r14
	jnz L_182819
L_182831:
	cmpq 0xFFFFFFFFFFFFFFF0(%r11),%r15
	jne L_455684
L_182833:
	movq %r11,%r15
	jmp L_182804
.p2align 0x4
L_455684:
L_182819:
	movq 0x28(%rbp),%rdx
	testq %rdx,%rdx
	jz L_455688
L_182820:
	cmpq $0x7FFFFFFF,%rdx
	ja L_182815
L_182821:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x51,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_182822+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182822
.p2align 0x4
.long 0xED5
L_182822:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq %rax,0x20(%rbp)
L_182823:
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_1884:
	cmpq 0x28(%rbp),%r15
	jnl L_455685
L_182828:
	movq %r15,%r14
	addq 0x10(%rbp),%r14
	movq 0x20(%rbp),%r13
	movq 0x18(%rbp),%r10
	movb 0x0(%r10,%r14,1),%r11b
	movb %r11b,0x0(%r13,%r15,1)
	incq %r15
	jmp loop_1884
.p2align 0x4
L_455685:
L_182824:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_182825
L_182826:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_182827+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182827
.p2align 0x4
.long 0x52C
L_182827:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_182825:
	movq 0x20(%rbp),%r15
	movq $0x7,0xFFFFFFFFFFFFFFF8(%r15)
	jmp L_182804
.p2align 0x4
L_455688:
L_182830:
	movq (globalObjptr+0x5A8)(%rip),%r15
	movq %r15,0x20(%rbp)
	jmp L_182823
.p2align 0x4
L_455690:
L_182834:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_182835+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182835
.p2align 0x4
.long 0x4DE
L_182835:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_182788
.p2align 0x4
L_455691:
L_182836:
	movq $0x3,0x18(%rbp)
	movl $0x0,0x20(%rbp)
	addq $0x18,%rbp
	leaq (L_182837+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_0
.p2align 0x4
L_455692:
L_182841:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_182842+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182842
.p2align 0x4
.long 0x4DE
L_182842:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_182782
.p2align 0x4
L_455693:
L_182843:
	movq (globalObjptr+0xA058)(%rip),%r14
	movq %r14,0x8(%rbp)
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_182785
.p2align 0x4
L_455694:
L_182844:
	movq 0x10(%rbp),%r15
	cmpq $0x1,%r15
	je L_455695
L_182845:
	movq 0x8(%r15),%r14
	movq %r14,0x8(%rbp)
	movq 0x0(%r15),%r15
	movq %r15,0x10(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq $0x1,0x28(%rbp)
	jmp L_182781
.p2align 0x4
L_455695:
L_182846:
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%rbp)
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_182785
.p2align 0x4
L_455697:
L_182857:
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_182778
L_182858:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	jmp L_182759
.p2align 0x4
.long 0x65C
L_182763:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r13
	movq %r13,0x28(%rbp)
	movl 0x38(%rbp),%r11d
	movl %r11d,0xC(%rbp)
	movq 0x40(%rbp),%r10
	movq %r10,0x30(%rbp)
L_182764:
	movq %r10,%r15
	andq $0x3,%r15
	jnz L_182765
L_182766:
	cmpq $0x1,0x8(%r10)
	jne L_182765
L_182767:
	testl %r11d,%r11d
	jnz L_182765
L_182768:
	cmpq %r13,(globalObjptr+0xA058)(%rip)
	je L_455712
L_182769:
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	testq %r15,%r15
	jnz L_182765
L_182771:
	xorq %r14,%r14
.p2align 0x4,,0x7
vectorEqualLoop_162:
	cmpq %r14,%r15
	je L_455709
L_182772:
	movq (globalObjptr+0xA058)(%rip),%r13
	movq 0x28(%rbp),%r10
	movb 0x0(%r10,%r14,1),%r11b
	cmpb %r11b,0x0(%r13,%r14,1)
	jne L_455708
L_182774:
	incq %r14
	jmp vectorEqualLoop_162
.p2align 0x4
L_455708:
L_182765:
	movq $0x11,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_455709:
L_182775:
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_182778
L_182776:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	jmp L_182759
.p2align 0x4
L_455712:
L_182847:
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_182778
L_182848:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	jmp L_182759
.p2align 0x4
.long 0x5AF
L_182837:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_182838
L_182839:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_182840+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182840
.p2align 0x4
.long 0x45B
L_182840:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_182838:
	movq 0x10(%rbp),%r15
	jmp L_182804
.text
.p2align 0x4
.globl x_1204
.hidden x_1204
x_1204:
L_182872:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x10(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_182873
L_183328:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_183329+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183329
.p2align 0x4
.long 0x452
L_183329:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_182873:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_455719
L_182874:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x1498,%r13
	je L_455718
L_182876:
	movq 0x30(%r14),%r13
	movq %r13,0x18(%rbp)
	movq 0x28(%r14),%r11
	movq %r11,0x20(%rbp)
	movq 0x20(%r14),%r11
	movq %r11,0x28(%rbp)
	movq 0x18(%r14),%r11
	movq %r11,0x30(%rbp)
	movq 0x10(%r14),%r11
	movq %r11,0x38(%rbp)
	movq 0x8(%r14),%r11
	movq %r11,0x40(%rbp)
	movq 0x0(%r14),%r11
	movq %r11,0x48(%rbp)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq $0x1,0x0(%r15)
	movq 0x0(%r13),%r15
	movq %r15,0x50(%rbp)
	leaq L_182926(%rip),%r14
	movq %r14,0x8(%rbp)
	movq %rbp,%r14
	addq $0x10,%r14
	subq (gcState+0x560)(%rip),%r14
	movq %r14,(gcState+0x20)(%rip)
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_182877+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromString_24
.p2align 0x4
L_455718:
L_182875:
	movq 0x0(%r14),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_455719:
L_183327:
	movq $0x12,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x2531
L_182877:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	movl 0x68(%rbp),%r15d
	movl %r15d,0x60(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_182878
L_183325:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_183326+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183326
.p2align 0x4
.long 0x2561
L_183326:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_182878:
	movl 0x60(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_455721
L_182879:
	movq $0xF,%r15
L_182880:
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq $0x2933,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x40,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x20(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x28(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x30(%r15)
	movq 0x0(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_455721:
L_182881:
	movq (globalObjptr+0xD348)(%rip),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_182882+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromString_24
.p2align 0x4
.long 0x72E
L_182926:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_182927
L_182928:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_182929+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182929
.p2align 0x4
.long 0x719
L_182929:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_182927:
	movq 0x50(%rbp),%r15
	jmp L_182880
.p2align 0x4
.long 0x2531
L_182882:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	movl 0x68(%rbp),%r15d
	movq 0x70(%rbp),%r14
	movq %r14,0x68(%rbp)
	testl %r15d,%r15d
	movl %r15d,0x60(%rbp)
	jnz L_455724
L_182883:
	movq (globalObjptr+0xD348)(%rip),%r15
	movq %r15,0x58(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_182884+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_1
.p2align 0x4
L_455724:
L_183324:
	movq (globalObjptr+0xD348)(%rip),%r15
	movq %r15,0x50(%rbp)
L_182886:
	movq 0x20(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (fromString_10+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x2532
L_182884:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_182885+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp mkCanonical_0
.p2align 0x4
.long 0x2531
fromString_10:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_182887
L_183322:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_183323+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183323
.p2align 0x4
.long 0x2556
L_183323:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_182887:
	movq 0x58(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	decq %r15
	jo L_455759
L_182889:
	movb 0x0(%r14,%r15,1),%r13b
	testb %r13b,%r13b
	jz L_455725
L_182890:
	movq (globalObjptr+0x750)(%rip),%r15
	jmp L_182880
.p2align 0x4
L_455725:
L_182891:
	incl (gcState+0x44)(%rip)
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0x58(%rbp),%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_182892+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_FileSys_Dirstream_openDir
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182892
.p2align 0x4
.long 0x719
L_182892:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq %rax,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_182893
L_183320:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_183321+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183321
.p2align 0x4
.long 0x254C
L_183321:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_182893:
	movq 0x58(%rbp),%r15
	testq %r15,%r15
	jz L_455748
L_182894:
	movl (gcState+0x44)(%rip),%r15d
	testl %r15d,%r15d
	jz L_455747
L_182895:
	decl %r15d
	movl %r15d,(gcState+0x44)(%rip)
	movq $0x1,0x60(%rbp)
loop_1886:
	incl (gcState+0x44)(%rip)
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_182896+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_Error_clearErrno
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182896
.p2align 0x4
.long 0x2533
L_182896:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0x58(%rbp),%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_182897+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_FileSys_Dirstream_readDir
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182897
.p2align 0x4
.long 0x2533
L_182897:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq %rax,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_182898
L_183289:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_183290+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183290
.p2align 0x4
.long 0x2546
L_183290:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_182898:
	movq 0x68(%rbp),%r15
	testq %r15,%r15
	jz L_455733
L_182899:
	movl (gcState+0x44)(%rip),%r15d
	testl %r15d,%r15d
	jz L_455732
L_182900:
	decl %r15d
	movl %r15d,(gcState+0x44)(%rip)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
loop_1887:
	movq 0x68(%rbp),%r15
	movq %r15,0x70(%rbp)
	movslq %ecx,%r14
	movq %r14,0x78(%rbp)
	movb 0x0(%r15,%r14,1),%r13b
	testb %r13b,%r13b
	jz L_455726
L_182901:
	incl %ecx
	jmp loop_1887
.p2align 0x4
L_455726:
L_182902:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_182903
L_183115:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_183116+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183116
.p2align 0x4
.long 0x2534
L_183116:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_182903:
	movq 0x78(%rbp),%rdx
	cmpq $0x7FFFFFFF,%rdx
	ja L_455730
L_182904:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x51,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_182905+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182905
.p2align 0x4
.long 0x2534
L_182905:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq %rax,0x68(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_1888:
	cmpq 0x78(%rbp),%r15
	jnl L_455727
L_183113:
	movl %r15d,%r14d
	movslq %r14d,%r13
	movq 0x68(%rbp),%r14
	movq 0x70(%rbp),%r10
	movb 0x0(%r10,%r13,1),%r11b
	movb %r11b,0x0(%r14,%r15,1)
	incq %r15
	jmp loop_1888
.p2align 0x4
L_455727:
L_182906:
	movq 0x68(%rbp),%r14
	movq $0x7,0xFFFFFFFFFFFFFFF8(%r14)
	cmpq (globalObjptr+0xA050)(%rip),%r14
	je loop_1886
L_182907:
	cmpq $0x1,0x78(%rbp)
	jne vectorEqual_71
L_183107:
	xorq %r15,%r15
.p2align 0x4,,0x7
vectorEqualLoop_166:
	cmpq 0x78(%rbp),%r15
	je loop_1886
L_183108:
	movq (globalObjptr+0xA050)(%rip),%r14
	movq 0x68(%rbp),%r11
	movb 0x0(%r11,%r15,1),%r13b
	cmpb %r13b,0x0(%r14,%r15,1)
	jne vectorEqual_238
L_183110:
	incq %r15
	jmp vectorEqualLoop_166
.p2align 0x4
vectorEqual_238:
vectorEqual_71:
	movq (globalObjptr+0xA048)(%rip),%r14
	cmpq %r14,0x68(%rbp)
	je loop_1886
L_182909:
	cmpq $0x2,0x78(%rbp)
	jne L_182911
L_183101:
	xorq %r15,%r15
.p2align 0x4,,0x7
vectorEqualLoop_165:
	cmpq 0x78(%rbp),%r15
	je loop_1886
L_183102:
	movq 0x68(%rbp),%r14
	movq (globalObjptr+0xA048)(%rip),%r11
	movb 0x0(%r11,%r15,1),%r13b
	cmpb %r13b,0x0(%r14,%r15,1)
	jne L_455728
L_183104:
	incq %r15
	jmp vectorEqualLoop_165
.p2align 0x4
L_455728:
L_182911:
	leaq L_183096(%rip),%r15
	movq %r15,0x8(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_182912+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp joinDirFile_0
.p2align 0x4
L_455730:
L_183085:
	movq $0x5,0x50(%rbp)
L_182921:
	movq $0x3E4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x60(%rbp)
	leaq L_182926(%rip),%r15
	movq %r15,0x8(%rbp)
	movl $0x0,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_182922+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1279
.p2align 0x4
L_455732:
L_183045:
	movq (globalObjptr+0x740)(%rip),%r15
	movq %r15,0x50(%rbp)
	jmp L_182921
.p2align 0x4
L_455733:
L_183118:
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_183119+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_Error_getErrno
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183119
.p2align 0x4
.long 0x2533
L_183119:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movl %eax,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_183120
L_183287:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_183288+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183288
.p2align 0x4
.long 0x2546
L_183288:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_183120:
	movl (gcState+0x44)(%rip),%r14d
	testl %r14d,%r14d
	jz L_183045
L_183121:
	decl %r14d
	movl %r14d,(gcState+0x44)(%rip)
	movq (globalObjptr+0x76B0)(%rip),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_183122:
	cmpl 0x68(%rbp),%ecx
	je L_455742
L_183123:
	cmpq $0x1,%r15
	je L_455734
L_183124:
	movl 0x0(%r15),%ecx
	movq 0x8(%r15),%r15
	jmp L_183122
.p2align 0x4
L_455734:
L_183125:
	movq (c_stackP+0x0)(%rip),%rsp
	movl 0x68(%rbp),%edi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_183126+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_Error_strError
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183126
.p2align 0x4
.long 0x2548
L_183126:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq %rax,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_183127
L_183144:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_183145+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183145
.p2align 0x4
.long 0x2548
L_183145:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_183127:
	movq 0x50(%rbp),%r15
	movq %r15,0x60(%rbp)
	testq %r15,%r15
	jz L_455740
L_183128:
	xorl %ecx,%ecx
.p2align 0x4,,0x7
loop_1893:
	movslq %ecx,%r15
	movq %r15,0x50(%rbp)
	movq 0x60(%rbp),%r13
	movb 0x0(%r13,%r15,1),%r14b
	testb %r14b,%r14b
	jz L_455735
L_183129:
	incl %ecx
	jmp loop_1893
.p2align 0x4
L_455735:
L_183130:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_183131
L_183141:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_183142+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183142
.p2align 0x4
.long 0x2548
L_183142:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_183131:
	movq 0x50(%rbp),%rdx
	cmpq $0x7FFFFFFF,%rdx
	ja L_183085
L_183132:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x51,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_183133+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183133
.p2align 0x4
.long 0x2548
L_183133:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq %rax,0x70(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_1894:
	cmpq 0x50(%rbp),%r15
	jnl L_455736
L_183139:
	movl %r15d,%r14d
	movslq %r14d,%r13
	movq 0x70(%rbp),%r14
	movq 0x60(%rbp),%r10
	movb 0x0(%r10,%r13,1),%r11b
	movb %r11b,0x0(%r14,%r15,1)
	incq %r15
	jmp loop_1894
.p2align 0x4
L_455736:
L_183134:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_183135
L_183137:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_183138+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183138
.p2align 0x4
.long 0x2549
L_183138:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_183135:
	movq 0x70(%rbp),%r15
	movq $0x7,0xFFFFFFFFFFFFFFF8(%r15)
L_183136:
	movl 0x68(%rbp),%r14d
	shlq $0x1,%r14
	orq $0x1,%r14
	movq $0x141B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq $0x1931,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r15,0x50(%rbp)
	addq $0x10,%r12
	jmp L_182921
.p2align 0x4
L_455740:
L_183143:
	movq (globalObjptr+0xDBE8)(%rip),%r15
	jmp L_183136
.p2align 0x4
L_455742:
L_183146:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_183147
L_183284:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_183285+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183285
.p2align 0x4
.long 0x2533
L_183285:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_183147:
	movq $0x3E4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x70(%rbp)
	leaq L_182926(%rip),%r15
	movq %r15,0x8(%rbp)
	movl $0x0,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_183148+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1279
.p2align 0x4
L_455747:
L_183292:
	movq (globalObjptr+0x740)(%rip),%r15
	jmp L_182880
.p2align 0x4
L_455748:
L_183293:
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_183294+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_Error_getErrno
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183294
.p2align 0x4
.long 0x718
L_183294:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movl %eax,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_183295
L_183318:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_183319+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183319
.p2align 0x4
.long 0x255F
L_183319:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_183295:
	movl (gcState+0x44)(%rip),%r15d
	testl %r15d,%r15d
	jz L_183292
L_183296:
	decl %r15d
	movl %r15d,(gcState+0x44)(%rip)
	movq (c_stackP+0x0)(%rip),%rsp
	movl 0x50(%rbp),%edi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_183297+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_Error_strError
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183297
.p2align 0x4
.long 0x255F
L_183297:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq %rax,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_183298
L_183315:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_183316+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183316
.p2align 0x4
.long 0x2544
L_183316:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_183298:
	movq 0x58(%rbp),%r15
	movq %r15,0x60(%rbp)
	testq %r15,%r15
	jz L_455754
L_183299:
	xorl %ecx,%ecx
.p2align 0x4,,0x7
loop_1895:
	movslq %ecx,%r15
	movq %r15,0x58(%rbp)
	movq 0x60(%rbp),%r13
	movb 0x0(%r13,%r15,1),%r14b
	testb %r14b,%r14b
	jz L_455749
L_183300:
	incl %ecx
	jmp loop_1895
.p2align 0x4
L_455749:
L_183301:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_183302
L_183312:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_183313+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183313
.p2align 0x4
.long 0x254A
L_183313:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_183302:
	movq 0x58(%rbp),%rdx
	cmpq $0x7FFFFFFF,%rdx
	ja L_455752
L_183303:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x51,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_183304+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183304
.p2align 0x4
.long 0x254A
L_183304:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq %rax,0x68(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_1896:
	cmpq 0x58(%rbp),%r15
	jnl L_455750
L_183310:
	movl %r15d,%r14d
	movslq %r14d,%r13
	movq 0x68(%rbp),%r14
	movq 0x60(%rbp),%r10
	movb 0x0(%r10,%r13,1),%r11b
	movb %r11b,0x0(%r14,%r15,1)
	incq %r15
	jmp loop_1896
.p2align 0x4
L_455750:
L_183305:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_183306
L_183308:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_183309+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183309
.p2align 0x4
.long 0x2560
L_183309:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_183306:
	movq 0x68(%rbp),%r15
	movq $0x7,0xFFFFFFFFFFFFFFF8(%r15)
L_183307:
	movl 0x50(%rbp),%r14d
	shlq $0x1,%r14
	orq $0x1,%r14
	movq $0x141B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq $0x1931,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x10,%r12
	jmp L_182880
.p2align 0x4
L_455752:
L_183311:
	movq $0x5,%r15
	jmp L_182880
.p2align 0x4
L_455754:
L_183314:
	movq (globalObjptr+0xDBE8)(%rip),%r15
	jmp L_183307
.p2align 0x4
L_455759:
L_182888:
	movq $0x3,%r15
	jmp L_182880
.p2align 0x4
.long 0x2532
L_182885:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	jmp L_182886
.p2align 0x4
.long 0x2535
L_182912:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_182913+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromString_24
.p2align 0x4
.long 0x72E
L_183096:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_182921
L_183098:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_183099+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183099
.p2align 0x4
.long 0x254C
L_183099:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	jmp L_182921
.p2align 0x4
.long 0x2531
L_182922:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movl 0x60(%rbp),%r15d
	movl %r15d,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_182923
L_182924:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_182925+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182925
.p2align 0x4
.long 0x719
L_182925:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_182923:
	movq 0x50(%rbp),%r15
	jmp L_182880
.p2align 0x4
.long 0x254D
L_183148:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movl 0x70(%rbp),%r15d
	movl %r15d,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_183149
L_183282:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_183283+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183283
.p2align 0x4
.long 0x255E
L_183283:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_183149:
	movq 0x60(%rbp),%r15
	cmpq $0x1,%r15
	je L_455763
L_183150:
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq $0x1,0x28(%rbp)
L_183151:
	leaq L_183196(%rip),%r15
	movq %r15,0x8(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_183152+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromString_24
.p2align 0x4
L_455763:
L_183281:
	movq $0x1,%r14
	xchgq %r14,%r15
L_183163:
	movq $0x2931,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq 0x0(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r14,0x0(%r13)
	movq %r15,0x0(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x2536
L_182913:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x78(%rbp)
	movl 0x88(%rbp),%r15d
	movq 0x90(%rbp),%r14
	movq %r14,0x88(%rbp)
	testl %r15d,%r15d
	movl %r15d,0x80(%rbp)
	jnz L_455765
L_182914:
	movq 0x70(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_182915+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fullPath_0
.p2align 0x4
L_455765:
L_183100:
	movq 0x70(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_182918+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fullPath_0
.p2align 0x4
.long 0x254E
L_183152:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x30(%rbp)
	movl 0x68(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_183153
L_183279:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_183280+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183280
.p2align 0x4
.long 0x255D
L_183280:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_183153:
	movl 0x38(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_455770
L_183154:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_455766
L_183155:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x18(%rbp)
	movq %r14,0x20(%rbp)
	jmp L_183151
.p2align 0x4
L_455766:
L_183156:
	movq 0x28(%rbp),%r14
	xchgq %r14,%r15
L_183157:
	cmpq $0x1,%r15
	je L_455769
L_183158:
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq $0x1,0x28(%rbp)
.p2align 0x4,,0x7
L_183159:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_455768
.p2align 0x4,,0x7
L_183160:
	movq $0x2381,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_183163
L_183161:
	movq %r15,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_183159
.p2align 0x4
L_455768:
L_183164:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_183165+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183165
.p2align 0x4
.long 0x1DF7
L_183165:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_183160
.p2align 0x4
L_455769:
L_183166:
	movq $0x1,%r15
	jmp L_183163
.p2align 0x4
L_455770:
L_183167:
	movq 0x20(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_183168+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromString_24
.p2align 0x4
.long 0x72E
L_183196:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_183197
L_183200:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_183201+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183201
.p2align 0x4
.long 0x2555
L_183201:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_183197:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_455772
L_183198:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x18(%rbp)
	movq %r14,0x20(%rbp)
	jmp L_183151
.p2align 0x4
L_455772:
L_183199:
	movq 0x28(%rbp),%r14
	xchgq %r14,%r15
	jmp L_183157
.p2align 0x4
.long 0x2535
L_182915:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_182916+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp getcwd_0
.p2align 0x4
.long 0x2535
L_182918:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x38(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x78(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x88(%rbp)
	movq %r15,0x90(%rbp)
	addq $0x88,%rbp
	leaq (fromString_11+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x254E
L_183168:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x30(%rbp)
	movl 0x68(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	movq 0x70(%rbp),%r14
	movq %r14,0x40(%rbp)
	testl %r15d,%r15d
	jnz L_455774
L_183169:
	movq 0x20(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_183170+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_1
.p2align 0x4
L_455774:
L_183278:
	movq 0x20(%rbp),%r15
	movq %r15,0x30(%rbp)
L_183172:
	movq (globalObjptr+0xF5C0)(%rip),%r15
	movq %r15,0x60(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_183173+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp joinDirFile_0
.p2align 0x4
.long 0x2536
L_182916:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq %r15,0x80(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_182917+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fullPath_0
.p2align 0x4
.long 0x2537
fromString_11:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x80(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_182919
L_183094:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_183095+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183095
.p2align 0x4
.long 0x254B
L_183095:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_182919:
	movq 0x80(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	decq %r14
	jo L_455789
L_182930:
	movb 0x0(%r15,%r14,1),%r13b
	testb %r13b,%r13b
	jz L_455775
L_182931:
	movq (globalObjptr+0x750)(%rip),%r15
	movq %r15,0x50(%rbp)
	jmp L_182921
.p2align 0x4
L_455775:
L_182932:
	incl (gcState+0x44)(%rip)
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0x80(%rbp),%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_182933+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_FileSys_Stat_lstat
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182933
.p2align 0x4
.long 0x2538
L_182933:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	cmpl $0xFFFFFFFF,%eax
	je L_455779
L_182934:
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_182935+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_FileSys_Stat_getDev
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182935
.p2align 0x4
.long 0x2538
L_182935:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %r15,%r15
	movl %eax,(cReturnTemp+0x0)(%rip)
	movq %r15,%rax
	addq $0x88,%rbp
	leaq (L_182936+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_FileSys_Stat_getINo
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182936
.p2align 0x4
.long 0x2538
L_182936:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %r15,%r15
	xchgq %r15,%rax
	addq $0x88,%rbp
	leaq (L_182937+0x0)(%rip),%r14
	movq %r14,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_FileSys_Stat_getMode
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182937
.p2align 0x4
.long 0x2538
L_182937:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movl %eax,0x80(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_182938+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_FileSys_Stat_getNLink
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182938
.p2align 0x4
.long 0x2539
L_182938:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movl %eax,0x84(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_182939
L_183064:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_183065+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183065
.p2align 0x4
.long 0x2539
L_183065:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_182939:
	cmpl $0x0,0x84(%rbp)
	jl L_455776
L_182940:
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_182941+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_FileSys_Stat_getUId
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182941
.p2align 0x4
.long 0x2539
L_182941:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %r15,%r15
	movl %eax,(cReturnTemp+0x0)(%rip)
	movq %r15,%rax
	addq $0x90,%rbp
	leaq (L_182942+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_FileSys_Stat_getGId
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182942
.p2align 0x4
.long 0x2539
L_182942:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %r15,%r15
	movl %eax,(cReturnTemp+0x0)(%rip)
	movq %r15,%rax
	addq $0x90,%rbp
	leaq (L_182943+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_FileSys_Stat_getSize
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182943
.p2align 0x4
.long 0x2539
L_182943:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %r15,%r15
	xchgq %r15,%rax
	addq $0x90,%rbp
	leaq (L_182944+0x0)(%rip),%r14
	movq %r14,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_FileSys_Stat_getATime
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182944
.p2align 0x4
.long 0x2539
L_182944:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq %rax,0x90(%rbp)
	leaq L_183059(%rip),%r15
	movq %r15,0x8(%rbp)
	addq $0x90,%rbp
	leaq (L_182945+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdFromInt64_0
.p2align 0x4
L_455776:
L_183050:
	movl (gcState+0x44)(%rip),%r15d
	testl %r15d,%r15d
	jz L_183045
L_183051:
	decl %r15d
	movl %r15d,(gcState+0x44)(%rip)
	movq $0x3,0x50(%rbp)
	jmp L_182921
.p2align 0x4
L_455779:
L_183066:
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_183067+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_Error_getErrno
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183067
.p2align 0x4
.long 0x2544
L_183067:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movl %eax,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_183068
L_183092:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_183093+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183093
.p2align 0x4
.long 0x2544
L_183093:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_183068:
	movl (gcState+0x44)(%rip),%r15d
	testl %r15d,%r15d
	jz L_183045
L_183069:
	decl %r15d
	movl %r15d,(gcState+0x44)(%rip)
	movq (c_stackP+0x0)(%rip),%rsp
	movl 0x50(%rbp),%edi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_183070+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_Error_strError
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183070
.p2align 0x4
.long 0x2544
L_183070:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq %rax,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_183071
L_183089:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_183090+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183090
.p2align 0x4
.long 0x254A
L_183090:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_183071:
	movq 0x60(%rbp),%r15
	movq %r15,0x68(%rbp)
	testq %r15,%r15
	jz L_455785
L_183072:
	xorl %ecx,%ecx
.p2align 0x4,,0x7
loop_1891:
	movslq %ecx,%r15
	movq %r15,0x60(%rbp)
	movq 0x68(%rbp),%r13
	movb 0x0(%r13,%r15,1),%r14b
	testb %r14b,%r14b
	jz L_455780
L_183073:
	incl %ecx
	jmp loop_1891
.p2align 0x4
L_455780:
L_183074:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_183075
L_183086:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_183087+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183087
.p2align 0x4
.long 0x2548
L_183087:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_183075:
	movq 0x60(%rbp),%rdx
	cmpq $0x7FFFFFFF,%rdx
	ja L_183085
L_183076:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x51,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_183077+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183077
.p2align 0x4
.long 0x2548
L_183077:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq %rax,0x70(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_1892:
	cmpq 0x60(%rbp),%r15
	jnl L_455781
L_183083:
	movl %r15d,%r14d
	movslq %r14d,%r13
	movq 0x70(%rbp),%r14
	movq 0x68(%rbp),%r10
	movb 0x0(%r10,%r13,1),%r11b
	movb %r11b,0x0(%r14,%r15,1)
	incq %r15
	jmp loop_1892
.p2align 0x4
L_455781:
L_183078:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_183079
L_183081:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_183082+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183082
.p2align 0x4
.long 0x2549
L_183082:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_183079:
	movq 0x70(%rbp),%r15
	movq $0x7,0xFFFFFFFFFFFFFFF8(%r15)
L_183080:
	movl 0x50(%rbp),%r14d
	shlq $0x1,%r14
	orq $0x1,%r14
	movq $0x141B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq $0x1931,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r15,0x50(%rbp)
	addq $0x10,%r12
	jmp L_182921
.p2align 0x4
L_455785:
L_183088:
	movq (globalObjptr+0xDBE8)(%rip),%r15
	jmp L_183080
.p2align 0x4
L_455789:
L_182920:
	movq $0x3,0x50(%rbp)
	jmp L_182921
.p2align 0x4
.long 0x254E
L_183170:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_183171+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp mkCanonical_0
.p2align 0x4
.long 0x254F
L_183173:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq (globalObjptr+0xF5C8)(%rip),%r15
	movq %r15,0x60(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_183174+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp joinDirFile_0
.p2align 0x4
.long 0x2536
L_182917:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_182918+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp mkRelative_0
.p2align 0x4
.long 0x253A
L_182945:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0x78(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x90(%rbp)
	movq 0x0(%r14),%r11
	movq %r11,0x98(%rbp)
	movq %r11,0xA8(%rbp)
	movq %r15,0xB0(%rbp)
	movq %r13,0xB8(%rbp)
	addq $0xA8,%rbp
	leaq (L_182946+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1182
.p2align 0x4
.long 0x72E
L_183059:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_183050
L_183061:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_183062+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183062
.p2align 0x4
.long 0x2544
L_183062:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	jmp L_183050
.p2align 0x4
.long 0x254E
L_183171:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x30(%rbp)
	jmp L_183172
.p2align 0x4
.long 0x2550
L_183174:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x30(%rbp)
	leaq L_183272(%rip),%r15
	movq %r15,0x8(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_183175+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp contents_0
.p2align 0x4
.long 0x253B
L_182946:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_182947+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_FileSys_Stat_getMTime
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182947
.p2align 0x4
.long 0x253C
L_182947:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq %rax,0xA8(%rbp)
	leaq L_183055(%rip),%r15
	movq %r15,0x8(%rbp)
	addq $0xA8,%rbp
	leaq (L_182948+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdFromInt64_0
.p2align 0x4
.long 0x254F
L_183175:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_183176+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp contents_0
.p2align 0x4
.long 0x72E
L_183272:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_183273
L_183276:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_183277+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183277
.p2align 0x4
.long 0x2555
L_183277:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_183273:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_455792
L_183274:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x18(%rbp)
	movq %r14,0x20(%rbp)
	jmp L_183151
.p2align 0x4
L_455792:
L_183275:
	movq 0x28(%rbp),%r14
	xchgq %r14,%r15
	jmp L_183157
.p2align 0x4
.long 0x253B
L_182948:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x98(%rbp),%r14
	movq %r14,0xA8(%rbp)
	movq %r15,0xB0(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0xB8(%rbp)
	addq $0xA8,%rbp
	leaq (L_182949+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1182
.p2align 0x4
.long 0x72E
L_183055:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_183050
L_183057:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_183058+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183058
.p2align 0x4
.long 0x2544
L_183058:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	jmp L_183050
.p2align 0x4
.long 0x2550
L_183176:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x30(%rbp)
	leaq L_183196(%rip),%r15
	movq %r15,0x8(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (first_0+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tokens_0
.p2align 0x4
.long 0x253B
L_182949:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_182950+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_FileSys_Stat_getCTime
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182950
.p2align 0x4
.long 0x253C
L_182950:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq %rax,0xA8(%rbp)
	leaq L_183048(%rip),%r15
	movq %r15,0x8(%rbp)
	addq $0xA8,%rbp
	leaq (L_182951+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdFromInt64_0
.p2align 0x4
.long 0x254F
first_0:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_183177
L_183270:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_183271+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183271
.p2align 0x4
.long 0x255C
L_183271:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_183177:
	movq 0x38(%rbp),%r15
	cmpq $0x1,%r15
	je L_455795
L_183178:
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (first_1+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tokens_0
.p2align 0x4
L_455795:
L_183267:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_455796
L_183268:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	movq %r13,0x20(%rbp)
	jmp L_183151
.p2align 0x4
L_455796:
L_183269:
	movq 0x28(%rbp),%r13
	xchgq %r13,%r15
	jmp L_183157
.p2align 0x4
.long 0x253B
L_182951:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x90(%rbp),%r14
	movq %r14,0xA0(%rbp)
	movq 0x98(%rbp),%r14
	movq %r14,0x90(%rbp)
	movq %r15,0x98(%rbp)
	addq $0x90,%rbp
	leaq (L_182952+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1182
.p2align 0x4
.long 0x72E
L_183048:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_183050
L_183053:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_183054+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183054
.p2align 0x4
.long 0x2544
L_183054:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	jmp L_183050
.p2align 0x4
.long 0x2551
first_1:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_183179
L_183265:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_183266+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183266
.p2align 0x4
.long 0x255B
L_183266:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_183179:
	movq 0x30(%rbp),%r15
	cmpq $0x1,%r15
	je L_455799
L_183180:
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq $0x5,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_183181+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1211
.p2align 0x4
L_455799:
L_183262:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_455800
L_183263:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	movq %r13,0x20(%rbp)
	jmp L_183151
.p2align 0x4
L_455800:
L_183264:
	movq 0x28(%rbp),%r13
	xchgq %r13,%r15
	jmp L_183157
.p2align 0x4
.long 0x253D
L_182952:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x78(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_182953
L_183046:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_183047+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183047
.p2align 0x4
.long 0x2547
L_183047:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_182953:
	movl (gcState+0x44)(%rip),%r15d
	testl %r15d,%r15d
	jz L_183045
L_182954:
	decl %r15d
	movl %r15d,(gcState+0x44)(%rip)
	movq (c_stackP+0x0)(%rip),%rsp
	movl 0x80(%rbp),%edi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_182955+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_FileSys_ST_isLink
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182955
.p2align 0x4
.long 0x253E
L_182955:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	testl %eax,%eax
	jnz loop_1886
L_182957:
	leaq L_183036(%rip),%r15
	movq %r15,0x8(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (fromString_12+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x2552
L_183181:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq (globalObjptr+0x9C8)(%rip),%r15
	movq %r15,0x58(%rbp)
	movq (globalObjptr+0x928)(%rip),%r15
	movq %r15,0x60(%rbp)
L_183182:
	movq 0x60(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x70(%rbp)
	leaq L_183256(%rip),%r15
	movq %r15,0x8(%rbp)
	movq $0x5,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_183183+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1211
.p2align 0x4
.long 0x2535
fromString_12:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x70(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_182958
L_183034:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_183035+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183035
.p2align 0x4
.long 0x253E
L_183035:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_182958:
	movq 0x70(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	decq %r14
	jo L_455814
L_182960:
	movb 0x0(%r15,%r14,1),%r13b
	testb %r13b,%r13b
	jz L_455804
L_182961:
	movq (globalObjptr+0x750)(%rip),%r15
	movq %r15,0x50(%rbp)
	jmp L_182921
.p2align 0x4
L_455804:
L_182962:
	incl (gcState+0x44)(%rip)
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0x70(%rbp),%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_182963+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_FileSys_Stat_stat
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182963
.p2align 0x4
.long 0x253F
L_182963:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	cmpl $0xFFFFFFFF,%eax
	je L_455808
L_182964:
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_182965+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_FileSys_Stat_getDev
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182965
.p2align 0x4
.long 0x253F
L_182965:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %r15,%r15
	movl %eax,(cReturnTemp+0x0)(%rip)
	movq %r15,%rax
	addq $0x78,%rbp
	leaq (L_182966+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_FileSys_Stat_getINo
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182966
.p2align 0x4
.long 0x253F
L_182966:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %r15,%r15
	xchgq %r15,%rax
	addq $0x78,%rbp
	leaq (L_182967+0x0)(%rip),%r14
	movq %r14,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_FileSys_Stat_getMode
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182967
.p2align 0x4
.long 0x253F
L_182967:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movl %eax,0x70(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_182968+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_FileSys_Stat_getNLink
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182968
.p2align 0x4
.long 0x2540
L_182968:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movl %eax,0x74(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_182969
L_183011:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_183012+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183012
.p2align 0x4
.long 0x2540
L_183012:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_182969:
	cmpl $0x0,0x74(%rbp)
	jl L_455805
L_182970:
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_182971+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_FileSys_Stat_getUId
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182971
.p2align 0x4
.long 0x2540
L_182971:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %r15,%r15
	movl %eax,(cReturnTemp+0x0)(%rip)
	movq %r15,%rax
	addq $0x80,%rbp
	leaq (L_182972+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_FileSys_Stat_getGId
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182972
.p2align 0x4
.long 0x2540
L_182972:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %r15,%r15
	movl %eax,(cReturnTemp+0x0)(%rip)
	movq %r15,%rax
	addq $0x80,%rbp
	leaq (L_182973+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_FileSys_Stat_getSize
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182973
.p2align 0x4
.long 0x2540
L_182973:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %r15,%r15
	xchgq %r15,%rax
	addq $0x80,%rbp
	leaq (L_182974+0x0)(%rip),%r14
	movq %r14,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_FileSys_Stat_getATime
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182974
.p2align 0x4
.long 0x2540
L_182974:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq %rax,0x80(%rbp)
	leaq L_183006(%rip),%r15
	movq %r15,0x8(%rbp)
	addq $0x80,%rbp
	leaq (L_182975+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdFromInt64_0
.p2align 0x4
L_455805:
L_182997:
	movl (gcState+0x44)(%rip),%r15d
	testl %r15d,%r15d
	jz L_455806
L_182998:
	decl %r15d
	movl %r15d,(gcState+0x44)(%rip)
	movq $0x3,0x50(%rbp)
	jmp L_182921
.p2align 0x4
L_455806:
L_182992:
	movq (globalObjptr+0x740)(%rip),%r15
	movq %r15,0x50(%rbp)
	jmp L_182921
.p2align 0x4
L_455808:
L_183013:
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_183014+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_Error_getErrno
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183014
.p2align 0x4
.long 0x2533
L_183014:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movl %eax,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_183015
L_183032:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_183033+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183033
.p2align 0x4
.long 0x2546
L_183033:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_183015:
	movl (gcState+0x44)(%rip),%r15d
	testl %r15d,%r15d
	jz L_182992
L_183016:
	decl %r15d
	movl %r15d,(gcState+0x44)(%rip)
	movq (c_stackP+0x0)(%rip),%rsp
	movl 0x68(%rbp),%edi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_183017+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_Error_strError
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183017
.p2align 0x4
.long 0x2533
L_183017:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq %rax,0x68(%rbp)
	testq %rax,%rax
	jz loop_1886
L_183018:
	xorl %ecx,%ecx
.p2align 0x4,,0x7
loop_1889:
	movslq %ecx,%r15
	movq %r15,0x70(%rbp)
	movq 0x68(%rbp),%r13
	movb 0x0(%r13,%r15,1),%r14b
	testb %r14b,%r14b
	jz L_455809
L_183019:
	incl %ecx
	jmp loop_1889
.p2align 0x4
L_455809:
L_183020:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_183021
L_183028:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_183029+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183029
.p2align 0x4
.long 0x2545
L_183029:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_183021:
	movq 0x70(%rbp),%rdx
	cmpq $0x7FFFFFFF,%rdx
	ja L_455810
L_183022:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x51,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_183023+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183023
.p2align 0x4
.long 0x2545
L_183023:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	xorq %r15,%r15
	movq %rax,%r14
.p2align 0x4,,0x7
loop_1890:
	cmpq 0x70(%rbp),%r15
	jnl loop_1886
L_183026:
	movl %r15d,%r13d
	movslq %r13d,%r11
	movq 0x68(%rbp),%r10
	movb 0x0(%r10,%r11,1),%r13b
	movb %r13b,0x0(%r14,%r15,1)
	incq %r15
	jmp loop_1890
.p2align 0x4
L_455810:
L_183027:
	movq $0x5,0x50(%rbp)
	jmp L_182921
.p2align 0x4
L_455814:
L_182959:
	movq $0x3,0x50(%rbp)
	jmp L_182921
.p2align 0x4
.long 0x72E
L_183036:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_183038
L_183042:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_183043+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183043
.p2align 0x4
.long 0x253F
L_183043:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_183038:
	movq 0x68(%rbp),%r15
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_183039
L_183040:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xC98,%r14
	je loop_1886
L_183039:
	movq 0x68(%rbp),%r15
	movq %r15,0x50(%rbp)
	jmp L_182921
.p2align 0x4
.long 0x2553
L_183183:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_183184
L_183254:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_183255+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183255
.p2align 0x4
.long 0x7D0
L_183255:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_183184:
	movq 0x30(%rbp),%r13
	movq 0x68(%rbp),%r11
	cmpq %r11,%r13
	je L_183212
L_183185:
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	cmpq 0xFFFFFFFFFFFFFFF0(%r11),%r15
	jne L_455822
L_183202:
	xorq %r14,%r14
.p2align 0x4,,0x7
vectorEqualLoop_167:
	cmpq %r15,%r14
	je L_455821
L_183203:
	movq 0x68(%rbp),%r13
	movq 0x30(%rbp),%r10
	movb 0x0(%r10,%r14,1),%r11b
	cmpb %r11b,0x0(%r13,%r14,1)
	jne L_455818
L_183210:
	incq %r14
	jmp vectorEqualLoop_167
.p2align 0x4
L_455818:
L_183204:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_183205
L_183208:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_183209+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183209
.p2align 0x4
.long 0x2556
L_183209:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_183205:
	movq 0x58(%rbp),%r15
	cmpq $0x1,%r15
	je L_455819
L_183206:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x58(%rbp)
	movq %r14,0x60(%rbp)
	jmp L_183182
.p2align 0x4
L_455819:
L_183189:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xF5D0)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x60(%rbp)
	leaq L_183196(%rip),%r15
	movq %r15,0x8(%rbp)
	addq $0x60,%rbp
	leaq (L_183190+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_455821:
L_183212:
	movq 0x60(%rbp),%r14
	movb 0x0(%r14),%r15b
	movb %r15b,0x30(%rbp)
	leaq L_183196(%rip),%r15
	movq %r15,0x8(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq $0x5,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_183213+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1211
.p2align 0x4
L_455822:
L_183186:
	movq 0x58(%rbp),%r15
	cmpq $0x1,%r15
	je L_183189
L_183187:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x58(%rbp)
	movq %r14,0x60(%rbp)
	jmp L_183182
.p2align 0x4
.long 0x72E
L_183256:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_183257
L_183260:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_183261+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183261
.p2align 0x4
.long 0x2555
L_183261:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_183257:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_455826
L_183258:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x18(%rbp)
	movq %r14,0x20(%rbp)
	jmp L_183151
.p2align 0x4
L_455826:
L_183259:
	movq 0x28(%rbp),%r14
	xchgq %r14,%r15
	jmp L_183157
.p2align 0x4
.long 0x2541
L_182975:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x40(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x80(%rbp)
	movq 0x0(%r14),%r11
	movq %r11,0x88(%rbp)
	movq %r11,0x98(%rbp)
	movq %r15,0xA0(%rbp)
	movq %r13,0xA8(%rbp)
	addq $0x98,%rbp
	leaq (L_182976+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1182
.p2align 0x4
.long 0x72E
L_183006:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_182997
L_183008:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_183009+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183009
.p2align 0x4
.long 0x2544
L_183009:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	jmp L_182997
.p2align 0x4
.long 0x2554
L_183190:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_183191
L_183194:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_183195+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183195
.p2align 0x4
.long 0x2555
L_183195:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_183191:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_455829
L_183192:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x18(%rbp)
	movq %r14,0x20(%rbp)
	jmp L_183151
.p2align 0x4
L_455829:
L_183193:
	movq 0x28(%rbp),%r14
	xchgq %r14,%r15
	jmp L_183157
.p2align 0x4
.long 0x2550
L_183213:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq (globalObjptr+0x920)(%rip),%r15
	movq %r15,0x58(%rbp)
	movq (globalObjptr+0x860)(%rip),%r15
	movq %r15,0x60(%rbp)
L_183214:
	movq 0x60(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x70(%rbp)
	leaq L_183247(%rip),%r15
	movq %r15,0x8(%rbp)
	movq $0x5,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_183215+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1211
.p2align 0x4
.long 0x2542
L_182976:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_182977+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_FileSys_Stat_getMTime
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182977
.p2align 0x4
.long 0x2543
L_182977:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq %rax,0x98(%rbp)
	leaq L_183002(%rip),%r15
	movq %r15,0x8(%rbp)
	addq $0x98,%rbp
	leaq (L_182978+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdFromInt64_0
.p2align 0x4
.long 0x2557
L_183215:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_183216
L_183245:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_183246+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183246
.p2align 0x4
.long 0x255A
L_183246:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_183216:
	movq 0x40(%rbp),%r13
	movq 0x68(%rbp),%r11
	cmpq %r11,%r13
	je L_183239
L_183217:
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	cmpq %r15,0xFFFFFFFFFFFFFFF0(%r11)
	jne L_455837
L_183228:
	xorq %r14,%r14
.p2align 0x4,,0x7
vectorEqualLoop_168:
	cmpq %r15,%r14
	je L_455834
L_183229:
	movq 0x40(%rbp),%r13
	movq 0x68(%rbp),%r10
	movb 0x0(%r10,%r14,1),%r11b
	cmpb %r11b,0x0(%r13,%r14,1)
	jne L_455831
L_183236:
	incq %r14
	jmp vectorEqualLoop_168
.p2align 0x4
L_455831:
L_183230:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_183231
L_183234:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_183235+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183235
.p2align 0x4
.long 0x2558
L_183235:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_183231:
	movq 0x58(%rbp),%r15
	cmpq $0x1,%r15
	je L_455832
L_183232:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x58(%rbp)
	movq %r14,0x60(%rbp)
	jmp L_183214
.p2align 0x4
L_455832:
L_183221:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xF5D8)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x60(%rbp)
	leaq L_183196(%rip),%r15
	movq %r15,0x8(%rbp)
	addq $0x60,%rbp
	leaq (L_183222+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_455834:
L_183237:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_183239
L_183242:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_183243+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183243
.p2align 0x4
.long 0x2559
L_183243:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_183239:
	movq 0x60(%rbp),%r15
	movb 0x0(%r15),%r14b
	movq $0x1221,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movzbl 0x30(%rbp),%r13d
	movzbl %r14b,%r11d
	shll $0x8,%r11d
	orl %r11d,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x2381,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x28(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x18(%rbp),%r13
	cmpq $0x1,%r13
	je L_455835
L_183240:
	movq %r14,0x28(%rbp)
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movq %r13,0x18(%rbp)
	movq %r14,0x20(%rbp)
	jmp L_183151
.p2align 0x4
L_455835:
L_183241:
	movq %r15,0x20(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq $0x1,0x28(%rbp)
	jmp L_183159
.p2align 0x4
L_455837:
L_183218:
	movq 0x58(%rbp),%r15
	cmpq $0x1,%r15
	je L_183221
L_183219:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x58(%rbp)
	movq %r14,0x60(%rbp)
	jmp L_183214
.p2align 0x4
.long 0x72E
L_183247:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_183248
L_183251:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_183252+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183252
.p2align 0x4
.long 0x2555
L_183252:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_183248:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_455841
L_183249:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x18(%rbp)
	movq %r14,0x20(%rbp)
	jmp L_183151
.p2align 0x4
L_455841:
L_183250:
	movq 0x28(%rbp),%r14
	xchgq %r14,%r15
	jmp L_183157
.p2align 0x4
.long 0x2542
L_182978:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x88(%rbp),%r14
	movq %r14,0x98(%rbp)
	movq %r15,0xA0(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0xA8(%rbp)
	addq $0x98,%rbp
	leaq (L_182979+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1182
.p2align 0x4
.long 0x72E
L_183002:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_182997
L_183004:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_183005+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183005
.p2align 0x4
.long 0x2544
L_183005:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	jmp L_182997
.p2align 0x4
.long 0x2554
L_183222:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_183223
L_183226:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_183227+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183227
.p2align 0x4
.long 0x2555
L_183227:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_183223:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_455844
L_183224:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x18(%rbp)
	movq %r14,0x20(%rbp)
	jmp L_183151
.p2align 0x4
L_455844:
L_183225:
	movq 0x28(%rbp),%r14
	xchgq %r14,%r15
	jmp L_183157
.p2align 0x4
.long 0x2542
L_182979:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_182980+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_FileSys_Stat_getCTime
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182980
.p2align 0x4
.long 0x2543
L_182980:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq %rax,0x98(%rbp)
	leaq L_182995(%rip),%r15
	movq %r15,0x8(%rbp)
	addq $0x98,%rbp
	leaq (L_182981+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdFromInt64_0
.p2align 0x4
.long 0x2542
L_182981:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x80(%rbp),%r14
	movq %r14,0x90(%rbp)
	movq 0x88(%rbp),%r14
	movq %r14,0x80(%rbp)
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_182982+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1182
.p2align 0x4
.long 0x72E
L_182995:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_182997
L_183000:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_183001+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183001
.p2align 0x4
.long 0x2544
L_183001:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	jmp L_182997
.p2align 0x4
.long 0x2541
L_182982:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x78(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_182983
L_182993:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_182994+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182994
.p2align 0x4
.long 0x2540
L_182994:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_182983:
	movl (gcState+0x44)(%rip),%r15d
	testl %r15d,%r15d
	jz L_182992
L_182984:
	decl %r15d
	movl %r15d,(gcState+0x44)(%rip)
	movq (c_stackP+0x0)(%rip),%rsp
	movl 0x70(%rbp),%edi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_182985+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_FileSys_ST_isDir
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182985
.p2align 0x4
.long 0x253F
L_182985:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movl %eax,0x70(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_182986
L_182989:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_182990+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_182990
.p2align 0x4
.long 0x2540
L_182990:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_182986:
	movl 0x70(%rbp),%r15d
	testl %r15d,%r15d
	jz loop_1886
L_182987:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x60(%rbp)
	jmp loop_1886
.text
.p2align 0x4
.globl concat_1
.hidden concat_1
concat_1:
L_183330:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_183331
L_183397:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_183398+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183398
.p2align 0x4
.long 0x45F
L_183398:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_183331:
	movq 0x8(%rbp),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_183332+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromString_24
.p2align 0x4
.long 0x4AF
L_183332:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movl 0x18(%rbp),%r15d
	movl %r15d,0x10(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_183333+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromString_24
.p2align 0x4
.long 0x4E0
L_183333:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r13
	movq %r13,0x20(%rbp)
	movl 0x30(%rbp),%r11d
	movl %r11d,0x14(%rbp)
	movq 0x38(%rbp),%r10
	movq %r10,0x28(%rbp)
	testl %r11d,%r11d
	jnz L_183337
L_183334:
	cmpq (globalObjptr+0xA058)(%rip),%r13
	je L_183343
L_183335:
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	testq %r15,%r15
	jnz L_183337
L_183338:
	xorq %r14,%r14
.p2align 0x4,,0x7
vectorEqualLoop_169:
	cmpq %r14,%r15
	je L_455852
L_183339:
	movq (globalObjptr+0xA058)(%rip),%r13
	movq 0x20(%rbp),%r10
	movb 0x0(%r10,%r14,1),%r11b
	cmpb %r11b,0x0(%r13,%r14,1)
	jne L_455851
L_183341:
	incq %r14
	jmp vectorEqualLoop_169
.p2align 0x4
L_455851:
L_183337:
	movq $0xF,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_455852:
L_183343:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_455871
L_183344:
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq $0x1,0x38(%rbp)
.p2align 0x4,,0x7
L_183345:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_455870
.p2align 0x4,,0x7
L_183346:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_455853
L_183347:
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x30(%rbp)
	jmp L_183345
.p2align 0x4
L_455853:
L_183348:
	movq 0x30(%rbp),%r13
	cmpq %r13,(globalObjptr+0xA058)(%rip)
	je L_455868
L_183349:
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	testq %r15,%r15
	jnz L_455866
L_183369:
	xorq %r13,%r13
	xchgq %r13,%r14
.p2align 0x4,,0x7
vectorEqualLoop_170:
	cmpq %r14,%r15
	je L_455861
L_183370:
	movq (globalObjptr+0xA058)(%rip),%r13
	movq 0x30(%rbp),%r10
	movb 0x0(%r10,%r14,1),%r11b
	cmpb %r11b,0x0(%r13,%r14,1)
	jne L_455854
L_183374:
	incq %r14
	jmp vectorEqualLoop_170
.p2align 0x4
L_455854:
L_183371:
	cmpq $0x1,0x28(%rbp)
	je L_455860
L_183372:
	movq 0x18(%rbp),%r15
L_183352:
	cmpq $0x1,%r15
	je L_455859
L_183353:
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq $0x1,0x30(%rbp)
.p2align 0x4,,0x7
L_183354:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_455858
.p2align 0x4,,0x7
L_183355:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_455855
L_183356:
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_183354
.p2align 0x4
L_455855:
L_183357:
	movq 0x30(%rbp),%r15
	movq %r15,0x18(%rbp)
.p2align 0x4,,0x7
L_183358:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_455857
.p2align 0x4,,0x7
L_183359:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_455856
L_183360:
	movq %r15,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_183358
.p2align 0x4
L_455856:
L_183362:
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%rbp)
	movl 0x10(%rbp),%r14d
	movl %r14d,0x8(%rbp)
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xD3B8)(%rip),%r15
	movq %r15,0x18(%rbp)
	jmp toString_537
.p2align 0x4
L_455857:
L_183363:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_183364+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183364
.p2align 0x4
.long 0xA29
L_183364:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_183359
.p2align 0x4
L_455858:
L_183365:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_183366+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183366
.p2align 0x4
.long 0xB63
L_183366:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_183355
.p2align 0x4
L_455859:
L_183367:
	movq 0x28(%rbp),%r15
	jmp L_183362
.p2align 0x4
L_455860:
L_183373:
	movq 0x18(%rbp),%r15
	jmp L_183362
.p2align 0x4
L_455861:
L_183375:
	movq 0x38(%rbp),%r15
	cmpq $0x1,%r15
	je L_455865
L_183376:
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq $0x1,0x30(%rbp)
.p2align 0x4,,0x7
L_183377:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_455864
.p2align 0x4,,0x7
L_183378:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_455862
L_183379:
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_183377
.p2align 0x4
L_455862:
L_183381:
	cmpq $0x1,0x28(%rbp)
	je L_183362
	jmp L_183352
.p2align 0x4
L_455864:
L_183384:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_183385+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183385
.p2align 0x4
.long 0xB63
L_183385:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_183378
.p2align 0x4
L_455865:
L_183386:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_183381
.p2align 0x4
L_455866:
L_183350:
	cmpq $0x1,0x28(%rbp)
	je L_455867
L_183351:
	movq 0x18(%rbp),%r15
	jmp L_183352
.p2align 0x4
L_455867:
L_183368:
	movq 0x18(%rbp),%r15
	jmp L_183362
.p2align 0x4
L_455868:
L_183387:
	movq 0x38(%rbp),%r15
	cmpq $0x1,%r15
	je L_455869
L_183388:
	movq 0x8(%r15),%r11
	movq %r11,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq $0x1,0x30(%rbp)
	jmp L_183377
.p2align 0x4
L_455869:
L_183389:
	movq $0x1,%r11
	xchgq %r11,%r15
	jmp L_183381
.p2align 0x4
L_455870:
L_183390:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_183391+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183391
.p2align 0x4
.long 0x9C8
L_183391:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_183346
.p2align 0x4
L_455871:
L_183392:
	cmpq $0x1,0x28(%rbp)
	je L_183362
L_183393:
	jmp L_183352
.text
.p2align 0x4
.globl joinDirFile_0
.hidden joinDirFile_0
joinDirFile_0:
L_183399:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_183400
L_183463:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_183464+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183464
.p2align 0x4
.long 0x45F
L_183464:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_183400:
	movq 0x8(%rbp),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_183401+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromString_24
.p2align 0x4
.long 0x4AF
L_183401:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movl 0x18(%rbp),%r15d
	movl %r15d,0x10(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_183402
L_183461:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_183462+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183462
.p2align 0x4
.long 0x524
L_183462:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_183402:
	cmpq $0x1,0x18(%rbp)
	jne x_574
L_183448:
	movq 0x0(%rbp),%r13
	cmpq %r13,(globalObjptr+0xA058)(%rip)
	je L_183459
L_183449:
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	testq %r15,%r15
	jnz x_574
L_183451:
	xorq %r14,%r14
.p2align 0x4,,0x7
vectorEqualLoop_172:
	cmpq %r14,%r15
	je L_455896
L_183452:
	movq (globalObjptr+0xA058)(%rip),%r13
	movq 0x0(%rbp),%r10
	movb 0x0(%r10,%r14,1),%r11b
	cmpb %r11b,0x0(%r13,%r14,1)
	jne L_455877
L_183457:
	incq %r14
	jmp vectorEqualLoop_172
.p2align 0x4
L_455877:
L_183453:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb x_574
L_183455:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_183456+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183456
.p2align 0x4
.long 0x524
L_183456:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
x_574:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x20(%rbp)
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_455894
L_183403:
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq $0x1,0x38(%rbp)
.p2align 0x4,,0x7
L_183404:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_455893
.p2align 0x4,,0x7
L_183405:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_455878
L_183406:
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x30(%rbp)
	jmp L_183404
.p2align 0x4
L_455878:
L_183407:
	movq 0x30(%rbp),%r13
	cmpq %r13,(globalObjptr+0xA058)(%rip)
	je L_455891
L_183408:
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	testq %r15,%r15
	jnz L_455889
L_183425:
	xorq %r13,%r13
	xchgq %r13,%r14
.p2align 0x4,,0x7
vectorEqualLoop_171:
	cmpq %r14,%r15
	je L_455885
L_183426:
	movq 0x30(%rbp),%r13
	movq (globalObjptr+0xA058)(%rip),%r10
	movb 0x0(%r10,%r14,1),%r11b
	cmpb %r11b,0x0(%r13,%r14,1)
	jne L_455879
L_183430:
	incq %r14
	jmp vectorEqualLoop_171
.p2align 0x4
L_455879:
L_183427:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_455884
L_183428:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x18(%rbp)
	movq %r14,0x28(%rbp)
	movq $0x1,0x30(%rbp)
.p2align 0x4,,0x7
L_183411:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_455883
.p2align 0x4,,0x7
L_183412:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_455880
L_183413:
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	movq %r15,0x28(%rbp)
	jmp L_183411
.p2align 0x4
L_455880:
L_183414:
	movq 0x30(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x20(%rbp),%r15
	movq 0x28(%rbp),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x28(%rbp)
.p2align 0x4,,0x7
L_183415:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_455882
.p2align 0x4,,0x7
L_183416:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_455881
L_183417:
	movq %r15,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_183415
.p2align 0x4
L_455881:
L_183419:
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%rbp)
	movl 0x10(%rbp),%r14d
	movl %r14d,0x8(%rbp)
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xD3B8)(%rip),%r15
	movq %r15,0x18(%rbp)
	jmp toString_537
.p2align 0x4
L_455882:
L_183420:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_183421+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183421
.p2align 0x4
.long 0xA29
L_183421:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_183416
.p2align 0x4
L_455883:
L_183422:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_183423+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183423
.p2align 0x4
.long 0xB63
L_183423:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_183412
.p2align 0x4
L_455884:
L_183429:
	movq 0x20(%rbp),%r14
	xchgq %r14,%r15
	jmp L_183419
.p2align 0x4
L_455885:
L_183431:
	movq 0x38(%rbp),%r15
	cmpq $0x1,%r15
	je L_455888
L_183432:
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq $0x1,0x30(%rbp)
.p2align 0x4,,0x7
L_183433:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_455887
.p2align 0x4,,0x7
L_183434:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_455886
L_183435:
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	movq %r15,0x28(%rbp)
	jmp L_183433
.p2align 0x4
L_455886:
L_183436:
	movq 0x30(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq $0x1,0x30(%rbp)
	jmp L_183411
.p2align 0x4
L_455887:
L_183437:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_183438+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183438
.p2align 0x4
.long 0xB63
L_183438:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_183434
.p2align 0x4
L_455888:
L_183439:
	movq 0x20(%rbp),%r14
	xchgq %r14,%r15
	jmp L_183419
.p2align 0x4
L_455889:
L_183409:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_455890
L_183410:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq %r15,0x18(%rbp)
	movq %r13,0x28(%rbp)
	movq $0x1,0x30(%rbp)
	jmp L_183411
.p2align 0x4
L_455890:
L_183424:
	movq 0x20(%rbp),%r13
	xchgq %r13,%r15
	jmp L_183419
.p2align 0x4
L_455891:
L_183440:
	movq 0x38(%rbp),%r15
	cmpq $0x1,%r15
	je L_455892
L_183441:
	movq 0x8(%r15),%r11
	movq %r11,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq $0x1,0x30(%rbp)
	jmp L_183433
.p2align 0x4
L_455892:
L_183442:
	movq 0x20(%rbp),%r11
	xchgq %r11,%r15
	jmp L_183419
.p2align 0x4
L_455893:
L_183443:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_183444+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183444
.p2align 0x4
.long 0x9C8
L_183444:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_183405
.p2align 0x4
L_455894:
L_183445:
	cmpq $0x1,%r15
	je L_455895
L_183446:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x18(%rbp)
	movq %r14,0x28(%rbp)
	movq $0x1,0x30(%rbp)
	jmp L_183411
.p2align 0x4
L_455895:
L_183447:
	movq 0x20(%rbp),%r14
	xchgq %r14,%r15
	jmp L_183419
.p2align 0x4
L_455896:
L_183459:
	movq $0x1,%r15
	jmp L_183419
.text
.p2align 0x4
.globl fullPath_0
.hidden fullPath_0
fullPath_0:
L_183465:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x18(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_183466
L_183763:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_183764+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183764
.p2align 0x4
.long 0x45C
L_183764:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_183466:
	movq 0x8(%rbp),%r15
	movq 0x20(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	addq $0x48,%rbp
	leaq (L_183467+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp getcwd_0
.p2align 0x4
.long 0x2562
L_183467:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_183468+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromString_24
.p2align 0x4
.long 0x49E
L_183468:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	movl 0x50(%rbp),%r15d
	movl %r15d,0x48(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_183469
L_183761:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_183762+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183762
.p2align 0x4
.long 0x257B
L_183762:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_183469:
	movl 0x48(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_455900
L_183470:
	movq 0x8(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_183471+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromString_24
.p2align 0x4
L_455900:
L_183760:
	movq 0x50(%rbp),%r15
computeFullPath_0:
	movq %r15,0x48(%rbp)
	movl $0x40,0x50(%rbp)
gotoRoot_0:
	movq 0x40(%rbp),%r14
	cmpq (globalObjptr+0xA058)(%rip),%r14
	je chdir_0
L_183483:
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movq %r13,0x58(%rbp)
	testq %r13,%r13
	jnz vectorEqual_72
L_183740:
	xorq %r15,%r15
.p2align 0x4,,0x7
vectorEqualLoop_177:
	cmpq %r15,0x58(%rbp)
	je L_455905
L_183741:
	movq (globalObjptr+0xA058)(%rip),%r14
	movq 0x40(%rbp),%r11
	movb 0x0(%r11,%r15,1),%r13b
	cmpb %r13b,0x0(%r14,%r15,1)
	jne L_455901
L_183746:
	incq %r15
	jmp vectorEqualLoop_177
.p2align 0x4
L_455901:
L_183742:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb vectorEqual_72
L_183744:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_183745+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183745
.p2align 0x4
.long 0x2579
L_183745:
	addq $0xFFFFFFFFFFFFFF98,%rbp
vectorEqual_72:
	movq (globalObjptr+0xD3B8)(%rip),%r14
	cmpq %r14,0x40(%rbp)
	je chdir_0
L_183485:
	cmpq $0x1,0x58(%rbp)
	jne L_183487
L_183730:
	xorq %r15,%r15
.p2align 0x4,,0x7
vectorEqualLoop_176:
	cmpq %r15,0x58(%rbp)
	je L_455903
L_183731:
	movq (globalObjptr+0xD3B8)(%rip),%r14
	movq 0x40(%rbp),%r11
	movb 0x0(%r11,%r15,1),%r13b
	cmpb %r13b,0x0(%r14,%r15,1)
	jne L_455902
L_183733:
	incq %r15
	jmp vectorEqualLoop_176
.p2align 0x4
L_455902:
L_183487:
	leaq L_183582(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0xD3B8)(%rip),%r15
	movq %r15,0x60(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_183488+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_455903:
L_183734:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb chdir_0
L_183737:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_183738+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183738
.p2align 0x4
.long 0x2578
L_183738:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
chdir_0:
	movq $0x3E4F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq (globalObjptr+0xD3B8)(%rip),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x60(%rbp)
	leaq L_183582(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movl $0x0,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_183736+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1279
.p2align 0x4
L_455905:
L_183747:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb chdir_0
L_183749:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_183750+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183750
.p2align 0x4
.long 0x2578
L_183750:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	jmp chdir_0
.p2align 0x4
.long 0x2563
L_183471:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x40(%rbp)
	movl 0x68(%rbp),%r15d
	movl %r15d,0x48(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_183472
L_183758:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_183759+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183759
.p2align 0x4
.long 0x256C
L_183759:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_183472:
	cmpq $0x1,0x50(%rbp)
	je L_455911
L_183473:
	movq 0x58(%rbp),%r15
	cmpq $0x1,%r15
	je L_455910
L_183474:
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x0(%r15),%r15
	movq %r15,0x58(%rbp)
	movq $0x1,0x60(%rbp)
.p2align 0x4,,0x7
L_183475:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_455909
.p2align 0x4,,0x7
L_183476:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_455907
L_183477:
	movq %r15,0x60(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	movq %r15,0x58(%rbp)
	jmp L_183475
.p2align 0x4
L_455907:
L_183478:
	movq 0x60(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x50(%rbp),%r15
	movq 0x58(%rbp),%r14
	movq %r14,0x50(%rbp)
	movq %r15,0x58(%rbp)
.p2align 0x4,,0x7
L_183479:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_455908
.p2align 0x4,,0x7
L_183480:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je computeFullPath_0
L_183481:
	movq %r15,0x58(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	movq %r15,0x50(%rbp)
	jmp L_183479
.p2align 0x4
L_455908:
L_183752:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_183753+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183753
.p2align 0x4
.long 0x241E
L_183753:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	jmp L_183480
.p2align 0x4
L_455909:
L_183754:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_183755+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183755
.p2align 0x4
.long 0x257A
L_183755:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_183476
.p2align 0x4
L_455910:
L_183756:
	movq 0x50(%rbp),%r14
	xchgq %r14,%r15
	jmp computeFullPath_0
.p2align 0x4
L_455911:
L_183757:
	movq 0x58(%rbp),%r15
	jmp computeFullPath_0
.p2align 0x4
.long 0x2564
L_183488:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_183489
L_183728:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_183729+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183729
.p2align 0x4
.long 0x2577
L_183729:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_183489:
	movq $0x3E4F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x60(%rbp)
	movl $0x0,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_183490+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1279
.p2align 0x4
.long 0x25
L_183582:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_183501
L_183584:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_183585+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183585
.p2align 0x4
.long 0x4A1
L_183585:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_183501:
	movq $0x3E4F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x30(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movl $0x0,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_183502+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1279
.p2align 0x4
.long 0x2564
L_183736:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movl 0x60(%rbp),%r13d
	movl %r13d,0x54(%rbp)
	movq 0x48(%rbp),%r14
	movq $0x1,%r15
	movl 0x50(%rbp),%r13d
	movl %r13d,0x48(%rbp)
walkPath_0:
	movq %r15,0x50(%rbp)
.p2align 0x4,,0x7
loop_1897:
	movl 0x48(%rbp),%r13d
	testl %r13d,%r13d
	jz L_455927
L_183491:
	cmpq $0x1,%r14
	je L_455923
L_183492:
	movq 0x8(%r14),%r13
	movq %r13,0x58(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x60(%rbp)
	cmpq (globalObjptr+0xA058)(%rip),%r13
	je L_455922
L_183493:
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	testq %r15,%r15
	jnz vectorEqual_73
L_183715:
	xorq %r14,%r14
.p2align 0x4,,0x7
vectorEqualLoop_175:
	cmpq %r14,%r15
	je L_455921
L_183716:
	movq (globalObjptr+0xA058)(%rip),%r13
	movq 0x60(%rbp),%r10
	movb 0x0(%r10,%r14,1),%r11b
	cmpb %r11b,0x0(%r13,%r14,1)
	jne vectorEqual_242
L_183718:
	incq %r14
	jmp vectorEqualLoop_175
.p2align 0x4
vectorEqual_242:
vectorEqual_73:
	movq (globalObjptr+0xA050)(%rip),%r13
	cmpq %r13,0x60(%rbp)
	je L_455920
L_183495:
	cmpq $0x1,%r15
	jne vectorEqual_74
L_183709:
	xorq %r14,%r14
.p2align 0x4,,0x7
vectorEqualLoop_174:
	cmpq %r15,%r14
	je L_455919
L_183710:
	movq 0x60(%rbp),%r13
	movq (globalObjptr+0xA050)(%rip),%r10
	movb 0x0(%r10,%r14,1),%r11b
	cmpb %r11b,0x0(%r13,%r14,1)
	jne vectorEqual_243
L_183712:
	incq %r14
	jmp vectorEqualLoop_174
.p2align 0x4
vectorEqual_243:
vectorEqual_74:
	movq (globalObjptr+0xA048)(%rip),%r13
	cmpq %r13,0x60(%rbp)
	je L_183701
L_183497:
	cmpq $0x2,%r15
	jne x_575
L_183696:
	xorq %r14,%r14
.p2align 0x4,,0x7
vectorEqualLoop_173:
	cmpq %r14,%r15
	je L_455915
L_183697:
	movq 0x60(%rbp),%r13
	movq (globalObjptr+0xA048)(%rip),%r10
	movb 0x0(%r10,%r14,1),%r11b
	cmpb %r11b,0x0(%r13,%r14,1)
	jne x_1800
L_183699:
	incq %r14
	jmp vectorEqualLoop_173
.p2align 0x4
x_1800:
x_575:
	movq 0x30(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (fromString_13+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_455915:
L_183701:
	cmpq $0x1,0x50(%rbp)
	jne L_455916
L_183707:
	movq 0x58(%rbp),%r14
	movq $0x1,0x50(%rbp)
	jmp loop_1897
.p2align 0x4
L_455916:
L_183702:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_183703
L_183705:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_183706+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183706
.p2align 0x4
.long 0x256C
L_183706:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_183703:
	movq 0x50(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x60(%rbp)
	movq $0x3E4F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq (globalObjptr+0xA048)(%rip),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x70(%rbp)
	movl $0x0,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_183704+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1279
.p2align 0x4
L_455919:
L_183713:
	movq 0x58(%rbp),%r14
	jmp loop_1897
.p2align 0x4
L_455920:
L_183714:
	movq 0x58(%rbp),%r14
	jmp loop_1897
.p2align 0x4
L_455921:
L_183719:
	movq 0x58(%rbp),%r14
	jmp loop_1897
.p2align 0x4
L_455922:
L_183720:
	movq 0x58(%rbp),%r14
	jmp loop_1897
.p2align 0x4
L_455923:
L_183721:
	movq 0x50(%rbp),%r15
	cmpq $0x1,%r15
	je L_455926
L_183722:
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq $0x1,0x30(%rbp)
.p2align 0x4,,0x7
L_183632:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_455925
.p2align 0x4,,0x7
L_183633:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_455924
L_183634:
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x28(%rbp)
	jmp L_183632
.p2align 0x4
L_455924:
L_183636:
	movq %r15,0x58(%rbp)
	leaq L_183582(%rip),%r15
	movq %r15,0x10(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x48(%rbp)
	movl $0x1,0x50(%rbp)
	movq (globalObjptr+0xD3B8)(%rip),%r15
	movq %r15,0x60(%rbp)
	addq $0x48,%rbp
	leaq (L_183637+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_537
.p2align 0x4
L_455925:
L_183642:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_183643+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183643
.p2align 0x4
.long 0x2574
L_183643:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_183633
.p2align 0x4
L_455926:
L_183723:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_183636
.p2align 0x4
L_455927:
L_183724:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_183725
L_183726:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_183727+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183727
.p2align 0x4
.long 0x2570
L_183727:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_183725:
	movq (globalObjptr+0x7E0)(%rip),%r15
	movq %r15,0x20(%rbp)
	jmp L_183501
.p2align 0x4
.long 0x2564
L_183490:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movl 0x60(%rbp),%r13d
	movl %r13d,0x54(%rbp)
	movq 0x48(%rbp),%r14
	movq $0x1,%r15
	movl 0x50(%rbp),%r13d
	movl %r13d,0x48(%rbp)
	jmp walkPath_0
.p2align 0x4
.long 0x459
L_183502:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movl 0x30(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x2565
fromString_13:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x70(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_183499
L_183694:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_183695+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183695
.p2align 0x4
.long 0x256E
L_183695:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_183499:
	movq 0x70(%rbp),%rdi
	movq 0xFFFFFFFFFFFFFFF0(%rdi),%r15
	decq %r15
	jo L_455943
L_183503:
	movb 0x0(%rdi,%r15,1),%r14b
	testb %r14b,%r14b
	jnz L_455942
L_183506:
	incl (gcState+0x44)(%rip)
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_183507+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_FileSys_Stat_lstat
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183507
.p2align 0x4
.long 0x2566
L_183507:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	cmpl $0xFFFFFFFF,%eax
	je L_455932
L_183508:
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_183509+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_FileSys_Stat_getDev
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183509
.p2align 0x4
.long 0x2566
L_183509:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %r15,%r15
	movl %eax,(cReturnTemp+0x0)(%rip)
	movq %r15,%rax
	addq $0x78,%rbp
	leaq (L_183510+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_FileSys_Stat_getINo
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183510
.p2align 0x4
.long 0x2566
L_183510:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %r15,%r15
	xchgq %r15,%rax
	addq $0x78,%rbp
	leaq (L_183511+0x0)(%rip),%r14
	movq %r14,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_FileSys_Stat_getMode
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183511
.p2align 0x4
.long 0x2566
L_183511:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movl %eax,0x4C(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_183512+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_FileSys_Stat_getNLink
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183512
.p2align 0x4
.long 0x2566
L_183512:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movl %eax,0x70(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_183513
L_183665:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_183666+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183666
.p2align 0x4
.long 0x2575
L_183666:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_183513:
	cmpl $0x0,0x70(%rbp)
	jl L_455929
L_183514:
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_183515+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_FileSys_Stat_getUId
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183515
.p2align 0x4
.long 0x2566
L_183515:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %r15,%r15
	movl %eax,(cReturnTemp+0x0)(%rip)
	movq %r15,%rax
	addq $0x78,%rbp
	leaq (L_183516+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_FileSys_Stat_getGId
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183516
.p2align 0x4
.long 0x2566
L_183516:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %r15,%r15
	movl %eax,(cReturnTemp+0x0)(%rip)
	movq %r15,%rax
	addq $0x78,%rbp
	leaq (L_183517+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_FileSys_Stat_getSize
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183517
.p2align 0x4
.long 0x2566
L_183517:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %r15,%r15
	xchgq %r15,%rax
	addq $0x78,%rbp
	leaq (L_183518+0x0)(%rip),%r14
	movq %r14,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_FileSys_Stat_getATime
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183518
.p2align 0x4
.long 0x2566
L_183518:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq %rax,0x78(%rbp)
	leaq L_183660(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x78,%rbp
	leaq (L_183519+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdFromInt64_0
.p2align 0x4
L_455929:
L_183651:
	movl (gcState+0x44)(%rip),%r15d
	testl %r15d,%r15d
	jz L_455930
L_183652:
	decl %r15d
	movl %r15d,(gcState+0x44)(%rip)
	movq $0x3,0x20(%rbp)
	jmp L_183501
.p2align 0x4
L_455930:
L_183543:
	movq (globalObjptr+0x740)(%rip),%r15
	movq %r15,0x20(%rbp)
	jmp L_183501
.p2align 0x4
L_455932:
L_183667:
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_183668+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_Error_getErrno
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183668
.p2align 0x4
.long 0x2570
L_183668:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movl %eax,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_183669
L_183692:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_183693+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183693
.p2align 0x4
.long 0x2570
L_183693:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_183669:
	movl (gcState+0x44)(%rip),%r15d
	testl %r15d,%r15d
	jz L_183543
L_183670:
	decl %r15d
	movl %r15d,(gcState+0x44)(%rip)
	movq (c_stackP+0x0)(%rip),%rsp
	movl 0x20(%rbp),%edi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_183671+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_Error_strError
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183671
.p2align 0x4
.long 0x2570
L_183671:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq %rax,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_183672
L_183689:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_183690+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183690
.p2align 0x4
.long 0x2570
L_183690:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_183672:
	movq 0x28(%rbp),%r15
	movq %r15,0x30(%rbp)
	testq %r15,%r15
	jz L_455938
L_183673:
	xorl %ecx,%ecx
.p2align 0x4,,0x7
loop_1901:
	movslq %ecx,%r15
	movq %r15,0x28(%rbp)
	movq 0x30(%rbp),%r13
	movb 0x0(%r13,%r15,1),%r14b
	testb %r14b,%r14b
	jz L_455933
L_183674:
	incl %ecx
	jmp loop_1901
.p2align 0x4
L_455933:
L_183675:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_183676
L_183686:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_183687+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183687
.p2align 0x4
.long 0x2570
L_183687:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_183676:
	movq 0x28(%rbp),%rdx
	cmpq $0x7FFFFFFF,%rdx
	ja L_455936
L_183677:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x51,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_183678+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183678
.p2align 0x4
.long 0x2570
L_183678:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq %rax,0x40(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_1902:
	cmpq 0x28(%rbp),%r15
	jnl L_455934
L_183684:
	movl %r15d,%r14d
	movslq %r14d,%r13
	movq 0x40(%rbp),%r14
	movq 0x30(%rbp),%r10
	movb 0x0(%r10,%r13,1),%r11b
	movb %r11b,0x0(%r14,%r15,1)
	incq %r15
	jmp loop_1902
.p2align 0x4
L_455934:
L_183679:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_183680
L_183682:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_183683+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183683
.p2align 0x4
.long 0x2571
L_183683:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_183680:
	movq 0x40(%rbp),%r15
	movq $0x7,0xFFFFFFFFFFFFFFF8(%r15)
L_183681:
	movl 0x20(%rbp),%r14d
	shlq $0x1,%r14
	orq $0x1,%r14
	movq $0x141B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq $0x1931,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r15,0x20(%rbp)
	addq $0x10,%r12
	jmp L_183501
.p2align 0x4
L_455936:
L_183612:
	movq $0x5,0x20(%rbp)
	jmp L_183501
.p2align 0x4
L_455938:
L_183688:
	movq (globalObjptr+0xDBE8)(%rip),%r15
	jmp L_183681
.p2align 0x4
L_455942:
L_183505:
	movq (globalObjptr+0x750)(%rip),%r15
	movq %r15,0x20(%rbp)
	jmp L_183501
.p2align 0x4
L_455943:
L_183500:
	movq $0x3,0x20(%rbp)
	jmp L_183501
.p2align 0x4
.long 0x2576
L_183704:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movl 0x70(%rbp),%r15d
	movl %r15d,0x4C(%rbp)
	movq 0x58(%rbp),%r14
	movq 0x60(%rbp),%r15
	movq %r15,0x50(%rbp)
	jmp loop_1897
.p2align 0x4
.long 0x4A0
L_183637:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_183638
L_183640:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_183641+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183641
.p2align 0x4
.long 0x4A1
L_183641:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_183638:
	movq $0x3E4F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x48(%rbp)
	movl $0x0,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_183639+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1279
.p2align 0x4
.long 0x2565
L_183519:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x68(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x78(%rbp)
	movq 0x0(%r14),%r11
	movq %r11,0x80(%rbp)
	movq %r11,0x90(%rbp)
	movq %r15,0x98(%rbp)
	movq %r13,0xA0(%rbp)
	addq $0x90,%rbp
	leaq (L_183520+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1182
.p2align 0x4
.long 0x25
L_183660:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_183651
L_183662:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_183663+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183663
.p2align 0x4
.long 0x2570
L_183663:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_183651
.p2align 0x4
.long 0x2573
L_183639:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movl 0x48(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x2567
L_183520:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_183521+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_FileSys_Stat_getMTime
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183521
.p2align 0x4
.long 0x2568
L_183521:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq %rax,0x90(%rbp)
	leaq L_183656(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x90,%rbp
	leaq (L_183522+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdFromInt64_0
.p2align 0x4
.long 0x2567
L_183522:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x80(%rbp),%r14
	movq %r14,0x90(%rbp)
	movq %r15,0x98(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0xA0(%rbp)
	addq $0x90,%rbp
	leaq (L_183523+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1182
.p2align 0x4
.long 0x25
L_183656:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_183651
L_183658:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_183659+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183659
.p2align 0x4
.long 0x2570
L_183659:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_183651
.p2align 0x4
.long 0x2567
L_183523:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_183524+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_FileSys_Stat_getCTime
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183524
.p2align 0x4
.long 0x2568
L_183524:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq %rax,0x90(%rbp)
	leaq L_183649(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x90,%rbp
	leaq (L_183525+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdFromInt64_0
.p2align 0x4
.long 0x2567
L_183525:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x80(%rbp),%r14
	movq %r14,0x70(%rbp)
	movq 0x78(%rbp),%r14
	movq %r14,0x80(%rbp)
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_183526+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1182
.p2align 0x4
.long 0x25
L_183649:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_183651
L_183654:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_183655+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183655
.p2align 0x4
.long 0x2570
L_183655:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_183651
.p2align 0x4
.long 0x2569
L_183526:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_183527
L_183647:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_183648+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183648
.p2align 0x4
.long 0x256A
L_183648:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_183527:
	movl (gcState+0x44)(%rip),%r15d
	testl %r15d,%r15d
	jz L_183543
L_183528:
	decl %r15d
	movl %r15d,(gcState+0x44)(%rip)
	movq (c_stackP+0x0)(%rip),%rsp
	movl 0x4C(%rbp),%edi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_183529+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_FileSys_ST_isLink
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183529
.p2align 0x4
.long 0x256A
L_183529:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movl %eax,0x4C(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_183530
L_183644:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_183645+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183645
.p2align 0x4
.long 0x256A
L_183645:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_183530:
	movl 0x4C(%rbp),%r15d
	testl %r15d,%r15d
	jz L_455949
L_183531:
	leaq L_183582(%rip),%r15
	movq %r15,0x10(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (fromString_14+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_455949:
L_183625:
	cmpq $0x1,0x58(%rbp)
	je L_455950
L_183626:
	movq $0x3E4F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x70(%rbp)
	leaq L_183582(%rip),%r15
	movq %r15,0x10(%rbp)
	movl $0x0,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_183627+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1279
.p2align 0x4
L_455950:
L_183631:
	movq 0x50(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq $0x1,0x30(%rbp)
	jmp L_183632
.p2align 0x4
.long 0x256B
fromString_14:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_183532
L_183623:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_183624+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183624
.p2align 0x4
.long 0x256A
L_183624:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_183532:
	movq 0x60(%rbp),%rdi
	movq 0xFFFFFFFFFFFFFFF0(%rdi),%r15
	decq %r15
	jo L_183500
L_183533:
	movb 0x0(%rdi,%r15,1),%r14b
	testb %r14b,%r14b
	jnz L_183505
L_183535:
	incl (gcState+0x44)(%rip)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x400,%rdx
	movq 0x28(%rbp),%rsi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_183536+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_FileSys_readlink
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183536
.p2align 0x4
.long 0x256C
L_183536:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq %rax,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_183537
L_183621:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_183622+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183622
.p2align 0x4
.long 0x2572
L_183622:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_183537:
	movq 0x60(%rbp),%r14
	cmpq $0xFFFFFFFFFFFFFFFF,%r14
	je L_455962
L_183538:
	movl %r14d,%r13d
	movslq %r13d,%r11
	movq %r11,0x68(%rbp)
	cmpq %r11,%r14
	je L_455955
L_183539:
	movq $0x3,%r15
L_183540:
	movl (gcState+0x44)(%rip),%r14d
	testl %r14d,%r14d
	jz L_183543
L_183541:
	movq %r15,0x20(%rbp)
	decl %r14d
	movl %r14d,(gcState+0x44)(%rip)
	jmp L_183501
.p2align 0x4
L_455955:
L_183544:
	movq 0x28(%rbp),%r15
	movq 0x68(%rbp),%rdx
	cmpq %rdx,0xFFFFFFFFFFFFFFF0(%r15)
	jb L_455961
L_183545:
	testq %rdx,%rdx
	jz L_455960
L_183546:
	cmpq $0x7FFFFFFF,%rdx
	ja L_455959
L_183547:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x51,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_183548+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183548
.p2align 0x4
.long 0x256D
L_183548:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq %rax,0x60(%rbp)
L_183549:
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_1898:
	cmpq 0x68(%rbp),%r15
	jnl L_455956
L_183589:
	movq 0x60(%rbp),%r14
	movq 0x28(%rbp),%r11
	movb 0x0(%r11,%r15,1),%r13b
	movb %r13b,0x0(%r14,%r15,1)
	incq %r15
	jmp loop_1898
.p2align 0x4
L_455956:
L_183550:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_183551
L_183587:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_183588+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183588
.p2align 0x4
.long 0x256A
L_183588:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_183551:
	movq 0x60(%rbp),%r15
	movq $0x7,0xFFFFFFFFFFFFFFF8(%r15)
	movl (gcState+0x44)(%rip),%r14d
	testl %r14d,%r14d
	jz L_183543
L_183552:
	decl %r14d
	movl %r14d,(gcState+0x44)(%rip)
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_183553+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromString_24
.p2align 0x4
L_455959:
L_183590:
	movq $0x5,%r15
	jmp L_183540
.p2align 0x4
L_455960:
L_183591:
	movq (globalObjptr+0x6F8)(%rip),%r15
	movq %r15,0x60(%rbp)
	jmp L_183549
.p2align 0x4
L_455961:
L_183592:
	movq $0x6,%r15
	jmp L_183540
.p2align 0x4
L_455962:
L_183593:
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_183594+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_Error_getErrno
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183594
.p2align 0x4
.long 0x2570
L_183594:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movl %eax,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_183595
L_183619:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_183620+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183620
.p2align 0x4
.long 0x2570
L_183620:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_183595:
	movl (gcState+0x44)(%rip),%r15d
	testl %r15d,%r15d
	jz L_183543
L_183596:
	decl %r15d
	movl %r15d,(gcState+0x44)(%rip)
	movq (c_stackP+0x0)(%rip),%rsp
	movl 0x20(%rbp),%edi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_183597+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_Error_strError
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183597
.p2align 0x4
.long 0x2570
L_183597:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq %rax,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_183598
L_183616:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_183617+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183617
.p2align 0x4
.long 0x2570
L_183617:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_183598:
	movq 0x28(%rbp),%r15
	movq %r15,0x30(%rbp)
	testq %r15,%r15
	jz L_455968
L_183599:
	xorl %ecx,%ecx
.p2align 0x4,,0x7
loop_1899:
	movslq %ecx,%r15
	movq %r15,0x28(%rbp)
	movq 0x30(%rbp),%r13
	movb 0x0(%r13,%r15,1),%r14b
	testb %r14b,%r14b
	jz L_455963
L_183600:
	incl %ecx
	jmp loop_1899
.p2align 0x4
L_455963:
L_183601:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_183602
L_183613:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_183614+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183614
.p2align 0x4
.long 0x2570
L_183614:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_183602:
	movq 0x28(%rbp),%rdx
	cmpq $0x7FFFFFFF,%rdx
	ja L_183612
L_183603:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x51,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_183604+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183604
.p2align 0x4
.long 0x2570
L_183604:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq %rax,0x40(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_1900:
	cmpq 0x28(%rbp),%r15
	jnl L_455964
L_183610:
	movl %r15d,%r14d
	movslq %r14d,%r13
	movq 0x40(%rbp),%r14
	movq 0x30(%rbp),%r10
	movb 0x0(%r10,%r13,1),%r11b
	movb %r11b,0x0(%r14,%r15,1)
	incq %r15
	jmp loop_1900
.p2align 0x4
L_455964:
L_183605:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_183606
L_183608:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_183609+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183609
.p2align 0x4
.long 0x2571
L_183609:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_183606:
	movq 0x40(%rbp),%r15
	movq $0x7,0xFFFFFFFFFFFFFFF8(%r15)
L_183607:
	movl 0x20(%rbp),%r14d
	shlq $0x1,%r14
	orq $0x1,%r14
	movq $0x141B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq $0x1931,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r15,0x20(%rbp)
	addq $0x10,%r12
	jmp L_183501
.p2align 0x4
L_455968:
L_183615:
	movq (globalObjptr+0xDBE8)(%rip),%r15
	jmp L_183607
.p2align 0x4
.long 0x2569
L_183627:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movl 0x70(%rbp),%r15d
	movl %r15d,0x4C(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_183628
L_183629:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_183630+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183630
.p2align 0x4
.long 0x256A
L_183630:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_183628:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x60(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x50(%rbp)
	movq 0x58(%rbp),%r14
	jmp loop_1897
.p2align 0x4
.long 0x256B
L_183553:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	movl 0x70(%rbp),%r15d
	movl %r15d,0x4C(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_183554
L_183580:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_183581+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183581
.p2align 0x4
.long 0x256F
L_183581:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_183554:
	cmpq $0x1,0x58(%rbp)
	je L_455985
L_183555:
	movq 0x68(%rbp),%r15
	cmpq $0x1,%r15
	je L_455984
L_183556:
	movq 0x8(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x0(%r15),%r15
	movq %r15,0x68(%rbp)
	movq $0x1,0x70(%rbp)
.p2align 0x4,,0x7
L_183557:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_455983
.p2align 0x4,,0x7
L_183558:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x60(%rbp),%r14
	cmpq $0x1,%r14
	je L_455977
L_183559:
	movq %r15,0x70(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x60(%rbp)
	movq %r15,0x68(%rbp)
	jmp L_183557
.p2align 0x4
L_455977:
L_183560:
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x58(%rbp)
.p2align 0x4,,0x7
L_183561:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_455982
.p2align 0x4,,0x7
L_183562:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x58(%rbp),%r14
	cmpq $0x1,%r14
	je L_455978
L_183563:
	movq %r15,0x68(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x58(%rbp)
	movq %r15,0x60(%rbp)
	jmp L_183561
.p2align 0x4
L_455978:
L_183565:
	movl 0x4C(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_455980
L_183567:
	movl 0x48(%rbp),%r13d
	decl %r13d
	jo L_183500
L_183568:
	movl %r13d,0x48(%rbp)
	movq 0x50(%rbp),%r13
	movq %r15,%r14
	movq %r13,%r15
	jmp walkPath_0
.p2align 0x4
L_455980:
L_183570:
	movl 0x48(%rbp),%r14d
	decl %r14d
	jo L_183500
L_183571:
	movq %r15,0x48(%rbp)
	movl %r14d,0x50(%rbp)
	jmp gotoRoot_0
.p2align 0x4
L_455982:
L_183572:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_183573+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183573
.p2align 0x4
.long 0x2566
L_183573:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	jmp L_183562
.p2align 0x4
L_455983:
L_183574:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_183575+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183575
.p2align 0x4
.long 0x256E
L_183575:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	jmp L_183558
.p2align 0x4
L_455984:
L_183576:
	movq 0x58(%rbp),%r14
	xchgq %r14,%r15
	jmp L_183565
.p2align 0x4
L_455985:
L_183577:
	movl 0x4C(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_455986
L_183578:
	movq 0x68(%rbp),%r15
	jmp L_183567
.p2align 0x4
L_455986:
L_183579:
	movq 0x68(%rbp),%r15
	jmp L_183570
.text
.p2align 0x4
.globl getcwd_0
.hidden getcwd_0
getcwd_0:
loop_1903:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_183765
L_183822:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_183823+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183823
.p2align 0x4
.long 0x451
L_183823:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_183765:
	incl (gcState+0x44)(%rip)
	movq (globalObjptr+0x798)(%rip),%r15
	movslq 0x0(%r15),%rsi
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_183766+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_FileSys_getcwd
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183766
.p2align 0x4
.long 0x451
L_183766:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	testq %rax,%rax
	jz L_455997
L_183767:
	movl (gcState+0x44)(%rip),%r14d
	testl %r14d,%r14d
	jz L_455996
L_183768:
	decl %r14d
	movl %r14d,(gcState+0x44)(%rip)
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x8(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movl %r15d,%ecx
	movslq %ecx,%r14
	cmpq %r15,%r14
	jne L_455995
L_183770:
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_1904:
	cmpl %ecx,%ebx
	jnl L_455994
L_183772:
	movslq %ebx,%r14
	movq %r14,0x10(%rbp)
	cmpq %r15,%r14
	jnb L_183774
L_183775:
	movq 0x8(%rbp),%r11
	movb 0x0(%r11,%r14,1),%r13b
	testb %r13b,%r13b
	jz L_455988
L_183776:
	incl %ebx
	jmp loop_1904
.p2align 0x4
L_455988:
L_183777:
	movq 0x10(%rbp),%rdx
	cmpq %rdx,%r15
	jb L_455992
L_183778:
	testq %rdx,%rdx
	jz L_455991
L_183779:
	cmpq $0x7FFFFFFF,%rdx
	ja L_455990
L_183780:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x51,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_183781+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183781
.p2align 0x4
.long 0x8E6
L_183781:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq %rax,%r15
L_183782:
	xorq %r14,%r14
.p2align 0x4,,0x7
loop_1905:
	cmpq 0x10(%rbp),%r14
	jnl L_455989
L_183784:
	movq 0x8(%rbp),%r11
	movb 0x0(%r11,%r14,1),%r13b
	movb %r13b,0x0(%r15,%r14,1)
	incq %r14
	jmp loop_1905
.p2align 0x4
L_455989:
L_183783:
	movq $0x7,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_455990:
L_183786:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_455991:
L_183787:
	movq (globalObjptr+0x6F8)(%rip),%r15
	jmp L_183782
.p2align 0x4
L_455992:
L_183774:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_455994:
L_183771:
	movq (globalObjptr+0x7A0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_455995:
L_183769:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_455996:
L_183790:
	movq (globalObjptr+0x740)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_455997:
L_183791:
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_183792+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_Error_getErrno
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183792
.p2align 0x4
.long 0x451
L_183792:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movl %eax,0x8(%rbp)
	movl (gcState+0x44)(%rip),%r14d
	testl %r14d,%r14d
	jz L_183790
L_183793:
	decl %r14d
	movl %r14d,(gcState+0x44)(%rip)
	movq $0x1,%r15
	movl $0x22,%ecx
.p2align 0x4,,0x7
L_183794:
	cmpl 0x8(%rbp),%ecx
	je L_456005
L_183795:
	cmpq $0x1,%r15
	je L_455998
L_183796:
	movl 0x0(%r15),%ecx
	movq 0x8(%r15),%r15
	jmp L_183794
.p2align 0x4
L_455998:
L_183797:
	movq (c_stackP+0x0)(%rip),%rsp
	movl 0x8(%rbp),%edi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_183798+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Posix_Error_strError
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183798
.p2align 0x4
.long 0x26
L_183798:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq %rax,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_183799
L_183813:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_183814+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183814
.p2align 0x4
.long 0x47A
L_183814:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_183799:
	movq 0x10(%rbp),%r15
	movq %r15,0x18(%rbp)
	testq %r15,%r15
	jz L_456003
L_183800:
	xorl %ecx,%ecx
.p2align 0x4,,0x7
loop_1906:
	movslq %ecx,%r15
	movq %r15,0x10(%rbp)
	movq 0x18(%rbp),%r13
	movb 0x0(%r13,%r15,1),%r14b
	testb %r14b,%r14b
	jz L_455999
L_183801:
	incl %ecx
	jmp loop_1906
.p2align 0x4
L_455999:
L_183802:
	movq 0x10(%rbp),%rdx
	cmpq $0x7FFFFFFF,%rdx
	ja L_183786
L_183803:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x51,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_183804+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183804
.p2align 0x4
.long 0x649
L_183804:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq %rax,0x20(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_1907:
	cmpq 0x10(%rbp),%r15
	jnl L_456000
L_183810:
	movl %r15d,%r14d
	movslq %r14d,%r13
	movq 0x20(%rbp),%r14
	movq 0x18(%rbp),%r10
	movb 0x0(%r10,%r13,1),%r11b
	movb %r11b,0x0(%r14,%r15,1)
	incq %r15
	jmp loop_1907
.p2align 0x4
L_456000:
L_183805:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_183806
L_183808:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_183809+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183809
.p2align 0x4
.long 0x49D
L_183809:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_183806:
	movq 0x20(%rbp),%r15
	movq $0x7,0xFFFFFFFFFFFFFFF8(%r15)
L_183807:
	movl 0x8(%rbp),%r14d
	shlq $0x1,%r14
	orq $0x1,%r14
	movq $0x141B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq $0x1931,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	addq $0x10,%r12
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_456003:
L_183812:
	movq (globalObjptr+0xDBE8)(%rip),%r15
	jmp L_183807
.p2align 0x4
L_456005:
L_183815:
	movq (globalObjptr+0x798)(%rip),%r15
	movl 0x0(%r15),%r14d
	addl %r14d,%r14d
	jo L_456007
L_183817:
	movl %r14d,0x0(%r15)
	movslq %r14d,%rdx
	cmpq $0x7FFFFFFF,%rdx
	ja L_183786
L_183818:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x51,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_183819+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183819
.p2align 0x4
.long 0x451
L_183819:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x0(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq %rax,0x0(%r15)
	jmp loop_1903
.p2align 0x4
L_456007:
L_183816:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl mkRelative_0
.hidden mkRelative_0
mkRelative_0:
L_183824:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_183825
L_183885:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_183886+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183886
.p2align 0x4
.long 0x45F
L_183886:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_183825:
	movq 0x8(%rbp),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_183826+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromString_24
.p2align 0x4
.long 0x5AF
L_183826:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movl 0x20(%rbp),%r15d
	movl %r15d,0x18(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_183827+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp mkCanonical_0
.p2align 0x4
.long 0x517
L_183827:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_183828+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromString_24
.p2align 0x4
.long 0x517
L_183828:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movl 0x38(%rbp),%r15d
	movl %r15d,0x1C(%rbp)
	movq 0x40(%rbp),%r14
	movq %r14,0x30(%rbp)
	testl %r15d,%r15d
	jz L_183830
L_183831:
	movl 0x18(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_456011
L_183832:
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_456011:
L_183833:
	movq 0x10(%rbp),%r13
	cmpq %r13,(globalObjptr+0xA058)(%rip)
	je L_456024
L_183834:
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	testq %r15,%r15
	jnz L_183830
L_183836:
	xorq %r14,%r14
.p2align 0x4,,0x7
vectorEqualLoop_178:
	cmpq %r15,%r14
	je L_456013
L_183837:
	movq 0x10(%rbp),%r13
	movq (globalObjptr+0xA058)(%rip),%r10
	movb 0x0(%r10,%r14,1),%r11b
	cmpb %r11b,0x0(%r13,%r14,1)
	jne L_456012
L_183839:
	incq %r14
	jmp vectorEqualLoop_178
.p2align 0x4
L_456012:
L_183830:
	movq $0xF,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_456013:
L_183840:
	movq 0x20(%rbp),%r11
	cmpq $0x1,%r11
	je L_456022
L_183841:
	movq 0x8(%r11),%r13
	movq 0x0(%r11),%r14
	movq 0x30(%rbp),%r15
	movq %r11,0x28(%rbp)
.p2align 0x4,,0x7
L_183842:
	cmpq $0x1,%r15
	je L_456021
L_183843:
	movq 0x8(%r15),%r10
	movq 0x0(%r15),%r11
	cmpq %r14,%r11
	je L_456019
L_183844:
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r9
	cmpq 0xFFFFFFFFFFFFFFF0(%r11),%r9
	jne L_183846
L_183866:
	xorq %r8,%r8
.p2align 0x4,,0x7
vectorEqualLoop_179:
	cmpq %r8,%r9
	je L_456015
L_183867:
	movb 0x0(%r14,%r8,1),%spl
	cmpb %spl,0x0(%r11,%r8,1)
	jne L_456014
L_183869:
	incq %r8
	jmp vectorEqualLoop_179
.p2align 0x4
L_456014:
L_183846:
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_183847+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp parentize_0
.p2align 0x4
L_456015:
L_183870:
	cmpq $0x1,%r13
	je L_456016
L_183871:
	movq 0x0(%r13),%r14
	movq %r13,0x28(%rbp)
	movq 0x8(%r13),%r13
	movq %r10,%r15
	jmp L_183842
.p2align 0x4
L_456016:
L_183872:
	movq %r10,%r15
L_183873:
	cmpq $0x1,%r15
	je L_456017
L_183874:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_183875+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp parentize_0
.p2align 0x4
L_456017:
L_183876:
	movq (globalObjptr+0x7C8)(%rip),%r15
L_183859:
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xA058)(%rip),%r15
	movq %r15,0x0(%rbp)
	movl $0x0,0x8(%rbp)
	movq (globalObjptr+0xD3B8)(%rip),%r15
	movq %r15,0x18(%rbp)
	jmp toString_537
.p2align 0x4
L_456019:
L_183877:
	cmpq $0x1,%r13
	je L_456020
L_183878:
	movq 0x0(%r13),%r14
	movq %r13,0x28(%rbp)
	movq 0x8(%r13),%r13
	movq %r10,%r15
	jmp L_183842
.p2align 0x4
L_456020:
L_183879:
	movq %r10,%r15
	jmp L_183873
.p2align 0x4
L_456021:
L_183880:
	movq 0x28(%rbp),%r15
	jmp L_183859
.p2align 0x4
L_456022:
L_183881:
	movq 0x30(%rbp),%r15
	jmp L_183873
.p2align 0x4
L_456024:
L_183882:
	movq 0x20(%rbp),%r11
	cmpq $0x1,%r11
	je L_456025
L_183883:
	movq 0x8(%r11),%r10
	movq 0x0(%r11),%r14
	movq 0x30(%rbp),%r15
	movq %r11,0x28(%rbp)
	xchgq %r10,%r13
	jmp L_183842
.p2align 0x4
L_456025:
L_183884:
	movq 0x30(%rbp),%r15
	jmp L_183873
.p2align 0x4
.long 0x5ED
L_183847:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq (globalObjptr+0x7D0)(%rip),%r15
	movq %r15,0x40(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_183848+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equal_list_0
.p2align 0x4
.long 0x1
L_183875:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp L_183859
.p2align 0x4
.long 0x5F1
L_183848:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movl 0x40(%rbp),%r15d
	testl %r15d,%r15d
	movl %r15d,0x38(%rbp)
	jnz L_456032
L_183849:
	movq 0x30(%rbp),%r15
	cmpq $0x1,%r15
	je L_456031
L_183850:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x30(%rbp)
	movq %r14,0x38(%rbp)
	movq $0x1,0x40(%rbp)
.p2align 0x4,,0x7
L_183851:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_456030
.p2align 0x4,,0x7
L_183852:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_456027
L_183853:
	movq %r15,0x40(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	movq %r15,0x38(%rbp)
	jmp L_183851
.p2align 0x4
L_456027:
L_183854:
	movq 0x40(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x10(%rbp)
.p2align 0x4,,0x7
L_183855:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_456029
.p2align 0x4,,0x7
L_183856:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_183859
L_183857:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_183855
.p2align 0x4
L_456029:
L_183860:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_183861+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183861
.p2align 0x4
.long 0x45B
L_183861:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_183856
.p2align 0x4
L_456030:
L_183862:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_183863+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183863
.p2align 0x4
.long 0x5F4
L_183863:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_183852
.p2align 0x4
L_456031:
L_183864:
	movq 0x28(%rbp),%r14
	xchgq %r14,%r15
	jmp L_183859
.p2align 0x4
L_456032:
L_183865:
	movq 0x30(%rbp),%r15
	jmp L_183859
.text
.p2align 0x4
.globl parentize_0
.hidden parentize_0
parentize_0:
L_183887:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_183888
L_183895:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_183896+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183896
.p2align 0x4
.long 0x451
L_183896:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_183888:
	movq 0x0(%rbp),%r15
	cmpq $0x1,%r15
	je L_456033
L_183889:
	movq 0x8(%r15),%r14
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_183890+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp parentize_0
.p2align 0x4
L_456033:
L_183894:
	movq $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_183890:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_183891
L_183892:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_183893+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183893
.p2align 0x4
.long 0x451
L_183893:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_183891:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq (globalObjptr+0xA048)(%rip),%r14
	movq %r14,0x0(%r15)
	movq 0x0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl equal_list_0
.hidden equal_list_0
equal_list_0:
L_183897:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_183898
L_183919:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_183920+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183920
.p2align 0x4
.long 0x45F
L_183920:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_183898:
	movq 0x0(%rbp),%r8
	movq 0x8(%rbp),%rsp
	cmpq %rsp,%r8
	je L_456042
L_183900:
	movq %rsp,%r15
	andq $0x3,%r15
	jnz L_183901
L_183902:
	movq 0x8(%rsp),%r14
	movq 0x0(%rsp),%r15
L_183903:
	movq %r8,%r13
	andq $0x3,%r13
	jnz L_183901
L_183904:
	movq 0x8(%r8),%r11
	movq 0x0(%r8),%r13
	cmpq %r13,%r15
	je L_456039
L_183905:
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r10
	cmpq %r10,0xFFFFFFFFFFFFFFF0(%r13)
	jne L_183901
L_183907:
	xorq %r9,%r9
.p2align 0x4,,0x7
vectorEqualLoop_180:
	cmpq %r10,%r9
	je L_456037
L_183908:
	movb 0x0(%r15,%r9,1),%r8b
	cmpb %r8b,0x0(%r13,%r9,1)
	jne L_456036
L_183910:
	incq %r9
	jmp vectorEqualLoop_180
.p2align 0x4
L_456036:
L_183901:
	movl $0x0,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_456037:
	movq %r11,%r15
L_183912:
	movq %r15,0x8(%rbp)
	movq %r14,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_183913+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equal_list_0
.p2align 0x4
L_456039:
	movq %r11,%r15
	jmp L_183912
.p2align 0x4
L_456042:
L_183916:
	movl $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_183913:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movl 0x8(%rbp),%r15d
	movl %r15d,0x0(%rbp)
	testl %r15d,%r15d
	jnz L_183916
	jmp L_183901
.text
.p2align 0x4
.globl contents_0
.hidden contents_0
contents_0:
L_183921:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x18(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_183922
L_184022:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_184023+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_184023
.p2align 0x4
.long 0x45C
L_184023:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_183922:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	leaq L_184021(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x0(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_183923+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp openIn_0
.p2align 0x4
.long 0x5ED
L_183923:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq 0x40(%rbp),%r14
	movq %r14,0x38(%rbp)
	movq 0x48(%rbp),%r13
	movq %r13,0x40(%rbp)
	movq 0x50(%rbp),%r11
	movq %r11,0x48(%rbp)
	movq 0x58(%rbp),%r10
	movq %r10,0x50(%rbp)
	movq 0x0(%r15),%r9
	movq %r15,0x30(%rbp)
	movq %r9,%r15
	andq $0x1,%r15
	jz L_183925
L_183928:
	shrq $0x1,%r9
	movl %r9d,%r15d
	testl %r15d,%r15d
	jnz L_456061
L_183929:
	movq 0x10(%r14),%r15
	movq %r15,0x28(%rbp)
	movl 0x0(%r11),%r15d
	movl 0x0(%r13),%r14d
	subl %r15d,%r14d
	jo x_576
L_183932:
	movq 0xFFFFFFFFFFFFFFF0(%r10),%r13
	movslq %r15d,%r11
	movq %r11,0x58(%rbp)
	movslq %r14d,%rdx
	movq %rdx,0x60(%rbp)
	cmpq %r11,%r13
	jb x_576
L_183933:
	subq %r11,%r13
	cmpq %rdx,%r13
	jb x_576
L_183934:
	testq %rdx,%rdx
	jz L_456060
L_183935:
	cmpq $0x7FFFFFFF,%rdx
	ja x_576
L_183936:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x51,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_183937+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183937
.p2align 0x4
.long 0x257C
L_183937:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq %rax,0x68(%rbp)
L_183938:
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_1908:
	cmpq 0x60(%rbp),%r15
	jnl L_456046
L_184015:
	movq 0x58(%rbp),%r14
	addq %r15,%r14
	movq 0x68(%rbp),%r13
	movq 0x50(%rbp),%r10
	movb 0x0(%r10,%r14,1),%r11b
	movb %r11b,0x0(%r13,%r15,1)
	incq %r15
	jmp loop_1908
.p2align 0x4
L_456046:
L_183939:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_183940
L_184013:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_184014+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_184014
.p2align 0x4
.long 0x2581
L_184014:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_183940:
	movq 0x68(%rbp),%r15
	movq $0x7,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq %r14,0x50(%rbp)
.p2align 0x4,,0x7
loop_1909:
	movq 0x38(%rbp),%r15
	movl 0x8(%r15),%r14d
	movl %r14d,0x58(%rbp)
	movq 0x28(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0x24B5,%r13
	jne L_456057
L_183941:
	movq 0x10(%r15),%r13
	movq %r13,0x60(%rbp)
	movl 0x0(%r15),%r11d
	movq 0x8(%r15),%r10
	movq %r10,0x68(%rbp)
	movq 0x20(%r15),%r10
	movl 0x0(%r10),%r9d
	testl %r9d,%r9d
	jnz x_576
L_183942:
	subl 0x0(%r13),%r11d
	jo x_576
L_183943:
	cmpl %r11d,%r14d
	jl L_183945
L_183944:
	movl %r11d,0x58(%rbp)
L_183945:
	movq 0x68(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq 0x60(%rbp),%r13
	movslq 0x0(%r13),%r11
	movq %r11,0x70(%rbp)
	movslq 0x58(%rbp),%r13
	movq %r13,0x78(%rbp)
	cmpq %r11,%r14
	jb x_576
L_183946:
	movq %r14,%r10
	subq %r11,%r10
	cmpq %r13,%r10
	jb x_576
L_183947:
	testq %r11,%r11
	jnz L_183949
L_183979:
	cmpq %r13,%r14
	jne L_456052
L_183981:
L_183955:
	movq 0x60(%rbp),%r14
	movl 0x0(%r14),%r13d
	addl 0x58(%rbp),%r13d
	jo x_576
L_183956:
	movl %r13d,0x0(%r14)
	movq %r15,0x58(%rbp)
.p2align 0x4,,0x7
L_183957:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_456051
.p2align 0x4,,0x7
L_183958:
	movq 0x58(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne x_1802
L_183960:
	testl %r13d,%r13d
	jz L_456047
L_183961:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x50(%rbp),%r15
	movq %r15,0x8(%r14)
	movq %r14,0x50(%rbp)
	jmp loop_1909
.p2align 0x4
L_456047:
L_183962:
	movq 0x50(%rbp),%r14
	cmpq $0x1,%r14
	je L_456050
L_183963:
	movq 0x8(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0x0(%r14),%r14
	movq %r14,0x50(%rbp)
	movq $0x1,0x58(%rbp)
.p2align 0x4,,0x7
L_183964:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_456049
.p2align 0x4,,0x7
L_183965:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_456048
L_183966:
	movq %r15,0x58(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x50(%rbp)
	jmp L_183964
.p2align 0x4
L_456048:
L_183968:
	movq %r15,0x58(%rbp)
	leaq L_183970(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x58,%rbp
	leaq (L_183969+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_456049:
L_183971:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_183972+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183972
.p2align 0x4
.long 0x4B6
L_183972:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	jmp L_183965
.p2align 0x4
L_456050:
L_183973:
	movq $0x1,%r13
	xchgq %r13,%r15
	jmp L_183968
.p2align 0x4
x_1802:
x_576:
	leaq L_183931(%rip),%r15
	movq %r15,0x10(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x28,%rbp
	leaq (L_183930+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp closeIn_0
.p2align 0x4
L_456051:
L_183974:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_183975+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183975
.p2align 0x4
.long 0x4B6
L_183975:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	jmp L_183958
.p2align 0x4
L_456052:
L_183949:
	movq 0x78(%rbp),%r14
	testq %r14,%r14
	jnz L_456054
L_183978:
	movq (globalObjptr+0x5A8)(%rip),%r15
.p2align 0x4,,0x7
L_183953:
	xorq %r14,%r14
.p2align 0x4,,0x7
loop_1910:
	cmpq 0x78(%rbp),%r14
	jnl L_456053
L_183976:
	movq %r14,%r13
	addq 0x70(%rbp),%r13
	movq 0x68(%rbp),%r10
	movb 0x0(%r10,%r13,1),%r11b
	movb %r11b,0x0(%r15,%r14,1)
	incq %r14
	jmp loop_1910
.p2align 0x4
L_456053:
L_183954:
	movq $0x7,0xFFFFFFFFFFFFFFF8(%r15)
	jmp L_183955
.p2align 0x4
L_456054:
L_183950:
	movq 0x78(%rbp),%rdx
	cmpq $0x7FFFFFFF,%rdx
	ja x_576
L_183951:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x51,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_183952+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183952
.p2align 0x4
.long 0x257D
L_183952:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq %rax,%r15
	jmp L_183953
.p2align 0x4
L_456057:
L_183986:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r11
	movl 0x0(%r11),%r10d
	testl %r10d,%r10d
	jnz x_576
L_183987:
	movq 0x8(%r13),%r15
	movq %r15,0x60(%rbp)
	movl 0x0(%r13),%r15d
	movl %r15d,0x5C(%rbp)
	movslq %r14d,%r15
	cmpq $0x7FFFFFFF,%r15
	movq %r15,0x68(%rbp)
	ja x_576
L_183988:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_183989
L_184009:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_184010+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_184010
.p2align 0x4
.long 0x257E
L_184010:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_183989:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x51,%rcx
	movq 0x68(%rbp),%rdx
	movq $0x18,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_183990+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183990
.p2align 0x4
.long 0x257E
L_183990:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq %rax,0x70(%rbp)
	movq $0x3E41,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x58(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl 0x5C(%rbp),%r14d
	movl %r14d,0x4(%r15)
	movq %rax,0x8(%r15)
	movq %r15,0x80(%rbp)
	leaq L_183970(%rip),%r15
	movq %r15,0x10(%rbp)
	movl $0x1,0x88(%rbp)
	addq $0x80,%rbp
	leaq (x_577+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1213
.p2align 0x4
L_456060:
L_184017:
	movq (globalObjptr+0x6F8)(%rip),%r15
	movq %r15,0x68(%rbp)
	jmp L_183938
.p2align 0x4
L_456061:
L_184020:
	movq 0x30(%rbp),%r15
	movq (globalWord64+0x30)(%rip),%r9
	movq %r9,0x0(%r15)
L_183925:
	leaq L_183927(%rip),%r15
	movq %r15,0x10(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_183926+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp closeIn_0
.p2align 0x4
.long 0x25
L_184021:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x852
L_183969:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_183925
.p2align 0x4
.long 0x25
L_183970:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp x_576
.p2align 0x4
.long 0x473
L_183930:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x25
L_183931:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x257F
x_577:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%rdx
	movq %rdx,0x80(%rbp)
	cmpq %r15,%rdx
	movq %r15,0x78(%rbp)
	jne x_576
L_183992:
	cmpl %r14d,0x58(%rbp)
	je L_456065
L_183993:
	cmpq %rdx,0x68(%rbp)
	jb x_576
L_183994:
	testq %rdx,%rdx
	jz L_456064
L_183995:
	cmpq $0x7FFFFFFF,%rdx
	ja x_576
L_183996:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x51,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_183997+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_183997
.p2align 0x4
.long 0x2580
L_183997:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq %rax,%r15
L_183998:
	xorq %r14,%r14
.p2align 0x4,,0x7
loop_1911:
	cmpq 0x80(%rbp),%r14
	jnl L_456063
L_184004:
	movq 0x70(%rbp),%r11
	movb 0x0(%r11,%r14,1),%r13b
	movb %r13b,0x0(%r15,%r14,1)
	incq %r14
	jmp loop_1911
.p2align 0x4
L_456063:
L_183999:
	movq $0x7,0xFFFFFFFFFFFFFFF8(%r15)
L_184000:
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne x_576
L_184002:
	movq 0x60(%rbp),%r14
	addq 0x0(%r14),%r11
	jo x_576
L_184003:
	movq %r11,0x0(%r14)
	movq %r15,0x58(%rbp)
	jmp L_183957
.p2align 0x4
L_456064:
L_184006:
	movq (globalObjptr+0x6F8)(%rip),%r15
	jmp L_183998
.p2align 0x4
L_456065:
L_184008:
	movq 0x70(%rbp),%r15
	movq $0x7,0xFFFFFFFFFFFFFFF8(%r15)
	jmp L_184000
.p2align 0x4
.long 0x51A
L_183926:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x25
L_183927:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl usage_0
.hidden usage_0
usage_0:
L_184024:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_184025
L_184178:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_184179+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_184179
.p2align 0x4
.long 0x45F
L_184179:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_184025:
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_456066
L_184026:
	movq 0x18(%r14),%r15
	movq %r15,0x8(%rbp)
	movq 0x10(%r14),%r15
	movq %r15,0x28(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x18(%rbp)
	addq $0x28,%rbp
	leaq (L_184027+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp options_0
.p2align 0x4
L_456066:
L_184177:
	movq $0x9,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x65B
L_184027:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq $0x1,%r15
	je L_456104
L_184028:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x20(%rbp)
	movq %r14,0x28(%rbp)
	movq $0x1,0x30(%rbp)
.p2align 0x4,,0x7
L_184029:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_456103
.p2align 0x4,,0x7
L_184030:
	movq $0x2385,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_456068
L_184031:
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x28(%rbp)
	jmp L_184029
.p2align 0x4
L_456068:
L_184032:
	movq 0x30(%rbp),%r14
	movq %r14,0x20(%rbp)
	movq 0x28(%rbp),%r15
	movq $0x1,0x28(%rbp)
.p2align 0x4,,0x7
L_184033:
	movq 0x10(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x40(%rbp)
	cmpb $0x1,0x0(%r15)
	je L_456101
L_184034:
	movq 0x10(%rbp),%r14
	movl 0x0(%r14),%r13d
	testl %r13d,%r13d
	jnz L_456099
L_184035:
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_456069
L_184036:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	jmp L_184033
.p2align 0x4
L_456069:
L_184037:
	movq 0x28(%rbp),%r15
	movq %r15,0x10(%rbp)
L_184038:
	movq (globalObjptr+0x13F0)(%rip),%r15
	movq %r15,0x20(%rbp)
	movq $0x1,0x28(%rbp)
.p2align 0x4,,0x7
L_184039:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_456098
.p2align 0x4,,0x7
L_184040:
	movq $0x1B59,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_456070
L_184041:
	movq %r15,0x28(%rbp)
	movq 0x0(%r14),%r14
	movq %r14,0x20(%rbp)
	jmp L_184039
.p2align 0x4
L_456070:
L_184042:
	movq 0x10(%rbp),%r13
	cmpq $0x1,%r13
	je L_456097
L_184043:
	movq 0x8(%r13),%r11
	movq %r11,0x20(%rbp)
	movq 0x0(%r13),%r11
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_184044:
	cmpq $0x1,%r15
	je L_456096
L_184045:
	movq %r14,0x40(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq $0x1,0x38(%rbp)
L_184046:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_456095
.p2align 0x4,,0x7
L_184048:
	movq 0x40(%rbp),%r14
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_184049
L_184050:
	movq 0x8(%r14),%r15
	movl 0x0(%r14),%r13d
	movq 0x30(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r11
	movl %r11d,%ebx
	movslq %ebx,%r10
	cmpq %r10,%r11
	jne L_184052
L_184053:
	cmpl %ebx,%r13d
	jnl L_456092
L_184152:
L_184055:
	movq $0x1B59,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ebx,0x0(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq 0x38(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x28(%rbp),%r13
	cmpq $0x1,%r13
	je L_456071
L_184056:
	movq %r14,0x38(%rbp)
	movq %r15,0x40(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x28(%rbp)
	movq %r15,0x30(%rbp)
	jmp L_184046
.p2align 0x4
L_456071:
L_184057:
	xchgq %r14,%r15
L_184058:
	cmpq $0x1,%r14
	jne L_456091
L_184059:
	cmpq $0x1,%r15
	je L_456090
L_184060:
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movl 0x0(%r15),%r14d
	movl %r14d,0x30(%rbp)
	movq $0x1,0x38(%rbp)
L_184061:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_456089
.p2align 0x4,,0x7
L_184062:
	movq $0x1B59,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x30(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_456072
L_184063:
	movq %r15,0x38(%rbp)
	movl 0x0(%r14),%r15d
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	movl %r15d,0x30(%rbp)
	jmp L_184061
.p2align 0x4
L_456072:
L_184065:
	movq 0x20(%rbp),%r13
	cmpq $0x1,%r13
	je L_456073
L_184066:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movq %r13,0x20(%rbp)
	xchgq %r14,%r15
	jmp L_184044
.p2align 0x4
L_456073:
L_184067:
	movq %r15,0x20(%rbp)
L_184068:
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_456088
L_184069:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq $0x1,0x28(%rbp)
.p2align 0x4,,0x7
L_184070:
	cmpq $0x1,%r15
	jne L_456083
L_184147:
	movq $0x1,0x30(%rbp)
	movq (globalObjptr+0x13F8)(%rip),%r14
	movq %r14,0x38(%rbp)
	movq 0x20(%rbp),%r14
	movq %r14,0x40(%rbp)
.p2align 0x4,,0x7
L_184088:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_456082
.p2align 0x4,,0x7
L_184089:
	cmpq $0x1,0x40(%rbp)
	jne L_184074
L_184090:
	cmpq $0x1,0x38(%rbp)
	jne L_456080
L_184091:
	movq 0x30(%rbp),%r15
	cmpq $0x1,%r15
	je L_456079
L_184092:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x30(%rbp)
	movq %r14,0x38(%rbp)
	movq $0x1,0x40(%rbp)
L_184093:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_456078
.p2align 0x4,,0x7
L_184094:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_456074
L_184095:
	movq %r15,0x40(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	movq %r15,0x38(%rbp)
	jmp L_184093
.p2align 0x4
L_456074:
L_184097:
	movq $0x1B7D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x28(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x10(%rbp),%r13
	cmpq $0x1,%r13
	je L_456075
L_184098:
	movq %r14,0x28(%rbp)
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movq %r13,0x10(%rbp)
	movq %r14,%r15
	jmp L_184070
.p2align 0x4
L_456075:
L_184099:
	movq %r15,0x20(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq $0x1,0x28(%rbp)
.p2align 0x4,,0x7
L_184100:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_456077
.p2align 0x4,,0x7
L_184101:
	movq $0x1B7D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_456076
L_184102:
	movq %r15,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_184100
.p2align 0x4
L_456076:
L_184103:
	movq %r15,0x10(%rbp)
L_184104:
	movq 0x0(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_184105+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_456077:
L_184136:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_184137+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_184137
.p2align 0x4
.long 0x4DE
L_184137:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_184101
.p2align 0x4
L_456078:
L_184138:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_184139+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_184139
.p2align 0x4
.long 0x63B
L_184139:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_184094
.p2align 0x4
L_456079:
L_184140:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_184097
.p2align 0x4
L_456080:
L_184074:
	movq (globalObjptr+0x1408)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_456082:
L_184141:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_184142+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_184142
.p2align 0x4
.long 0x63B
L_184142:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_184089
.p2align 0x4
L_456083:
L_184071:
	movq 0x8(%r15),%r13
	movq %r13,0x30(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x38(%rbp)
	movq $0x1,0x40(%rbp)
	movq (globalObjptr+0x13F8)(%rip),%r15
	movq 0x20(%rbp),%r14
L_184073:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_184074
L_184075:
	movq 0x8(%r14),%r13
	movq %r13,0x48(%rbp)
	movl 0x0(%r14),%r13d
L_184076:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_184074
L_184077:
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x38(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r11d
	movslq %r11d,%r10
	cmpq %r10,%r14
	jne L_456085
L_184079:
	subl %r11d,%r13d
	jo L_456084
L_184081:
	movl %r13d,0x68(%rbp)
	movq $0x20,%r15
	shlq $0x4,%r15
	orq $0x7,%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_184082+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_0
.p2align 0x4
L_456084:
L_184080:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_456085:
L_184052:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_456088:
L_184148:
	movq $0x1,0x10(%rbp)
	jmp L_184104
.p2align 0x4
L_456089:
L_184149:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_184150+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_184150
.p2align 0x4
.long 0x647
L_184150:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_184062
.p2align 0x4
L_456090:
L_184151:
	movq $0x1,%r15
	jmp L_184065
.p2align 0x4
L_456091:
L_184049:
	movq (globalObjptr+0x1400)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_456092:
	movl %r13d,%ebx
	jmp L_184055
.p2align 0x4
L_456095:
L_184153:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_184154+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_184154
.p2align 0x4
.long 0x63B
L_184154:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_184048
.p2align 0x4
L_456096:
L_184155:
	movq $0x1,%r15
	jmp L_184058
.p2align 0x4
L_456097:
L_184156:
	movq %r15,0x20(%rbp)
	jmp L_184068
.p2align 0x4
L_456098:
L_184157:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_184158+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_184158
.p2align 0x4
.long 0x4DE
L_184158:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_184040
.p2align 0x4
L_456099:
L_184159:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_184161
L_184168:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_184169+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_184169
.p2align 0x4
.long 0x63B
L_184169:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_184161:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x48(%rbp)
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x13C8)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0xF5E0)(%rip),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_184162+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_456101:
L_184170:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_184161
L_184172:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_184173+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_184173
.p2align 0x4
.long 0x63B
L_184173:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_184161
.p2align 0x4
L_456103:
L_184174:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_184175+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_184175
.p2align 0x4
.long 0x646
L_184175:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_184030
.p2align 0x4
L_456104:
L_184176:
	movq $0x1,0x10(%rbp)
	jmp L_184038
.p2align 0x4
.long 0x5EF
L_184105:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x28(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_184106+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x7F0
L_184082:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_184083
L_184145:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_184146+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_184146
.p2align 0x4
.long 0x809
L_184146:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_184083:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x38(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_184084+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0xA15
L_184162:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_184163
L_184166:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_184167+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_184167
.p2align 0x4
.long 0x2276
L_184167:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_184163:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1B7D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x20(%rbp),%r13
	cmpq $0x1,%r13
	je L_456106
L_184164:
	movq %r14,0x28(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x20(%rbp)
	jmp L_184033
.p2align 0x4
L_456106:
L_184165:
	movq %r14,0x10(%rbp)
	jmp L_184038
.p2align 0x4
.long 0x5EF
L_184106:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq (globalObjptr+0x76C0)(%rip),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_184107+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x1B7F
L_184084:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_184085
L_184143:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_184144+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_184144
.p2align 0x4
.long 0x61D
L_184144:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_184085:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x40(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x30(%rbp),%r13
	cmpq $0x1,%r13
	je L_456108
L_184086:
	movq %r15,0x40(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x30(%rbp)
	movq %r15,0x38(%rbp)
	movq 0x50(%rbp),%r15
	movq 0x48(%rbp),%r14
	jmp L_184073
.p2align 0x4
L_456108:
L_184087:
	movq %r15,0x30(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	jmp L_184088
.p2align 0x4
.long 0x5EF
L_184107:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq %r15,0x28(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_184108+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x5EF
L_184108:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x28(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_184109+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x5EF
L_184109:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_456110
L_184110:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
L_184111:
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_184112+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_456110:
L_184130:
	movl $0x1,0x0(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp exit_0
.p2align 0x4
.long 0x5EF
L_184112:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r14
	movq %r14,0x20(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%ecx
	movslq %ecx,%r14
	cmpq %r15,%r14
	jne L_184052
L_184114:
	decl %ecx
	jo L_184080
L_184115:
.p2align 0x4,,0x7
loop_1912:
	cmpl $0x0,%ecx
	jl L_184123
L_184116:
	movslq %ecx,%r14
	cmpq %r15,%r14
	jnb L_456115
L_184118:
	movq 0x20(%rbp),%r13
	movb 0x0(%r13,%r14,1),%r11b
	cmpb $0xD,%r11b
	ja L_456113
L_184119:
	cmpb $0x9,%r11b
	jb L_456111
L_184121:
	decl %ecx
	jmp loop_1912
.p2align 0x4
L_456111:
L_184123:
	incl %ecx
	jo L_184080
L_184124:
	movl %ecx,%r15d
	shlq $0x1,%r15
	orq $0x1,%r15
	movq %r15,0x28(%rbp)
	movl $0x0,0x30(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x28,%rbp
	leaq (L_184125+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp extract_0
.p2align 0x4
L_456113:
L_184131:
	cmpb $0x20,%r11b
	jne L_184123
	jmp L_184121
.p2align 0x4
L_456115:
L_184117:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x5EF
L_184125:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq %r15,0x28(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_184126+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x5EF
L_184126:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x28(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_184127+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x5EF
L_184127:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_184130
L_184128:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	jmp L_184111
.text
.p2align 0x4
.globl options_0
.hidden options_0
options_0:
L_184180:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_184446
L_184181:
	movq (gcState+0x458)(%rip),%r15
	subq %r12,%r15
	cmpq $0x4A8,%r15
	jb L_456183
L_184182:
	movq 0x0(%rbp),%r15
	movq 0x2D8(%r15),%r14
	movq %r14,0x8(%rbp)
	movq 0x2D0(%r15),%r13
	movq %r13,0x10(%rbp)
	movq 0x2C8(%r15),%r11
	movq 0x2C0(%r15),%r10
	movq 0x2B8(%r15),%r9
	movq 0x2B0(%r15),%r8
	movq %r8,0x18(%rbp)
	movq 0x2A8(%r15),%r8
	movq 0x2A0(%r15),%rsp
	movq 0x298(%r15),%rsi
	movq %rsi,0x20(%rbp)
	movq 0x290(%r15),%rsi
	movq 0x288(%r15),%rdi
	movq %rdi,0x28(%rbp)
	movq 0x280(%r15),%rdi
	movq 0x278(%r15),%rdx
	movq 0x270(%r15),%rcx
	movq %rcx,0x30(%rbp)
	movq 0x268(%r15),%rcx
	movq %rcx,0x38(%rbp)
	movq 0x260(%r15),%rcx
	movq %rcx,0x40(%rbp)
	movq 0x258(%r15),%rcx
	movq %rcx,0x48(%rbp)
	movq 0x250(%r15),%rcx
	movq %rcx,0x50(%rbp)
	movq 0x248(%r15),%rcx
	movq %rcx,0x58(%rbp)
	movq 0x240(%r15),%rcx
	movq %rcx,0x60(%rbp)
	movq 0x238(%r15),%rcx
	movq %rcx,0x68(%rbp)
	movq 0x230(%r15),%rcx
	movq %rcx,0x70(%rbp)
	movq 0x228(%r15),%rcx
	movq %rcx,0x78(%rbp)
	movq 0x220(%r15),%rcx
	movq %rcx,0x80(%rbp)
	movq 0x218(%r15),%rcx
	movq %rcx,0x88(%rbp)
	movq 0x210(%r15),%rcx
	movq %rcx,0x90(%rbp)
	movq 0x208(%r15),%rcx
	movq %rcx,0x98(%rbp)
	movq 0x1F0(%r15),%rcx
	movq %rcx,0xA0(%rbp)
	movq 0x1E8(%r15),%rcx
	movq %rcx,0xA8(%rbp)
	movq 0x1E0(%r15),%rcx
	movq %rcx,0xB0(%rbp)
	movq 0x1D8(%r15),%rcx
	movq %rcx,0xB8(%rbp)
	movq 0x1D0(%r15),%rcx
	movq %rcx,0xC0(%rbp)
	movq 0x1C8(%r15),%rcx
	movq %rcx,0xC8(%rbp)
	movq 0x1C0(%r15),%rcx
	movq %rcx,0xD0(%rbp)
	movq 0x1B8(%r15),%rcx
	movq %rcx,0xD8(%rbp)
	movq 0x1B0(%r15),%rcx
	movq %rcx,0xE0(%rbp)
	movq 0x1A8(%r15),%rcx
	movq %rcx,0xE8(%rbp)
	movq 0x1A0(%r15),%rcx
	movq %rcx,0xF0(%rbp)
	movq 0x198(%r15),%rcx
	movq %rcx,0xF8(%rbp)
	movq 0x190(%r15),%rcx
	movq %rcx,0x100(%rbp)
	movq 0x188(%r15),%rcx
	movq %rcx,0x108(%rbp)
	movq 0x180(%r15),%rcx
	movq %rcx,0x110(%rbp)
	movq 0x178(%r15),%rcx
	movq %rcx,0x118(%rbp)
	movq 0x170(%r15),%rcx
	movq %rcx,0x120(%rbp)
	movq 0x168(%r15),%rcx
	movq %rcx,0x128(%rbp)
	movq 0x160(%r15),%rcx
	movq %rcx,0x130(%rbp)
	movq 0x158(%r15),%rcx
	movq %rcx,0x138(%rbp)
	movq 0x150(%r15),%rcx
	movq %rcx,0x140(%rbp)
	movq 0x148(%r15),%rcx
	movq %rcx,0x148(%rbp)
	movq 0x140(%r15),%rcx
	movq %rcx,0x150(%rbp)
	movq 0x138(%r15),%rcx
	movq %rcx,0x158(%rbp)
	movq 0x130(%r15),%rcx
	movq %rcx,0x160(%rbp)
	movq 0x128(%r15),%rcx
	movq %rcx,0x168(%rbp)
	movq 0x120(%r15),%rcx
	movq %rcx,0x170(%rbp)
	movq 0x118(%r15),%rcx
	movq %rcx,0x178(%rbp)
	movq 0x110(%r15),%rcx
	movq %rcx,0x180(%rbp)
	movq 0x108(%r15),%rcx
	movq %rcx,0x188(%rbp)
	movq 0x100(%r15),%rcx
	movq %rcx,0x190(%rbp)
	movq 0xF8(%r15),%rcx
	movq %rcx,0x198(%rbp)
	movq 0xF0(%r15),%rcx
	movq %rcx,0x1A0(%rbp)
	movq 0xE8(%r15),%rcx
	movq %rcx,0x1A8(%rbp)
	movq 0xE0(%r15),%rcx
	movq %rcx,0x1B0(%rbp)
	movq 0xD8(%r15),%rcx
	movq %rcx,0x1B8(%rbp)
	movq 0xD0(%r15),%rcx
	movq %rcx,0x1C0(%rbp)
	movq 0xC8(%r15),%rcx
	movq %rcx,0x1C8(%rbp)
	movq 0xC0(%r15),%rcx
	movq %rcx,0x1D0(%rbp)
	movq 0xB8(%r15),%rcx
	movq %rcx,0x1D8(%rbp)
	movq 0xB0(%r15),%rcx
	movq %rcx,0x1E0(%rbp)
	movq 0xA8(%r15),%rcx
	movq %rcx,0x1E8(%rbp)
	movq 0xA0(%r15),%rcx
	movq %rcx,0x1F0(%rbp)
	movq 0x98(%r15),%rcx
	movq %rcx,0x1F8(%rbp)
	movq 0x90(%r15),%rcx
	movq %rcx,0x200(%rbp)
	movq 0x88(%r15),%rcx
	movq %rcx,0x208(%rbp)
	movq 0x80(%r15),%rcx
	movq %rcx,0x210(%rbp)
	movq 0x78(%r15),%rcx
	movq %rcx,0x218(%rbp)
	movq 0x70(%r15),%rcx
	movq %rcx,0x220(%rbp)
	movq 0x68(%r15),%rcx
	movq %rcx,0x228(%rbp)
	movq 0x60(%r15),%rcx
	movq %rcx,0x230(%rbp)
	movq 0x58(%r15),%rcx
	movq %rcx,0x238(%rbp)
	movq 0x50(%r15),%rcx
	movq %rcx,0x240(%rbp)
	movq 0x48(%r15),%rcx
	movq %rcx,0x248(%rbp)
	movq 0x40(%r15),%rcx
	movq %rcx,0x250(%rbp)
	movq 0x38(%r15),%rcx
	movq %rcx,0x258(%rbp)
	movq 0x30(%r15),%rcx
	movq %rcx,0x260(%rbp)
	movq 0x28(%r15),%rcx
	movq %rcx,0x268(%rbp)
	movq 0x20(%r15),%rcx
	movq %rcx,0x270(%rbp)
	movq 0x18(%r15),%rcx
	movq %rcx,0x278(%rbp)
	movq 0x10(%r15),%rcx
	movq %rcx,0x280(%rbp)
	movq 0x8(%r15),%rcx
	movq %rcx,0x288(%rbp)
	movq 0x0(%r15),%rcx
	movq %rcx,0x290(%rbp)
	movq $0x20B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x298(%rbp)
	addq $0x18,%r12
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	movzbq 0x0(%r11),%rax
	subq $0x1,%rax
	cmpq $0xB,%rax
	ja L_456120
	leaq jumpTable_614(%rip),%rbx
	jmp *(%rbx,%rax,8)
.data
.p2align 0x4
jumpTable_614:
.quad L_456182,L_456181,L_456180,L_456180,L_456179,L_456180,L_456178,L_456177,L_456180,L_456176,L_456175,L_456174
.text
.p2align 0x4
L_456120:
	movq %r10,(localObjptr+0x8)(%rip)
	movq %r9,(localObjptr+0x10)(%rip)
	movq %r8,(localObjptr+0x18)(%rip)
	movq %rsp,(localObjptr+0x20)(%rip)
	movq %rsi,(localObjptr+0x28)(%rip)
	movq %rdi,(localObjptr+0x30)(%rip)
	movq %rdx,(localObjptr+0x38)(%rip)
L_184183:
	movq (globalObjptr+0xF5E8)(%rip),%r15
L_184184:
	movq $0x48EB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq (localObjptr+0x8)(%rip),%r13
	movq %r13,0x0(%r14)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x8(%r14)
	movq $0x1B9D,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	addq $0x10,%r12
	movq $0x120D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r11,0x8(%r14)
	movq %r15,0x18(%r14)
	addq $0x30,%r12
	movb $0x1,%r15b
	movzbl %r15b,%r11d
	movl %r11d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0xF5F0)(%rip),%r15
	movq %r15,0x10(%r14)
	movq (globalObjptr+0xCA30)(%rip),%r15
	movq %r15,0x20(%r14)
	movq $0x2391,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x48E7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq (localObjptr+0x10)(%rip),%r11
	movq %r11,0x0(%r14)
	addq $0x10,%r12
	movq $0x1B9D,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	addq $0x10,%r12
	movq $0x120D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r11,0x8(%r14)
	addq $0x30,%r12
	movb $0x0,%r11b
	movzbl %r11b,%r10d
	movl %r10d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0xF5F8)(%rip),%r11
	movq %r11,0x10(%r14)
	movq (globalObjptr+0xF600)(%rip),%r11
	movq %r11,0x18(%r14)
	movq (globalObjptr+0xF608)(%rip),%r11
	movq %r11,0x20(%r14)
	movq $0x2391,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r15,0x8(%r11)
	addq $0x18,%r12
	movq $0x48ED,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1B9D,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	addq $0x10,%r12
	movq $0x120D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r10,0x8(%r15)
	addq $0x30,%r12
	movb $0x1,%r10b
	movzbl %r10b,%r9d
	movl %r9d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq (globalObjptr+0xF610)(%rip),%r10
	movq %r10,0x10(%r15)
	movq (globalObjptr+0xF618)(%rip),%r10
	movq %r10,0x18(%r15)
	movq (globalObjptr+0xF620)(%rip),%r9
	movq %r9,0x20(%r15)
	movq $0x2391,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r15,0x0(%r9)
	movq %r11,0x8(%r9)
	addq $0x18,%r12
	movq $0x48E5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r14,0x0(%r15)
	movq $0x1B9D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x120D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x30,%r12
	movb $0x0,%r14b
	movzbl %r14b,%r11d
	movl %r11d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq (globalObjptr+0xF628)(%rip),%r14
	movq %r14,0x10(%r15)
	movq %r10,0x18(%r15)
	movq (globalObjptr+0xF630)(%rip),%r14
	movq %r14,0x20(%r15)
	movq $0x2391,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r9,0x8(%r14)
	addq $0x18,%r12
	movq $0x4945,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq (localObjptr+0x18)(%rip),%r11
	movq %r11,0x0(%r15)
	addq $0x10,%r12
	movq $0x1BA1,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	addq $0x10,%r12
	movq $0x120D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x8(%r15)
	addq $0x30,%r12
	movb $0x0,%r11b
	movzbl %r11b,%r9d
	movl %r9d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq (globalObjptr+0xF638)(%rip),%r11
	movq %r11,0x10(%r15)
	movq (globalObjptr+0xF640)(%rip),%r11
	movq %r11,0x18(%r15)
	movq (globalObjptr+0xF648)(%rip),%r11
	movq %r11,0x20(%r15)
	movq $0x2391,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r14,0x8(%r11)
	addq $0x18,%r12
	movq $0x48EF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq (localObjptr+0x20)(%rip),%r14
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x1B9D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x120D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x30,%r12
	movb $0x0,%r14b
	movzbl %r14b,%r9d
	movl %r9d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq (globalObjptr+0xF650)(%rip),%r14
	movq %r14,0x10(%r15)
	movq (globalObjptr+0xF658)(%rip),%r14
	movq %r14,0x18(%r15)
	movq (globalObjptr+0xF660)(%rip),%r14
	movq %r14,0x20(%r15)
	movq $0x2391,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r11,0x8(%r14)
	addq $0x18,%r12
	movq $0x48E3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r11
	movq %r11,0x0(%r15)
	movq $0x1B9D,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r15,0x0(%r9)
	addq $0x10,%r12
	movq $0x120D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r9,0x8(%r15)
	addq $0x30,%r12
	movb $0x1,%r9b
	movzbl %r9b,%r8d
	movl %r8d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq (globalObjptr+0xF668)(%rip),%r9
	movq %r9,0x10(%r15)
	movq %r10,0x18(%r15)
	movq (globalObjptr+0xF670)(%rip),%r9
	movq %r9,0x20(%r15)
	movq $0x2391,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r15,0x0(%r9)
	movq %r14,0x8(%r9)
	addq $0x18,%r12
	movq $0x48F1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r11,0x0(%r15)
	movq $0x1B9D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x120D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x30,%r12
	movb $0x0,%r14b
	movzbl %r14b,%r11d
	movl %r11d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq (globalObjptr+0xF678)(%rip),%r14
	movq %r14,0x10(%r15)
	movq %r10,0x18(%r15)
	movq (globalObjptr+0xF680)(%rip),%r14
	movq %r14,0x20(%r15)
	movq $0x2391,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r9,0x8(%r14)
	addq $0x18,%r12
	movq $0x48E1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq (localObjptr+0x28)(%rip),%r11
	movq %r11,0x0(%r15)
	addq $0x20,%r12
	movq 0x28(%rbp),%r11
	movq %r11,0x8(%r15)
	movq %r13,0x10(%r15)
	movq $0x1B9D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x10,%r12
	movq $0x120D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x30,%r12
	movb $0x0,%r13b
	movzbl %r13b,%r11d
	movl %r11d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq (globalObjptr+0xF688)(%rip),%r13
	movq %r13,0x10(%r15)
	movq (globalObjptr+0xF690)(%rip),%r13
	movq %r13,0x18(%r15)
	movq (globalObjptr+0xF698)(%rip),%r13
	movq %r13,0x20(%r15)
	movq $0x2391,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq $0x4947,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq (localObjptr+0x30)(%rip),%r14
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x1BA1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x120D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x30,%r12
	movb $0x0,%r14b
	movzbl %r14b,%r11d
	movl %r11d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq (globalObjptr+0xF6A0)(%rip),%r14
	movq %r14,0x10(%r15)
	movq (globalObjptr+0xF6A8)(%rip),%r14
	movq %r14,0x18(%r15)
	movq (globalObjptr+0xF6B0)(%rip),%r11
	movq %r11,0x20(%r15)
	movq $0x2391,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq $0x4943,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq (localObjptr+0x38)(%rip),%r13
	movq %r13,0x0(%r15)
	addq $0x10,%r12
	movq $0x1BA1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x10,%r12
	movq $0x120D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x30,%r12
	movb $0x0,%r13b
	movzbl %r13b,%r10d
	movl %r10d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq (globalObjptr+0xF6B8)(%rip),%r13
	movq %r13,0x10(%r15)
	movq %r14,0x18(%r15)
	movq (globalObjptr+0xF6C0)(%rip),%r14
	movq %r14,0x20(%r15)
	movq $0x2391,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x2A0(%rbp)
	movq %r15,0x0(%r14)
	movq %r11,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x76D8)(%rip),%r15
	movq %r15,0x2A8(%rbp)
	movb $0x1,0x2B0(%rbp)
	movq $0x1,0x2B8(%rbp)
.p2align 0x4,,0x7
L_184185:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_456173
.p2align 0x4,,0x7
L_184186:
	movzbw 0x2B0(%rbp),%r15w
	shlw $0x1,%r15w
	orw $0x1,%r15w
	movq $0x2393,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movzwl %r15w,%r13d
	movl %r13d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x2B8(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x2A8(%rbp),%r13
	cmpq $0x1,%r13
	je L_456121
L_184187:
	movq %r14,0x2B8(%rbp)
	movb 0x0(%r13),%r14b
	movq 0x8(%r13),%r13
	movq %r13,0x2A8(%rbp)
	movb %r14b,0x2B0(%rbp)
	jmp L_184185
.p2align 0x4
L_456121:
L_184188:
	movw %r15w,0x2B0(%rbp)
	movq 0x2B8(%rbp),%r15
	movq %r15,0x2A8(%rbp)
	movq $0x1,0x2B8(%rbp)
.p2align 0x4,,0x7
L_184189:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_456172
.p2align 0x4,,0x7
L_184190:
	movq $0x2393,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movzwl 0x2B0(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x2B8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x2A8(%rbp),%r14
	cmpq $0x1,%r14
	je L_456122
L_184191:
	movq %r15,0x2B8(%rbp)
	movw 0x0(%r14),%r15w
	movq 0x8(%r14),%r14
	movq %r14,0x2A8(%rbp)
	movw %r15w,0x2B0(%rbp)
	jmp L_184189
.p2align 0x4
L_456122:
L_184192:
	movq $0x1,%r13
	xchgq %r13,%r14
.p2align 0x4,,0x7
L_184193:
	movq 0x30(%rbp),%r13
	movq 0x10(%r13),%r11
	movb 0x0(%r11),%r10b
	cmpb $0xB,%r10b
	je L_184422
hasCodegen_2:
	movq 0x8(%r13),%r9
	movq 0x0(%r13),%r8
	cmpb $0x0,%r10b
	je L_456167
	cmpb $0xB,%r10b
	je L_456165
	movq %r14,(localObjptr+0x8)(%rip)
L_184194:
	cmpq $0x1,%r15
	je L_456164
L_184195:
	movw 0x0(%r15),%r11w
	movq 0x8(%r15),%r15
	movq %r15,%r14
	movw %r11w,%r15w
	movq (localObjptr+0x8)(%rip),%r13
.p2align 0x4,,0x7
L_184196:
	movw %r15w,%r11w
	andw $0x1,%r11w
	jz L_456163
L_184198:
	shrw $0x1,%r15w
	movb %r15b,%r11b
	movq 0x30(%rbp),%r15
	movq 0x8(%r15),%r10
	movq 0x0(%r15),%r9
	movq 0x10(%r15),%rsp
	movb 0x0(%rsp),%r8b
	cmpb $0x0,%r8b
	je L_456154
	cmpb $0xB,%r8b
	je L_456150
L_184199:
	cmpb $0x2,%r11b
	je L_456147
	movq %r13,(localObjptr+0x8)(%rip)
L_184201:
	cmpq $0x1,%r14
	je L_456123
L_184202:
	movw 0x0(%r14),%r15w
	movq 0x8(%r14),%r14
	movq (localObjptr+0x8)(%rip),%r13
	jmp L_184196
.p2align 0x4
L_456123:
L_184203:
	movq (localObjptr+0x8)(%rip),%r15
L_184204:
	cmpq $0x1,%r15
	je L_456146
L_184205:
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x2A8(%rbp)
	movq $0x1,0x2B0(%rbp)
.p2align 0x4,,0x7
L_184206:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_456145
.p2align 0x4,,0x7
L_184207:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x2A8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x2B0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_456124
L_184208:
	movq %r15,0x2B0(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	movq %r15,0x2A8(%rbp)
	jmp L_184206
.p2align 0x4
L_456124:
L_184209:
	movq 0x2B0(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq $0x1,0x2B0(%rbp)
.p2align 0x4,,0x7
L_184210:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_456144
.p2align 0x4,,0x7
L_184211:
	movq 0x2A8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq $0x225,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x20,%r12
	movq $0x0,0x0(%r13)
	movq %r15,0x10(%r13)
	movq $0x295B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r13,0x0(%r15)
	movq 0x2B0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_456125
L_184212:
	movq %r15,0x2B0(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	movq %r15,0x2A8(%rbp)
	jmp L_184210
.p2align 0x4
L_456125:
L_184213:
	movq %r13,0x2A8(%rbp)
	movq 0x2B0(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq $0x1,0x2B0(%rbp)
.p2align 0x4,,0x7
L_184214:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_456143
.p2align 0x4,,0x7
L_184215:
	movq $0x295B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x2A8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x2B0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_456126
L_184216:
	movq %r15,0x2B0(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	movq %r15,0x2A8(%rbp)
	jmp L_184214
.p2align 0x4
L_456126:
L_184217:
	movq 0x2B0(%rbp),%r15
	cmpq $0x1,%r15
	je L_456136
L_184218:
	movq 0x2A8(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x30(%rbp)
L_184219:
	andq $0x3,%r15
	jz L_456127
L_184220:
	movq (c_stackP+0x0)(%rip),%rsp
	movq (globalObjptr+0xC9C8)(%rip),%rdi
	xorq %rax,%rax
	call MLton_bug
.p2align 0x4
L_456127:
L_184221:
	movq 0x2B0(%rbp),%r11
	movq 0x8(%r11),%r13
	movq 0x0(%r11),%r14
	movq 0x30(%rbp),%r15
.p2align 0x4,,0x7
L_184222:
	incq %r15
	addq 0x8(%r14),%r15
	movq %r15,0x2B8(%rbp)
	cmpq $0x1,%r13
	je L_456128
L_184223:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	jmp L_184222
.p2align 0x4
L_456128:
L_184224:
	testq %r15,%r15
	jz L_456135
L_184225:
	cmpq $0x7FFFFFFF,%r15
	ja L_456134
L_184226:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x51,%rcx
	movq %r15,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2C8,%rbp
	leaq (L_184227+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_184227
.p2align 0x4
.long 0x2582
L_184227:
	addq $0xFFFFFFFFFFFFFD38,%rbp
	movq %rax,0x2C0(%rbp)
L_184228:
	movq 0x2A8(%rbp),%r8
	movq 0x0(%r8),%r14
	movq 0x10(%r8),%r13
	xorq %r11,%r11
	movl $0x1,%ecx
	xorq %r15,%r15
	movq 0x30(%rbp),%r10
	movq 0x2B0(%rbp),%r9
.p2align 0x4,,0x7
loop_1913:
	cmpq 0x2B8(%rbp),%r15
	jnl L_456132
.p2align 0x4,,0x7
loop_1917:
	cmpq %r10,%r11
	jl L_456131
L_184351:
	cmpl $0x1,%ecx
	je L_456130
L_184352:
	cmpq $0x1,%r9
	je L_456129
L_184353:
	movq 0x0(%r9),%r8
	movq 0x8(%r9),%r9
	movq 0x10(%r8),%r13
	movq 0x8(%r8),%r10
	movq 0x0(%r8),%r14
	xorq %r11,%r11
	movl $0x1,%ecx
	jmp loop_1917
.p2align 0x4
L_456129:
L_184315:
	movq (globalObjptr+0x6F0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_456130:
L_184355:
	movq $0x1,%r10
	movq (globalObjptr+0xD500)(%rip),%r13
	xorq %r14,%r14
	xorq %r11,%r11
	xorl %ecx,%ecx
	jmp loop_1917
.p2align 0x4
L_456131:
L_184356:
	movq %r11,%r8
	addq %r14,%r8
	movq 0x2C0(%rbp),%rsp
	movb 0x0(%r13,%r8,1),%sil
	movb %sil,0x0(%rsp,%r15,1)
	incq %r11
	incq %r15
	jmp loop_1913
.p2align 0x4
L_456132:
L_184229:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_184230
L_184348:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2D0,%rbp
	leaq (L_184349+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_184349
.p2align 0x4
.long 0x258E
L_184349:
	addq $0xFFFFFFFFFFFFFD30,%rbp
L_184230:
	movq 0x2C0(%rbp),%r15
	movq $0x7,0xFFFFFFFFFFFFFFF8(%r15)
L_184231:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x13D0)(%rip),%r15
	movq %r15,0x8(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0xD508)(%rip),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x2B0(%rbp)
	addq $0x2B0,%rbp
	leaq (L_184232+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_456134:
L_184319:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_456135:
L_184358:
	movq (globalObjptr+0x6E8)(%rip),%r14
	movq %r14,0x2C0(%rbp)
	jmp L_184228
.p2align 0x4
L_456136:
L_184359:
	movq 0x2A8(%rbp),%r13
	movq 0x0(%r13),%r14
	movq %r14,0x30(%rbp)
	movq 0x10(%r13),%r15
	movq %r15,0x2B0(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x2B8(%rbp)
	testq %r14,%r14
	jnz L_184361
L_184373:
	cmpq %r11,0xFFFFFFFFFFFFFFF0(%r15)
	jne L_456137
L_184375:
	jmp L_184231
.p2align 0x4
L_456137:
L_184361:
	movq 0x2B8(%rbp),%rdx
	testq %rdx,%rdx
	jz L_456141
L_184362:
	cmpq $0x7FFFFFFF,%rdx
	ja L_184319
L_184363:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x51,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2C8,%rbp
	leaq (L_184364+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_184364
.p2align 0x4
.long 0x258F
L_184364:
	addq $0xFFFFFFFFFFFFFD38,%rbp
	movq %rax,0x2A8(%rbp)
L_184365:
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_1918:
	cmpq 0x2B8(%rbp),%r15
	jnl L_456138
L_184370:
	movq 0x30(%rbp),%r14
	addq %r15,%r14
	movq 0x2A8(%rbp),%r13
	movq 0x2B0(%rbp),%r10
	movb 0x0(%r10,%r14,1),%r11b
	movb %r11b,0x0(%r13,%r15,1)
	incq %r15
	jmp loop_1918
.p2align 0x4
L_456138:
L_184366:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_184367
L_184368:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2B8,%rbp
	leaq (L_184369+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_184369
.p2align 0x4
.long 0x2590
L_184369:
	addq $0xFFFFFFFFFFFFFD48,%rbp
L_184367:
	movq 0x2A8(%rbp),%r15
	movq $0x7,0xFFFFFFFFFFFFFFF8(%r15)
	jmp L_184231
.p2align 0x4
L_456141:
L_184372:
	movq (globalObjptr+0x5A8)(%rip),%r15
	movq %r15,0x2A8(%rbp)
	jmp L_184365
.p2align 0x4
L_456143:
L_184376:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2C0,%rbp
	leaq (L_184377+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_184377
.p2align 0x4
.long 0x2591
L_184377:
	addq $0xFFFFFFFFFFFFFD40,%rbp
	jmp L_184215
.p2align 0x4
L_456144:
L_184378:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2C0,%rbp
	leaq (L_184379+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_184379
.p2align 0x4
.long 0x2591
L_184379:
	addq $0xFFFFFFFFFFFFFD40,%rbp
	jmp L_184211
.p2align 0x4
L_456145:
L_184380:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2C0,%rbp
	leaq (L_184381+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_184381
.p2align 0x4
.long 0x2591
L_184381:
	addq $0xFFFFFFFFFFFFFD40,%rbp
	jmp L_184207
.p2align 0x4
L_456146:
L_184382:
	movq $0x3,0x2B0(%rbp)
	movl $0x0,0x2B8(%rbp)
	addq $0x2B0,%rbp
	leaq (L_184383+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_0
.p2align 0x4
L_456147:
	movq %r13,(localObjptr+0x8)(%rip)
L_184389:
	movq %r14,0x2B0(%rbp)
	movq (localObjptr+0x8)(%rip),%r15
	movq %r15,0x2B8(%rbp)
	movq (globalObjptr+0xD540)(%rip),%r15
	movq %r15,0x2A8(%rbp)
L_184390:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_456149
.p2align 0x4,,0x7
L_184391:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq 0x2A8(%rbp),%r11
	movq %r11,0x0(%r13)
	movq 0x2B8(%rbp),%r11
	movq %r11,0x8(%r13)
	movq 0x2B0(%rbp),%r11
	cmpq $0x1,%r11
	je L_456148
L_184392:
	movq 0x8(%r11),%r14
	movw 0x0(%r11),%r15w
	jmp L_184196
.p2align 0x4
L_456148:
L_184393:
	movq 0x2B8(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq $0x1,0x2B0(%rbp)
	jmp L_184206
.p2align 0x4
L_456149:
L_184394:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2C8,%rbp
	leaq (L_184395+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_184395
.p2align 0x4
.long 0x2592
L_184395:
	addq $0xFFFFFFFFFFFFFD38,%rbp
	jmp L_184391
.p2align 0x4
L_456150:
L_184413:
	cmpb $0x1,%r11b
	je L_456152
	cmpb $0x2,%r11b
	je L_456151
	movq %r13,(localObjptr+0x8)(%rip)
L_184404:
	movq %r14,0x2B0(%rbp)
	movq (localObjptr+0x8)(%rip),%r15
	movq %r15,0x2B8(%rbp)
	movq (globalObjptr+0xD520)(%rip),%r15
	movq %r15,0x2A8(%rbp)
	jmp L_184390
.p2align 0x4
L_456151:
	movq %r13,(localObjptr+0x8)(%rip)
	jmp L_184389
.p2align 0x4
L_456152:
L_184415:
	cmpq $0x1,%r14
	je L_456153
L_184416:
	movw 0x0(%r14),%r15w
	movq 0x8(%r14),%r14
	jmp L_184196
.p2align 0x4
L_456153:
L_184417:
	movq %r13,%r15
	jmp L_184204
.p2align 0x4
L_456154:
L_184396:
	cmpb $0x1,%r11b
	je L_456157
	cmpb $0x2,%r11b
	je L_456156
L_184397:
	cmpq $0x1,%r14
	je L_456155
L_184398:
	movw 0x0(%r14),%r11w
	movq 0x8(%r14),%r14
	movw %r11w,%r15w
	jmp L_184196
.p2align 0x4
L_456155:
L_184399:
	xchgq %r13,%r15
	jmp L_184204
.p2align 0x4
L_456156:
	movq %r13,(localObjptr+0x8)(%rip)
	jmp L_184389
.p2align 0x4
L_456157:
L_184400:
	cmpb $0x8,0x0(%r10)
	jne L_456162
L_184407:
	movb 0x0(%r9),%r10b
	cmpb $0x2,%r10b
	je L_456161
L_184408:
	cmpb $0x3,%r10b
	jne L_456160
	movb %r11b,%dl
	movq %r13,(localObjptr+0x8)(%rip)
L_184402:
	cmpb $0x1,%dl
	je L_456159
	cmpb $0x2,%dl
	je L_184389
	jmp L_184404
.p2align 0x4
L_456159:
L_184405:
	movq %r14,0x2B0(%rbp)
	movq (localObjptr+0x8)(%rip),%r15
	movq %r15,0x2B8(%rbp)
	movq (globalObjptr+0xD538)(%rip),%r15
	movq %r15,0x2A8(%rbp)
	jmp L_184390
.p2align 0x4
L_456160:
	movq %r13,(localObjptr+0x8)(%rip)
	jmp L_184201
.p2align 0x4
L_456161:
	movb %r11b,%dl
	movq %r13,(localObjptr+0x8)(%rip)
	jmp L_184402
.p2align 0x4
L_456162:
	movb %r11b,%dl
	movq %r13,(localObjptr+0x8)(%rip)
	jmp L_184402
.p2align 0x4
L_456163:
	movq %r14,%r15
	movq %r13,%r14
	jmp L_184193
.p2align 0x4
L_456164:
L_184419:
	movq (localObjptr+0x8)(%rip),%r15
	jmp L_184204
.p2align 0x4
L_456165:
L_184428:
	cmpq $0x1,%r15
	je L_456166
L_184429:
	movw 0x0(%r15),%r11w
	movq 0x8(%r15),%r15
	movq %r15,%rax
	movw %r11w,%r15w
	movq %r14,%r13
	movq %rax,%r14
	jmp L_184196
.p2align 0x4
L_456166:
L_184430:
	movq %r14,%r15
	jmp L_184204
.p2align 0x4
L_456167:
L_184420:
	cmpb $0x8,0x0(%r9)
	jne L_184422
L_184423:
	movb 0x0(%r8),%r13b
	cmpb $0x2,%r13b
	je L_184422
L_184424:
	cmpb $0x3,%r13b
	jne L_456168
L_184422:
	movq %r15,0x2B0(%rbp)
	movq %r14,0x2B8(%rbp)
	movq (globalObjptr+0xD678)(%rip),%r15
	movq %r15,0x2A8(%rbp)
	jmp L_184390
.p2align 0x4
L_456168:
	movq %r14,(localObjptr+0x8)(%rip)
	jmp L_184194
.p2align 0x4
L_456172:
L_184433:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2C8,%rbp
	leaq (L_184434+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_184434
.p2align 0x4
.long 0x2593
L_184434:
	addq $0xFFFFFFFFFFFFFD38,%rbp
	jmp L_184190
.p2align 0x4
L_456173:
L_184435:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2C8,%rbp
	leaq (L_184436+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_184436
.p2align 0x4
.long 0x2593
L_184436:
	addq $0xFFFFFFFFFFFFFD38,%rbp
	jmp L_184186
.p2align 0x4
L_456174:
	movq %rdx,(localObjptr+0x38)(%rip)
	movq %rdi,(localObjptr+0x30)(%rip)
	movq %rsi,(localObjptr+0x28)(%rip)
	movq %rsp,(localObjptr+0x20)(%rip)
	movq %r8,(localObjptr+0x18)(%rip)
	movq %r9,(localObjptr+0x10)(%rip)
	movq %r10,(localObjptr+0x8)(%rip)
L_184438:
	movq (globalObjptr+0xFBE8)(%rip),%r15
	jmp L_184184
.p2align 0x4
L_456175:
	movq %rdx,(localObjptr+0x38)(%rip)
	movq %rdi,(localObjptr+0x30)(%rip)
	movq %rsi,(localObjptr+0x28)(%rip)
	movq %rsp,(localObjptr+0x20)(%rip)
	movq %r8,(localObjptr+0x18)(%rip)
	movq %r9,(localObjptr+0x10)(%rip)
	movq %r10,(localObjptr+0x8)(%rip)
	jmp L_184438
.p2align 0x4
L_456176:
	movq %rdx,(localObjptr+0x38)(%rip)
	movq %rdi,(localObjptr+0x30)(%rip)
	movq %rsi,(localObjptr+0x28)(%rip)
	movq %rsp,(localObjptr+0x20)(%rip)
	movq %r8,(localObjptr+0x18)(%rip)
	movq %r9,(localObjptr+0x10)(%rip)
	movq %r10,(localObjptr+0x8)(%rip)
	jmp L_184438
.p2align 0x4
L_456177:
	movq %rdx,(localObjptr+0x38)(%rip)
	movq %rdi,(localObjptr+0x30)(%rip)
	movq %rsi,(localObjptr+0x28)(%rip)
	movq %rsp,(localObjptr+0x20)(%rip)
	movq %r8,(localObjptr+0x18)(%rip)
	movq %r9,(localObjptr+0x10)(%rip)
	movq %r10,(localObjptr+0x8)(%rip)
	jmp L_184438
.p2align 0x4
L_456178:
	movq %rdx,(localObjptr+0x38)(%rip)
	movq %rdi,(localObjptr+0x30)(%rip)
	movq %rsi,(localObjptr+0x28)(%rip)
	movq %rsp,(localObjptr+0x20)(%rip)
	movq %r8,(localObjptr+0x18)(%rip)
	movq %r9,(localObjptr+0x10)(%rip)
	movq %r10,(localObjptr+0x8)(%rip)
	jmp L_184438
.p2align 0x4
L_456179:
	movq %rdx,(localObjptr+0x38)(%rip)
	movq %rdi,(localObjptr+0x30)(%rip)
	movq %rsi,(localObjptr+0x28)(%rip)
	movq %rsp,(localObjptr+0x20)(%rip)
	movq %r8,(localObjptr+0x18)(%rip)
	movq %r9,(localObjptr+0x10)(%rip)
	movq %r10,(localObjptr+0x8)(%rip)
	jmp L_184438
.p2align 0x4
L_456180:
	movq %rdx,(localObjptr+0x38)(%rip)
	movq %rdi,(localObjptr+0x30)(%rip)
	movq %rsi,(localObjptr+0x28)(%rip)
	movq %rsp,(localObjptr+0x20)(%rip)
	movq %r8,(localObjptr+0x18)(%rip)
	movq %r9,(localObjptr+0x10)(%rip)
	movq %r10,(localObjptr+0x8)(%rip)
	jmp L_184183
.p2align 0x4
L_456181:
	movq %rdx,(localObjptr+0x38)(%rip)
	movq %rdi,(localObjptr+0x30)(%rip)
	movq %rsi,(localObjptr+0x28)(%rip)
	movq %rsp,(localObjptr+0x20)(%rip)
	movq %r8,(localObjptr+0x18)(%rip)
	movq %r9,(localObjptr+0x10)(%rip)
	movq %r10,(localObjptr+0x8)(%rip)
	jmp L_184438
.p2align 0x4
L_456182:
	movq %rdx,(localObjptr+0x38)(%rip)
	movq %rdi,(localObjptr+0x30)(%rip)
	movq %rsi,(localObjptr+0x28)(%rip)
	movq %rsp,(localObjptr+0x20)(%rip)
	movq %r8,(localObjptr+0x18)(%rip)
	movq %r9,(localObjptr+0x10)(%rip)
	movq %r10,(localObjptr+0x8)(%rip)
	jmp L_184438
.p2align 0x4
L_456183:
L_184446:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	movq $0x4A8,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_184447+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_184447
.p2align 0x4
.long 0x451
L_184447:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	jmp L_184182
.p2align 0x4
.long 0x2583
L_184232:
	addq $0xFFFFFFFFFFFFFD50,%rbp
	movq 0x2B0(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq (gcState+0x458)(%rip),%r15
	subq %r12,%r15
	cmpq $0x6A0,%r15
	jnb L_184233
L_184346:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	movq $0x6A0,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2B0,%rbp
	leaq (L_184347+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_184347
.p2align 0x4
.long 0x258D
L_184347:
	addq $0xFFFFFFFFFFFFFD50,%rbp
L_184233:
	movq $0x48F3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1B9D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x10,%r12
	movq $0x120D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x30,%r12
	movb $0x1,%r13b
	movzbl %r13b,%r11d
	movl %r11d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq (globalObjptr+0xF6C8)(%rip),%r13
	movq %r13,0x10(%r15)
	movq 0x30(%rbp),%r13
	movq %r13,0x18(%r15)
	movq (globalObjptr+0xCA50)(%rip),%r13
	movq %r13,0x20(%r15)
	movq $0x2391,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x18,%r12
	movq 0x2A0(%rbp),%r11
	movq %r11,0x8(%r13)
	movq $0x48DF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r11
	movq %r11,0x0(%r15)
	movq %r14,0x8(%r15)
	movq $0x1B9D,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	addq $0x10,%r12
	movq $0x120D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x8(%r15)
	addq $0x30,%r12
	movb $0x1,%r11b
	movzbl %r11b,%r10d
	movl %r10d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq (globalObjptr+0xF6D0)(%rip),%r11
	movq %r11,0x10(%r15)
	movq (globalObjptr+0xF6D8)(%rip),%r11
	movq %r11,0x18(%r15)
	movq (globalObjptr+0xF6E0)(%rip),%r11
	movq %r11,0x20(%r15)
	movq $0x2391,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq $0x4945,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1BA1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x10,%r12
	movq $0x120D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x30,%r12
	movb $0x0,%r13b
	movzbl %r13b,%r10d
	movl %r10d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq (globalObjptr+0xF6E8)(%rip),%r13
	movq %r13,0x10(%r15)
	movq (globalObjptr+0xF640)(%rip),%r13
	movq %r13,0x18(%r15)
	movq (globalObjptr+0xF6F0)(%rip),%r10
	movq %r10,0x20(%r15)
	movq $0x2391,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq $0x4949,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r11
	movq %r11,0x0(%r15)
	movq 0x58(%rbp),%r9
	movq %r9,0x8(%r15)
	movq $0x1BA1,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r15,0x0(%r9)
	addq $0x10,%r12
	movq $0x120D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r9,0x8(%r15)
	addq $0x30,%r12
	movb $0x0,%r9b
	movzbl %r9b,%r8d
	movl %r8d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq (globalObjptr+0xF6F8)(%rip),%r9
	movq %r9,0x10(%r15)
	movq %r13,0x18(%r15)
	movq (globalObjptr+0xCA60)(%rip),%r8
	movq %r8,0x20(%r15)
	movq $0x2391,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r15,0x0(%r8)
	movq %r10,0x8(%r8)
	addq $0x18,%r12
	movq $0x4945,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r11,0x0(%r15)
	movq $0x1BA1,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	addq $0x10,%r12
	movq $0x120D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x8(%r15)
	addq $0x30,%r12
	movb $0x0,%r11b
	movzbl %r11b,%r10d
	movl %r10d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq %r9,0x10(%r15)
	movq %r13,0x18(%r15)
	movq (globalObjptr+0xF700)(%rip),%r11
	movq %r11,0x20(%r15)
	movq $0x2391,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r8,0x8(%r11)
	addq $0x18,%r12
	movq $0x48F5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x60(%rbp),%r10
	movq %r10,0x0(%r15)
	movq %r14,0x8(%r15)
	movq $0x1B9D,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	addq $0x10,%r12
	movq $0x120D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r10,0x8(%r15)
	addq $0x30,%r12
	movb $0x0,%r10b
	movzbl %r10b,%r9d
	movl %r9d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq (globalObjptr+0xF708)(%rip),%r10
	movq %r10,0x10(%r15)
	movq (globalObjptr+0xF710)(%rip),%r10
	movq %r10,0x18(%r15)
	movq (globalObjptr+0xF718)(%rip),%r10
	movq %r10,0x20(%r15)
	movq $0x2391,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq $0x48DD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x298(%rbp),%r11
	movq %r11,0x0(%r15)
	movq 0x68(%rbp),%r9
	movq %r9,0x8(%r15)
	movq $0x1B9D,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r15,0x0(%r9)
	addq $0x10,%r12
	movq $0x120D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r9,0x8(%r15)
	addq $0x30,%r12
	movb $0x1,%r9b
	movzbl %r9b,%r8d
	movl %r8d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq (globalObjptr+0xF720)(%rip),%r9
	movq %r9,0x10(%r15)
	movq (globalObjptr+0xF728)(%rip),%r9
	movq %r9,0x18(%r15)
	movq (globalObjptr+0xD628)(%rip),%r8
	movq %r8,0x20(%r15)
	movq $0x2391,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r15,0x0(%r8)
	movq %r10,0x8(%r8)
	addq $0x18,%r12
	movq $0x48F7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x38,%r12
	movq %r14,0x0(%r15)
	movq 0x70(%rbp),%r10
	movq %r10,0x8(%r15)
	movq 0x78(%rbp),%r10
	movq %r10,0x10(%r15)
	movq 0x80(%rbp),%r10
	movq %r10,0x18(%r15)
	movq 0x88(%rbp),%r10
	movq %r10,0x20(%r15)
	movq 0x90(%rbp),%r10
	movq %r10,0x28(%r15)
	movq $0x1B9D,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	addq $0x10,%r12
	movq $0x120D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r10,0x8(%r15)
	addq $0x30,%r12
	movb $0x1,%r10b
	movzbl %r10b,%esp
	movl %esp,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq (globalObjptr+0xF730)(%rip),%r10
	movq %r10,0x10(%r15)
	movq (globalObjptr+0xF738)(%rip),%r10
	movq %r10,0x18(%r15)
	movq (globalObjptr+0xF740)(%rip),%r10
	movq %r10,0x20(%r15)
	movq $0x2391,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	movq %r8,0x8(%r10)
	addq $0x18,%r12
	movq $0x48DB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r14,0x0(%r15)
	movq 0x98(%rbp),%r8
	movq %r8,0x8(%r15)
	movq $0x1B9D,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r15,0x0(%r8)
	addq $0x10,%r12
	movq $0x120D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r8,0x8(%r15)
	addq $0x30,%r12
	movb $0x0,%r8b
	movzbl %r8b,%esp
	movl %esp,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq (globalObjptr+0xF748)(%rip),%r8
	movq %r8,0x10(%r15)
	movq (globalObjptr+0xF750)(%rip),%r8
	movq %r8,0x18(%r15)
	movq (globalObjptr+0xF758)(%rip),%rsp
	movq %rsp,0x20(%r15)
	movq $0x2391,0x0(%r12)
	movq %r12,%rsp
	addq $0x8,%rsp
	movq %r15,0x0(%rsp)
	movq %r10,0x8(%rsp)
	addq $0x18,%r12
	movq $0x48F9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r11,0x0(%r15)
	movq 0xA0(%rbp),%r10
	movq %r10,0x8(%r15)
	movq $0x1B9D,0x0(%r12)
	movq %r12,%rsi
	addq $0x8,%rsi
	movq %r15,0x0(%rsi)
	addq $0x10,%r12
	movq $0x120D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %rsi,0x8(%r15)
	addq $0x30,%r12
	movb $0x1,%sil
	movzbl %sil,%edi
	movl %edi,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq (globalObjptr+0xF760)(%rip),%rsi
	movq %rsi,0x10(%r15)
	movq %r9,0x18(%r15)
	movq (globalObjptr+0xD708)(%rip),%rsi
	movq %rsi,0x20(%r15)
	movq $0x2391,0x0(%r12)
	movq %r12,%rsi
	addq $0x8,%rsi
	movq %r15,0x0(%rsi)
	movq %rsp,0x8(%rsi)
	addq $0x18,%r12
	movq $0x48D9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r14,0x0(%r15)
	movq 0xA8(%rbp),%rsp
	movq %rsp,0x8(%r15)
	movq $0x1B9D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x120D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x30,%r12
	movb $0x0,%spl
	movzbl %spl,%edi
	movl %edi,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq (globalObjptr+0xF768)(%rip),%rsp
	movq %rsp,0x10(%r15)
	movq %r8,0x18(%r15)
	movq (globalObjptr+0xF770)(%rip),%r8
	movq %r8,0x20(%r15)
	movq $0x2391,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %rsi,0x8(%r14)
	addq $0x18,%r12
	movq $0x48FB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r11,0x0(%r15)
	movq %r10,0x8(%r15)
	movq $0x1B9D,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	addq $0x10,%r12
	movq $0x120D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x8(%r15)
	addq $0x30,%r12
	movb $0x0,%r11b
	movzbl %r11b,%r10d
	movl %r10d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq (globalObjptr+0xF778)(%rip),%r11
	movq %r11,0x10(%r15)
	movq %r9,0x18(%r15)
	movq (globalObjptr+0xD710)(%rip),%r11
	movq %r11,0x20(%r15)
	movq $0x2391,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r14,0x8(%r11)
	addq $0x18,%r12
	movq $0x2391,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0x76F0)(%rip),%r11
	movq %r11,0x0(%r15)
	movq $0x4945,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0xB0(%rbp),%r11
	movq %r11,0x0(%r14)
	movq $0x1BA1,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	addq $0x10,%r12
	movq $0x120D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r11,0x8(%r14)
	addq $0x30,%r12
	movb $0x0,%r11b
	movzbl %r11b,%r10d
	movl %r10d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0xF780)(%rip),%r11
	movq %r11,0x10(%r14)
	movq (globalObjptr+0xF6A8)(%rip),%r11
	movq %r11,0x18(%r14)
	movq (globalObjptr+0xF788)(%rip),%r11
	movq %r11,0x20(%r14)
	movq $0x2391,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r15,0x8(%r11)
	addq $0x18,%r12
	movq $0x4945,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xB8(%rbp),%r10
	movq %r10,0x0(%r15)
	movq $0x1BA1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x120D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x30,%r12
	movb $0x0,%r10b
	movzbl %r10b,%r9d
	movl %r9d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq (globalObjptr+0xF790)(%rip),%r10
	movq %r10,0x10(%r15)
	movq %r13,0x18(%r15)
	movq (globalObjptr+0xF798)(%rip),%r13
	movq %r13,0x20(%r15)
	movq $0x2391,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r11,0x8(%r14)
	addq $0x18,%r12
	movq $0x48D7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xC0(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B9D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x10,%r12
	movq $0x120D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x30,%r12
	movb $0x1,%r13b
	movzbl %r13b,%r11d
	movl %r11d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq (globalObjptr+0xF7A0)(%rip),%r13
	movq %r13,0x10(%r15)
	movq (globalObjptr+0xF7A8)(%rip),%r13
	movq %r13,0x18(%r15)
	movq (globalObjptr+0xF7B0)(%rip),%r13
	movq %r13,0x20(%r15)
	movq $0x2391,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x2A8(%rbp)
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq (globalObjptr+0x7708)(%rip),%r15
	movq $0x1,%r14
.p2align 0x4,,0x7
L_184234:
	movq %r15,0x38(%rbp)
	movq %r14,0x40(%rbp)
	movq (globalObjptr+0xD718)(%rip),%r15
	movq %r15,0x30(%rbp)
L_184235:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_456211
.p2align 0x4,,0x7
L_184236:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x38(%rbp),%r14
	cmpq $0x1,%r14
	je L_456188
L_184237:
	movq 0x8(%r14),%r13
	movb 0x0(%r14),%r11b
	cmpb $0x1,%r11b
	je L_456187
	cmpb $0x2,%r11b
	je L_456186
	cmpb $0x3,%r11b
	je L_456185
L_184238:
	movq %r13,0x38(%rbp)
	movq %r15,0x40(%rbp)
	movq (globalObjptr+0xD720)(%rip),%r15
	movq %r15,0x30(%rbp)
	jmp L_184235
.p2align 0x4
L_456185:
L_184241:
	movq %r13,0x38(%rbp)
	movq %r15,0x40(%rbp)
	movq (globalObjptr+0xD730)(%rip),%r15
	movq %r15,0x30(%rbp)
	jmp L_184235
.p2align 0x4
L_456186:
L_184240:
	xchgq %r15,%r14
	xchgq %r13,%r15
	jmp L_184234
.p2align 0x4
L_456187:
L_184239:
	movq %r13,0x38(%rbp)
	movq %r15,0x40(%rbp)
	movq (globalObjptr+0xD728)(%rip),%r15
	movq %r15,0x30(%rbp)
	jmp L_184235
.p2align 0x4
L_456188:
L_184242:
	movq 0x30(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq $0x1,0x40(%rbp)
.p2align 0x4,,0x7
L_184243:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_456210
.p2align 0x4,,0x7
L_184244:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_456189
L_184245:
	movq %r15,0x40(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	movq %r15,0x38(%rbp)
	jmp L_184243
.p2align 0x4
L_456189:
L_184246:
	movq 0x40(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq $0x1,0x40(%rbp)
.p2align 0x4,,0x7
L_184247:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_456209
.p2align 0x4,,0x7
L_184248:
	movq 0x38(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq $0x225,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x20,%r12
	movq $0x0,0x0(%r13)
	movq %r15,0x10(%r13)
	movq $0x295B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r13,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_456190
L_184249:
	movq %r15,0x40(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	movq %r15,0x38(%rbp)
	jmp L_184247
.p2align 0x4
L_456190:
L_184250:
	movq %r13,0x38(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq $0x1,0x40(%rbp)
.p2align 0x4,,0x7
L_184251:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_456208
.p2align 0x4,,0x7
L_184252:
	movq $0x295B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_456191
L_184253:
	movq %r15,0x40(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	movq %r15,0x38(%rbp)
	jmp L_184251
.p2align 0x4
L_456191:
L_184254:
	movq 0x40(%rbp),%r15
	cmpq $0x1,%r15
	je L_456201
L_184255:
	movq 0x38(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x30(%rbp)
L_184256:
	andq $0x3,%r15
	jz L_456192
L_184257:
	movq (c_stackP+0x0)(%rip),%rsp
	movq (globalObjptr+0xC9C8)(%rip),%rdi
	xorq %rax,%rax
	call MLton_bug
.p2align 0x4
L_456192:
L_184258:
	movq 0x40(%rbp),%r11
	movq 0x8(%r11),%r13
	movq 0x0(%r11),%r14
	movq 0x30(%rbp),%r15
.p2align 0x4,,0x7
L_184259:
	incq %r15
	addq 0x8(%r14),%r15
	movq %r15,0x48(%rbp)
	cmpq $0x1,%r13
	je L_456193
L_184260:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	jmp L_184259
.p2align 0x4
L_456193:
L_184261:
	testq %r15,%r15
	jz L_456200
L_184262:
	cmpq $0x7FFFFFFF,%r15
	ja L_184319
L_184263:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x51,%rcx
	movq %r15,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2B8,%rbp
	leaq (L_184264+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_184264
.p2align 0x4
.long 0x2584
L_184264:
	addq $0xFFFFFFFFFFFFFD48,%rbp
	movq %rax,0x50(%rbp)
L_184265:
	movq 0x38(%rbp),%r8
	movq 0x0(%r8),%r14
	movq 0x10(%r8),%r13
	xorq %r11,%r11
	movl $0x1,%ecx
	xorq %r15,%r15
	movq 0x30(%rbp),%r10
	movq 0x40(%rbp),%r9
.p2align 0x4,,0x7
loop_1914:
	cmpq 0x48(%rbp),%r15
	jnl L_456197
.p2align 0x4,,0x7
loop_1915:
	cmpq %r10,%r11
	jl L_456196
L_184311:
	cmpl $0x1,%ecx
	je L_456195
L_184312:
	cmpq $0x1,%r9
	je L_184315
L_184313:
	movq 0x0(%r9),%r8
	movq 0x8(%r9),%r9
	movq 0x10(%r8),%r13
	movq 0x8(%r8),%r10
	movq 0x0(%r8),%r14
	xorq %r11,%r11
	movl $0x1,%ecx
	jmp loop_1915
.p2align 0x4
L_456195:
L_184316:
	movq $0x1,%r10
	movq (globalObjptr+0xD500)(%rip),%r13
	xorq %r14,%r14
	xorq %r11,%r11
	xorl %ecx,%ecx
	jmp loop_1915
.p2align 0x4
L_456196:
L_184317:
	movq %r11,%r8
	addq %r14,%r8
	movq 0x50(%rbp),%rsp
	movb 0x0(%r13,%r8,1),%sil
	movb %sil,0x0(%rsp,%r15,1)
	incq %r11
	incq %r15
	jmp loop_1914
.p2align 0x4
L_456197:
L_184266:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_184267
L_184308:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2B8,%rbp
	leaq (L_184309+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_184309
.p2align 0x4
.long 0x2589
L_184309:
	addq $0xFFFFFFFFFFFFFD48,%rbp
L_184267:
	movq 0x50(%rbp),%r15
	movq $0x7,0xFFFFFFFFFFFFFFF8(%r15)
L_184268:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x13D0)(%rip),%r15
	movq %r15,0x8(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0xD508)(%rip),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x2B8(%rbp)
	addq $0x2B8,%rbp
	leaq (L_184269+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_456200:
L_184320:
	movq (globalObjptr+0x6E8)(%rip),%r14
	movq %r14,0x50(%rbp)
	jmp L_184265
.p2align 0x4
L_456201:
L_184321:
	movq 0x38(%rbp),%r13
	movq 0x0(%r13),%r14
	movq %r14,0x30(%rbp)
	movq 0x10(%r13),%r15
	movq %r15,0x40(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x48(%rbp)
	testq %r14,%r14
	jnz L_184323
L_184335:
	cmpq %r11,0xFFFFFFFFFFFFFFF0(%r15)
	jne L_456202
L_184337:
	jmp L_184268
.p2align 0x4
L_456202:
L_184323:
	movq 0x48(%rbp),%rdx
	testq %rdx,%rdx
	jz L_456206
L_184324:
	cmpq $0x7FFFFFFF,%rdx
	ja L_184319
L_184325:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x51,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2B8,%rbp
	leaq (L_184326+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_184326
.p2align 0x4
.long 0x258A
L_184326:
	addq $0xFFFFFFFFFFFFFD48,%rbp
	movq %rax,0x38(%rbp)
L_184327:
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_1916:
	cmpq 0x48(%rbp),%r15
	jnl L_456203
L_184332:
	movq 0x30(%rbp),%r14
	addq %r15,%r14
	movq 0x38(%rbp),%r13
	movq 0x40(%rbp),%r10
	movb 0x0(%r10,%r14,1),%r11b
	movb %r11b,0x0(%r13,%r15,1)
	incq %r15
	jmp loop_1916
.p2align 0x4
L_456203:
L_184328:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_184329
L_184330:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2B8,%rbp
	leaq (L_184331+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_184331
.p2align 0x4
.long 0x258B
L_184331:
	addq $0xFFFFFFFFFFFFFD48,%rbp
L_184329:
	movq 0x38(%rbp),%r15
	movq $0x7,0xFFFFFFFFFFFFFFF8(%r15)
	jmp L_184268
.p2align 0x4
L_456206:
L_184334:
	movq (globalObjptr+0x5A8)(%rip),%r15
	movq %r15,0x38(%rbp)
	jmp L_184327
.p2align 0x4
L_456208:
L_184338:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2B8,%rbp
	leaq (L_184339+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_184339
.p2align 0x4
.long 0x258C
L_184339:
	addq $0xFFFFFFFFFFFFFD48,%rbp
	jmp L_184252
.p2align 0x4
L_456209:
L_184340:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2B8,%rbp
	leaq (L_184341+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_184341
.p2align 0x4
.long 0x258C
L_184341:
	addq $0xFFFFFFFFFFFFFD48,%rbp
	jmp L_184248
.p2align 0x4
L_456210:
L_184342:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2B8,%rbp
	leaq (L_184343+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_184343
.p2align 0x4
.long 0x258C
L_184343:
	addq $0xFFFFFFFFFFFFFD48,%rbp
	jmp L_184244
.p2align 0x4
L_456211:
L_184344:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2B8,%rbp
	leaq (L_184345+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_184345
.p2align 0x4
.long 0x258C
L_184345:
	addq $0xFFFFFFFFFFFFFD48,%rbp
	jmp L_184236
.p2align 0x4
.long 0x2583
L_184383:
	addq $0xFFFFFFFFFFFFFD50,%rbp
	movq 0x2B0(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_184384
L_184385:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2B0,%rbp
	leaq (L_184386+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_184386
.p2align 0x4
.long 0x258D
L_184386:
	addq $0xFFFFFFFFFFFFFD50,%rbp
L_184384:
	movq 0x30(%rbp),%r15
	jmp L_184231
.p2align 0x4
.long 0x2585
L_184269:
	addq $0xFFFFFFFFFFFFFD48,%rbp
	movq 0x2B8(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq (gcState+0x458)(%rip),%r15
	subq %r12,%r15
	cmpq $0x16A8,%r15
	jnb L_184270
L_184306:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	movq $0x16A8,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2B8,%rbp
	leaq (L_184307+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_184307
.p2align 0x4
.long 0x2588
L_184307:
	addq $0xFFFFFFFFFFFFFD48,%rbp
L_184270:
	movq $0x48FD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xC8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1B9D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x10,%r12
	movq $0x120D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x30,%r12
	movb $0x0,%r13b
	movzbl %r13b,%r11d
	movl %r11d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq (globalObjptr+0xCB20)(%rip),%r13
	movq %r13,0x10(%r15)
	movq 0x30(%rbp),%r13
	movq %r13,0x18(%r15)
	movq (globalObjptr+0xF7B8)(%rip),%r13
	movq %r13,0x20(%r15)
	movq $0x2391,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x18,%r12
	movq 0x2A8(%rbp),%r15
	movq %r15,0x8(%r13)
	movq $0x48D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xD0(%rbp),%r11
	movq %r11,0x0(%r15)
	movq %r14,0x8(%r15)
	movq $0x1B9D,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	addq $0x10,%r12
	movq $0x120D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x8(%r15)
	addq $0x30,%r12
	movb $0x0,%r11b
	movzbl %r11b,%r10d
	movl %r10d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq (globalObjptr+0xF7C0)(%rip),%r11
	movq %r11,0x10(%r15)
	movq (globalObjptr+0xF7C8)(%rip),%r11
	movq %r11,0x18(%r15)
	movq (globalObjptr+0xF7D0)(%rip),%r11
	movq %r11,0x20(%r15)
	movq $0x2391,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq $0x4945,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xD8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1BA1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x10,%r12
	movq $0x120D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x30,%r12
	movb $0x1,%r13b
	movzbl %r13b,%r10d
	movl %r10d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq (globalObjptr+0xF7D8)(%rip),%r13
	movq %r13,0x10(%r15)
	movq (globalObjptr+0xF640)(%rip),%r13
	movq %r13,0x18(%r15)
	movq (globalObjptr+0xF7E0)(%rip),%r10
	movq %r10,0x20(%r15)
	movq $0x2391,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq $0x2391,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r10,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0x7720)(%rip),%r11
	movq %r11,0x0(%r15)
	movq $0x2391,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x8(%r11)
	addq $0x18,%r12
	movq (globalObjptr+0x7730)(%rip),%r15
	movq %r15,0x0(%r11)
	movq $0x4945,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xE0(%rbp),%r10
	movq %r10,0x0(%r15)
	movq $0x1BA1,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	addq $0x10,%r12
	movq $0x120D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r10,0x8(%r15)
	addq $0x30,%r12
	movb $0x0,%r10b
	movzbl %r10b,%r9d
	movl %r9d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq (globalObjptr+0xF7E8)(%rip),%r10
	movq %r10,0x10(%r15)
	movq (globalObjptr+0xF6A8)(%rip),%r10
	movq %r10,0x18(%r15)
	movq (globalObjptr+0xF7F0)(%rip),%r9
	movq %r9,0x20(%r15)
	movq $0x2391,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r15,0x0(%r9)
	movq %r11,0x8(%r9)
	addq $0x18,%r12
	movq $0x4941,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xE8(%rbp),%r11
	movq %r11,0x0(%r15)
	movq $0x1BA1,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r15,0x0(%r8)
	addq $0x10,%r12
	movq $0x120D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r8,0x8(%r15)
	addq $0x30,%r12
	movb $0x0,%r8b
	movzbl %r8b,%esp
	movl %esp,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq (globalObjptr+0xF7F8)(%rip),%r8
	movq %r8,0x10(%r15)
	movq %r10,0x18(%r15)
	movq (globalObjptr+0xF800)(%rip),%rsp
	movq %rsp,0x20(%r15)
	movq $0x2391,0x0(%r12)
	movq %r12,%rsp
	addq $0x8,%rsp
	movq %r15,0x0(%rsp)
	movq %r9,0x8(%rsp)
	addq $0x18,%r12
	movq $0x494B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r11,0x0(%r15)
	movq $0x1BA1,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r15,0x0(%r9)
	addq $0x10,%r12
	movq $0x120D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r9,0x8(%r15)
	addq $0x30,%r12
	movb $0x0,%r9b
	movzbl %r9b,%esi
	movl %esi,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq (globalObjptr+0xF808)(%rip),%r9
	movq %r9,0x10(%r15)
	movq %r10,0x18(%r15)
	movq (globalObjptr+0xF810)(%rip),%rsi
	movq %rsi,0x20(%r15)
	movq $0x2391,0x0(%r12)
	movq %r12,%rsi
	addq $0x8,%rsi
	movq %r15,0x0(%rsi)
	movq %rsp,0x8(%rsi)
	addq $0x18,%r12
	movq $0x48FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%rsp
	movq %rsp,0x8(%r15)
	movq %r11,0x10(%r15)
	movq $0x1B9D,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	addq $0x10,%r12
	movq $0x120D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x8(%r15)
	addq $0x30,%r12
	movb $0x0,%r11b
	movzbl %r11b,%edi
	movl %edi,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq (globalObjptr+0xF818)(%rip),%r11
	movq %r11,0x10(%r15)
	movq (globalObjptr+0xBB50)(%rip),%r11
	movq %r11,0x18(%r15)
	movq (globalObjptr+0xF820)(%rip),%rdi
	movq %rdi,0x20(%r15)
	movq $0x2391,0x0(%r12)
	movq %r12,%rdi
	addq $0x8,%rdi
	movq %r15,0x0(%rdi)
	movq %rsi,0x8(%rdi)
	addq $0x18,%r12
	movq $0x493F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xF0(%rbp),%rsi
	movq %rsi,0x0(%r15)
	movq $0x1BA1,0x0(%r12)
	movq %r12,%rdx
	addq $0x8,%rdx
	movq %r15,0x0(%rdx)
	addq $0x10,%r12
	movq $0x120D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %rdx,0x8(%r15)
	addq $0x30,%r12
	movb $0x0,%dl
	movzbl %dl,%ecx
	movl %ecx,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq %r8,0x10(%r15)
	movq %r10,0x18(%r15)
	movq (globalObjptr+0xF828)(%rip),%r8
	movq %r8,0x20(%r15)
	movq $0x2391,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r15,0x0(%r8)
	movq %rdi,0x8(%r8)
	addq $0x18,%r12
	movq $0x494D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %rsi,0x0(%r15)
	movq $0x1BA1,0x0(%r12)
	movq %r12,%rdi
	addq $0x8,%rdi
	movq %r15,0x0(%rdi)
	addq $0x10,%r12
	movq $0x120D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %rdi,0x8(%r15)
	addq $0x30,%r12
	movb $0x0,%dil
	movzbl %dil,%edx
	movl %edx,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq %r9,0x10(%r15)
	movq %r10,0x18(%r15)
	movq (globalObjptr+0xF830)(%rip),%r9
	movq %r9,0x20(%r15)
	movq $0x2391,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r15,0x0(%r9)
	movq %r8,0x8(%r9)
	addq $0x18,%r12
	movq $0x48D3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq %r14,0x0(%r15)
	movq %rsp,0x8(%r15)
	movq %rsi,0x10(%r15)
	movq $0x1B9D,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r15,0x0(%r8)
	addq $0x10,%r12
	movq $0x120D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r8,0x8(%r15)
	addq $0x30,%r12
	movb $0x0,%r8b
	movzbl %r8b,%esp
	movl %esp,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq (globalObjptr+0xF838)(%rip),%r8
	movq %r8,0x10(%r15)
	movq %r11,0x18(%r15)
	movq (globalObjptr+0xF840)(%rip),%r8
	movq %r8,0x20(%r15)
	movq $0x2391,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r15,0x0(%r8)
	movq %r9,0x8(%r8)
	addq $0x18,%r12
	movq $0x2391,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r8,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0x7740)(%rip),%r9
	movq %r9,0x0(%r15)
	movq $0x2391,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r15,0x8(%r9)
	addq $0x18,%r12
	movq (globalObjptr+0x7750)(%rip),%r15
	movq %r15,0x0(%r9)
	movq $0x4901,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x60,%r12
	movq %r14,0x0(%r15)
	movq 0xF8(%rbp),%r8
	movq %r8,0x8(%r15)
	movq 0x100(%rbp),%r8
	movq %r8,0x10(%r15)
	movq 0x108(%rbp),%r8
	movq %r8,0x18(%r15)
	movq 0x110(%rbp),%r8
	movq %r8,0x20(%r15)
	movq 0x118(%rbp),%r8
	movq %r8,0x28(%r15)
	movq 0x120(%rbp),%r8
	movq %r8,0x30(%r15)
	movq 0x128(%rbp),%r8
	movq %r8,0x38(%r15)
	movq 0x130(%rbp),%r8
	movq %r8,0x40(%r15)
	movq 0x138(%rbp),%r8
	movq %r8,0x48(%r15)
	movq 0x140(%rbp),%r8
	movq %r8,0x50(%r15)
	movq $0x1B9D,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r15,0x0(%r8)
	addq $0x10,%r12
	movq $0x120D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r8,0x8(%r15)
	addq $0x30,%r12
	movb $0x1,%r8b
	movzbl %r8b,%esp
	movl %esp,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq (globalObjptr+0xF848)(%rip),%r8
	movq %r8,0x10(%r15)
	movq (globalObjptr+0xF850)(%rip),%r8
	movq %r8,0x18(%r15)
	movq (globalObjptr+0xF858)(%rip),%r8
	movq %r8,0x20(%r15)
	movq $0x2391,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r15,0x0(%r8)
	movq %r9,0x8(%r8)
	addq $0x18,%r12
	movq $0x48D1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r14,0x0(%r15)
	movq 0x148(%rbp),%r9
	movq %r9,0x8(%r15)
	movq $0x1B9D,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r15,0x0(%r9)
	addq $0x10,%r12
	movq $0x120D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r9,0x8(%r15)
	addq $0x30,%r12
	movb $0x0,%r9b
	movzbl %r9b,%esp
	movl %esp,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq (globalObjptr+0xF860)(%rip),%r9
	movq %r9,0x10(%r15)
	movq (globalObjptr+0xF750)(%rip),%r9
	movq %r9,0x18(%r15)
	movq (globalObjptr+0xF868)(%rip),%rsp
	movq %rsp,0x20(%r15)
	movq $0x2391,0x0(%r12)
	movq %r12,%rsp
	addq $0x8,%rsp
	movq %r15,0x0(%rsp)
	movq %r8,0x8(%rsp)
	addq $0x18,%r12
	movq $0x4903,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x150(%rbp),%r8
	movq %r8,0x0(%r15)
	movq $0x1B9D,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r15,0x0(%r8)
	addq $0x10,%r12
	movq $0x120D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r8,0x8(%r15)
	addq $0x30,%r12
	movb $0x0,%r8b
	movzbl %r8b,%esi
	movl %esi,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq (globalObjptr+0xF870)(%rip),%r8
	movq %r8,0x10(%r15)
	movq (globalObjptr+0xF878)(%rip),%r8
	movq %r8,0x18(%r15)
	movq (globalObjptr+0xF880)(%rip),%r8
	movq %r8,0x20(%r15)
	movq $0x2391,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r15,0x0(%r8)
	movq %rsp,0x8(%r8)
	addq $0x18,%r12
	movq $0x48CF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x158(%rbp),%rsp
	movq %rsp,0x0(%r15)
	movq $0x1B9D,0x0(%r12)
	movq %r12,%rsi
	addq $0x8,%rsi
	movq %r15,0x0(%rsi)
	addq $0x10,%r12
	movq $0x120D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %rsi,0x8(%r15)
	addq $0x30,%r12
	movb $0x1,%sil
	movzbl %sil,%edi
	movl %edi,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq (globalObjptr+0xF888)(%rip),%rsi
	movq %rsi,0x10(%r15)
	movq (globalObjptr+0xF618)(%rip),%rsi
	movq %rsi,0x18(%r15)
	movq (globalObjptr+0xF890)(%rip),%rdi
	movq %rdi,0x20(%r15)
	movq $0x2391,0x0(%r12)
	movq %r12,%rdi
	addq $0x8,%rdi
	movq %r15,0x0(%rdi)
	movq %r8,0x8(%rdi)
	addq $0x18,%r12
	movq $0x4905,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %rsp,0x0(%r15)
	movq $0x1B9D,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r15,0x0(%r8)
	addq $0x10,%r12
	movq $0x120D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r8,0x8(%r15)
	addq $0x30,%r12
	movb $0x0,%r8b
	movzbl %r8b,%esp
	movl %esp,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq (globalObjptr+0xF898)(%rip),%r8
	movq %r8,0x10(%r15)
	movq %rsi,0x18(%r15)
	movq (globalObjptr+0xF8A0)(%rip),%r8
	movq %r8,0x20(%r15)
	movq $0x2391,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r15,0x0(%r8)
	movq %rdi,0x8(%r8)
	addq $0x18,%r12
	movq $0x4933,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r14,0x0(%r15)
	movq 0x160(%rbp),%rsp
	movq %rsp,0x8(%r15)
	movq $0x1B9F,0x0(%r12)
	movq %r12,%rsp
	addq $0x8,%rsp
	movq %r15,0x0(%rsp)
	addq $0x10,%r12
	movq $0x120D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %rsp,0x8(%r15)
	addq $0x30,%r12
	movb $0x0,%spl
	movzbl %spl,%esi
	movl %esi,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq (globalObjptr+0xF8A8)(%rip),%rsp
	movq %rsp,0x10(%r15)
	movq %r11,0x18(%r15)
	movq (globalObjptr+0xF8B0)(%rip),%rsp
	movq %rsp,0x20(%r15)
	movq $0x2391,0x0(%r12)
	movq %r12,%rsp
	addq $0x8,%rsp
	movq %r15,0x0(%rsp)
	movq %r8,0x8(%rsp)
	addq $0x18,%r12
	movq $0x4945,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x168(%rbp),%r8
	movq %r8,0x0(%r15)
	movq $0x1BA1,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r15,0x0(%r8)
	addq $0x10,%r12
	movq $0x120D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r8,0x8(%r15)
	addq $0x30,%r12
	movb $0x0,%r8b
	movzbl %r8b,%esi
	movl %esi,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq (globalObjptr+0xF8B8)(%rip),%r8
	movq %r8,0x10(%r15)
	movq %r10,0x18(%r15)
	movq (globalObjptr+0xF8C0)(%rip),%r8
	movq %r8,0x20(%r15)
	movq $0x2391,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r15,0x0(%r8)
	movq %rsp,0x8(%r8)
	addq $0x18,%r12
	movq $0x2391,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r8,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0x7768)(%rip),%r8
	movq %r8,0x0(%r15)
	movq $0x48CD,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	addq $0x20,%r12
	movq 0x170(%rbp),%rsp
	movq %rsp,0x0(%r8)
	movq 0x178(%rbp),%rsp
	movq %rsp,0x8(%r8)
	movq 0x180(%rbp),%rsp
	movq %rsp,0x10(%r8)
	movq $0x1B9D,0x0(%r12)
	movq %r12,%rsi
	addq $0x8,%rsi
	movq %r8,0x0(%rsi)
	addq $0x10,%r12
	movq $0x120D,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %rsi,0x8(%r8)
	addq $0x30,%r12
	movb $0x1,%sil
	movzbl %sil,%edi
	movl %edi,0x0(%r8)
	movl $0x0,0x4(%r8)
	movq (globalObjptr+0xF8C8)(%rip),%rsi
	movq %rsi,0x10(%r8)
	movq (globalObjptr+0xF7A8)(%rip),%rsi
	movq %rsi,0x18(%r8)
	movq (globalObjptr+0xF8D0)(%rip),%rdi
	movq %rdi,0x20(%r8)
	movq $0x2391,0x0(%r12)
	movq %r12,%rdi
	addq $0x8,%rdi
	movq %r8,0x0(%rdi)
	movq %r15,0x8(%rdi)
	addq $0x18,%r12
	movq $0x4907,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %rsp,0x0(%r15)
	movq $0x1B9D,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r15,0x0(%r8)
	addq $0x10,%r12
	movq $0x120D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r8,0x8(%r15)
	addq $0x30,%r12
	movb $0x1,%r8b
	movzbl %r8b,%esp
	movl %esp,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq (globalObjptr+0xF8D8)(%rip),%r8
	movq %r8,0x10(%r15)
	movq (globalObjptr+0xF6D8)(%rip),%r8
	movq %r8,0x18(%r15)
	movq (globalObjptr+0xF8E0)(%rip),%r8
	movq %r8,0x20(%r15)
	movq $0x2391,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r15,0x0(%r8)
	movq %rdi,0x8(%r8)
	addq $0x18,%r12
	movq $0x2391,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r8,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0x7780)(%rip),%r8
	movq %r8,0x0(%r15)
	movq $0x4945,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	addq $0x10,%r12
	movq 0x188(%rbp),%rsp
	movq %rsp,0x0(%r8)
	movq $0x1BA1,0x0(%r12)
	movq %r12,%rsp
	addq $0x8,%rsp
	movq %r8,0x0(%rsp)
	addq $0x10,%r12
	movq $0x120D,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %rsp,0x8(%r8)
	addq $0x30,%r12
	movb $0x0,%spl
	movzbl %spl,%edi
	movl %edi,0x0(%r8)
	movl $0x0,0x4(%r8)
	movq (globalObjptr+0xF8E8)(%rip),%rsp
	movq %rsp,0x10(%r8)
	movq %r10,0x18(%r8)
	movq (globalObjptr+0xF8F0)(%rip),%rsp
	movq %rsp,0x20(%r8)
	movq $0x2391,0x0(%r12)
	movq %r12,%rsp
	addq $0x8,%rsp
	movq %r8,0x0(%rsp)
	movq %r15,0x8(%rsp)
	addq $0x18,%r12
	movq $0x2391,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %rsp,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0x7798)(%rip),%r8
	movq %r8,0x0(%r15)
	movq $0x2391,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r15,0x8(%r8)
	addq $0x18,%r12
	movq (globalObjptr+0x77B0)(%rip),%r15
	movq %r15,0x0(%r8)
	movq $0x4945,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x190(%rbp),%rsp
	movq %rsp,0x0(%r15)
	movq $0x1BA1,0x0(%r12)
	movq %r12,%rsp
	addq $0x8,%rsp
	movq %r15,0x0(%rsp)
	addq $0x10,%r12
	movq $0x120D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %rsp,0x8(%r15)
	addq $0x30,%r12
	movb $0x0,%spl
	movzbl %spl,%edi
	movl %edi,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq (globalObjptr+0xF8F8)(%rip),%rsp
	movq %rsp,0x10(%r15)
	movq %r13,0x18(%r15)
	movq (globalObjptr+0xF900)(%rip),%rsp
	movq %rsp,0x20(%r15)
	movq $0x2391,0x0(%r12)
	movq %r12,%rsp
	addq $0x8,%rsp
	movq %r15,0x0(%rsp)
	movq %r8,0x8(%rsp)
	addq $0x18,%r12
	movq $0x4945,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x198(%rbp),%r8
	movq %r8,0x0(%r15)
	movq $0x1BA1,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r15,0x0(%r8)
	addq $0x10,%r12
	movq $0x120D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r8,0x8(%r15)
	addq $0x30,%r12
	movb $0x0,%r8b
	movzbl %r8b,%edi
	movl %edi,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq (globalObjptr+0xF908)(%rip),%r8
	movq %r8,0x10(%r15)
	movq %r10,0x18(%r15)
	movq (globalObjptr+0xF910)(%rip),%r8
	movq %r8,0x20(%r15)
	movq $0x2391,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r15,0x0(%r8)
	movq %rsp,0x8(%r8)
	addq $0x18,%r12
	movq $0x2391,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r8,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0x77C8)(%rip),%r8
	movq %r8,0x0(%r15)
	movq $0x4937,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	addq $0x10,%r12
	movq 0x1A0(%rbp),%rsp
	movq %rsp,0x0(%r8)
	movq $0x1B9F,0x0(%r12)
	movq %r12,%rsp
	addq $0x8,%rsp
	movq %r8,0x0(%rsp)
	addq $0x10,%r12
	movq $0x120D,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %rsp,0x8(%r8)
	addq $0x30,%r12
	movb $0x0,%spl
	movzbl %spl,%edi
	movl %edi,0x0(%r8)
	movl $0x0,0x4(%r8)
	movq (globalObjptr+0xF918)(%rip),%rsp
	movq %rsp,0x10(%r8)
	movq %r11,0x18(%r8)
	movq (globalObjptr+0xF920)(%rip),%rsp
	movq %rsp,0x20(%r8)
	movq $0x2391,0x0(%r12)
	movq %r12,%rsp
	addq $0x8,%rsp
	movq %r8,0x0(%rsp)
	movq %r15,0x8(%rsp)
	addq $0x18,%r12
	movq $0x493D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x1A8(%rbp),%r8
	movq %r8,0x0(%r15)
	movq $0x1BA1,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r15,0x0(%r8)
	addq $0x10,%r12
	movq $0x120D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r8,0x8(%r15)
	addq $0x30,%r12
	movb $0x0,%r8b
	movzbl %r8b,%edi
	movl %edi,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq (globalObjptr+0xF928)(%rip),%r8
	movq %r8,0x10(%r15)
	movq %r10,0x18(%r15)
	movq (globalObjptr+0xF930)(%rip),%r8
	movq %r8,0x20(%r15)
	movq $0x2391,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r15,0x0(%r8)
	movq %rsp,0x8(%r8)
	addq $0x18,%r12
	movq $0x48CB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r14,0x0(%r15)
	movq 0x1B0(%rbp),%rsp
	movq %rsp,0x8(%r15)
	movq $0x1B9D,0x0(%r12)
	movq %r12,%rdi
	addq $0x8,%rdi
	movq %r15,0x0(%rdi)
	addq $0x10,%r12
	movq $0x120D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %rdi,0x8(%r15)
	addq $0x30,%r12
	movb $0x0,%dil
	movzbl %dil,%edx
	movl %edx,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq (globalObjptr+0xBBE8)(%rip),%rdi
	movq %rdi,0x10(%r15)
	movq (globalObjptr+0xF938)(%rip),%rdi
	movq %rdi,0x18(%r15)
	movq (globalObjptr+0xF940)(%rip),%rdi
	movq %rdi,0x20(%r15)
	movq $0x2391,0x0(%r12)
	movq %r12,%rdi
	addq $0x8,%rdi
	movq %r15,0x0(%rdi)
	movq %r8,0x8(%rdi)
	addq $0x18,%r12
	movq $0x4909,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x1B8(%rbp),%r8
	movq %r8,0x0(%r15)
	movq $0x1B9D,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r15,0x0(%r8)
	addq $0x10,%r12
	movq $0x120D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r8,0x8(%r15)
	addq $0x30,%r12
	movb $0x1,%r8b
	movzbl %r8b,%edx
	movl %edx,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq (globalObjptr+0xF948)(%rip),%r8
	movq %r8,0x10(%r15)
	movq %rsi,0x18(%r15)
	movq (globalObjptr+0xDD88)(%rip),%r8
	movq %r8,0x20(%r15)
	movq $0x2391,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r15,0x0(%r8)
	movq %rdi,0x8(%r8)
	addq $0x18,%r12
	movq $0x494F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x1C0(%rbp),%rdi
	movq %rdi,0x0(%r15)
	movq $0x1BA1,0x0(%r12)
	movq %r12,%rdx
	addq $0x8,%rdx
	movq %r15,0x0(%rdx)
	addq $0x10,%r12
	movq $0x120D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %rdx,0x8(%r15)
	addq $0x30,%r12
	movb $0x0,%dl
	movzbl %dl,%ecx
	movl %ecx,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq (globalObjptr+0xF950)(%rip),%rdx
	movq %rdx,0x10(%r15)
	movq %r10,0x18(%r15)
	movq (globalObjptr+0xCC50)(%rip),%rdx
	movq %rdx,0x20(%r15)
	movq $0x2391,0x0(%r12)
	movq %r12,%rdx
	addq $0x8,%rdx
	movq %r15,0x0(%rdx)
	movq %r8,0x8(%rdx)
	addq $0x18,%r12
	movq $0x493B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %rdi,0x0(%r15)
	movq $0x1BA1,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r15,0x0(%r8)
	addq $0x10,%r12
	movq $0x120D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r8,0x8(%r15)
	addq $0x30,%r12
	movb $0x0,%r8b
	movzbl %r8b,%ecx
	movl %ecx,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq (globalObjptr+0xF958)(%rip),%r8
	movq %r8,0x10(%r15)
	movq %r10,0x18(%r15)
	movq (globalObjptr+0xF960)(%rip),%r8
	movq %r8,0x20(%r15)
	movq $0x2391,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r15,0x0(%r8)
	movq %rdx,0x8(%r8)
	addq $0x18,%r12
	movq $0x4931,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %rdi,0x0(%r15)
	movq $0x1B9F,0x0(%r12)
	movq %r12,%rdx
	addq $0x8,%rdx
	movq %r15,0x0(%rdx)
	addq $0x10,%r12
	movq $0x120D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %rdx,0x8(%r15)
	addq $0x30,%r12
	movb $0x0,%dl
	movzbl %dl,%ecx
	movl %ecx,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq (globalObjptr+0xF968)(%rip),%rdx
	movq %rdx,0x10(%r15)
	movq %r11,0x18(%r15)
	movq (globalObjptr+0xF970)(%rip),%rdx
	movq %rdx,0x20(%r15)
	movq $0x2391,0x0(%r12)
	movq %r12,%rdx
	addq $0x8,%rdx
	movq %r15,0x0(%rdx)
	movq %r8,0x8(%rdx)
	addq $0x18,%r12
	movq $0x4939,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %rdi,0x0(%r15)
	movq $0x1B9F,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r15,0x0(%r8)
	addq $0x10,%r12
	movq $0x120D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r8,0x8(%r15)
	addq $0x30,%r12
	movb $0x0,%r8b
	movzbl %r8b,%ecx
	movl %ecx,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq (globalObjptr+0xF978)(%rip),%r8
	movq %r8,0x10(%r15)
	movq %r11,0x18(%r15)
	movq (globalObjptr+0xF980)(%rip),%r8
	movq %r8,0x20(%r15)
	movq $0x2391,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r15,0x0(%r8)
	movq %rdx,0x8(%r8)
	addq $0x18,%r12
	movq $0x492F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %rdi,0x0(%r15)
	movq $0x1B9F,0x0(%r12)
	movq %r12,%rdi
	addq $0x8,%rdi
	movq %r15,0x0(%rdi)
	addq $0x10,%r12
	movq $0x120D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %rdi,0x8(%r15)
	addq $0x30,%r12
	movb $0x0,%dil
	movzbl %dil,%edx
	movl %edx,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq (globalObjptr+0xF988)(%rip),%rdi
	movq %rdi,0x10(%r15)
	movq %r11,0x18(%r15)
	movq (globalObjptr+0xF990)(%rip),%r11
	movq %r11,0x20(%r15)
	movq $0x2391,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r8,0x8(%r11)
	addq $0x18,%r12
	movq $0x4945,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x1C8(%rbp),%r8
	movq %r8,0x0(%r15)
	movq $0x1BA1,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r15,0x0(%r8)
	addq $0x10,%r12
	movq $0x120D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r8,0x8(%r15)
	addq $0x30,%r12
	movb $0x0,%r8b
	movzbl %r8b,%edi
	movl %edi,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq (globalObjptr+0xF998)(%rip),%r8
	movq %r8,0x10(%r15)
	movq %r13,0x18(%r15)
	movq (globalObjptr+0xF9A0)(%rip),%r8
	movq %r8,0x20(%r15)
	movq $0x2391,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r15,0x0(%r8)
	movq %r11,0x8(%r8)
	addq $0x18,%r12
	movq $0x48C9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r14,0x0(%r15)
	movq 0x1D0(%rbp),%r11
	movq %r11,0x8(%r15)
	movq $0x1B9D,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	addq $0x10,%r12
	movq $0x120D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x8(%r15)
	addq $0x30,%r12
	movb $0x0,%r11b
	movzbl %r11b,%edi
	movl %edi,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq (globalObjptr+0xF9A8)(%rip),%r11
	movq %r11,0x10(%r15)
	movq %r9,0x18(%r15)
	movq (globalObjptr+0xF9B0)(%rip),%r11
	movq %r11,0x20(%r15)
	movq $0x2391,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r8,0x8(%r11)
	addq $0x18,%r12
	movq $0x490B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x30,%r12
	movq 0x1D8(%rbp),%r9
	movq %r9,0x0(%r15)
	movq %r14,0x8(%r15)
	movq 0x1E0(%rbp),%r9
	movq %r9,0x10(%r15)
	movq %r14,0x18(%r15)
	movq 0x1E8(%rbp),%r9
	movq %r9,0x20(%r15)
	movq $0x1B9D,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r15,0x0(%r9)
	addq $0x10,%r12
	movq $0x120D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r9,0x8(%r15)
	addq $0x30,%r12
	movb $0x1,%r9b
	movzbl %r9b,%r8d
	movl %r8d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq (globalObjptr+0xF9B8)(%rip),%r9
	movq %r9,0x10(%r15)
	movq (globalObjptr+0xF9C0)(%rip),%r9
	movq %r9,0x18(%r15)
	movq (globalObjptr+0xCC68)(%rip),%r9
	movq %r9,0x20(%r15)
	movq $0x2391,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r15,0x0(%r9)
	movq %r11,0x8(%r9)
	addq $0x18,%r12
	movq $0x4945,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x1F0(%rbp),%r11
	movq %r11,0x0(%r15)
	movq $0x1BA1,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	addq $0x10,%r12
	movq $0x120D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x8(%r15)
	addq $0x30,%r12
	movb $0x1,%r11b
	movzbl %r11b,%r8d
	movl %r8d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq (globalObjptr+0xF9C8)(%rip),%r11
	movq %r11,0x10(%r15)
	movq %r13,0x18(%r15)
	movq (globalObjptr+0xF9D0)(%rip),%r11
	movq %r11,0x20(%r15)
	movq $0x2391,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r9,0x8(%r11)
	addq $0x18,%r12
	movq $0x48C7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r14,0x0(%r15)
	movq 0x1F8(%rbp),%r9
	movq %r9,0x8(%r15)
	movq $0x1B9D,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r15,0x0(%r9)
	addq $0x10,%r12
	movq $0x120D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r9,0x8(%r15)
	addq $0x30,%r12
	movb $0x0,%r9b
	movzbl %r9b,%r8d
	movl %r8d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq (globalObjptr+0xF9D8)(%rip),%r9
	movq %r9,0x10(%r15)
	movq (globalObjptr+0xF9E0)(%rip),%r9
	movq %r9,0x18(%r15)
	movq (globalObjptr+0xF9E8)(%rip),%r8
	movq %r8,0x20(%r15)
	movq $0x2391,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r15,0x0(%r8)
	movq %r11,0x8(%r8)
	addq $0x18,%r12
	movq $0x490D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r14,0x0(%r15)
	movq 0x200(%rbp),%r11
	movq %r11,0x8(%r15)
	movq $0x1B9D,0x0(%r12)
	movq %r12,%rdi
	addq $0x8,%rdi
	movq %r15,0x0(%rdi)
	addq $0x10,%r12
	movq $0x120D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %rdi,0x8(%r15)
	addq $0x30,%r12
	movb $0x0,%dil
	movzbl %dil,%edx
	movl %edx,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq (globalObjptr+0xF9F0)(%rip),%rdi
	movq %rdi,0x10(%r15)
	movq %r9,0x18(%r15)
	movq (globalObjptr+0xF9F8)(%rip),%rdi
	movq %rdi,0x20(%r15)
	movq $0x2391,0x0(%r12)
	movq %r12,%rdi
	addq $0x8,%rdi
	movq %r15,0x0(%rdi)
	movq %r8,0x8(%rdi)
	addq $0x18,%r12
	movq $0x48C5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r14,0x0(%r15)
	movq 0x208(%rbp),%r8
	movq %r8,0x8(%r15)
	movq $0x1B9D,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r15,0x0(%r8)
	addq $0x10,%r12
	movq $0x120D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r8,0x8(%r15)
	addq $0x30,%r12
	movb $0x0,%r8b
	movzbl %r8b,%edx
	movl %edx,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq (globalObjptr+0xFA00)(%rip),%r8
	movq %r8,0x10(%r15)
	movq (globalObjptr+0xFA08)(%rip),%r8
	movq %r8,0x18(%r15)
	movq (globalObjptr+0xFA10)(%rip),%r8
	movq %r8,0x20(%r15)
	movq $0x2391,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r15,0x0(%r8)
	movq %rdi,0x8(%r8)
	addq $0x18,%r12
	movq $0x490F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r14,0x0(%r15)
	movq %r11,0x8(%r15)
	movq $0x1B9D,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	addq $0x10,%r12
	movq $0x120D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x8(%r15)
	addq $0x30,%r12
	movb $0x0,%r11b
	movzbl %r11b,%edi
	movl %edi,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq (globalObjptr+0xFA18)(%rip),%r11
	movq %r11,0x10(%r15)
	movq %r9,0x18(%r15)
	movq (globalObjptr+0xFA20)(%rip),%r11
	movq %r11,0x20(%r15)
	movq $0x2391,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r8,0x8(%r11)
	addq $0x18,%r12
	movq $0x4945,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x210(%rbp),%r9
	movq %r9,0x0(%r15)
	movq $0x1BA1,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r15,0x0(%r9)
	addq $0x10,%r12
	movq $0x120D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r9,0x8(%r15)
	addq $0x30,%r12
	movb $0x0,%r9b
	movzbl %r9b,%r8d
	movl %r8d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq (globalObjptr+0xFA28)(%rip),%r9
	movq %r9,0x10(%r15)
	movq %r13,0x18(%r15)
	movq (globalObjptr+0xFA30)(%rip),%r9
	movq %r9,0x20(%r15)
	movq $0x2391,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r15,0x0(%r9)
	movq %r11,0x8(%r9)
	addq $0x18,%r12
	movq $0x4945,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x218(%rbp),%r11
	movq %r11,0x0(%r15)
	movq $0x1BA1,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	addq $0x10,%r12
	movq $0x120D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x8(%r15)
	addq $0x30,%r12
	movb $0x1,%r11b
	movzbl %r11b,%r8d
	movl %r8d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq (globalObjptr+0xFA38)(%rip),%r11
	movq %r11,0x10(%r15)
	movq %r13,0x18(%r15)
	movq (globalObjptr+0xFA40)(%rip),%r11
	movq %r11,0x20(%r15)
	movq $0x2391,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r9,0x8(%r11)
	addq $0x18,%r12
	movq $0x4945,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x220(%rbp),%r9
	movq %r9,0x0(%r15)
	movq $0x1BA1,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r15,0x0(%r9)
	addq $0x10,%r12
	movq $0x120D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r9,0x8(%r15)
	addq $0x30,%r12
	movb $0x1,%r9b
	movzbl %r9b,%r8d
	movl %r8d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq (globalObjptr+0xFA48)(%rip),%r9
	movq %r9,0x10(%r15)
	movq %r13,0x18(%r15)
	movq (globalObjptr+0xFA50)(%rip),%r13
	movq %r13,0x20(%r15)
	movq $0x2391,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r11,0x8(%r13)
	addq $0x18,%r12
	movq $0x48C3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x228(%rbp),%r11
	movq %r11,0x0(%r15)
	movq $0x1B9D,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	addq $0x10,%r12
	movq $0x120D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x8(%r15)
	addq $0x30,%r12
	movb $0x1,%r11b
	movzbl %r11b,%r9d
	movl %r9d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq (globalObjptr+0xFA58)(%rip),%r11
	movq %r11,0x10(%r15)
	movq (globalObjptr+0xFA60)(%rip),%r11
	movq %r11,0x18(%r15)
	movq (globalObjptr+0xFA68)(%rip),%r11
	movq %r11,0x20(%r15)
	movq $0x2391,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq $0x4911,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x230(%rbp),%r13
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	movq $0x1B9D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x10,%r12
	movq $0x120D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x30,%r12
	movb $0x0,%r13b
	movzbl %r13b,%r9d
	movl %r9d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq (globalObjptr+0xFA70)(%rip),%r13
	movq %r13,0x10(%r15)
	movq (globalObjptr+0xFA78)(%rip),%r13
	movq %r13,0x18(%r15)
	movq (globalObjptr+0xFA80)(%rip),%r13
	movq %r13,0x20(%r15)
	movq $0x2391,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r11,0x8(%r13)
	addq $0x18,%r12
	movq $0x48C1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x238(%rbp),%r11
	movq %r11,0x0(%r15)
	movq $0x1B9D,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	addq $0x10,%r12
	movq $0x120D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x8(%r15)
	addq $0x30,%r12
	movb $0x1,%r11b
	movzbl %r11b,%r9d
	movl %r9d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq (globalObjptr+0xFA88)(%rip),%r11
	movq %r11,0x10(%r15)
	movq %rsi,0x18(%r15)
	movq (globalObjptr+0xFA90)(%rip),%r11
	movq %r11,0x20(%r15)
	movq $0x2391,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq $0x4913,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x240(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B9D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x10,%r12
	movq $0x120D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x30,%r12
	movb $0x1,%r13b
	movzbl %r13b,%r9d
	movl %r9d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq (globalObjptr+0xFA98)(%rip),%r13
	movq %r13,0x10(%r15)
	movq %rsi,0x18(%r15)
	movq (globalObjptr+0xFAA0)(%rip),%r13
	movq %r13,0x20(%r15)
	movq $0x2391,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r11,0x8(%r13)
	addq $0x18,%r12
	movq $0x4945,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x248(%rbp),%r11
	movq %r11,0x0(%r15)
	movq $0x1BA1,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	addq $0x10,%r12
	movq $0x120D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x8(%r15)
	addq $0x30,%r12
	movb $0x0,%r11b
	movzbl %r11b,%r9d
	movl %r9d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq (globalObjptr+0xFAA8)(%rip),%r11
	movq %r11,0x10(%r15)
	movq %r10,0x18(%r15)
	movq (globalObjptr+0xFAB0)(%rip),%r11
	movq %r11,0x20(%r15)
	movq $0x2391,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq $0x48BF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r14,0x0(%r15)
	movq %rsp,0x8(%r15)
	movq $0x1B9D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x10,%r12
	movq $0x120D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x30,%r12
	movb $0x0,%r13b
	movzbl %r13b,%r10d
	movl %r10d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq (globalObjptr+0xFAB8)(%rip),%r13
	movq %r13,0x10(%r15)
	movq (globalObjptr+0xFAC0)(%rip),%r13
	movq %r13,0x18(%r15)
	movq (globalObjptr+0xFAC8)(%rip),%r10
	movq %r10,0x20(%r15)
	movq $0x2391,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq $0x4915,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r14,0x0(%r15)
	movq %rsp,0x8(%r15)
	movq $0x1B9D,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	addq $0x10,%r12
	movq $0x120D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x8(%r15)
	addq $0x30,%r12
	movb $0x0,%r11b
	movzbl %r11b,%r9d
	movl %r9d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq (globalObjptr+0xFAD0)(%rip),%r11
	movq %r11,0x10(%r15)
	movq %r13,0x18(%r15)
	movq (globalObjptr+0xFAD8)(%rip),%r11
	movq %r11,0x20(%r15)
	movq $0x2391,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r10,0x8(%r11)
	addq $0x18,%r12
	movq $0x48BD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x250(%rbp),%r10
	movq %r10,0x0(%r15)
	movq %r14,0x8(%r15)
	movq $0x1B9D,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	addq $0x10,%r12
	movq $0x120D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r10,0x8(%r15)
	addq $0x30,%r12
	movb $0x1,%r10b
	movzbl %r10b,%r9d
	movl %r9d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq (globalObjptr+0xFAE0)(%rip),%r10
	movq %r10,0x10(%r15)
	movq (globalObjptr+0xFAE8)(%rip),%r10
	movq %r10,0x18(%r15)
	movq (globalObjptr+0xFAF0)(%rip),%r10
	movq %r10,0x20(%r15)
	movq $0x2391,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq $0x4917,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r14,0x0(%r15)
	movq %rsp,0x8(%r15)
	movq $0x1B9D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x120D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x30,%r12
	movb $0x0,%r14b
	movzbl %r14b,%r11d
	movl %r11d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq (globalObjptr+0xFAF8)(%rip),%r14
	movq %r14,0x10(%r15)
	movq %r13,0x18(%r15)
	movq (globalObjptr+0xFB00)(%rip),%r14
	movq %r14,0x20(%r15)
	movq $0x2391,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x38(%rbp)
	movq %r15,0x0(%r14)
	movq %r10,0x8(%r14)
	addq $0x18,%r12
	movq 0x258(%rbp),%r15
	movq %r15,0x2A0(%rbp)
	addq $0x2A0,%rbp
	leaq (L_184271+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1204
.p2align 0x4
.long 0x2586
L_184271:
	addq $0xFFFFFFFFFFFFFD60,%rbp
	movq 0x2A0(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_184272
L_184304:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2A0,%rbp
	leaq (L_184305+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_184305
.p2align 0x4
.long 0x2587
L_184305:
	addq $0xFFFFFFFFFFFFFD60,%rbp
L_184272:
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_456216
L_184273:
	movq 0x0(%r15),%r14
	cmpq $0x1,0x8(%r15)
	je L_456215
L_184274:
	movq 0x8(%r14),%r15
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x77D0)(%rip),%r15
	movq %r15,0x8(%r14)
	movq %r14,0x2A0(%rbp)
	addq $0x2A0,%rbp
	leaq (L_184275+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_456215:
L_184302:
	movq 0x8(%r14),%r15
L_184277:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x13D0)(%rip),%r15
	movq %r15,0x8(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0xD508)(%rip),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x2A0(%rbp)
	addq $0x2A0,%rbp
	leaq (L_184278+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_456216:
L_184303:
	movq (globalObjptr+0xA058)(%rip),%r14
	xchgq %r14,%r15
	jmp L_184277
.p2align 0x4
.long 0x2586
L_184275:
	addq $0xFFFFFFFFFFFFFD60,%rbp
	movq 0x2A0(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_184276
L_184300:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2A0,%rbp
	leaq (L_184301+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_184301
.p2align 0x4
.long 0x2587
L_184301:
	addq $0xFFFFFFFFFFFFFD60,%rbp
L_184276:
	movq 0x28(%rbp),%r15
	jmp L_184277
.p2align 0x4
.long 0x2586
L_184278:
	addq $0xFFFFFFFFFFFFFD60,%rbp
	movq 0x2A0(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq (gcState+0x458)(%rip),%r15
	subq %r12,%r15
	cmpq $0x558,%r15
	jnb L_184279
L_184298:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	movq $0x558,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2A0,%rbp
	leaq (L_184299+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_184299
.p2align 0x4
.long 0x2587
L_184299:
	addq $0xFFFFFFFFFFFFFD60,%rbp
L_184279:
	movq $0x48BB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x30,%r12
	movq 0x260(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x268(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x8(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x258(%rbp),%r13
	movq %r13,0x18(%r15)
	movq 0x270(%rbp),%r13
	movq %r13,0x20(%r15)
	movq $0x1B9D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x10,%r12
	movq $0x120D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x30,%r12
	movb $0x1,%r13b
	movzbl %r13b,%r11d
	movl %r11d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq (globalObjptr+0xFB08)(%rip),%r13
	movq %r13,0x10(%r15)
	movq 0x28(%rbp),%r13
	movq %r13,0x18(%r15)
	movq (globalObjptr+0xCCC0)(%rip),%r13
	movq %r13,0x20(%r15)
	movq $0x2391,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x18,%r12
	movq 0x38(%rbp),%r15
	movq %r15,0x8(%r13)
	movq $0x48B3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x18(%rbp),%r11
	movq %r11,0x0(%r15)
	movq $0x1B9B,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	addq $0x10,%r12
	movq $0x120D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r10,0x8(%r15)
	addq $0x30,%r12
	movb $0x1,%r10b
	movzbl %r10b,%r9d
	movl %r9d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq (globalObjptr+0xFB10)(%rip),%r10
	movq %r10,0x10(%r15)
	movq (globalObjptr+0xFB18)(%rip),%r10
	movq %r10,0x18(%r15)
	movq (globalObjptr+0xFB20)(%rip),%r9
	movq %r9,0x20(%r15)
	movq $0x2391,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r15,0x0(%r9)
	movq %r13,0x8(%r9)
	addq $0x18,%r12
	movq $0x48B1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r11,0x0(%r15)
	movq $0x1B9B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x10,%r12
	movq $0x120D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x30,%r12
	movb $0x0,%r13b
	movzbl %r13b,%r11d
	movl %r11d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq (globalObjptr+0xFB28)(%rip),%r13
	movq %r13,0x10(%r15)
	movq %r10,0x18(%r15)
	movq (globalObjptr+0xFB30)(%rip),%r13
	movq %r13,0x20(%r15)
	movq $0x2391,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r9,0x8(%r13)
	addq $0x18,%r12
	movq $0x48B5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r11
	movq %r11,0x0(%r15)
	movq $0x1B9B,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r15,0x0(%r9)
	addq $0x10,%r12
	movq $0x120D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r9,0x8(%r15)
	addq $0x30,%r12
	movb $0x1,%r9b
	movzbl %r9b,%r8d
	movl %r8d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq (globalObjptr+0xFB38)(%rip),%r9
	movq %r9,0x10(%r15)
	movq %r10,0x18(%r15)
	movq (globalObjptr+0xFB40)(%rip),%r9
	movq %r9,0x20(%r15)
	movq $0x2391,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r15,0x0(%r9)
	movq %r13,0x8(%r9)
	addq $0x18,%r12
	movq $0x48AF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r11,0x0(%r15)
	movq $0x1B9B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x10,%r12
	movq $0x120D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x30,%r12
	movb $0x0,%r13b
	movzbl %r13b,%r11d
	movl %r11d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq (globalObjptr+0xFB48)(%rip),%r13
	movq %r13,0x10(%r15)
	movq %r10,0x18(%r15)
	movq (globalObjptr+0xFB50)(%rip),%r13
	movq %r13,0x20(%r15)
	movq $0x2391,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r9,0x8(%r13)
	addq $0x18,%r12
	movq $0x48B7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x158(%rbp),%r11
	movq %r11,0x0(%r15)
	movq $0x1B9B,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r15,0x0(%r9)
	addq $0x10,%r12
	movq $0x120D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r9,0x8(%r15)
	addq $0x30,%r12
	movb $0x1,%r9b
	movzbl %r9b,%r8d
	movl %r8d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq (globalObjptr+0xFB58)(%rip),%r9
	movq %r9,0x10(%r15)
	movq %r10,0x18(%r15)
	movq (globalObjptr+0xFB60)(%rip),%r9
	movq %r9,0x20(%r15)
	movq $0x2391,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r15,0x0(%r9)
	movq %r13,0x8(%r9)
	addq $0x18,%r12
	movq $0x48AD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r11,0x0(%r15)
	movq $0x1B9B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x10,%r12
	movq $0x120D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x30,%r12
	movb $0x0,%r13b
	movzbl %r13b,%r11d
	movl %r11d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq (globalObjptr+0xFB68)(%rip),%r13
	movq %r13,0x10(%r15)
	movq %r10,0x18(%r15)
	movq (globalObjptr+0xFB70)(%rip),%r13
	movq %r13,0x20(%r15)
	movq $0x2391,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r9,0x8(%r13)
	addq $0x18,%r12
	movq $0x120D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x30,%r12
	movb $0x0,%r11b
	movzbl %r11b,%r10d
	movl %r10d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x278(%rbp),%r11
	movq %r11,0x8(%r15)
	movq (globalObjptr+0xFB78)(%rip),%r11
	movq %r11,0x10(%r15)
	movq (globalObjptr+0xFB80)(%rip),%r11
	movq %r11,0x18(%r15)
	movq (globalObjptr+0xFB88)(%rip),%r11
	movq %r11,0x20(%r15)
	movq $0x2391,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq $0x4945,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x280(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1BA1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x10,%r12
	movq $0x120D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x30,%r12
	movb $0x0,%r13b
	movzbl %r13b,%r10d
	movl %r10d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq (globalObjptr+0xFB90)(%rip),%r13
	movq %r13,0x10(%r15)
	movq (globalObjptr+0xF640)(%rip),%r13
	movq %r13,0x18(%r15)
	movq (globalObjptr+0xFB98)(%rip),%r13
	movq %r13,0x20(%r15)
	movq $0x2391,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r11,0x8(%r13)
	addq $0x18,%r12
	movq $0x4919,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x288(%rbp),%r11
	movq %r11,0x0(%r15)
	movq %r14,0x8(%r15)
	movq $0x1B9D,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	addq $0x10,%r12
	movq $0x120D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x8(%r15)
	addq $0x30,%r12
	movb $0x1,%r11b
	movzbl %r11b,%r10d
	movl %r10d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq (globalObjptr+0xFBA0)(%rip),%r11
	movq %r11,0x10(%r15)
	movq (globalObjptr+0xFBA8)(%rip),%r11
	movq %r11,0x18(%r15)
	movq (globalObjptr+0xFBB0)(%rip),%r11
	movq %r11,0x20(%r15)
	movq $0x2391,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq $0x4945,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x290(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1BA1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x10,%r12
	movq $0x120D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x30,%r12
	movb $0x0,%r13b
	movzbl %r13b,%r10d
	movl %r10d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq (globalObjptr+0xFBB8)(%rip),%r13
	movq %r13,0x10(%r15)
	movq (globalObjptr+0xF6A8)(%rip),%r13
	movq %r13,0x18(%r15)
	movq (globalObjptr+0xFBC0)(%rip),%r10
	movq %r10,0x20(%r15)
	movq $0x2391,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq $0x4945,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x10(%rbp),%r11
	movq %r11,0x0(%r15)
	movq $0x1BA1,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	addq $0x10,%r12
	movq $0x120D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x8(%r15)
	addq $0x30,%r12
	movb $0x0,%r11b
	movzbl %r11b,%r9d
	movl %r9d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq (globalObjptr+0xFBC8)(%rip),%r11
	movq %r11,0x10(%r15)
	movq %r13,0x18(%r15)
	movq (globalObjptr+0xFBD0)(%rip),%r13
	movq %r13,0x20(%r15)
	movq $0x2391,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r10,0x8(%r13)
	addq $0x18,%r12
	movq $0x48B9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r14,0x0(%r15)
	movq 0x1B0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1B9D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x120D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x30,%r12
	movb $0x0,%r14b
	movzbl %r14b,%r11d
	movl %r11d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq (globalObjptr+0xFBD8)(%rip),%r14
	movq %r14,0x10(%r15)
	movq (globalObjptr+0xFAC0)(%rip),%r14
	movq %r14,0x18(%r15)
	movq (globalObjptr+0xFBE0)(%rip),%r14
	movq %r14,0x20(%r15)
	movq $0x2391,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r13,0x8(%r14)
	movq %r14,0x0(%rbp)
	addq $0x18,%r12
	movq (globalObjptr+0x77E8)(%rip),%r15
	movq %r15,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_184280:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_456224
.p2align 0x4,,0x7
L_184281:
	movq $0x2391,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_456219
L_184282:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_184280
.p2align 0x4
L_456219:
L_184283:
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_184284:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_456223
.p2align 0x4,,0x7
L_184285:
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x10(%r15),%r13
	movq 0x18(%r15),%r11
	movq 0x20(%r15),%r10
	movb 0x0(%r15),%r9b
	movq $0x1215,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	movq %r10,0x10(%r15)
	movq %r13,0x18(%r15)
	movq %r11,0x20(%r15)
	addq $0x30,%r12
	movzbl %r9b,%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x2385,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x10(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x0(%rbp),%r13
	cmpq $0x1,%r13
	je L_456220
L_184286:
	movq %r14,0x10(%rbp)
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movq %r13,0x0(%rbp)
	movq %r14,0x8(%rbp)
	jmp L_184284
.p2align 0x4
L_456220:
L_184287:
	movq %r15,0x8(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_184288:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_456222
.p2align 0x4,,0x7
L_184289:
	movq $0x2385,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_456221
L_184290:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_184288
.p2align 0x4
L_456221:
L_184291:
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_456222:
L_184292:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_184293+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_184293
.p2align 0x4
.long 0x45B
L_184293:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_184289
.p2align 0x4
L_456223:
L_184294:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_184295+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_184295
.p2align 0x4
.long 0x45B
L_184295:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_184285
.p2align 0x4
L_456224:
L_184296:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_184297+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_184297
.p2align 0x4
.long 0x45B
L_184297:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_184281
