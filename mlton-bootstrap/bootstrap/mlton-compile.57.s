/* MLton 20130715 (built Mon Jun 13 11:54:01 AEST 2016 on ports.extensibl.com) */
/*   created this file on Mon Jun 13 12:09:28 2016. */
/* Do not edit this file. */
/* Flag settings:  */
/*    align: 8 */
/*    atMLtons: (mlton-compile, @MLton, --) */
/*    chunk: chunk per function */
/*    closureConvertGlobalize: true */
/*    closureConvertShrink: true */
/*    codegen: amd64 */
/*    contifyIntoMain: false */
/*    debug: false */
/*    defaultChar: char8 */
/*    defaultWideChar: widechar32 */
/*    defaultInt: int32 */
/*    defaultReal: real64 */
/*    defaultWord: word32 */
/*    diag passes: [] */
/*    drop passes: [] */
/*    elaborate allowConstant (default): false */
/*    elaborate allowConstant (enabled): true */
/*    elaborate allowFFI (default): false */
/*    elaborate allowFFI (enabled): true */
/*    elaborate allowPrim (default): false */
/*    elaborate allowPrim (enabled): true */
/*    elaborate allowOverload (default): false */
/*    elaborate allowOverload (enabled): true */
/*    elaborate allowRebindEquals (default): false */
/*    elaborate allowRebindEquals (enabled): true */
/*    elaborate deadCode (default): false */
/*    elaborate deadCode (enabled): true */
/*    elaborate forceUsed (default): false */
/*    elaborate forceUsed (enabled): true */
/*    elaborate ffiStr (default):  */
/*    elaborate ffiStr (enabled): true */
/*    elaborate nonexhaustiveExnMatch (default): default */
/*    elaborate nonexhaustiveExnMatch (enabled): true */
/*    elaborate nonexhaustiveMatch (default): warn */
/*    elaborate nonexhaustiveMatch (enabled): true */
/*    elaborate redundantMatch (default): warn */
/*    elaborate redundantMatch (enabled): true */
/*    elaborate resolveScope (default): strdec */
/*    elaborate resolveScope (enabled): true */
/*    elaborate sequenceNonUnit (default): warn */
/*    elaborate sequenceNonUnit (enabled): true */
/*    elaborate warnUnused (default): true */
/*    elaborate warnUnused (enabled): true */
/*    elaborate only: false */
/*    emit main: true */
/*    export header: None */
/*    exn history: false */
/*    generated output format: executable */
/*    gc check: Limit */
/*    indentation: 3 */
/*    inlineIntoMain: true */
/*    inlineLeafA: {loops = true, repeat = true, size = Some 20} */
/*    inlineLeafB: {loops = true, repeat = true, size = Some 40} */
/*    inlineNonRec: {small = 60, product = 320} */
/*    input file: mlton */
/*    keep CoreML: false */
/*    keep def use: true */
/*    keep dot: false */
/*    keep Machine: false */
/*    keep passes: [] */
/*    keep RSSA: false */
/*    keep SSA: false */
/*    keep SSA2: false */
/*    keep SXML: false */
/*    keep XML: false */
/*    extra_: false */
/*    lib dir: /usr/ports/pobj/mlton-20130715/mlton-on-20130715-release/build/lib */
/*    lib target dir: /usr/ports/pobj/mlton-20130715/mlton-on-20130715-release/build/lib/targets/self */
/*    loop passes: 1 */
/*    mark cards: true */
/*    max function size: 10000 */
/*    mlb path vars: [{var = MLTON_ROOT, path = $(LIB_MLTON_DIR)/sml}, {var = SML_LIB, path = $(LIB_MLTON_DIR)/sml}] */
/*    native commented: 0 */
/*    native live stack: false */
/*    native optimize: 1 */
/*    native move hoist: true */
/*    native copy prop: true */
/*    native copy prop cutoff: 1000 */
/*    native cutoff: 100 */
/*    native live transfer: 8 */
/*    native shuffle: true */
/*    native ieee fp: false */
/*    native split: Some 20000 */
/*    optimizationPasses: [<ssa2::default>, <ssa::default>, <sxml::default>, <xml::default>] */
/*    polyvariance: Some {hofo = true, rounds = 2, small = 30, product = 300} */
/*    prefer abs paths: false */
/*    prof passes: [] */
/*    profile: None */
/*    profile branch: false */
/*    profile C: [] */
/*    profile IL: ProfileSource */
/*    profile include/exclude: [(Seq [Star [.], Or [Seq [Seq [[$], [(], [S], [M], [L], [_], [L], [I], [B], [)]]]], Star [.]], false)] */
/*    profile raise: false */
/*    profile stack: false */
/*    profile val: false */
/*    show basis: None */
/*    show def-use: None */
/*    show types: true */
/*    target: self */
/*    target arch: AMD64 */
/*    target OS: OpenBSD */
/*    type check: false */
/*    verbosity: Pass */
/*    warn unrecognized annotation: true */
/*    warn deprecated features: true */
/*    zone cut depth: 100 */
.text
.p2align 0x4
.globl loopDecs_0
.hidden loopDecs_0
loopDecs_0:
L_171916:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_172324
L_171917:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_450817
L_171918:
	movq 0x8(%rbp),%r15
	movq 0x30(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x20(%r15),%r14
	movq 0x18(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x10(%r15),%r13
	movq 0x8(%r15),%r11
	movq %r11,0x28(%rbp)
	movq 0x0(%r15),%r11
	movq %r11,0x30(%rbp)
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r11
	movq %r11,0x38(%rbp)
	movq 0x8(%r15),%r11
	cmpq $0x1,%r11
	je L_450816
L_171919:
	movq 0x8(%r11),%r15
	movq %r15,0x40(%rbp)
	movq 0x0(%r11),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r11
	shrq $0x1,%r11
	cmpq $0xE99,%r11
	je L_450771
	cmpq $0xE9A,%r11
	je L_450770
L_171920:
	movq (globalObjptr+0x1D90)(%rip),%r11
	movq %r11,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_450770:
L_172152:
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	movq $0x34B7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r15,0x50(%rbp)
	addq $0x10,%r12
	movq %r14,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_172153+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_7
.p2align 0x4
L_450771:
L_171921:
	movq 0x10(%r15),%r11
	movq %r11,0x30(%rbp)
	movq 0x8(%r15),%r11
	movq %r11,0x48(%rbp)
	movq 0x0(%r15),%r11
	movq 0xFFFFFFFFFFFFFFF8(%r11),%rax
	shrq $0x1,%rax
	subq $0xE9E,%rax
	cmpq $0xA,%rax
	ja L_450772
	leaq jumpTable_585(%rip),%rbx
	jmp *(%rbx,%rax,8)
.data
.p2align 0x4
jumpTable_585:
.quad L_450814,L_450813,L_450812,L_450811,L_450809,L_450782,L_450781,L_450780,L_450778,L_450774,L_450773
.text
.p2align 0x4
L_450772:
L_171922:
	movq 0x10(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r11),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq %r14,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_171923+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1654
.p2align 0x4
L_450773:
L_172129:
	movq 0x0(%r11),%r15
	movq %r15,0x18(%rbp)
	movq 0x10(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x50(%rbp)
	movq 0x8(%r11),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x58(%rbp)
	movq %r13,0x68(%rbp)
	movq %r14,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_172130+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1654
.p2align 0x4
L_450774:
L_172095:
	movq 0x10(%r11),%r15
	movq %r15,0x28(%rbp)
	movq 0x8(%r11),%r15
	movq %r15,0x50(%rbp)
	movq 0x0(%r11),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1235,%r14
	je L_450776
L_172122:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_450775
L_172124:
	movl %r13d,0x68(%rbp)
	movq $0x385B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x10(%r15)
	addq $0x20,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_172125+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_33
.p2align 0x4
L_450775:
L_171945:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_450776:
L_172096:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_171945
L_172098:
	movl %r13d,0x68(%rbp)
	movq $0x3935,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_172099+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_34
.p2align 0x4
L_450778:
L_172080:
	movq 0x10(%r11),%r15
	movq %r15,0x18(%rbp)
	movq 0x8(%r11),%r15
	movq %r15,0x28(%rbp)
	movq 0x0(%r11),%r15
	cmpq $0x1,%r15
	je L_450779
L_172081:
	movq 0x10(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x70(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x50(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x58(%rbp)
	movq %r14,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_172082+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1654
.p2align 0x4
L_450779:
L_172094:
	movq $0x1,%r15
L_172088:
	movq $0x1D4D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x20,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%r14)
	movq %r14,0x10(%rbp)
L_171929:
	movq 0x30(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_171930+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bind_1
.p2align 0x4
L_450780:
L_172079:
	movq %r11,0x10(%rbp)
	jmp L_171929
.p2align 0x4
L_450781:
L_172066:
	movq 0x10(%r11),%r15
	movq %r15,0x58(%rbp)
	movq 0x8(%r11),%r15
	movq %r15,0x10(%rbp)
	movq 0x0(%r11),%r15
	movq %r15,0x28(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_172067+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loopDecs_0
.p2align 0x4
L_450782:
L_171983:
	movq 0x18(%r11),%r10
	movq %r10,0x10(%rbp)
	movq 0x10(%r11),%r10
	movq %r10,0x18(%rbp)
	movq 0x8(%r11),%r10
	movq %r10,0x50(%rbp)
	movq 0x10(%r13),%r14
	movq 0x8(%r13),%r15
	movq %r15,0x58(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x60(%rbp)
	movq 0x30(%rbp),%r11
	movq 0x10(%r11),%r10
	movq %r10,0x68(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_171984
L_171985:
	movq %r15,0x0(%r11)
	movq 0x0(%r10),%r11
	cmpq $0x1,%r11
	je L_450807
L_171986:
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r11
	movl $0x0,0x70(%rbp)
	movq %r11,%r15
.p2align 0x4,,0x7
L_171988:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_450806
L_172024:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xCE1,%r11
	jne L_450805
L_172025:
	movq 0x8(%r13),%r11
	movq %r11,0x78(%rbp)
	cmpq %r14,0x0(%r13)
	movq %r14,(localObjptr+0x0)(%rip)
	je L_450787
L_171989:
	movl 0x70(%rbp),%r11d
	incl %r11d
	jo L_450786
L_171991:
	cmpq $0x1,%r15
	je L_450783
L_171992:
	movl %r11d,0x70(%rbp)
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x0)(%rip),%r14
	jmp L_171988
.p2align 0x4
L_450783:
	movl %r11d,%ecx
L_171994:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_450785
L_171996:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_171998
L_172023:
	movl %ecx,0x0(%r15)
L_171998:
	movq 0x60(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_171999+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bind_1
.p2align 0x4
L_450785:
L_171995:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_450786:
L_171990:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_450787:
L_172027:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_172028
L_172063:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_172064+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_172064
.p2align 0x4
.long 0x2337
L_172064:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_172028:
	movl 0x70(%rbp),%r14d
	movslq %r14d,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_171995
L_172029:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %r14d,0x0(%r13)
	jl L_450802
L_172030:
	movq 0x78(%rbp),%r15
L_172031:
	movl 0x4(%r15),%r13d
	testl %r13d,%r13d
	jz L_171998
L_172033:
	movq $0x2805,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x60(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq 0x58(%rbp),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x70(%rbp)
	movq 0x0(%r13),%r14
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_450800
L_172034:
	movq %r15,0x0(%r13)
	movq 0x68(%rbp),%r13
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_450799
L_172035:
	movq 0x0(%r11),%r15
	movq 0x8(%r11),%r11
	movq %r15,0x58(%rbp)
	movl $0x0,0x78(%rbp)
	movq %r11,%r15
.p2align 0x4,,0x7
L_172037:
	movq 0x58(%rbp),%r13
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_450798
L_172050:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xCE2,%r11
	jne L_450797
L_172051:
	cmpq %r14,0x0(%r13)
	movq %r14,(localObjptr+0x0)(%rip)
	je L_450793
L_172038:
	movl 0x78(%rbp),%r13d
	incl %r13d
	movl %r13d,0x58(%rbp)
	jo L_171990
L_172039:
	cmpq $0x1,%r15
	je L_450788
L_172040:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movl %r13d,0x78(%rbp)
	movq %r14,0x58(%rbp)
	movq (localObjptr+0x0)(%rip),%r14
	jmp L_172037
.p2align 0x4
L_450788:
L_172041:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_172042
L_172048:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_172049+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_172049
.p2align 0x4
.long 0x2335
L_172049:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_172042:
	movl 0x58(%rbp),%ecx
L_172043:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_171995
L_172044:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_172046
L_172047:
	movl %ecx,0x0(%r15)
L_172046:
	movq $0x19C5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x68(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
L_172001:
	movq $0x55F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x60(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_172002+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loopDecs_0
.p2align 0x4
L_450793:
L_172053:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_172054
L_172059:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_172060+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_172060
.p2align 0x4
.long 0x2336
L_172060:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_172054:
	movl 0x78(%rbp),%r14d
	movslq %r14d,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_171995
L_172055:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %r14d,0x0(%r13)
	jl L_450794
L_172056:
	movq 0x58(%rbp),%r15
L_172057:
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_172001
.p2align 0x4
L_450794:
L_172058:
	movq (globalObjptr+0x1078)(%rip),%r14
	movl 0x78(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movq 0x58(%rbp),%r15
	jmp L_172057
.p2align 0x4
L_450797:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_172038
.p2align 0x4
L_450798:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_172038
.p2align 0x4
L_450799:
L_172061:
	xorl %ecx,%ecx
	jmp L_172043
.p2align 0x4
L_450800:
L_171984:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_450802:
L_172062:
	movq (globalObjptr+0x1078)(%rip),%r14
	movl 0x70(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movq 0x78(%rbp),%r15
	jmp L_172031
.p2align 0x4
L_450805:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_171989
.p2align 0x4
L_450806:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_171989
.p2align 0x4
L_450807:
L_172065:
	xorl %ecx,%ecx
	jmp L_171994
.p2align 0x4
L_450809:
L_171976:
	movq 0x10(%r11),%r15
	movq %r15,0x10(%rbp)
	movq 0x8(%r11),%r15
	movq %r15,0x18(%rbp)
	movq 0x0(%r11),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r13,%r10
	jne L_171945
L_171978:
	movl %r11d,0x60(%rbp)
	movq $0x39CD,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r13,0x58(%rbp)
	addq $0x18,%r12
	addq $0x58,%rbp
	leaq (L_171979+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_35
.p2align 0x4
L_450811:
L_171975:
	movq %r11,0x10(%rbp)
	jmp L_171929
.p2align 0x4
L_450812:
L_171963:
	movl 0x0(%r11),%r15d
	movl %r15d,0x18(%rbp)
	movq 0x10(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x8(%r11),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movq %r14,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_171964+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1654
.p2align 0x4
L_450813:
L_171951:
	movl 0x0(%r11),%r15d
	movl %r15d,0x18(%rbp)
	movq 0x10(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x8(%r11),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movq %r14,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_171952+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1654
.p2align 0x4
L_450814:
L_171943:
	movq 0x0(%r11),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r10,%r13
	jne L_171945
L_171946:
	movl %r11d,0x60(%rbp)
	movq $0x39CD,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r13,0x58(%rbp)
	addq $0x18,%r12
	addq $0x58,%rbp
	leaq (L_171947+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_35
.p2align 0x4
L_450816:
L_172312:
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x38(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x20(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq %r13,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_172313+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1654
.p2align 0x4
L_450817:
L_172324:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_172325+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_172325
.p2align 0x4
.long 0x45F
L_172325:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_171918
.p2align 0x4
.long 0xE92
L_172153:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_172154
L_172310:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_172311+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_172311
.p2align 0x4
.long 0xE90
L_172311:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_172154:
	movq $0x55F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x40(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_172155+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loopDecs_0
.p2align 0x4
.long 0xA2F
L_171923:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1402,%r14
	je L_450820
L_171942:
	movq 0x0(%r15),%r15
	movq %r15,0x10(%rbp)
mono_1:
	movq $0x1,0x58(%rbp)
	movl $0x0,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_171927+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_2
.p2align 0x4
L_450820:
L_171924:
	movq 0x28(%rbp),%r14
	movq 0x18(%r14),%r13
	movq %r13,0x50(%rbp)
	movq 0x18(%rbp),%r14
	movq %r14,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_171925+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0xA33
L_172130:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1402,%r14
	je L_450821
L_172151:
	movq 0x0(%r15),%r15
	movq %r15,0x10(%rbp)
mono_6:
	movq $0x1,0x60(%rbp)
	movl $0x0,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_172134+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_2
.p2align 0x4
L_450821:
L_172131:
	movq 0x58(%rbp),%r14
	movq 0x18(%r14),%r13
	movq %r13,0x60(%rbp)
	movq 0x50(%rbp),%r14
	movq %r14,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_172132+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x9D2
L_172125:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_172126
L_172127:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_172128+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_172128
.p2align 0x4
.long 0x85C
L_172128:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_172126:
	movq $0x246D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x18(%rbp)
L_172101:
	movq 0x10(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x60(%rbp)
	movq %r14,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_172102+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1654
.p2align 0x4
.long 0x8A6
L_172099:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_172100
L_172120:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_172121+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_172121
.p2align 0x4
.long 0x9E0
L_172121:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_172100:
	movq $0x246B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x18(%rbp)
	jmp L_172101
.p2align 0x4
.long 0xA33
L_172082:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1402,%r14
	je L_450824
L_172093:
	movq 0x0(%r15),%r15
	movq %r15,0x10(%rbp)
mono_4:
	movq $0x1,0x58(%rbp)
	movl $0x0,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_172086+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_2
.p2align 0x4
L_450824:
L_172083:
	movq 0x58(%rbp),%r14
	movq 0x18(%r14),%r13
	movq %r13,0x60(%rbp)
	movq 0x50(%rbp),%r14
	movq %r14,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_172084+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x1A1D
L_171930:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_171931
L_171936:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_171937+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_171937
.p2align 0x4
.long 0x232F
L_171937:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_171931:
	movq $0x55F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x58(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_171932+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loopDecs_0
.p2align 0x4
.long 0xB65
L_172067:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_172068
L_172077:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_172078+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_172078
.p2align 0x4
.long 0x9E0
L_172078:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_172068:
	movq $0x55F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x60(%rbp)
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_172069+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bind_1
.p2align 0x4
.long 0x8A6
L_171999:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_172001
L_172021:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_172022+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_172022
.p2align 0x4
.long 0x85C
L_172022:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	jmp L_172001
.p2align 0x4
.long 0x2334
L_172002:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_172003+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1654
.p2align 0x4
.long 0x1FDF
L_171979:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_171980
L_171981:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_171982+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_171982
.p2align 0x4
.long 0x8A7
L_171982:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_171980:
	movq $0x1D45,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0x10(%rbp)
	jmp L_171929
.p2align 0x4
.long 0x2331
L_171964:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1402,%r14
	je L_450829
L_171974:
	movq 0x0(%r15),%r15
	movq %r15,0x10(%rbp)
mono_3:
	movq $0x1,0x58(%rbp)
	movl $0x0,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_171968+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_2
.p2align 0x4
L_450829:
L_171965:
	movq 0x50(%rbp),%r14
	movq 0x18(%r14),%r13
	movq %r13,0x58(%rbp)
	movq 0x28(%rbp),%r14
	movq %r14,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_171966+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x2331
L_171952:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1402,%r14
	je L_450830
L_171962:
	movq 0x0(%r15),%r15
	movq %r15,0x10(%rbp)
mono_2:
	movq $0x1,0x58(%rbp)
	movl $0x0,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_171956+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_2
.p2align 0x4
L_450830:
L_171953:
	movq 0x50(%rbp),%r14
	movq 0x18(%r14),%r13
	movq %r13,0x58(%rbp)
	movq 0x28(%rbp),%r14
	movq %r14,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_171954+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x2330
L_171947:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_171948
L_171949:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_171950+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_171950
.p2align 0x4
.long 0x10E4
L_171950:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_171948:
	movq $0x1D3D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x10(%rbp)
	jmp L_171929
.p2align 0x4
.long 0x519
L_172313:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1402,%r14
	je L_450832
L_172323:
	movq 0x0(%r15),%r14
	movq %r14,0x0(%rbp)
mono_8:
	movq $0x1,0x10(%rbp)
	movl $0x0,0x18(%rbp)
	addq $0x10,%rbp
	leaq (L_172317+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_2
.p2align 0x4
L_450832:
L_172314:
	movq 0x20(%rbp),%r14
	movq 0x18(%r14),%r13
	movq %r13,0x30(%rbp)
	movq 0x18(%rbp),%r14
	movq %r14,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_172315+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0xBC0
L_172155:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%rdx
	movq %rdx,0x18(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x10(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x40(%rbp)
	cmpq %rdx,%r14
	jne L_171945
L_172157:
	cmpq $0x0,%rdx
	sete %bl
	movzbl %bl,%ebx
	movl %ebx,0x48(%rbp)
	je L_450875
L_172158:
	cmpq $0x7FFFFFFF,%rdx
	ja L_172212
L_172159:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x151F,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_172160+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_172160
.p2align 0x4
.long 0x1DC8
L_172160:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq %rax,0x50(%rbp)
L_172161:
	movl $0x0,0x4C(%rbp)
	movq $0x0,0x58(%rbp)
loop_1729:
	movq 0x40(%rbp),%r15
	cmpq %r15,0x58(%rbp)
	jl L_450873
L_172162:
	movq 0x50(%rbp),%r15
	movq $0x17A1,0xFFFFFFFFFFFFFFF8(%r15)
	movslq 0x4C(%rbp),%rdx
	movq %rdx,0x58(%rbp)
	testq %rdx,%rdx
	jz L_450872
L_172163:
	cmpq $0x7FFFFFFF,%rdx
	ja L_172212
L_172164:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x151D,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_172165+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_172165
.p2align 0x4
.long 0x2342
L_172165:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq %rax,0x60(%rbp)
L_172166:
	xorl %ecx,%ecx
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_1730:
	cmpq 0x58(%rbp),%r15
	jnl L_450836
.p2align 0x4,,0x7
loop_1739:
	movslq %ecx,%r14
	movq 0x50(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r11
	cmpq $0x1,%r11
	jne L_450834
L_172293:
	incl %ecx
	jo L_171990
L_172294:
	jmp loop_1739
.p2align 0x4
L_450834:
L_172291:
	incl %ecx
	jo L_171990
L_172292:
	movq 0x60(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r11,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_1730
.p2align 0x4
L_450836:
L_172167:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_172168
L_172288:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_172289+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_172289
.p2align 0x4
.long 0x234E
L_172289:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_172168:
	movq 0x60(%rbp),%r15
	movq $0x97,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x2809,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq %r14,0x50(%rbp)
	movl 0x48(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_450869
L_172169:
	movq 0x40(%rbp),%rdx
	cmpq $0x7FFFFFFF,%rdx
	ja L_172212
L_172170:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x152D,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_172171+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_172171
.p2align 0x4
.long 0x2343
L_172171:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq %rax,0x48(%rbp)
L_172172:
	movl $0x0,0x58(%rbp)
	movq $0x0,0x60(%rbp)
loop_1731:
	movq 0x40(%rbp),%r15
	cmpq %r15,0x60(%rbp)
	jl L_450867
L_172173:
	movq 0x48(%rbp),%r15
	movq $0x17A3,0xFFFFFFFFFFFFFFF8(%r15)
	movslq 0x58(%rbp),%rdx
	movq %rdx,0x10(%rbp)
	testq %rdx,%rdx
	jz L_450866
L_172174:
	cmpq $0x7FFFFFFF,%rdx
	ja L_172212
L_172175:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x152F,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_172176+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_172176
.p2align 0x4
.long 0x2344
L_172176:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq %rax,0x28(%rbp)
L_172177:
	xorl %ecx,%ecx
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_1732:
	cmpq 0x10(%rbp),%r15
	jnl L_450840
.p2align 0x4,,0x7
loop_1738:
	movslq %ecx,%r14
	movq 0x48(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r11
	cmpq $0x1,%r11
	jne L_450838
L_172273:
	incl %ecx
	jo L_171990
L_172274:
	jmp loop_1738
.p2align 0x4
L_450838:
L_172271:
	movq 0x8(%r11),%r14
	movq 0x0(%r11),%r13
	incl %ecx
	jo L_171990
L_172272:
	movq %r15,%r11
	movq %r15,%r10
	movq 0x28(%rbp),%r9
	movq %r9,%r8
	shrq $0x8,%r8
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r8,1)
	salq $0x4,%r11
	movq %r14,0x0(%r9,%r11,1)
	movq %r9,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%rsp,%r14,1)
	salq $0x4,%r10
	movq %r13,0x8(%r9,%r10,1)
	incq %r15
	jmp loop_1732
.p2align 0x4
L_450840:
L_172178:
	movq 0x28(%rbp),%r15
	movq $0x959,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x10(%rbp)
	movslq %r13d,%r11
	movq %r11,0x40(%rbp)
	cmpq %r11,%r14
	jne L_171945
L_172180:
	cmpl $0x0,%r13d
	jl L_450863
L_172181:
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	movl $0x0,0x14(%rbp)
.p2align 0x4,,0x7
loop_1733:
	movl 0x14(%rbp),%r14d
	cmpl 0x10(%rbp),%r14d
	jnl L_450843
L_172235:
	movslq %r14d,%r15
	movq %r15,%r14
	salq $0x4,%r14
	movq 0x28(%rbp),%r13
	movq 0x0(%r13,%r14,1),%r11
	movq %r11,0x50(%rbp)
	salq $0x4,%r15
	movq 0x8(%r13,%r15,1),%r14
	movq 0x0(%r14),%r10
	movq %r10,0x58(%rbp)
	cmpq $0x1,%r11
	jne L_450841
L_172268:
	movq 0x48(%rbp),%r15
.p2align 0x4,,0x7
L_172253:
	movq %r15,0x48(%rbp)
	incl 0x14(%rbp)
	jmp loop_1733
.p2align 0x4
L_450841:
L_172236:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_172237
L_172266:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_172267+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_172267
.p2align 0x4
.long 0x234B
L_172267:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_172237:
	movq 0x50(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq 0x48(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq %r14,0x48(%rbp)
	movq %r13,%r15
L_172238:
	movq $0x4003,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x10(%r14)
	addq $0x30,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x30(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x58(%rbp),%r15
	movq %r15,0x18(%r14)
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%r14)
	movq %r14,0x68(%rbp)
	movl 0x10(%rbp),%r15d
	movl %r15d,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_172239+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
L_450843:
L_172182:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_172183
L_172233:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_172234+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_172234
.p2align 0x4
.long 0x2346
L_172234:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_172183:
	movq 0x48(%rbp),%r15
	cmpq $0x1,%r15
	je L_450861
L_172184:
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq $0x1,0x30(%rbp)
.p2align 0x4,,0x7
L_172185:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_450860
.p2align 0x4,,0x7
L_172186:
	movq 0x28(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq $0xF31,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x18,%r12
	movq %r15,0x8(%r13)
	movq $0x29A7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r13,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_450844
L_172187:
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x28(%rbp)
	jmp L_172185
.p2align 0x4
L_450844:
L_172188:
	movq %r13,0x28(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq $0x1,0x30(%rbp)
.p2align 0x4,,0x7
L_172189:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_450859
.p2align 0x4,,0x7
L_172190:
	movq $0x29A7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_450845
L_172191:
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x28(%rbp)
	jmp L_172189
.p2align 0x4
L_450845:
L_172192:
	movq 0x30(%rbp),%r13
	cmpq $0x1,%r13
	je L_450853
L_172193:
	movq 0x28(%rbp),%r11
	xorq %r15,%r15
	xchgq %r11,%r14
.p2align 0x4,,0x7
L_172194:
	addq 0x0(%r14),%r15
	movq %r15,0x20(%rbp)
	cmpq $0x1,%r13
	je L_450846
L_172195:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	jmp L_172194
.p2align 0x4
L_450846:
L_172196:
	testq %r15,%r15
	jz L_450852
L_172197:
	cmpq $0x7FFFFFFF,%r15
	ja L_450851
L_172198:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x151D,%rcx
	movq %r15,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_172199+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_172199
.p2align 0x4
.long 0x605
L_172199:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq %rax,0x40(%rbp)
L_172200:
	movq 0x30(%rbp),%r11
	movq 0x28(%rbp),%r13
	xorq %r14,%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_1734:
	cmpq 0x20(%rbp),%r15
	jnl L_450849
.p2align 0x4,,0x7
loop_1735:
	cmpq 0x0(%r13),%r14
	jl L_450848
L_172207:
	cmpq $0x1,%r11
	je L_450847
L_172208:
	movq 0x0(%r11),%r10
	movq 0x8(%r11),%r11
	xorq %r14,%r14
	movq %r10,%r13
	jmp loop_1735
.p2align 0x4
L_450847:
L_172209:
	movq (globalObjptr+0x5B8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_450848:
L_172210:
	movq 0x8(%r13),%r10
	movq 0x0(%r10,%r14,8),%r9
	incq %r14
	movq 0x40(%rbp),%r10
	movq %r10,%r8
	shrq $0x8,%r8
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r8,1)
	movq %r9,0x0(%r10,%r15,8)
	incq %r15
	jmp loop_1734
.p2align 0x4
L_450849:
L_172201:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_172202
L_172204:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_172205+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_172205
.p2align 0x4
.long 0x2345
L_172205:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_172202:
	movq 0x40(%rbp),%r15
	movq $0x97,0xFFFFFFFFFFFFFFF8(%r15)
L_172203:
	movq (globalObjptr+0xEF8)(%rip),%r14
	movq $0x59,0xFFFFFFFFFFFFFFF8(%r14)
	movq $0x1D35,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x18,%r12
	movq %r14,0x8(%r13)
	movq $0x1D39,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x8(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_450851:
L_172212:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_450852:
L_172213:
	movq (globalObjptr+0x1DB8)(%rip),%r14
	movq %r14,0x40(%rbp)
	jmp L_172200
.p2align 0x4
L_450853:
L_172214:
	movq 0x28(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r13,0x30(%rbp)
	cmpq %r13,0xFFFFFFFFFFFFFFF0(%r14)
	movq %r14,0x20(%rbp)
	je L_450858
L_172215:
	testq %r13,%r13
	jz L_450857
L_172216:
	cmpq $0x7FFFFFFF,%r13
	ja L_172212
L_172217:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x151D,%rcx
	movq %r13,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_172218+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_172218
.p2align 0x4
.long 0x793
L_172218:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq %rax,0x28(%rbp)
L_172219:
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_1736:
	cmpq 0x30(%rbp),%r15
	jnl L_450854
L_172224:
	movq 0x20(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x28(%rbp),%r14
	movq %r14,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r13,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_1736
.p2align 0x4
L_450854:
L_172220:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_172221
L_172222:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_172223+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_172223
.p2align 0x4
.long 0x606
L_172223:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_172221:
	movq 0x28(%rbp),%r15
	movq $0x97,0xFFFFFFFFFFFFFFF8(%r15)
	jmp L_172203
.p2align 0x4
L_450857:
L_172226:
	movq (globalObjptr+0x1DC0)(%rip),%r15
	movq %r15,0x28(%rbp)
	jmp L_172219
.p2align 0x4
L_450858:
L_172227:
	movq 0x20(%rbp),%r15
	jmp L_172203
.p2align 0x4
L_450859:
L_172228:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_172229+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_172229
.p2align 0x4
.long 0x5E7
L_172229:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_172190
.p2align 0x4
L_450860:
L_172230:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_172231+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_172231
.p2align 0x4
.long 0x5E7
L_172231:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_172186
.p2align 0x4
L_450861:
L_172232:
	movq (globalObjptr+0x1DC8)(%rip),%r14
	movq $0x97,0xFFFFFFFFFFFFFFF8(%r14)
	xchgq %r14,%r15
	jmp L_172203
.p2align 0x4
L_450863:
L_172269:
	movq (globalObjptr+0x4F8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_450866:
L_172276:
	movq (globalObjptr+0x1DB0)(%rip),%r15
	movq %r15,0x28(%rbp)
	jmp L_172177
.p2align 0x4
L_450867:
L_172277:
	movq 0x60(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x10(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x68(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x78(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_172278+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1654
.p2align 0x4
L_450869:
L_172287:
	movq (globalObjptr+0x1DA8)(%rip),%r15
	movq %r15,0x48(%rbp)
	jmp L_172172
.p2align 0x4
L_450872:
L_172296:
	movq (globalObjptr+0x1DA0)(%rip),%r15
	movq %r15,0x60(%rbp)
	jmp L_172166
.p2align 0x4
L_450873:
L_172297:
	movq 0x58(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x10(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x78(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x60(%rbp)
	movq 0x10(%r13),%r11
	movq %r11,0x68(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_172298+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1654
.p2align 0x4
L_450875:
L_172309:
	movq (globalObjptr+0x1D98)(%rip),%r15
	movq %r15,0x50(%rbp)
	jmp L_172161
.p2align 0x4
.long 0x10E2
L_171927:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_171928
L_171938:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_171939+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_171939
.p2align 0x4
.long 0x1B6F
L_171939:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_171928:
	movq $0x9B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1D3B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x10(%rbp)
	addq $0x10,%r12
	jmp L_171929
.p2align 0x4
.long 0x1B65
L_171925:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movl 0x60(%rbp),%r15d
	movl %r15d,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_171926
L_171940:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_171941+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_171941
.p2align 0x4
.long 0x1B67
L_171941:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_171926:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x18(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq 0x50(%rbp),%r15
	movq %r15,0x18(%r13)
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x8(%r11)
	addq $0x18,%r12
	movq %r13,0x0(%r11)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r14,1)
	movq %r11,0x0(%r15)
	movq %r13,0x10(%rbp)
	jmp mono_1
.p2align 0x4
.long 0x8A6
L_172134:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_172135
L_172147:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_172148+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_172148
.p2align 0x4
.long 0x9E0
L_172148:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_172135:
	movq $0x9B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x60(%rbp)
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x68(%rbp)
	movq %r14,0x78(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_172136+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1654
.p2align 0x4
.long 0x9E1
L_172132:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movl 0x70(%rbp),%r15d
	movl %r15d,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_172133
L_172149:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_172150+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_172150
.p2align 0x4
.long 0x18BA
L_172150:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_172133:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x58(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq 0x60(%rbp),%r15
	movq %r15,0x18(%r13)
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x8(%r11)
	addq $0x18,%r12
	movq %r13,0x0(%r11)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r14,1)
	movq %r11,0x0(%r15)
	movq %r13,0x10(%rbp)
	jmp mono_6
.p2align 0x4
.long 0x233C
L_172102:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1402,%r14
	je L_450881
L_172119:
	movq 0x0(%r15),%r15
	movq %r15,0x10(%rbp)
mono_5:
	movq $0x1,0x60(%rbp)
	movl $0x0,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_172106+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_2
.p2align 0x4
L_450881:
L_172103:
	movq 0x60(%rbp),%r14
	movq 0x18(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0x58(%rbp),%r14
	movq %r14,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_172104+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0xB65
L_172086:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_172087
L_172089:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_172090+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_172090
.p2align 0x4
.long 0x85C
L_172090:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_172087:
	movq $0x9B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_172088
.p2align 0x4
.long 0x233B
L_172084:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movl 0x70(%rbp),%r15d
	movl %r15d,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_172085
L_172091:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_172092+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_172092
.p2align 0x4
.long 0xC37
L_172092:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_172085:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x50(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq 0x60(%rbp),%r15
	movq %r15,0x18(%r13)
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x8(%r11)
	addq $0x18,%r12
	movq %r13,0x0(%r11)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r14,1)
	movq %r11,0x0(%r15)
	movq %r13,0x10(%rbp)
	jmp mono_4
.p2align 0x4
.long 0xDF1
L_171932:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_171933
L_171934:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_171935+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_171935
.p2align 0x4
.long 0xDF0
L_171935:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_171933:
	movq $0x1D33,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x10(%r15)
	movq $0x1D39,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x8(%r14)
	movq %r14,0x8(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x2338
L_172069:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_172070
L_172075:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_172076+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_172076
.p2align 0x4
.long 0x233A
L_172076:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_172070:
	movq $0x1107,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x28(%rbp)
	addq $0x18,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_172071+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loopDecs_0
.p2align 0x4
.long 0x8E9
L_172003:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1402,%r14
	je L_450886
L_172015:
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_172016+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bind_1
.p2align 0x4
L_450886:
L_172004:
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_450887
L_172005:
	movq 0x8(%r14),%r15
	movq %r15,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x30(%rbp)
L_172006:
	movq 0x50(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_172007+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bind_1
.p2align 0x4
L_450887:
L_172014:
	movq 0x38(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x10E2
L_171968:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_171969
L_171970:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_171971+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_171971
.p2align 0x4
.long 0xFB8
L_171971:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_171969:
	movq $0x9B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1D41,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl 0x18(%rbp),%r15d
	movl %r15d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	jmp L_171929
.p2align 0x4
.long 0x2332
L_171966:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movl 0x68(%rbp),%r15d
	movl %r15d,0x1C(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_171967
L_171972:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_171973+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_171973
.p2align 0x4
.long 0x2333
L_171973:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_171967:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x1C(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq 0x58(%rbp),%r15
	movq %r15,0x18(%r13)
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x8(%r11)
	addq $0x18,%r12
	movq %r13,0x0(%r11)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r14,1)
	movq %r11,0x0(%r15)
	movq %r13,0x10(%rbp)
	jmp mono_3
.p2align 0x4
.long 0x10E2
L_171956:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_171957
L_171958:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_171959+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_171959
.p2align 0x4
.long 0xFB8
L_171959:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_171957:
	movq $0x9B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1D3F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl 0x18(%rbp),%r15d
	movl %r15d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	jmp L_171929
.p2align 0x4
.long 0x2332
L_171954:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movl 0x68(%rbp),%r15d
	movl %r15d,0x1C(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_171955
L_171960:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_171961+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_171961
.p2align 0x4
.long 0x2333
L_171961:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_171955:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x1C(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq 0x58(%rbp),%r15
	movq %r15,0x18(%r13)
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x8(%r11)
	addq $0x18,%r12
	movq %r13,0x0(%r11)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r14,1)
	movq %r11,0x0(%r15)
	movq %r13,0x10(%rbp)
	jmp mono_2
.p2align 0x4
.long 0x4AF
L_172317:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_172318
L_172319:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_172320+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_172320
.p2align 0x4
.long 0x45F
L_172320:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_172318:
	movq $0x9B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x5F1
L_172315:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movl 0x40(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_172316
L_172321:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_172322+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_172322
.p2align 0x4
.long 0x782
L_172322:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_172316:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x38(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq 0x30(%rbp),%r15
	movq %r15,0x18(%r13)
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r14,0x8(%r11)
	movq %r13,0x0(%rbp)
	addq $0x18,%r12
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq %r11,0x0(%r15)
	jmp mono_8
.p2align 0x4
.long 0xA92
L_172239:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_172240
L_172264:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_172265+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_172265
.p2align 0x4
.long 0x2347
L_172265:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_172240:
	movq 0x60(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_171945
L_172242:
	cmpl 0x10(%rbp),%r13d
	je L_450894
L_172243:
	movq (globalObjptr+0x4E0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_450894:
L_172244:
	movq 0x40(%rbp),%r15
	testq %r15,%r15
	jz L_450899
L_172245:
	cmpq $0x7FFFFFFF,%r15
	ja L_172212
L_172246:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_172247
L_172260:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_172261+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_172261
.p2align 0x4
.long 0x2347
L_172261:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_172247:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x151D,%rcx
	movq 0x40(%rbp),%rdx
	movq $0x48,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_172248+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_172248
.p2align 0x4
.long 0x2347
L_172248:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq %rax,0x68(%rbp)
L_172249:
	movq $0x0,0x70(%rbp)
loop_1737:
	movq 0x40(%rbp),%r14
	cmpq %r14,0x70(%rbp)
	jl L_450896
L_172250:
	movq 0x68(%rbp),%r14
	movq $0x97,0xFFFFFFFFFFFFFFF8(%r14)
	movq $0x2809,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_172253
L_172251:
	movq %r15,0x50(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	jmp L_172238
.p2align 0x4
L_450896:
L_172254:
	movq 0x70(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq %r15,%r14
	salq $0x4,%r14
	movq 0x60(%rbp),%r13
	movq 0x0(%r13,%r15,8),%r11
	movq %r11,0x78(%rbp)
	movq 0x28(%rbp),%r15
	movq 0x8(%r15,%r14,1),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x80(%rbp)
	movq 0x10(%r13),%r11
	movq 0x10(%r11),%r10
	movq %r10,0x88(%rbp)
	movq 0x18(%r11),%r10
	movq %r10,0x90(%rbp)
	movq 0x20(%r11),%r10
	movq %r10,0xA0(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0xA8(%rbp)
	addq $0xA0,%rbp
	leaq (L_172255+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bind_1
.p2align 0x4
L_450899:
L_172263:
	movq (globalObjptr+0x1DD0)(%rip),%r14
	movq %r14,0x68(%rbp)
	jmp L_172249
.p2align 0x4
.long 0x234C
L_172278:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x70(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_172279
L_172284:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_172285+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_172285
.p2align 0x4
.long 0x234D
L_172285:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_172279:
	movq 0x70(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1402,%r15
	je L_450902
L_172283:
	movl 0x58(%rbp),%ecx
	movq $0x1,%r15
L_172282:
	movl %ecx,0x58(%rbp)
	movq 0x48(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x60(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x60(%rbp)
	jmp loop_1731
.p2align 0x4
L_450902:
L_172280:
	movq 0x70(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x280B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movl 0x58(%rbp),%ecx
	incl %ecx
	jo L_171990
L_172281:
	jmp L_172282
.p2align 0x4
.long 0x234F
L_172298:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1402,%r14
	je L_450905
L_172301:
	movq 0x0(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x68(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x98(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0xA0(%rbp)
	addq $0x98,%rbp
	leaq (L_172302+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bind_1
.p2align 0x4
L_450905:
L_172299:
	movl 0x4C(%rbp),%ecx
	movq $0x1,%r14
	xchgq %r14,%r15
L_172300:
	movl %ecx,0x4C(%rbp)
	movq 0x50(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x58(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x58(%rbp)
	jmp loop_1729
.p2align 0x4
.long 0x233E
L_172136:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1402,%r14
	je L_450906
L_172146:
	movq 0x0(%r15),%r15
	movq %r15,0x10(%rbp)
mono_7:
	movq $0x1,0x70(%rbp)
	movl $0x0,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_172140+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_2
.p2align 0x4
L_450906:
L_172137:
	movq 0x68(%rbp),%r14
	movq 0x18(%r14),%r13
	movq %r13,0x18(%rbp)
	movq 0x50(%rbp),%r14
	movq %r14,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_172138+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x1FE5
L_172106:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_172107
L_172115:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_172116+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_172116
.p2align 0x4
.long 0x85C
L_172116:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_172107:
	movq $0x9B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x58(%rbp)
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x50(%rbp),%r15
	cmpq $0x1,%r15
	je L_450907
L_172108:
	movq %r15,0x68(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_172109+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loopDecs_0
.p2align 0x4
L_450907:
L_172114:
	movq $0x1,%r14
	xchgq %r14,%r15
L_172111:
	movq $0x1D4F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x20,%r12
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x58(%rbp),%r15
	movq %r15,0x10(%r14)
	movq %r14,0x10(%rbp)
	jmp L_171929
.p2align 0x4
.long 0x8A6
L_172104:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movl 0x60(%rbp),%r15d
	movl %r15d,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_172105
L_172117:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_172118+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_172118
.p2align 0x4
.long 0x1828
L_172118:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_172105:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x58(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq 0x28(%rbp),%r15
	movq %r15,0x18(%r13)
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x8(%r11)
	addq $0x18,%r12
	movq %r13,0x0(%r11)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r14,1)
	movq %r11,0x0(%r15)
	movq %r13,0x10(%rbp)
	jmp mono_5
.p2align 0x4
.long 0x2339
L_172071:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_172072
L_172073:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_172074+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_172074
.p2align 0x4
.long 0xC37
L_172074:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_172072:
	movq $0x55F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1D49,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x20,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x60(%rbp),%r15
	movq %r15,0x10(%r14)
	movq %r14,0x10(%rbp)
	jmp L_171929
.p2align 0x4
.long 0xB2C
L_172016:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_172017+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loopDecs_0
.p2align 0x4
.long 0x8A6
L_172007:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_172008+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loopDecs_0
.p2align 0x4
.long 0x2348
L_172255:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r15
	movq %r15,0x98(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0xA8(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0xB0(%rbp)
	addq $0xA8,%rbp
	leaq (L_172256+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loopDecs_0
.p2align 0x4
.long 0x2350
L_172302:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x98(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0xA0(%rbp)
	addq $0x98,%rbp
	leaq (L_172303+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loopDecs_0
.p2align 0x4
.long 0x2340
L_172140:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_172141
L_172142:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_172143+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_172143
.p2align 0x4
.long 0x2341
L_172143:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_172141:
	movq $0x9B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1D51,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x60(%rbp),%r15
	movq %r15,0x8(%r14)
	movq %r14,0x10(%rbp)
	jmp L_171929
.p2align 0x4
.long 0x233F
L_172138:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movl 0x70(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_172139
L_172144:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_172145+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_172145
.p2align 0x4
.long 0x2341
L_172145:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_172139:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x28(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq 0x18(%rbp),%r15
	movq %r15,0x18(%r13)
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x8(%r11)
	addq $0x18,%r12
	movq %r13,0x0(%r11)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r14,1)
	movq %r11,0x0(%r15)
	movq %r13,0x10(%rbp)
	jmp mono_7
.p2align 0x4
.long 0x233D
L_172109:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_172110
L_172112:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_172113+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_172113
.p2align 0x4
.long 0xA9C
L_172113:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_172110:
	movq $0x55F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_172111
.p2align 0x4
.long 0x1032
L_172017:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_172018
L_172019:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_172020+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_172020
.p2align 0x4
.long 0x9A6
L_172020:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_172018:
	movq $0x55F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x1D47,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x18(%r13)
	movq %r14,0x20(%r13)
	addq $0x30,%r12
	movl $0x1,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq 0x20(%rbp),%r15
	movq %r15,0x8(%r13)
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%r13)
	movq $0x1D33,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x20,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x10(%r15)
	movq $0x1D39,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x40(%rbp),%r15
	movq %r15,0x8(%r14)
	movq %r14,0x8(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x8EE
L_172008:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_172009
L_172012:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_172013+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_172013
.p2align 0x4
.long 0x9DD
L_172013:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_172009:
	movq $0x55F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x1D47,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x18(%r13)
	movq %r14,0x20(%r13)
	addq $0x30,%r12
	movl $0x1,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq 0x58(%rbp),%r15
	movq %r15,0x8(%r13)
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%r13)
	movq $0x1D33,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x20,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x10(%r15)
	movq $0x1D39,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x40(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_450915
L_172010:
	movq %r14,0x40(%rbp)
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x28(%rbp)
	movq %r14,0x30(%rbp)
	jmp L_172006
.p2align 0x4
L_450915:
L_172011:
	movq %r14,0x8(%rbp)
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x2349
L_172256:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0xA0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_172257
L_172258:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_172259+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_172259
.p2align 0x4
.long 0x234A
L_172259:
	addq $0xFFFFFFFFFFFFFF50,%rbp
L_172257:
	movq $0x55F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x88(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xA0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x104D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	movq %r15,0x10(%r13)
	addq $0x30,%r12
	movl $0x1,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq 0x90(%rbp),%r15
	movq %r15,0x18(%r13)
	movq 0x98(%rbp),%r15
	movq %r15,0x20(%r13)
	movq $0x1055,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x10(%r15)
	addq $0x20,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x80(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x70(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x70(%rbp)
	jmp loop_1737
.p2align 0x4
.long 0x2351
L_172303:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0x80(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_172304
L_172306:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_172307+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_172307
.p2align 0x4
.long 0x2352
L_172307:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_172304:
	movq $0x55F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x80(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x104D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	movq %r15,0x10(%r13)
	addq $0x30,%r12
	movl $0x1,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq 0x88(%rbp),%r15
	movq %r15,0x18(%r13)
	movq 0x68(%rbp),%r15
	movq %r15,0x20(%r13)
	movq $0x1055,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x10(%r15)
	addq $0x20,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movl 0x4C(%rbp),%ecx
	incl %ecx
	jo L_171990
L_172305:
	jmp L_172300
.text
.p2align 0x4
.globl shrinkDecs_0
.hidden shrinkDecs_0
shrinkDecs_0:
L_172326:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x18(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_176061
L_172327:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_450941
L_172328:
	movq 0x0(%rbp),%r15
loop_1740:
	movq 0x8(%rbp),%r14
	movq 0xA0(%r14),%r13
	movq %r13,0x20(%rbp)
	movq 0x18(%r14),%r13
	movq %r13,0x28(%rbp)
	cmpq $0x1,%r15
	je L_450940
L_172329:
	movq 0x8(%r15),%r13
	movq %r13,0x30(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x38(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE99,%r15
	je L_450939
	cmpq $0xE9A,%r15
	je L_450921
	cmpq $0xE9B,%r15
	je L_450920
L_172330:
	movq 0x18(%r13),%r15
	movq %r15,0x20(%rbp)
	movq 0x10(%r13),%r15
	movq %r15,0x28(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x40(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x50(%rbp)
	movq 0x70(%r14),%r15
	movq $0x3D3F,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x18,%r12
	movq %r14,0x8(%r13)
	movq %r13,0x58(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x50,%rbp
	leaq (L_172331+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1641
.p2align 0x4
L_450920:
L_176055:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x30(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq %r14,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_176056+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp shrinkDecs_0
.p2align 0x4
L_450921:
L_175931:
	movq 0x8(%r13),%r15
	movq 0x0(%r13),%r11
	movq %r11,0x48(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r13
	movl %r13d,%r10d
	movslq %r10d,%r9
	cmpq %r13,%r9
	movq %r15,0x40(%rbp)
	jne L_172364
L_175933:
	testl %r10d,%r10d
	jz L_450927
L_175934:
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r15
	movl %r15d,%r13d
	movslq %r13d,%r10
	movq %r10,0x20(%rbp)
	cmpq %r15,%r10
	jne L_450926
L_175936:
	testq %r10,%r10
	jz L_450925
L_175937:
	cmpq $0x7FFFFFFF,%r10
	ja L_450924
L_175938:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_175939
L_175952:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_175953+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_175953
.p2align 0x4
.long 0x2447
L_175953:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_175939:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x151D,%rcx
	movq 0x20(%rbp),%rdx
	movq $0x18,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_175940+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_175940
.p2align 0x4
.long 0x2447
L_175940:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq %rax,0x28(%rbp)
L_175941:
	movq $0x0,0x38(%rbp)
loop_1770:
	movq 0x20(%rbp),%r15
	cmpq %r15,0x38(%rbp)
	jl L_450922
L_175942:
	movq 0x28(%rbp),%r15
	movq $0x97,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x1D35,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x20(%rbp)
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x40(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x8(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_175943+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp shrinkDecs_0
.p2align 0x4
L_450922:
L_175947:
	movq 0x38(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x48(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x50(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x58(%rbp)
	movq 0x10(%r13),%r11
	movq 0x10(%r11),%r10
	movq %r10,0x78(%rbp)
	movq 0x18(%r11),%r10
	movq %r10,0x60(%rbp)
	movq 0x20(%r11),%r10
	movq %r10,0x68(%rbp)
	movq 0x8(%rbp),%r15
	movq 0x70(%r15),%r14
	movq $0x3D3F,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x18,%r12
	movq %r15,0x8(%r13)
	movq %r13,0x80(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x78,%rbp
	leaq (L_175948+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1641
.p2align 0x4
L_450924:
L_172421:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_450925:
L_175955:
	movq (globalObjptr+0x1CA8)(%rip),%r15
	movq %r15,0x28(%rbp)
	jmp L_175941
.p2align 0x4
L_450926:
L_172364:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x4D8)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_450927:
L_175956:
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r15
	movl %r15d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x38(%rbp)
	cmpq %rdx,%r15
	jne L_172364
L_175958:
	testq %rdx,%rdx
	jz L_450936
L_175959:
	cmpq $0x7FFFFFFF,%rdx
	ja L_172421
L_175960:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x151F,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_175961+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_175961
.p2align 0x4
.long 0x981
L_175961:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq %rax,0x50(%rbp)
L_175962:
	movl $0x0,0x58(%rbp)
	movq $0x0,0x60(%rbp)
loop_1771:
	movq 0x38(%rbp),%rdx
	cmpq %rdx,0x60(%rbp)
	jl L_450934
L_175963:
	movq 0x50(%rbp),%r15
	movq $0x17A1,0xFFFFFFFFFFFFFFF8(%r15)
	movslq 0x58(%rbp),%rdx
	movq %rdx,0x38(%rbp)
	testq %rdx,%rdx
	jz L_450933
L_175964:
	cmpq $0x7FFFFFFF,%rdx
	ja L_172421
L_175965:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x151D,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_175966+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_175966
.p2align 0x4
.long 0x244A
L_175966:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq %rax,0x48(%rbp)
L_175967:
	xorl %ecx,%ecx
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_1772:
	cmpq 0x38(%rbp),%r15
	jnl L_450931
.p2align 0x4,,0x7
loop_1777:
	movslq %ecx,%r14
	movq 0x50(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r11
	cmpq $0x1,%r11
	jne L_450929
L_176036:
	incl %ecx
	jo L_450928
L_176037:
	jmp loop_1777
.p2align 0x4
L_450928:
L_172355:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_450929:
L_176034:
	incl %ecx
	jo L_172355
L_176035:
	movq 0x48(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r11,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_1772
.p2align 0x4
L_450931:
L_175968:
	movq 0x48(%rbp),%r15
	movq $0x97,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x30(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_175969+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp shrinkDecs_0
.p2align 0x4
L_450933:
L_176039:
	movq (globalObjptr+0x1CB8)(%rip),%r15
	movq %r15,0x48(%rbp)
	jmp L_175967
.p2align 0x4
L_450934:
L_176040:
	movq 0x60(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x48(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x68(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x80(%rbp)
	movq 0x10(%r13),%r15
	movq %r15,0x70(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x20(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_176041+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1649
.p2align 0x4
L_450936:
L_176054:
	movq (globalObjptr+0x1CB0)(%rip),%r15
	movq %r15,0x50(%rbp)
	jmp L_175962
.p2align 0x4
L_450939:
L_172339:
	movq 0x10(%r13),%r15
	movq %r15,0x40(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x48(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x50(%rbp)
	movq 0x98(%r14),%r13
	movq %r13,0x58(%rbp)
	movq 0x90(%r14),%r13
	movq %r13,0x60(%rbp)
	movq 0x80(%r14),%r13
	movq %r13,0x68(%rbp)
	movq 0x78(%r14),%r13
	movq %r13,0x70(%rbp)
	movq 0x70(%r14),%r13
	movq %r13,0x78(%rbp)
	movq 0x68(%r14),%r13
	movq %r13,0x80(%rbp)
	movq 0x50(%r14),%r13
	movq %r13,0x88(%rbp)
	movq 0x20(%r14),%r13
	movq %r13,0x90(%rbp)
	movq 0x10(%r14),%r13
	movq %r13,0x98(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0xA0(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0xA8(%rbp)
	movq 0x18(%rbp),%r14
	movq %r14,(gcState+0x20)(%rip)
	movq %r15,0xB8(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xB8,%rbp
	leaq (L_172340+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1649
.p2align 0x4
L_450940:
L_176060:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_450941:
L_176061:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_176062+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_176062
.p2align 0x4
.long 0x45C
L_176062:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	jmp L_172328
.p2align 0x4
.long 0x982
L_172331:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_172332
L_172337:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_172338+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_172338
.p2align 0x4
.long 0x2354
L_172338:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_172332:
	movq $0x55F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1D31,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x50(%rbp)
	movq %r15,0x0(%r14)
	addq $0x28,%r12
	movq 0x40(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x28(%rbp),%r15
	movq %r15,0x10(%r14)
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%r14)
	movq 0x30(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_172333+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp shrinkDecs_0
.p2align 0x4
.long 0x78B
L_176056:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_176057
L_176058:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_176059+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_176059
.p2align 0x4
.long 0x7B5
L_176059:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_176057:
	movq $0x1D39,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x459
L_175943:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_175944
L_175945:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_175946+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_175946
.p2align 0x4
.long 0x508
L_175946:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_175944:
	movq $0x1D39,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x2448
L_175948:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x78(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_175949
L_175950:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_175951+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_175951
.p2align 0x4
.long 0x2449
L_175951:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_175949:
	movq $0x55F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x104D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	movq %r15,0x10(%r13)
	addq $0x30,%r12
	movl $0x1,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq 0x60(%rbp),%r15
	movq %r15,0x18(%r13)
	movq 0x68(%rbp),%r15
	movq %r15,0x20(%r13)
	movq $0x1055,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x10(%r15)
	addq $0x20,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x38(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x38(%rbp)
	jmp loop_1770
.p2align 0x4
.long 0x244B
L_175969:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x48(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x38(%rbp)
	cmpq %rdx,%r14
	jne L_172364
L_175971:
	testq %rdx,%rdx
	jz L_450962
L_175972:
	cmpq $0x7FFFFFFF,%rdx
	ja L_172421
L_175973:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x151F,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_175974+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_175974
.p2align 0x4
.long 0x981
L_175974:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq %rax,0x50(%rbp)
L_175975:
	movl $0x0,0x58(%rbp)
	movq $0x0,0x60(%rbp)
loop_1773:
	movq 0x38(%rbp),%r15
	cmpq %r15,0x60(%rbp)
	jl L_450960
L_175976:
	movq 0x50(%rbp),%r15
	movq $0x17A1,0xFFFFFFFFFFFFFFF8(%r15)
	movslq 0x58(%rbp),%rdx
	movq %rdx,0x20(%rbp)
	testq %rdx,%rdx
	jz L_450959
L_175977:
	cmpq $0x7FFFFFFF,%rdx
	ja L_172421
L_175978:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1521,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_175979+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_175979
.p2align 0x4
.long 0x244C
L_175979:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq %rax,0x28(%rbp)
L_175980:
	xorl %ecx,%ecx
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_1774:
	cmpq 0x20(%rbp),%r15
	jnl L_450950
.p2align 0x4,,0x7
loop_1776:
	movslq %ecx,%r14
	movq 0x50(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r11
	cmpq $0x1,%r11
	jne L_450948
L_176007:
	incl %ecx
	jo L_172355
L_176008:
	jmp loop_1776
.p2align 0x4
L_450948:
L_176005:
	incl %ecx
	jo L_172355
L_176006:
	movq %r15,%r14
	movq %r15,%r13
	movq %r15,%r10
	movq 0x0(%r11),%r9
	movq 0x8(%r11),%r8
	movq 0x10(%r11),%rsp
	movq 0x28(%rbp),%r11
	movq %r11,%rsi
	shrq $0x8,%rsi
	movq (gcState+0x3C8)(%rip),%rdi
	movb $0x1,0x0(%rdi,%rsi,1)
	imulq $0x18,%r14
	movq %r9,0x0(%r11,%r14,1)
	movq %r11,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%rdi,%r14,1)
	imulq $0x18,%r13
	movq %r8,0x8(%r11,%r13,1)
	movq %r11,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%rdi,%r14,1)
	imulq $0x18,%r10
	movq %rsp,0x10(%r11,%r10,1)
	incq %r15
	jmp loop_1774
.p2align 0x4
L_450950:
L_175981:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_175982
L_176002:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_176003+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_176003
.p2align 0x4
.long 0x244D
L_176003:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_175982:
	movq 0x28(%rbp),%r15
	movq $0x17C1,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	movq %r11,0x20(%rbp)
	cmpq %r14,%r11
	jne L_172364
L_175984:
	testl %r13d,%r13d
	jz L_450955
L_175985:
	testq %r11,%r11
	jz L_450954
L_175986:
	cmpq $0x7FFFFFFF,%r11
	ja L_172421
L_175987:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_175988
L_175997:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_175998+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_175998
.p2align 0x4
.long 0x244D
L_175998:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_175988:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x151D,%rcx
	movq 0x20(%rbp),%rdx
	movq $0x30,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_175989+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_175989
.p2align 0x4
.long 0x244D
L_175989:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq %rax,0x38(%rbp)
L_175990:
	movq $0x0,0x48(%rbp)
loop_1775:
	movq 0x20(%rbp),%r15
	cmpq %r15,0x48(%rbp)
	jl L_450951
L_175991:
	movq 0x38(%rbp),%r15
	movq $0x97,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x1D35,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x40(%rbp),%r15
	movq %r15,0x8(%r14)
	movq $0x1D39,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_450951:
L_175992:
	movq 0x48(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq %r15,%r14
	movq %r15,%r13
	imulq $0x18,%r14
	movq 0x28(%rbp),%r11
	movq 0x0(%r11,%r14,1),%r10
	movq %r10,0x50(%rbp)
	imulq $0x18,%r13
	movq 0x8(%r11,%r13,1),%r14
	movq %r14,0x58(%rbp)
	imulq $0x18,%r15
	movq 0x10(%r11,%r15,1),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x78(%rbp)
	movq 0x18(%r14),%r13
	movq %r13,0x60(%rbp)
	movq 0x20(%r14),%r13
	movq %r13,0x68(%rbp)
	movq 0x8(%rbp),%r15
	movq 0x70(%r15),%r14
	movq $0x3D3F,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x18,%r12
	movq %r15,0x8(%r13)
	movq %r13,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_175993+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1641
.p2align 0x4
L_450954:
L_176000:
	movq (globalObjptr+0x1CD0)(%rip),%r15
	movq %r15,0x38(%rbp)
	jmp L_175990
.p2align 0x4
L_450955:
L_176001:
	movq 0x30(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_450959:
L_176010:
	movq (globalObjptr+0x1CC8)(%rip),%r15
	movq %r15,0x28(%rbp)
	jmp L_175980
.p2align 0x4
L_450960:
L_176011:
	movq 0x60(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x48(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x68(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x80(%rbp)
	movq 0x10(%r13),%r15
	movq %r15,0x70(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_176012+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1649
.p2align 0x4
L_450962:
L_176032:
	movq (globalObjptr+0x1CC0)(%rip),%r15
	movq %r15,0x50(%rbp)
	jmp L_175975
.p2align 0x4
.long 0x2450
L_176041:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x78(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_176043
L_176051:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_176052+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_176052
.p2align 0x4
.long 0x2452
L_176052:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_176043:
	movq 0x78(%rbp),%r14
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_172343
L_176044:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xEAA,%r15
	jne L_450966
L_176045:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movl 0x0(%r13),%r11d
	testl %r11d,%r11d
	jz L_450965
L_176046:
	movq $0x53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x281B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x18,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x8(%r13)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x0(%r15)
	movl 0x58(%rbp),%ecx
	incl %ecx
	jo L_172355
L_176047:
	movq 0x68(%rbp),%r15
L_176048:
	movl %ecx,0x58(%rbp)
	movq 0x50(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x60(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x60(%rbp)
	jmp loop_1771
.p2align 0x4
L_450965:
L_176049:
	movq 0x70(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x28(%rbp),%r15
	movq 0x8(%r15),%r14
	movq $0x34CB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x88(%rbp)
	movq %r15,0x98(%rbp)
	addq $0x10,%r12
	movq $0x1,0x78(%rbp)
	movb $0x2,0x80(%rbp)
	movq $0x1,0x90(%rbp)
	movq $0x2,0xA0(%rbp)
	addq $0x70,%rbp
	leaq (L_176050+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loopExp_0
.p2align 0x4
L_450966:
L_172343:
	movq (globalObjptr+0x1C50)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x2355
L_172340:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_172342
L_175929:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_175930+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_175930
.p2align 0x4
.long 0x2446
L_175930:
	addq $0xFFFFFFFFFFFFFF48,%rbp
L_172342:
	movq 0x20(%rbp),%r15
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_172343
L_172344:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xEAA,%r14
	jne L_172343
L_172345:
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq %r13,0x38(%rbp)
	movq 0x0(%r15),%r11
	movq %r11,0xB0(%rbp)
	movq $0x17C3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xB8(%rbp)
	movq %r14,0x0(%r15)
	addq $0x20,%r12
	movq %r13,0x8(%r15)
	movq %r11,0x10(%r15)
	movq 0x50(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%rax
	shrq $0x1,%rax
	subq $0xE9E,%rax
	cmpq $0xA,%rax
	ja L_450969
	leaq jumpTable_586(%rip),%rbx
	jmp *(%rbx,%rax,8)
.data
.p2align 0x4
jumpTable_586:
.quad L_451008,L_451007,L_451006,L_451005,L_450986,L_450983,L_450982,L_450980,L_450972,L_450971,L_450970
.text
.p2align 0x4
L_450969:
L_172346:
	movq 0x50(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x58(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0xD0(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC8,%rbp
	leaq (L_172347+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1649
.p2align 0x4
L_450970:
L_175880:
	movq 0x50(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x58(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0xC8(%rbp)
	movq %r13,0xD0(%rbp)
	addq $0xC8,%rbp
	leaq (L_175881+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1649
.p2align 0x4
L_450971:
L_175616:
	movq 0x50(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x28(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x38(%rbp)
	movq 0x58(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0xD0(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x70(%rbp)
	movq %r15,0xC8(%rbp)
	addq $0xC8,%rbp
	leaq (L_175617+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1649
.p2align 0x4
L_450972:
L_175565:
	movq 0x50(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x60(%rbp)
	movq 0x70(%rbp),%r15
	movq 0x10(%r14),%r11
	cmpq %r11,0x10(%r15)
	je L_450978
L_175566:
	cmpq $0x1,%r13
	je L_450973
L_175567:
	movq 0x58(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0xC8(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0xC0(%rbp)
	addq $0xC0,%rbp
	leaq (L_175568+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1649
.p2align 0x4
L_450973:
L_175602:
	movq $0x1,0x50(%rbp)
L_175572:
	movq $0x281F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xB0(%rbp),%r14
	movl 0x0(%r14),%r13d
	testl %r13d,%r13d
	jz L_450974
L_175573:
	movq 0x38(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	movq 0x30(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC0,%rbp
	leaq (L_175574+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp shrinkDecs_0
.p2align 0x4
L_450974:
L_175592:
	movq 0x50(%rbp),%r15
	cmpq $0x1,%r15
	je L_175597
L_175593:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xEA9,%r14
	je L_450976
L_175595:
	movq 0x0(%r15),%r14
	movl 0x0(%r14),%r15d
	decl %r15d
	jo L_172355
L_175596:
	movl %r15d,0x0(%r14)
L_175597:
	movq 0x30(%rbp),%r15
	jmp loop_1740
.p2align 0x4
L_450976:
L_175594:
	movq 0x30(%rbp),%r14
	xchgq %r14,%r15
	jmp loop_1740
.p2align 0x4
L_450978:
L_175603:
	cmpq $0x1,%r13
	je L_450979
L_175604:
	movq 0x78(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_175605+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1649
.p2align 0x4
L_450979:
L_175615:
	movq $0x1,%r15
L_175610:
	movq $0x1D4D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x20,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x20(%rbp),%r15
	movq %r15,0x10(%r14)
	movq %r14,0x20(%rbp)
expansive_0:
	movq 0x30(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_172465+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp shrinkDecs_0
.p2align 0x4
L_450980:
L_175556:
	movq 0x50(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq $0x281D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r14,0x0(%r15)
	movq 0xB0(%rbp),%r14
	movl 0x0(%r14),%r13d
	testl %r13d,%r13d
	jz L_450981
L_175557:
	movq 0x38(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	movq 0x30(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC0,%rbp
	leaq (L_175558+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp shrinkDecs_0
.p2align 0x4
L_450981:
L_175564:
	movq 0x30(%rbp),%r15
	jmp loop_1740
.p2align 0x4
L_450982:
L_175547:
	movq 0x50(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq $0x3D3F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x38(%rbp)
	addq $0x18,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_175548+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1641
.p2align 0x4
L_450983:
L_175523:
	movq 0x50(%rbp),%r15
	movq 0x20(%r15),%r14
	movl 0x0(%r15),%r13d
	movq 0x18(%r15),%r11
	movq %r11,0x20(%rbp)
	movq 0x10(%r15),%r10
	movq %r10,0x58(%rbp)
	movq 0x8(%r15),%r9
	movq %r9,0x60(%rbp)
	movq $0x104D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r13d,0x0(%r15)
	movq %r14,0x8(%r15)
	addq $0x30,%r12
	movl $0x0,0x4(%r15)
	movq %r11,0x10(%r15)
	movq %r10,0x18(%r15)
	movq %r9,0x20(%r15)
	movq $0x53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x68(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0xB0(%rbp),%r13
	movl 0x0(%r13),%r11d
	testl %r11d,%r11d
	jz L_450984
L_175524:
	movq $0x281B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq %r14,0x0(%r13)
	movq 0x38(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x0(%r15)
	movq 0x30(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC0,%rbp
	leaq (L_175525+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp shrinkDecs_0
.p2align 0x4
L_450984:
L_175539:
	movl 0x0(%r14),%r15d
	testl %r15d,%r15d
	jnz L_450985
L_175540:
	movq 0x28(%rbp),%r15
	movq 0x8(%r15),%r14
	movq $0x34CB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x58(%rbp)
	movq %r15,0x68(%rbp)
	addq $0x10,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq $0x1,0x48(%rbp)
	movb $0x2,0x50(%rbp)
	movq $0x1,0x60(%rbp)
	movq $0x2,0x70(%rbp)
	addq $0x40,%rbp
	leaq (L_175541+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loopExp_0
.p2align 0x4
L_450985:
L_175543:
	movq 0x30(%rbp),%r15
	jmp loop_1740
.p2align 0x4
L_450986:
L_172474:
	movq 0x50(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x68(%rbp)
	cmpq %rdx,%r15
	movq %r14,0x58(%rbp)
	jne L_172364
L_172476:
	testq %rdx,%rdx
	jz L_451003
L_172477:
	cmpq $0x7FFFFFFF,%rdx
	ja L_172421
L_172478:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1517,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_172479+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_172479
.p2align 0x4
.long 0x2365
L_172479:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq %rax,0x50(%rbp)
L_172480:
	movq $0x0,0x70(%rbp)
loop_1744:
	movq 0x68(%rbp),%rdx
	cmpq %rdx,0x70(%rbp)
	jl L_451001
L_172481:
	movq 0x50(%rbp),%r15
	movq $0xB9F,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x68(%rbp)
	movl %r13d,0x58(%rbp)
	cmpq %r14,%rdx
	jne L_172364
L_172483:
	cmpq $0x0,%rdx
	sete %bl
	movzbl %bl,%ebx
	movl %ebx,0x5C(%rbp)
	je L_450999
L_172484:
	cmpq $0x7FFFFFFF,%rdx
	ja L_172421
L_172485:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1519,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_172486+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_172486
.p2align 0x4
.long 0x2366
L_172486:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq %rax,0x70(%rbp)
L_172487:
	movq $0x0,0x78(%rbp)
.p2align 0x4,,0x7
loop_1745:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_450997
.p2align 0x4,,0x7
L_172488:
	movq 0x78(%rbp),%r14
	cmpq 0x68(%rbp),%r14
	jnl L_450992
L_175497:
	movl %r14d,%r13d
	movslq %r13d,%r15
	movq 0x50(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xEA9,%r15
	je L_450991
L_175500:
	movq 0x8(%r13),%r14
	movq 0x0(%r14),%r11
L_175501:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_450990
L_175503:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0x140E,%r15
	je L_450989
	cmpq $0x140F,%r15
	je L_450987
L_175504:
	movq $0x2821,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x10,%r12
L_175499:
	movq 0x70(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x78(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x78(%rbp)
	jmp loop_1745
.p2align 0x4
L_450987:
L_175506:
	movq 0x8(%r11),%r15
	cmpq $0x1,0x0(%r11)
	je L_450988
L_175507:
	movq $0x2821,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x10,%r12
	jmp L_175499
.p2align 0x4
L_450988:
L_175508:
	movq $0x2825,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
	jmp L_175499
.p2align 0x4
L_450989:
L_175505:
	movq 0x0(%r11),%r15
	movq $0x2823,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
	jmp L_175499
.p2align 0x4
L_450990:
L_175502:
	movq $0x2821,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x10,%r12
	jmp L_175499
.p2align 0x4
L_450991:
L_175498:
	movq $0x2821,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x10,%r12
	jmp L_175499
.p2align 0x4
L_450992:
L_172489:
	movq 0x70(%rbp),%r15
	movq $0x17C5,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r13,%r10
	jne L_172364
L_172491:
	decl %r11d
	jo L_172355
L_172492:
	movl %r11d,0x80(%rbp)
	movq $0x1,0x78(%rbp)
.p2align 0x4,,0x7
loop_1746:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_450994
.p2align 0x4,,0x7
L_172493:
	movl 0x80(%rbp),%r15d
	cmpl $0x0,%r15d
	jl L_450993
L_172494:
	movl %r15d,%r14d
	decl %r14d
	movslq %r15d,%r13
	movl %r14d,0x80(%rbp)
	movq 0x70(%rbp),%r15
	movq 0x0(%r15,%r13,8),%r14
	movq $0x2827,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x78(%rbp)
	jmp loop_1746
.p2align 0x4
L_450993:
L_172495:
	movq 0x88(%rbp),%r14
	movq 0x290(%r14),%r13
	movq %r13,0x70(%rbp)
	movq 0x288(%r14),%r11
	movq %r11,0x80(%rbp)
	movq 0x278(%r14),%r11
	movq %r11,0x98(%rbp)
	movq 0x270(%r14),%r11
	movq %r11,0xA0(%rbp)
	movq 0x268(%r14),%r11
	movq %r11,0xA8(%rbp)
	movq 0x260(%r14),%r11
	movq %r11,0xC0(%rbp)
	movq 0x258(%r14),%r11
	movq %r11,0xC8(%rbp)
	movq 0x250(%r14),%r11
	movq %r11,0xD0(%rbp)
	movq 0x248(%r14),%r11
	movq %r11,0xD8(%rbp)
	movq 0x240(%r14),%r11
	movq %r11,0xE0(%rbp)
	movq 0x238(%r14),%r11
	movq %r11,0xE8(%rbp)
	movq 0x230(%r14),%r11
	movq %r11,0xF0(%rbp)
	movq 0x228(%r14),%r11
	movq %r11,0xF8(%rbp)
	movq 0x220(%r14),%r11
	movq %r11,0x100(%rbp)
	movq 0x218(%r14),%r11
	movq %r11,0x108(%rbp)
	movq 0x210(%r14),%r11
	movq %r11,0x110(%rbp)
	movq 0x208(%r14),%r11
	movq %r11,0x118(%rbp)
	movq 0x200(%r14),%r11
	movq %r11,0x120(%rbp)
	movq 0x1F8(%r14),%r11
	movq %r11,0x128(%rbp)
	movq 0x1F0(%r14),%r11
	movq %r11,0x130(%rbp)
	movq 0x1E8(%r14),%r11
	movq %r11,0x138(%rbp)
	movq 0x1E0(%r14),%r11
	movq %r11,0x140(%rbp)
	movq 0x1D8(%r14),%r11
	movq %r11,0x148(%rbp)
	movq 0x1D0(%r14),%r11
	movq %r11,0x150(%rbp)
	movq 0x1C8(%r14),%r11
	movq %r11,0x158(%rbp)
	movq 0x1C0(%r14),%r11
	movq %r11,0x160(%rbp)
	movq 0x1B8(%r14),%r11
	movq %r11,0x168(%rbp)
	movq 0x1B0(%r14),%r11
	movq %r11,0x170(%rbp)
	movq 0x1A8(%r14),%r11
	movq %r11,0x178(%rbp)
	movq 0x1A0(%r14),%r11
	movq %r11,0x180(%rbp)
	movq 0x198(%r14),%r11
	movq %r11,0x188(%rbp)
	movq 0x190(%r14),%r11
	movq %r11,0x190(%rbp)
	movq 0x188(%r14),%r11
	movq %r11,0x198(%rbp)
	movq 0x180(%r14),%r11
	movq %r11,0x1A0(%rbp)
	movq 0x178(%r14),%r11
	movq %r11,0x1A8(%rbp)
	movq 0x170(%r14),%r11
	movq %r11,0x1B0(%rbp)
	movq 0x168(%r14),%r11
	movq %r11,0x1B8(%rbp)
	movq 0x160(%r14),%r11
	movq %r11,0x1C0(%rbp)
	movq 0x158(%r14),%r11
	movq %r11,0x1C8(%rbp)
	movq 0x150(%r14),%r11
	movq %r11,0x1D0(%rbp)
	movq 0x148(%r14),%r11
	movq %r11,0x1D8(%rbp)
	movq 0x140(%r14),%r11
	movq %r11,0x1E0(%rbp)
	movq 0x138(%r14),%r11
	movq %r11,0x1E8(%rbp)
	movq 0x130(%r14),%r11
	movq %r11,0x1F0(%rbp)
	movq 0x128(%r14),%r11
	movq %r11,0x1F8(%rbp)
	movq 0x120(%r14),%r11
	movq %r11,0x200(%rbp)
	movq 0x118(%r14),%r11
	movq %r11,0x208(%rbp)
	movq 0x110(%r14),%r11
	movq %r11,0x210(%rbp)
	movq 0x108(%r14),%r11
	movq %r11,0x218(%rbp)
	movq 0x100(%r14),%r11
	movq %r11,0x220(%rbp)
	movq 0xF8(%r14),%r11
	movq %r11,0x228(%rbp)
	movq 0xF0(%r14),%r11
	movq %r11,0x230(%rbp)
	movq 0xE8(%r14),%r11
	movq %r11,0x238(%rbp)
	movq 0xE0(%r14),%r11
	movq %r11,0x240(%rbp)
	movq 0xD8(%r14),%r11
	movq %r11,0x248(%rbp)
	movq 0xD0(%r14),%r11
	movq %r11,0x250(%rbp)
	movq 0xC8(%r14),%r11
	movq %r11,0x258(%rbp)
	movq 0xC0(%r14),%r11
	movq %r11,0x260(%rbp)
	movq 0xB8(%r14),%r11
	movq %r11,0x268(%rbp)
	movq 0xB0(%r14),%r11
	movq %r11,0x270(%rbp)
	movq 0xA8(%r14),%r11
	movq %r11,0x278(%rbp)
	movq 0xA0(%r14),%r11
	movq %r11,0x280(%rbp)
	movq 0x98(%r14),%r11
	movq %r11,0x288(%rbp)
	movq 0x90(%r14),%r11
	movq %r11,0x290(%rbp)
	movq 0x88(%r14),%r11
	movq %r11,0x298(%rbp)
	movq 0x80(%r14),%r11
	movq %r11,0x2A0(%rbp)
	movq 0x78(%r14),%r11
	movq %r11,0x2A8(%rbp)
	movq 0x70(%r14),%r11
	movq %r11,0x2B0(%rbp)
	movq 0x68(%r14),%r11
	movq %r11,0x2B8(%rbp)
	movq 0x60(%r14),%r11
	movq %r11,0x2C0(%rbp)
	movq 0x58(%r14),%r11
	movq %r11,0x2C8(%rbp)
	movq 0x50(%r14),%r11
	movq %r11,0x2D0(%rbp)
	movq 0x48(%r14),%r11
	movq %r11,0x2D8(%rbp)
	movq 0x40(%r14),%r11
	movq %r11,0x2E0(%rbp)
	movq 0x38(%r14),%r11
	movq %r11,0x2E8(%rbp)
	movq 0x30(%r14),%r11
	movq %r11,0x2F0(%rbp)
	movq 0x28(%r14),%r11
	movq %r11,0x2F8(%rbp)
	movq 0x18(%r14),%r11
	movq %r11,0x300(%rbp)
	movq 0x10(%r14),%r11
	movq %r11,0x308(%rbp)
	movq 0x8(%r14),%r11
	movq %r11,0x310(%rbp)
	movq 0x0(%r14),%r11
	movq %r11,0x318(%rbp)
	movl $0x80,0x328(%rbp)
	movq $0x3,0x330(%rbp)
	movq %r13,0x338(%rbp)
	addq $0x328,%rbp
	leaq (L_172496+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
L_450994:
L_175495:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_175496+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_175496
.p2align 0x4
.long 0x2414
L_175496:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	jmp L_172493
.p2align 0x4
L_450997:
L_175509:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_175510+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_175510
.p2align 0x4
.long 0x2415
L_175510:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	jmp L_172488
.p2align 0x4
L_450999:
L_175512:
	movq (globalObjptr+0x1C88)(%rip),%r15
	movq %r15,0x70(%rbp)
	jmp L_172487
.p2align 0x4
L_451001:
L_175513:
	movq 0x70(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x58(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x78(%rbp)
	movq 0x80(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0xD0(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC8,%rbp
	leaq (L_175514+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1649
.p2align 0x4
L_451003:
L_175522:
	movq (globalObjptr+0x1C58)(%rip),%r15
	movq %r15,0x50(%rbp)
	jmp L_172480
.p2align 0x4
L_451005:
L_172473:
	movq 0x50(%rbp),%r15
	movq %r15,0x20(%rbp)
	jmp expansive_0
.p2align 0x4
L_451006:
L_172459:
	movq 0x50(%rbp),%r15
	movl 0x0(%r15),%r14d
	movl %r14d,0x20(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x78(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x60(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_172460+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1649
.p2align 0x4
L_451007:
L_172423:
	movq 0x50(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movl 0x0(%r15),%r13d
	movl %r13d,0x28(%rbp)
	movq 0x58(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0xD0(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC8,%rbp
	leaq (L_172424+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1649
.p2align 0x4
L_451008:
L_172362:
	movq 0x50(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	movq %r11,0x28(%rbp)
	cmpq %r11,%r15
	movq %r14,0x20(%rbp)
	jne L_172364
L_172365:
	testq %r11,%r11
	jz L_451019
L_172366:
	cmpq $0x7FFFFFFF,%r11
	ja L_172421
L_172367:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_172368
L_172418:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_172419+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_172419
.p2align 0x4
.long 0x2358
L_172419:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_172368:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1517,%rcx
	movq 0x28(%rbp),%rdx
	movq $0x10,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_172369+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_172369
.p2align 0x4
.long 0x2358
L_172369:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq %rax,0x50(%rbp)
L_172370:
	movq $0x0,0x58(%rbp)
loop_1741:
	movq 0x28(%rbp),%r15
	cmpq %r15,0x58(%rbp)
	jl L_451016
L_172371:
	movq 0x50(%rbp),%r15
	movq $0xB9F,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x2819,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq 0xB0(%rbp),%r15
	movl 0x0(%r15),%r13d
	testl %r13d,%r13d
	jz L_451009
L_172372:
	movq 0x38(%rbp),%r15
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC0,%rbp
	leaq (L_172373+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp shrinkDecs_0
.p2align 0x4
L_451009:
L_172396:
	movq 0x50(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%ecx
	movslq %ecx,%r13
	cmpq %r14,%r13
	jne L_172364
L_172398:
	cmpl $0x0,%ecx
	jl L_451014
L_172399:
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_1743:
	cmpl %ecx,%ebx
	jnl L_451012
L_172404:
	movslq %ebx,%r15
	movq 0x50(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xEA9,%r15
	je L_172406
L_172407:
	movq 0x0(%r13),%r15
	movl 0x0(%r15),%r14d
	decl %r14d
	jo L_172355
L_172408:
	movl %r14d,0x0(%r15)
L_172406:
	incl %ebx
	jmp loop_1743
.p2align 0x4
L_451012:
L_172400:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_172401
L_172402:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_172403+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_172403
.p2align 0x4
.long 0x1DA4
L_172403:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_172401:
	movq 0x30(%rbp),%r15
	jmp loop_1740
.p2align 0x4
L_451014:
L_172393:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x4F8)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_451016:
L_172410:
	movq 0x58(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x20(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x60(%rbp)
	movq 0x80(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0xC8(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0xC0(%rbp)
	addq $0xC0,%rbp
	leaq (L_172411+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1649
.p2align 0x4
L_451019:
L_172422:
	movq (globalObjptr+0x1C58)(%rip),%r15
	movq %r15,0x50(%rbp)
	jmp L_172370
.p2align 0x4
.long 0x61B
L_172333:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_172334
L_172335:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_172336+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_172336
.p2align 0x4
.long 0x2353
L_172336:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_172334:
	movq $0x1D39,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x244E
L_175993:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x78(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_175994
L_175995:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_175996+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_175996
.p2align 0x4
.long 0x244F
L_175996:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_175994:
	movq $0x55F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x104D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	movq %r15,0x10(%r13)
	addq $0x30,%r12
	movl $0x1,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq 0x60(%rbp),%r15
	movq %r15,0x18(%r13)
	movq 0x68(%rbp),%r15
	movq %r15,0x20(%r13)
	movq $0x1055,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x10(%r15)
	addq $0x20,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x48(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x48(%rbp)
	jmp loop_1775
.p2align 0x4
.long 0x2450
L_176012:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x78(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_176014
L_176029:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_176030+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_176030
.p2align 0x4
.long 0x2452
L_176030:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_176014:
	movq 0x78(%rbp),%r14
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_172343
L_176015:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xEAA,%r15
	jne L_172343
L_176016:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq 0x0(%r15),%r14
L_176017:
	movq %r14,%r11
	andq $0x3,%r11
	jnz L_176018
L_176019:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r11
	shrq $0x1,%r11
	cmpq $0x140D,%r11
	jne L_451029
L_176020:
	movq 0x0(%r14),%r11
	movl 0x0(%r11),%r10d
	testl %r10d,%r10d
	jnz L_451028
L_176021:
	movl 0x0(%r13),%r14d
	testl %r14d,%r14d
	jz L_451027
L_176022:
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq $0x1,0x0(%r15)
	movl 0x58(%rbp),%ecx
	incl %ecx
	jo L_172355
L_176023:
	movq 0x68(%rbp),%r15
L_176024:
	movl %ecx,0x58(%rbp)
	movq 0x50(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x60(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x60(%rbp)
	jmp loop_1773
.p2align 0x4
L_451027:
L_176025:
	movq 0x70(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x28(%rbp),%r15
	movq 0x8(%r15),%r14
	movq $0x34CB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x88(%rbp)
	movq %r15,0x98(%rbp)
	addq $0x10,%r12
	movq $0x1,0x78(%rbp)
	movb $0x2,0x80(%rbp)
	movq $0x1,0x90(%rbp)
	movq $0x2,0xA0(%rbp)
	addq $0x70,%rbp
	leaq (L_176026+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loopExp_0
.p2align 0x4
L_451028:
L_176027:
	movl 0x58(%rbp),%ecx
	movq $0x1,%r15
	jmp L_176024
.p2align 0x4
L_451029:
L_176018:
	movq (globalObjptr+0x1CD8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x2451
L_176050:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movl 0x58(%rbp),%ecx
	movq $0x1,%r15
	jmp L_176048
.p2align 0x4
.long 0x2356
L_172347:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_172348
L_172360:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_172361+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_172361
.p2align 0x4
.long 0x2357
L_172361:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_172348:
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_451034
L_172349:
	movq %r15,0x20(%rbp)
L_172350:
	movq 0xB8(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_172351+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1792
.p2align 0x4
L_451034:
L_172359:
	movq $0x1D53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r14,0x20(%rbp)
	jmp L_172350
.p2align 0x4
.long 0x243E
L_175881:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_175882
L_175927:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_175928+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_175928
.p2align 0x4
.long 0x2445
L_175928:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_175882:
	movq 0x50(%rbp),%r15
	cmpq $0x1,%r15
	je L_451036
L_175883:
	movq %r15,0x28(%rbp)
L_175884:
	movq 0x20(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0xC8(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC8,%rbp
	leaq (L_175885+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1649
.p2align 0x4
L_451036:
L_175926:
	movq $0x1D53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r14,0x28(%rbp)
	jmp L_175884
.p2align 0x4
.long 0x2423
L_175617:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_175618
L_175878:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_175879+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_175879
.p2align 0x4
.long 0x243D
L_175879:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_175618:
	movq 0x50(%rbp),%r14
	cmpq $0x1,%r14
	je L_451059
L_175619:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xEA9,%r15
	je L_451057
L_175675:
	movq 0x10(%r14),%r13
	movq 0x8(%r14),%r11
	movq 0x0(%r11),%r15
	movq 0x38(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r11
	shrq $0x1,%r11
	cmpq $0x1236,%r11
	je L_451048
L_175676:
	cmpq $0x1,%r15
	je L_451042
L_175677:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x140E,%r14
	jne L_451041
L_175679:
	movq 0x0(%r15),%r13
	movq %r13,%r15
x_554:
	movq 0x38(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x1235,%r13
	jne L_175680
L_175681:
	movq 0x8(%r14),%r13
	movq %r13,0x20(%rbp)
L_175682:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_175680
L_175683:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	jne L_451038
L_175684:
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0xA8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0xD0(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC8,%rbp
	leaq (L_175685+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1649
.p2align 0x4
L_451038:
L_175680:
	movq (globalObjptr+0x1C68)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_451041:
L_175678:
	movq (globalObjptr+0x1C60)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_451042:
L_175765:
	movq 0x38(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1235,%r15
	jne L_451047
L_175767:
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_451043
L_175768:
	movq %r13,0x20(%rbp)
L_175624:
	movq %r15,0x58(%rbp)
	movq $0x3D3F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_175625+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1641
.p2align 0x4
L_451043:
	xchgq %r13,%r15
L_175647:
	movq 0x38(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x1235,%r13
	je L_451045
L_175649:
	movq %r15,0x20(%rbp)
	movq 0x0(%r14),%r15
	movq $0x1,0x28(%rbp)
L_175637:
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_172364
L_175639:
	movl %r13d,0x60(%rbp)
	movq $0x3853,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_175640+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_33
.p2align 0x4
L_451045:
L_175648:
	movq %r15,0x28(%rbp)
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq %r13,0x20(%rbp)
	movq $0x1,0x38(%rbp)
L_175628:
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_172364
L_175630:
	movl %r13d,0x60(%rbp)
	movq $0x392D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_175631+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_34
.p2align 0x4
L_451047:
L_175766:
	movq (c_stackP+0x0)(%rip),%rsp
	movq (globalObjptr+0xC9C8)(%rip),%rdi
	xorq %rax,%rax
	call MLton_bug
.p2align 0x4
L_451048:
L_175770:
	movq 0x38(%rbp),%r14
	movq 0x0(%r14),%r11
	movq %r11,0x20(%rbp)
	cmpq $0x1,%r15
	je L_451052
L_175771:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x140E,%r14
	je L_451051
	cmpq $0x140F,%r14
	je L_451049
	jmp L_175678
.p2align 0x4
L_451049:
L_175773:
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	cmpq $0x1,%r14
	je L_451050
L_175774:
	movq 0xA8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0xD0(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC8,%rbp
	leaq (L_175775+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1649
.p2align 0x4
L_451050:
L_175830:
	movq 0xA8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0xD0(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC8,%rbp
	leaq (L_175831+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1649
.p2align 0x4
L_451051:
L_175772:
	movq 0x0(%r15),%r14
	movq %r14,%r15
	jmp x_554
.p2align 0x4
L_451052:
L_175874:
	movq 0x20(%rbp),%r15
	movq %r13,0x20(%rbp)
L_175651:
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x50(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_172364
L_175653:
	cmpl $0x0,%r13d
	jng L_451054
L_175656:
	cmpq $0x0,%r14
	jna L_451053
L_175658:
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r13
	movq 0x10(%r13),%r11
	movq %r11,0xB0(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0xB8(%rbp)
	addq $0xB0,%rbp
	leaq (L_175659+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_3
.p2align 0x4
L_451053:
L_172440:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_451054:
L_175655:
	movq 0x20(%rbp),%r15
L_175622:
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_175647
L_175623:
	movq %r15,0x20(%rbp)
	movq %r14,%r15
	jmp L_175624
.p2align 0x4
L_451057:
L_175620:
	movq 0x0(%r14),%r15
	movq 0x38(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x1236,%r13
	jne L_175622
L_175650:
	movq %r15,0x20(%rbp)
	movq 0x0(%r14),%r15
	jmp L_175651
.p2align 0x4
L_451059:
L_175875:
	movq 0x38(%rbp),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x1236,%r15
	je L_451060
L_175876:
	movq 0x20(%rbp),%r15
	jmp L_175622
.p2align 0x4
L_451060:
L_175877:
	movq 0x38(%rbp),%r13
	movq 0x0(%r13),%r15
	jmp L_175651
.p2align 0x4
.long 0x241F
L_175568:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_175569
L_175600:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_175601+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_175601
.p2align 0x4
.long 0x23B0
L_175601:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_175569:
	movq 0x50(%rbp),%r15
	cmpq $0x1,%r15
	je L_451062
L_175570:
L_175571:
	movq %r15,0x50(%rbp)
	jmp L_175572
.p2align 0x4
L_451062:
L_175599:
	movq $0x1D53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x60(%rbp),%r13
	movq %r13,0x0(%r14)
	xchgq %r14,%r15
	jmp L_175571
.p2align 0x4
.long 0x2420
L_175574:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_175575
L_175590:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_175591+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_175591
.p2align 0x4
.long 0x2421
L_175591:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_175575:
	movq 0xB0(%rbp),%r14
	movl 0x0(%r14),%r13d
	testl %r13d,%r13d
	jz L_451066
L_175576:
	movq 0x50(%rbp),%r14
	cmpq $0x1,%r14
	je L_451065
L_175577:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xEA9,%r15
	je L_451064
L_175581:
	movq 0x10(%r14),%r15
L_175580:
	movq $0x1D4D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x20,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x20(%rbp),%r15
	movq %r15,0x10(%r14)
	movq $0x1D33,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x20,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x10(%r15)
	movq $0x1D39,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x8(%r14)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_451064:
L_175578:
	movq 0x0(%r14),%r15
	jmp L_175580
.p2align 0x4
L_451065:
L_175582:
	movq $0x1,%r15
	jmp L_175580
.p2align 0x4
L_451066:
L_175583:
	movq 0x50(%rbp),%r15
	cmpq $0x1,%r15
	je L_175586
L_175584:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xEA9,%r14
	je L_175586
L_175587:
	movq 0x0(%r15),%r14
	movl 0x0(%r14),%r15d
	decl %r15d
	jo L_172355
L_175588:
	movl %r15d,0x0(%r14)
L_175586:
	movq 0x30(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x2422
L_175605:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_175606
L_175613:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_175614+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_175614
.p2align 0x4
.long 0x241D
L_175614:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_175606:
	movq 0x38(%rbp),%r14
	cmpq $0x1,%r14
	je L_451072
L_175607:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xEA9,%r15
	je L_451071
L_175611:
	movq 0x10(%r14),%r15
	jmp L_175610
.p2align 0x4
L_451071:
L_175608:
	movq 0x0(%r14),%r15
	jmp L_175610
.p2align 0x4
L_451072:
L_175612:
	movq 0x60(%rbp),%r15
	jmp L_175610
.p2align 0x4
.long 0x235A
L_172465:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_172466
L_172467:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_172468+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_172468
.p2align 0x4
.long 0x9BC
L_172468:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_172466:
	movq $0x1D33,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x10(%r15)
	movq $0x1D39,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x8(%r14)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x236E
L_175558:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_175559
L_175562:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_175563+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_175563
.p2align 0x4
.long 0x236F
L_175563:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_175559:
	movq 0xB0(%rbp),%r15
	movl 0x0(%r15),%r14d
	testl %r14d,%r14d
	jz L_451075
L_175560:
	movq $0x1D4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1D33,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x20,%r12
	movq 0x48(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x40(%rbp),%r15
	movq %r15,0x10(%r14)
	movq $0x1D39,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_451075:
L_175561:
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1645
L_175548:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_175549
L_175554:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_175555+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_175555
.p2align 0x4
.long 0x241E
L_175555:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_175549:
	movq $0x55F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x60(%rbp)
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_175550+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1641
.p2align 0x4
.long 0x2418
L_175525:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_175526
L_175537:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_175538+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_175538
.p2align 0x4
.long 0x241B
L_175538:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_175526:
	movq 0xB0(%rbp),%r15
	movl 0x0(%r15),%r14d
	testl %r14d,%r14d
	jz L_451078
L_175527:
	movq $0x3D3F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x78(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_175528+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1641
.p2align 0x4
L_451078:
L_175532:
	movq 0x68(%rbp),%r15
	movl 0x0(%r15),%r14d
	testl %r14d,%r14d
	jnz L_451079
L_175533:
	movq 0x28(%rbp),%r15
	movq 0x8(%r15),%r14
	movq $0x34CB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x58(%rbp)
	movq %r15,0x68(%rbp)
	addq $0x10,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq $0x1,0x48(%rbp)
	movb $0x2,0x50(%rbp)
	movq $0x1,0x60(%rbp)
	movq $0x2,0x70(%rbp)
	addq $0x40,%rbp
	leaq (L_175534+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loopExp_0
.p2align 0x4
L_451079:
L_175535:
	movq 0x30(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x8F8
L_175541:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_175543
L_175544:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_175545+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_175545
.p2align 0x4
.long 0x1DA4
L_175545:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_175543
.p2align 0x4
.long 0x2367
L_172496:
	addq $0xFFFFFFFFFFFFFCD8,%rbp
	movq 0x328(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq %r15,0x328(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x330(%rbp)
	addq $0x328,%rbp
	leaq (L_172497+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigNeg_0
.p2align 0x4
.long 0x2416
L_175514:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0x98(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_175515
L_175519:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_175520+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_175520
.p2align 0x4
.long 0x2417
L_175520:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_175515:
	movq 0x98(%rbp),%r15
	cmpq $0x1,%r15
	je L_451082
L_175516:
L_175517:
	movq 0x50(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x70(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x70(%rbp)
	jmp loop_1744
.p2align 0x4
L_451082:
L_175518:
	movq $0x1D53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x78(%rbp),%r13
	movq %r13,0x0(%r14)
	xchgq %r14,%r15
	jmp L_175517
.p2align 0x4
.long 0x2363
L_172460:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_172461
L_172471:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_172472+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_172472
.p2align 0x4
.long 0x2364
L_172472:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_172461:
	movq 0x38(%rbp),%r14
	cmpq $0x1,%r14
	je L_451085
L_172462:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xEA9,%r15
	je L_451084
L_172469:
	movq 0x10(%r14),%r15
L_172464:
	movq $0x1D41,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl 0x20(%rbp),%r15d
	movl %r15d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq %r14,0x20(%rbp)
	jmp expansive_0
.p2align 0x4
L_451084:
L_172463:
	movq 0x0(%r14),%r15
	jmp L_172464
.p2align 0x4
L_451085:
L_172470:
	movq 0x28(%rbp),%r15
	jmp L_172464
.p2align 0x4
.long 0x235E
L_172424:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_172425
L_172457:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_172458+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_172458
.p2align 0x4
.long 0x2362
L_172458:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_172425:
	movq 0x38(%rbp),%r15
	cmpq $0x1,%r15
	je L_451094
L_172426:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xEA9,%r14
	je L_451093
L_172433:
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq %r11,0x20(%rbp)
	movq 0xB0(%rbp),%r15
	movl 0x0(%r15),%r10d
	testl %r10d,%r10d
	jz L_451091
L_172434:
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_451090
L_172435:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0x140C,%r13
	jne L_451089
L_172437:
	movq 0x0(%r15),%r14
	movl 0x0(%r11),%r15d
	decl %r15d
	jo L_172355
L_172438:
	movl %r15d,0x0(%r11)
	movslq 0x28(%rbp),%r15
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_172440
L_172441:
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0xC0(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0xD0(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0xD8(%rbp)
	addq $0xC0,%rbp
	leaq (L_172442+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1792
.p2align 0x4
L_451089:
L_172436:
	movq (globalObjptr+0x1C80)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_451090:
L_172453:
	movq $0x282D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movl 0x28(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq %r15,0x28(%rbp)
L_172443:
	movq 0x30(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC0,%rbp
	leaq (L_172444+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp shrinkDecs_0
.p2align 0x4
L_451091:
L_172454:
	movl 0x0(%r11),%r14d
	decl %r14d
	jo L_172355
L_172455:
	movl %r14d,0x0(%r11)
	movq 0x30(%rbp),%r15
	jmp loop_1740
.p2align 0x4
L_451093:
L_172427:
	movq 0x0(%r15),%r14
	movq %r14,%r15
L_172428:
	movq $0x1D3F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl 0x28(%rbp),%r15d
	movl %r15d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x30(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_172429+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp shrinkDecs_0
.p2align 0x4
L_451094:
L_172456:
	movq 0x20(%rbp),%r14
	xchgq %r14,%r15
	jmp L_172428
.p2align 0x4
.long 0x2359
L_172373:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_172374
L_172394:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_172395+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_172395
.p2align 0x4
.long 0x235B
L_172395:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_172374:
	movq 0xB0(%rbp),%r15
	movl 0x0(%r15),%r14d
	testl %r14d,%r14d
	jz L_451097
L_172375:
	movq 0x50(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_172364
L_172377:
	movl %r13d,0x60(%rbp)
	movq $0x39E3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq %r14,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_172378+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_35
.p2align 0x4
L_451097:
L_172382:
	movq 0x50(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%ecx
	movslq %ecx,%r13
	cmpq %r13,%r14
	jne L_172364
L_172384:
	cmpl $0x0,%ecx
	jl L_172393
L_172385:
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_1742:
	cmpl %ecx,%ebx
	jnl L_451100
L_172387:
	movslq %ebx,%r15
	movq 0x50(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xEA9,%r15
	je L_172389
L_172390:
	movq 0x0(%r13),%r15
	movl 0x0(%r15),%r14d
	decl %r14d
	jo L_172355
L_172391:
	movl %r14d,0x0(%r15)
L_172389:
	incl %ebx
	jmp loop_1742
.p2align 0x4
L_451100:
L_172386:
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x235C
L_172411:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_172412
L_172416:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_172417+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_172417
.p2align 0x4
.long 0x235D
L_172417:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_172412:
	movq 0x68(%rbp),%r15
	cmpq $0x1,%r15
	je L_451104
L_172413:
L_172414:
	movq 0x50(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x58(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x58(%rbp)
	jmp loop_1741
.p2align 0x4
L_451104:
L_172415:
	movq $0x1D53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x60(%rbp),%r13
	movq %r13,0x0(%r14)
	xchgq %r14,%r15
	jmp L_172414
.p2align 0x4
.long 0x2451
L_176026:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_176027
.p2align 0x4
.long 0x7BC
L_172351:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_172352
L_172357:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_172358+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_172358
.p2align 0x4
.long 0x7B6
L_172358:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_172352:
	movq 0x20(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xEA9,%r15
	je L_451107
L_172354:
	movq 0x0(%r14),%r15
	movl 0x0(%r15),%r14d
	decl %r14d
	jo L_172355
L_172356:
	movl %r14d,0x0(%r15)
	movq 0x30(%rbp),%r15
	jmp loop_1740
.p2align 0x4
L_451107:
L_172353:
	movq 0x30(%rbp),%r15
	jmp loop_1740
.p2align 0x4
.long 0x243F
L_175885:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_175886
L_175924:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_175925+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_175925
.p2align 0x4
.long 0x2444
L_175925:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_175886:
	movq 0x38(%rbp),%r13
	cmpq $0x1,%r13
	je L_451119
L_175887:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xEA9,%r15
	je L_451117
L_175892:
	movq 0x10(%r13),%r14
	movq 0x0(%r13),%r11
	movq %r11,0x20(%rbp)
	movq 0x8(%r13),%r10
	movq 0x0(%r10),%r9
	cmpl $0x1,0x0(%r11)
	jne L_451115
L_175897:
	movq %r9,%r15
	andq $0x3,%r15
	jnz L_451113
L_175901:
	movq 0xFFFFFFFFFFFFFFF8(%r9),%r15
	shrq $0x1,%r15
	cmpq $0x140D,%r15
	je L_451110
L_175902:
	movq 0x28(%rbp),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xEA9,%r15
	je L_451109
L_175904:
	movq 0x10(%r13),%r15
L_175890:
	movq $0x1D51,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	movq %r13,0x20(%rbp)
	addq $0x18,%r12
	jmp expansive_0
.p2align 0x4
L_451109:
L_175903:
	movq 0x0(%r13),%r15
	jmp L_175890
.p2align 0x4
L_451110:
L_175905:
	movq 0x0(%r9),%r15
	movq %r15,0x38(%rbp)
	movq 0x8(%r9),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x28(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xEA9,%r14
	je L_175907
L_175919:
	movq 0x0(%r15),%r14
	movl 0x0(%r14),%r15d
	decl %r15d
	jo L_172355
L_175920:
	movl %r15d,0x0(%r14)
L_175907:
	movq 0x68(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0xD0(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC8,%rbp
	leaq (L_175908+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1649
.p2align 0x4
L_451113:
L_175898:
	movq 0x28(%rbp),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xEA9,%r15
	je L_451114
L_175900:
	movq 0x10(%r13),%r15
	jmp L_175890
.p2align 0x4
L_451114:
L_175899:
	movq 0x0(%r13),%r15
	jmp L_175890
.p2align 0x4
L_451115:
L_175893:
	movq 0x28(%rbp),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xEA9,%r15
	je L_451116
L_175895:
	movq 0x10(%r13),%r15
	jmp L_175890
.p2align 0x4
L_451116:
L_175894:
	movq 0x0(%r13),%r15
	jmp L_175890
.p2align 0x4
L_451117:
L_175888:
	movq 0x0(%r13),%r14
	movq 0x28(%rbp),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xEA9,%r15
	je L_451118
L_175891:
	movq 0x10(%r13),%r15
	jmp L_175890
.p2align 0x4
L_451118:
L_175889:
	movq 0x0(%r13),%r15
	jmp L_175890
.p2align 0x4
L_451119:
L_175921:
	movq 0x28(%rbp),%r11
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xEA9,%r15
	je L_451120
L_175923:
	movq 0x10(%r11),%r15
	movq 0x20(%rbp),%r14
	jmp L_175890
.p2align 0x4
L_451120:
L_175922:
	movq 0x0(%r11),%r15
	movq 0x20(%rbp),%r14
	jmp L_175890
.p2align 0x4
.long 0x2428
L_175685:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_175686
L_175763:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_175764+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_175764
.p2align 0x4
.long 0x2433
L_175764:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_175686:
	movq 0x48(%rbp),%r15
	cmpq $0x1,%r15
	je L_175689
L_175687:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xEA9,%r14
	je L_175689
L_175760:
	movq 0x0(%r15),%r14
	movl 0x0(%r14),%r15d
	decl %r15d
	jo L_172355
L_175761:
	movl %r15d,0x0(%r14)
L_175689:
	movq 0x20(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x48(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_172364
L_175691:
	cmpl $0x0,%r13d
	jl L_172393
L_175692:
	movl $0x0,0x4C(%rbp)
loop_1764:
	movl 0x48(%rbp),%r14d
	cmpl %r14d,0x4C(%rbp)
	jl L_451123
L_175693:
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_451122
L_175694:
expression_0:
	movq %r15,0xC8(%rbp)
	movq $0x3D3F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0xD0(%rbp)
	addq $0xC8,%rbp
	leaq (L_175695+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1641
.p2align 0x4
L_451122:
L_175722:
	movq (globalObjptr+0x1C70)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_451123:
L_175723:
	movslq 0x4C(%rbp),%r15
	movq %r15,%r14
	salq $0x4,%r14
	movq 0x20(%rbp),%r13
	movq 0x0(%r13,%r14,1),%r11
	movq %r11,0x50(%rbp)
	salq $0x4,%r15
	movq 0x8(%r13,%r15,1),%r14
	movq %r14,0x68(%rbp)
	movq 0x38(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0xD0(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC8,%rbp
	leaq (L_175724+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_0
.p2align 0x4
.long 0x2330
L_175625:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_175626
L_175644:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_175645+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_175645
.p2align 0x4
.long 0x2424
L_175645:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_175626:
	movq $0x55F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x38(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x1235,%r13
	je L_451130
L_175636:
	movq %r15,0x28(%rbp)
	movq 0x0(%r14),%r15
	jmp L_175637
.p2align 0x4
L_451130:
L_175627:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq %r15,0x38(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq %r11,0x20(%rbp)
	movq %r13,%r15
	jmp L_175628
.p2align 0x4
.long 0x1B6A
L_175640:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_175641
L_175642:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_175643+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_175643
.p2align 0x4
.long 0x2354
L_175643:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_175641:
	movq $0x246D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x38(%rbp),%r11
	movq %r11,0x0(%r14)
	movq 0x20(%rbp),%r13
	movq 0x28(%rbp),%r15
L_175633:
	movq $0x1D4F,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r15,0x8(%r11)
	movq %r13,0x10(%r11)
	movq %r11,0x20(%rbp)
	addq $0x20,%r12
	jmp expansive_0
.p2align 0x4
.long 0x1645
L_175631:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_175632
L_175634:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_175635+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_175635
.p2align 0x4
.long 0x2424
L_175635:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_175632:
	movq $0x246B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x20(%rbp),%r11
	movq %r11,0x0(%r14)
	movq 0x50(%rbp),%r11
	movq %r11,0x8(%r14)
	movq 0x28(%rbp),%r13
	movq 0x38(%rbp),%r15
	jmp L_175633
.p2align 0x4
.long 0x2434
L_175775:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_175776
L_175828:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_175829+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_175829
.p2align 0x4
.long 0x243C
L_175829:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_175776:
	movq 0x50(%rbp),%r15
	cmpq $0x1,%r15
	je L_175779
L_175777:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xEA9,%r14
	je L_175779
L_175825:
	movq 0x0(%r15),%r14
	movl 0x0(%r14),%r15d
	decl %r15d
	jo L_172355
L_175826:
	movl %r15d,0x0(%r14)
L_175779:
	movq 0x20(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x50(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_172364
L_175781:
	cmpl $0x0,%r13d
	jl L_172393
L_175782:
	movl $0x0,0x54(%rbp)
loop_1766:
	movl 0x50(%rbp),%r14d
	cmpl %r14d,0x54(%rbp)
	jl L_451135
L_175783:
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_175722
L_175784:
	jmp expression_0
.p2align 0x4
L_451135:
L_175786:
	movslq 0x54(%rbp),%r15
	movq %r15,%r14
	salq $0x4,%r14
	movq 0x20(%rbp),%r13
	movq 0x0(%r13,%r14,1),%r11
	movq %r11,0x70(%rbp)
	salq $0x4,%r15
	movq 0x8(%r13,%r15,1),%r14
	movq 0x10(%r14),%r11
	movq 0x38(%rbp),%r10
	movq 0x8(%r14),%r9
	movq 0x10(%r9),%r8
	cmpq %r8,0x10(%r10)
	jne L_175788
L_175794:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_451136
L_175795:
	movq 0x8(%r11),%r15
	movq %r15,0x38(%rbp)
	movq 0x68(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0xD0(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x80(%rbp)
	movq %r15,0xC8(%rbp)
	addq $0xC8,%rbp
	leaq (L_175796+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1649
.p2align 0x4
L_451136:
L_175788:
	movq 0xA0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq $0x34CB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0xE0(%rbp)
	movq %r15,0xF0(%rbp)
	addq $0x10,%r12
	movq 0x70(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq $0x1,0xD0(%rbp)
	movb $0x2,0xD8(%rbp)
	movq $0x1,0xE8(%rbp)
	movq $0x2,0xF8(%rbp)
	addq $0xC8,%rbp
	leaq (L_175789+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loopExp_0
.p2align 0x4
.long 0x2428
L_175831:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_175832
L_175872:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_175873+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_175873
.p2align 0x4
.long 0x2433
L_175873:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_175832:
	movq 0x48(%rbp),%r15
	cmpq $0x1,%r15
	je L_175835
L_175833:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xEA9,%r14
	je L_175835
L_175869:
	movq 0x0(%r15),%r14
	movl 0x0(%r14),%r15d
	decl %r15d
	jo L_172355
L_175870:
	movl %r15d,0x0(%r14)
L_175835:
	movq 0x20(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x48(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_172364
L_175837:
	cmpl $0x0,%r13d
	jl L_172393
L_175838:
	movl $0x0,0x4C(%rbp)
loop_1768:
	movl 0x48(%rbp),%r14d
	cmpl %r14d,0x4C(%rbp)
	jl L_451145
L_175839:
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_175722
L_175840:
	jmp expression_0
.p2align 0x4
L_451145:
L_175842:
	movl 0x4C(%rbp),%r15d
	movslq %r15d,%r14
	movq %r14,%r13
	salq $0x4,%r13
	movq 0x20(%rbp),%r11
	movq 0x0(%r11,%r13,1),%r10
	movq %r10,0x50(%rbp)
	salq $0x4,%r14
	movq 0x8(%r11,%r14,1),%r13
	movq 0x10(%r13),%r10
	movq 0x38(%rbp),%r9
	movq 0x8(%r13),%r8
	movq 0x10(%r8),%rsp
	cmpq %rsp,0x10(%r9)
	jne x_555
L_175848:
	cmpq $0x1,%r10
	jne x_1787
L_175850:
	incl %r15d
	cmpl $0x0,%r15d
	jl L_175753
L_175851:
	cmpl %r15d,0x48(%rbp)
	jl L_451148
L_175852:
	movl %r15d,0x38(%rbp)
loop_1769:
	movl 0x48(%rbp),%r15d
	cmpl %r15d,0x38(%rbp)
	jl L_451147
L_175853:
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_451146
L_175854:
	movq 0xA0(%rbp),%r14
	movq 0x8(%r14),%r13
	movq $0x34CB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	movq %r14,0xE0(%rbp)
	movq %r14,0xF0(%rbp)
	addq $0x10,%r12
	movq %r15,0xC8(%rbp)
	movq $0x1,0xD0(%rbp)
	movb $0x2,0xD8(%rbp)
	movq $0x1,0xE8(%rbp)
	movq $0x2,0xF8(%rbp)
	addq $0xC8,%rbp
	leaq (L_175855+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loopExp_0
.p2align 0x4
L_451146:
L_175857:
	movq 0x50(%rbp),%r15
	jmp expression_0
.p2align 0x4
L_451147:
L_175861:
	movslq 0x38(%rbp),%r15
	salq $0x4,%r15
	movq 0x20(%rbp),%r14
	movq 0x0(%r14,%r15,1),%r13
	movq %r13,0xC8(%rbp)
	movq 0xA0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq $0x34CB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0xE0(%rbp)
	movq %r15,0xF0(%rbp)
	addq $0x10,%r12
	movq $0x1,0xD0(%rbp)
	movb $0x2,0xD8(%rbp)
	movq $0x1,0xE8(%rbp)
	movq $0x2,0xF8(%rbp)
	addq $0xC8,%rbp
	leaq (L_175862+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loopExp_0
.p2align 0x4
L_451148:
L_175753:
	movq (globalObjptr+0x1C78)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
x_1787:
x_555:
	movq 0xA0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq $0x34CB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0xE0(%rbp)
	movq %r15,0xF0(%rbp)
	addq $0x10,%r12
	movq 0x50(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq $0x1,0xD0(%rbp)
	movb $0x2,0xD8(%rbp)
	movq $0x1,0xE8(%rbp)
	movq $0x2,0xF8(%rbp)
	addq $0xC8,%rbp
	leaq (L_175844+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loopExp_0
.p2align 0x4
.long 0x2425
L_175659:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movq 0xB0(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_175660
L_175673:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_175674+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_175674
.p2align 0x4
.long 0x2427
L_175674:
	addq $0xFFFFFFFFFFFFFF50,%rbp
L_175660:
	movq 0x58(%rbp),%r15
	andq $0x1,%r15
	jnz L_451158
L_175661:
	movl $0xFFFFFFFF,%ecx
L_175662:
	cmpl 0x50(%rbp),%ecx
	jne L_175655
L_175664:
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_451156
L_175665:
	movq 0xA0(%rbp),%r14
	movq 0x8(%r14),%r13
	movq $0x34CB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	movq %r14,0x70(%rbp)
	movq %r14,0x80(%rbp)
	addq $0x10,%r12
	movq %r15,0x58(%rbp)
	movq $0x1,0x60(%rbp)
	movb $0x2,0x68(%rbp)
	movq $0x1,0x78(%rbp)
	movq $0x2,0x88(%rbp)
	addq $0x58,%rbp
	leaq (L_175666+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loopExp_0
.p2align 0x4
L_451156:
L_175668:
	movq 0x20(%rbp),%r15
	jmp L_175647
.p2align 0x4
L_451158:
L_175672:
	movq 0x58(%rbp),%r15
	shrq $0x1,%r15
	movl %r15d,%ecx
	jmp L_175662
.p2align 0x4
.long 0x241C
L_175550:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_175551
L_175552:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_175553+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_175553
.p2align 0x4
.long 0x241D
L_175553:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_175551:
	movq $0x55F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1D49,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x20,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x60(%rbp),%r15
	movq %r15,0x10(%r14)
	movq %r14,0x20(%rbp)
	jmp expansive_0
.p2align 0x4
.long 0x2419
L_175528:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_175529
L_175530:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_175531+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_175531
.p2align 0x4
.long 0x241A
L_175531:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_175529:
	movq $0x55F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x1D47,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x18(%r13)
	movq %r14,0x20(%r13)
	addq $0x30,%r12
	movl $0x1,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq 0x60(%rbp),%r15
	movq %r15,0x8(%r13)
	movq 0x58(%rbp),%r15
	movq %r15,0x10(%r13)
	movq $0x1D33,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x20,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x10(%r15)
	movq $0x1D39,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x8(%r14)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x69B
L_175534:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_175535
.p2align 0x4
.long 0x2368
L_172497:
	addq $0xFFFFFFFFFFFFFCD8,%rbp
	movq 0x328(%rbp),%r15
	movq %r15,0x320(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_172498
L_175493:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x330,%rbp
	leaq (L_175494+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_175494
.p2align 0x4
.long 0x2413
L_175494:
	addq $0xFFFFFFFFFFFFFCD0,%rbp
L_172498:
	movq 0x98(%rbp),%r13
	movq 0x30(%r13),%r15
	movq 0x28(%r13),%r14
	movq 0x20(%r13),%r11
	movq 0x38(%r13),%r10
	movq 0x8(%r10),%r9
	movq $0x3D6B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq 0x320(%rbp),%r10
	movq %r10,0x0(%r13)
	movq 0x88(%rbp),%r10
	movq %r10,0x8(%r13)
	movq $0x1763,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r10,0x328(%rbp)
	movq %r9,0x0(%r10)
	movq %r13,0x8(%r10)
	movq %r15,0x10(%r10)
	movq %r14,0x18(%r10)
	movq %r11,0x20(%r10)
	addq $0x30,%r12
	movq 0x78(%rbp),%r13
	cmpq $0x1,%r13
	je L_173398
L_172499:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
.p2align 0x4,,0x7
L_172500:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0x1411,%r13
	jne L_452203
L_173394:
	cmpq $0x1,%r14
	je L_451162
L_173395:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_172500
.p2align 0x4
L_451162:
L_173396:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_173398
L_175490:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x338,%rbp
	leaq (L_175491+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_175491
.p2align 0x4
.long 0x2412
L_175491:
	addq $0xFFFFFFFFFFFFFCC8,%rbp
L_173398:
	movq 0x78(%rbp),%r15
	cmpq $0x1,%r15
	je L_452201
L_173399:
	movq 0x8(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x68(%rbp)
	movq $0x1,0x78(%rbp)
.p2align 0x4,,0x7
L_173400:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_452200
.p2align 0x4,,0x7
L_173401:
	movq 0x68(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1411,%r14
	jne L_452199
L_173403:
	movq 0x0(%r15),%r14
	movq $0x284B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r14,0x0(%r15)
	movq 0x78(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x60(%rbp),%r13
	cmpq $0x1,%r13
	je L_451163
L_173404:
	movq %r15,0x78(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x60(%rbp)
	movq %r15,0x68(%rbp)
	jmp L_173400
.p2align 0x4
L_451163:
L_173405:
	movq %r14,0x68(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq $0x1,0x78(%rbp)
.p2align 0x4,,0x7
L_173406:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_452198
.p2align 0x4,,0x7
L_173407:
	movq $0x284B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x60(%rbp),%r14
	cmpq $0x1,%r14
	je L_451164
L_173408:
	movq %r15,0x78(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x60(%rbp)
	movq %r15,0x68(%rbp)
	jmp L_173406
.p2align 0x4
L_451164:
L_173410:
	movq 0x28(%rbp),%r14
	movq %r14,%r13
	andq $0xFF,%r13
	cmpq $0xD,%r13
	je L_452182
	cmpq $0x16,%r13
	je L_452167
	cmpq $0x21,%r13
	je L_452149
	cmpq $0x22,%r13
	je L_452136
	cmpq $0x32,%r13
	je L_452123
	cmpq $0x39,%r13
	je L_452104
	cmpq $0x3A,%r13
	je L_452083
	cmpq $0x5A,%r13
	je L_452066
	cmpq $0x5B,%r13
	je L_452048
	cmpq $0x61,%r13
	je L_452033
	cmpq $0x69,%r13
	je L_452018
	cmpq $0x6A,%r13
	je L_452003
	cmpq $0x6B,%r13
	je L_451988
	cmpq $0x6D,%r13
	je L_451970
	cmpq $0x6E,%r13
	je L_451955
	cmpq $0x6F,%r13
	je L_451940
	cmpq $0x71,%r13
	je L_451925
	cmpq $0x72,%r13
	je L_451910
	cmpq $0x73,%r13
	je L_451895
	cmpq $0x75,%r13
	je L_451880
	cmpq $0x76,%r13
	je L_451865
	cmpq $0x77,%r13
	je L_451848
	cmpq $0x79,%r13
	je L_451830
	cmpq $0x7A,%r13
	je L_451812
	cmpq $0x7B,%r13
	je L_451790
	cmpq $0x7E,%r13
	je L_451768
	cmpq $0x7F,%r13
	je L_451746
	cmpq $0x81,%r13
	je L_451728
	cmpq $0x82,%r13
	je L_451707
	cmpq $0x83,%r13
	je L_451686
	cmpq $0x85,%r13
	je L_451663
	cmpq $0x86,%r13
	je L_451636
	cmpq $0x89,%r13
	je L_451618
L_173411:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_173413
L_173516:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%rax
	shrq $0x1,%rax
	subq $0x1211,%rax
	cmpq $0x18,%rax
	ja L_451165
	leaq jumpTable_587(%rip),%rbx
	jmp *(%rbx,%rax,8)
.data
.p2align 0x4
jumpTable_587:
.quad L_451599,L_451580,L_451562,L_451544,L_451526,L_451508,L_451481,L_451462,L_451443,L_451425,L_451406,L_451391,L_451376,L_451357,L_451339,L_451321,L_451303,L_451287,L_451269,L_451251,L_451233,L_451214,L_451196,L_173413,L_451178
.text
.p2align 0x4
L_451165:
L_173413:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_172504
L_173414:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
L_173415:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_172504
L_173416:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE4C,%r15
	jne L_172504
L_173417:
	movq 0x0(%r13),%r15
L_173418:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_172504
L_173419:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_173420:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_451173
L_173459:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	je L_451170
	cmpq $0xE4C,%r14
	je L_451167
	movq %r13,%r14
L_173421:
	cmpq $0x1,%r14
	jne L_451166
L_173422:
	movq %r15,0x60(%rbp)
intInfUnary_9:
	movq 0x60(%rbp),%r15
	movq %r15,0x338(%rbp)
	movq 0x328(%rbp),%r15
	movq %r15,0x340(%rbp)
	addq $0x338,%rbp
	leaq (L_173423+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1473
.p2align 0x4
L_451166:
L_172504:
	movq 0x50(%rbp),%r15
	movq %r15,0x38(%rbp)
doit_27:
	movq 0x28(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xC0,%rbp
	leaq (L_172505+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1793
.p2align 0x4
L_451167:
L_173511:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_451169
L_173512:
	cmpq $0x1,0x8(%r13)
	jne L_172504
x_553:
	leaq L_173435(%rip),%r13
	movq %r13,0x10(%rbp)
	movq %rbp,%r13
	addq $0x18,%r13
	subq (gcState+0x560)(%rip),%r13
	movq %r13,(gcState+0x20)(%rip)
	movq 0xC8(%rbp),%r13
	movq %r13,0x108(%rbp)
	movq %r15,0xC8(%rbp)
	movq 0x328(%rbp),%r15
	movq %r15,0x110(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0x118(%rbp)
	movq %r14,0xC0(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x120(%rbp)
	movq 0x100(%rbp),%r15
	movq 0xD0(%rbp),%r14
	movq %r14,0x100(%rbp)
	movq %r15,0xD0(%rbp)
	movq 0xD8(%rbp),%r15
	movq 0xF8(%rbp),%r14
	movq %r14,0xD8(%rbp)
	movq %r15,0xF8(%rbp)
	movq 0xF0(%rbp),%r15
	movq 0xE0(%rbp),%r14
	movq %r14,0xF0(%rbp)
	movq %r15,0xE0(%rbp)
	addq $0xC0,%rbp
	leaq (L_173514+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp intInfBinary_24
.p2align 0x4
L_451169:
L_173515:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451170:
L_173460:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_451172
L_173461:
	cmpq $0x1,0x8(%r13)
	jne L_172504
L_173462:
	movq %r15,0x60(%rbp)
	movq %r14,0x68(%rbp)
x_552:
	movq 0x60(%rbp),%r15
	movq %r15,0x338(%rbp)
	movq 0x328(%rbp),%r15
	movq %r15,0x340(%rbp)
	addq $0x338,%rbp
	leaq (L_173463+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1473
.p2align 0x4
L_451172:
L_173510:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451173:
	movq %r13,%r14
	jmp L_173421
.p2align 0x4
L_451178:
L_174426:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_172504
L_174427:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
L_174428:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_172504
L_174429:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE4B,%r15
	je L_451189
	cmpq $0xE4C,%r15
	je L_451179
	jmp L_172504
.p2align 0x4
L_451179:
L_174442:
	movq 0x0(%r13),%r15
L_174443:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_172504
L_174444:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_174445:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_451187
L_174448:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	je L_451184
	cmpq $0xE4C,%r14
	je L_451181
	movq %r13,%r14
L_174446:
	cmpq $0x1,%r14
	jne L_172504
L_174447:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451181:
L_174453:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_451183
L_174454:
	cmpq $0x1,0x8(%r13)
	jne L_172504
	jmp x_553
.p2align 0x4
L_451183:
L_174456:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451184:
L_174449:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_451186
L_174450:
	cmpq $0x1,0x8(%r13)
	jne L_172504
L_174451:
	movq %r15,0x60(%rbp)
	movq %r14,0x68(%rbp)
	jmp x_552
.p2align 0x4
L_451186:
L_174452:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451187:
	movq %r13,%r14
	jmp L_174446
.p2align 0x4
L_451189:
L_174430:
	movq 0x0(%r13),%r15
	cmpq $0x1,%r14
	jne L_172504
L_174431:
	movq 0x1A0(%rbp),%r14
	movq 0x8(%r14),%r13
	cmpq $0x1,0x0(%r13)
	jne L_172504
L_174433:
	movq %r15,%r14
	andq $0x1,%r14
	cmpq $0x1,%r14
	je L_451190
L_174434:
	movsd 0x0(%r15),%xmm15
	movsd %xmm15,0xC0(%rbp)
	movq 0x1B8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0xD8(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xD0(%rbp)
	movq 0x1C0(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC0,%rbp
	leaq (L_174435+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1474
.p2align 0x4
L_451190:
L_174441:
	shrq $0x1,%r15
	movl %r15d,%r14d
	movd %r14d,%xmm15
	movss %xmm15,%xmm14
	movss %xmm14,0xC0(%rbp)
	movq 0x1A8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0xD8(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xD0(%rbp)
	movq 0x1B0(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC0,%rbp
	leaq (L_174435+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1475
.p2align 0x4
L_451196:
L_174383:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_172504
L_174384:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
L_174385:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_172504
L_174386:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE4A,%r15
	je L_451207
	cmpq $0xE4C,%r15
	je L_451197
	jmp L_172504
.p2align 0x4
L_451197:
L_174410:
	movq 0x0(%r13),%r15
L_174411:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_172504
L_174412:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_174413:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_451205
L_174416:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	je L_451202
	cmpq $0xE4C,%r14
	je L_451199
	movq %r13,%r14
L_174414:
	cmpq $0x1,%r14
	jne L_172504
L_174415:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451199:
L_174421:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_451201
L_174422:
	cmpq $0x1,0x8(%r13)
	jne L_172504
	jmp x_553
.p2align 0x4
L_451201:
L_174424:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451202:
L_174417:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_451204
L_174418:
	cmpq $0x1,0x8(%r13)
	jne L_172504
L_174419:
	movq %r15,0x60(%rbp)
	movq %r14,0x68(%rbp)
	jmp x_552
.p2align 0x4
L_451204:
L_174420:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451205:
	movq %r13,%r14
	jmp L_174414
.p2align 0x4
L_451207:
L_174387:
	movq 0x0(%r13),%r15
	movq %r15,0x60(%rbp)
L_174388:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_172504
L_174389:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_174390:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_172504
L_174391:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	jne L_172504
L_174392:
	movq 0x0(%r11),%r14
	movq %r14,0x68(%rbp)
	cmpq $0x1,%r13
	jne L_172504
L_174393:
	movq 0x268(%rbp),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x70(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x78(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x80(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0xC0(%rbp)
	movq %r13,0xC8(%rbp)
	addq $0xC0,%rbp
	leaq (L_174394+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_0
.p2align 0x4
L_451214:
L_174346:
	movq 0x28(%rbp),%r14
	movl 0x0(%r14),%r13d
	movl %r13d,0x5C(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x60(%rbp)
L_174347:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_172504
L_174348:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
L_174349:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_172504
L_174350:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE4A,%r15
	je L_451225
	cmpq $0xE4C,%r15
	je L_451215
	jmp L_172504
.p2align 0x4
L_451215:
L_174367:
	movq 0x0(%r13),%r15
L_174368:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_172504
L_174369:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_174370:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_451223
L_174373:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	je L_451220
	cmpq $0xE4C,%r14
	je L_451217
	movq %r13,%r14
L_174371:
	cmpq $0x1,%r14
	jne L_172504
L_174372:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451217:
L_174378:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_451219
L_174379:
	cmpq $0x1,0x8(%r13)
	jne L_172504
	jmp x_553
.p2align 0x4
L_451219:
L_174381:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451220:
L_174374:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_451222
L_174375:
	cmpq $0x1,0x8(%r13)
	jne L_172504
L_174376:
	movq %r15,0x60(%rbp)
	movq %r14,0x68(%rbp)
	jmp x_552
.p2align 0x4
L_451222:
L_174377:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451223:
	movq %r13,%r14
	jmp L_174371
.p2align 0x4
L_451225:
L_174351:
	movq 0x0(%r13),%r15
L_174352:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_172504
L_174353:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_174354:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_172504
L_174355:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	jne L_172504
L_174356:
	movq 0x0(%r11),%r10
	movq %r10,0x68(%rbp)
	cmpq $0x1,%r13
	jne L_172504
L_174357:
	movl 0x5C(%rbp),%r13d
	testl %r13d,%r13d
	jnz L_451226
L_174358:
	movq 0x0(%r15),%r14
	movq 0x0(%r10),%r15
L_174359:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	leaq L_173435(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0xC0(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq %r13,0xC0(%rbp)
	addq $0xC0,%rbp
	leaq (L_174360+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1183
.p2align 0x4
L_451226:
L_174361:
	movq %r15,0x1D8(%rbp)
	leaq L_173435(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x1C8(%rbp),%r15
	movq %r15,0x1E0(%rbp)
	addq $0x1D8,%rbp
	leaq (L_174362+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toIntInfX_0
.p2align 0x4
L_451233:
L_174317:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_172504
L_174318:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
L_174319:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_172504
L_174320:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE4A,%r15
	je L_451244
	cmpq $0xE4C,%r15
	je L_451234
	jmp L_172504
.p2align 0x4
L_451234:
L_174331:
	movq 0x0(%r13),%r15
L_174332:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_172504
L_174333:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_174334:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_451242
L_174337:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	je L_451239
	cmpq $0xE4C,%r14
	je L_451236
	movq %r13,%r14
L_174335:
	cmpq $0x1,%r14
	jne L_172504
L_174336:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451236:
L_174342:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_451238
L_174343:
	cmpq $0x1,0x8(%r13)
	jne L_172504
	jmp x_553
.p2align 0x4
L_451238:
L_174345:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451239:
L_174338:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_451241
L_174339:
	cmpq $0x1,0x8(%r13)
	jne L_172504
L_174340:
	movq %r15,0x60(%rbp)
	movq %r14,0x68(%rbp)
	jmp x_552
.p2align 0x4
L_451241:
L_174341:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451242:
	movq %r13,%r14
	jmp L_174335
.p2align 0x4
L_451244:
L_174321:
	movq 0x0(%r13),%r15
L_174322:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_172504
L_174323:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_174324:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_172504
L_174325:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	jne L_172504
L_174326:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	jne L_172504
L_174327:
	movq %r14,0xC0(%rbp)
	movq %r15,0xC8(%rbp)
	leaq L_173435(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x260(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (word_52+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1476
.p2align 0x4
L_451251:
L_174284:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_172504
L_174285:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
L_174286:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_172504
L_174287:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE4A,%r15
	je L_451262
	cmpq $0xE4C,%r15
	je L_451252
	jmp L_172504
.p2align 0x4
L_451252:
L_174301:
	movq 0x0(%r13),%r15
L_174302:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_172504
L_174303:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_174304:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_451260
L_174307:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	je L_451257
	cmpq $0xE4C,%r14
	je L_451254
	movq %r13,%r14
L_174305:
	cmpq $0x1,%r14
	jne L_172504
L_174306:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451254:
L_174312:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_451256
L_174313:
	cmpq $0x1,0x8(%r13)
	jne L_172504
	jmp x_553
.p2align 0x4
L_451256:
L_174315:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451257:
L_174308:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_451259
L_174309:
	cmpq $0x1,0x8(%r13)
	jne L_172504
L_174310:
	movq %r15,0x60(%rbp)
	movq %r14,0x68(%rbp)
	jmp x_552
.p2align 0x4
L_451259:
L_174311:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451260:
	movq %r13,%r14
	jmp L_174305
.p2align 0x4
L_451262:
L_174288:
	movq 0x0(%r13),%r15
	cmpq $0x1,%r14
	jne L_172504
L_174289:
	movq 0x1A0(%rbp),%r14
	movq 0x8(%r14),%r13
	cmpq $0x1,0x0(%r13)
	jne L_172504
L_174291:
	movq 0x8(%r15),%r14
	cmpq $0x41,%r14
	je L_451264
L_174292:
	cmpq $0x81,%r14
	jne L_451263
L_174294:
	movq %r15,0xC0(%rbp)
	movq 0x1C0(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq 0x278(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (realOpt_54+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1477
.p2align 0x4
L_451263:
L_174293:
	movq (globalObjptr+0x1A50)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_451264:
L_174300:
	movq %r15,0xC0(%rbp)
	movq 0x1B0(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq 0x270(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (realOpt_54+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1478
.p2align 0x4
L_451269:
L_174253:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_172504
L_174254:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
L_174255:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_172504
L_174256:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE4A,%r15
	je L_451280
	cmpq $0xE4C,%r15
	je L_451270
	jmp L_172504
.p2align 0x4
L_451270:
L_174268:
	movq 0x0(%r13),%r15
L_174269:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_172504
L_174270:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_174271:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_451278
L_174274:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	je L_451275
	cmpq $0xE4C,%r14
	je L_451272
	movq %r13,%r14
L_174272:
	cmpq $0x1,%r14
	jne L_172504
L_174273:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451272:
L_174279:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_451274
L_174280:
	cmpq $0x1,0x8(%r13)
	jne L_172504
	jmp x_553
.p2align 0x4
L_451274:
L_174282:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451275:
L_174275:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_451277
L_174276:
	cmpq $0x1,0x8(%r13)
	jne L_172504
L_174277:
	movq %r15,0x60(%rbp)
	movq %r14,0x68(%rbp)
	jmp x_552
.p2align 0x4
L_451277:
L_174278:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451278:
	movq %r13,%r14
	jmp L_174272
.p2align 0x4
L_451280:
L_174257:
	movq 0x0(%r13),%r15
	movq %r15,0x60(%rbp)
L_174258:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_172504
L_174259:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_174260:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_172504
L_174261:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	jne L_172504
L_174262:
	movq 0x0(%r11),%r14
	movq %r14,0x68(%rbp)
	cmpq $0x1,%r13
	jne L_172504
L_174263:
	movq 0x8(%r15),%r13
	movq %r13,0xC8(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0xC0(%rbp)
	addq $0xC0,%rbp
	leaq (L_174264+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_0
.p2align 0x4
L_451287:
L_174220:
	movq 0x28(%rbp),%r14
	movl 0x0(%r14),%r13d
	movq 0x10(%r14),%r11
	movq %r11,0x60(%rbp)
L_174221:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_172504
L_174222:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r11
L_174223:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_172504
L_174224:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE4A,%r15
	je L_451298
	cmpq $0xE4C,%r15
	je L_451288
	jmp L_172504
.p2align 0x4
L_451288:
L_174237:
	movq 0x0(%r11),%r15
L_174238:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_172504
L_174239:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_174240:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_451296
L_174243:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	je L_451293
	cmpq $0xE4C,%r14
	je L_451290
	movq %r13,%r14
L_174241:
	cmpq $0x1,%r14
	jne L_172504
L_174242:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451290:
L_174248:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_451292
L_174249:
	cmpq $0x1,0x8(%r13)
	jne L_172504
	jmp x_553
.p2align 0x4
L_451292:
L_174251:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451293:
L_174244:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_451295
L_174245:
	cmpq $0x1,0x8(%r13)
	jne L_172504
L_174246:
	movq %r15,0x60(%rbp)
	movq %r14,0x68(%rbp)
	jmp x_552
.p2align 0x4
L_451295:
L_174247:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451296:
	movq %r13,%r14
	jmp L_174241
.p2align 0x4
L_451298:
L_174225:
	movq 0x0(%r11),%r15
	cmpq $0x1,%r14
	jne L_172504
L_174226:
	testl %r13d,%r13d
	jnz L_451299
L_174227:
	movq 0x0(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x238(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xC0,%rbp
	leaq (L_174228+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_451299:
L_174233:
	movq %r15,0xC0(%rbp)
	movq 0x230(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0xC8(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x68(%rbp)
	leaq L_173435(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0xC0,%rbp
	leaq (L_174234+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toIntInfX_0
.p2align 0x4
L_451303:
L_174191:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_172504
L_174192:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
L_174193:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_172504
L_174194:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE4A,%r15
	je L_451314
	cmpq $0xE4C,%r15
	je L_451304
	jmp L_172504
.p2align 0x4
L_451304:
L_174205:
	movq 0x0(%r13),%r15
L_174206:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_172504
L_174207:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_174208:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_451312
L_174211:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	je L_451309
	cmpq $0xE4C,%r14
	je L_451306
	movq %r13,%r14
L_174209:
	cmpq $0x1,%r14
	jne L_172504
L_174210:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451306:
L_174216:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_451308
L_174217:
	cmpq $0x1,0x8(%r13)
	jne L_172504
	jmp x_553
.p2align 0x4
L_451308:
L_174219:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451309:
L_174212:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_451311
L_174213:
	cmpq $0x1,0x8(%r13)
	jne L_172504
L_174214:
	movq %r15,0x60(%rbp)
	movq %r14,0x68(%rbp)
	jmp x_552
.p2align 0x4
L_451311:
L_174215:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451312:
	movq %r13,%r14
	jmp L_174209
.p2align 0x4
L_451314:
L_174195:
	movq 0x0(%r13),%r15
L_174196:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_172504
L_174197:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_174198:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_172504
L_174199:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	jne L_172504
L_174200:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	jne L_172504
L_174201:
	movq %r14,0xC0(%rbp)
	movq %r15,0xC8(%rbp)
	leaq L_173435(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x258(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (word_50+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1437
.p2align 0x4
L_451321:
L_174162:
	movq 0x28(%rbp),%r14
	movl 0x0(%r14),%r13d
L_174163:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_172504
L_174164:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r11
L_174165:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_172504
L_174166:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE4A,%r15
	je L_451332
	cmpq $0xE4C,%r15
	je L_451322
	jmp L_172504
.p2align 0x4
L_451322:
L_174175:
	movq 0x0(%r11),%r15
L_174176:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_172504
L_174177:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_174178:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_451330
L_174181:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	je L_451327
	cmpq $0xE4C,%r14
	je L_451324
	movq %r13,%r14
L_174179:
	cmpq $0x1,%r14
	jne L_172504
L_174180:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451324:
L_174186:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_451326
L_174187:
	cmpq $0x1,0x8(%r13)
	jne L_172504
	jmp x_553
.p2align 0x4
L_451326:
L_174189:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451327:
L_174182:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_451329
L_174183:
	cmpq $0x1,0x8(%r13)
	jne L_172504
L_174184:
	movq %r15,0x60(%rbp)
	movq %r14,0x68(%rbp)
	jmp x_552
.p2align 0x4
L_451329:
L_174185:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451330:
	movq %r13,%r14
	jmp L_174179
.p2align 0x4
L_451332:
L_174167:
	movq 0x0(%r11),%r15
L_174168:
	movq %r14,%r11
	andq $0x3,%r11
	jnz L_172504
L_174169:
	movq 0x8(%r14),%r11
	movq 0x0(%r14),%r10
L_174170:
	movq %r10,%r14
	andq $0x3,%r14
	jnz L_172504
L_174171:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	jne L_172504
L_174172:
	movq 0x0(%r10),%r14
	cmpq $0x1,%r11
	jne L_172504
L_174173:
	movl %r13d,0xC0(%rbp)
	movq %r14,0xC8(%rbp)
	movq %r15,0xD0(%rbp)
	leaq L_173435(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x130(%rbp),%r15
	movq %r15,0xD8(%rbp)
	addq $0xC0,%rbp
	leaq (L_174174+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1479
.p2align 0x4
L_451339:
L_174114:
	movq 0x28(%rbp),%r14
	movl 0x0(%r14),%r13d
	movl %r13d,0x5C(%rbp)
L_174115:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_172504
L_174116:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
L_174117:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_172504
L_174118:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE4A,%r15
	je L_451350
	cmpq $0xE4C,%r15
	je L_451340
	jmp L_172504
.p2align 0x4
L_451340:
L_174147:
	movq 0x0(%r13),%r15
L_174148:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_172504
L_174149:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_174150:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_451348
L_174153:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	je L_451345
	cmpq $0xE4C,%r14
	je L_451342
	movq %r13,%r14
L_174151:
	cmpq $0x1,%r14
	jne L_172504
L_174152:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451342:
L_174158:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_451344
L_174159:
	cmpq $0x1,0x8(%r13)
	jne L_172504
	jmp x_553
.p2align 0x4
L_451344:
L_174161:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451345:
L_174154:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_451347
L_174155:
	cmpq $0x1,0x8(%r13)
	jne L_172504
L_174156:
	movq %r15,0x60(%rbp)
	movq %r14,0x68(%rbp)
	jmp x_552
.p2align 0x4
L_451347:
L_174157:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451348:
	movq %r13,%r14
	jmp L_174151
.p2align 0x4
L_451350:
L_174119:
	movq 0x0(%r13),%r15
	movq %r15,0x60(%rbp)
L_174120:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_172504
L_174121:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_174122:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_172504
L_174123:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	jne L_172504
L_174124:
	movq 0x0(%r11),%r14
	movq %r14,0x68(%rbp)
	cmpq $0x1,%r13
	jne L_172504
L_174125:
	movq 0x250(%rbp),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x70(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x78(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x80(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x88(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0xC0(%rbp)
	movq %r13,0xC8(%rbp)
	addq $0xC0,%rbp
	leaq (L_174126+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_0
.p2align 0x4
L_451357:
L_174081:
	movq 0x28(%rbp),%r14
	movl 0x0(%r14),%r13d
	movl %r13d,0x5C(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x60(%rbp)
L_174082:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_172504
L_174083:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
L_174084:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_172504
L_174085:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE4A,%r15
	je L_451368
	cmpq $0xE4C,%r15
	je L_451358
	jmp L_172504
.p2align 0x4
L_451358:
L_174099:
	movq 0x0(%r13),%r15
L_174100:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_172504
L_174101:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_174102:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_451366
L_174105:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	je L_451363
	cmpq $0xE4C,%r14
	je L_451360
	movq %r13,%r14
L_174103:
	cmpq $0x1,%r14
	jne L_172504
L_174104:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451360:
L_174110:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_451362
L_174111:
	cmpq $0x1,0x8(%r13)
	jne L_172504
	jmp x_553
.p2align 0x4
L_451362:
L_174113:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451363:
L_174106:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_451365
L_174107:
	cmpq $0x1,0x8(%r13)
	jne L_172504
L_174108:
	movq %r15,0x60(%rbp)
	movq %r14,0x68(%rbp)
	jmp x_552
.p2align 0x4
L_451365:
L_174109:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451366:
	movq %r13,%r14
	jmp L_174103
.p2align 0x4
L_451368:
L_174086:
	movq 0x0(%r13),%r15
L_174087:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_172504
L_174088:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_174089:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_172504
L_174090:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	jne L_172504
L_174091:
	movq 0x0(%r11),%r10
	movq %r10,0x68(%rbp)
	cmpq $0x1,%r13
	jne L_172504
L_174092:
	movl 0x5C(%rbp),%r13d
	testl %r13d,%r13d
	jnz L_451369
L_174093:
	movq 0x0(%r15),%r14
	movq 0x0(%r10),%r15
L_174094:
	movq %r15,0xC0(%rbp)
	movq %r14,0xC8(%rbp)
	leaq L_173435(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0xF8(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (L_174095+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1182
.p2align 0x4
L_451369:
L_174096:
	movq %r15,0x1D8(%rbp)
	leaq L_173435(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x1C8(%rbp),%r15
	movq %r15,0x1E0(%rbp)
	addq $0x1D8,%rbp
	leaq (L_174097+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toIntInfX_0
.p2align 0x4
L_451376:
L_174052:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_172504
L_174053:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
L_174054:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_172504
L_174055:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE4A,%r15
	je L_451387
	cmpq $0xE4C,%r15
	je L_451377
	jmp L_172504
.p2align 0x4
L_451377:
L_174066:
	movq 0x0(%r13),%r15
L_174067:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_172504
L_174068:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_174069:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_451385
L_174072:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	je L_451382
	cmpq $0xE4C,%r14
	je L_451379
	movq %r13,%r14
L_174070:
	cmpq $0x1,%r14
	jne L_172504
L_174071:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451379:
L_174077:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_451381
L_174078:
	cmpq $0x1,0x8(%r13)
	jne L_172504
	jmp x_553
.p2align 0x4
L_451381:
L_174080:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451382:
L_174073:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_451384
L_174074:
	cmpq $0x1,0x8(%r13)
	jne L_172504
L_174075:
	movq %r15,0x60(%rbp)
	movq %r14,0x68(%rbp)
	jmp x_552
.p2align 0x4
L_451384:
L_174076:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451385:
	movq %r13,%r14
	jmp L_174070
.p2align 0x4
L_451387:
L_174056:
	movq 0x0(%r13),%r15
	movq %r15,0x60(%rbp)
	cmpq $0x1,%r14
	jne L_172504
L_174057:
	leaq L_173435(%rip),%r14
	movq %r14,0x10(%rbp)
	movq %rbp,%r14
	addq $0x18,%r14
	subq (gcState+0x560)(%rip),%r14
	movq %r14,(gcState+0x20)(%rip)
	movq %r15,0xC0(%rbp)
	movq 0x1C8(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC0,%rbp
	leaq (L_174058+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toIntInfX_0
.p2align 0x4
L_451391:
L_174027:
	movq 0x28(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x60(%rbp)
L_174028:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_172504
L_174029:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
L_174030:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_172504
L_174031:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE4A,%r15
	je L_451402
	cmpq $0xE4C,%r15
	je L_451392
	jmp L_172504
.p2align 0x4
L_451392:
L_174036:
	movq 0x0(%r13),%r15
L_174037:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_172504
L_174038:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_174039:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_451400
L_174042:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	je L_451397
	cmpq $0xE4C,%r14
	je L_451394
	movq %r13,%r14
L_174040:
	cmpq $0x1,%r14
	jne L_172504
L_174041:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451394:
L_174047:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_451396
L_174048:
	cmpq $0x1,0x8(%r13)
	jne L_172504
	jmp x_553
.p2align 0x4
L_451396:
L_174050:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451397:
L_174043:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_451399
L_174044:
	cmpq $0x1,0x8(%r13)
	jne L_172504
L_174045:
	movq %r15,0x60(%rbp)
	movq %r14,0x68(%rbp)
	jmp x_552
.p2align 0x4
L_451399:
L_174046:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451400:
	movq %r13,%r14
	jmp L_174040
.p2align 0x4
L_451402:
L_174032:
	movq 0x0(%r13),%r15
	cmpq $0x1,%r14
	jne L_172504
L_174033:
	movq %r15,0xC0(%rbp)
	leaq L_173435(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x1C8(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC0,%rbp
	leaq (L_174034+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toIntInfX_0
.p2align 0x4
L_451406:
L_173991:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_172504
L_173992:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
L_173993:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_172504
L_173994:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE4A,%r15
	je L_451417
	cmpq $0xE4C,%r15
	je L_451407
	jmp L_172504
.p2align 0x4
L_451407:
L_174012:
	movq 0x0(%r13),%r15
L_174013:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_172504
L_174014:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_174015:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_451415
L_174018:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	je L_451412
	cmpq $0xE4C,%r14
	je L_451409
	movq %r13,%r14
L_174016:
	cmpq $0x1,%r14
	jne L_172504
L_174017:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451409:
L_174023:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_451411
L_174024:
	cmpq $0x1,0x8(%r13)
	jne L_172504
	jmp x_553
.p2align 0x4
L_451411:
L_174026:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451412:
L_174019:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_451414
L_174020:
	cmpq $0x1,0x8(%r13)
	jne L_172504
L_174021:
	movq %r15,0x60(%rbp)
	movq %r14,0x68(%rbp)
	jmp x_552
.p2align 0x4
L_451414:
L_174022:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451415:
	movq %r13,%r14
	jmp L_174016
.p2align 0x4
L_451417:
L_173995:
	movq 0x0(%r13),%r15
	movq %r15,0x60(%rbp)
	cmpq $0x1,%r14
	jne L_172504
L_173996:
	movq 0x248(%rbp),%r14
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq %r11,0x68(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x70(%rbp)
	movq %r14,%r15
	andq $0x1,%r15
	jnz L_451421
L_174005:
	movq 0xFFFFFFFFFFFFFFF0(%r14),%rsi
	decq %rsi
	jo L_172504
L_174006:
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r14
	imulq %r14,%rsi
	addq $0x7,%r15
	addq %r15,%r14
	addq %r14,%rsi
	movq %rsi,%r15
	movq %rsi,0x78(%rbp)
	addq $0x0,%r15
	jc L_451419
L_174007:
	movq (gcState+0x458)(%rip),%r14
	subq %r12,%r14
	cmpq %r15,%r14
	jnb L_174008
L_174010:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r14d
	movl %r14d,%edx
	movq %r15,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_174011+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_174011
.p2align 0x4
.long 0x238B
L_174011:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_174008:
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0x78(%rbp),%rsi
	movq 0x70(%rbp),%rdi
	xorq %rax,%rax
	movq %r12,(gcState+0x0)(%rip)
	call IntInf_notb
L_174009:
	movq %rax,0x70(%rbp)
	movq (gcState+0x0)(%rip),%r12
L_173998:
	movq 0x60(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x68(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x80(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x88(%rbp)
	movq %r14,0xC0(%rbp)
	addq $0xC0,%rbp
	leaq (L_173999+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_451419:
L_173304:
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %rax,%rax
	call MLton_heapCheckTooLarge
.p2align 0x4
L_451421:
L_173997:
	notq %r14
	orq $0x1,%r14
	movq %r14,0x70(%rbp)
	jmp L_173998
.p2align 0x4
L_451425:
L_173961:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_172504
L_173962:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
L_173963:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_172504
L_173964:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE4A,%r15
	je L_451436
	cmpq $0xE4C,%r15
	je L_451426
	jmp L_172504
.p2align 0x4
L_451426:
L_173975:
	movq 0x0(%r13),%r15
L_173976:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_172504
L_173977:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_173978:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_451434
L_173981:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	je L_451431
	cmpq $0xE4C,%r14
	je L_451428
	movq %r13,%r14
L_173979:
	cmpq $0x1,%r14
	jne L_172504
L_173980:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451428:
L_173986:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_451430
L_173987:
	cmpq $0x1,0x8(%r13)
	jne L_172504
	jmp x_553
.p2align 0x4
L_451430:
L_173989:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451431:
L_173982:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_451433
L_173983:
	cmpq $0x1,0x8(%r13)
	jne L_172504
L_173984:
	movq %r15,0x60(%rbp)
	movq %r14,0x68(%rbp)
	jmp x_552
.p2align 0x4
L_451433:
L_173985:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451434:
	movq %r13,%r14
	jmp L_173979
.p2align 0x4
L_451436:
L_173965:
	movq 0x0(%r13),%r15
L_173966:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_172504
L_173967:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_173968:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_172504
L_173969:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	jne L_172504
L_173970:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	jne L_172504
L_173971:
	movq %r14,0xC0(%rbp)
	movq %r15,0xC8(%rbp)
	leaq L_173435(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x1F0(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (word_49+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1438
.p2align 0x4
L_451443:
L_173911:
	movq 0x28(%rbp),%r14
	movl 0x0(%r14),%r13d
	movl %r13d,0x5C(%rbp)
L_173912:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_172504
L_173913:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
L_173914:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_172504
L_173915:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE4A,%r15
	je L_451454
	cmpq $0xE4C,%r15
	je L_451444
	jmp L_172504
.p2align 0x4
L_451444:
L_173945:
	movq 0x0(%r13),%r15
L_173946:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_172504
L_173947:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_173948:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_451452
L_173951:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	je L_451449
	cmpq $0xE4C,%r14
	je L_451446
	movq %r13,%r14
L_173949:
	cmpq $0x1,%r14
	jne L_172504
L_173950:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451446:
L_173956:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_451448
L_173957:
	cmpq $0x1,0x8(%r13)
	jne L_172504
	jmp x_553
.p2align 0x4
L_451448:
L_173959:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451449:
L_173952:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_451451
L_173953:
	cmpq $0x1,0x8(%r13)
	jne L_172504
L_173954:
	movq %r15,0x60(%rbp)
	movq %r14,0x68(%rbp)
	jmp x_552
.p2align 0x4
L_451451:
L_173955:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451452:
	movq %r13,%r14
	jmp L_173949
.p2align 0x4
L_451454:
L_173916:
	movq 0x0(%r13),%r15
	movq %r15,0x60(%rbp)
L_173917:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_172504
L_173918:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_173919:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_172504
L_173920:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	jne L_172504
L_173921:
	movq 0x0(%r11),%r14
	movq %r14,0x68(%rbp)
	cmpq $0x1,%r13
	jne L_172504
L_173922:
	movq 0x0(%r14),%r13
	movq %r13,0x70(%rbp)
	cmpq $0x1,%r13
	je L_172504
L_173923:
	movq 0x240(%rbp),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x78(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x80(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x88(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x90(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0xC0(%rbp)
	movq %r13,0xC8(%rbp)
	addq $0xC0,%rbp
	leaq (L_173924+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_0
.p2align 0x4
L_451462:
L_173862:
	movq 0x28(%rbp),%r14
	movl 0x0(%r14),%r13d
	movl %r13d,0x5C(%rbp)
L_173863:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_172504
L_173864:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
L_173865:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_172504
L_173866:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE4A,%r15
	je L_451473
	cmpq $0xE4C,%r15
	je L_451463
	jmp L_172504
.p2align 0x4
L_451463:
L_173896:
	movq 0x0(%r13),%r15
L_173897:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_172504
L_173898:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_173899:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_451471
L_173902:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	je L_451468
	cmpq $0xE4C,%r14
	je L_451465
	movq %r13,%r14
L_173900:
	cmpq $0x1,%r14
	jne L_172504
L_173901:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451465:
L_173907:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_451467
L_173908:
	cmpq $0x1,0x8(%r13)
	jne L_172504
	jmp x_553
.p2align 0x4
L_451467:
L_173910:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451468:
L_173903:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_451470
L_173904:
	cmpq $0x1,0x8(%r13)
	jne L_172504
L_173905:
	movq %r15,0x60(%rbp)
	movq %r14,0x68(%rbp)
	jmp x_552
.p2align 0x4
L_451470:
L_173906:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451471:
	movq %r13,%r14
	jmp L_173900
.p2align 0x4
L_451473:
L_173867:
	movq 0x0(%r13),%r15
	movq %r15,0x60(%rbp)
L_173868:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_172504
L_173869:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_173870:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_172504
L_173871:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	jne L_172504
L_173872:
	movq 0x0(%r11),%r14
	movq %r14,0x68(%rbp)
	cmpq $0x1,%r13
	jne L_172504
L_173873:
	movq 0x0(%r14),%r13
	movq %r13,0x70(%rbp)
	cmpq $0x1,%r13
	je L_172504
L_173874:
	movq 0x1F8(%rbp),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x78(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x80(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x88(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x90(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0xC0(%rbp)
	movq %r13,0xC8(%rbp)
	addq $0xC0,%rbp
	leaq (L_173875+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_0
.p2align 0x4
L_451481:
L_173739:
	movq 0x28(%rbp),%r14
	movl 0x0(%r14),%r13d
	movb 0x4(%r14),%r11b
	movb %r11b,0x5C(%rbp)
L_173740:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_172504
L_173741:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r11
L_173742:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_172504
L_173743:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE4A,%r15
	je L_451492
	cmpq $0xE4C,%r15
	je L_451482
	jmp L_172504
.p2align 0x4
L_451482:
L_173847:
	movq 0x0(%r11),%r15
L_173848:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_172504
L_173849:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_173850:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_451490
L_173853:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	je L_451487
	cmpq $0xE4C,%r14
	je L_451484
	movq %r13,%r14
L_173851:
	cmpq $0x1,%r14
	jne L_172504
L_173852:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451484:
L_173858:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_451486
L_173859:
	cmpq $0x1,0x8(%r13)
	jne L_172504
	jmp x_553
.p2align 0x4
L_451486:
L_173861:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451487:
L_173854:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_451489
L_173855:
	cmpq $0x1,0x8(%r13)
	jne L_172504
L_173856:
	movq %r15,0x60(%rbp)
	movq %r14,0x68(%rbp)
	jmp x_552
.p2align 0x4
L_451489:
L_173857:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451490:
	movq %r13,%r14
	jmp L_173851
.p2align 0x4
L_451492:
L_173744:
	movq 0x0(%r11),%r15
	cmpq $0x1,%r14
	jne L_172504
L_173745:
	testl %r13d,%r13d
	jnz L_451504
L_173746:
	movq 0x0(%r15),%r14
	movb 0x5C(%rbp),%r15b
	testb %r15b,%r15b
	jnz L_451498
L_173747:
	movq %r14,0x60(%rbp)
L_173748:
	movq 0x1A0(%rbp),%r15
	movq 0x8(%r15),%r14
	cmpq $0x1,0x0(%r14)
	jne L_172504
L_173750:
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %rax,%rax
	addq $0x1F8,%rbp
	leaq (L_173751+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call IEEEReal_getRoundingMode
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_173751
.p2align 0x4
.long 0x23D9
L_173751:
	addq $0xFFFFFFFFFFFFFE08,%rbp
	testl %eax,%eax
	jz L_451496
L_173752:
	cmpl $0x1,%eax
	je L_451495
L_173753:
	cmpl $0x2,%eax
	je L_451494
L_173754:
	cmpl $0x3,%eax
	jne L_451493
L_173757:
	movb $0x0,0x5C(%rbp)
L_173758:
	leaq L_173778(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movb $0x2,0x1F8(%rbp)
	addq $0x1F8,%rbp
	leaq (L_173759+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp setRoundingMode_0
.p2align 0x4
L_451493:
L_173756:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x778)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_451494:
L_173792:
	movb $0x1,0x5C(%rbp)
	jmp L_173758
.p2align 0x4
L_451495:
L_173793:
	movb $0x2,0x5C(%rbp)
	jmp L_173758
.p2align 0x4
L_451496:
L_173794:
	movb $0x3,0x5C(%rbp)
	jmp L_173758
.p2align 0x4
L_451498:
L_173795:
	movq %r14,0x60(%rbp)
L_173796:
	movq 0x1A0(%rbp),%r15
	movq 0x8(%r15),%r14
	cmpq $0x1,0x0(%r14)
	jne L_172504
L_173798:
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %rax,%rax
	addq $0x1E8,%rbp
	leaq (L_173799+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call IEEEReal_getRoundingMode
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_173799
.p2align 0x4
.long 0x23DE
L_173799:
	addq $0xFFFFFFFFFFFFFE18,%rbp
	testl %eax,%eax
	jz L_451502
L_173800:
	cmpl $0x1,%eax
	je L_451501
L_173801:
	cmpl $0x2,%eax
	je L_451500
L_173802:
	cmpl $0x3,%eax
	jne L_173756
L_173804:
	movb $0x0,0x5C(%rbp)
L_173805:
	leaq L_173825(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movb $0x2,0x1E8(%rbp)
	addq $0x1E8,%rbp
	leaq (L_173806+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp setRoundingMode_0
.p2align 0x4
L_451500:
L_173840:
	movb $0x1,0x5C(%rbp)
	jmp L_173805
.p2align 0x4
L_451501:
L_173841:
	movb $0x2,0x5C(%rbp)
	jmp L_173805
.p2align 0x4
L_451502:
L_173842:
	movb $0x3,0x5C(%rbp)
	jmp L_173805
.p2align 0x4
L_451504:
L_173843:
	movq %r15,0x1F8(%rbp)
	leaq L_173435(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x1C8(%rbp),%r15
	movq %r15,0x200(%rbp)
	addq $0x1F8,%rbp
	leaq (L_173844+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toIntInfX_0
.p2align 0x4
L_451508:
L_173700:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_172504
L_173701:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
L_173702:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_172504
L_173703:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE4A,%r15
	je L_451519
	cmpq $0xE4C,%r15
	je L_451509
	jmp L_172504
.p2align 0x4
L_451509:
L_173724:
	movq 0x0(%r13),%r15
L_173725:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_172504
L_173726:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_173727:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_451517
L_173730:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	je L_451514
	cmpq $0xE4C,%r14
	je L_451511
	movq %r13,%r14
L_173728:
	cmpq $0x1,%r14
	jne L_172504
L_173729:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451511:
L_173735:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_451513
L_173736:
	cmpq $0x1,0x8(%r13)
	jne L_172504
	jmp x_553
.p2align 0x4
L_451513:
L_173738:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451514:
L_173731:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_451516
L_173732:
	cmpq $0x1,0x8(%r13)
	jne L_172504
L_173733:
	movq %r15,0x60(%rbp)
	movq %r14,0x68(%rbp)
	jmp x_552
.p2align 0x4
L_451516:
L_173734:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451517:
	movq %r13,%r14
	jmp L_173728
.p2align 0x4
L_451519:
L_173704:
	movq 0x0(%r13),%r15
	movq %r15,0x60(%rbp)
L_173705:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_172504
L_173706:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_173707:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_172504
L_173708:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	jne L_172504
L_173709:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	jne L_172504
L_173710:
	movq 0x8(%r15),%r13
	movq %r13,0x68(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x220(%rbp)
	leaq L_173435(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq %r13,0x218(%rbp)
	movq 0x200(%rbp),%r15
	movq %r15,0x228(%rbp)
	addq $0x218,%rbp
	leaq (L_173711+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
L_451526:
L_173660:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_172504
L_173661:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
L_173662:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_172504
L_173663:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE4A,%r15
	je L_451537
	cmpq $0xE4C,%r15
	je L_451527
	jmp L_172504
.p2align 0x4
L_451527:
L_173684:
	movq 0x0(%r13),%r15
L_173685:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_172504
L_173686:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_173687:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_451535
L_173690:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	je L_451532
	cmpq $0xE4C,%r14
	je L_451529
	movq %r13,%r14
L_173688:
	cmpq $0x1,%r14
	jne L_172504
L_173689:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451529:
L_173695:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_451531
L_173696:
	cmpq $0x1,0x8(%r13)
	jne L_172504
	jmp x_553
.p2align 0x4
L_451531:
L_173698:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451532:
L_173691:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_451534
L_173692:
	cmpq $0x1,0x8(%r13)
	jne L_172504
L_173693:
	movq %r15,0x60(%rbp)
	movq %r14,0x68(%rbp)
	jmp x_552
.p2align 0x4
L_451534:
L_173694:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451535:
	movq %r13,%r14
	jmp L_173688
.p2align 0x4
L_451537:
L_173664:
	movq 0x0(%r13),%r15
	movq %r15,0x60(%rbp)
L_173665:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_172504
L_173666:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_173667:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_172504
L_173668:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	jne L_172504
L_173669:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	jne L_172504
L_173670:
	movq 0x8(%r15),%r13
	movq %r13,0x68(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x220(%rbp)
	leaq L_173435(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq %r13,0x218(%rbp)
	movq 0x200(%rbp),%r15
	movq %r15,0x228(%rbp)
	addq $0x218,%rbp
	leaq (L_173671+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
L_451544:
L_173629:
	movq 0x28(%rbp),%r14
	movl 0x0(%r14),%r13d
L_173630:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_172504
L_173631:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r11
L_173632:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_172504
L_173633:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE4A,%r15
	je L_451555
	cmpq $0xE4C,%r15
	je L_451545
	jmp L_172504
.p2align 0x4
L_451545:
L_173644:
	movq 0x0(%r11),%r15
L_173645:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_172504
L_173646:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_173647:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_451553
L_173650:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	je L_451550
	cmpq $0xE4C,%r14
	je L_451547
	movq %r13,%r14
L_173648:
	cmpq $0x1,%r14
	jne L_172504
L_173649:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451547:
L_173655:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_451549
L_173656:
	cmpq $0x1,0x8(%r13)
	jne L_172504
	jmp x_553
.p2align 0x4
L_451549:
L_173658:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451550:
L_173651:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_451552
L_173652:
	cmpq $0x1,0x8(%r13)
	jne L_172504
L_173653:
	movq %r15,0x60(%rbp)
	movq %r14,0x68(%rbp)
	jmp x_552
.p2align 0x4
L_451552:
L_173654:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451553:
	movq %r13,%r14
	jmp L_173648
.p2align 0x4
L_451555:
L_173634:
	movq 0x0(%r11),%r15
L_173635:
	movq %r14,%r11
	andq $0x3,%r11
	jnz L_172504
L_173636:
	movq 0x8(%r14),%r11
	movq 0x0(%r14),%r10
L_173637:
	movq %r10,%r14
	andq $0x3,%r14
	jnz L_172504
L_173638:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	jne L_172504
L_173639:
	movq 0x0(%r10),%r14
	cmpq $0x1,%r11
	jne L_172504
L_173640:
	movl %r13d,0xC0(%rbp)
	movq %r14,0xC8(%rbp)
	movq %r15,0xD0(%rbp)
	leaq L_173435(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x220(%rbp),%r15
	movq %r15,0xD8(%rbp)
	addq $0xC0,%rbp
	leaq (word_48+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp rshift_0
.p2align 0x4
L_451562:
L_173590:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_172504
L_173591:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
L_173592:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_172504
L_173593:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE4A,%r15
	je L_451573
	cmpq $0xE4C,%r15
	je L_451563
	jmp L_172504
.p2align 0x4
L_451563:
L_173614:
	movq 0x0(%r13),%r15
L_173615:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_172504
L_173616:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_173617:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_451571
L_173620:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	je L_451568
	cmpq $0xE4C,%r14
	je L_451565
	movq %r13,%r14
L_173618:
	cmpq $0x1,%r14
	jne L_172504
L_173619:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451565:
L_173625:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_451567
L_173626:
	cmpq $0x1,0x8(%r13)
	jne L_172504
	jmp x_553
.p2align 0x4
L_451567:
L_173628:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451568:
L_173621:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_451570
L_173622:
	cmpq $0x1,0x8(%r13)
	jne L_172504
L_173623:
	movq %r15,0x60(%rbp)
	movq %r14,0x68(%rbp)
	jmp x_552
.p2align 0x4
L_451570:
L_173624:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451571:
	movq %r13,%r14
	jmp L_173618
.p2align 0x4
L_451573:
L_173594:
	movq 0x0(%r13),%r15
	movq %r15,0x60(%rbp)
L_173595:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_172504
L_173596:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_173597:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_172504
L_173598:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	jne L_172504
L_173599:
	movq 0x0(%r11),%r14
	movq %r14,0x68(%rbp)
	cmpq $0x1,%r13
	jne L_172504
L_173600:
	movq 0x210(%rbp),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x70(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x78(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x80(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0xC0(%rbp)
	movq %r13,0xC8(%rbp)
	addq $0xC0,%rbp
	leaq (L_173601+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_0
.p2align 0x4
L_451580:
L_173547:
	movq 0x28(%rbp),%r14
	movl 0x0(%r14),%r13d
	movl %r13d,0x5C(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x60(%rbp)
L_173548:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_172504
L_173549:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
L_173550:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_172504
L_173551:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE4A,%r15
	je L_451591
	cmpq $0xE4C,%r15
	je L_451581
	jmp L_172504
.p2align 0x4
L_451581:
L_173574:
	movq 0x0(%r13),%r15
L_173575:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_172504
L_173576:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_173577:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_451589
L_173580:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	je L_451586
	cmpq $0xE4C,%r14
	je L_451583
	movq %r13,%r14
L_173578:
	cmpq $0x1,%r14
	jne L_172504
L_173579:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451583:
L_173585:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_451585
L_173586:
	cmpq $0x1,0x8(%r13)
	jne L_172504
	jmp x_553
.p2align 0x4
L_451585:
L_173588:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451586:
L_173581:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_451588
L_173582:
	cmpq $0x1,0x8(%r13)
	jne L_172504
L_173583:
	movq %r15,0x60(%rbp)
	movq %r14,0x68(%rbp)
	jmp x_552
.p2align 0x4
L_451588:
L_173584:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451589:
	movq %r13,%r14
	jmp L_173578
.p2align 0x4
L_451591:
L_173552:
	movq 0x0(%r13),%r15
L_173553:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_172504
L_173554:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_173555:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_172504
L_173556:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	jne L_172504
L_173557:
	movq 0x0(%r11),%r10
	movq %r10,0x68(%rbp)
	cmpq $0x1,%r13
	jne L_172504
L_173558:
	movl 0x5C(%rbp),%r13d
	testl %r13d,%r13d
	jnz L_451592
L_173559:
	movq 0x0(%r15),%r14
	movq 0x0(%r10),%r15
L_173560:
	movq %r15,0xC0(%rbp)
	movq %r14,0xC8(%rbp)
	leaq L_173435(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0xE8(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (L_173561+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
L_451592:
L_173571:
	movq %r15,0x1D8(%rbp)
	leaq L_173435(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x1C8(%rbp),%r15
	movq %r15,0x1E0(%rbp)
	addq $0x1D8,%rbp
	leaq (L_173572+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toIntInfX_0
.p2align 0x4
L_451599:
L_173518:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_172504
L_173519:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
L_173520:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_172504
L_173521:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE4A,%r15
	je L_451610
	cmpq $0xE4C,%r15
	je L_451600
	jmp L_172504
.p2align 0x4
L_451600:
L_173532:
	movq 0x0(%r13),%r15
L_173533:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_172504
L_173534:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_173535:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_451608
L_173538:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	je L_451605
	cmpq $0xE4C,%r14
	je L_451602
	movq %r13,%r14
L_173536:
	cmpq $0x1,%r14
	jne L_172504
L_173537:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451602:
L_173543:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_451604
L_173544:
	cmpq $0x1,0x8(%r13)
	jne L_172504
	jmp x_553
.p2align 0x4
L_451604:
L_173546:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451605:
L_173539:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_451607
L_173540:
	cmpq $0x1,0x8(%r13)
	jne L_172504
L_173541:
	movq %r15,0x60(%rbp)
	movq %r14,0x68(%rbp)
	jmp x_552
.p2align 0x4
L_451607:
L_173542:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451608:
	movq %r13,%r14
	jmp L_173536
.p2align 0x4
L_451610:
L_173522:
	movq 0x0(%r13),%r15
L_173523:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_172504
L_173524:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_173525:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_172504
L_173526:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	jne L_172504
L_173527:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	jne L_172504
L_173528:
	movq %r14,0xC0(%rbp)
	movq %r15,0xC8(%rbp)
	leaq L_173435(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x228(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (word_47+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1480
.p2align 0x4
L_451618:
L_175454:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_172504
L_175455:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
L_175456:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_172504
L_175457:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE4B,%r15
	je L_451629
	cmpq $0xE4C,%r15
	je L_451619
	jmp L_172504
.p2align 0x4
L_451619:
L_175470:
	movq 0x0(%r11),%r15
L_175471:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_172504
L_175472:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_175473:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_451627
L_175476:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4A,%r13
	je L_451624
	cmpq $0xE4C,%r13
	je L_451621
	xchgq %r11,%r14
L_175474:
	cmpq $0x1,%r14
	jne L_172504
L_175475:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451621:
L_175481:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_451623
L_175482:
	cmpq $0x1,0x8(%r11)
	jne L_172504
	xchgq %r13,%r14
	jmp x_553
.p2align 0x4
L_451623:
L_175484:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451624:
L_175477:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_451626
L_175478:
	cmpq $0x1,0x8(%r11)
	jne L_172504
L_175479:
	movq %r15,0x60(%rbp)
	movq %r13,0x68(%rbp)
	jmp x_552
.p2align 0x4
L_451626:
L_175480:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451627:
	xchgq %r11,%r14
	jmp L_175474
.p2align 0x4
L_451629:
L_175458:
	movq 0x0(%r11),%r15
L_175459:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_172504
L_175460:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_175461:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_172504
L_175462:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4B,%r13
	jne L_172504
L_175463:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	jne L_172504
L_175464:
	movq %r13,0xC0(%rbp)
	movq %r15,0xC8(%rbp)
	leaq L_173435(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x298(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (realOpt_71+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1481
.p2align 0x4
L_451636:
L_175418:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_172504
L_175419:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
L_175420:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_172504
L_175421:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE4B,%r15
	je L_451647
	cmpq $0xE4C,%r15
	je L_451637
	jmp L_172504
.p2align 0x4
L_451637:
L_175438:
	movq 0x0(%r11),%r15
L_175439:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_172504
L_175440:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_175441:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_451645
L_175444:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4A,%r13
	je L_451642
	cmpq $0xE4C,%r13
	je L_451639
	xchgq %r11,%r14
L_175442:
	cmpq $0x1,%r14
	jne L_172504
L_175443:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451639:
L_175449:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_451641
L_175450:
	cmpq $0x1,0x8(%r11)
	jne L_172504
	xchgq %r13,%r14
	jmp x_553
.p2align 0x4
L_451641:
L_175452:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451642:
L_175445:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_451644
L_175446:
	cmpq $0x1,0x8(%r11)
	jne L_172504
L_175447:
	movq %r15,0x60(%rbp)
	movq %r13,0x68(%rbp)
	jmp x_552
.p2align 0x4
L_451644:
L_175448:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451645:
	xchgq %r11,%r14
	jmp L_175442
.p2align 0x4
L_451647:
L_175422:
	movq 0x0(%r11),%r15
L_175423:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_172504
L_175424:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_175425:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_172504
L_175426:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4B,%r13
	jne L_172504
L_175427:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	jne L_172504
L_175428:
	movq 0x280(%rbp),%r11
	movq 0x8(%r11),%r10
	cmpq $0x1,0x0(%r10)
	jne L_172504
L_175430:
	movq %r15,%r11
	andq $0x1,%r11
	cmpq $0x1,%r11
	je L_451654
L_175431:
	movsd 0x0(%r15),%xmm15
L_175432:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_451653
L_175434:
	movsd 0x0(%r13),%xmm14
	ucomisd %xmm15,%xmm14
	setp %al
	movzbl %al,%eax
	sete %cl
	movzbl %cl,%ecx
	orl %eax,%ecx
L_172715:
	cmpl $0x0,0x58(%rbp)
	jl L_172393
L_172716:
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_1754:
	cmpl 0x58(%rbp),%ebx
	jnl L_451650
L_172733:
	movslq %ebx,%r15
	movq 0x50(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xEA9,%r15
	je L_451649
L_172736:
	movq 0x0(%r13),%r15
	movl 0x0(%r15),%r14d
	decl %r14d
	jo L_172355
L_172737:
	movl %r14d,0x0(%r15)
	movl %ecx,(localWord32+0x0)(%rip)
L_172735:
	incl %ebx
	movl (localWord32+0x0)(%rip),%ecx
	jmp loop_1754
.p2align 0x4
L_451649:
	movl %ecx,(localWord32+0x0)(%rip)
	jmp L_172735
.p2align 0x4
L_451650:
L_172717:
	movq 0x90(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	testl %ecx,%ecx
	jnz L_451651
L_172718:
	movq %r13,0x20(%rbp)
L_172719:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x1,0xC0(%rbp)
	movl $0x0,0xC8(%rbp)
	addq $0xC0,%rbp
	leaq (L_172720+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_2
.p2align 0x4
L_451651:
L_172732:
	movq %r14,0x20(%rbp)
	jmp L_172719
.p2align 0x4
L_451653:
L_175433:
	movq (globalObjptr+0x19D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_451654:
L_175435:
	shrq $0x1,%r15
	movl %r15d,%r11d
	movd %r11d,%xmm15
	movq %r13,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	jne L_451655
L_175437:
	shrq $0x1,%r13
	movl %r13d,%r15d
	movd %r15d,%xmm14
	ucomiss %xmm15,%xmm14
	setp %al
	movzbl %al,%eax
	sete %cl
	movzbl %cl,%ecx
	orl %eax,%ecx
	jmp L_172715
.p2align 0x4
L_451655:
L_175436:
	movq (globalObjptr+0x19D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_451663:
L_175392:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_172504
L_175393:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
L_175394:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_172504
L_175395:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE4B,%r15
	je L_451674
	cmpq $0xE4C,%r15
	je L_451664
	jmp L_172504
.p2align 0x4
L_451664:
L_175402:
	movq 0x0(%r11),%r15
L_175403:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_172504
L_175404:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_175405:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_451672
L_175408:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4A,%r13
	je L_451669
	cmpq $0xE4C,%r13
	je L_451666
	xchgq %r11,%r14
L_175406:
	cmpq $0x1,%r14
	jne L_172504
L_175407:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451666:
L_175413:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_451668
L_175414:
	cmpq $0x1,0x8(%r11)
	jne L_172504
	xchgq %r13,%r14
	jmp x_553
.p2align 0x4
L_451668:
L_175416:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451669:
L_175409:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_451671
L_175410:
	cmpq $0x1,0x8(%r11)
	jne L_172504
L_175411:
	movq %r15,0x60(%rbp)
	movq %r13,0x68(%rbp)
	jmp x_552
.p2align 0x4
L_451671:
L_175412:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451672:
	xchgq %r11,%r14
	jmp L_175406
.p2align 0x4
L_451674:
L_175396:
	movq 0x0(%r11),%r15
	cmpq $0x1,%r13
	jne L_172504
L_175397:
	movq 0x2D8(%rbp),%r13
	movq 0x8(%r13),%r11
	cmpq $0x1,0x0(%r11)
	jne L_172504
L_175399:
	movq %r15,%r13
	andq $0x1,%r13
	cmpq $0x1,%r13
	je L_451681
L_175400:
	movq $0x8000000000000000,%r13
	movd %r13,%xmm15
	movsd 0x0(%r15),%xmm14
	xorpd %xmm14,%xmm15
	movq $0x1C8F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movsd %xmm15,%xmm14
	movsd %xmm14,0x0(%r15)
	addq $0x10,%r12
real_25:
	movq $0x1C97,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x20(%rbp)
	addq $0x10,%r12
L_172626:
	cmpl $0x0,0x58(%rbp)
	jl L_172393
L_172627:
	xorl %ecx,%ecx
.p2align 0x4,,0x7
loop_1752:
	cmpl 0x58(%rbp),%ecx
	jnl L_451677
L_172640:
	movslq %ecx,%r15
	movq 0x50(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xEA9,%r15
	je L_172642
L_172643:
	movq 0x0(%r13),%r15
	movl 0x0(%r15),%r14d
	decl %r14d
	jo L_172355
L_172644:
	movl %r14d,0x0(%r15)
L_172642:
	incl %ecx
	jmp loop_1752
.p2align 0x4
L_451677:
L_172628:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_172629
L_172638:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_172639+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_172639
.p2align 0x4
.long 0x2370
L_172639:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_172629:
	movq $0x281D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xB0(%rbp),%r14
	movl 0x0(%r14),%r13d
	testl %r13d,%r13d
	jz L_451678
L_172630:
	movq 0x38(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x30(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC0,%rbp
	leaq (L_172631+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp shrinkDecs_0
.p2align 0x4
L_451678:
L_172637:
	movq 0x30(%rbp),%r15
	jmp loop_1740
.p2align 0x4
L_451681:
L_175401:
	shrq $0x1,%r15
	movl %r15d,%r13d
	movd %r13d,%xmm15
	movl $0x80000000,%r13d
	movd %r13d,%xmm14
	xorps %xmm15,%xmm14
	movd %xmm14,%r13d
	movl %r13d,%r15d
	shlq $0x1,%r15
	orq $0x1,%r15
	jmp real_25
.p2align 0x4
L_451686:
L_175355:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_172504
L_175356:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
L_175357:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_172504
L_175358:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE4B,%r15
	je L_451697
	cmpq $0xE4C,%r15
	je L_451687
	jmp L_172504
.p2align 0x4
L_451687:
L_175376:
	movq 0x0(%r11),%r15
L_175377:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_172504
L_175378:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_175379:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_451695
L_175382:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4A,%r13
	je L_451692
	cmpq $0xE4C,%r13
	je L_451689
	xchgq %r11,%r14
L_175380:
	cmpq $0x1,%r14
	jne L_172504
L_175381:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451689:
L_175387:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_451691
L_175388:
	cmpq $0x1,0x8(%r11)
	jne L_172504
	xchgq %r13,%r14
	jmp x_553
.p2align 0x4
L_451691:
L_175390:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451692:
L_175383:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_451694
L_175384:
	cmpq $0x1,0x8(%r11)
	jne L_172504
L_175385:
	movq %r15,0x60(%rbp)
	movq %r13,0x68(%rbp)
	jmp x_552
.p2align 0x4
L_451694:
L_175386:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451695:
	xchgq %r11,%r14
	jmp L_175380
.p2align 0x4
L_451697:
L_175359:
	movq 0x0(%r11),%r15
L_175360:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_172504
L_175361:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_175362:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_172504
L_175363:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4B,%r13
	jne L_172504
L_175364:
	movq 0x0(%r10),%r13
L_175365:
	movq %r11,%r10
	andq $0x3,%r10
	jnz L_172504
L_175366:
	movq 0x8(%r11),%r10
	movq 0x0(%r11),%r9
L_175367:
	movq %r9,%r11
	andq $0x3,%r11
	jnz L_172504
L_175368:
	movq 0xFFFFFFFFFFFFFFF8(%r9),%r11
	shrq $0x1,%r11
	cmpq $0xE4B,%r11
	jne L_172504
L_175369:
	movq 0x0(%r9),%r11
	cmpq $0x1,%r10
	jne L_172504
L_175370:
	movq %r11,0xC0(%rbp)
	movq %r13,0xC8(%rbp)
	movq %r15,0xD0(%rbp)
	leaq L_173435(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x290(%rbp),%r15
	movq %r15,0xD8(%rbp)
	addq $0xC0,%rbp
	leaq (realOpt_70+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1482
.p2align 0x4
L_451707:
L_175318:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_172504
L_175319:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
L_175320:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_172504
L_175321:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE4B,%r15
	je L_451718
	cmpq $0xE4C,%r15
	je L_451708
	jmp L_172504
.p2align 0x4
L_451708:
L_175339:
	movq 0x0(%r11),%r15
L_175340:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_172504
L_175341:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_175342:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_451716
L_175345:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4A,%r13
	je L_451713
	cmpq $0xE4C,%r13
	je L_451710
	xchgq %r11,%r14
L_175343:
	cmpq $0x1,%r14
	jne L_172504
L_175344:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451710:
L_175350:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_451712
L_175351:
	cmpq $0x1,0x8(%r11)
	jne L_172504
	xchgq %r13,%r14
	jmp x_553
.p2align 0x4
L_451712:
L_175353:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451713:
L_175346:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_451715
L_175347:
	cmpq $0x1,0x8(%r11)
	jne L_172504
L_175348:
	movq %r15,0x60(%rbp)
	movq %r13,0x68(%rbp)
	jmp x_552
.p2align 0x4
L_451715:
L_175349:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451716:
	xchgq %r11,%r14
	jmp L_175343
.p2align 0x4
L_451718:
L_175322:
	movq 0x0(%r11),%r15
L_175323:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_172504
L_175324:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_175325:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_172504
L_175326:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4B,%r13
	jne L_172504
L_175327:
	movq 0x0(%r10),%r13
L_175328:
	movq %r11,%r10
	andq $0x3,%r10
	jnz L_172504
L_175329:
	movq 0x8(%r11),%r10
	movq 0x0(%r11),%r9
L_175330:
	movq %r9,%r11
	andq $0x3,%r11
	jnz L_172504
L_175331:
	movq 0xFFFFFFFFFFFFFFF8(%r9),%r11
	shrq $0x1,%r11
	cmpq $0xE4B,%r11
	jne L_172504
L_175332:
	movq 0x0(%r9),%r11
	cmpq $0x1,%r10
	jne L_172504
L_175333:
	movq %r11,0xC0(%rbp)
	movq %r13,0xC8(%rbp)
	movq %r15,0xD0(%rbp)
	leaq L_173435(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x188(%rbp),%r15
	movq %r15,0xD8(%rbp)
	addq $0xC0,%rbp
	leaq (realOpt_69+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1483
.p2align 0x4
L_451728:
L_175286:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_172504
L_175287:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
L_175288:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_172504
L_175289:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE4B,%r15
	je L_451739
	cmpq $0xE4C,%r15
	je L_451729
	jmp L_172504
.p2align 0x4
L_451729:
L_175302:
	movq 0x0(%r11),%r15
L_175303:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_172504
L_175304:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_175305:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_451737
L_175308:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4A,%r13
	je L_451734
	cmpq $0xE4C,%r13
	je L_451731
	xchgq %r11,%r14
L_175306:
	cmpq $0x1,%r14
	jne L_172504
L_175307:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451731:
L_175313:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_451733
L_175314:
	cmpq $0x1,0x8(%r11)
	jne L_172504
	xchgq %r13,%r14
	jmp x_553
.p2align 0x4
L_451733:
L_175316:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451734:
L_175309:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_451736
L_175310:
	cmpq $0x1,0x8(%r11)
	jne L_172504
L_175311:
	movq %r15,0x60(%rbp)
	movq %r13,0x68(%rbp)
	jmp x_552
.p2align 0x4
L_451736:
L_175312:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451737:
	xchgq %r11,%r14
	jmp L_175306
.p2align 0x4
L_451739:
L_175290:
	movq 0x0(%r11),%r15
L_175291:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_172504
L_175292:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_175293:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_172504
L_175294:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4B,%r13
	jne L_172504
L_175295:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	jne L_172504
L_175296:
	movq %r13,0xC0(%rbp)
	movq %r15,0xC8(%rbp)
	leaq L_173435(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x180(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (realOpt_68+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1481
.p2align 0x4
L_451746:
L_175250:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_172504
L_175251:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
L_175252:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_172504
L_175253:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE4B,%r15
	je L_451757
	cmpq $0xE4C,%r15
	je L_451747
	jmp L_172504
.p2align 0x4
L_451747:
L_175270:
	movq 0x0(%r11),%r15
L_175271:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_172504
L_175272:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_175273:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_451755
L_175276:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4A,%r13
	je L_451752
	cmpq $0xE4C,%r13
	je L_451749
	xchgq %r11,%r14
L_175274:
	cmpq $0x1,%r14
	jne L_172504
L_175275:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451749:
L_175281:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_451751
L_175282:
	cmpq $0x1,0x8(%r11)
	jne L_172504
	xchgq %r13,%r14
	jmp x_553
.p2align 0x4
L_451751:
L_175284:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451752:
L_175277:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_451754
L_175278:
	cmpq $0x1,0x8(%r11)
	jne L_172504
L_175279:
	movq %r15,0x60(%rbp)
	movq %r13,0x68(%rbp)
	jmp x_552
.p2align 0x4
L_451754:
L_175280:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451755:
	xchgq %r11,%r14
	jmp L_175274
.p2align 0x4
L_451757:
L_175254:
	movq 0x0(%r11),%r15
L_175255:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_172504
L_175256:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_175257:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_172504
L_175258:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4B,%r13
	jne L_172504
L_175259:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	jne L_172504
L_175260:
	movq 0x198(%rbp),%r11
	movq 0x8(%r11),%r10
	cmpq $0x1,0x0(%r10)
	jne L_172504
L_175262:
	movq %r15,%r11
	andq $0x1,%r11
	cmpq $0x1,%r11
	je L_451759
L_175263:
	movsd 0x0(%r15),%xmm15
L_175264:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_451758
L_175266:
	ucomisd 0x0(%r13),%xmm15
	setnp %al
	movzbl %al,%eax
	setc %cl
	movzbl %cl,%ecx
	andl %eax,%ecx
	jmp L_172715
.p2align 0x4
L_451758:
L_175265:
	movq (globalObjptr+0x19D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_451759:
L_175267:
	shrq $0x1,%r15
	movl %r15d,%r11d
	movd %r11d,%xmm15
	movq %r13,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	jne L_451760
L_175269:
	shrq $0x1,%r13
	movl %r13d,%r15d
	movd %r15d,%xmm14
	ucomiss %xmm14,%xmm15
	setnp %al
	movzbl %al,%eax
	setc %cl
	movzbl %cl,%ecx
	andl %eax,%ecx
	jmp L_172715
.p2align 0x4
L_451760:
L_175268:
	movq (globalObjptr+0x19D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_451768:
L_175214:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_172504
L_175215:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
L_175216:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_172504
L_175217:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE4B,%r15
	je L_451779
	cmpq $0xE4C,%r15
	je L_451769
	jmp L_172504
.p2align 0x4
L_451769:
L_175234:
	movq 0x0(%r11),%r15
L_175235:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_172504
L_175236:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_175237:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_451777
L_175240:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4A,%r13
	je L_451774
	cmpq $0xE4C,%r13
	je L_451771
	xchgq %r11,%r14
L_175238:
	cmpq $0x1,%r14
	jne L_172504
L_175239:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451771:
L_175245:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_451773
L_175246:
	cmpq $0x1,0x8(%r11)
	jne L_172504
	xchgq %r13,%r14
	jmp x_553
.p2align 0x4
L_451773:
L_175248:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451774:
L_175241:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_451776
L_175242:
	cmpq $0x1,0x8(%r11)
	jne L_172504
L_175243:
	movq %r15,0x60(%rbp)
	movq %r13,0x68(%rbp)
	jmp x_552
.p2align 0x4
L_451776:
L_175244:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451777:
	xchgq %r11,%r14
	jmp L_175238
.p2align 0x4
L_451779:
L_175218:
	movq 0x0(%r11),%r15
L_175219:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_172504
L_175220:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_175221:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_172504
L_175222:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4B,%r13
	jne L_172504
L_175223:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	jne L_172504
L_175224:
	movq 0x288(%rbp),%r11
	movq 0x8(%r11),%r10
	cmpq $0x1,0x0(%r10)
	jne L_172504
L_175226:
	movq %r15,%r11
	andq $0x1,%r11
	cmpq $0x1,%r11
	je L_451781
L_175227:
	movsd 0x0(%r15),%xmm15
L_175228:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_451780
L_175230:
	ucomisd 0x0(%r13),%xmm15
	setnp %al
	movzbl %al,%eax
	setna %cl
	movzbl %cl,%ecx
	andl %eax,%ecx
	jmp L_172715
.p2align 0x4
L_451780:
L_175229:
	movq (globalObjptr+0x19D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_451781:
L_175231:
	shrq $0x1,%r15
	movl %r15d,%r11d
	movd %r11d,%xmm15
	movq %r13,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	jne L_451782
L_175233:
	shrq $0x1,%r13
	movl %r13d,%r15d
	movd %r15d,%xmm14
	ucomiss %xmm14,%xmm15
	setnp %al
	movzbl %al,%eax
	setna %cl
	movzbl %cl,%ecx
	andl %eax,%ecx
	jmp L_172715
.p2align 0x4
L_451782:
L_175232:
	movq (globalObjptr+0x19D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_451790:
L_175178:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_172504
L_175179:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
L_175180:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_172504
L_175181:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE4B,%r15
	je L_451801
	cmpq $0xE4C,%r15
	je L_451791
	jmp L_172504
.p2align 0x4
L_451791:
L_175198:
	movq 0x0(%r11),%r15
L_175199:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_172504
L_175200:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_175201:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_451799
L_175204:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4A,%r13
	je L_451796
	cmpq $0xE4C,%r13
	je L_451793
	xchgq %r11,%r14
L_175202:
	cmpq $0x1,%r14
	jne L_172504
L_175203:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451793:
L_175209:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_451795
L_175210:
	cmpq $0x1,0x8(%r11)
	jne L_172504
	xchgq %r13,%r14
	jmp x_553
.p2align 0x4
L_451795:
L_175212:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451796:
L_175205:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_451798
L_175206:
	cmpq $0x1,0x8(%r11)
	jne L_172504
L_175207:
	movq %r15,0x60(%rbp)
	movq %r13,0x68(%rbp)
	jmp x_552
.p2align 0x4
L_451798:
L_175208:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451799:
	xchgq %r11,%r14
	jmp L_175202
.p2align 0x4
L_451801:
L_175182:
	movq 0x0(%r11),%r15
L_175183:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_172504
L_175184:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_175185:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_172504
L_175186:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4B,%r13
	jne L_172504
L_175187:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	jne L_172504
L_175188:
	movq 0x190(%rbp),%r11
	movq 0x8(%r11),%r10
	cmpq $0x1,0x0(%r10)
	jne L_172504
L_175190:
	movq %r15,%r11
	andq $0x1,%r11
	cmpq $0x1,%r11
	je L_451803
L_175191:
	movsd 0x0(%r15),%xmm15
L_175192:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_451802
L_175194:
	movsd 0x0(%r13),%xmm14
	ucomisd %xmm15,%xmm14
	setnp %al
	movzbl %al,%eax
	setz %cl
	movzbl %cl,%ecx
	andl %eax,%ecx
	jmp L_172715
.p2align 0x4
L_451802:
L_175193:
	movq (globalObjptr+0x19D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_451803:
L_175195:
	shrq $0x1,%r15
	movl %r15d,%r11d
	movd %r11d,%xmm15
	movq %r13,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	jne L_451804
L_175197:
	shrq $0x1,%r13
	movl %r13d,%r15d
	movd %r15d,%xmm14
	ucomiss %xmm15,%xmm14
	setnp %al
	movzbl %al,%eax
	setz %cl
	movzbl %cl,%ecx
	andl %eax,%ecx
	jmp L_172715
.p2align 0x4
L_451804:
L_175196:
	movq (globalObjptr+0x19D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_451812:
L_175146:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_172504
L_175147:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
L_175148:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_172504
L_175149:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE4B,%r15
	je L_451823
	cmpq $0xE4C,%r15
	je L_451813
	jmp L_172504
.p2align 0x4
L_451813:
L_175162:
	movq 0x0(%r11),%r15
L_175163:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_172504
L_175164:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_175165:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_451821
L_175168:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4A,%r13
	je L_451818
	cmpq $0xE4C,%r13
	je L_451815
	xchgq %r11,%r14
L_175166:
	cmpq $0x1,%r14
	jne L_172504
L_175167:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451815:
L_175173:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_451817
L_175174:
	cmpq $0x1,0x8(%r11)
	jne L_172504
	xchgq %r13,%r14
	jmp x_553
.p2align 0x4
L_451817:
L_175176:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451818:
L_175169:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_451820
L_175170:
	cmpq $0x1,0x8(%r11)
	jne L_172504
L_175171:
	movq %r15,0x60(%rbp)
	movq %r13,0x68(%rbp)
	jmp x_552
.p2align 0x4
L_451820:
L_175172:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451821:
	xchgq %r11,%r14
	jmp L_175166
.p2align 0x4
L_451823:
L_175150:
	movq 0x0(%r11),%r15
L_175151:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_172504
L_175152:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_175153:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_172504
L_175154:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4B,%r13
	jne L_172504
L_175155:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	jne L_172504
L_175156:
	movq %r13,0xC0(%rbp)
	movq %r15,0xC8(%rbp)
	leaq L_173435(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x2A0(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (realOpt_67+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1481
.p2align 0x4
L_451830:
L_175114:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_172504
L_175115:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
L_175116:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_172504
L_175117:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE4B,%r15
	je L_451841
	cmpq $0xE4C,%r15
	je L_451831
	jmp L_172504
.p2align 0x4
L_451831:
L_175130:
	movq 0x0(%r11),%r15
L_175131:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_172504
L_175132:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_175133:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_451839
L_175136:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4A,%r13
	je L_451836
	cmpq $0xE4C,%r13
	je L_451833
	xchgq %r11,%r14
L_175134:
	cmpq $0x1,%r14
	jne L_172504
L_175135:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451833:
L_175141:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_451835
L_175142:
	cmpq $0x1,0x8(%r11)
	jne L_172504
	xchgq %r13,%r14
	jmp x_553
.p2align 0x4
L_451835:
L_175144:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451836:
L_175137:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_451838
L_175138:
	cmpq $0x1,0x8(%r11)
	jne L_172504
L_175139:
	movq %r15,0x60(%rbp)
	movq %r13,0x68(%rbp)
	jmp x_552
.p2align 0x4
L_451838:
L_175140:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451839:
	xchgq %r11,%r14
	jmp L_175134
.p2align 0x4
L_451841:
L_175118:
	movq 0x0(%r11),%r15
L_175119:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_172504
L_175120:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_175121:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_172504
L_175122:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4B,%r13
	jne L_172504
L_175123:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	jne L_172504
L_175124:
	movq %r13,0xC0(%rbp)
	movq %r15,0xC8(%rbp)
	leaq L_173435(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x178(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (realOpt_66+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1481
.p2align 0x4
L_451848:
L_175088:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_172504
L_175089:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
L_175090:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_172504
L_175091:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE4B,%r15
	je L_451859
	cmpq $0xE4C,%r15
	je L_451849
	jmp L_172504
.p2align 0x4
L_451849:
L_175098:
	movq 0x0(%r11),%r15
L_175099:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_172504
L_175100:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_175101:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_451857
L_175104:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4A,%r13
	je L_451854
	cmpq $0xE4C,%r13
	je L_451851
	xchgq %r11,%r14
L_175102:
	cmpq $0x1,%r14
	jne L_172504
L_175103:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451851:
L_175109:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_451853
L_175110:
	cmpq $0x1,0x8(%r11)
	jne L_172504
	xchgq %r13,%r14
	jmp x_553
.p2align 0x4
L_451853:
L_175112:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451854:
L_175105:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_451856
L_175106:
	cmpq $0x1,0x8(%r11)
	jne L_172504
L_175107:
	movq %r15,0x60(%rbp)
	movq %r13,0x68(%rbp)
	jmp x_552
.p2align 0x4
L_451856:
L_175108:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451857:
	xchgq %r11,%r14
	jmp L_175102
.p2align 0x4
L_451859:
L_175092:
	movq 0x0(%r11),%r15
	cmpq $0x1,%r13
	jne L_172504
L_175093:
	movq 0x148(%rbp),%r13
	movq 0x8(%r13),%r11
	cmpq $0x1,0x0(%r11)
	jne L_172504
L_175095:
	movq %r15,%r13
	andq $0x1,%r13
	cmpq $0x1,%r13
	je L_451860
L_175096:
	movq $0x7FFFFFFFFFFFFFFF,%r13
	movd %r13,%xmm15
	movsd 0x0(%r15),%xmm14
	andpd %xmm14,%xmm15
	movq $0x1C8F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movsd %xmm15,%xmm14
	movsd %xmm14,0x0(%r15)
	addq $0x10,%r12
real_24:
	movq $0x1C97,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x20(%rbp)
	addq $0x10,%r12
	jmp L_172626
.p2align 0x4
L_451860:
L_175097:
	shrq $0x1,%r15
	movl %r15d,%r13d
	movd %r13d,%xmm15
	movl $0x7FFFFFFF,%r13d
	movd %r13d,%xmm14
	andps %xmm15,%xmm14
	movd %xmm14,%r13d
	movl %r13d,%r15d
	shlq $0x1,%r15
	orq $0x1,%r15
	jmp real_24
.p2align 0x4
L_451865:
L_175061:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_172504
L_175062:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
L_175063:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_172504
L_175064:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE4B,%r15
	je L_451876
	cmpq $0xE4C,%r15
	je L_451866
	jmp L_172504
.p2align 0x4
L_451866:
L_175072:
	movq 0x0(%r11),%r15
L_175073:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_172504
L_175074:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_175075:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_451874
L_175078:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4A,%r13
	je L_451871
	cmpq $0xE4C,%r13
	je L_451868
	xchgq %r11,%r14
L_175076:
	cmpq $0x1,%r14
	jne L_172504
L_175077:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451868:
L_175083:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_451870
L_175084:
	cmpq $0x1,0x8(%r11)
	jne L_172504
	xchgq %r13,%r14
	jmp x_553
.p2align 0x4
L_451870:
L_175086:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451871:
L_175079:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_451873
L_175080:
	cmpq $0x1,0x8(%r11)
	jne L_172504
L_175081:
	movq %r15,0x60(%rbp)
	movq %r13,0x68(%rbp)
	jmp x_552
.p2align 0x4
L_451873:
L_175082:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451874:
	xchgq %r11,%r14
	jmp L_175076
.p2align 0x4
L_451876:
L_175065:
	movq 0x0(%r11),%r15
	cmpq $0x1,%r13
	jne L_172504
L_175066:
	movq %r15,0xC0(%rbp)
	leaq L_173435(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x2A8(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC0,%rbp
	leaq (realOpt_65+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1484
.p2align 0x4
L_451880:
L_175034:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_172504
L_175035:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
L_175036:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_172504
L_175037:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE4B,%r15
	je L_451891
	cmpq $0xE4C,%r15
	je L_451881
	jmp L_172504
.p2align 0x4
L_451881:
L_175045:
	movq 0x0(%r11),%r15
L_175046:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_172504
L_175047:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_175048:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_451889
L_175051:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4A,%r13
	je L_451886
	cmpq $0xE4C,%r13
	je L_451883
	xchgq %r11,%r14
L_175049:
	cmpq $0x1,%r14
	jne L_172504
L_175050:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451883:
L_175056:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_451885
L_175057:
	cmpq $0x1,0x8(%r11)
	jne L_172504
	xchgq %r13,%r14
	jmp x_553
.p2align 0x4
L_451885:
L_175059:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451886:
L_175052:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_451888
L_175053:
	cmpq $0x1,0x8(%r11)
	jne L_172504
L_175054:
	movq %r15,0x60(%rbp)
	movq %r13,0x68(%rbp)
	jmp x_552
.p2align 0x4
L_451888:
L_175055:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451889:
	xchgq %r11,%r14
	jmp L_175049
.p2align 0x4
L_451891:
L_175038:
	movq 0x0(%r11),%r15
	cmpq $0x1,%r13
	jne L_172504
L_175039:
	movq %r15,0xC0(%rbp)
	leaq L_173435(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x170(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC0,%rbp
	leaq (realOpt_64+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1484
.p2align 0x4
L_451895:
L_175007:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_172504
L_175008:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
L_175009:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_172504
L_175010:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE4B,%r15
	je L_451906
	cmpq $0xE4C,%r15
	je L_451896
	jmp L_172504
.p2align 0x4
L_451896:
L_175018:
	movq 0x0(%r11),%r15
L_175019:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_172504
L_175020:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_175021:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_451904
L_175024:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4A,%r13
	je L_451901
	cmpq $0xE4C,%r13
	je L_451898
	xchgq %r11,%r14
L_175022:
	cmpq $0x1,%r14
	jne L_172504
L_175023:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451898:
L_175029:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_451900
L_175030:
	cmpq $0x1,0x8(%r11)
	jne L_172504
	xchgq %r13,%r14
	jmp x_553
.p2align 0x4
L_451900:
L_175032:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451901:
L_175025:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_451903
L_175026:
	cmpq $0x1,0x8(%r11)
	jne L_172504
L_175027:
	movq %r15,0x60(%rbp)
	movq %r13,0x68(%rbp)
	jmp x_552
.p2align 0x4
L_451903:
L_175028:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451904:
	xchgq %r11,%r14
	jmp L_175022
.p2align 0x4
L_451906:
L_175011:
	movq 0x0(%r11),%r15
	cmpq $0x1,%r13
	jne L_172504
L_175012:
	movq %r15,0xC0(%rbp)
	leaq L_173435(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x2B0(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC0,%rbp
	leaq (realOpt_63+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1484
.p2align 0x4
L_451910:
L_174980:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_172504
L_174981:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
L_174982:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_172504
L_174983:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE4B,%r15
	je L_451921
	cmpq $0xE4C,%r15
	je L_451911
	jmp L_172504
.p2align 0x4
L_451911:
L_174991:
	movq 0x0(%r11),%r15
L_174992:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_172504
L_174993:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_174994:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_451919
L_174997:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4A,%r13
	je L_451916
	cmpq $0xE4C,%r13
	je L_451913
	xchgq %r11,%r14
L_174995:
	cmpq $0x1,%r14
	jne L_172504
L_174996:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451913:
L_175002:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_451915
L_175003:
	cmpq $0x1,0x8(%r11)
	jne L_172504
	xchgq %r13,%r14
	jmp x_553
.p2align 0x4
L_451915:
L_175005:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451916:
L_174998:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_451918
L_174999:
	cmpq $0x1,0x8(%r11)
	jne L_172504
L_175000:
	movq %r15,0x60(%rbp)
	movq %r13,0x68(%rbp)
	jmp x_552
.p2align 0x4
L_451918:
L_175001:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451919:
	xchgq %r11,%r14
	jmp L_174995
.p2align 0x4
L_451921:
L_174984:
	movq 0x0(%r11),%r15
	cmpq $0x1,%r13
	jne L_172504
L_174985:
	movq %r15,0xC0(%rbp)
	leaq L_173435(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x168(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC0,%rbp
	leaq (realOpt_62+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1484
.p2align 0x4
L_451925:
L_174953:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_172504
L_174954:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
L_174955:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_172504
L_174956:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE4B,%r15
	je L_451936
	cmpq $0xE4C,%r15
	je L_451926
	jmp L_172504
.p2align 0x4
L_451926:
L_174964:
	movq 0x0(%r11),%r15
L_174965:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_172504
L_174966:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_174967:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_451934
L_174970:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4A,%r13
	je L_451931
	cmpq $0xE4C,%r13
	je L_451928
	xchgq %r11,%r14
L_174968:
	cmpq $0x1,%r14
	jne L_172504
L_174969:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451928:
L_174975:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_451930
L_174976:
	cmpq $0x1,0x8(%r11)
	jne L_172504
	xchgq %r13,%r14
	jmp x_553
.p2align 0x4
L_451930:
L_174978:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451931:
L_174971:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_451933
L_174972:
	cmpq $0x1,0x8(%r11)
	jne L_172504
L_174973:
	movq %r15,0x60(%rbp)
	movq %r13,0x68(%rbp)
	jmp x_552
.p2align 0x4
L_451933:
L_174974:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451934:
	xchgq %r11,%r14
	jmp L_174968
.p2align 0x4
L_451936:
L_174957:
	movq 0x0(%r11),%r15
	cmpq $0x1,%r13
	jne L_172504
L_174958:
	movq %r15,0xC0(%rbp)
	leaq L_173435(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x2B8(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC0,%rbp
	leaq (realOpt_61+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1484
.p2align 0x4
L_451940:
L_174926:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_172504
L_174927:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
L_174928:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_172504
L_174929:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE4B,%r15
	je L_451951
	cmpq $0xE4C,%r15
	je L_451941
	jmp L_172504
.p2align 0x4
L_451941:
L_174937:
	movq 0x0(%r11),%r15
L_174938:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_172504
L_174939:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_174940:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_451949
L_174943:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4A,%r13
	je L_451946
	cmpq $0xE4C,%r13
	je L_451943
	xchgq %r11,%r14
L_174941:
	cmpq $0x1,%r14
	jne L_172504
L_174942:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451943:
L_174948:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_451945
L_174949:
	cmpq $0x1,0x8(%r11)
	jne L_172504
	xchgq %r13,%r14
	jmp x_553
.p2align 0x4
L_451945:
L_174951:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451946:
L_174944:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_451948
L_174945:
	cmpq $0x1,0x8(%r11)
	jne L_172504
L_174946:
	movq %r15,0x60(%rbp)
	movq %r13,0x68(%rbp)
	jmp x_552
.p2align 0x4
L_451948:
L_174947:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451949:
	xchgq %r11,%r14
	jmp L_174941
.p2align 0x4
L_451951:
L_174930:
	movq 0x0(%r11),%r15
	cmpq $0x1,%r13
	jne L_172504
L_174931:
	movq %r15,0xC0(%rbp)
	leaq L_173435(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x160(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC0,%rbp
	leaq (realOpt_60+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1484
.p2align 0x4
L_451955:
L_174899:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_172504
L_174900:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
L_174901:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_172504
L_174902:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE4B,%r15
	je L_451966
	cmpq $0xE4C,%r15
	je L_451956
	jmp L_172504
.p2align 0x4
L_451956:
L_174910:
	movq 0x0(%r11),%r15
L_174911:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_172504
L_174912:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_174913:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_451964
L_174916:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4A,%r13
	je L_451961
	cmpq $0xE4C,%r13
	je L_451958
	xchgq %r11,%r14
L_174914:
	cmpq $0x1,%r14
	jne L_172504
L_174915:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451958:
L_174921:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_451960
L_174922:
	cmpq $0x1,0x8(%r11)
	jne L_172504
	xchgq %r13,%r14
	jmp x_553
.p2align 0x4
L_451960:
L_174924:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451961:
L_174917:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_451963
L_174918:
	cmpq $0x1,0x8(%r11)
	jne L_172504
L_174919:
	movq %r15,0x60(%rbp)
	movq %r13,0x68(%rbp)
	jmp x_552
.p2align 0x4
L_451963:
L_174920:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451964:
	xchgq %r11,%r14
	jmp L_174914
.p2align 0x4
L_451966:
L_174903:
	movq 0x0(%r11),%r15
	cmpq $0x1,%r13
	jne L_172504
L_174904:
	movq %r15,0xC0(%rbp)
	leaq L_173435(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x2C0(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC0,%rbp
	leaq (realOpt_59+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1484
.p2align 0x4
L_451970:
L_174867:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_172504
L_174868:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
L_174869:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_172504
L_174870:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE4B,%r15
	je L_451981
	cmpq $0xE4C,%r15
	je L_451971
	jmp L_172504
.p2align 0x4
L_451971:
L_174883:
	movq 0x0(%r11),%r15
L_174884:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_172504
L_174885:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_174886:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_451979
L_174889:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4A,%r13
	je L_451976
	cmpq $0xE4C,%r13
	je L_451973
	xchgq %r11,%r14
L_174887:
	cmpq $0x1,%r14
	jne L_172504
L_174888:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451973:
L_174894:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_451975
L_174895:
	cmpq $0x1,0x8(%r11)
	jne L_172504
	xchgq %r13,%r14
	jmp x_553
.p2align 0x4
L_451975:
L_174897:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451976:
L_174890:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_451978
L_174891:
	cmpq $0x1,0x8(%r11)
	jne L_172504
L_174892:
	movq %r15,0x60(%rbp)
	movq %r13,0x68(%rbp)
	jmp x_552
.p2align 0x4
L_451978:
L_174893:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451979:
	xchgq %r11,%r14
	jmp L_174887
.p2align 0x4
L_451981:
L_174871:
	movq 0x0(%r11),%r15
L_174872:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_172504
L_174873:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_174874:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_172504
L_174875:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4B,%r13
	jne L_172504
L_174876:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	jne L_172504
L_174877:
	movq %r13,0xC0(%rbp)
	movq %r15,0xC8(%rbp)
	leaq L_173435(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x158(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (realOpt_58+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1481
.p2align 0x4
L_451988:
L_174840:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_172504
L_174841:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
L_174842:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_172504
L_174843:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE4B,%r15
	je L_451999
	cmpq $0xE4C,%r15
	je L_451989
	jmp L_172504
.p2align 0x4
L_451989:
L_174851:
	movq 0x0(%r11),%r15
L_174852:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_172504
L_174853:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_174854:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_451997
L_174857:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4A,%r13
	je L_451994
	cmpq $0xE4C,%r13
	je L_451991
	xchgq %r11,%r14
L_174855:
	cmpq $0x1,%r14
	jne L_172504
L_174856:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451991:
L_174862:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_451993
L_174863:
	cmpq $0x1,0x8(%r11)
	jne L_172504
	xchgq %r13,%r14
	jmp x_553
.p2align 0x4
L_451993:
L_174865:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451994:
L_174858:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_451996
L_174859:
	cmpq $0x1,0x8(%r11)
	jne L_172504
L_174860:
	movq %r15,0x60(%rbp)
	movq %r13,0x68(%rbp)
	jmp x_552
.p2align 0x4
L_451996:
L_174861:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_451997:
	xchgq %r11,%r14
	jmp L_174855
.p2align 0x4
L_451999:
L_174844:
	movq 0x0(%r11),%r15
	cmpq $0x1,%r13
	jne L_172504
L_174845:
	movq %r15,0xC0(%rbp)
	leaq L_173435(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x2C8(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC0,%rbp
	leaq (realOpt_57+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1484
.p2align 0x4
L_452003:
L_174813:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_172504
L_174814:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
L_174815:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_172504
L_174816:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE4B,%r15
	je L_452014
	cmpq $0xE4C,%r15
	je L_452004
	jmp L_172504
.p2align 0x4
L_452004:
L_174824:
	movq 0x0(%r11),%r15
L_174825:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_172504
L_174826:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_174827:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_452012
L_174830:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4A,%r13
	je L_452009
	cmpq $0xE4C,%r13
	je L_452006
	xchgq %r11,%r14
L_174828:
	cmpq $0x1,%r14
	jne L_172504
L_174829:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_452006:
L_174835:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_452008
L_174836:
	cmpq $0x1,0x8(%r11)
	jne L_172504
	xchgq %r13,%r14
	jmp x_553
.p2align 0x4
L_452008:
L_174838:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_452009:
L_174831:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_452011
L_174832:
	cmpq $0x1,0x8(%r11)
	jne L_172504
L_174833:
	movq %r15,0x60(%rbp)
	movq %r13,0x68(%rbp)
	jmp x_552
.p2align 0x4
L_452011:
L_174834:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_452012:
	xchgq %r11,%r14
	jmp L_174828
.p2align 0x4
L_452014:
L_174817:
	movq 0x0(%r11),%r15
	cmpq $0x1,%r13
	jne L_172504
L_174818:
	movq %r15,0xC0(%rbp)
	leaq L_173435(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x150(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC0,%rbp
	leaq (realOpt_56+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1484
.p2align 0x4
L_452018:
L_174786:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_172504
L_174787:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
L_174788:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_172504
L_174789:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE4B,%r15
	je L_452029
	cmpq $0xE4C,%r15
	je L_452019
	jmp L_172504
.p2align 0x4
L_452019:
L_174797:
	movq 0x0(%r11),%r15
L_174798:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_172504
L_174799:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_174800:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_452027
L_174803:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4A,%r13
	je L_452024
	cmpq $0xE4C,%r13
	je L_452021
	xchgq %r11,%r14
L_174801:
	cmpq $0x1,%r14
	jne L_172504
L_174802:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_452021:
L_174808:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_452023
L_174809:
	cmpq $0x1,0x8(%r11)
	jne L_172504
	xchgq %r13,%r14
	jmp x_553
.p2align 0x4
L_452023:
L_174811:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_452024:
L_174804:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_452026
L_174805:
	cmpq $0x1,0x8(%r11)
	jne L_172504
L_174806:
	movq %r15,0x60(%rbp)
	movq %r13,0x68(%rbp)
	jmp x_552
.p2align 0x4
L_452026:
L_174807:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_452027:
	xchgq %r11,%r14
	jmp L_174801
.p2align 0x4
L_452029:
L_174790:
	movq 0x0(%r11),%r15
	cmpq $0x1,%r13
	jne L_172504
L_174791:
	movq %r15,0xC0(%rbp)
	leaq L_173435(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x2D0(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC0,%rbp
	leaq (realOpt_55+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1484
.p2align 0x4
L_452033:
L_174747:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_172504
L_174748:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
L_174749:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_172504
L_174750:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE4A,%r15
	je L_452044
	cmpq $0xE4C,%r15
	je L_452034
	jmp L_172504
.p2align 0x4
L_452034:
L_174770:
	movq 0x0(%r11),%r15
L_174771:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_172504
L_174772:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_174773:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_452042
L_174776:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4A,%r13
	je L_452039
	cmpq $0xE4C,%r13
	je L_452036
	xchgq %r11,%r14
L_174774:
	cmpq $0x1,%r14
	jne L_172504
L_174775:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_452036:
L_174781:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_452038
L_174782:
	cmpq $0x1,0x8(%r11)
	jne L_172504
	xchgq %r13,%r14
	jmp x_553
.p2align 0x4
L_452038:
L_174784:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_452039:
L_174777:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_452041
L_174778:
	cmpq $0x1,0x8(%r11)
	jne L_172504
L_174779:
	movq %r15,0x60(%rbp)
	movq %r13,0x68(%rbp)
	jmp x_552
.p2align 0x4
L_452041:
L_174780:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_452042:
	xchgq %r11,%r14
	jmp L_174774
.p2align 0x4
L_452044:
L_174751:
	movq 0x0(%r11),%r15
	movq %r15,0x60(%rbp)
	cmpq $0x1,%r13
	jne L_172504
L_174752:
	movq 0x8(%r15),%r13
	movq %r13,0x68(%rbp)
	movq 0x218(%rbp),%r15
	movq 0x8(%r15),%r11
	movq %r11,0x70(%rbp)
	movq 0x0(%r15),%r11
	movq %r11,0x78(%rbp)
	movq %r13,0x338(%rbp)
	addq $0x338,%rbp
	leaq (L_174753+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_452048:
L_174714:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_172504
L_174715:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
L_174716:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_172504
L_174717:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE49,%r15
	je L_452059
	cmpq $0xE4C,%r15
	je L_452049
	jmp L_172504
.p2align 0x4
L_452049:
L_174731:
	movq 0x0(%r11),%r15
L_174732:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_172504
L_174733:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_174734:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_452057
L_174737:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4A,%r13
	je L_452054
	cmpq $0xE4C,%r13
	je L_452051
	xchgq %r11,%r14
L_174735:
	cmpq $0x1,%r14
	jne L_172504
L_174736:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_452051:
L_174742:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_452053
L_174743:
	cmpq $0x1,0x8(%r11)
	jne L_172504
	xchgq %r13,%r14
	jmp x_553
.p2align 0x4
L_452053:
L_174745:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_452054:
L_174738:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_452056
L_174739:
	cmpq $0x1,0x8(%r11)
	jne L_172504
L_174740:
	movq %r15,0x60(%rbp)
	movq %r13,0x68(%rbp)
	jmp x_552
.p2align 0x4
L_452056:
L_174741:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_452057:
	xchgq %r11,%r14
	jmp L_174735
.p2align 0x4
L_452059:
L_174718:
	movq 0x8(%r11),%r15
	movq %r15,0x60(%rbp)
L_174719:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_172504
L_174720:
	movq 0x8(%r13),%r15
	movq 0x0(%r13),%r11
L_174721:
	movq %r11,%r13
	andq $0x3,%r13
	jnz L_172504
L_174722:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r13
	shrq $0x1,%r13
	cmpq $0xE4A,%r13
	jne L_172504
L_174723:
	movq 0x0(%r11),%r13
	cmpq $0x1,%r15
	jne L_172504
L_174724:
	movq 0x0(%r13),%r15
	movq %r15,0xC0(%rbp)
	leaq L_173435(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0xC0,%rbp
	leaq (L_174725+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_452066:
L_174677:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_172504
L_174678:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
L_174679:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_172504
L_174680:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE49,%r15
	je L_452077
	cmpq $0xE4C,%r15
	je L_452067
	jmp L_172504
.p2align 0x4
L_452067:
L_174698:
	movq 0x0(%r11),%r15
L_174699:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_172504
L_174700:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_174701:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_452075
L_174704:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4A,%r13
	je L_452072
	cmpq $0xE4C,%r13
	je L_452069
	xchgq %r11,%r14
L_174702:
	cmpq $0x1,%r14
	jne L_172504
L_174703:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_452069:
L_174709:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_452071
L_174710:
	cmpq $0x1,0x8(%r11)
	jne L_172504
	xchgq %r13,%r14
	jmp x_553
.p2align 0x4
L_452071:
L_174712:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_452072:
L_174705:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_452074
L_174706:
	cmpq $0x1,0x8(%r11)
	jne L_172504
L_174707:
	movq %r15,0x60(%rbp)
	movq %r13,0x68(%rbp)
	jmp x_552
.p2align 0x4
L_452074:
L_174708:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_452075:
	xchgq %r11,%r14
	jmp L_174702
.p2align 0x4
L_452077:
L_174681:
	movq 0x8(%r11),%r15
	cmpq $0x1,%r13
	jne L_172504
L_174682:
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r10,%r13
	jne L_452079
L_174684:
	shlq $0x1,%r10
	orq $0x1,%r10
	movq %r10,0x60(%rbp)
	movq 0x2E0(%rbp),%r15
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r11
	movq 0x0(%r11),%r10
	movq 0x8(%r11),%r9
	movq 0x0(%r9),%r8
	cmpq $0x1,%r8
	je L_452078
L_174685:
	movq %r13,0xC8(%rbp)
	movq 0x0(%r8),%r15
	movq %r15,0xC0(%rbp)
	leaq L_173435(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0xC0,%rbp
	leaq (L_174686+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_452078:
L_174693:
	movq %r10,0xC0(%rbp)
	leaq L_173435(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC0,%rbp
	leaq (L_174694+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_452079:
L_174683:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_452083:
L_174640:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_172504
L_174641:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
L_174642:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_452102
L_174661:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE4C,%r15
	jne L_452092
L_174662:
	movq 0x0(%r11),%r15
L_174663:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_172504
L_174664:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_174665:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_172504
L_174666:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4A,%r13
	je L_452087
	cmpq $0xE4C,%r13
	je L_452084
	jmp L_172504
.p2align 0x4
L_452084:
L_174671:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_452086
L_174672:
	cmpq $0x1,0x8(%r11)
	jne L_172504
	xchgq %r13,%r14
	jmp x_553
.p2align 0x4
L_452086:
L_174674:
	movq (c_stackP+0x0)(%rip),%rsp
	movq %r15,%rsi
	movq %r13,%rdi
	xorq %rax,%rax
	call IntInf_equal
L_174675:
	movl %eax,%ecx
	jmp L_172715
.p2align 0x4
L_452087:
L_174667:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_172504
L_174668:
	cmpq $0x1,0x8(%r11)
	jne L_172504
L_174669:
	movq %r15,0x60(%rbp)
	movq %r13,0x68(%rbp)
	jmp x_552
.p2align 0x4
L_452092:
	movq %r13,%r15
	xchgq %r11,%r14
L_174644:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_172504
L_174645:
	movq 0x0(%r15),%r13
	cmpq $0x1,0x8(%r15)
	jne L_172504
L_174647:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_172504
L_174648:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xE49,%r15
	je L_452096
	cmpq $0xE4A,%r15
	je L_452093
	jmp L_172504
.p2align 0x4
L_452093:
L_174653:
	movq 0x0(%r14),%r15
	movq %r15,0x60(%rbp)
L_174654:
	movq %r13,%r14
	andq $0x3,%r14
	jnz L_172504
L_174655:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	jne L_172504
L_174656:
	movq 0x0(%r13),%r14
	movq %r14,0x20(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0xC8(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0xC0(%rbp)
	addq $0xC0,%rbp
	leaq (L_174657+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_0
.p2align 0x4
L_452096:
L_174649:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r11
	movq $0xECB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r11,0x8(%r14)
	addq $0x18,%r12
L_174650:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_172504
L_174651:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE49,%r15
	jne L_172504
L_174652:
	movq %r14,0xC8(%rbp)
	movq 0x8(%r13),%r15
	movq 0x0(%r13),%r14
	movq $0xECB,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	movq %r13,0xC0(%rbp)
	addq $0x18,%r12
	leaq L_173435(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0xC0,%rbp
	leaq (L_174174+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_3
.p2align 0x4
L_452102:
	movq %r13,%r15
	xchgq %r11,%r14
	jmp L_174644
.p2align 0x4
L_452104:
L_174604:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_172504
L_174605:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
L_174606:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_452121
L_174623:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE4C,%r15
	jne L_452114
L_174624:
	movq 0x0(%r11),%r10
L_174625:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_172504
L_174626:
	movq 0x8(%r13),%r15
	movq 0x0(%r13),%r11
L_174627:
	movq %r11,%r13
	andq $0x3,%r13
	jnz L_174628
L_174630:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r13
	shrq $0x1,%r13
	cmpq $0xE4A,%r13
	je L_452109
	cmpq $0xE4C,%r13
	je L_452106
L_174628:
	cmpq $0x1,%r15
	jne L_172504
L_174629:
	movq 0x50(%rbp),%r15
	movq %r15,0x38(%rbp)
	jmp doit_27
.p2align 0x4
L_452106:
L_174635:
	movq 0x0(%r11),%r13
	cmpq $0x1,%r15
	je L_452108
L_174636:
	cmpq $0x1,0x8(%r15)
	jne L_172504
	movq %r10,%r15
	xchgq %r13,%r14
	jmp x_553
.p2align 0x4
L_452108:
L_174638:
	movq 0x50(%rbp),%r15
	movq %r15,0x38(%rbp)
	jmp doit_27
.p2align 0x4
L_452109:
L_174631:
	movq 0x0(%r11),%r13
	cmpq $0x1,%r15
	je L_452111
L_174632:
	cmpq $0x1,0x8(%r15)
	jne L_172504
L_174633:
	movq %r10,0x60(%rbp)
	movq %r13,0x68(%rbp)
	jmp x_552
.p2align 0x4
L_452111:
L_174634:
	movq 0x50(%rbp),%r15
	movq %r15,0x38(%rbp)
	jmp doit_27
.p2align 0x4
L_452114:
	movq %r13,%r15
	xchgq %r11,%r14
L_174608:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_172504
L_174609:
	movq 0x0(%r15),%r13
	cmpq $0x1,0x8(%r15)
	jne L_172504
L_174611:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_174612
L_174613:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xE4A,%r15
	jne L_452117
L_174614:
	movq 0x0(%r14),%r15
	movq %r15,0x60(%rbp)
L_174615:
	movq %r13,%r14
	andq $0x3,%r14
	jnz L_174616
L_174617:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	jne L_452115
L_174618:
	movq 0x0(%r13),%r14
	movq %r14,0x20(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0xC8(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0xC0(%rbp)
	addq $0xC0,%rbp
	leaq (L_174619+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_0
.p2align 0x4
L_452115:
L_174616:
	movq 0x50(%rbp),%r15
	movq %r15,0x38(%rbp)
	jmp doit_27
.p2align 0x4
L_452117:
L_174612:
	movq 0x50(%rbp),%r15
	movq %r15,0x38(%rbp)
	jmp doit_27
.p2align 0x4
L_452121:
	movq %r13,%r15
	xchgq %r11,%r14
	jmp L_174608
.p2align 0x4
L_452123:
L_174578:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_172504
L_174579:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
L_174580:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_172504
L_174581:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE4C,%r15
	jne L_172504
L_174582:
	movq 0x0(%r11),%r15
	cmpq $0x1,%r13
	je L_452132
L_174583:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_174584:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_452131
L_174587:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4A,%r13
	je L_452128
	cmpq $0xE4C,%r13
	je L_452125
	xchgq %r11,%r14
L_174585:
	cmpq $0x1,%r14
	jne L_172504
L_174586:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_452125:
L_174592:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_452127
L_174593:
	cmpq $0x1,0x8(%r11)
	jne L_172504
	xchgq %r13,%r14
	jmp x_553
.p2align 0x4
L_452127:
L_174595:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_452128:
L_174588:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_452130
L_174589:
	cmpq $0x1,0x8(%r11)
	jne L_172504
L_174590:
	movq %r15,0x60(%rbp)
	movq %r13,0x68(%rbp)
	jmp x_552
.p2align 0x4
L_452130:
L_174591:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_452131:
	xchgq %r11,%r14
	jmp L_174585
.p2align 0x4
L_452132:
L_174596:
	movq %r15,0xC0(%rbp)
	leaq L_173435(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x140(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC0,%rbp
	leaq (L_174597+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toWord_0
.p2align 0x4
L_452136:
L_174557:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_172504
L_174558:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
L_174559:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_172504
L_174560:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE4C,%r15
	jne L_172504
L_174561:
	movq 0x0(%r11),%r15
L_174562:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_172504
L_174563:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_174564:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_452144
L_174567:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4A,%r13
	je L_452141
	cmpq $0xE4C,%r13
	je L_452138
	xchgq %r11,%r14
L_174565:
	cmpq $0x1,%r14
	jne L_172504
L_174566:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_452138:
L_174572:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_452140
L_174573:
	cmpq $0x1,0x8(%r11)
	jne L_172504
	xchgq %r13,%r14
	jmp x_553
.p2align 0x4
L_452140:
L_174575:
	movq (c_stackP+0x0)(%rip),%rsp
	movq %r15,%rsi
	movq %r13,%rdi
	xorq %rax,%rax
	call IntInf_equal
L_174576:
	movl %eax,%ecx
	jmp L_172715
.p2align 0x4
L_452141:
L_174568:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_452143
L_174569:
	cmpq $0x1,0x8(%r11)
	jne L_172504
L_174570:
	movq %r15,0x60(%rbp)
	movq %r13,0x68(%rbp)
	jmp x_552
.p2align 0x4
L_452143:
L_174571:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_452144:
	xchgq %r11,%r14
	jmp L_174565
.p2align 0x4
L_452149:
L_174516:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_172504
L_174517:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
L_174518:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_172504
L_174519:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE4C,%r15
	jne L_172504
L_174520:
	movq 0x0(%r11),%r15
L_174521:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_172504
L_174522:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_174523:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_452162
L_174526:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4A,%r13
	je L_452159
	cmpq $0xE4C,%r13
	je L_452151
	xchgq %r11,%r14
L_174524:
	cmpq $0x1,%r14
	jne L_172504
L_174525:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_452151:
L_174531:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_452153
L_174532:
	cmpq $0x1,0x8(%r11)
	jne L_172504
	xchgq %r13,%r14
	jmp x_553
.p2align 0x4
L_452153:
L_174534:
	movq %r15,%r11
	andq %r13,%r11
	andq $0x1,%r11
	jz L_452156
L_174535:
	cmpq %r13,%r15
	jl L_452155
L_174536:
	cmpq %r15,%r13
	jl L_452154
L_174538:
	movq $0x1,0x60(%rbp)
L_174539:
	movq 0xA8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x138(%rbp),%r15
	movq %r15,0x148(%rbp)
	addq $0x148,%rbp
	leaq (L_174540+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_452154:
L_174547:
	movq $0x3,0x60(%rbp)
	jmp L_174539
.p2align 0x4
L_452155:
L_174549:
	movq $0xFFFFFFFFFFFFFFFF,0x60(%rbp)
	jmp L_174539
.p2align 0x4
L_452156:
L_174550:
	movq (c_stackP+0x0)(%rip),%rsp
	movq %r13,%rsi
	movq %r15,%rdi
	xorq %rax,%rax
	call IntInf_compare
L_174551:
	cmpl $0x0,%eax
	jl L_174549
L_174552:
	cmpl $0x0,%eax
	jg L_174547
	jmp L_174538
.p2align 0x4
L_452159:
L_174527:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_452161
L_174528:
	cmpq $0x1,0x8(%r11)
	jne L_172504
L_174529:
	movq %r15,0x60(%rbp)
	movq %r13,0x68(%rbp)
	jmp x_552
.p2align 0x4
L_452161:
L_174530:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_452162:
	xchgq %r11,%r14
	jmp L_174524
.p2align 0x4
L_452167:
L_174482:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_172504
L_174483:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	cmpq $0x1,%r11
	je L_452178
L_174484:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE4C,%r15
	jne L_172504
L_174485:
	movq 0x0(%r11),%r15
L_174486:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_172504
L_174487:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_174488:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_452175
L_174491:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4A,%r13
	je L_452172
	cmpq $0xE4C,%r13
	je L_452169
	xchgq %r11,%r14
L_174489:
	cmpq $0x1,%r14
	jne L_172504
L_174490:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_452169:
L_174496:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_452171
L_174497:
	cmpq $0x1,0x8(%r11)
	jne L_172504
	xchgq %r13,%r14
	jmp x_553
.p2align 0x4
L_452171:
L_174499:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_452172:
L_174492:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_452174
L_174493:
	cmpq $0x1,0x8(%r11)
	jne L_172504
L_174494:
	movq %r15,0x60(%rbp)
	movq %r13,0x68(%rbp)
	jmp x_552
.p2align 0x4
L_452174:
L_174495:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_452175:
	xchgq %r11,%r14
	jmp L_174489
.p2align 0x4
L_452178:
L_174500:
	cmpq $0x1,%r13
	jne L_172504
L_174501:
	movq 0x2E8(%rbp),%r15
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r11
	movq 0x0(%r11),%r10
	movq 0x8(%r11),%r9
	movq 0x0(%r9),%r8
	cmpq $0x1,%r8
	je L_452179
L_174502:
	movq %r13,0x308(%rbp)
	movq 0x0(%r8),%r15
	movq %r15,0x300(%rbp)
	leaq L_173435(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x300,%rbp
	leaq (L_174503+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_452179:
L_174510:
	movq %r10,0xC0(%rbp)
	leaq L_173435(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC0,%rbp
	leaq (L_174511+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_452182:
L_174458:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_172504
L_174459:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
L_174460:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_172504
L_174461:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE4A,%r15
	je L_452193
	cmpq $0xE4C,%r15
	je L_452183
	jmp L_172504
.p2align 0x4
L_452183:
L_174466:
	movq 0x0(%r11),%r15
L_174467:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_172504
L_174468:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_174469:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_452191
L_174472:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4A,%r13
	je L_452188
	cmpq $0xE4C,%r13
	je L_452185
	xchgq %r11,%r14
L_174470:
	cmpq $0x1,%r14
	jne L_172504
L_174471:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_452185:
L_174477:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_452187
L_174478:
	cmpq $0x1,0x8(%r11)
	jne L_172504
	xchgq %r13,%r14
	jmp x_553
.p2align 0x4
L_452187:
L_174480:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_452188:
L_174473:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_452190
L_174474:
	cmpq $0x1,0x8(%r11)
	jne L_172504
L_174475:
	movq %r15,0x60(%rbp)
	movq %r13,0x68(%rbp)
	jmp x_552
.p2align 0x4
L_452190:
L_174476:
	movq %r15,0x60(%rbp)
	jmp intInfUnary_9
.p2align 0x4
L_452191:
	xchgq %r11,%r14
	jmp L_174470
.p2align 0x4
L_452193:
L_174462:
	movq 0x0(%r11),%r15
	cmpq $0x1,%r13
	jne L_172504
L_174463:
	cmpq $0x1,0x0(%r15)
	jne L_172504
L_174465:
	movq $0x1,0x20(%rbp)
	jmp L_172626
.p2align 0x4
L_452198:
L_175485:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x338,%rbp
	leaq (L_175486+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_175486
.p2align 0x4
.long 0x2411
L_175486:
	addq $0xFFFFFFFFFFFFFCC8,%rbp
	jmp L_173407
.p2align 0x4
L_452199:
L_173402:
	movq (globalObjptr+0x1A48)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_452200:
L_175487:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x338,%rbp
	leaq (L_175488+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_175488
.p2align 0x4
.long 0x2411
L_175488:
	addq $0xFFFFFFFFFFFFFCC8,%rbp
	jmp L_173401
.p2align 0x4
L_452201:
L_175489:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_173410
.p2align 0x4
L_452203:
L_172501:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_172503
L_173392:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x338,%rbp
	leaq (L_173393+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_173393
.p2align 0x4
.long 0x23BD
L_173393:
	addq $0xFFFFFFFFFFFFFCC8,%rbp
L_172503:
	movq 0x78(%rbp),%r15
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_172504
L_172554:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x1411,%r15
	je L_452395
	cmpq $0x1412,%r15
	je L_452387
L_172555:
	movq 0x0(%r13),%r15
L_172556:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_172504
L_172557:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0x1410,%r14
	je L_452334
	cmpq $0x1411,%r14
	je L_452204
	jmp L_172504
.p2align 0x4
L_452204:
L_172775:
	movq 0x0(%r11),%r14
L_172776:
	movq %r14,%r11
	andq $0x3,%r11
	jnz L_172504
L_172777:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r11
	shrq $0x1,%r11
	cmpq $0xE4A,%r11
	je L_452213
	cmpq $0xE4B,%r11
	je L_452209
	cmpq $0xE4C,%r11
	je L_452205
	jmp L_172504
.p2align 0x4
L_452205:
L_173176:
	movq 0x0(%r14),%r11
L_173177:
	movq %r13,%r14
	andq $0x3,%r14
	jnz L_172504
L_173178:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r10
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0x1410,%r13
	jne L_172504
L_173179:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r14
	jne L_172504
L_173180:
	movq %r13,0x78(%rbp)
	movq %r15,0x80(%rbp)
	movl $0x1,0x70(%rbp)
	movq %r11,%r15
varIntInf_3:
	movq %r15,0x338(%rbp)
	leaq L_173239(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x338,%rbp
	leaq (L_173181+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_452209:
L_173125:
	movq 0x0(%r14),%r11
	cmpq $0x1,%r13
	jne L_172504
L_173126:
	movq %r11,0x78(%rbp)
	movq %r15,0x80(%rbp)
	movl $0x1,0x70(%rbp)
varReal_3:
	movq 0x1A0(%rbp),%r15
	movq 0x8(%r15),%r14
	cmpq $0x1,0x0(%r14)
	jne L_172504
L_173128:
	movq 0x78(%rbp),%r15
	movq %r15,%r14
	andq $0x1,%r14
	cmpq $0x1,%r14
	je L_452210
L_173129:
	movsd 0x0(%r15),%xmm15
	movsd %xmm15,0xC8(%rbp)
	movq 0x1C0(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC8,%rbp
	leaq (L_173130+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1485
.p2align 0x4
L_452210:
L_173175:
	shrq $0x1,%r15
	movl %r15d,%r14d
	movd %r14d,%xmm15
	movss %xmm15,%xmm14
	movss %xmm14,0xC8(%rbp)
	movq 0x1B0(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC8,%rbp
	leaq (L_173130+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1486
.p2align 0x4
L_452213:
L_172778:
	movq 0x0(%r14),%r11
	cmpq $0x1,%r13
	je L_452231
L_172779:
	cmpq $0x1,0x8(%r13)
	jne L_172504
L_172780:
	cmpq $0x1,0x0(%r11)
	jne L_172504
L_172782:
	movq 0x28(%rbp),%r14
	movq %r14,%r13
	andq $0xFF,%r13
	cmpq $0x1F,%r13
	je L_452228
	cmpq $0x25,%r13
	je L_452215
L_172783:
	andq $0x3,%r14
	jnz L_172504
L_172784:
	jmp L_172504
.p2align 0x4
L_452215:
L_172786:
	movq %r15,0x20(%rbp)
L_172582:
	cmpl $0x0,0x58(%rbp)
	jl L_172393
L_172583:
	xorl %ecx,%ecx
.p2align 0x4,,0x7
loop_1750:
	cmpl 0x58(%rbp),%ecx
	jnl L_452226
L_172592:
	movslq %ecx,%r15
	movq 0x50(%rbp),%r11
	movq 0x0(%r11,%r15,8),%r10
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r15
	shrq $0x1,%r15
	cmpq $0xEA9,%r15
	je L_452224
L_172616:
	movq 0x10(%r10),%r13
	movq 0x20(%rbp),%r11
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xEA9,%r15
	je L_452223
L_172618:
	movq 0x10(%r11),%r14
	movq %r10,%r15
L_172595:
	movq 0x8(%r13),%r10
	movq 0x8(%r14),%r9
	movq 0x0(%r14),%r8
	movq 0x0(%r13),%rsp
	movq 0x10(%rsp),%rsi
	cmpq %rsi,0x10(%r8)
	jne x_550
L_172601:
	movq 0xFFFFFFFFFFFFFFF0(%r10),%r11
	movl %r11d,%ebx
	movslq %ebx,%r14
	cmpq %r11,%r14
	jne L_172364
L_172603:
	movq 0xFFFFFFFFFFFFFFF0(%r9),%r8
	movl %r8d,%esp
	movslq %esp,%r14
	cmpq %r8,%r14
	jne L_172364
L_172605:
	cmpl %ebx,%esp
	jne x_550
L_172607:
	xorl %r8d,%r8d
	movq %r10,%r14
	movq %r9,%r13
	xchgl %r8d,%ecx
	movl %r8d,(localWord32+0x0)(%rip)
.p2align 0x4,,0x7
loop_1751:
	cmpl %ecx,%ebx
	je L_452220
L_172608:
	movslq %ecx,%r10
	cmpq %r11,%r10
	jnb L_172440
L_172610:
	movq 0x0(%r13,%r10,8),%r9
	movq 0x0(%r14,%r10,8),%r8
	movq 0x10(%r8),%rsp
	cmpq %rsp,0x10(%r9)
	jne x_1789
L_172612:
	incl %ecx
	jo L_172355
L_172613:
	jmp loop_1751
.p2align 0x4
x_1789:
	movl (localWord32+0x0)(%rip),%ecx
x_550:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xEA9,%r14
	je L_172598
L_172599:
	movq 0x0(%r15),%r14
	movl 0x0(%r14),%r15d
	decl %r15d
	jo L_172355
L_172600:
	movl %r15d,0x0(%r14)
L_172598:
	incl %ecx
	jmp loop_1750
.p2align 0x4
L_452220:
	movl (localWord32+0x0)(%rip),%ecx
	jmp L_172598
.p2align 0x4
L_452223:
L_172617:
	movq 0x0(%r11),%r14
	movq %r10,%r15
	jmp L_172595
.p2align 0x4
L_452224:
L_172593:
	movq 0x0(%r10),%r13
	movq 0x20(%rbp),%r11
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xEA9,%r15
	je L_452225
L_172615:
	movq 0x10(%r11),%r14
	movq %r10,%r15
	jmp L_172595
.p2align 0x4
L_452225:
L_172594:
	movq 0x0(%r11),%r14
	movq %r10,%r15
	jmp L_172595
.p2align 0x4
L_452226:
L_172584:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0xB8(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_172585+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1792
.p2align 0x4
L_452228:
L_172785:
	movq %r15,0x20(%rbp)
	jmp L_172582
.p2align 0x4
L_452231:
L_172787:
	movq 0x28(%rbp),%r14
	movq %r14,%r13
	andq $0xFF,%r13
	cmpq $0x9,%r13
	je L_452331
	cmpq $0x15,%r13
	je L_452328
L_172788:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_172504
L_172789:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%rax
	shrq $0x1,%rax
	subq $0x1211,%rax
	cmpq $0x16,%rax
	ja L_172504
	leaq jumpTable_588(%rip),%rbx
	jmp *(%rbx,%rax,8)
.data
.p2align 0x4
jumpTable_588:
.quad L_452325,L_452322,L_452275,L_452270,L_452269,L_452266,L_172504,L_452261,L_452257,L_452255,L_172504,L_172504,L_172504,L_452251,L_452247,L_452243,L_452239,L_172504,L_172504,L_172504,L_452237,L_452235,L_452233
.text
.p2align 0x4
L_452233:
L_173111:
	movq %r15,%r14
	movq %r11,%r15
L_173112:
	cmpq $0x1,0x0(%r15)
	jne L_172504
L_173114:
	movq %r14,0x20(%rbp)
	jmp L_172582
.p2align 0x4
L_452235:
L_173107:
	movq %r15,%r14
	movq %r11,%r15
L_173108:
	cmpq $0x1,0x0(%r15)
	jne L_172504
L_173110:
	movq %r14,0x20(%rbp)
	jmp L_172582
.p2align 0x4
L_452237:
L_173097:
	movq %r15,0x68(%rbp)
	movq 0x28(%rbp),%r13
	movq 0x0(%r13),%r14
	movq %r11,%r15
L_173098:
	movq 0x0(%r15),%r13
	movq %r13,0x70(%rbp)
	cmpq $0x1,%r13
	je L_452238
L_173099:
	movq 0x2F8(%rbp),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x38(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x78(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0xC8(%rbp)
	addq $0xC8,%rbp
	leaq (L_173100+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_452238:
L_173106:
	movq %r14,0x20(%rbp)
zero_5:
	movq 0x2F0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xC0,%rbp
	leaq (L_172913+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_452239:
L_173094:
	movq 0x28(%rbp),%r10
	movq 0x0(%r10),%r13
	movl $0x1,%ecx
	movq %r11,%r14
shift_3:
	testl %ecx,%ecx
	jz L_452241
L_173096:
	movq %r14,0x68(%rbp)
	movq %r13,0x70(%rbp)
	movq %r15,%r13
L_172920:
	movq 0x68(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x78(%rbp)
	cmpq $0x1,%r14
	jne L_452240
L_172938:
	movq %r13,0x20(%rbp)
	jmp L_172582
.p2align 0x4
L_452240:
L_172921:
	movq 0xA8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x128(%rbp),%r15
	movq %r15,0x300(%rbp)
	addq $0x300,%rbp
	leaq (L_172922+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_452241:
L_173095:
	xchgq %r13,%r14
L_172910:
	cmpq $0x1,0x0(%r13)
	jne L_172504
L_172912:
	movq %r14,0x20(%rbp)
	jmp zero_5
.p2align 0x4
L_452243:
L_173054:
	movq %r11,0x60(%rbp)
	movq 0x28(%rbp),%r15
	movl 0x0(%r15),%ebx
	movl $0x1,%ecx
L_173055:
	testl %ecx,%ecx
	jnz L_452245
L_173056:
	movq 0x60(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x308(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x70(%rbp)
	movq 0x0(%r15),%r13
	movq 0x18(%r13),%r11
	movq %r11,0x78(%rbp)
	movq 0x10(%r13),%r11
	movq %r11,0x80(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x88(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x98(%rbp)
	testl %ebx,%ebx
	jnz L_452244
L_173057:
	movq %r14,0xC0(%rbp)
	addq $0xC0,%rbp
	leaq (L_173058+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_452244:
L_173070:
	movq %r14,0xC0(%rbp)
	addq $0xC0,%rbp
	leaq (L_173071+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_452245:
L_173074:
	movq 0x60(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x300(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x70(%rbp)
	movq 0x0(%r15),%r13
	movq 0x18(%r13),%r11
	movq %r11,0x78(%rbp)
	movq 0x10(%r13),%r11
	movq %r11,0x80(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x88(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x98(%rbp)
	testl %ebx,%ebx
	jnz L_452246
L_173075:
	movq %r14,0xC0(%rbp)
	addq $0xC0,%rbp
	leaq (L_173076+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_452246:
L_173089:
	movq %r14,0xC0(%rbp)
	addq $0xC0,%rbp
	leaq (L_173090+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_452247:
L_173040:
	movq %r15,0x78(%rbp)
	movq 0x28(%rbp),%r14
	movl 0x0(%r14),%ecx
	movq 0x8(%r14),%r13
	movq %r13,0x70(%rbp)
	movq %r11,%r15
L_173041:
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_452250
L_173042:
	cmpq $0x3,%r14
	je L_452249
L_173043:
	testl %ecx,%ecx
	jz L_172504
L_173045:
	movq %r15,0xC0(%rbp)
	movq 0x310(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC0,%rbp
	leaq (L_173046+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toIntInfX_0
.p2align 0x4
L_452249:
L_173052:
	movq 0x78(%rbp),%r15
	movq %r15,0x20(%rbp)
	jmp L_172582
.p2align 0x4
L_452250:
L_173053:
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x20(%rbp)
	addq $0x10,%r12
	jmp L_172626
.p2align 0x4
L_452251:
L_173026:
	movq %r15,0x78(%rbp)
	movq 0x28(%rbp),%r14
	movl 0x0(%r14),%ecx
	movq 0x8(%r14),%r13
	movq %r13,0x70(%rbp)
	movq %r11,%r15
L_173027:
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_452254
L_173028:
	cmpq $0x3,%r14
	je L_452253
L_173029:
	testl %ecx,%ecx
	jz L_172504
L_173031:
	movq %r15,0xC0(%rbp)
	movq 0x310(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC0,%rbp
	leaq (L_173032+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toIntInfX_0
.p2align 0x4
L_452253:
L_173038:
	movq 0x78(%rbp),%r15
	movq %r15,0x20(%rbp)
	jmp L_172582
.p2align 0x4
L_452254:
L_173039:
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x20(%rbp)
	addq $0x10,%r12
	jmp L_172626
.p2align 0x4
L_452255:
L_173013:
	movq %r11,0x68(%rbp)
L_173014:
	movq 0x68(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x70(%rbp)
	cmpq $0x1,%r13
	jne L_452256
L_173025:
	movq %r15,0x20(%rbp)
	jmp L_172582
.p2align 0x4
L_452256:
L_173015:
	movq 0x2F8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x68(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0xC0(%rbp)
	addq $0xC0,%rbp
	leaq (L_173016+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_452257:
L_172999:
	movq %r15,0x70(%rbp)
	movq 0x28(%rbp),%r14
	movl 0x0(%r14),%ebx
	movq 0x8(%r14),%r13
	movq %r13,0x38(%rbp)
	movl $0x1,%ecx
	movq %r11,%r15
L_173000:
	testl %ecx,%ecx
	jz L_172504
L_173002:
	cmpq $0x3,0x0(%r15)
	je L_452259
L_173003:
	testl %ebx,%ebx
	jz L_172504
L_173005:
	movq %r15,0xC0(%rbp)
	movq 0x310(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC0,%rbp
	leaq (L_173006+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toIntInfX_0
.p2align 0x4
L_452259:
L_173012:
	movq 0x70(%rbp),%r15
	movq %r15,0x20(%rbp)
	jmp L_172582
.p2align 0x4
L_452261:
L_172987:
	movq 0x28(%rbp),%r14
	movl 0x0(%r14),%ebx
	movq 0x8(%r14),%r13
	movq %r13,0x60(%rbp)
	movl $0x1,%ecx
	movq %r11,%r15
L_172988:
	testl %ecx,%ecx
	jz L_172504
L_172990:
	cmpq $0x3,0x0(%r15)
	je L_452263
L_172991:
	testl %ebx,%ebx
	jz L_172504
L_172993:
	movq %r15,0x300(%rbp)
	movq 0x310(%rbp),%r15
	movq %r15,0x308(%rbp)
	addq $0x300,%rbp
	leaq (L_172994+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toIntInfX_0
.p2align 0x4
L_452263:
L_172997:
	movq 0x60(%rbp),%r15
	movq %r15,0x20(%rbp)
	jmp zero_5
.p2align 0x4
L_452266:
L_172986:
	movq %r11,0x68(%rbp)
	movq %r15,0x70(%rbp)
	movq 0x28(%rbp),%r14
	movq 0x0(%r14),%r15
	movl $0x1,%ecx
ro_3:
	testl %ecx,%ecx
	jz L_452267
L_172969:
	movq %r15,0x208(%rbp)
	addq $0x208,%rbp
	leaq (L_172970+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_452267:
L_172956:
	movq 0x68(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x60(%rbp)
	cmpq $0x1,%r14
	je L_452268
L_172957:
	movq 0x2F8(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x70(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x78(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0xC0(%rbp)
	addq $0xC0,%rbp
	leaq (L_172958+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_452268:
L_172965:
	movq $0x1C95,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x20(%rbp)
	jmp L_172626
.p2align 0x4
L_452269:
L_172955:
	movq %r11,0x68(%rbp)
	movq %r15,0x70(%rbp)
	movq 0x28(%rbp),%r14
	movq 0x0(%r14),%r15
	movl $0x1,%ecx
	jmp ro_3
.p2align 0x4
L_452270:
L_172906:
	movq %r11,0x68(%rbp)
	movq 0x28(%rbp),%r13
	movl 0x0(%r13),%ecx
	movq 0x8(%r13),%r11
	movl $0x1,0x5C(%rbp)
	movq %r15,%r14
	movq %r11,%r15
L_172907:
	testl %ecx,%ecx
	jnz L_452272
L_172908:
	movl 0x5C(%rbp),%r11d
	testl %r11d,%r11d
	jz L_452271
L_172919:
	movq %r15,0x70(%rbp)
	movq %r14,%r13
	jmp L_172920
.p2align 0x4
L_452271:
L_172909:
	movq 0x68(%rbp),%r13
	movq %r15,%r14
	jmp L_172910
.p2align 0x4
L_452272:
L_172939:
	movq 0x68(%rbp),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x70(%rbp)
	cmpq $0x1,%r11
	jne L_452274
L_172952:
	movl 0x5C(%rbp),%r13d
	testl %r13d,%r13d
	jnz L_452273
L_172953:
	movq %r15,0x20(%rbp)
	jmp zero_5
.p2align 0x4
L_452273:
L_172954:
	movq %r14,0x20(%rbp)
	jmp L_172582
.p2align 0x4
L_452274:
L_172940:
	movq 0x2F8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x68(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0xC0(%rbp)
	addq $0xC0,%rbp
	leaq (L_172941+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_452275:
L_172900:
	movq 0x28(%rbp),%r10
	movq 0x0(%r10),%r13
	movl $0x1,%ecx
	movq %r11,%r14
L_172901:
	cmpq $0x1,0x0(%r14)
	jne L_172504
L_172903:
	testl %ecx,%ecx
	jnz L_452320
L_172904:
	movq $0x243B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	movq %r14,0x38(%rbp)
	addq $0x10,%r12
	movq $0x282B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq %r14,0x28(%rbp)
	movq $0x1,%r13
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_172800:
	incl %ecx
	jo L_172355
L_172801:
	cmpq $0x1,%r13
	je L_452276
L_172802:
	movq 0x8(%r13),%r13
	jmp L_172800
.p2align 0x4
L_452276:
L_172803:
	movslq %ecx,%rdx
	movq %rdx,0x60(%rbp)
	testq %rdx,%rdx
	jz L_452318
L_172804:
	cmpq $0x7FFFFFFF,%rdx
	ja L_172421
L_172805:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1517,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_172806+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_172806
.p2align 0x4
.long 0x2371
L_172806:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq %rax,0x70(%rbp)
L_172807:
	movq 0x28(%rbp),%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_1755:
	cmpq 0x60(%rbp),%r15
	jnl L_452278
L_172886:
	cmpq $0x1,%r14
	je L_452277
L_172887:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq 0x70(%rbp),%r11
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r13,0x0(%r11,%r15,8)
	incq %r15
	jmp loop_1755
.p2align 0x4
L_452277:
L_172888:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x4B0)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_452278:
L_172808:
	movq 0x70(%rbp),%r15
	movq $0xB9F,0xFFFFFFFFFFFFFFF8(%r15)
	movl 0x5C(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_452316
L_172809:
	movq 0x68(%rbp),%rdx
	cmpq $0x7FFFFFFF,%rdx
	ja L_172421
L_172810:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x151B,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_172811+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_172811
.p2align 0x4
.long 0x2380
L_172811:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq %rax,0x28(%rbp)
L_172812:
	movl $0x0,0x5C(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_1756:
	cmpq 0x68(%rbp),%r15
	jnl L_452295
L_172851:
	movl %r15d,%ebx
	movslq %ebx,%r14
	movq 0x50(%rbp),%r11
	movq 0x0(%r11,%r14,8),%r13
	movq 0x70(%rbp),%r11
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r14
	movl %r14d,%ecx
	movslq %ecx,%r11
	cmpq %r14,%r11
	jne L_172364
L_172853:
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_1762:
	cmpl %ebx,%ecx
	je L_452293
L_172854:
	movslq %ebx,%r11
	cmpq %r14,%r11
	jnb L_172440
L_172856:
	movq 0x70(%rbp),%r10
	movq 0x0(%r10,%r11,8),%r9
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xEA9,%r11
	je L_452290
L_172880:
	movq 0x10(%r13),%r11
	movq 0xFFFFFFFFFFFFFFF8(%r9),%r10
	shrq $0x1,%r10
	cmpq $0xEA9,%r10
	je L_452289
L_172882:
	movq 0x10(%r9),%r9
	xchgq %r9,%r15
	movq %r9,(localWord64+0x0)(%rip)
L_172859:
	movq 0x8(%r11),%r9
	movq 0x8(%r15),%r8
	movq 0x0(%r11),%rsp
	movq 0x0(%r15),%rsi
	movq 0x10(%rsi),%rdi
	cmpq %rdi,0x10(%rsp)
	jne L_172861
L_172863:
	movq 0xFFFFFFFFFFFFFFF0(%r9),%r10
	movl %r10d,%esp
	movslq %esp,%r15
	cmpq %r10,%r15
	jne L_172364
L_172865:
	movq 0xFFFFFFFFFFFFFFF0(%r8),%rsi
	movl %esi,%edi
	movslq %edi,%r15
	cmpq %rsi,%r15
	jne L_172364
L_172867:
	cmpl %edi,%esp
	jne L_172861
L_172869:
	xorl %esi,%esi
	movq %r9,%r15
	movq %r8,%r11
	xchgl %esp,%ecx
	xchgl %esi,%ebx
	movl %esp,(localWord32+0x4)(%rip)
	movl %esi,(localWord32+0x0)(%rip)
.p2align 0x4,,0x7
loop_1763:
	cmpl %ebx,%ecx
	je L_452283
L_172870:
	movslq %ebx,%r9
	cmpq %r10,%r9
	jnb L_172440
L_172872:
	movq 0x0(%r15,%r9,8),%r8
	movq 0x0(%r11,%r9,8),%rsp
	movq 0x10(%rsp),%rsi
	cmpq %rsi,0x10(%r8)
	jne L_452280
L_172874:
	incl %ebx
	jo L_172355
L_172875:
	jmp loop_1763
.p2align 0x4
L_452280:
	movl (localWord32+0x4)(%rip),%ecx
	movl (localWord32+0x0)(%rip),%ebx
L_172861:
	incl %ebx
	jo L_172355
L_172862:
	movq (localWord64+0x0)(%rip),%r15
	jmp loop_1762
.p2align 0x4
L_452283:
L_172876:
	movl 0x5C(%rbp),%ecx
	incl %ecx
	jo L_172355
L_172877:
	movl $0x1,%ebx
	movq (localWord64+0x0)(%rip),%r15
L_172878:
	movq %r15,%r14
	movq %r15,%r11
	movl %ecx,0x5C(%rbp)
	salq $0x4,%r14
	movq 0x28(%rbp),%r10
	movl %ebx,0x0(%r10,%r14,1)
	movq %r10,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r14,1)
	salq $0x4,%r11
	movq %r13,0x8(%r10,%r11,1)
	incq %r15
	jmp loop_1756
.p2align 0x4
L_452289:
L_172881:
	movq 0x0(%r9),%r9
	xchgq %r9,%r15
	movq %r9,(localWord64+0x0)(%rip)
	jmp L_172859
.p2align 0x4
L_452290:
L_172857:
	movq 0x0(%r13),%r11
	movq 0xFFFFFFFFFFFFFFF8(%r9),%r10
	shrq $0x1,%r10
	cmpq $0xEA9,%r10
	je L_452291
L_172879:
	movq 0x10(%r9),%r9
	xchgq %r9,%r15
	movq %r9,(localWord64+0x0)(%rip)
	jmp L_172859
.p2align 0x4
L_452291:
L_172858:
	movq 0x0(%r9),%r9
	xchgq %r9,%r15
	movq %r9,(localWord64+0x0)(%rip)
	jmp L_172859
.p2align 0x4
L_452293:
L_172883:
	movl 0x5C(%rbp),%ecx
	xorl %ebx,%ebx
	jmp L_172878
.p2align 0x4
L_452295:
L_172813:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_172814
L_172849:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_172850+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_172850
.p2align 0x4
.long 0x2382
L_172850:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_172814:
	movq 0x28(%rbp),%r14
	movq $0x17C7,0xFFFFFFFFFFFFFFF8(%r14)
	movq $0x4B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x50(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movslq 0x5C(%rbp),%r15
	testq %r15,%r15
	jz L_172817
L_172815:
	cmpq $0x7FFFFFFF,%r15
	ja L_172421
L_172817:
	xorq %r14,%r14
.p2align 0x4,,0x7
loop_1757:
	cmpq %r15,%r14
	jnl L_452299
L_172842:
	movq 0x50(%rbp),%r13
	movl 0x0(%r13),%ecx
.p2align 0x4,,0x7
loop_1761:
	movslq %ecx,%r13
	salq $0x4,%r13
	movq 0x28(%rbp),%r11
	cmpl $0x1,0x0(%r11,%r13,1)
	je L_452297
L_172843:
	incl %ecx
	jo L_172355
L_172844:
	jmp loop_1761
.p2align 0x4
L_452297:
L_172845:
	incl %ecx
	jo L_172355
L_172846:
	movq 0x50(%rbp),%r13
	movl %ecx,0x0(%r13)
	incq %r14
	jmp loop_1757
.p2align 0x4
L_452299:
L_172818:
	movq 0x50(%rbp),%r15
	movl $0x0,0x0(%r15)
	movl 0x58(%rbp),%r15d
	subl 0x5C(%rbp),%r15d
	jo L_172355
L_172819:
	movslq %r15d,%rdx
	movq %rdx,0x58(%rbp)
	testq %rdx,%rdx
	jz L_452310
L_172820:
	cmpq $0x7FFFFFFF,%rdx
	ja L_172421
L_172821:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1517,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_172822+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_172822
.p2align 0x4
.long 0x2381
L_172822:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq %rax,%r15
L_172823:
	xorq %r14,%r14
.p2align 0x4,,0x7
loop_1758:
	cmpq 0x58(%rbp),%r14
	jnl L_452303
L_172835:
	movq 0x50(%rbp),%r13
	movl 0x0(%r13),%ecx
.p2align 0x4,,0x7
loop_1760:
	movslq %ecx,%r13
	movq %r13,%r11
	salq $0x4,%r11
	salq $0x4,%r13
	movq 0x28(%rbp),%r10
	movq 0x8(%r10,%r13,1),%r9
	movl 0x0(%r10,%r11,1),%r13d
	testl %r13d,%r13d
	jz L_452301
L_172836:
	incl %ecx
	jo L_172355
L_172837:
	jmp loop_1760
.p2align 0x4
L_452301:
L_172838:
	incl %ecx
	jo L_172355
L_172839:
	movq 0x50(%rbp),%r13
	movl %ecx,0x0(%r13)
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r9,0x0(%r15,%r14,8)
	incq %r14
	jmp loop_1758
.p2align 0x4
L_452303:
L_172824:
	movq $0xB9F,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%ecx
	movslq %ecx,%r13
	cmpq %r13,%r14
	jne L_172364
L_172826:
	cmpl $0x0,%ecx
	jl L_172393
L_172827:
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_1759:
	cmpl %ecx,%ebx
	jnl L_452306
L_172829:
	movslq %ebx,%r14
	movq 0x0(%r15,%r14,8),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r14
	shrq $0x1,%r14
	cmpq $0xEA9,%r14
	je L_172831
L_172832:
	movq 0x0(%r13),%r14
	movl 0x0(%r14),%r13d
	decl %r13d
	jo L_172355
L_172833:
	movl %r13d,0x0(%r14)
L_172831:
	incl %ebx
	jmp loop_1759
.p2align 0x4
L_452306:
L_172828:
	movq 0x38(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x38(%rbp)
	jmp doit_27
.p2align 0x4
L_452310:
L_172841:
	movq (globalObjptr+0x1CA0)(%rip),%r15
	jmp L_172823
.p2align 0x4
L_452316:
L_172885:
	movq (globalObjptr+0x1C98)(%rip),%r15
	movq %r15,0x28(%rbp)
	jmp L_172812
.p2align 0x4
L_452318:
L_172890:
	movq (globalObjptr+0x1C90)(%rip),%r15
	movq %r15,0x70(%rbp)
	jmp L_172807
.p2align 0x4
L_452320:
L_172905:
	movq %r15,0x20(%rbp)
	jmp L_172582
.p2align 0x4
L_452322:
L_172894:
	movq 0x28(%rbp),%r10
	movq 0x8(%r10),%r13
	movl $0x1,%ecx
	movq %r11,%r14
L_172895:
	cmpq $0x1,0x0(%r14)
	jne L_172504
L_172897:
	testl %ecx,%ecx
	jnz L_452323
L_172898:
	movq $0x2439,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	movq %r14,0x38(%rbp)
	addq $0x10,%r12
	movq $0x282B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq %r14,0x28(%rbp)
	movq $0x1,%r13
	xorl %ecx,%ecx
	jmp L_172800
.p2align 0x4
L_452323:
L_172899:
	movq %r15,0x20(%rbp)
	jmp L_172582
.p2align 0x4
L_452325:
L_172790:
	movq %r15,0x70(%rbp)
	movq 0x28(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x38(%rbp)
	movq %r11,%r15
L_172791:
	movq 0x0(%r15),%r14
	movq %r14,0x78(%rbp)
	cmpq $0x1,%r14
	je L_452326
L_172792:
	movq 0x2F8(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x60(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x80(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0xC0(%rbp)
	addq $0xC0,%rbp
	leaq (L_172793+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_452326:
L_172893:
	movq 0x70(%rbp),%r15
	movq %r15,0x20(%rbp)
	jmp L_172582
.p2align 0x4
L_452328:
L_173119:
	movl $0x1,%ecx
	xchgq %r15,%r14
	xchgq %r11,%r15
L_173120:
	cmpq $0x1,0x0(%r15)
	jne L_172504
L_173122:
	testl %ecx,%ecx
	jz L_172504
L_173124:
	movq %r14,0x20(%rbp)
	jmp L_172582
.p2align 0x4
L_452331:
L_173115:
	xchgq %r15,%r14
	xchgq %r11,%r15
L_173116:
	cmpq $0x1,0x0(%r15)
	jne L_172504
L_173118:
	movq %r14,0x20(%rbp)
	jmp L_172582
.p2align 0x4
L_452334:
L_172558:
	movq 0x0(%r11),%r10
	cmpq $0x1,%r13
	je L_452354
L_172559:
	cmpq $0x1,0x8(%r13)
	jne L_172504
L_172560:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xEA9,%r14
	je L_452351
L_172654:
	movq 0x10(%r15),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r14
	shrq $0x1,%r14
	cmpq $0xEA9,%r14
	je L_452350
L_172656:
	movq 0x10(%r10),%r10
	movq %r10,%r14
L_172563:
	movq 0x8(%r13),%r10
	movq 0x8(%r14),%r9
	movq 0x0(%r14),%r8
	movq 0x0(%r13),%rsp
	movq 0x10(%rsp),%rsi
	cmpq %rsi,0x10(%r8)
	jne L_172504
L_172565:
	movq 0xFFFFFFFFFFFFFFF0(%r10),%r11
	movl %r11d,%ecx
	movslq %ecx,%r14
	cmpq %r11,%r14
	jne L_172364
L_172567:
	movq 0xFFFFFFFFFFFFFFF0(%r9),%r8
	movl %r8d,%ebx
	movslq %ebx,%r14
	cmpq %r14,%r8
	jne L_172364
L_172569:
	cmpl %ecx,%ebx
	jne L_172504
L_172571:
	xorl %ebx,%ebx
	movq %r10,%r14
	movq %r9,%r13
.p2align 0x4,,0x7
loop_1749:
	cmpl %ecx,%ebx
	je L_452338
L_172572:
	movslq %ebx,%r10
	cmpq %r11,%r10
	jnb L_172440
L_172574:
	movq 0x0(%r14,%r10,8),%r9
	movq 0x0(%r13,%r10,8),%r8
	movq 0x10(%r8),%rsp
	cmpq %rsp,0x10(%r9)
	jne L_172504
L_172576:
	incl %ebx
	jo L_172355
L_172577:
	jmp loop_1749
.p2align 0x4
L_452338:
L_172578:
	movq 0x28(%rbp),%r14
	movq %r14,%r13
	andq $0xFF,%r13
	cmpq $0x1E,%r13
	je L_452345
	cmpq $0x2A,%r13
	je L_452344
	cmpq $0x2B,%r13
	je L_452343
	cmpq $0x2D,%r13
	je L_172650
	cmpq $0x2E,%r13
	je L_172650
	cmpq $0x33,%r13
	je L_452340
L_172579:
	andq $0x3,%r14
	jnz L_172504
L_172580:
	jmp L_172504
.p2align 0x4
L_452340:
L_172650:
	xorl %ecx,%ecx
x_551:
	movslq %ecx,%r15
	shlq $0x1,%r15
	orq $0x1,%r15
	movq %r15,0x60(%rbp)
	movq %r15,0xC0(%rbp)
	movq 0x328(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC0,%rbp
	leaq (L_172623+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1473
.p2align 0x4
L_452343:
L_172622:
	movl $0x1,%ecx
	jmp x_551
.p2align 0x4
L_452344:
L_172620:
	movq %r15,0x20(%rbp)
	jmp L_172582
.p2align 0x4
L_452345:
L_172581:
	movq %r15,0x20(%rbp)
	jmp L_172582
.p2align 0x4
L_452350:
L_172655:
	movq 0x0(%r10),%r10
	movq %r10,%r14
	jmp L_172563
.p2align 0x4
L_452351:
L_172561:
	movq 0x0(%r15),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r14
	shrq $0x1,%r14
	cmpq $0xEA9,%r14
	je L_452352
L_172653:
	movq 0x10(%r10),%r10
	movq %r10,%r14
	jmp L_172563
.p2align 0x4
L_452352:
L_172562:
	movq 0x0(%r10),%r10
	movq %r10,%r14
	jmp L_172563
.p2align 0x4
L_452354:
L_172657:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xEA9,%r14
	je L_452384
L_172772:
	movq 0x10(%r15),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r14
	shrq $0x1,%r14
	cmpq $0xEA9,%r14
	je L_452383
L_172774:
	movq 0x10(%r10),%r10
	movq %r10,%r14
L_172660:
	movq 0x8(%r13),%r10
	movq 0x8(%r14),%r9
	movq 0x0(%r14),%r8
	movq 0x0(%r13),%rsp
	movq 0x10(%rsp),%rsi
	cmpq %rsi,0x10(%r8)
	jne L_172504
L_172662:
	movq 0xFFFFFFFFFFFFFFF0(%r10),%r11
	movl %r11d,%ecx
	movslq %ecx,%r14
	cmpq %r11,%r14
	jne L_172364
L_172664:
	movq 0xFFFFFFFFFFFFFFF0(%r9),%r8
	movl %r8d,%ebx
	movslq %ebx,%r14
	cmpq %r8,%r14
	jne L_172364
L_172666:
	cmpl %ebx,%ecx
	jne L_172504
L_172668:
	xorl %ebx,%ebx
	movq %r10,%r14
	movq %r9,%r13
.p2align 0x4,,0x7
loop_1753:
	cmpl %ebx,%ecx
	je L_452358
L_172669:
	movslq %ebx,%r10
	cmpq %r11,%r10
	jnb L_172440
L_172671:
	movq 0x0(%r14,%r10,8),%r9
	movq 0x0(%r13,%r10,8),%r8
	movq 0x10(%r8),%rsp
	cmpq %rsp,0x10(%r9)
	jne L_172504
L_172673:
	incl %ebx
	jo L_172355
L_172674:
	jmp loop_1753
.p2align 0x4
L_452358:
L_172675:
	movq 0x28(%rbp),%r14
	movq %r14,%r13
	andq $0xFF,%r13
	cmpq $0xA,%r13
	je L_452377
	cmpq $0xB,%r13
	je L_172756
	cmpq $0x11,%r13
	je L_452375
	cmpq $0x21,%r13
	je L_452374
	cmpq $0x22,%r13
	je L_172756
	cmpq $0x39,%r13
	je L_172756
	cmpq $0x3A,%r13
	je L_452371
	cmpq $0x7F,%r13
	je L_452370
	cmpq $0x86,%r13
	je L_452369
L_172676:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_172504
L_172677:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x1211,%r13
	je L_452367
	cmpq $0x1212,%r13
	je L_452366
	cmpq $0x1213,%r13
	je L_452365
	cmpq $0x1218,%r13
	je L_452364
	cmpq $0x1219,%r13
	je L_452363
	cmpq $0x121A,%r13
	je L_452362
	cmpq $0x1220,%r13
	je L_452361
	cmpq $0x1223,%r13
	je L_452360
	cmpq $0x1225,%r13
	je L_452359
	jmp L_172504
.p2align 0x4
L_452359:
L_172740:
	movq %r15,0x20(%rbp)
	jmp L_172582
.p2align 0x4
L_452360:
L_172739:
	movl $0x1,%ecx
	jmp L_172715
.p2align 0x4
L_452361:
L_172714:
	xorl %ecx,%ecx
	jmp L_172715
.p2align 0x4
L_452362:
L_172713:
	movq %r15,0x20(%rbp)
	jmp L_172582
.p2align 0x4
L_452363:
L_172706:
	movq 0x28(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x218(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x60(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x68(%rbp)
	movq %r14,0xC0(%rbp)
	addq $0xC0,%rbp
	leaq (L_172707+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_452364:
L_172699:
	movq 0x28(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x2F0(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x60(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x68(%rbp)
	movq %r14,0xC0(%rbp)
	addq $0xC0,%rbp
	leaq (L_172700+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_452365:
L_172692:
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x2F0(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x60(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x68(%rbp)
	movq %r14,0xC0(%rbp)
	addq $0xC0,%rbp
	leaq (L_172693+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_452366:
L_172685:
	movq 0x28(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x2F0(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x60(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x68(%rbp)
	movq %r14,0xC0(%rbp)
	addq $0xC0,%rbp
	leaq (L_172686+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_452367:
L_172678:
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x2F0(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x60(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x68(%rbp)
	movq %r14,0xC0(%rbp)
	addq $0xC0,%rbp
	leaq (L_172679+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_452369:
L_172770:
	movl $0x1,%ecx
	jmp L_172715
.p2align 0x4
L_452370:
L_172769:
	xorl %ecx,%ecx
	jmp L_172715
.p2align 0x4
L_452371:
L_172756:
	movl $0x1,%ecx
	jmp L_172715
.p2align 0x4
L_452374:
L_172759:
	movq 0x2F0(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x138(%rbp),%r15
	movq %r15,0x148(%rbp)
	addq $0x148,%rbp
	leaq (L_172760+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_452375:
L_172758:
	xorl %ecx,%ecx
	jmp L_172715
.p2align 0x4
L_452377:
L_172741:
	movq 0x318(%rbp),%r15
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r11
	movq 0x0(%r11),%r10
	movq 0x8(%r11),%r9
	movq 0x0(%r9),%r8
	cmpq $0x1,%r8
	je L_452378
L_172742:
	movq %r13,0x308(%rbp)
	movq 0x0(%r8),%r15
	movq %r15,0x300(%rbp)
	addq $0x300,%rbp
	leaq (L_172743+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_452378:
L_172750:
	movq %r10,0x28(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_172751+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_452383:
L_172773:
	movq 0x0(%r10),%r10
	movq %r10,%r14
	jmp L_172660
.p2align 0x4
L_452384:
L_172658:
	movq 0x0(%r15),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r14
	shrq $0x1,%r14
	cmpq $0xEA9,%r14
	je L_452385
L_172771:
	movq 0x10(%r10),%r10
	movq %r10,%r14
	jmp L_172660
.p2align 0x4
L_452385:
L_172659:
	movq 0x0(%r10),%r10
	movq %r10,%r14
	jmp L_172660
.p2align 0x4
L_452387:
L_173380:
	movq 0x0(%r13),%r15
L_173381:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_172504
L_173382:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0x1412,%r14
	jne L_172504
L_173383:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	jne L_172504
L_173384:
	movq 0x28(%rbp),%r13
	movq %r13,%r11
	andq $0xFF,%r11
	cmpq $0x39,%r11
	je L_173388
	cmpq $0x3A,%r11
	je L_452389
L_173385:
	andq $0x3,%r13
	jnz L_172504
L_173386:
	jmp L_172504
.p2align 0x4
L_452389:
L_173388:
	movq 0x10(%r14),%r13
	cmpq %r13,0x10(%r15)
	je L_172756
	jmp L_172758
.p2align 0x4
L_452395:
L_173244:
	movq 0x0(%r13),%r15
L_173245:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_172504
L_173246:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0xE4A,%r13
	je L_452412
	cmpq $0xE4B,%r13
	je L_452408
	cmpq $0xE4C,%r13
	je L_452396
	jmp L_172504
.p2align 0x4
L_452396:
L_173277:
	movq 0x0(%r15),%r13
	movq %r13,0x78(%rbp)
L_173278:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_172504
L_173279:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r14
	shrq $0x1,%r14
	cmpq $0x1410,%r14
	je L_452404
	cmpq $0x1411,%r14
	je L_452398
L_173280:
	cmpq $0x1,%r15
	jne L_172504
intInfUnary_8:
	movq 0x78(%rbp),%r15
	movq %r15,0x338(%rbp)
	movq 0x328(%rbp),%r15
	movq %r15,0x340(%rbp)
	addq $0x338,%rbp
	leaq (L_173282+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1473
.p2align 0x4
L_452398:
L_173316:
	movq 0x0(%r13),%r11
L_173317:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_452403
L_173320:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	je L_452401
	cmpq $0xE4C,%r14
	je L_452399
	movq %r15,%r14
L_173318:
	cmpq $0x1,%r14
	je intInfUnary_8
	jmp L_172504
.p2align 0x4
L_452399:
L_173372:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r15
	je intInfUnary_8
L_173373:
	cmpq $0x1,0x8(%r15)
	jne L_172504
L_173374:
	movq 0xC8(%rbp),%r15
	movq %r15,0x108(%rbp)
	movq 0x328(%rbp),%r15
	movq %r15,0x110(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0x118(%rbp)
	movq %r14,0xC0(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x120(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq 0x100(%rbp),%r15
	movq 0xD0(%rbp),%r14
	movq %r14,0x100(%rbp)
	movq %r15,0xD0(%rbp)
	movq 0xD8(%rbp),%r15
	movq 0xF8(%rbp),%r14
	movq %r14,0xD8(%rbp)
	movq %r15,0xF8(%rbp)
	movq 0xF0(%rbp),%r15
	movq 0xE0(%rbp),%r14
	movq %r14,0xF0(%rbp)
	movq %r15,0xE0(%rbp)
	addq $0xC0,%rbp
	leaq (L_173375+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp intInfBinary_24
.p2align 0x4
L_452401:
L_173321:
	movq 0x0(%r11),%r14
	movq %r14,0x60(%rbp)
	cmpq $0x1,%r15
	je intInfUnary_8
L_173322:
	cmpq $0x1,0x8(%r15)
	jne L_172504
L_173323:
	movq 0x78(%rbp),%r15
	movq %r15,0x338(%rbp)
	movq 0x328(%rbp),%r15
	movq %r15,0x340(%rbp)
	addq $0x338,%rbp
	leaq (L_173324+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1473
.p2align 0x4
L_452403:
	movq %r15,%r14
	jmp L_173318
.p2align 0x4
L_452404:
L_173311:
	movq 0x0(%r13),%r14
	cmpq $0x1,%r15
	je intInfUnary_8
L_173312:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0x1410,%r15
	jne L_172504
L_173313:
	movq 0x0(%r11),%r15
	cmpq $0x1,%r13
	jne L_172504
L_173314:
	movq %r14,0x80(%rbp)
	movl $0x0,0x70(%rbp)
	movq 0x78(%rbp),%r14
	movq %r15,0x78(%rbp)
	movq %r14,%r15
	jmp varIntInf_3
.p2align 0x4
L_452408:
L_173272:
	movq 0x0(%r15),%r13
L_173273:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_172504
L_173274:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r11
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0x1410,%r14
	jne L_172504
L_173275:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r15
	jne L_172504
L_173276:
	movq %r13,0x78(%rbp)
	movq %r14,0x80(%rbp)
	movl $0x0,0x70(%rbp)
	jmp varReal_3
.p2align 0x4
L_452412:
L_173247:
	movq 0x0(%r15),%r13
L_173248:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_172504
L_173249:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r11
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0x1410,%r14
	jne L_172504
L_173250:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r15
	jne L_172504
L_173251:
	movq 0x28(%rbp),%r15
	movq %r15,%r11
	andq $0xFF,%r11
	cmpq $0x9,%r11
	je L_452433
	cmpq $0x15,%r11
	je L_452432
L_173252:
	movq %r15,%r11
	andq $0x3,%r11
	jnz L_172504
L_173253:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%rax
	shrq $0x1,%rax
	subq $0x1211,%rax
	cmpq $0x16,%rax
	ja L_172504
	leaq jumpTable_589(%rip),%rbx
	jmp *(%rbx,%rax,8)
.data
.p2align 0x4
jumpTable_589:
.quad L_452430,L_452429,L_452428,L_452427,L_452426,L_452425,L_172504,L_452423,L_452422,L_452421,L_172504,L_172504,L_172504,L_452420,L_452419,L_452418,L_452417,L_172504,L_172504,L_172504,L_452416,L_452415,L_452414
.text
.p2align 0x4
L_452414:
L_173269:
	movq %r13,%r15
	jmp L_173112
.p2align 0x4
L_452415:
L_173268:
	movq %r13,%r15
	jmp L_173108
.p2align 0x4
L_452416:
L_173267:
	movq %r14,0x68(%rbp)
	movq 0x28(%rbp),%r11
	movq 0x0(%r11),%r14
	movq %r13,%r15
	jmp L_173098
.p2align 0x4
L_452417:
L_173266:
	movq 0x28(%rbp),%r11
	movq 0x0(%r11),%r10
	xorl %ecx,%ecx
	movq %r14,%r15
	movq %r13,%r14
	movq %r10,%r13
	jmp shift_3
.p2align 0x4
L_452418:
L_173265:
	movq %r13,0x60(%rbp)
	movq 0x28(%rbp),%r15
	movl 0x0(%r15),%ebx
	xorl %ecx,%ecx
	jmp L_173055
.p2align 0x4
L_452419:
L_173264:
	movq %r14,0x78(%rbp)
	movq 0x28(%rbp),%r14
	movl 0x0(%r14),%ecx
	movq 0x8(%r14),%r11
	movq %r11,0x70(%rbp)
	movq %r13,%r15
	jmp L_173041
.p2align 0x4
L_452420:
L_173263:
	movq %r14,0x78(%rbp)
	movq 0x28(%rbp),%r14
	movl 0x0(%r14),%ecx
	movq 0x8(%r14),%r11
	movq %r11,0x70(%rbp)
	movq %r13,%r15
	jmp L_173027
.p2align 0x4
L_452421:
L_173262:
	movq %r13,0x68(%rbp)
	movq %r14,%r15
	jmp L_173014
.p2align 0x4
L_452422:
L_173261:
	movq %r14,0x70(%rbp)
	movq 0x28(%rbp),%r14
	movl 0x0(%r14),%ebx
	movq 0x8(%r14),%r11
	movq %r11,0x38(%rbp)
	xorl %ecx,%ecx
	movq %r13,%r15
	jmp L_173000
.p2align 0x4
L_452423:
L_173260:
	movq 0x28(%rbp),%r14
	movl 0x0(%r14),%ebx
	movq 0x8(%r14),%r11
	movq %r11,0x60(%rbp)
	xorl %ecx,%ecx
	movq %r13,%r15
	jmp L_172988
.p2align 0x4
L_452425:
L_173259:
	movq %r13,0x68(%rbp)
	movq %r14,0x70(%rbp)
	movq 0x28(%rbp),%r14
	movq 0x0(%r14),%r15
	xorl %ecx,%ecx
	jmp ro_3
.p2align 0x4
L_452426:
L_173258:
	movq %r13,0x68(%rbp)
	movq %r14,0x70(%rbp)
	movq 0x28(%rbp),%r14
	movq 0x0(%r14),%r15
	xorl %ecx,%ecx
	jmp ro_3
.p2align 0x4
L_452427:
L_173257:
	movq %r13,0x68(%rbp)
	movq 0x28(%rbp),%r13
	movl 0x0(%r13),%ecx
	movq 0x8(%r13),%r15
	movl $0x0,0x5C(%rbp)
	jmp L_172907
.p2align 0x4
L_452428:
L_173256:
	movq 0x28(%rbp),%r11
	movq 0x0(%r11),%r10
	xorl %ecx,%ecx
	movq %r14,%r15
	movq %r13,%r14
	movq %r10,%r13
	jmp L_172901
.p2align 0x4
L_452429:
L_173255:
	movq 0x28(%rbp),%r11
	movq 0x8(%r11),%r10
	xorl %ecx,%ecx
	movq %r14,%r15
	movq %r13,%r14
	movq %r10,%r13
	jmp L_172895
.p2align 0x4
L_452430:
L_173254:
	movq %r14,0x70(%rbp)
	movq 0x28(%rbp),%r14
	movq 0x0(%r14),%r11
	movq %r11,0x38(%rbp)
	movq %r13,%r15
	jmp L_172791
.p2align 0x4
L_452432:
L_173271:
	xorl %ecx,%ecx
	xchgq %r13,%r15
	jmp L_173120
.p2align 0x4
L_452433:
L_173270:
	xchgq %r13,%r15
	jmp L_173116
.p2align 0x4
.long 0x235F
L_172442:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq $0x1,0x28(%rbp)
	jmp L_172443
.p2align 0x4
.long 0x2360
L_172444:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_172445
L_172451:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_172452+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_172452
.p2align 0x4
.long 0x2361
L_172452:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_172445:
	movq 0xB0(%rbp),%r15
	movl 0x0(%r15),%r14d
	testl %r14d,%r14d
	jz L_452443
L_172446:
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_452442
L_172447:
	movl 0x0(%r15),%r14d
	movq 0x8(%r15),%r13
	movq $0x1D3F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r14d,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x4(%r15)
	movq $0x1D33,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x20,%r12
	movq 0x48(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x40(%rbp),%r15
	movq %r15,0x10(%r14)
	movq $0x1D39,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_452442:
L_172448:
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_452443:
L_172449:
	movq 0x20(%rbp),%r15
	movl 0x0(%r15),%r14d
	decl %r14d
	jo L_172355
L_172450:
	movl %r14d,0x0(%r15)
	movq 0x30(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x235A
L_172429:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_172430
L_172431:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_172432+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_172432
.p2align 0x4
.long 0x9BC
L_172432:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_172430:
	movq $0x1D33,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x10(%r15)
	movq $0x1D39,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x8(%r14)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x235A
L_172378:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_172379
L_172380:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_172381+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_172381
.p2align 0x4
.long 0x9BC
L_172381:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_172379:
	movq $0x1D3D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1D33,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x20,%r12
	movq 0x48(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x40(%rbp),%r15
	movq %r15,0x10(%r14)
	movq $0x1D39,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x2440
L_175908:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_175910
L_175917:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_175918+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_175918
.p2align 0x4
.long 0x2443
L_175918:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_175910:
	movq 0x68(%rbp),%r15
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_172343
L_175911:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xEAA,%r14
	jne L_172343
L_175912:
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq $0x17C3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	movq %r11,0x10(%r15)
	movq %r15,0xD0(%rbp)
	addq $0x20,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0xD8(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0xE0(%rbp)
	addq $0xC8,%rbp
	leaq (L_175913+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1792
.p2align 0x4
.long 0x2429
L_175695:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0xD0(%rbp),%r14
	movq %r14,0x28(%rbp)
	movq 0x58(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0xD0(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xC8(%rbp)
	addq $0xC8,%rbp
	leaq (L_175696+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1649
.p2align 0x4
.long 0x242C
L_175724:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movl 0xC8(%rbp),%r15d
	movl %r15d,0x70(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_175725
L_175757:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_175758+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_175758
.p2align 0x4
.long 0x2432
L_175758:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_175725:
	movl 0x70(%rbp),%r15d
	testl %r15d,%r15d
	jz L_175727
L_175732:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_175733
L_175755:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_175756+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_175756
.p2align 0x4
.long 0x2432
L_175756:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_175733:
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0x68(%rbp),%r15
	movq 0x0(%r15),%rsi
	movq 0x38(%rbp),%r15
	movq 0x0(%r15),%rdi
	xorq %rax,%rax
	call IntInf_equal
L_175734:
	testl %eax,%eax
	jz L_452455
L_175736:
	movl 0x4C(%rbp),%r15d
	incl %r15d
	cmpl $0x0,%r15d
	jl L_175753
L_175737:
	cmpl %r15d,0x48(%rbp)
	jl L_175753
L_175738:
	movl %r15d,0x38(%rbp)
loop_1765:
	movl 0x48(%rbp),%r15d
	cmpl %r15d,0x38(%rbp)
	jl L_452452
L_175739:
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_452451
L_175740:
	movq 0xA0(%rbp),%r14
	movq 0x8(%r14),%r13
	movq $0x34CB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	movq %r14,0xE0(%rbp)
	movq %r14,0xF0(%rbp)
	addq $0x10,%r12
	movq %r15,0xC8(%rbp)
	movq $0x1,0xD0(%rbp)
	movb $0x2,0xD8(%rbp)
	movq $0x1,0xE8(%rbp)
	movq $0x2,0xF8(%rbp)
	addq $0xC8,%rbp
	leaq (L_175741+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loopExp_0
.p2align 0x4
L_452451:
L_175743:
	movq 0x50(%rbp),%r15
	jmp expression_0
.p2align 0x4
L_452452:
L_175747:
	movslq 0x38(%rbp),%r15
	salq $0x4,%r15
	movq 0x20(%rbp),%r14
	movq 0x0(%r14,%r15,1),%r13
	movq %r13,0xC8(%rbp)
	movq 0xA0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq $0x34CB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0xE0(%rbp)
	movq %r15,0xF0(%rbp)
	addq $0x10,%r12
	movq $0x1,0xD0(%rbp)
	movb $0x2,0xD8(%rbp)
	movq $0x1,0xE8(%rbp)
	movq $0x2,0xF8(%rbp)
	addq $0xC8,%rbp
	leaq (L_175748+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loopExp_0
.p2align 0x4
L_452455:
L_175727:
	movq 0xA0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq $0x34CB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0xE0(%rbp)
	movq %r15,0xF0(%rbp)
	addq $0x10,%r12
	movq 0x50(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq $0x1,0xD0(%rbp)
	movb $0x2,0xD8(%rbp)
	movq $0x1,0xE8(%rbp)
	movq $0x2,0xF8(%rbp)
	addq $0xC8,%rbp
	leaq (L_175728+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loopExp_0
.p2align 0x4
.long 0x2436
L_175796:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_175798
L_175822:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_175823+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_175823
.p2align 0x4
.long 0x243B
L_175823:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_175798:
	movq 0x68(%rbp),%r15
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_172343
L_175799:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xEAA,%r14
	jne L_172343
L_175800:
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq $0x17C3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	movq %r11,0x10(%r15)
	movq %r15,0xD0(%rbp)
	addq $0x20,%r12
	movq 0x48(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0xD8(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0xE0(%rbp)
	addq $0xC8,%rbp
	leaq (L_175801+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1792
.p2align 0x4
.long 0x2434
L_175789:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_175790
L_175791:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_175792+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_175792
.p2align 0x4
.long 0x2435
L_175792:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_175790:
	incl 0x54(%rbp)
	jmp loop_1766
.p2align 0x4
.long 0x242E
L_175855:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_175857
L_175858:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_175859+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_175859
.p2align 0x4
.long 0x242F
L_175859:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	jmp L_175857
.p2align 0x4
.long 0x2430
L_175862:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_175863
L_175864:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_175865+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_175865
.p2align 0x4
.long 0x2431
L_175865:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_175863:
	incl 0x38(%rbp)
	jmp loop_1769
.p2align 0x4
.long 0x2428
L_175844:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_175845
L_175846:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_175847+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_175847
.p2align 0x4
.long 0x242D
L_175847:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_175845:
	incl 0x4C(%rbp)
	jmp loop_1768
.p2align 0x4
.long 0x2330
L_175666:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_175668
L_175669:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_175670+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_175670
.p2align 0x4
.long 0x2426
L_175670:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	jmp L_175668
.p2align 0x4
.long 0x23BE
L_173423:
	addq $0xFFFFFFFFFFFFFCC8,%rbp
	movl 0x338(%rbp),%r15d
	movl %r15d,0x5C(%rbp)
	testl %r15d,%r15d
	jnz L_172504
L_173424:
	movq 0x28(%rbp),%r15
	movq %r15,%r14
	andq $0xFF,%r14
	cmpq $0x27,%r14
	je L_452473
	cmpq $0x29,%r14
	je L_452468
L_173425:
	andq $0x3,%r15
	jnz L_172504
L_173426:
	jmp L_172504
.p2align 0x4
L_452468:
L_173443:
	movq 0x60(%rbp),%r14
	movq %r14,%r13
	andq $0x1,%r13
	jz L_452469
L_173444:
	notq %r14
	orq $0x1,%r14
	movq %r14,0x60(%rbp)
intInf_16:
	movq 0x60(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq 0x328(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC0,%rbp
	leaq (L_173445+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1473
.p2align 0x4
L_452469:
L_173451:
	movq 0xFFFFFFFFFFFFFFF0(%r14),%rsi
	decq %rsi
	jo L_172504
L_173452:
	movq 0x108(%rbp),%r14
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r11
	imulq %r11,%rsi
	addq $0x7,%r13
	addq %r11,%r13
	addq %r13,%rsi
	movq %rsi,%r14
	movq %rsi,0x68(%rbp)
	addq $0x0,%r14
	jc L_173304
L_173453:
	movq (gcState+0x458)(%rip),%r13
	subq %r12,%r13
	cmpq %r14,%r13
	jnb L_173454
L_173456:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r13d
	movl %r13d,%edx
	movq %r14,%rsi
	leaq gcState(%rip),%r14
	movq %r14,%rdi
	xorq %rax,%rax
	addq $0x338,%rbp
	leaq (L_173457+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_173457
.p2align 0x4
.long 0x23BF
L_173457:
	addq $0xFFFFFFFFFFFFFCC8,%rbp
L_173454:
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0x68(%rbp),%rsi
	movq 0x60(%rbp),%rdi
	xorq %rax,%rax
	movq %r12,(gcState+0x0)(%rip)
	call IntInf_notb
L_173455:
	movq %rax,0x60(%rbp)
	movq (gcState+0x0)(%rip),%r12
	jmp intInf_16
.p2align 0x4
L_452473:
L_173427:
	leaq L_173435(%rip),%r14
	movq %r14,0x10(%rbp)
	movq %rbp,%r14
	addq $0x18,%r14
	subq (gcState+0x560)(%rip),%r14
	movq %r14,(gcState+0x20)(%rip)
	movq 0x60(%rbp),%r14
	movq %r14,0x338(%rbp)
	movq 0x80(%rbp),%r14
	movq %r14,0x340(%rbp)
	addq $0x338,%rbp
	leaq (L_173428+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigNeg_0
.p2align 0x4
.long 0x2369
L_172505:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movb 0xC0(%rbp),%r15b
	movb %r15b,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_172506
L_172552:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_172553+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_172553
.p2align 0x4
.long 0x236C
L_172553:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_172506:
	movb 0x50(%rbp),%r15b
	testb %r15b,%r15b
	jz L_452482
L_172507:
	movq 0xB0(%rbp),%r15
	movl 0x0(%r15),%r14d
	testl %r14d,%r14d
	jz L_452475
L_172508:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x30(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC0,%rbp
	leaq (L_172509+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp shrinkDecs_0
.p2align 0x4
L_452475:
L_172531:
	movq 0x38(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%ecx
	movslq %ecx,%r13
	cmpq %r14,%r13
	jne L_172364
L_172533:
	cmpl $0x0,%ecx
	jl L_172393
L_172534:
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_1748:
	cmpl %ecx,%ebx
	jnl L_452478
L_172539:
	movslq %ebx,%r15
	movq 0x38(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xEA9,%r15
	je L_172541
L_172542:
	movq 0x0(%r13),%r15
	movl 0x0(%r15),%r14d
	decl %r14d
	jo L_172355
L_172543:
	movl %r14d,0x0(%r15)
L_172541:
	incl %ebx
	jmp loop_1748
.p2align 0x4
L_452478:
L_172535:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_172536
L_172537:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_172538+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_172538
.p2align 0x4
.long 0x1DA4
L_172538:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_172536:
	movq 0x30(%rbp),%r15
	jmp loop_1740
.p2align 0x4
L_452482:
L_172545:
	movq 0x38(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_172364
L_172547:
	movl %r13d,0x60(%rbp)
	movq $0x39DD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq %r14,0x58(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x58,%rbp
	leaq (L_172548+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_35
.p2align 0x4
.long 0x236D
L_173514:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x60(%rbp)
L_173377:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_172504
L_173378:
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	jmp L_172626
.p2align 0x4
.long 0x25
L_173435:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	cmpq $0x1,%r15
	je L_172504
	cmpq $0x3,%r15
	je L_172504
	cmpq $0x6,%r15
	je L_172504
	cmpq $0x7,%r15
	je L_172504
L_173436:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_173437
L_173438:
L_173437:
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x23C0
L_173463:
	addq $0xFFFFFFFFFFFFFCC8,%rbp
	movl 0x338(%rbp),%r15d
	movl %r15d,0x5C(%rbp)
	testl %r15d,%r15d
	jnz L_172504
L_173464:
	movq 0x28(%rbp),%r15
	movq %r15,%r14
	andq $0xFF,%r14
	cmpq $0x1F,%r14
	je L_452494
	cmpq $0x25,%r14
	je L_452493
	cmpq $0x2F,%r14
	je L_452492
L_173465:
	andq $0x3,%r15
	jnz L_172504
L_173466:
	jmp L_172504
.p2align 0x4
L_452492:
L_173494:
	movq 0x68(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x130(%rbp)
	leaq L_173435(%rip),%r14
	movq %r14,0x10(%rbp)
	movq %rbp,%r14
	addq $0x18,%r14
	subq (gcState+0x560)(%rip),%r14
	movq %r14,(gcState+0x20)(%rip)
	addq $0x130,%rbp
	leaq (L_173495+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_452493:
L_173476:
	movq 0xA8(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x78(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x80(%rbp)
	movq 0x128(%rbp),%r14
	movq %r14,0x338(%rbp)
	addq $0x338,%rbp
	leaq (L_173477+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_452494:
L_173467:
	movq 0x68(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x338(%rbp)
	addq $0x338,%rbp
	leaq (L_173468+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x236D
L_174435:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_174436
L_174439:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_174440+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_174440
.p2align 0x4
.long 0x23B0
L_174440:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_174436:
	movq 0x60(%rbp),%r15
	cmpq $0x1,%r15
	je L_172504
L_174437:
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq %r14,0x20(%rbp)
	jmp L_172626
.p2align 0x4
.long 0x23CE
L_174394:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movl 0xC0(%rbp),%r15d
	movl %r15d,0x5C(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_174395
L_174408:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_174409+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_174409
.p2align 0x4
.long 0x2401
L_174409:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_174395:
	movl 0x5C(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_452498
L_174396:
	leaq L_173435(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x18F8)(%rip),%r15
	movq %r15,0xC0(%rbp)
	addq $0xC0,%rbp
	leaq (bug_462+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_452498:
L_174400:
	movq 0x60(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x68(%rbp),%r15
	movq 0x0(%r15),%r13
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r15,0xC0(%rbp)
	addq $0x18,%r12
	leaq L_173435(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x78(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC0,%rbp
	leaq (L_174401+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1183
.p2align 0x4
.long 0x23C9
L_174360:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movl 0x5C(%rbp),%ecx
	movq 0x60(%rbp),%r14
	movq %r15,0x60(%rbp)
	movq %r14,0x68(%rbp)
wordOrOverflow_3:
	movl %ecx,0xC0(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0xD0(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0xD8(%rbp)
	addq $0xC0,%rbp
	leaq (L_173562+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp isInRange_0
.p2align 0x4
.long 0x23FE
L_174362:
	addq $0xFFFFFFFFFFFFFE28,%rbp
	movq 0x1D8(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0xD0(%rbp)
	movq 0x1C8(%rbp),%r15
	movq %r15,0xD8(%rbp)
	addq $0xD0,%rbp
	leaq (L_174363+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toIntInfX_0
.p2align 0x4
.long 0x236D
word_52:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_174328
L_174329:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_174330+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_174330
.p2align 0x4
.long 0x23C8
L_174330:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_174328:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x20(%rbp)
	addq $0x10,%r12
	jmp L_172626
.p2align 0x4
.long 0x236D
realOpt_54:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_174295
L_174298:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_174299+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_174299
.p2align 0x4
.long 0x23B0
L_174299:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_174295:
	movq 0x60(%rbp),%r15
	cmpq $0x1,%r15
	je L_172504
L_174296:
	movq 0x0(%r15),%r14
	movq $0x1C97,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x20(%rbp)
	addq $0x10,%r12
	jmp L_172626
.p2align 0x4
.long 0x23FD
L_174264:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movl 0xC0(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	testl %r15d,%r15d
	jz L_172758
L_174266:
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0x68(%rbp),%r15
	movq 0x0(%r15),%rsi
	movq 0x60(%rbp),%r15
	movq 0x0(%r15),%rdi
	xorq %rax,%rax
	call IntInf_equal
L_174267:
	movl %eax,%ecx
	jmp L_172715
.p2align 0x4
.long 0x2388
L_174228:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movl 0xC0(%rbp),%r15d
	movl %r15d,0x5C(%rbp)
	leaq L_173435(%rip),%r14
	movq %r14,0x10(%rbp)
	movq %rbp,%r14
	addq $0x18,%r14
	subq (gcState+0x560)(%rip),%r14
	movq %r14,(gcState+0x20)(%rip)
	movl %r15d,0xC0(%rbp)
	movq $0x3,0xC8(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (L_174229+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x238D
L_174234:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x68(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xC0,%rbp
	leaq (L_174235+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x236D
word_50:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_174202
L_174203:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_174204+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_174204
.p2align 0x4
.long 0x23C8
L_174204:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_174202:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x20(%rbp)
	addq $0x10,%r12
	jmp L_172626
.p2align 0x4
.long 0x23E4
L_174174:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movl 0xC0(%rbp),%ecx
	movl %ecx,0x5C(%rbp)
	jmp L_172715
.p2align 0x4
.long 0x23F4
L_174126:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movl 0xC0(%rbp),%r15d
	movl %r15d,0x90(%rbp)
	testl %r15d,%r15d
	jnz L_452505
L_174127:
	leaq L_173435(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x1968)(%rip),%r15
	movq %r15,0xC0(%rbp)
	addq $0xC0,%rbp
	leaq (bug_461+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_452505:
L_174131:
	movl 0x5C(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_452506
L_174132:
	movq 0x60(%rbp),%r14
	movq 0x0(%r14),%r15
L_174133:
	movq 0x68(%rbp),%r13
	movq 0x0(%r13),%r11
	movq %r15,%r14
	movq %r11,%r15
L_174134:
	movq %r15,0xC0(%rbp)
	movq %r14,0xC8(%rbp)
	leaq L_173435(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x78(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (L_174135+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1182
.p2align 0x4
L_452506:
L_174142:
	leaq L_173435(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x60(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC0,%rbp
	leaq (L_174143+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toIntInfX_0
.p2align 0x4
.long 0x23C9
L_174095:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movl 0x5C(%rbp),%ecx
	movq 0x60(%rbp),%r14
	movq %r15,0x60(%rbp)
	movq %r14,0x68(%rbp)
	jmp wordOrOverflow_3
.p2align 0x4
.long 0x23F2
L_174097:
	addq $0xFFFFFFFFFFFFFE28,%rbp
	movq 0x1D8(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x108(%rbp)
	movq 0x1C8(%rbp),%r15
	movq %r15,0x110(%rbp)
	addq $0x108,%rbp
	leaq (L_174098+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toIntInfX_0
.p2align 0x4
.long 0x23ED
L_174058:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq %r15,0xC0(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC0,%rbp
	leaq (L_174059+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigNeg_0
.p2align 0x4
.long 0x23EC
L_174034:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq %r15,0xC0(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC0,%rbp
	leaq (L_174035+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigNeg_0
.p2align 0x4
.long 0x23E8
L_173999:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movl 0xC0(%rbp),%r15d
	movl %r15d,0x5C(%rbp)
	leaq L_173435(%rip),%r14
	movq %r14,0x10(%rbp)
	movq %rbp,%r14
	addq $0x18,%r14
	subq (gcState+0x560)(%rip),%r14
	movq %r14,(gcState+0x20)(%rip)
	movl %r15d,0xC0(%rbp)
	movq $0x3,0xC8(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (L_174000+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x236D
word_49:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_173972
L_173973:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_173974+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_173974
.p2align 0x4
.long 0x23C8
L_173974:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_173972:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x20(%rbp)
	addq $0x10,%r12
	jmp L_172626
.p2align 0x4
.long 0x23A3
L_173924:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movl 0xC0(%rbp),%r15d
	movl %r15d,0x98(%rbp)
	testl %r15d,%r15d
	jnz L_452508
L_173925:
	leaq L_173435(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x1978)(%rip),%r15
	movq %r15,0xC0(%rbp)
	addq $0xC0,%rbp
	leaq (bug_460+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_452508:
L_173929:
	movl 0x5C(%rbp),%r13d
	testl %r13d,%r13d
	jnz L_452509
L_173930:
	movq 0x60(%rbp),%r13
	movq 0x0(%r13),%r14
	movq 0x70(%rbp),%r15
L_173931:
	movq %r15,0xC0(%rbp)
	movq %r14,0xC8(%rbp)
	leaq L_173435(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x80(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (L_173932+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigQuot_0
.p2align 0x4
L_452509:
L_173939:
	leaq L_173435(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x60(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC0,%rbp
	leaq (L_173940+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toIntInfX_0
.p2align 0x4
.long 0x23A3
L_173875:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movl 0xC0(%rbp),%r15d
	movl %r15d,0x98(%rbp)
	testl %r15d,%r15d
	jnz L_452510
L_173876:
	leaq L_173435(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x1988)(%rip),%r15
	movq %r15,0xC0(%rbp)
	addq $0xC0,%rbp
	leaq (bug_459+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_452510:
L_173880:
	movl 0x5C(%rbp),%r13d
	testl %r13d,%r13d
	jnz L_452511
L_173881:
	movq 0x60(%rbp),%r13
	movq 0x0(%r13),%r14
	movq 0x70(%rbp),%r15
L_173882:
	movq %r15,0xC0(%rbp)
	movq %r14,0xC8(%rbp)
	leaq L_173435(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x80(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (L_173883+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigRem_0
.p2align 0x4
L_452511:
L_173890:
	leaq L_173435(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x60(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC0,%rbp
	leaq (L_173891+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toIntInfX_0
.p2align 0x4
.long 0x23DA
L_173759:
	addq $0xFFFFFFFFFFFFFE08,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x1F8(%rbp)
	movq 0x1E0(%rbp),%r15
	movq %r15,0x200(%rbp)
	addq $0x1F8,%rbp
	leaq (L_173760+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromIntInf_0
.p2align 0x4
.long 0x25
L_173778:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_173779+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call IEEEReal_getRoundingMode
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_173779
.p2align 0x4
.long 0x23DD
L_173779:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	testl %eax,%eax
	jz L_452516
L_173780:
	cmpl $0x1,%eax
	je L_452515
L_173781:
	cmpl $0x2,%eax
	je L_452514
L_173782:
	cmpl $0x3,%eax
	jne L_173756
L_173784:
	xorb %dl,%dl
L_173785:
	movb 0x5C(%rbp),%r15b
	cmpb %dl,%r15b
	je L_172504
L_173786:
	leaq L_173435(%rip),%r14
	movq %r14,0x10(%rbp)
	movb %r15b,0xC0(%rbp)
	addq $0xC0,%rbp
	leaq (L_173787+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp setRoundingMode_0
.p2align 0x4
L_452514:
L_173789:
	movb $0x1,%dl
	jmp L_173785
.p2align 0x4
L_452515:
L_173790:
	movb $0x2,%dl
	jmp L_173785
.p2align 0x4
L_452516:
L_173791:
	movb $0x3,%dl
	jmp L_173785
.p2align 0x4
.long 0x23DF
L_173806:
	addq $0xFFFFFFFFFFFFFE18,%rbp
	leaq L_173839(%rip),%r15
	movq %r15,0x10(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x1E8(%rbp)
	movq 0x1D0(%rbp),%r15
	movq %r15,0x1F0(%rbp)
	addq $0x1E8,%rbp
	leaq (L_173807+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromIntInf_1
.p2align 0x4
.long 0x25
L_173825:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_173826:
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_173827+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call IEEEReal_getRoundingMode
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_173827
.p2align 0x4
.long 0x23DD
L_173827:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	testl %eax,%eax
	jz L_452521
L_173828:
	cmpl $0x1,%eax
	je L_452520
L_173829:
	cmpl $0x2,%eax
	je L_452519
L_173830:
	cmpl $0x3,%eax
	jne L_173756
L_173832:
	xorb %dl,%dl
L_173833:
	movb 0x5C(%rbp),%r15b
	cmpb %dl,%r15b
	je L_172504
L_173834:
	leaq L_173435(%rip),%r14
	movq %r14,0x10(%rbp)
	movb %r15b,0xC0(%rbp)
	addq $0xC0,%rbp
	leaq (L_173787+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp setRoundingMode_0
.p2align 0x4
L_452519:
L_173836:
	movb $0x1,%dl
	jmp L_173833
.p2align 0x4
L_452520:
L_173837:
	movb $0x2,%dl
	jmp L_173833
.p2align 0x4
L_452521:
L_173838:
	movb $0x3,%dl
	jmp L_173833
.p2align 0x4
.long 0x23E2
L_173844:
	addq $0xFFFFFFFFFFFFFE08,%rbp
	movq 0x1F8(%rbp),%r15
	movq %r15,0x60(%rbp)
	movb 0x5C(%rbp),%r15b
	testb %r15b,%r15b
	jnz L_173796
	jmp L_173748
.p2align 0x4
.long 0x23D5
L_173711:
	addq $0xFFFFFFFFFFFFFDE8,%rbp
	movq 0x218(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq %r15,0x218(%rbp)
	addq $0x218,%rbp
	leaq (L_173712+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x23D5
L_173671:
	addq $0xFFFFFFFFFFFFFDE8,%rbp
	movq 0x218(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq %r15,0x218(%rbp)
	addq $0x218,%rbp
	leaq (L_173672+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x236D
word_48:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_173641
L_173642:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_173643+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_173643
.p2align 0x4
.long 0x23C8
L_173643:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_173641:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x20(%rbp)
	addq $0x10,%r12
	jmp L_172626
.p2align 0x4
.long 0x23CE
L_173601:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movl 0xC0(%rbp),%r15d
	movl %r15d,0x5C(%rbp)
	testl %r15d,%r15d
	jnz L_452524
L_173602:
	leaq L_173435(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x1908)(%rip),%r15
	movq %r15,0xC0(%rbp)
	addq $0xC0,%rbp
	leaq (bug_458+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_452524:
L_173606:
	movq 0x60(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0xC8(%rbp)
	movq 0x68(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0xC0(%rbp)
	leaq L_173435(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x78(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (L_173607+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x23C9
L_173561:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movl 0x5C(%rbp),%ecx
	movq 0x60(%rbp),%r14
	movq %r15,0x60(%rbp)
	movq %r14,0x68(%rbp)
	jmp wordOrOverflow_3
.p2align 0x4
.long 0x23CC
L_173572:
	addq $0xFFFFFFFFFFFFFE28,%rbp
	movq 0x1D8(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0xF8(%rbp)
	movq 0x1C8(%rbp),%r15
	movq %r15,0x100(%rbp)
	addq $0xF8,%rbp
	leaq (L_173573+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toIntInfX_0
.p2align 0x4
.long 0x236D
word_47:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_173529
L_173530:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_173531+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_173531
.p2align 0x4
.long 0x23C8
L_173531:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_173529:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x20(%rbp)
	addq $0x10,%r12
	jmp L_172626
.p2align 0x4
.long 0x236D
realOpt_71:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_175465
L_175468:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_175469+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_175469
.p2align 0x4
.long 0x23B0
L_175469:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_175465:
	movq 0x60(%rbp),%r15
	cmpq $0x1,%r15
	je L_172504
L_175466:
	movq 0x0(%r15),%r14
	movq $0x1C97,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x20(%rbp)
	addq $0x10,%r12
	jmp L_172626
.p2align 0x4
.long 0x2375
L_172720:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_172721
L_172730:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_172731+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_172731
.p2align 0x4
.long 0x236C
L_172731:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_172721:
	movq $0x281F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq $0x1,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xB0(%rbp),%r14
	movl 0x0(%r14),%r13d
	testl %r13d,%r13d
	jz L_452528
L_172722:
	movq 0x38(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	movq 0x30(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC0,%rbp
	leaq (L_172723+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp shrinkDecs_0
.p2align 0x4
L_452528:
L_172729:
	movq 0x30(%rbp),%r15
	jmp loop_1740
.p2align 0x4
.long 0x236E
L_172631:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_172632
L_172635:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_172636+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_172636
.p2align 0x4
.long 0x236F
L_172636:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_172632:
	movq 0xB0(%rbp),%r15
	movl 0x0(%r15),%r14d
	testl %r14d,%r14d
	jz L_452530
L_172633:
	movq $0x1D4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1D33,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x20,%r12
	movq 0x48(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x40(%rbp),%r15
	movq %r15,0x10(%r14)
	movq $0x1D39,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_452530:
L_172634:
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x236D
realOpt_70:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_175371
L_175374:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_175375+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_175375
.p2align 0x4
.long 0x23B0
L_175375:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_175371:
	movq 0x60(%rbp),%r15
	cmpq $0x1,%r15
	je L_172504
L_175372:
	movq 0x0(%r15),%r14
	movq $0x1C97,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x20(%rbp)
	addq $0x10,%r12
	jmp L_172626
.p2align 0x4
.long 0x236D
realOpt_69:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_175334
L_175337:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_175338+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_175338
.p2align 0x4
.long 0x23B0
L_175338:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_175334:
	movq 0x60(%rbp),%r15
	cmpq $0x1,%r15
	je L_172504
L_175335:
	movq 0x0(%r15),%r14
	movq $0x1C97,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x20(%rbp)
	addq $0x10,%r12
	jmp L_172626
.p2align 0x4
.long 0x236D
realOpt_68:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_175297
L_175300:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_175301+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_175301
.p2align 0x4
.long 0x23B0
L_175301:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_175297:
	movq 0x60(%rbp),%r15
	cmpq $0x1,%r15
	je L_172504
L_175298:
	movq 0x0(%r15),%r14
	movq $0x1C97,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x20(%rbp)
	addq $0x10,%r12
	jmp L_172626
.p2align 0x4
.long 0x236D
realOpt_67:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_175157
L_175160:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_175161+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_175161
.p2align 0x4
.long 0x23B0
L_175161:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_175157:
	movq 0x60(%rbp),%r15
	cmpq $0x1,%r15
	je L_172504
L_175158:
	movq 0x0(%r15),%r14
	movq $0x1C97,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x20(%rbp)
	addq $0x10,%r12
	jmp L_172626
.p2align 0x4
.long 0x236D
realOpt_66:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_175125
L_175128:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_175129+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_175129
.p2align 0x4
.long 0x23B0
L_175129:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_175125:
	movq 0x60(%rbp),%r15
	cmpq $0x1,%r15
	je L_172504
L_175126:
	movq 0x0(%r15),%r14
	movq $0x1C97,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x20(%rbp)
	addq $0x10,%r12
	jmp L_172626
.p2align 0x4
.long 0x236D
realOpt_65:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_175067
L_175070:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_175071+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_175071
.p2align 0x4
.long 0x23B0
L_175071:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_175067:
	movq 0x60(%rbp),%r15
	cmpq $0x1,%r15
	je L_172504
L_175068:
	movq 0x0(%r15),%r14
	movq $0x1C97,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x20(%rbp)
	addq $0x10,%r12
	jmp L_172626
.p2align 0x4
.long 0x236D
realOpt_64:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_175040
L_175043:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_175044+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_175044
.p2align 0x4
.long 0x23B0
L_175044:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_175040:
	movq 0x60(%rbp),%r15
	cmpq $0x1,%r15
	je L_172504
L_175041:
	movq 0x0(%r15),%r14
	movq $0x1C97,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x20(%rbp)
	addq $0x10,%r12
	jmp L_172626
.p2align 0x4
.long 0x236D
realOpt_63:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_175013
L_175016:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_175017+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_175017
.p2align 0x4
.long 0x23B0
L_175017:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_175013:
	movq 0x60(%rbp),%r15
	cmpq $0x1,%r15
	je L_172504
L_175014:
	movq 0x0(%r15),%r14
	movq $0x1C97,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x20(%rbp)
	addq $0x10,%r12
	jmp L_172626
.p2align 0x4
.long 0x236D
realOpt_62:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_174986
L_174989:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_174990+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_174990
.p2align 0x4
.long 0x23B0
L_174990:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_174986:
	movq 0x60(%rbp),%r15
	cmpq $0x1,%r15
	je L_172504
L_174987:
	movq 0x0(%r15),%r14
	movq $0x1C97,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x20(%rbp)
	addq $0x10,%r12
	jmp L_172626
.p2align 0x4
.long 0x236D
realOpt_61:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_174959
L_174962:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_174963+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_174963
.p2align 0x4
.long 0x23B0
L_174963:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_174959:
	movq 0x60(%rbp),%r15
	cmpq $0x1,%r15
	je L_172504
L_174960:
	movq 0x0(%r15),%r14
	movq $0x1C97,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x20(%rbp)
	addq $0x10,%r12
	jmp L_172626
.p2align 0x4
.long 0x236D
realOpt_60:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_174932
L_174935:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_174936+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_174936
.p2align 0x4
.long 0x23B0
L_174936:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_174932:
	movq 0x60(%rbp),%r15
	cmpq $0x1,%r15
	je L_172504
L_174933:
	movq 0x0(%r15),%r14
	movq $0x1C97,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x20(%rbp)
	addq $0x10,%r12
	jmp L_172626
.p2align 0x4
.long 0x236D
realOpt_59:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_174905
L_174908:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_174909+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_174909
.p2align 0x4
.long 0x23B0
L_174909:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_174905:
	movq 0x60(%rbp),%r15
	cmpq $0x1,%r15
	je L_172504
L_174906:
	movq 0x0(%r15),%r14
	movq $0x1C97,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x20(%rbp)
	addq $0x10,%r12
	jmp L_172626
.p2align 0x4
.long 0x236D
realOpt_58:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_174878
L_174881:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_174882+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_174882
.p2align 0x4
.long 0x23B0
L_174882:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_174878:
	movq 0x60(%rbp),%r15
	cmpq $0x1,%r15
	je L_172504
L_174879:
	movq 0x0(%r15),%r14
	movq $0x1C97,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x20(%rbp)
	addq $0x10,%r12
	jmp L_172626
.p2align 0x4
.long 0x236D
realOpt_57:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_174846
L_174849:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_174850+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_174850
.p2align 0x4
.long 0x23B0
L_174850:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_174846:
	movq 0x60(%rbp),%r15
	cmpq $0x1,%r15
	je L_172504
L_174847:
	movq 0x0(%r15),%r14
	movq $0x1C97,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x20(%rbp)
	addq $0x10,%r12
	jmp L_172626
.p2align 0x4
.long 0x236D
realOpt_56:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_174819
L_174822:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_174823+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_174823
.p2align 0x4
.long 0x23B0
L_174823:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_174819:
	movq 0x60(%rbp),%r15
	cmpq $0x1,%r15
	je L_172504
L_174820:
	movq 0x0(%r15),%r14
	movq $0x1C97,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x20(%rbp)
	addq $0x10,%r12
	jmp L_172626
.p2align 0x4
.long 0x236D
realOpt_55:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_174792
L_174795:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_174796+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_174796
.p2align 0x4
.long 0x23B0
L_174796:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_174792:
	movq 0x60(%rbp),%r15
	cmpq $0x1,%r15
	je L_172504
L_174793:
	movq 0x0(%r15),%r14
	movq $0x1C97,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x20(%rbp)
	addq $0x10,%r12
	jmp L_172626
.p2align 0x4
.long 0x240B
L_174753:
	addq $0xFFFFFFFFFFFFFCC8,%rbp
	movl 0x338(%rbp),%r15d
	movl %r15d,0x5C(%rbp)
	leaq L_173435(%rip),%r14
	movq %r14,0x10(%rbp)
	movq %rbp,%r14
	addq $0x18,%r14
	subq (gcState+0x560)(%rip),%r14
	movq %r14,(gcState+0x20)(%rip)
	movl %r15d,0x338(%rbp)
	movq $0x3,0x340(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x348(%rbp)
	addq $0x338,%rbp
	leaq (L_174754+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x2377
L_174725:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movl 0xC0(%rbp),%r15d
	movl %r15d,0x5C(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_174726
L_174729:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_174730+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_174730
.p2align 0x4
.long 0x23B0
L_174730:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_174726:
	movslq 0x5C(%rbp),%r15
	movq 0x60(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_172504
L_174728:
	movq 0x0(%r14,%r15,8),%r13
	movq $0x1C95,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r15,0x20(%rbp)
	addq $0x10,%r12
	jmp L_172626
.p2align 0x4
.long 0x2409
L_174686:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0xA8(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x70(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x78(%rbp)
	movq %r15,0xC0(%rbp)
	addq $0xC0,%rbp
	leaq (L_174687+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x23CF
L_174694:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0xC0(%rbp)
	movq %r15,0xC8(%rbp)
	addq $0xC0,%rbp
	leaq (bug_464+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x2408
L_174657:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movl 0xC0(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	testl %r15d,%r15d
	jz L_172758
L_174659:
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0x60(%rbp),%r15
	movq 0x0(%r15),%rsi
	movq 0x20(%rbp),%r15
	movq 0x0(%r15),%rdi
	xorq %rax,%rax
	call IntInf_equal
L_174660:
	movl %eax,%ecx
	jmp L_172715
.p2align 0x4
.long 0x2408
L_174619:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movl 0xC0(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	testl %r15d,%r15d
	jz L_172758
L_174621:
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0x20(%rbp),%r15
	movq 0x0(%r15),%rsi
	movq 0x60(%rbp),%r15
	movq 0x0(%r15),%rdi
	xorq %rax,%rax
	call IntInf_equal
L_174622:
	movl %eax,%ecx
	jmp L_172715
.p2align 0x4
.long 0x236D
L_174597:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_174598
L_174601:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_174602+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_174602
.p2align 0x4
.long 0x23B0
L_174602:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_174598:
	movq 0x60(%rbp),%r15
	cmpq $0x1,%r15
	je L_172504
L_174599:
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq %r14,0x20(%rbp)
	jmp L_172626
.p2align 0x4
.long 0x2405
L_174540:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
	movl 0x148(%rbp),%r15d
	movl %r15d,0x5C(%rbp)
	leaq L_173435(%rip),%r14
	movq %r14,0x10(%rbp)
	movq %rbp,%r14
	addq $0x18,%r14
	subq (gcState+0x560)(%rip),%r14
	movq %r14,(gcState+0x20)(%rip)
	movl %r15d,0x148(%rbp)
	movq $0x3,0x150(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x158(%rbp)
	addq $0x148,%rbp
	leaq (L_174541+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x2402
L_174503:
	addq $0xFFFFFFFFFFFFFD00,%rbp
	movq 0x300(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x2F0(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x68(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x70(%rbp)
	movq %r15,0xC0(%rbp)
	addq $0xC0,%rbp
	leaq (L_174504+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x23CF
L_174511:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0xC0(%rbp)
	movq %r15,0xC8(%rbp)
	addq $0xC0,%rbp
	leaq (bug_463+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x23AC
L_173181:
	addq $0xFFFFFFFFFFFFFCC8,%rbp
	movl 0x338(%rbp),%r15d
	movl %r15d,0x74(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_173182
L_173237:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x338,%rbp
	leaq (L_173238+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_173238
.p2align 0x4
.long 0x23AD
L_173238:
	addq $0xFFFFFFFFFFFFFCC8,%rbp
L_173182:
	movq 0x28(%rbp),%r15
	movq %r15,%r14
	andq $0xFF,%r14
	cmpq $0x1D,%r14
	je L_452603
	cmpq $0x1E,%r14
	je L_452600
	cmpq $0x1F,%r14
	je L_452597
	cmpq $0x23,%r14
	je L_452594
	cmpq $0x25,%r14
	je L_452592
	cmpq $0x26,%r14
	je L_452588
	cmpq $0x2A,%r14
	je L_452585
	cmpq $0x2B,%r14
	je L_452581
	cmpq $0x2D,%r14
	je L_452577
	cmpq $0x2E,%r14
	je L_452574
	cmpq $0x33,%r14
	je L_452571
L_173183:
	andq $0x3,%r15
	jnz L_172504
L_173184:
	jmp L_172504
.p2align 0x4
L_452571:
L_173232:
	movl 0x74(%rbp),%r14d
	testl %r14d,%r14d
	jz L_452573
L_173233:
	cmpl $0xFFFFFFFF,%r14d
	jne L_172504
L_173235:
	movq $0x282B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r13)
	movq $0x1,0x8(%r13)
	movq $0x282B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x80(%rbp),%r11
	movq %r11,0x0(%r14)
	movq %r13,0x8(%r14)
	movq %r14,0x28(%rbp)
	movq $0x29,0x38(%rbp)
	xorl %ecx,%ecx
	jmp L_172800
.p2align 0x4
L_452573:
L_173236:
	movq 0x80(%rbp),%r13
	movq %r13,0x20(%rbp)
	jmp L_172582
.p2align 0x4
L_452574:
L_173227:
	movl 0x74(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_172504
L_173229:
	movl 0x70(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_452575
L_173230:
	movq $0x282B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r13)
	movq $0x1,0x8(%r13)
	movq $0x282B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x80(%rbp),%r11
	movq %r11,0x0(%r14)
	movq %r13,0x8(%r14)
	movq %r14,0x28(%rbp)
	movq $0x27,0x38(%rbp)
	xorl %ecx,%ecx
	jmp L_172800
.p2align 0x4
L_452575:
L_173231:
	movq 0x80(%rbp),%r14
	movq %r14,0x20(%rbp)
	jmp L_172582
.p2align 0x4
L_452577:
L_173220:
	movl 0x70(%rbp),%r14d
	testl %r14d,%r14d
	jz L_172504
L_173222:
	movl 0x74(%rbp),%r14d
	cmpl $0xFFFFFFFF,%r14d
	je L_172650
L_173223:
	cmpl $0x1,%r14d
	je L_172650
	jmp L_172504
.p2align 0x4
L_452581:
L_173215:
	movl 0x70(%rbp),%r14d
	testl %r14d,%r14d
	jz L_172504
L_173217:
	movl 0x74(%rbp),%r14d
	cmpl $0x1,%r14d
	je L_452583
	cmpl $0xFFFFFFFF,%r14d
	je L_452582
	jmp L_172504
.p2align 0x4
L_452582:
L_173219:
	movq $0x282B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r13)
	movq $0x1,0x8(%r13)
	movq $0x282B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x80(%rbp),%r11
	movq %r11,0x0(%r14)
	movq %r13,0x8(%r14)
	movq %r14,0x28(%rbp)
	movq $0x27,0x38(%rbp)
	xorl %ecx,%ecx
	jmp L_172800
.p2align 0x4
L_452583:
L_173218:
	movq 0x80(%rbp),%r13
	movq %r13,0x20(%rbp)
	jmp L_172582
.p2align 0x4
L_452585:
L_173210:
	movl 0x74(%rbp),%r14d
	testl %r14d,%r14d
	jz L_452587
L_173211:
	cmpl $0xFFFFFFFF,%r14d
	jne L_172504
L_173197:
	movl $0xFFFFFFFF,%ecx
	jmp x_551
.p2align 0x4
L_452587:
L_173214:
	movq 0x80(%rbp),%r13
	movq %r13,0x20(%rbp)
	jmp L_172582
.p2align 0x4
L_452588:
L_173207:
	movl 0x74(%rbp),%r14d
	cmpl $0x0,%r14d
	je L_172650
	cmpl $0x1,%r14d
	je L_452590
	cmpl $0xFFFFFFFF,%r14d
	je L_452589
	jmp L_172504
.p2align 0x4
L_452589:
L_173209:
	movq $0x282B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r13)
	movq $0x1,0x8(%r13)
	movq $0x282B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x80(%rbp),%r11
	movq %r11,0x0(%r14)
	movq %r13,0x8(%r14)
	movq %r14,0x28(%rbp)
	movq $0x27,0x38(%rbp)
	xorl %ecx,%ecx
	jmp L_172800
.p2align 0x4
L_452590:
L_173208:
	movq 0x80(%rbp),%r13
	movq %r13,0x20(%rbp)
	jmp L_172582
.p2align 0x4
L_452592:
L_173204:
	movl 0x74(%rbp),%r14d
	testl %r14d,%r14d
	jz L_172650
	jmp L_172504
.p2align 0x4
L_452594:
L_173199:
	movl 0x74(%rbp),%r14d
	cmpl $0xFFFFFFFF,%r14d
	je L_172622
L_173200:
	cmpl $0x1,%r14d
	je L_172622
	jmp L_172504
.p2align 0x4
L_452597:
L_173193:
	movl 0x74(%rbp),%r14d
	testl %r14d,%r14d
	jz L_172650
L_173194:
	cmpl $0xFFFFFFFF,%r14d
	je L_173197
	jmp L_172504
.p2align 0x4
L_452600:
L_173188:
	movl 0x74(%rbp),%r14d
	testl %r14d,%r14d
	jz L_172650
L_173189:
	cmpl $0xFFFFFFFF,%r14d
	jne L_172504
L_173191:
	movq 0x80(%rbp),%r14
	movq %r14,0x20(%rbp)
	jmp L_172582
.p2align 0x4
L_452603:
L_173185:
	movl 0x74(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_172504
L_173187:
	movq 0x80(%rbp),%r14
	movq %r14,0x20(%rbp)
	jmp L_172582
.p2align 0x4
.long 0x25
L_173239:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	cmpq $0x3,%r15
	je L_172504
L_173240:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_173241
L_173242:
L_173241:
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x23AA
L_173130:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0x88(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_173131
L_173173:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_173174+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_173174
.p2align 0x4
.long 0x23AB
L_173174:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_173131:
	movq 0x88(%rbp),%r15
	movq %r15,%r14
	andq $0x7,%r14
	cmpq $0x1,%r14
	je L_452626
	cmpq $0x2,%r14
	je L_172504
	cmpq $0x3,%r14
	je L_172504
	cmpq $0x5,%r14
	je L_172504
	cmpq $0x6,%r14
	je L_452616
L_173132:
	movl 0x4(%r15),%r14d
	movl 0x0(%r15),%r13d
	movq 0x28(%rbp),%r15
	movq %r15,%r11
	andq $0xFF,%r11
	cmpq $0x7A,%r11
	je L_452612
	cmpq $0x81,%r11
	je L_452609
L_173133:
	andq $0x3,%r15
	jnz L_172504
L_173134:
	jmp L_172504
.p2align 0x4
L_452609:
L_173142:
	shrq $0x8,%r15
	movb %r15b,%r11b
	testl %r14d,%r14d
	jnz L_172504
L_173143:
	cmpl $0x2,%r13d
	jne L_172504
L_173145:
	movzbq %r11b,%r15
	shlq $0x8,%r15
	orq $0x79,%r15
	movq %r15,0x38(%rbp)
	movq $0x282B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq 0x80(%rbp),%r15
	movq %r15,0x0(%r13)
	movq $0x1,0x8(%r13)
	movq $0x282B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq %r13,0x8(%r14)
	movq %r14,0x28(%rbp)
	xorl %ecx,%ecx
	jmp L_172800
.p2align 0x4
L_452612:
L_173135:
	shrq $0x8,%r15
	movb %r15b,%r11b
	movl 0x70(%rbp),%r15d
	testl %r15d,%r15d
	jz L_172504
L_173137:
	testl %r14d,%r14d
	jnz L_172504
L_173138:
	testl %r13d,%r13d
	jnz L_172504
L_173140:
	movzbq %r11b,%r15
	shlq $0x8,%r15
	orq $0x79,%r15
	movq %r15,0x38(%rbp)
	movq $0x282B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq 0x80(%rbp),%r15
	movq %r15,0x0(%r13)
	movq $0x1,0x8(%r13)
	movq $0x282B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq %r13,0x8(%r14)
	movq %r14,0x28(%rbp)
	xorl %ecx,%ecx
	jmp L_172800
.p2align 0x4
L_452616:
L_173162:
	shrq $0x3,%r15
	movl %r15d,%r14d
	movq 0x28(%rbp),%r15
	movq %r15,%r13
	andq $0xFF,%r13
	cmpq $0x7A,%r13
	je L_452620
	cmpq $0x81,%r13
	je L_452618
L_173163:
	andq $0x3,%r15
	jnz L_172504
L_173164:
	jmp L_172504
.p2align 0x4
L_452618:
L_173170:
	shrq $0x8,%r15
	movb %r15b,%r11b
	testl %r14d,%r14d
	jz L_452619
L_173172:
	movzbq %r11b,%r15
	shlq $0x8,%r15
	orq $0x85,%r15
	movq %r15,0x38(%rbp)
	movq $0x282B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq 0x80(%rbp),%r15
	movq %r15,0x0(%r13)
	movq $0x1,0x8(%r13)
	movq %r13,0x28(%rbp)
	xorl %ecx,%ecx
	movq $0x1,%r13
	jmp L_172800
.p2align 0x4
L_452619:
L_173171:
	movq 0x80(%rbp),%r15
	movq %r15,0x20(%rbp)
	jmp L_172582
.p2align 0x4
L_452620:
L_173165:
	shrq $0x8,%r15
	movb %r15b,%r11b
	movl 0x70(%rbp),%r15d
	testl %r15d,%r15d
	jz L_172504
L_173167:
	testl %r14d,%r14d
	jz L_452621
L_173169:
	movzbq %r11b,%r15
	shlq $0x8,%r15
	orq $0x85,%r15
	movq %r15,0x38(%rbp)
	movq $0x282B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq 0x80(%rbp),%r15
	movq %r15,0x0(%r13)
	movq $0x1,0x8(%r13)
	movq %r13,0x28(%rbp)
	xorl %ecx,%ecx
	movq $0x1,%r13
	jmp L_172800
.p2align 0x4
L_452621:
L_173168:
	movq 0x80(%rbp),%r15
	movq %r15,0x20(%rbp)
	jmp L_172582
.p2align 0x4
L_452626:
L_173147:
	movq 0x28(%rbp),%r14
	movq %r14,%r13
	andq $0xFF,%r13
	cmpq $0x6D,%r13
	je L_452636
	cmpq $0x79,%r13
	je L_452635
	cmpq $0x7A,%r13
	je L_452634
	cmpq $0x7B,%r13
	je L_452633
	cmpq $0x7E,%r13
	je L_452632
	cmpq $0x7F,%r13
	je L_452631
	cmpq $0x81,%r13
	je L_452630
	cmpq $0x86,%r13
	je L_452629
	cmpq $0x89,%r13
	je L_452628
L_173148:
	andq $0x3,%r14
	jnz L_172504
L_173149:
	jmp L_172504
.p2align 0x4
L_452628:
L_173158:
	movq $0x1C97,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq 0x78(%rbp),%r11
	movq %r11,0x0(%r13)
	movq %r13,0x20(%rbp)
	jmp L_172626
.p2align 0x4
L_452629:
L_173157:
	movl $0x1,%ecx
	jmp L_172715
.p2align 0x4
L_452630:
L_173156:
	movq $0x1C97,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq 0x78(%rbp),%r11
	movq %r11,0x0(%r13)
	movq %r13,0x20(%rbp)
	jmp L_172626
.p2align 0x4
L_452631:
L_173155:
	xorl %ecx,%ecx
	jmp L_172715
.p2align 0x4
L_452632:
L_173154:
	xorl %ecx,%ecx
	jmp L_172715
.p2align 0x4
L_452633:
L_173153:
	xorl %ecx,%ecx
	jmp L_172715
.p2align 0x4
L_452634:
L_173152:
	movq $0x1C97,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq 0x78(%rbp),%r11
	movq %r11,0x0(%r13)
	movq %r13,0x20(%rbp)
	jmp L_172626
.p2align 0x4
L_452635:
L_173151:
	movq $0x1C97,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq 0x78(%rbp),%r11
	movq %r11,0x0(%r13)
	movq %r13,0x20(%rbp)
	jmp L_172626
.p2align 0x4
L_452636:
L_173150:
	movq $0x1C97,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq 0x78(%rbp),%r11
	movq %r11,0x0(%r13)
	movq %r13,0x20(%rbp)
	jmp L_172626
.p2align 0x4
.long 0x7BC
L_172585:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_172586
L_172590:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_172591+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_172591
.p2align 0x4
.long 0x7B6
L_172591:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_172586:
	movq 0x20(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xEA9,%r15
	je L_452639
L_172588:
	movq 0x0(%r14),%r15
	movl 0x0(%r15),%r14d
	decl %r14d
	jo L_172355
L_172589:
	movl %r14d,0x0(%r15)
	movq 0x30(%rbp),%r15
	jmp loop_1740
.p2align 0x4
L_452639:
L_172587:
	movq 0x30(%rbp),%r15
	jmp loop_1740
.p2align 0x4
.long 0x23A7
L_173100:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movl 0xC8(%rbp),%r15d
	movl %r15d,0x5C(%rbp)
	movl %r15d,0xC8(%rbp)
	movq $0x3,0xD0(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0xD8(%rbp)
	addq $0xC8,%rbp
	leaq (L_173101+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x2377
L_172913:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movl 0xC0(%rbp),%r15d
	movl %r15d,0x5C(%rbp)
	movl %r15d,0xC0(%rbp)
	movq $0x3,0xC8(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (L_172914+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x2384
L_172922:
	addq $0xFFFFFFFFFFFFFD00,%rbp
	movl 0x300(%rbp),%r15d
	movl %r15d,0x5C(%rbp)
	movl %r15d,0x300(%rbp)
	movq $0x3,0x308(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x310(%rbp)
	addq $0x300,%rbp
	leaq (L_172923+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x239C
L_173058:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movl 0xC0(%rbp),%r15d
	movl %r15d,0x5C(%rbp)
	movl %r15d,0xC0(%rbp)
	movq $0x3,0xC8(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (L_173059+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x23A3
L_173071:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movl 0xC0(%rbp),%r15d
	movl %r15d,0x5C(%rbp)
	decl %r15d
	movl %r15d,0xC0(%rbp)
	movq $0x3,0xC8(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (L_173072+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x239C
L_173076:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movl 0xC0(%rbp),%r15d
	movl %r15d,0x5C(%rbp)
	movl %r15d,0xC0(%rbp)
	movq $0x3,0xC8(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (L_173077+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x23A3
L_173090:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movl 0xC0(%rbp),%r15d
	movl %r15d,0x5C(%rbp)
	decl %r15d
	movl %r15d,0xC0(%rbp)
	movq $0x3,0xC8(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (L_173091+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x239A
L_173046:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_173047
L_173050:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_173051+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_173051
.p2align 0x4
.long 0x239B
L_173051:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_173047:
	cmpq $0xFFFFFFFFFFFFFFFF,0x38(%rbp)
	jne L_172504
L_173049:
	movq $0x243B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq 0x70(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r13,0x38(%rbp)
	movq $0x282B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq %r15,0x28(%rbp)
	xorl %ecx,%ecx
	movq $0x1,%r13
	jmp L_172800
.p2align 0x4
.long 0x239A
L_173032:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_173033
L_173036:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_173037+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_173037
.p2align 0x4
.long 0x239B
L_173037:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_173033:
	cmpq $0xFFFFFFFFFFFFFFFF,0x38(%rbp)
	jne L_172504
L_173035:
	movq $0x2439,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq 0x70(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r13,0x38(%rbp)
	movq $0x282B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq %r15,0x28(%rbp)
	xorl %ecx,%ecx
	movq $0x1,%r13
	jmp L_172800
.p2align 0x4
.long 0x2388
L_173016:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movl 0xC0(%rbp),%r15d
	movl %r15d,0x5C(%rbp)
	movl %r15d,0xC0(%rbp)
	movq $0x3,0xC8(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (L_173017+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x2398
L_173006:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_173007
L_173010:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_173011+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_173011
.p2align 0x4
.long 0x2399
L_173011:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_173007:
	cmpq $0xFFFFFFFFFFFFFFFF,0x60(%rbp)
	jne L_172504
L_173009:
	movq $0x243B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq 0x38(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r13,0x38(%rbp)
	movq $0x282B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq %r15,0x28(%rbp)
	xorl %ecx,%ecx
	movq $0x1,%r13
	jmp L_172800
.p2align 0x4
.long 0x2397
L_172994:
	addq $0xFFFFFFFFFFFFFD00,%rbp
	movq 0x300(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq $0xFFFFFFFFFFFFFFFF,%r15
	je L_172997
	jmp L_172504
.p2align 0x4
.long 0x238E
L_172970:
	addq $0xFFFFFFFFFFFFFDF8,%rbp
	movl 0x208(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	movslq %r15d,%r14
	shlq $0x1,%r14
	orq $0x1,%r14
	movq %r14,0x78(%rbp)
	movq 0x68(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0xA8(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x88(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x90(%rbp)
	movq %r14,0x208(%rbp)
	addq $0x208,%rbp
	leaq (L_172971+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x2388
L_172958:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movl 0xC0(%rbp),%r15d
	movl %r15d,0x5C(%rbp)
	movl %r15d,0xC0(%rbp)
	movq $0x3,0xC8(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (L_172959+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x2388
L_172941:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movl 0xC0(%rbp),%r15d
	movl %r15d,0x80(%rbp)
	movl %r15d,0xC0(%rbp)
	movq $0x3,0xC8(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (L_172942+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x237D
L_172793:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movl 0xC0(%rbp),%r15d
	movl %r15d,0x88(%rbp)
	movl %r15d,0xC0(%rbp)
	movq $0x3,0xC8(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (L_172794+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x236D
L_172623:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movl 0xC0(%rbp),%r15d
	movl %r15d,0x5C(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_172624
L_172647:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_172648+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_172648
.p2align 0x4
.long 0x2371
L_172648:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_172624:
	movl 0x5C(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_172504
L_172625:
	movq $0x1C99,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x20(%rbp)
	jmp L_172626
.p2align 0x4
.long 0x2372
L_172707:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movl 0xC0(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	movl %r15d,0xC0(%rbp)
	movq $0x3,0xC8(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (L_172708+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x2372
L_172700:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movl 0xC0(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	movl %r15d,0xC0(%rbp)
	movq $0x3,0xC8(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (L_172701+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x2372
L_172693:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movl 0xC0(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	movl %r15d,0xC0(%rbp)
	movq $0x3,0xC8(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (L_172694+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x2372
L_172686:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movl 0xC0(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	movl %r15d,0xC0(%rbp)
	movq $0x3,0xC8(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (L_172687+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x2372
L_172679:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movl 0xC0(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	movl %r15d,0xC0(%rbp)
	movq $0x3,0xC8(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (L_172680+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x2379
L_172760:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
	movl 0x148(%rbp),%r15d
	movl %r15d,0x5C(%rbp)
	movl %r15d,0x148(%rbp)
	movq $0x3,0x150(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x158(%rbp)
	addq $0x148,%rbp
	leaq (L_172761+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x2376
L_172743:
	addq $0xFFFFFFFFFFFFFD00,%rbp
	movq 0x300(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x2F0(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x60(%rbp)
	movq %r15,0xC0(%rbp)
	addq $0xC0,%rbp
	leaq (L_172744+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x473
L_172751:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (bug_455+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x23AE
L_173282:
	addq $0xFFFFFFFFFFFFFCC8,%rbp
	movl 0x338(%rbp),%r15d
	movl %r15d,0x5C(%rbp)
	testl %r15d,%r15d
	jnz L_172504
L_173283:
	movq 0x28(%rbp),%r15
	movq %r15,%r14
	andq $0xFF,%r14
	cmpq $0x27,%r14
	je L_452656
	cmpq $0x29,%r14
	je L_452651
L_173284:
	andq $0x3,%r15
	jnz L_172504
L_173285:
	jmp L_172504
.p2align 0x4
L_452651:
L_173294:
	movq 0x78(%rbp),%r14
	movq %r14,%r13
	andq $0x1,%r13
	jz L_452652
L_173295:
	notq %r14
	orq $0x1,%r14
	movq %r14,0x60(%rbp)
intInf_15:
	movq 0x60(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq 0x328(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC0,%rbp
	leaq (L_173296+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1473
.p2align 0x4
L_452652:
L_173302:
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	decq %r13
	jo L_172355
L_173303:
	movq 0x108(%rbp),%r14
	movq 0x8(%r14),%rsi
	movq %rsi,%r11
	movq 0x0(%r14),%r10
	imulq %r13,%r11
	addq $0x7,%r10
	addq %r10,%rsi
	addq %rsi,%r11
	movq %r11,%rsi
	movq %r11,0x60(%rbp)
	addq $0x0,%rsi
	jc L_173304
L_173305:
	movq (gcState+0x458)(%rip),%r14
	subq %r12,%r14
	cmpq %rsi,%r14
	jnb L_173306
L_173308:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r14d
	movl %r14d,%edx
	leaq gcState(%rip),%r14
	movq %r14,%rdi
	xorq %rax,%rax
	addq $0x338,%rbp
	leaq (L_173309+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_173309
.p2align 0x4
.long 0x23B1
L_173309:
	addq $0xFFFFFFFFFFFFFCC8,%rbp
L_173306:
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0x60(%rbp),%rsi
	movq 0x78(%rbp),%rdi
	xorq %rax,%rax
	movq %r12,(gcState+0x0)(%rip)
	call IntInf_notb
L_173307:
	movq %rax,0x60(%rbp)
	movq (gcState+0x0)(%rip),%r12
	jmp intInf_15
.p2align 0x4
L_452656:
L_173286:
	movq 0x78(%rbp),%r14
	movq %r14,0x338(%rbp)
	movq 0x80(%rbp),%r14
	movq %r14,0x340(%rbp)
	addq $0x338,%rbp
	leaq (L_173287+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigNeg_0
.p2align 0x4
.long 0x236D
L_173375:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x60(%rbp)
	jmp L_173377
.p2align 0x4
.long 0x23B2
L_173324:
	addq $0xFFFFFFFFFFFFFCC8,%rbp
	movl 0x338(%rbp),%r15d
	movl %r15d,0x5C(%rbp)
	testl %r15d,%r15d
	jnz L_172504
L_173325:
	movq 0x28(%rbp),%r15
	movq %r15,%r14
	andq $0xFF,%r14
	cmpq $0x1F,%r14
	je L_452661
	cmpq $0x25,%r14
	je L_452660
	cmpq $0x2F,%r14
	je L_452659
L_173326:
	andq $0x3,%r15
	jnz L_172504
L_173327:
	jmp L_172504
.p2align 0x4
L_452659:
L_173355:
	movq 0x60(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x130(%rbp)
	addq $0x130,%rbp
	leaq (L_173356+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_452660:
L_173337:
	movq 0xA8(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x68(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x80(%rbp)
	movq 0x128(%rbp),%r14
	movq %r14,0x338(%rbp)
	addq $0x338,%rbp
	leaq (L_173338+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_452661:
L_173328:
	movq 0x60(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x338(%rbp)
	addq $0x338,%rbp
	leaq (L_173329+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x2441
L_175913:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_175914
L_175915:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_175916+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_175916
.p2align 0x4
.long 0x2442
L_175916:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_175914:
	movq 0x38(%rbp),%r14
	movl $0x1,0x0(%r14)
	movq 0x20(%rbp),%r14
	movl $0x0,0x0(%r14)
	movq 0x48(%rbp),%r15
	jmp expression_0
.p2align 0x4
.long 0x242A
L_175696:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_175697
L_175719:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_175720+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_175720
.p2align 0x4
.long 0x242B
L_175720:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_175697:
	movq 0x38(%rbp),%r15
	cmpq $0x1,%r15
	je L_452664
L_175698:
L_175699:
	movq 0xB8(%rbp),%r14
	movq %r14,0x48(%rbp)
	movq 0x40(%rbp),%r14
	movq %r14,0x50(%rbp)
	movq %r15,0x40(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x40,%rbp
	leaq (L_175700+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1792
.p2align 0x4
L_452664:
L_175718:
	movq $0x1D53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r14)
	xchgq %r14,%r15
	jmp L_175699
.p2align 0x4
.long 0x242E
L_175741:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_175743
L_175744:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_175745+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_175745
.p2align 0x4
.long 0x242F
L_175745:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	jmp L_175743
.p2align 0x4
.long 0x2430
L_175748:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_175749
L_175750:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_175751+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_175751
.p2align 0x4
.long 0x2431
L_175751:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_175749:
	incl 0x38(%rbp)
	jmp loop_1765
.p2align 0x4
.long 0x2428
L_175728:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_175729
L_175730:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_175731+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_175731
.p2align 0x4
.long 0x242D
L_175731:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_175729:
	incl 0x4C(%rbp)
	jmp loop_1764
.p2align 0x4
.long 0x2437
L_175801:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_175802
L_175820:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_175821+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_175821
.p2align 0x4
.long 0x243A
L_175821:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_175802:
	movl 0x54(%rbp),%r15d
	incl %r15d
	cmpl $0x0,%r15d
	jl L_175753
L_175803:
	cmpl %r15d,0x50(%rbp)
	jl L_175753
L_175804:
	movl %r15d,0x38(%rbp)
loop_1767:
	movl 0x50(%rbp),%r15d
	cmpl %r15d,0x38(%rbp)
	jl L_452670
L_175805:
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_452669
L_175806:
	movq 0xA0(%rbp),%r14
	movq 0x8(%r14),%r13
	movq $0x34CB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	movq %r14,0xE0(%rbp)
	movq %r14,0xF0(%rbp)
	addq $0x10,%r12
	movq %r15,0xC8(%rbp)
	movq $0x1,0xD0(%rbp)
	movb $0x2,0xD8(%rbp)
	movq $0x1,0xE8(%rbp)
	movq $0x2,0xF8(%rbp)
	addq $0xC8,%rbp
	leaq (L_175807+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loopExp_0
.p2align 0x4
L_452669:
L_175809:
	movq 0x70(%rbp),%r15
	jmp expression_0
.p2align 0x4
L_452670:
L_175813:
	movslq 0x38(%rbp),%r15
	salq $0x4,%r15
	movq 0x20(%rbp),%r14
	movq 0x0(%r14,%r15,1),%r13
	movq %r13,0xC8(%rbp)
	movq 0xA0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq $0x34CB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0xE0(%rbp)
	movq %r15,0xF0(%rbp)
	addq $0x10,%r12
	movq $0x1,0xD0(%rbp)
	movb $0x2,0xD8(%rbp)
	movq $0x1,0xE8(%rbp)
	movq $0x2,0xF8(%rbp)
	addq $0xC8,%rbp
	leaq (L_175814+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loopExp_0
.p2align 0x4
.long 0x2377
L_173445:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movl 0xC0(%rbp),%r15d
	movl %r15d,0x5C(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_173446
L_173449:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_173450+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_173450
.p2align 0x4
.long 0x23B0
L_173450:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_173446:
	movl 0x5C(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_172504
L_173447:
	movq $0x1C99,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x20(%rbp)
	jmp L_172626
.p2align 0x4
.long 0x23AF
L_173428:
	addq $0xFFFFFFFFFFFFFCC8,%rbp
	movq 0x338(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq %r15,0xC0(%rbp)
	movq 0x328(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC0,%rbp
	leaq (L_173429+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1473
.p2align 0x4
.long 0x236A
L_172509:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_172510
L_172529:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_172530+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_172530
.p2align 0x4
.long 0x236B
L_172530:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_172510:
	movq 0xB0(%rbp),%r15
	movl 0x0(%r15),%r14d
	testl %r14d,%r14d
	jz L_452677
L_172511:
	movq 0x38(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_172364
L_172513:
	movl %r13d,0x60(%rbp)
	movq $0x39DD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq %r14,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_172514+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_35
.p2align 0x4
L_452677:
L_172518:
	movq 0x38(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%ecx
	movslq %ecx,%r13
	cmpq %r13,%r14
	jne L_172364
L_172520:
	cmpl $0x0,%ecx
	jl L_172393
L_172521:
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_1747:
	cmpl %ecx,%ebx
	jnl L_452680
L_172523:
	movslq %ebx,%r15
	movq 0x38(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xEA9,%r15
	je L_172525
L_172526:
	movq 0x0(%r13),%r15
	movl 0x0(%r15),%r14d
	decl %r14d
	jo L_172355
L_172527:
	movl %r14d,0x0(%r15)
L_172525:
	incl %ebx
	jmp loop_1747
.p2align 0x4
L_452680:
L_172522:
	movq 0x30(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1B6A
L_172548:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_172549
L_172550:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_172551+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_172551
.p2align 0x4
.long 0x2354
L_172551:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_172549:
	movq $0x1D45,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0x20(%rbp)
	jmp expansive_0
.p2align 0x4
.long 0x23C6
L_173495:
	addq $0xFFFFFFFFFFFFFED0,%rbp
	movl 0x130(%rbp),%r15d
	movl %r15d,0x5C(%rbp)
	cmpl $0x2,%r15d
	je L_452691
	cmpl $0x8,%r15d
	je L_452690
	cmpl $0xA,%r15d
	je L_452689
	cmpl $0x10,%r15d
	je L_452685
L_173496:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x1A40)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_452685:
L_173508:
	xorb %dl,%dl
L_173498:
	movq 0x118(%rbp),%r14
	movq 0x18(%r14),%r13
	movq 0x10(%r14),%r11
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r10
	cmpb $0x1,%dl
	je L_452688
	cmpb $0x2,%dl
	je L_452687
	cmpb $0x3,%dl
	je L_452686
L_173499:
L_173500:
	movq %r15,0x138(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x130(%rbp)
	addq $0x130,%rbp
	leaq (L_173501+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1197
.p2align 0x4
L_452686:
	movq %r13,%r15
	jmp L_173500
.p2align 0x4
L_452687:
L_173504:
	movq %r10,%r15
	jmp L_173500
.p2align 0x4
L_452688:
L_173503:
	movq %r11,%r15
	jmp L_173500
.p2align 0x4
L_452689:
L_173507:
	movb $0x1,%dl
	jmp L_173498
.p2align 0x4
L_452690:
L_173506:
	movb $0x2,%dl
	jmp L_173498
.p2align 0x4
L_452691:
L_173497:
	movb $0x3,%dl
	jmp L_173498
.p2align 0x4
.long 0x23B4
L_173477:
	addq $0xFFFFFFFFFFFFFCC8,%rbp
	movl 0x338(%rbp),%r15d
	movl %r15d,0x5C(%rbp)
	leaq L_173435(%rip),%r14
	movq %r14,0x10(%rbp)
	movq %rbp,%r14
	addq $0x18,%r14
	subq (gcState+0x560)(%rip),%r14
	movq %r14,(gcState+0x20)(%rip)
	movl %r15d,0x338(%rbp)
	movq $0x3,0x340(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x348(%rbp)
	addq $0x338,%rbp
	leaq (L_173478+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x23C1
L_173468:
	addq $0xFFFFFFFFFFFFFCC8,%rbp
	movl 0x338(%rbp),%r15d
	movl %r15d,0x5C(%rbp)
	leaq L_173435(%rip),%r14
	movq %r14,0x10(%rbp)
	movq %rbp,%r14
	addq $0x18,%r14
	subq (gcState+0x560)(%rip),%r14
	movq %r14,(gcState+0x20)(%rip)
	movl %r15d,0x338(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x340(%rbp)
	movq 0x110(%rbp),%r15
	movq %r15,0x348(%rbp)
	addq $0x338,%rbp
	leaq (L_173469+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1487
.p2align 0x4
.long 0x23CF
bug_462:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_174397
L_174398:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_174399+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_174399
.p2align 0x4
.long 0x7BA
L_174399:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_174397:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x23D0
L_174401:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x70(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xC0,%rbp
	leaq (L_174402+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x23CA
L_173562:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movl 0xC0(%rbp),%r15d
	movl %r15d,0x5C(%rbp)
	testl %r15d,%r15d
	jz L_172504
L_173564:
	movq 0xA8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xC0,%rbp
	leaq (L_173565+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x23FF
L_174363:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movq 0xD0(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_174364
L_174365:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_174366+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_174366
.p2align 0x4
.long 0x2400
L_174366:
	addq $0xFFFFFFFFFFFFFF30,%rbp
L_174364:
	movq 0x68(%rbp),%r15
	movq 0x70(%rbp),%r14
	jmp L_174359
.p2align 0x4
.long 0x238C
L_174229:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq %r15,0xC0(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (word_51+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x237D
L_174235:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movl 0xC0(%rbp),%r15d
	movl %r15d,0x5C(%rbp)
	movl %r15d,0xC0(%rbp)
	movq $0x3,0xC8(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (L_174236+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x23CF
bug_461:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_174128
L_174129:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_174130+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_174130
.p2align 0x4
.long 0x7BA
L_174130:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_174128:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x23F5
L_174135:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x70(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xC0,%rbp
	leaq (L_174136+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x23FA
L_174143:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x60(%rbp)
	movl 0x5C(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_452696
L_174144:
	jmp L_174133
.p2align 0x4
L_452696:
L_174145:
	movq 0x68(%rbp),%r14
	movq %r14,0xC0(%rbp)
	movq 0x80(%rbp),%r14
	movq %r14,0xC8(%rbp)
	addq $0xC0,%rbp
	leaq (L_174146+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toIntInfX_0
.p2align 0x4
.long 0x23F3
L_174098:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
	movq 0x108(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x70(%rbp),%r14
	jmp L_174094
.p2align 0x4
.long 0x23EE
L_174059:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x60(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0xA8(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x78(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x80(%rbp)
	movq %r14,0xC0(%rbp)
	addq $0xC0,%rbp
	leaq (L_174060+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x23C9
L_174035:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movl $0x1,%ecx
	movq 0x60(%rbp),%r14
	movq %r15,0x60(%rbp)
	movq %r14,0x68(%rbp)
	jmp wordOrOverflow_3
.p2align 0x4
.long 0x23E9
L_174000:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq %r15,0xC0(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (L_174001+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x23CF
bug_460:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_173926
L_173927:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_173928+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_173928
.p2align 0x4
.long 0x7BA
L_173928:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_173926:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x23E3
L_173932:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x78(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xC0,%rbp
	leaq (L_173933+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x23E6
L_173940:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r14
	movq %r14,0x60(%rbp)
	movl 0x5C(%rbp),%r13d
	testl %r13d,%r13d
	jnz L_452698
L_173941:
	movq 0x70(%rbp),%r15
	jmp L_173931
.p2align 0x4
L_452698:
L_173942:
	movq 0x68(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC0,%rbp
	leaq (L_173943+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toIntInfX_0
.p2align 0x4
.long 0x23CF
bug_459:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_173877
L_173878:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_173879+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_173879
.p2align 0x4
.long 0x7BA
L_173879:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_173877:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x23E3
L_173883:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x78(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xC0,%rbp
	leaq (L_173884+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x23E6
L_173891:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r14
	movq %r14,0x60(%rbp)
	movl 0x5C(%rbp),%r13d
	testl %r13d,%r13d
	jnz L_452700
L_173892:
	movq 0x70(%rbp),%r15
	jmp L_173882
.p2align 0x4
L_452700:
L_173893:
	movq 0x68(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC0,%rbp
	leaq (L_173894+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toIntInfX_0
.p2align 0x4
.long 0x23DA
L_173760:
	addq $0xFFFFFFFFFFFFFE08,%rbp
	movsd 0x1F8(%rbp),%xmm15
	movsd %xmm15,0x68(%rbp)
	movb $0x1,0x1F8(%rbp)
	addq $0x1F8,%rbp
	leaq (L_173761+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp setRoundingMode_0
.p2align 0x4
.long 0x23CF
L_173787:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	jmp L_172504
.p2align 0x4
.long 0x23DF
L_173807:
	addq $0xFFFFFFFFFFFFFE18,%rbp
	movss 0x1E8(%rbp),%xmm15
	movss %xmm15,0x68(%rbp)
	leaq L_173825(%rip),%r15
	movq %r15,0x10(%rbp)
	movb $0x1,0x1E8(%rbp)
	addq $0x1E8,%rbp
	leaq (L_173808+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp setRoundingMode_0
.p2align 0x4
.long 0x25
L_173839:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_173826
.p2align 0x4
.long 0x23D5
L_173712:
	addq $0xFFFFFFFFFFFFFDE8,%rbp
	movl 0x218(%rbp),%r15d
	movl %r15d,0x5C(%rbp)
	movq 0x60(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x218(%rbp)
	addq $0x218,%rbp
	leaq (L_173713+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x23D5
L_173672:
	addq $0xFFFFFFFFFFFFFDE8,%rbp
	movl 0x218(%rbp),%r15d
	movl %r15d,0x5C(%rbp)
	movq 0x60(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x218(%rbp)
	addq $0x218,%rbp
	leaq (L_173673+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x23CF
bug_458:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_173603
L_173604:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_173605+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_173605
.p2align 0x4
.long 0x7BA
L_173605:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_173603:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x23D0
L_173607:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x70(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xC0,%rbp
	leaq (L_173608+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x23CD
L_173573:
	addq $0xFFFFFFFFFFFFFF08,%rbp
	movq 0xF8(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x70(%rbp),%r14
	jmp L_173560
.p2align 0x4
.long 0x2360
L_172723:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_172724
L_172727:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_172728+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_172728
.p2align 0x4
.long 0x2361
L_172728:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_172724:
	movq 0xB0(%rbp),%r15
	movl 0x0(%r15),%r14d
	testl %r14d,%r14d
	jz L_452702
L_172725:
	movq $0x1D4D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq $0x1,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x10(%r15)
	movq $0x1D33,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x20,%r12
	movq 0x48(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x40(%rbp),%r15
	movq %r15,0x10(%r14)
	movq $0x1D39,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_452702:
L_172726:
	movq 0x30(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x240C
L_174754:
	addq $0xFFFFFFFFFFFFFCC8,%rbp
	movq 0x338(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq %r15,0x338(%rbp)
	movq $0x3,0x340(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x348(%rbp)
	addq $0x338,%rbp
	leaq (L_174755+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x2389
L_174687:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movl 0xC0(%rbp),%r15d
	movl %r15d,0x5C(%rbp)
	movl %r15d,0xC0(%rbp)
	movq $0x3,0xC8(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (L_174688+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x23CF
bug_464:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_174695
L_174696:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_174697+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_174697
.p2align 0x4
.long 0x7BA
L_174697:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_174695:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x2406
L_174541:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
	movq 0x148(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq %r15,0x148(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x150(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x158(%rbp)
	addq $0x148,%rbp
	leaq (L_174542+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x2403
L_174504:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movl 0xC0(%rbp),%r15d
	movl %r15d,0x5C(%rbp)
	movl %r15d,0xC0(%rbp)
	movq $0x3,0xC8(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (L_174505+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x23CF
bug_463:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_174512
L_174513:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_174514+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_174514
.p2align 0x4
.long 0x7BA
L_174514:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_174512:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x23A8
L_173101:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq $0x3,0xC8(%rbp)
	movq %r15,0xD0(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0xD8(%rbp)
	addq $0xC8,%rbp
	leaq (L_173102+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x2378
L_172914:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq %r15,0xC0(%rbp)
	movq $0x1,0xC8(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (L_172915+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x2385
L_172923:
	addq $0xFFFFFFFFFFFFFD00,%rbp
	movq 0x300(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq %r15,0x300(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x308(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x310(%rbp)
	addq $0x300,%rbp
	leaq (L_172924+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x239D
L_173059:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq $0x3,0xC0(%rbp)
	movq %r15,0xC8(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (L_173060+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x23A4
L_173072:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq %r15,0xC0(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC0,%rbp
	leaq (L_173073+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigNeg_0
.p2align 0x4
.long 0x239D
L_173077:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq $0x3,0xC0(%rbp)
	movq %r15,0xC8(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (L_173078+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x23A4
L_173091:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq %r15,0xC0(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC0,%rbp
	leaq (L_173092+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigNeg_0
.p2align 0x4
.long 0x2389
L_173017:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq $0x3,0xC0(%rbp)
	movq %r15,0xC8(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (L_173018+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x238F
L_172971:
	addq $0xFFFFFFFFFFFFFDF8,%rbp
	movl 0x208(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	movl %r15d,0x208(%rbp)
	movq $0x3,0x210(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x218(%rbp)
	addq $0x208,%rbp
	leaq (L_172972+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x238C
L_172959:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq $0x3,0xC0(%rbp)
	movq %r15,0xC8(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (L_172960+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x2389
L_172942:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq $0x3,0xC0(%rbp)
	movq %r15,0xC8(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (L_172943+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x237E
L_172794:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq $0x3,0xC0(%rbp)
	movq %r15,0xC8(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (L_172795+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x2373
L_172708:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq %r15,0xC0(%rbp)
	movq $0x3,0xC8(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (L_172709+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x2373
L_172701:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq %r15,0xC0(%rbp)
	movq $0x1,0xC8(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (L_172702+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x2373
L_172694:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq %r15,0xC0(%rbp)
	movq $0x1,0xC8(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (L_172695+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x2373
L_172687:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq %r15,0xC0(%rbp)
	movq $0x1,0xC8(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (L_172688+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x2373
L_172680:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq %r15,0xC0(%rbp)
	movq $0x1,0xC8(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (L_172681+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x237A
L_172761:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
	movq 0x148(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq %r15,0x148(%rbp)
	movq $0x1,0x150(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x158(%rbp)
	addq $0x148,%rbp
	leaq (L_172762+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x2377
L_172744:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movl 0xC0(%rbp),%r15d
	movl %r15d,0x5C(%rbp)
	movl %r15d,0xC0(%rbp)
	movq $0x3,0xC8(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (L_172745+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x473
bug_455:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_172752
L_172753:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_172754+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_172754
.p2align 0x4
.long 0x49D
L_172754:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_172752:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x2377
L_173296:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movl 0xC0(%rbp),%r15d
	movl %r15d,0x5C(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_173297
L_173300:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_173301+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_173301
.p2align 0x4
.long 0x23B0
L_173301:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_173297:
	movl 0x5C(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_172504
L_173298:
	movq $0x1C99,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x20(%rbp)
	jmp L_172626
.p2align 0x4
.long 0x23AF
L_173287:
	addq $0xFFFFFFFFFFFFFCC8,%rbp
	movq 0x338(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq %r15,0xC0(%rbp)
	movq 0x328(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC0,%rbp
	leaq (L_173288+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1473
.p2align 0x4
.long 0x23BA
L_173356:
	addq $0xFFFFFFFFFFFFFED0,%rbp
	movl 0x130(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	cmpl $0x2,%r15d
	je L_452715
	cmpl $0x8,%r15d
	je L_452714
	cmpl $0xA,%r15d
	je L_452713
	cmpl $0x10,%r15d
	je L_452709
L_173357:
	movq (globalObjptr+0x1A40)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_452709:
L_173369:
	xorb %dl,%dl
L_173359:
	movq 0x118(%rbp),%r14
	movq 0x18(%r14),%r13
	movq 0x10(%r14),%r11
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r10
	cmpb $0x1,%dl
	je L_452712
	cmpb $0x2,%dl
	je L_452711
	cmpb $0x3,%dl
	je L_452710
L_173360:
L_173361:
	movq %r15,0x138(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x130(%rbp)
	addq $0x130,%rbp
	leaq (L_173362+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1197
.p2align 0x4
L_452710:
	movq %r13,%r15
	jmp L_173361
.p2align 0x4
L_452711:
L_173365:
	movq %r10,%r15
	jmp L_173361
.p2align 0x4
L_452712:
L_173364:
	movq %r11,%r15
	jmp L_173361
.p2align 0x4
L_452713:
L_173368:
	movb $0x1,%dl
	jmp L_173359
.p2align 0x4
L_452714:
L_173367:
	movb $0x2,%dl
	jmp L_173359
.p2align 0x4
L_452715:
L_173358:
	movb $0x3,%dl
	jmp L_173359
.p2align 0x4
.long 0x23B4
L_173338:
	addq $0xFFFFFFFFFFFFFCC8,%rbp
	movl 0x338(%rbp),%r15d
	movl %r15d,0x5C(%rbp)
	movl %r15d,0x338(%rbp)
	movq $0x3,0x340(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x348(%rbp)
	addq $0x338,%rbp
	leaq (L_173339+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x23B3
L_173329:
	addq $0xFFFFFFFFFFFFFCC8,%rbp
	movl 0x338(%rbp),%r15d
	movl %r15d,0x5C(%rbp)
	movl %r15d,0x338(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x340(%rbp)
	movq 0x110(%rbp),%r15
	movq %r15,0x348(%rbp)
	addq $0x338,%rbp
	leaq (L_173330+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1487
.p2align 0x4
.long 0x8F9
L_175700:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_175701+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp shrinkDecs_0
.p2align 0x4
.long 0x2438
L_175807:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_175809
L_175810:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_175811+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_175811
.p2align 0x4
.long 0x2439
L_175811:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	jmp L_175809
.p2align 0x4
.long 0x2437
L_175814:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_175815
L_175816:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_175817+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_175817
.p2align 0x4
.long 0x243A
L_175817:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_175815:
	incl 0x38(%rbp)
	jmp loop_1767
.p2align 0x4
.long 0x2377
L_173429:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movl 0xC0(%rbp),%r15d
	movl %r15d,0x5C(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_173430
L_173433:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_173434+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_173434
.p2align 0x4
.long 0x23B0
L_173434:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_173430:
	movl 0x5C(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_172504
L_173431:
	movq $0x1C99,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x20(%rbp)
	jmp L_172626
.p2align 0x4
.long 0x9AE
L_172514:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_172515
L_172516:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_172517+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_172517
.p2align 0x4
.long 0x4B5
L_172517:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_172515:
	movq $0x1D45,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x10(%r15)
	movq $0x1D33,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x20,%r12
	movq 0x48(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x40(%rbp),%r15
	movq %r15,0x10(%r14)
	movq $0x1D39,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x23C7
L_173501:
	addq $0xFFFFFFFFFFFFFED0,%rbp
	movq 0x130(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq %r15,0xC0(%rbp)
	movq 0x120(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC0,%rbp
	leaq (L_173502+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1266
.p2align 0x4
.long 0x23C2
L_173478:
	addq $0xFFFFFFFFFFFFFCC8,%rbp
	movq 0x338(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq %r15,0x338(%rbp)
	movq $0x101,0x340(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x348(%rbp)
	addq $0x338,%rbp
	leaq (L_173479+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x23AF
L_173469:
	addq $0xFFFFFFFFFFFFFCC8,%rbp
	movq 0x338(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq %r15,0xC0(%rbp)
	movq 0x328(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC0,%rbp
	leaq (L_173470+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1473
.p2align 0x4
.long 0x23D1
L_174402:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movl 0xC0(%rbp),%r15d
	movl %r15d,0x5C(%rbp)
	movl %r15d,0xC0(%rbp)
	movq $0x3,0xC8(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (L_174403+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x2388
L_173565:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movl 0xC0(%rbp),%r15d
	movl %r15d,0x5C(%rbp)
	movl %r15d,0xC0(%rbp)
	movq $0x3,0xC8(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (L_173566+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x2377
word_51:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_174230
L_174231:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_174232+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_174232
.p2align 0x4
.long 0x23C8
L_174232:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_174230:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x20(%rbp)
	addq $0x10,%r12
	jmp L_172626
.p2align 0x4
.long 0x23FC
L_174236:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq %r15,0xC0(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (word_51+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x23F6
L_174136:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movl 0xC0(%rbp),%r15d
	movl %r15d,0x5C(%rbp)
	movl %r15d,0xC0(%rbp)
	movq $0x3,0xC8(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (L_174137+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x23FB
L_174146:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x60(%rbp),%r14
	jmp L_174134
.p2align 0x4
.long 0x23EF
L_174060:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movl 0xC0(%rbp),%r15d
	movl %r15d,0x5C(%rbp)
	movl %r15d,0xC0(%rbp)
	movq $0x3,0xC8(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (L_174061+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x23EA
L_174001:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_174002
L_174003:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_174004+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_174004
.p2align 0x4
.long 0x23EB
L_174004:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_174002:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x20(%rbp)
	addq $0x10,%r12
	jmp L_172626
.p2align 0x4
.long 0x239E
L_173933:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movl 0xC0(%rbp),%r15d
	movl %r15d,0x5C(%rbp)
	movl %r15d,0xC0(%rbp)
	movq $0x3,0xC8(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (L_173934+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x23E7
L_173943:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x60(%rbp),%r14
	jmp L_173931
.p2align 0x4
.long 0x239E
L_173884:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movl 0xC0(%rbp),%r15d
	movl %r15d,0x5C(%rbp)
	movl %r15d,0xC0(%rbp)
	movq $0x3,0xC8(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (L_173885+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x23E7
L_173894:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x60(%rbp),%r14
	jmp L_173882
.p2align 0x4
.long 0x23DA
L_173761:
	addq $0xFFFFFFFFFFFFFE08,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x1F8(%rbp)
	movq 0x1E0(%rbp),%r15
	movq %r15,0x200(%rbp)
	addq $0x1F8,%rbp
	leaq (L_173762+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromIntInf_0
.p2align 0x4
.long 0x23DF
L_173808:
	addq $0xFFFFFFFFFFFFFE18,%rbp
	leaq L_173839(%rip),%r15
	movq %r15,0x10(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x1E8(%rbp)
	movq 0x1D0(%rbp),%r15
	movq %r15,0x1F0(%rbp)
	addq $0x1E8,%rbp
	leaq (L_173809+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromIntInf_1
.p2align 0x4
.long 0x23D6
L_173713:
	addq $0xFFFFFFFFFFFFFDE8,%rbp
	movl 0x218(%rbp),%r15d
	movl %r15d,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_173714
L_173722:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x218,%rbp
	leaq (L_173723+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_173723
.p2align 0x4
.long 0x23D8
L_173723:
	addq $0xFFFFFFFFFFFFFDE8,%rbp
L_173714:
	movl 0x60(%rbp),%r15d
	movl 0x5C(%rbp),%r14d
	subl %r14d,%r15d
	movq $0x343,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movl %r15d,0x0(%r13)
	addq $0x10,%r12
	movl %r14d,0x4(%r13)
	movq %r13,0xC0(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq 0x208(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (L_173715+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp swap_0
.p2align 0x4
.long 0x23D6
L_173673:
	addq $0xFFFFFFFFFFFFFDE8,%rbp
	movl 0x218(%rbp),%r15d
	movl %r15d,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_173674
L_173682:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x218,%rbp
	leaq (L_173683+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_173683
.p2align 0x4
.long 0x23D8
L_173683:
	addq $0xFFFFFFFFFFFFFDE8,%rbp
L_173674:
	movl 0x60(%rbp),%r15d
	movl 0x5C(%rbp),%r14d
	subl %r14d,%r15d
	movq $0x343,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movl %r15d,0x4(%r13)
	addq $0x10,%r12
	movl %r14d,0x0(%r13)
	movq %r13,0xC0(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq 0x208(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (L_173675+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp swap_0
.p2align 0x4
.long 0x23D1
L_173608:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movl 0xC0(%rbp),%r15d
	movl %r15d,0x5C(%rbp)
	movl %r15d,0xC0(%rbp)
	movq $0x3,0xC8(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (L_173609+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x240D
L_174755:
	addq $0xFFFFFFFFFFFFFCC8,%rbp
	movq 0x338(%rbp),%r15
	movq %r15,0x70(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_174756
L_174768:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x338,%rbp
	leaq (L_174769+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_174769
.p2align 0x4
.long 0x2410
L_174769:
	addq $0xFFFFFFFFFFFFFCC8,%rbp
L_174756:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x340(%rbp)
	movl $0x1,0x338(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x348(%rbp)
	movq 0x220(%rbp),%r15
	movq %r15,0x350(%rbp)
	addq $0x338,%rbp
	leaq (L_174757+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp rshift_0
.p2align 0x4
.long 0x240A
L_174688:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq %r15,0xC0(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (L_174689+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x2379
L_174542:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
	movq 0x148(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_174543
L_174544:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x148,%rbp
	leaq (L_174545+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_174545
.p2align 0x4
.long 0x2407
L_174545:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
L_174543:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x138(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x20(%rbp)
	addq $0x10,%r12
	jmp L_172626
.p2align 0x4
.long 0x2404
L_174505:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq %r15,0xC0(%rbp)
	movq $0x1,0xC8(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (L_174506+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x23A9
L_173102:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%rsi
	movq %rsi,0x38(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0x70(%rbp),%rdi
	xorq %rax,%rax
	call IntInf_equal
L_173103:
	testl %eax,%eax
	jz L_172504
L_173105:
	movq 0x68(%rbp),%r15
	movq %r15,0x20(%rbp)
	jmp L_172582
.p2align 0x4
.long 0x2374
L_172915:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_172916
L_172917:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_172918+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_172918
.p2align 0x4
.long 0x2371
L_172918:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_172916:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x20(%rbp)
	addq $0x10,%r12
	jmp L_172626
.p2align 0x4
.long 0x2386
L_172924:
	addq $0xFFFFFFFFFFFFFD00,%rbp
	movq 0x300(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x68(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x308(%rbp)
	movq 0x128(%rbp),%r15
	movq %r15,0x300(%rbp)
	addq $0x300,%rbp
	leaq (L_172925+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_0
.p2align 0x4
.long 0x239E
L_173060:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x70(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xC0,%rbp
	leaq (L_173061+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x23A5
L_173073:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq $0x3,0xC0(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (L_173060+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x239E
L_173078:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq $0x1,0x78(%rbp)
L_173079:
	movq 0x70(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xC0,%rbp
	leaq (L_173080+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x23A5
L_173092:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq $0x3,0xC0(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (L_173093+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x238A
L_173018:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_173019
L_173023:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_173024+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_173024
.p2align 0x4
.long 0x238B
L_173024:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_173019:
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0x70(%rbp),%rsi
	movq 0x60(%rbp),%rdi
	xorq %rax,%rax
	call IntInf_equal
L_173020:
	testl %eax,%eax
	jz L_172504
L_173022:
	movq $0x1C95,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x20(%rbp)
	jmp L_172626
.p2align 0x4
.long 0x2390
L_172972:
	addq $0xFFFFFFFFFFFFFDF8,%rbp
	movq 0x208(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq %r15,0x208(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x210(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0x218(%rbp)
	addq $0x208,%rbp
	leaq (L_172973+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x238D
L_172960:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x70(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_172961
L_172966:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_172967+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_172967
.p2align 0x4
.long 0x238B
L_172967:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_172961:
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0x70(%rbp),%rsi
	movq 0x60(%rbp),%rdi
	xorq %rax,%rax
	call IntInf_equal
L_172962:
	testl %eax,%eax
	jnz L_172965
	jmp L_172504
.p2align 0x4
.long 0x238A
L_172943:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_172944
L_172950:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_172951+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_172951
.p2align 0x4
.long 0x238B
L_172951:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_172944:
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0x70(%rbp),%rsi
	movq 0x60(%rbp),%rdi
	xorq %rax,%rax
	call IntInf_equal
L_172945:
	testl %eax,%eax
	jz L_172504
L_172947:
	movl 0x5C(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_172504
L_172948:
	movq $0x1C95,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x20(%rbp)
	jmp L_172626
.p2align 0x4
.long 0x237F
L_172795:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_172796
L_172891:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_172892+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_172892
.p2align 0x4
.long 0x2383
L_172892:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_172796:
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0x78(%rbp),%rsi
	movq 0x60(%rbp),%rdi
	xorq %rax,%rax
	call IntInf_equal
L_172797:
	testl %eax,%eax
	jz L_172504
L_172799:
	movq $0x2437,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq 0x38(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r13,0x38(%rbp)
	movq $0x282B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq %r15,0x28(%rbp)
	xorl %ecx,%ecx
	movq $0x1,%r13
	jmp L_172800
.p2align 0x4
.long 0x2374
L_172709:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_172710
L_172711:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_172712+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_172712
.p2align 0x4
.long 0x2371
L_172712:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_172710:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x20(%rbp)
	addq $0x10,%r12
	jmp L_172626
.p2align 0x4
.long 0x2374
L_172702:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_172703
L_172704:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_172705+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_172705
.p2align 0x4
.long 0x2371
L_172705:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_172703:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x20(%rbp)
	addq $0x10,%r12
	jmp L_172626
.p2align 0x4
.long 0x2374
L_172695:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_172696
L_172697:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_172698+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_172698
.p2align 0x4
.long 0x2371
L_172698:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_172696:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x20(%rbp)
	addq $0x10,%r12
	jmp L_172626
.p2align 0x4
.long 0x2374
L_172688:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_172689
L_172690:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_172691+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_172691
.p2align 0x4
.long 0x2371
L_172691:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_172689:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x20(%rbp)
	addq $0x10,%r12
	jmp L_172626
.p2align 0x4
.long 0x2374
L_172681:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_172682
L_172683:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_172684+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_172684
.p2align 0x4
.long 0x2371
L_172684:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_172682:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x20(%rbp)
	addq $0x10,%r12
	jmp L_172626
.p2align 0x4
.long 0x237B
L_172762:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
	movq 0x148(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_172763
L_172764:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x148,%rbp
	leaq (L_172765+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_172765
.p2align 0x4
.long 0x237C
L_172765:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
L_172763:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x138(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x20(%rbp)
	addq $0x10,%r12
	jmp L_172626
.p2align 0x4
.long 0x2378
L_172745:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq %r15,0xC0(%rbp)
	movq $0x1,0xC8(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (L_172746+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x2377
L_173288:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movl 0xC0(%rbp),%r15d
	movl %r15d,0x5C(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_173289
L_173292:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_173293+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_173293
.p2align 0x4
.long 0x23B0
L_173293:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_173289:
	movl 0x5C(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_172504
L_173290:
	movq $0x1C99,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x20(%rbp)
	jmp L_172626
.p2align 0x4
.long 0x23BB
L_173362:
	addq $0xFFFFFFFFFFFFFED0,%rbp
	movq 0x130(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq %r15,0xC0(%rbp)
	movq 0x120(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC0,%rbp
	leaq (L_173363+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1266
.p2align 0x4
.long 0x23B5
L_173339:
	addq $0xFFFFFFFFFFFFFCC8,%rbp
	movq 0x338(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq %r15,0x338(%rbp)
	movq $0x101,0x340(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x348(%rbp)
	addq $0x338,%rbp
	leaq (L_173340+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x23AF
L_173330:
	addq $0xFFFFFFFFFFFFFCC8,%rbp
	movq 0x338(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq %r15,0xC0(%rbp)
	movq 0x328(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC0,%rbp
	leaq (L_173331+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1473
.p2align 0x4
.long 0x51A
L_175701:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq $0x1,%r15
	je L_452751
L_175702:
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_452750
L_175703:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x28(%rbp)
	movq %r14,0x30(%rbp)
	movq $0x1,0x38(%rbp)
.p2align 0x4,,0x7
L_175704:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_452749
.p2align 0x4,,0x7
L_175705:
	movq $0x1D39,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_452746
L_175706:
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x30(%rbp)
	jmp L_175704
.p2align 0x4
L_452746:
L_175707:
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x20(%rbp)
.p2align 0x4,,0x7
L_175708:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_452748
.p2align 0x4,,0x7
L_175709:
	movq $0x1D39,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_452747
L_175710:
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x28(%rbp)
	jmp L_175708
.p2align 0x4
L_452747:
L_175711:
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_452748:
L_175712:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_175713+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_175713
.p2align 0x4
.long 0x4FC
L_175713:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_175709
.p2align 0x4
L_452749:
L_175714:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_175715+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_175715
.p2align 0x4
.long 0x5EE
L_175715:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_175705
.p2align 0x4
L_452750:
L_175716:
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_452751:
L_175717:
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x236D
L_173502:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_172626
.p2align 0x4
.long 0x23C3
L_173479:
	addq $0xFFFFFFFFFFFFFCC8,%rbp
	movq 0x338(%rbp),%r15
	movq %r15,0x78(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_173480
L_173492:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x338,%rbp
	leaq (L_173493+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_173493
.p2align 0x4
.long 0x23B9
L_173493:
	addq $0xFFFFFFFFFFFFFCC8,%rbp
L_173480:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x128(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x340(%rbp)
	movl $0x0,0x338(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x348(%rbp)
	movq 0x130(%rbp),%r15
	movq %r15,0x350(%rbp)
	addq $0x338,%rbp
	leaq (L_173481+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1479
.p2align 0x4
.long 0x2377
L_173470:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movl 0xC0(%rbp),%r15d
	movl %r15d,0x5C(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_173471
L_173474:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_173475+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_173475
.p2align 0x4
.long 0x23B0
L_173475:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_173471:
	movl 0x5C(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_172504
L_173472:
	movq $0x1C99,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x20(%rbp)
	jmp L_172626
.p2align 0x4
.long 0x23D2
L_174403:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq %r15,0xC0(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (L_174404+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x238C
L_173566:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq %r15,0xC0(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (L_173567+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x23F7
L_174137:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq %r15,0xC0(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (L_174138+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x23F0
L_174061:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq %r15,0xC0(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (L_174062+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x23A2
L_173934:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq %r15,0xC0(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (L_173935+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x23A2
L_173885:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq %r15,0xC0(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (L_173886+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x23DB
L_173762:
	addq $0xFFFFFFFFFFFFFE08,%rbp
	movsd 0x1F8(%rbp),%xmm15
	movsd %xmm15,0x60(%rbp)
	movb 0x5C(%rbp),%r15b
	movb %r15b,0x1F8(%rbp)
	addq $0x1F8,%rbp
	leaq (L_173763+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp setRoundingMode_0
.p2align 0x4
.long 0x23E0
L_173809:
	addq $0xFFFFFFFFFFFFFE18,%rbp
	movss 0x1E8(%rbp),%xmm15
	movss %xmm15,0x60(%rbp)
	leaq L_173825(%rip),%r15
	movq %r15,0x10(%rbp)
	movb 0x5C(%rbp),%r15b
	movb %r15b,0x1E8(%rbp)
	addq $0x1E8,%rbp
	leaq (L_173810+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp setRoundingMode_0
.p2align 0x4
.long 0x23D7
L_173715:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0xA8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xC0,%rbp
	leaq (L_173716+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x23D7
L_173675:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0xA8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xC0,%rbp
	leaq (L_173676+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x23D2
L_173609:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq %r15,0xC0(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (L_173610+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x240E
L_174757:
	addq $0xFFFFFFFFFFFFFCC8,%rbp
	movq 0x338(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x340(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_174758
L_174766:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x338,%rbp
	leaq (L_174767+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_174767
.p2align 0x4
.long 0x240F
L_174767:
	addq $0xFFFFFFFFFFFFFCC8,%rbp
L_174758:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x338(%rbp)
	movq 0x1C8(%rbp),%r15
	movq %r15,0x340(%rbp)
	addq $0x338,%rbp
	leaq (L_174759+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toIntInfX_0
.p2align 0x4
.long 0x23CB
L_174689:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_174690
L_174691:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_174692+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_174692
.p2align 0x4
.long 0x23C8
L_174692:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_174690:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x20(%rbp)
	addq $0x10,%r12
	jmp L_172626
.p2align 0x4
.long 0x2377
L_174506:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_174507
L_174508:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_174509+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_174509
.p2align 0x4
.long 0x23C8
L_174509:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_174507:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x20(%rbp)
	addq $0x10,%r12
	jmp L_172626
.p2align 0x4
.long 0x2387
L_172925:
	addq $0xFFFFFFFFFFFFFD00,%rbp
	movl 0x300(%rbp),%r15d
	movl %r15d,0x5C(%rbp)
	testl %r15d,%r15d
	jnz L_452758
L_172926:
	movq (globalObjptr+0x19C8)(%rip),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (bug_456+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_452758:
L_172930:
	movq 0x60(%rbp),%r15
	movq %r15,%r14
	movq 0x78(%rbp),%r13
	andq %r13,%r14
	andq $0x1,%r14
	jz L_452760
L_172931:
	cmpq %r15,%r13
	jl L_172504
L_172932:
	movq 0x70(%rbp),%r15
	movq %r15,0x20(%rbp)
	jmp zero_5
.p2align 0x4
L_452760:
L_172934:
	movq (c_stackP+0x0)(%rip),%rsp
	movq %r15,%rsi
	movq %r13,%rdi
	xorq %rax,%rax
	call IntInf_compare
L_172935:
	cmpl $0x0,%eax
	jl L_172504
L_172936:
	movq 0x70(%rbp),%r15
	movq %r15,0x20(%rbp)
	jmp zero_5
.p2align 0x4
.long 0x239F
L_173061:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movl 0xC0(%rbp),%r15d
	movl %r15d,0x5C(%rbp)
	movl %r15d,0xC0(%rbp)
	movq $0x3,0xC8(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (L_173062+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x239F
L_173080:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movl 0xC0(%rbp),%r15d
	movl %r15d,0x5C(%rbp)
	movl %r15d,0xC0(%rbp)
	movq $0x3,0xC8(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (L_173081+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x23A6
L_173093:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x78(%rbp)
	jmp L_173079
.p2align 0x4
.long 0x2391
L_172973:
	addq $0xFFFFFFFFFFFFFDF8,%rbp
	movq 0x208(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x1F8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq %r15,0xD0(%rbp)
	addq $0xC8,%rbp
	leaq (L_172974+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_0
.p2align 0x4
.long 0x2374
L_172746:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_172747
L_172748:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_172749+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_172749
.p2align 0x4
.long 0x2371
L_172749:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_172747:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x20(%rbp)
	addq $0x10,%r12
	jmp L_172626
.p2align 0x4
.long 0x23BC
L_173363:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x20(%rbp)
	jmp L_172626
.p2align 0x4
.long 0x23B6
L_173340:
	addq $0xFFFFFFFFFFFFFCC8,%rbp
	movq 0x338(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_173341
L_173353:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x338,%rbp
	leaq (L_173354+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_173354
.p2align 0x4
.long 0x23B9
L_173354:
	addq $0xFFFFFFFFFFFFFCC8,%rbp
L_173341:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x128(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x340(%rbp)
	movl $0x0,0x338(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x348(%rbp)
	movq 0x130(%rbp),%r15
	movq %r15,0x350(%rbp)
	addq $0x338,%rbp
	leaq (L_173342+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1479
.p2align 0x4
.long 0x2377
L_173331:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movl 0xC0(%rbp),%r15d
	movl %r15d,0x5C(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_173332
L_173335:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_173336+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_173336
.p2align 0x4
.long 0x23B0
L_173336:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_173332:
	movl 0x5C(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_172504
L_173333:
	movq $0x1C99,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x20(%rbp)
	jmp L_172626
.p2align 0x4
.long 0x23C4
L_173481:
	addq $0xFFFFFFFFFFFFFCC8,%rbp
	movl 0x338(%rbp),%r15d
	movl %r15d,0x5C(%rbp)
	testl %r15d,%r15d
	jz L_172504
L_173483:
	movq 0x68(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x338(%rbp)
	addq $0x338,%rbp
	leaq (L_173484+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x23D3
L_174404:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_174405
L_174406:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_174407+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_174407
.p2align 0x4
.long 0x23D4
L_174407:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_174405:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x80(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x20(%rbp)
	addq $0x10,%r12
	jmp L_172626
.p2align 0x4
.long 0x23CB
L_173567:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_173568
L_173569:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_173570+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_173570
.p2align 0x4
.long 0x23C8
L_173570:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_173568:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x20(%rbp)
	addq $0x10,%r12
	jmp L_172626
.p2align 0x4
.long 0x23F8
L_174138:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_174139
L_174140:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_174141+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_174141
.p2align 0x4
.long 0x23F9
L_174141:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_174139:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x88(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x20(%rbp)
	addq $0x10,%r12
	jmp L_172626
.p2align 0x4
.long 0x2398
L_174062:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_174063
L_174064:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_174065+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_174065
.p2align 0x4
.long 0x23F1
L_174065:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_174063:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x20(%rbp)
	addq $0x10,%r12
	jmp L_172626
.p2align 0x4
.long 0x23E4
L_173935:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_173936
L_173937:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_173938+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_173938
.p2align 0x4
.long 0x23E5
L_173938:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_173936:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x90(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x20(%rbp)
	addq $0x10,%r12
	jmp L_172626
.p2align 0x4
.long 0x23E4
L_173886:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_173887
L_173888:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_173889+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_173889
.p2align 0x4
.long 0x23E5
L_173889:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_173887:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x90(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x20(%rbp)
	addq $0x10,%r12
	jmp L_172626
.p2align 0x4
.long 0x23DB
L_173763:
	addq $0xFFFFFFFFFFFFFE08,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_173764
L_173776:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1F8,%rbp
	leaq (L_173777+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_173777
.p2align 0x4
.long 0x23DC
L_173777:
	addq $0xFFFFFFFFFFFFFE08,%rbp
L_173764:
	movsd 0x60(%rbp),%xmm15
	movsd 0x68(%rbp),%xmm14
	ucomisd %xmm15,%xmm14
	setnp %al
	movzbl %al,%eax
	setc %bl
	movzbl %bl,%ebx
	andl %eax,%ebx
	jnz L_452777
L_173765:
	ucomisd %xmm14,%xmm15
	setnp %al
	movzbl %al,%eax
	setc %bl
	movzbl %bl,%ebx
	andl %eax,%ebx
	jnz L_452776
L_173766:
	ucomisd %xmm15,%xmm14
	setnp %al
	movzbl %al,%eax
	setz %bl
	movzbl %bl,%ebx
	andl %eax,%ebx
	jnz L_452775
L_173767:
	xorb %dl,%dl
L_173768:
	cmpb $0x2,%dl
	jne L_172504
L_173770:
	movsd 0x68(%rbp),%xmm15
	movd %xmm15,%r15
	movq 0x1E8(%rbp),%r14
	movq 0x10(%r14),%r13
	andq %r13,%r15
	cmpq %r15,%r13
	sete %al
	movzbl %al,%eax
	movsd 0x60(%rbp),%xmm14
	movd %xmm14,%r15
	andq %r13,%r15
	cmpq %r15,%r13
	sete %bl
	movzbl %bl,%ebx
	cmpl %eax,%ebx
	jne L_172504
L_173772:
	movq $0x1C8F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movsd %xmm15,%xmm14
	movsd %xmm14,0x0(%r15)
real_23:
	movq $0x1C97,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x20(%rbp)
	addq $0x10,%r12
	jmp L_172626
.p2align 0x4
L_452775:
L_173773:
	movb $0x2,%dl
	jmp L_173768
.p2align 0x4
L_452776:
L_173774:
	movb $0x1,%dl
	jmp L_173768
.p2align 0x4
L_452777:
L_173775:
	movb $0x3,%dl
	jmp L_173768
.p2align 0x4
.long 0x23E0
L_173810:
	addq $0xFFFFFFFFFFFFFE18,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_173811
L_173823:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1E8,%rbp
	leaq (L_173824+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_173824
.p2align 0x4
.long 0x23E1
L_173824:
	addq $0xFFFFFFFFFFFFFE18,%rbp
L_173811:
	movss 0x60(%rbp),%xmm15
	movss 0x68(%rbp),%xmm14
	ucomiss %xmm15,%xmm14
	setnp %al
	movzbl %al,%eax
	setc %bl
	movzbl %bl,%ebx
	andl %eax,%ebx
	jnz L_452783
L_173812:
	ucomiss %xmm14,%xmm15
	setnp %al
	movzbl %al,%eax
	setc %bl
	movzbl %bl,%ebx
	andl %eax,%ebx
	jnz L_452782
L_173813:
	ucomiss %xmm14,%xmm15
	setnp %al
	movzbl %al,%eax
	setz %bl
	movzbl %bl,%ebx
	andl %eax,%ebx
	jnz L_452781
L_173814:
	xorb %dl,%dl
L_173815:
	cmpb $0x2,%dl
	jne L_172504
L_173817:
	movss 0x68(%rbp),%xmm15
	movd %xmm15,%r14d
	movq 0x1D8(%rbp),%r13
	movl 0xC(%r13),%r11d
	andl %r11d,%r14d
	cmpl %r11d,%r14d
	sete %al
	movzbl %al,%eax
	movss 0x60(%rbp),%xmm14
	movd %xmm14,%r14d
	andl %r11d,%r14d
	cmpl %r14d,%r11d
	sete %bl
	movzbl %bl,%ebx
	cmpl %eax,%ebx
	jne L_172504
L_173819:
	movd %xmm15,%r14d
	movl %r14d,%r15d
	shlq $0x1,%r15
	orq $0x1,%r15
	jmp real_23
.p2align 0x4
L_452781:
L_173820:
	movb $0x2,%dl
	jmp L_173815
.p2align 0x4
L_452782:
L_173821:
	movb $0x1,%dl
	jmp L_173815
.p2align 0x4
L_452783:
L_173822:
	movb $0x3,%dl
	jmp L_173815
.p2align 0x4
.long 0x2388
L_173716:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movl 0xC0(%rbp),%r15d
	movl %r15d,0x5C(%rbp)
	movl %r15d,0xC0(%rbp)
	movq $0x3,0xC8(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (L_173717+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x2388
L_173676:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movl 0xC0(%rbp),%r15d
	movl %r15d,0x5C(%rbp)
	movl %r15d,0xC0(%rbp)
	movq $0x3,0xC8(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (L_173677+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x23D3
L_173610:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_173611
L_173612:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_173613+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_173613
.p2align 0x4
.long 0x23D4
L_173613:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_173611:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x80(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x20(%rbp)
	addq $0x10,%r12
	jmp L_172626
.p2align 0x4
.long 0x23AF
L_174759:
	addq $0xFFFFFFFFFFFFFCC8,%rbp
	movq 0x338(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq %r15,0xC0(%rbp)
	movq 0x328(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC0,%rbp
	leaq (L_174760+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1473
.p2align 0x4
.long 0x473
bug_456:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_172927
L_172928:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_172929+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_172929
.p2align 0x4
.long 0x49D
L_172929:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_172927:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x23A0
L_173062:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq %r15,0xC0(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (L_173063+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x23A0
L_173081:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq %r15,0xC0(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (L_173082+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x2392
L_172974:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movl 0xC8(%rbp),%r15d
	movl %r15d,0x5C(%rbp)
	testl %r15d,%r15d
	jnz L_452787
L_172975:
	movq (globalObjptr+0x1988)(%rip),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (bug_457+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_452787:
L_172979:
	movq 0x68(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0xD0(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0xD8(%rbp)
	addq $0xC8,%rbp
	leaq (L_172980+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigRem_0
.p2align 0x4
.long 0x23B7
L_173342:
	addq $0xFFFFFFFFFFFFFCC8,%rbp
	movl 0x338(%rbp),%r15d
	movl %r15d,0x5C(%rbp)
	testl %r15d,%r15d
	jz L_172504
L_173344:
	movq 0x60(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x338(%rbp)
	addq $0x338,%rbp
	leaq (L_173345+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x23C5
L_173484:
	addq $0xFFFFFFFFFFFFFCC8,%rbp
	movl 0x338(%rbp),%r15d
	movl %r15d,0x5C(%rbp)
	movl %r15d,0x338(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x340(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x348(%rbp)
	addq $0x338,%rbp
	leaq (L_173485+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x238C
L_173717:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq %r15,0xC0(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (L_173718+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x238C
L_173677:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq %r15,0xC0(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (L_173678+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x2377
L_174760:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movl 0xC0(%rbp),%r15d
	movl %r15d,0x5C(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_174761
L_174764:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_174765+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_174765
.p2align 0x4
.long 0x23B0
L_174765:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_174761:
	movl 0x5C(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_172504
L_174762:
	movq $0x1C99,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x20(%rbp)
	jmp L_172626
.p2align 0x4
.long 0x23A1
L_173063:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq %r15,0xC8(%rbp)
	addq $0xC0,%rbp
	leaq (L_173064+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_0
.p2align 0x4
.long 0x23A1
L_173082:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq %r15,0xC8(%rbp)
	addq $0xC0,%rbp
	leaq (L_173083+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_0
.p2align 0x4
.long 0x473
bug_457:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_172976
L_172977:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_172978+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_172978
.p2align 0x4
.long 0x49D
L_172978:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_172976:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x2393
L_172980:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x78(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC8,%rbp
	leaq (L_172981+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x23B8
L_173345:
	addq $0xFFFFFFFFFFFFFCC8,%rbp
	movl 0x338(%rbp),%r15d
	movl %r15d,0x5C(%rbp)
	movl %r15d,0x338(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x340(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x348(%rbp)
	addq $0x338,%rbp
	leaq (L_173346+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x23AF
L_173485:
	addq $0xFFFFFFFFFFFFFCC8,%rbp
	movq 0x338(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq %r15,0xC0(%rbp)
	movq 0x328(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC0,%rbp
	leaq (L_173486+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1473
.p2align 0x4
.long 0x23CB
L_173718:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_173719
L_173720:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_173721+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_173721
.p2align 0x4
.long 0x23C8
L_173721:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_173719:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x20(%rbp)
	addq $0x10,%r12
	jmp L_172626
.p2align 0x4
.long 0x23CB
L_173678:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_173679
L_173680:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_173681+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_173681
.p2align 0x4
.long 0x23C8
L_173681:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_173679:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x20(%rbp)
	addq $0x10,%r12
	jmp L_172626
.p2align 0x4
.long 0x23A2
L_173064:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movl 0xC0(%rbp),%r15d
	movl %r15d,0x5C(%rbp)
	testl %r15d,%r15d
	jz L_172504
L_173066:
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0x60(%rbp),%r15
	movq 0x0(%r15),%rsi
	movq 0x70(%rbp),%rdi
	xorq %rax,%rax
	call IntInf_equal
L_173067:
	testl %eax,%eax
	jnz L_172758
	jmp L_172504
.p2align 0x4
.long 0x23A2
L_173083:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movl 0xC0(%rbp),%r15d
	movl %r15d,0x5C(%rbp)
	testl %r15d,%r15d
	jz L_172504
L_173085:
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0x60(%rbp),%r15
	movq 0x0(%r15),%rsi
	movq 0x70(%rbp),%rdi
	xorq %rax,%rax
	call IntInf_equal
L_173086:
	testl %eax,%eax
	jnz L_172758
	jmp L_172504
.p2align 0x4
.long 0x2394
L_172981:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movl 0xC8(%rbp),%r15d
	movl %r15d,0x5C(%rbp)
	movl %r15d,0xC8(%rbp)
	movq $0x3,0xD0(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0xD8(%rbp)
	addq $0xC8,%rbp
	leaq (L_172982+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x23AF
L_173346:
	addq $0xFFFFFFFFFFFFFCC8,%rbp
	movq 0x338(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq %r15,0xC0(%rbp)
	movq 0x328(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC0,%rbp
	leaq (L_173347+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1473
.p2align 0x4
.long 0x2377
L_173486:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movl 0xC0(%rbp),%r15d
	movl %r15d,0x5C(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_173487
L_173490:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_173491+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_173491
.p2align 0x4
.long 0x23B0
L_173491:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_173487:
	movl 0x5C(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_172504
L_173488:
	movq $0x1C99,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x20(%rbp)
	jmp L_172626
.p2align 0x4
.long 0x2395
L_172982:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq %r15,0xC8(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0xD0(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0xD8(%rbp)
	addq $0xC8,%rbp
	leaq (L_172983+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x2377
L_173347:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movl 0xC0(%rbp),%r15d
	movl %r15d,0x5C(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_173348
L_173351:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_173352+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_173352
.p2align 0x4
.long 0x23B0
L_173352:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_173348:
	movl 0x5C(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_172504
L_173349:
	movq $0x1C99,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x20(%rbp)
	jmp L_172626
.p2align 0x4
.long 0x2396
L_172983:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq $0x1,%r15
	jne L_172504
L_172985:
	movq 0x70(%rbp),%r15
	movq %r15,0x20(%rbp)
	jmp L_172582
