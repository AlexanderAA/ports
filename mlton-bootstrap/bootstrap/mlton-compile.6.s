/* MLton 20130715 (built Mon Jun 13 11:54:01 AEST 2016 on ports.extensibl.com) */
/*   created this file on Mon Jun 13 12:08:45 2016. */
/* Do not edit this file. */
/* Flag settings:  */
/*    align: 8 */
/*    atMLtons: (mlton-compile, @MLton, --) */
/*    chunk: chunk per function */
/*    closureConvertGlobalize: true */
/*    closureConvertShrink: true */
/*    codegen: amd64 */
/*    contifyIntoMain: false */
/*    debug: false */
/*    defaultChar: char8 */
/*    defaultWideChar: widechar32 */
/*    defaultInt: int32 */
/*    defaultReal: real64 */
/*    defaultWord: word32 */
/*    diag passes: [] */
/*    drop passes: [] */
/*    elaborate allowConstant (default): false */
/*    elaborate allowConstant (enabled): true */
/*    elaborate allowFFI (default): false */
/*    elaborate allowFFI (enabled): true */
/*    elaborate allowPrim (default): false */
/*    elaborate allowPrim (enabled): true */
/*    elaborate allowOverload (default): false */
/*    elaborate allowOverload (enabled): true */
/*    elaborate allowRebindEquals (default): false */
/*    elaborate allowRebindEquals (enabled): true */
/*    elaborate deadCode (default): false */
/*    elaborate deadCode (enabled): true */
/*    elaborate forceUsed (default): false */
/*    elaborate forceUsed (enabled): true */
/*    elaborate ffiStr (default):  */
/*    elaborate ffiStr (enabled): true */
/*    elaborate nonexhaustiveExnMatch (default): default */
/*    elaborate nonexhaustiveExnMatch (enabled): true */
/*    elaborate nonexhaustiveMatch (default): warn */
/*    elaborate nonexhaustiveMatch (enabled): true */
/*    elaborate redundantMatch (default): warn */
/*    elaborate redundantMatch (enabled): true */
/*    elaborate resolveScope (default): strdec */
/*    elaborate resolveScope (enabled): true */
/*    elaborate sequenceNonUnit (default): warn */
/*    elaborate sequenceNonUnit (enabled): true */
/*    elaborate warnUnused (default): true */
/*    elaborate warnUnused (enabled): true */
/*    elaborate only: false */
/*    emit main: true */
/*    export header: None */
/*    exn history: false */
/*    generated output format: executable */
/*    gc check: Limit */
/*    indentation: 3 */
/*    inlineIntoMain: true */
/*    inlineLeafA: {loops = true, repeat = true, size = Some 20} */
/*    inlineLeafB: {loops = true, repeat = true, size = Some 40} */
/*    inlineNonRec: {small = 60, product = 320} */
/*    input file: mlton */
/*    keep CoreML: false */
/*    keep def use: true */
/*    keep dot: false */
/*    keep Machine: false */
/*    keep passes: [] */
/*    keep RSSA: false */
/*    keep SSA: false */
/*    keep SSA2: false */
/*    keep SXML: false */
/*    keep XML: false */
/*    extra_: false */
/*    lib dir: /usr/ports/pobj/mlton-20130715/mlton-on-20130715-release/build/lib */
/*    lib target dir: /usr/ports/pobj/mlton-20130715/mlton-on-20130715-release/build/lib/targets/self */
/*    loop passes: 1 */
/*    mark cards: true */
/*    max function size: 10000 */
/*    mlb path vars: [{var = MLTON_ROOT, path = $(LIB_MLTON_DIR)/sml}, {var = SML_LIB, path = $(LIB_MLTON_DIR)/sml}] */
/*    native commented: 0 */
/*    native live stack: false */
/*    native optimize: 1 */
/*    native move hoist: true */
/*    native copy prop: true */
/*    native copy prop cutoff: 1000 */
/*    native cutoff: 100 */
/*    native live transfer: 8 */
/*    native shuffle: true */
/*    native ieee fp: false */
/*    native split: Some 20000 */
/*    optimizationPasses: [<ssa2::default>, <ssa::default>, <sxml::default>, <xml::default>] */
/*    polyvariance: Some {hofo = true, rounds = 2, small = 30, product = 300} */
/*    prefer abs paths: false */
/*    prof passes: [] */
/*    profile: None */
/*    profile branch: false */
/*    profile C: [] */
/*    profile IL: ProfileSource */
/*    profile include/exclude: [(Seq [Star [.], Or [Seq [Seq [[$], [(], [S], [M], [L], [_], [L], [I], [B], [)]]]], Star [.]], false)] */
/*    profile raise: false */
/*    profile stack: false */
/*    profile val: false */
/*    show basis: None */
/*    show def-use: None */
/*    show types: true */
/*    target: self */
/*    target arch: AMD64 */
/*    target OS: OpenBSD */
/*    type check: false */
/*    verbosity: Pass */
/*    warn unrecognized annotation: true */
/*    warn deprecated features: true */
/*    zone cut depth: 100 */
.text
.p2align 0x4
.globl qsort_2
.hidden qsort_2
qsort_2:
L_24195:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb loop_335
L_24254:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_24255+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_24255
.p2align 0x4
.long 0x2C
L_24255:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
loop_335:
	movl 0x0(%rbp),%r15d
	subl 0x4(%rbp),%r15d
	jo L_24197
L_24198:
	cmpl $0x14,%r15d
	jng L_382809
L_24200:
	movq (globalObjptr+0x550)(%rip),%r14
	movl 0x0(%r14),%r13d
	imull $0x19660D,%r13d
	addl $0x3C6EF35F,%r13d
	movl %r13d,0xC(%rbp)
	movl %r13d,0x0(%r14)
	incl %r15d
	movl %r15d,0x20(%rbp)
	jo L_382808
L_24201:
	movl %r15d,0x30(%rbp)
	movl %r13d,0x34(%rbp)
	addq $0x30,%rbp
	leaq (L_24202+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp div_0
.p2align 0x4
L_382808:
L_24197:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_382809:
L_24199:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x609
L_24202:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movl 0x30(%rbp),%r15d
	movl %r15d,0x24(%rbp)
	movl 0x20(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	movl 0xC(%rbp),%r15d
	movl %r15d,0x2C(%rbp)
	addq $0x28,%rbp
	leaq (L_24203+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp mod_0
.p2align 0x4
.long 0x490
L_24203:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl 0x28(%rbp),%r15d
	movl 0x4(%rbp),%ecx
	movl %ecx,%r14d
	addl %r15d,%r14d
	movl %r15d,0xC(%rbp)
	jo L_24197
L_24204:
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x0(%r15),%r11
	movq %r11,0x28(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movq %r15,0x30(%rbp)
	movslq %ecx,%r10
	movq %r10,0x38(%rbp)
	cmpq %r15,%r10
	jnb L_24206
L_24207:
	movq 0x0(%r13,%r10,8),%r9
	movslq %r14d,%r8
	cmpq %r15,%r8
	jnb L_24206
L_24209:
	movq 0x0(%r13,%r8,8),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r14
	movq %r14,0x40(%rbp)
	cmpq %r14,%r10
	jnb L_24206
L_24211:
	movq %r11,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r13,1)
	movq %r15,0x0(%r11,%r10,8)
	cmpq %r14,%r8
	jnb L_24206
L_24213:
	movq %r11,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%rsp,%r15,1)
	movq %r9,0x0(%r11,%r8,8)
	movq 0x10(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq %r14,0x48(%rbp)
	cmpq %r14,%r10
	jnb L_24206
L_24215:
	movq 0x0(%r15,%r10,8),%r14
	movq %r14,0x50(%rbp)
	movl 0x0(%rbp),%r15d
	incl %r15d
	jo L_24197
L_24216:
	movl %r15d,0xC(%rbp)
.p2align 0x4,,0x7
loop_337:
	incl %ecx
	movl %ecx,0x58(%rbp)
	jo L_24197
L_24217:
	movslq %ecx,%r15
	movq %r15,0x60(%rbp)
	cmpq 0x48(%rbp),%r15
	jnb L_24206
L_24219:
	movq 0x50(%rbp),%r14
	movl 0x0(%r14),%r13d
	movl %r13d,0x5C(%rbp)
	movq 0x10(%rbp),%r11
	movq 0x0(%r11,%r15,8),%r10
	movl 0x0(%r10),%r9d
	movq 0x20(%r14),%r8
	movq 0x8(%r8),%rsp
	movq %rsp,0x68(%rbp)
	movq 0x20(%r10),%r14
	movq 0x8(%r14),%r8
	movb 0x8(%rbp),%r15b
	testb %r15b,%r15b
	jz L_382824
L_24251:
	cmpl %r9d,%r13d
	jl L_382823
L_24252:
	movl 0xC(%rbp),%ecx
.p2align 0x4,,0x7
loop_338:
	decl %ecx
	movl %ecx,0xC(%rbp)
	jo L_24197
L_24224:
	movslq %ecx,%r15
	movq %r15,0x70(%rbp)
	cmpq 0x48(%rbp),%r15
	jnb L_24206
L_24226:
	movq 0x10(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movl 0x0(%r13),%r11d
	movq 0x20(%r13),%r10
	movq 0x8(%r10),%r9
	movb 0x8(%rbp),%r15b
	testb %r15b,%r15b
	jz L_382820
L_24248:
	cmpl 0x5C(%rbp),%r11d
	jnl L_382811
L_24250:
	jmp loop_338
.p2align 0x4
L_382811:
.p2align 0x4,,0x7
L_24231:
	movl 0x58(%rbp),%ecx
	cmpl %ecx,0xC(%rbp)
	jl L_382816
L_24232:
	movq 0x60(%rbp),%r15
	movq 0x30(%rbp),%r14
	cmpq %r14,%r15
	jnb L_24206
L_24234:
	movq 0x20(%rbp),%r13
	movq 0x0(%r13,%r15,8),%r11
	movq 0x70(%rbp),%r10
	cmpq %r14,%r10
	jnb L_24206
L_24236:
	movq 0x0(%r13,%r10,8),%r14
	movq 0x40(%rbp),%r13
	cmpq %r13,%r15
	jnb L_24206
L_24238:
	movq 0x28(%rbp),%r9
	movq %r9,%r8
	shrq $0x8,%r8
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r8,1)
	movq %r14,0x0(%r9,%r15,8)
	cmpq %r13,%r10
	jnb L_382812
L_24240:
	movq %r9,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%rsp,%r15,1)
	movq %r11,0x0(%r9,%r10,8)
	jmp loop_337
.p2align 0x4
L_382812:
L_24206:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_382816:
L_24241:
	movq 0x20(%rbp),%r15
	movq 0x38(%rbp),%r14
	movq 0x0(%r15,%r14,8),%r13
	movq 0x70(%rbp),%r11
	cmpq 0x30(%rbp),%r11
	jnb L_24206
L_24243:
	movq 0x0(%r15,%r11,8),%r10
	movq 0x28(%rbp),%r15
	movq %r15,%r9
	shrq $0x8,%r9
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r9,1)
	movq %r10,0x0(%r15,%r14,8)
	cmpq 0x40(%rbp),%r11
	jnb L_24206
L_24245:
	movq %r15,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r8,%r14,1)
	movq %r13,0x0(%r15,%r11,8)
	movl 0xC(%rbp),%r15d
	decl %r15d
	jo L_24197
L_24246:
	movl %r15d,0x68(%rbp)
	movl 0x4(%rbp),%r15d
	movl %r15d,0x6C(%rbp)
	movb 0x8(%rbp),%r15b
	movb %r15b,0x70(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x68,%rbp
	leaq (L_24247+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp qsort_2
.p2align 0x4
L_382820:
L_24227:
	movq %r9,0x88(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_24228+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1216
.p2align 0x4
L_382823:
L_24253:
	movl 0x58(%rbp),%ecx
	jmp loop_337
.p2align 0x4
L_382824:
L_24220:
	movq %r8,0x78(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_24221+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1216
.p2align 0x4
.long 0x60C
L_24247:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movl 0x58(%rbp),%r15d
	movl %r15d,0x4(%rbp)
	jmp loop_335
.p2align 0x4
.long 0x715
L_24228:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movl 0x80(%rbp),%r15d
	movl %r15d,0x78(%rbp)
	testl %r15d,%r15d
	jnz L_24231
L_24229:
	movl 0xC(%rbp),%ecx
	jmp loop_338
.p2align 0x4
.long 0x714
L_24221:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movl 0x78(%rbp),%r15d
	movl %r15d,0x70(%rbp)
	testl %r15d,%r15d
	jnz L_382835
L_24222:
	movl 0x58(%rbp),%ecx
	jmp loop_337
.p2align 0x4
L_382835:
L_24223:
	movl 0xC(%rbp),%ecx
	jmp loop_338
.text
.p2align 0x4
.globl qsort_3
.hidden qsort_3
qsort_3:
L_24256:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb loop_339
L_24315:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_24316+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_24316
.p2align 0x4
.long 0x2C
L_24316:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
loop_339:
	movl 0x0(%rbp),%r15d
	subl 0x4(%rbp),%r15d
	jo L_24258
L_24259:
	cmpl $0x14,%r15d
	jng L_382837
L_24261:
	movq (globalObjptr+0x550)(%rip),%r14
	movl 0x0(%r14),%r13d
	imull $0x19660D,%r13d
	addl $0x3C6EF35F,%r13d
	movl %r13d,0xC(%rbp)
	movl %r13d,0x0(%r14)
	incl %r15d
	movl %r15d,0x20(%rbp)
	jo L_382836
L_24262:
	movl %r15d,0x30(%rbp)
	movl %r13d,0x34(%rbp)
	addq $0x30,%rbp
	leaq (L_24263+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp div_0
.p2align 0x4
L_382836:
L_24258:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_382837:
L_24260:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x609
L_24263:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movl 0x30(%rbp),%r15d
	movl %r15d,0x24(%rbp)
	movl 0x20(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	movl 0xC(%rbp),%r15d
	movl %r15d,0x2C(%rbp)
	addq $0x28,%rbp
	leaq (L_24264+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp mod_0
.p2align 0x4
.long 0x490
L_24264:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl 0x28(%rbp),%r15d
	movl 0x4(%rbp),%ecx
	movl %ecx,%r14d
	addl %r15d,%r14d
	movl %r15d,0xC(%rbp)
	jo L_24258
L_24265:
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x0(%r15),%r11
	movq %r11,0x28(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movq %r15,0x30(%rbp)
	movslq %ecx,%r10
	movq %r10,0x38(%rbp)
	cmpq %r15,%r10
	jnb L_24267
L_24268:
	movq 0x0(%r13,%r10,8),%r9
	movslq %r14d,%r8
	cmpq %r15,%r8
	jnb L_24267
L_24270:
	movq 0x0(%r13,%r8,8),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r14
	movq %r14,0x40(%rbp)
	cmpq %r14,%r10
	jnb L_24267
L_24272:
	movq %r11,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r13,1)
	movq %r15,0x0(%r11,%r10,8)
	cmpq %r14,%r8
	jnb L_24267
L_24274:
	movq %r11,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%rsp,%r15,1)
	movq %r9,0x0(%r11,%r8,8)
	movq 0x10(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq %r14,0x48(%rbp)
	cmpq %r14,%r10
	jnb L_24267
L_24276:
	movq 0x0(%r15,%r10,8),%r14
	movq %r14,0x50(%rbp)
	movl 0x0(%rbp),%r15d
	incl %r15d
	jo L_24258
L_24277:
	movl %r15d,0xC(%rbp)
.p2align 0x4,,0x7
loop_341:
	incl %ecx
	movl %ecx,0x58(%rbp)
	jo L_24258
L_24278:
	movslq %ecx,%r15
	movq %r15,0x60(%rbp)
	cmpq 0x48(%rbp),%r15
	jnb L_24267
L_24280:
	movq 0x50(%rbp),%r14
	movl 0x0(%r14),%r13d
	movl %r13d,0x5C(%rbp)
	movq 0x10(%rbp),%r11
	movq 0x0(%r11,%r15,8),%r10
	movl 0x0(%r10),%r9d
	movq 0x20(%r14),%r8
	movq 0x8(%r8),%rsp
	movq %rsp,0x68(%rbp)
	movq 0x20(%r10),%r14
	movq 0x8(%r14),%r8
	movb 0x8(%rbp),%r15b
	testb %r15b,%r15b
	jz L_382852
L_24312:
	cmpl %r9d,%r13d
	jl L_382851
L_24313:
	movl 0xC(%rbp),%ecx
.p2align 0x4,,0x7
loop_342:
	decl %ecx
	movl %ecx,0xC(%rbp)
	jo L_24258
L_24285:
	movslq %ecx,%r15
	movq %r15,0x70(%rbp)
	cmpq 0x48(%rbp),%r15
	jnb L_24267
L_24287:
	movq 0x10(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movl 0x0(%r13),%r11d
	movq 0x20(%r13),%r10
	movq 0x8(%r10),%r9
	movb 0x8(%rbp),%r15b
	testb %r15b,%r15b
	jz L_382848
L_24309:
	cmpl 0x5C(%rbp),%r11d
	jnl L_382839
L_24311:
	jmp loop_342
.p2align 0x4
L_382839:
.p2align 0x4,,0x7
L_24292:
	movl 0x58(%rbp),%ecx
	cmpl %ecx,0xC(%rbp)
	jl L_382844
L_24293:
	movq 0x60(%rbp),%r15
	movq 0x30(%rbp),%r14
	cmpq %r14,%r15
	jnb L_24267
L_24295:
	movq 0x20(%rbp),%r13
	movq 0x0(%r13,%r15,8),%r11
	movq 0x70(%rbp),%r10
	cmpq %r14,%r10
	jnb L_24267
L_24297:
	movq 0x0(%r13,%r10,8),%r14
	movq 0x40(%rbp),%r13
	cmpq %r13,%r15
	jnb L_24267
L_24299:
	movq 0x28(%rbp),%r9
	movq %r9,%r8
	shrq $0x8,%r8
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r8,1)
	movq %r14,0x0(%r9,%r15,8)
	cmpq %r13,%r10
	jnb L_382840
L_24301:
	movq %r9,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%rsp,%r15,1)
	movq %r11,0x0(%r9,%r10,8)
	jmp loop_341
.p2align 0x4
L_382840:
L_24267:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_382844:
L_24302:
	movq 0x20(%rbp),%r15
	movq 0x38(%rbp),%r14
	movq 0x0(%r15,%r14,8),%r13
	movq 0x70(%rbp),%r11
	cmpq 0x30(%rbp),%r11
	jnb L_24267
L_24304:
	movq 0x0(%r15,%r11,8),%r10
	movq 0x28(%rbp),%r15
	movq %r15,%r9
	shrq $0x8,%r9
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r9,1)
	movq %r10,0x0(%r15,%r14,8)
	cmpq 0x40(%rbp),%r11
	jnb L_24267
L_24306:
	movq %r15,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r8,%r14,1)
	movq %r13,0x0(%r15,%r11,8)
	movl 0xC(%rbp),%r15d
	decl %r15d
	jo L_24258
L_24307:
	movl %r15d,0x68(%rbp)
	movl 0x4(%rbp),%r15d
	movl %r15d,0x6C(%rbp)
	movb 0x8(%rbp),%r15b
	movb %r15b,0x70(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x68,%rbp
	leaq (L_24308+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp qsort_3
.p2align 0x4
L_382848:
L_24288:
	movq %r9,0x88(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_24289+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1216
.p2align 0x4
L_382851:
L_24314:
	movl 0x58(%rbp),%ecx
	jmp loop_341
.p2align 0x4
L_382852:
L_24281:
	movq %r8,0x78(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_24282+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1216
.p2align 0x4
.long 0x60C
L_24308:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movl 0x58(%rbp),%r15d
	movl %r15d,0x4(%rbp)
	jmp loop_339
.p2align 0x4
.long 0x715
L_24289:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movl 0x80(%rbp),%r15d
	movl %r15d,0x78(%rbp)
	testl %r15d,%r15d
	jnz L_24292
L_24290:
	movl 0xC(%rbp),%ecx
	jmp loop_342
.p2align 0x4
.long 0x714
L_24282:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movl 0x78(%rbp),%r15d
	movl %r15d,0x70(%rbp)
	testl %r15d,%r15d
	jnz L_382863
L_24283:
	movl 0x58(%rbp),%ecx
	jmp loop_341
.p2align 0x4
L_382863:
L_24284:
	movl 0xC(%rbp),%ecx
	jmp loop_342
.text
.p2align 0x4
.globl qsort_4
.hidden qsort_4
qsort_4:
L_24317:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb loop_343
L_24376:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_24377+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_24377
.p2align 0x4
.long 0x2C
L_24377:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
loop_343:
	movl 0x0(%rbp),%r15d
	subl 0x4(%rbp),%r15d
	jo L_24319
L_24320:
	cmpl $0x14,%r15d
	jng L_382865
L_24322:
	movq (globalObjptr+0x550)(%rip),%r14
	movl 0x0(%r14),%r13d
	imull $0x19660D,%r13d
	addl $0x3C6EF35F,%r13d
	movl %r13d,0xC(%rbp)
	movl %r13d,0x0(%r14)
	incl %r15d
	movl %r15d,0x20(%rbp)
	jo L_382864
L_24323:
	movl %r15d,0x30(%rbp)
	movl %r13d,0x34(%rbp)
	addq $0x30,%rbp
	leaq (L_24324+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp div_0
.p2align 0x4
L_382864:
L_24319:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_382865:
L_24321:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x609
L_24324:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movl 0x30(%rbp),%r15d
	movl %r15d,0x24(%rbp)
	movl 0x20(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	movl 0xC(%rbp),%r15d
	movl %r15d,0x2C(%rbp)
	addq $0x28,%rbp
	leaq (L_24325+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp mod_0
.p2align 0x4
.long 0x490
L_24325:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl 0x28(%rbp),%r15d
	movl 0x4(%rbp),%ecx
	movl %ecx,%r14d
	addl %r15d,%r14d
	movl %r15d,0xC(%rbp)
	jo L_24319
L_24326:
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x0(%r15),%r11
	movq %r11,0x28(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movq %r15,0x30(%rbp)
	movslq %ecx,%r10
	movq %r10,0x38(%rbp)
	cmpq %r15,%r10
	jnb L_24328
L_24329:
	movq 0x0(%r13,%r10,8),%r9
	movslq %r14d,%r8
	cmpq %r15,%r8
	jnb L_24328
L_24331:
	movq 0x0(%r13,%r8,8),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r14
	movq %r14,0x40(%rbp)
	cmpq %r14,%r10
	jnb L_24328
L_24333:
	movq %r11,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r13,1)
	movq %r15,0x0(%r11,%r10,8)
	cmpq %r14,%r8
	jnb L_24328
L_24335:
	movq %r11,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%rsp,%r15,1)
	movq %r9,0x0(%r11,%r8,8)
	movq 0x10(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq %r14,0x48(%rbp)
	cmpq %r14,%r10
	jnb L_24328
L_24337:
	movq 0x0(%r15,%r10,8),%r14
	movq %r14,0x50(%rbp)
	movl 0x0(%rbp),%r15d
	incl %r15d
	jo L_24319
L_24338:
	movl %r15d,0xC(%rbp)
.p2align 0x4,,0x7
loop_345:
	incl %ecx
	movl %ecx,0x58(%rbp)
	jo L_24319
L_24339:
	movslq %ecx,%r15
	movq %r15,0x60(%rbp)
	cmpq 0x48(%rbp),%r15
	jnb L_24328
L_24341:
	movq 0x50(%rbp),%r14
	movl 0x0(%r14),%r13d
	movl %r13d,0x5C(%rbp)
	movq 0x10(%rbp),%r11
	movq 0x0(%r11,%r15,8),%r10
	movl 0x0(%r10),%r9d
	movq 0x20(%r14),%r8
	movq 0x8(%r8),%rsp
	movq %rsp,0x68(%rbp)
	movq 0x20(%r10),%r14
	movq 0x8(%r14),%r8
	movb 0x8(%rbp),%r15b
	testb %r15b,%r15b
	jz L_382880
L_24373:
	cmpl %r9d,%r13d
	jl L_382879
L_24374:
	movl 0xC(%rbp),%ecx
.p2align 0x4,,0x7
loop_346:
	decl %ecx
	movl %ecx,0xC(%rbp)
	jo L_24319
L_24346:
	movslq %ecx,%r15
	movq %r15,0x70(%rbp)
	cmpq 0x48(%rbp),%r15
	jnb L_24328
L_24348:
	movq 0x10(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movl 0x0(%r13),%r11d
	movq 0x20(%r13),%r10
	movq 0x8(%r10),%r9
	movb 0x8(%rbp),%r15b
	testb %r15b,%r15b
	jz L_382876
L_24370:
	cmpl 0x5C(%rbp),%r11d
	jnl L_382867
L_24372:
	jmp loop_346
.p2align 0x4
L_382867:
.p2align 0x4,,0x7
L_24353:
	movl 0x58(%rbp),%ecx
	cmpl %ecx,0xC(%rbp)
	jl L_382872
L_24354:
	movq 0x60(%rbp),%r15
	movq 0x30(%rbp),%r14
	cmpq %r14,%r15
	jnb L_24328
L_24356:
	movq 0x20(%rbp),%r13
	movq 0x0(%r13,%r15,8),%r11
	movq 0x70(%rbp),%r10
	cmpq %r14,%r10
	jnb L_24328
L_24358:
	movq 0x0(%r13,%r10,8),%r14
	movq 0x40(%rbp),%r13
	cmpq %r13,%r15
	jnb L_24328
L_24360:
	movq 0x28(%rbp),%r9
	movq %r9,%r8
	shrq $0x8,%r8
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r8,1)
	movq %r14,0x0(%r9,%r15,8)
	cmpq %r13,%r10
	jnb L_382868
L_24362:
	movq %r9,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%rsp,%r15,1)
	movq %r11,0x0(%r9,%r10,8)
	jmp loop_345
.p2align 0x4
L_382868:
L_24328:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_382872:
L_24363:
	movq 0x20(%rbp),%r15
	movq 0x38(%rbp),%r14
	movq 0x0(%r15,%r14,8),%r13
	movq 0x70(%rbp),%r11
	cmpq 0x30(%rbp),%r11
	jnb L_24328
L_24365:
	movq 0x0(%r15,%r11,8),%r10
	movq 0x28(%rbp),%r15
	movq %r15,%r9
	shrq $0x8,%r9
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r9,1)
	movq %r10,0x0(%r15,%r14,8)
	cmpq 0x40(%rbp),%r11
	jnb L_24328
L_24367:
	movq %r15,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r8,%r14,1)
	movq %r13,0x0(%r15,%r11,8)
	movl 0xC(%rbp),%r15d
	decl %r15d
	jo L_24319
L_24368:
	movl %r15d,0x68(%rbp)
	movl 0x4(%rbp),%r15d
	movl %r15d,0x6C(%rbp)
	movb 0x8(%rbp),%r15b
	movb %r15b,0x70(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x68,%rbp
	leaq (L_24369+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp qsort_4
.p2align 0x4
L_382876:
L_24349:
	movq %r9,0x88(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_24350+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1216
.p2align 0x4
L_382879:
L_24375:
	movl 0x58(%rbp),%ecx
	jmp loop_345
.p2align 0x4
L_382880:
L_24342:
	movq %r8,0x78(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_24343+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1216
.p2align 0x4
.long 0x60C
L_24369:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movl 0x58(%rbp),%r15d
	movl %r15d,0x4(%rbp)
	jmp loop_343
.p2align 0x4
.long 0x715
L_24350:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movl 0x80(%rbp),%r15d
	movl %r15d,0x78(%rbp)
	testl %r15d,%r15d
	jnz L_24353
L_24351:
	movl 0xC(%rbp),%ecx
	jmp loop_346
.p2align 0x4
.long 0x714
L_24343:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movl 0x78(%rbp),%r15d
	movl %r15d,0x70(%rbp)
	testl %r15d,%r15d
	jnz L_382891
L_24344:
	movl 0x58(%rbp),%ecx
	jmp loop_345
.p2align 0x4
L_382891:
L_24345:
	movl 0xC(%rbp),%ecx
	jmp loop_346
.text
.p2align 0x4
.globl qsort_5
.hidden qsort_5
qsort_5:
L_24378:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb loop_347
L_24437:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_24438+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_24438
.p2align 0x4
.long 0x2C
L_24438:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
loop_347:
	movl 0x0(%rbp),%r15d
	subl 0x4(%rbp),%r15d
	jo L_24380
L_24381:
	cmpl $0x14,%r15d
	jng L_382893
L_24383:
	movq (globalObjptr+0x550)(%rip),%r14
	movl 0x0(%r14),%r13d
	imull $0x19660D,%r13d
	addl $0x3C6EF35F,%r13d
	movl %r13d,0xC(%rbp)
	movl %r13d,0x0(%r14)
	incl %r15d
	movl %r15d,0x20(%rbp)
	jo L_382892
L_24384:
	movl %r15d,0x30(%rbp)
	movl %r13d,0x34(%rbp)
	addq $0x30,%rbp
	leaq (L_24385+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp div_0
.p2align 0x4
L_382892:
L_24380:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_382893:
L_24382:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x609
L_24385:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movl 0x30(%rbp),%r15d
	movl %r15d,0x24(%rbp)
	movl 0x20(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	movl 0xC(%rbp),%r15d
	movl %r15d,0x2C(%rbp)
	addq $0x28,%rbp
	leaq (L_24386+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp mod_0
.p2align 0x4
.long 0x490
L_24386:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl 0x28(%rbp),%r15d
	movl 0x4(%rbp),%ecx
	movl %ecx,%r14d
	addl %r15d,%r14d
	movl %r15d,0xC(%rbp)
	jo L_24380
L_24387:
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x0(%r15),%r11
	movq %r11,0x28(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movq %r15,0x30(%rbp)
	movslq %ecx,%r10
	movq %r10,0x38(%rbp)
	cmpq %r15,%r10
	jnb L_24389
L_24390:
	movq 0x0(%r13,%r10,8),%r9
	movslq %r14d,%r8
	cmpq %r15,%r8
	jnb L_24389
L_24392:
	movq 0x0(%r13,%r8,8),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r14
	movq %r14,0x40(%rbp)
	cmpq %r14,%r10
	jnb L_24389
L_24394:
	movq %r11,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r13,1)
	movq %r15,0x0(%r11,%r10,8)
	cmpq %r14,%r8
	jnb L_24389
L_24396:
	movq %r11,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%rsp,%r15,1)
	movq %r9,0x0(%r11,%r8,8)
	movq 0x10(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq %r14,0x48(%rbp)
	cmpq %r14,%r10
	jnb L_24389
L_24398:
	movq 0x0(%r15,%r10,8),%r14
	movq %r14,0x50(%rbp)
	movl 0x0(%rbp),%r15d
	incl %r15d
	jo L_24380
L_24399:
	movl %r15d,0xC(%rbp)
.p2align 0x4,,0x7
loop_349:
	incl %ecx
	movl %ecx,0x58(%rbp)
	jo L_24380
L_24400:
	movslq %ecx,%r15
	movq %r15,0x60(%rbp)
	cmpq 0x48(%rbp),%r15
	jnb L_24389
L_24402:
	movq 0x50(%rbp),%r14
	movl 0x0(%r14),%r13d
	movl %r13d,0x5C(%rbp)
	movq 0x10(%rbp),%r11
	movq 0x0(%r11,%r15,8),%r10
	movl 0x0(%r10),%r9d
	movq 0x20(%r14),%r8
	movq 0x8(%r8),%rsp
	movq %rsp,0x68(%rbp)
	movq 0x20(%r10),%r14
	movq 0x8(%r14),%r8
	movb 0x8(%rbp),%r15b
	testb %r15b,%r15b
	jz L_382908
L_24434:
	cmpl %r9d,%r13d
	jl L_382907
L_24435:
	movl 0xC(%rbp),%ecx
.p2align 0x4,,0x7
loop_350:
	decl %ecx
	movl %ecx,0xC(%rbp)
	jo L_24380
L_24407:
	movslq %ecx,%r15
	movq %r15,0x70(%rbp)
	cmpq 0x48(%rbp),%r15
	jnb L_24389
L_24409:
	movq 0x10(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movl 0x0(%r13),%r11d
	movq 0x20(%r13),%r10
	movq 0x8(%r10),%r9
	movb 0x8(%rbp),%r15b
	testb %r15b,%r15b
	jz L_382904
L_24431:
	cmpl 0x5C(%rbp),%r11d
	jnl L_382895
L_24433:
	jmp loop_350
.p2align 0x4
L_382895:
.p2align 0x4,,0x7
L_24414:
	movl 0x58(%rbp),%ecx
	cmpl %ecx,0xC(%rbp)
	jl L_382900
L_24415:
	movq 0x60(%rbp),%r15
	movq 0x30(%rbp),%r14
	cmpq %r14,%r15
	jnb L_24389
L_24417:
	movq 0x20(%rbp),%r13
	movq 0x0(%r13,%r15,8),%r11
	movq 0x70(%rbp),%r10
	cmpq %r14,%r10
	jnb L_24389
L_24419:
	movq 0x0(%r13,%r10,8),%r14
	movq 0x40(%rbp),%r13
	cmpq %r13,%r15
	jnb L_24389
L_24421:
	movq 0x28(%rbp),%r9
	movq %r9,%r8
	shrq $0x8,%r8
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r8,1)
	movq %r14,0x0(%r9,%r15,8)
	cmpq %r13,%r10
	jnb L_382896
L_24423:
	movq %r9,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%rsp,%r15,1)
	movq %r11,0x0(%r9,%r10,8)
	jmp loop_349
.p2align 0x4
L_382896:
L_24389:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_382900:
L_24424:
	movq 0x20(%rbp),%r15
	movq 0x38(%rbp),%r14
	movq 0x0(%r15,%r14,8),%r13
	movq 0x70(%rbp),%r11
	cmpq 0x30(%rbp),%r11
	jnb L_24389
L_24426:
	movq 0x0(%r15,%r11,8),%r10
	movq 0x28(%rbp),%r15
	movq %r15,%r9
	shrq $0x8,%r9
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r9,1)
	movq %r10,0x0(%r15,%r14,8)
	cmpq 0x40(%rbp),%r11
	jnb L_24389
L_24428:
	movq %r15,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r8,%r14,1)
	movq %r13,0x0(%r15,%r11,8)
	movl 0xC(%rbp),%r15d
	decl %r15d
	jo L_24380
L_24429:
	movl %r15d,0x68(%rbp)
	movl 0x4(%rbp),%r15d
	movl %r15d,0x6C(%rbp)
	movb 0x8(%rbp),%r15b
	movb %r15b,0x70(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x68,%rbp
	leaq (L_24430+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp qsort_5
.p2align 0x4
L_382904:
L_24410:
	movq %r9,0x88(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_24411+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1216
.p2align 0x4
L_382907:
L_24436:
	movl 0x58(%rbp),%ecx
	jmp loop_349
.p2align 0x4
L_382908:
L_24403:
	movq %r8,0x78(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_24404+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1216
.p2align 0x4
.long 0x60C
L_24430:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movl 0x58(%rbp),%r15d
	movl %r15d,0x4(%rbp)
	jmp loop_347
.p2align 0x4
.long 0x715
L_24411:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movl 0x80(%rbp),%r15d
	movl %r15d,0x78(%rbp)
	testl %r15d,%r15d
	jnz L_24414
L_24412:
	movl 0xC(%rbp),%ecx
	jmp loop_350
.p2align 0x4
.long 0x714
L_24404:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movl 0x78(%rbp),%r15d
	movl %r15d,0x70(%rbp)
	testl %r15d,%r15d
	jnz L_382919
L_24405:
	movl 0x58(%rbp),%ecx
	jmp loop_349
.p2align 0x4
L_382919:
L_24406:
	movl 0xC(%rbp),%ecx
	jmp loop_350
.text
.p2align 0x4
.globl qsort_6
.hidden qsort_6
qsort_6:
L_24439:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb loop_351
L_24498:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_24499+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_24499
.p2align 0x4
.long 0x2C
L_24499:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
loop_351:
	movl 0x0(%rbp),%r15d
	subl 0x4(%rbp),%r15d
	jo L_24441
L_24442:
	cmpl $0x14,%r15d
	jng L_382921
L_24444:
	movq (globalObjptr+0x550)(%rip),%r14
	movl 0x0(%r14),%r13d
	imull $0x19660D,%r13d
	addl $0x3C6EF35F,%r13d
	movl %r13d,0xC(%rbp)
	movl %r13d,0x0(%r14)
	incl %r15d
	movl %r15d,0x20(%rbp)
	jo L_382920
L_24445:
	movl %r15d,0x30(%rbp)
	movl %r13d,0x34(%rbp)
	addq $0x30,%rbp
	leaq (L_24446+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp div_0
.p2align 0x4
L_382920:
L_24441:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_382921:
L_24443:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x609
L_24446:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movl 0x30(%rbp),%r15d
	movl %r15d,0x24(%rbp)
	movl 0x20(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	movl 0xC(%rbp),%r15d
	movl %r15d,0x2C(%rbp)
	addq $0x28,%rbp
	leaq (L_24447+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp mod_0
.p2align 0x4
.long 0x490
L_24447:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl 0x28(%rbp),%r15d
	movl 0x4(%rbp),%ecx
	movl %ecx,%r14d
	addl %r15d,%r14d
	movl %r15d,0xC(%rbp)
	jo L_24441
L_24448:
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x0(%r15),%r11
	movq %r11,0x28(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movq %r15,0x30(%rbp)
	movslq %ecx,%r10
	movq %r10,0x38(%rbp)
	cmpq %r15,%r10
	jnb L_24450
L_24451:
	movq 0x0(%r13,%r10,8),%r9
	movslq %r14d,%r8
	cmpq %r15,%r8
	jnb L_24450
L_24453:
	movq 0x0(%r13,%r8,8),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r14
	movq %r14,0x40(%rbp)
	cmpq %r14,%r10
	jnb L_24450
L_24455:
	movq %r11,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r13,1)
	movq %r15,0x0(%r11,%r10,8)
	cmpq %r14,%r8
	jnb L_24450
L_24457:
	movq %r11,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%rsp,%r15,1)
	movq %r9,0x0(%r11,%r8,8)
	movq 0x10(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq %r14,0x48(%rbp)
	cmpq %r14,%r10
	jnb L_24450
L_24459:
	movq 0x0(%r15,%r10,8),%r14
	movq %r14,0x50(%rbp)
	movl 0x0(%rbp),%r15d
	incl %r15d
	jo L_24441
L_24460:
	movl %r15d,0xC(%rbp)
.p2align 0x4,,0x7
loop_353:
	incl %ecx
	movl %ecx,0x58(%rbp)
	jo L_24441
L_24461:
	movslq %ecx,%r15
	movq %r15,0x60(%rbp)
	cmpq 0x48(%rbp),%r15
	jnb L_24450
L_24463:
	movq 0x50(%rbp),%r14
	movl 0x0(%r14),%r13d
	movl %r13d,0x5C(%rbp)
	movq 0x10(%rbp),%r11
	movq 0x0(%r11,%r15,8),%r10
	movl 0x0(%r10),%r9d
	movq 0x20(%r14),%r8
	movq 0x8(%r8),%rsp
	movq %rsp,0x68(%rbp)
	movq 0x20(%r10),%r14
	movq 0x8(%r14),%r8
	movb 0x8(%rbp),%r15b
	testb %r15b,%r15b
	jz L_382936
L_24495:
	cmpl %r9d,%r13d
	jl L_382935
L_24496:
	movl 0xC(%rbp),%ecx
.p2align 0x4,,0x7
loop_354:
	decl %ecx
	movl %ecx,0xC(%rbp)
	jo L_24441
L_24468:
	movslq %ecx,%r15
	movq %r15,0x70(%rbp)
	cmpq 0x48(%rbp),%r15
	jnb L_24450
L_24470:
	movq 0x10(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movl 0x0(%r13),%r11d
	movq 0x20(%r13),%r10
	movq 0x8(%r10),%r9
	movb 0x8(%rbp),%r15b
	testb %r15b,%r15b
	jz L_382932
L_24492:
	cmpl 0x5C(%rbp),%r11d
	jnl L_382923
L_24494:
	jmp loop_354
.p2align 0x4
L_382923:
.p2align 0x4,,0x7
L_24475:
	movl 0x58(%rbp),%ecx
	cmpl %ecx,0xC(%rbp)
	jl L_382928
L_24476:
	movq 0x60(%rbp),%r15
	movq 0x30(%rbp),%r14
	cmpq %r14,%r15
	jnb L_24450
L_24478:
	movq 0x20(%rbp),%r13
	movq 0x0(%r13,%r15,8),%r11
	movq 0x70(%rbp),%r10
	cmpq %r14,%r10
	jnb L_24450
L_24480:
	movq 0x0(%r13,%r10,8),%r14
	movq 0x40(%rbp),%r13
	cmpq %r13,%r15
	jnb L_24450
L_24482:
	movq 0x28(%rbp),%r9
	movq %r9,%r8
	shrq $0x8,%r8
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r8,1)
	movq %r14,0x0(%r9,%r15,8)
	cmpq %r13,%r10
	jnb L_382924
L_24484:
	movq %r9,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%rsp,%r15,1)
	movq %r11,0x0(%r9,%r10,8)
	jmp loop_353
.p2align 0x4
L_382924:
L_24450:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_382928:
L_24485:
	movq 0x20(%rbp),%r15
	movq 0x38(%rbp),%r14
	movq 0x0(%r15,%r14,8),%r13
	movq 0x70(%rbp),%r11
	cmpq 0x30(%rbp),%r11
	jnb L_24450
L_24487:
	movq 0x0(%r15,%r11,8),%r10
	movq 0x28(%rbp),%r15
	movq %r15,%r9
	shrq $0x8,%r9
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r9,1)
	movq %r10,0x0(%r15,%r14,8)
	cmpq 0x40(%rbp),%r11
	jnb L_24450
L_24489:
	movq %r15,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r8,%r14,1)
	movq %r13,0x0(%r15,%r11,8)
	movl 0xC(%rbp),%r15d
	decl %r15d
	jo L_24441
L_24490:
	movl %r15d,0x68(%rbp)
	movl 0x4(%rbp),%r15d
	movl %r15d,0x6C(%rbp)
	movb 0x8(%rbp),%r15b
	movb %r15b,0x70(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x68,%rbp
	leaq (L_24491+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp qsort_6
.p2align 0x4
L_382932:
L_24471:
	movq %r9,0x88(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_24472+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1216
.p2align 0x4
L_382935:
L_24497:
	movl 0x58(%rbp),%ecx
	jmp loop_353
.p2align 0x4
L_382936:
L_24464:
	movq %r8,0x78(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_24465+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1216
.p2align 0x4
.long 0x60C
L_24491:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movl 0x58(%rbp),%r15d
	movl %r15d,0x4(%rbp)
	jmp loop_351
.p2align 0x4
.long 0x715
L_24472:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movl 0x80(%rbp),%r15d
	movl %r15d,0x78(%rbp)
	testl %r15d,%r15d
	jnz L_24475
L_24473:
	movl 0xC(%rbp),%ecx
	jmp loop_354
.p2align 0x4
.long 0x714
L_24465:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movl 0x78(%rbp),%r15d
	movl %r15d,0x70(%rbp)
	testl %r15d,%r15d
	jnz L_382947
L_24466:
	movl 0x58(%rbp),%ecx
	jmp loop_353
.p2align 0x4
L_382947:
L_24467:
	movl 0xC(%rbp),%ecx
	jmp loop_354
.text
.p2align 0x4
.globl qsort_7
.hidden qsort_7
qsort_7:
L_24500:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb loop_355
L_24559:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_24560+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_24560
.p2align 0x4
.long 0x2C
L_24560:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
loop_355:
	movl 0x0(%rbp),%r15d
	subl 0x4(%rbp),%r15d
	jo L_24502
L_24503:
	cmpl $0x14,%r15d
	jng L_382949
L_24505:
	movq (globalObjptr+0x550)(%rip),%r14
	movl 0x0(%r14),%r13d
	imull $0x19660D,%r13d
	addl $0x3C6EF35F,%r13d
	movl %r13d,0xC(%rbp)
	movl %r13d,0x0(%r14)
	incl %r15d
	movl %r15d,0x20(%rbp)
	jo L_382948
L_24506:
	movl %r15d,0x30(%rbp)
	movl %r13d,0x34(%rbp)
	addq $0x30,%rbp
	leaq (L_24507+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp div_0
.p2align 0x4
L_382948:
L_24502:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_382949:
L_24504:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x609
L_24507:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movl 0x30(%rbp),%r15d
	movl %r15d,0x24(%rbp)
	movl 0x20(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	movl 0xC(%rbp),%r15d
	movl %r15d,0x2C(%rbp)
	addq $0x28,%rbp
	leaq (L_24508+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp mod_0
.p2align 0x4
.long 0x490
L_24508:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl 0x28(%rbp),%r15d
	movl 0x4(%rbp),%ecx
	movl %ecx,%r14d
	addl %r15d,%r14d
	movl %r15d,0xC(%rbp)
	jo L_24502
L_24509:
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x0(%r15),%r11
	movq %r11,0x28(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movq %r15,0x30(%rbp)
	movslq %ecx,%r10
	movq %r10,0x38(%rbp)
	cmpq %r15,%r10
	jnb L_24511
L_24512:
	movq 0x0(%r13,%r10,8),%r9
	movslq %r14d,%r8
	cmpq %r15,%r8
	jnb L_24511
L_24514:
	movq 0x0(%r13,%r8,8),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r14
	movq %r14,0x40(%rbp)
	cmpq %r14,%r10
	jnb L_24511
L_24516:
	movq %r11,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r13,1)
	movq %r15,0x0(%r11,%r10,8)
	cmpq %r14,%r8
	jnb L_24511
L_24518:
	movq %r11,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%rsp,%r15,1)
	movq %r9,0x0(%r11,%r8,8)
	movq 0x10(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq %r14,0x48(%rbp)
	cmpq %r14,%r10
	jnb L_24511
L_24520:
	movq 0x0(%r15,%r10,8),%r14
	movq %r14,0x50(%rbp)
	movl 0x0(%rbp),%r15d
	incl %r15d
	jo L_24502
L_24521:
	movl %r15d,0xC(%rbp)
.p2align 0x4,,0x7
loop_357:
	incl %ecx
	movl %ecx,0x58(%rbp)
	jo L_24502
L_24522:
	movslq %ecx,%r15
	movq %r15,0x60(%rbp)
	cmpq 0x48(%rbp),%r15
	jnb L_24511
L_24524:
	movq 0x50(%rbp),%r14
	movl 0x0(%r14),%r13d
	movl %r13d,0x5C(%rbp)
	movq 0x10(%rbp),%r11
	movq 0x0(%r11,%r15,8),%r10
	movl 0x0(%r10),%r9d
	movq 0x20(%r14),%r8
	movq 0x8(%r8),%rsp
	movq %rsp,0x68(%rbp)
	movq 0x20(%r10),%r14
	movq 0x8(%r14),%r8
	movb 0x8(%rbp),%r15b
	testb %r15b,%r15b
	jz L_382964
L_24556:
	cmpl %r9d,%r13d
	jl L_382963
L_24557:
	movl 0xC(%rbp),%ecx
.p2align 0x4,,0x7
loop_358:
	decl %ecx
	movl %ecx,0xC(%rbp)
	jo L_24502
L_24529:
	movslq %ecx,%r15
	movq %r15,0x70(%rbp)
	cmpq 0x48(%rbp),%r15
	jnb L_24511
L_24531:
	movq 0x10(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movl 0x0(%r13),%r11d
	movq 0x20(%r13),%r10
	movq 0x8(%r10),%r9
	movb 0x8(%rbp),%r15b
	testb %r15b,%r15b
	jz L_382960
L_24553:
	cmpl 0x5C(%rbp),%r11d
	jnl L_382951
L_24555:
	jmp loop_358
.p2align 0x4
L_382951:
.p2align 0x4,,0x7
L_24536:
	movl 0x58(%rbp),%ecx
	cmpl %ecx,0xC(%rbp)
	jl L_382956
L_24537:
	movq 0x60(%rbp),%r15
	movq 0x30(%rbp),%r14
	cmpq %r14,%r15
	jnb L_24511
L_24539:
	movq 0x20(%rbp),%r13
	movq 0x0(%r13,%r15,8),%r11
	movq 0x70(%rbp),%r10
	cmpq %r14,%r10
	jnb L_24511
L_24541:
	movq 0x0(%r13,%r10,8),%r14
	movq 0x40(%rbp),%r13
	cmpq %r13,%r15
	jnb L_24511
L_24543:
	movq 0x28(%rbp),%r9
	movq %r9,%r8
	shrq $0x8,%r8
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r8,1)
	movq %r14,0x0(%r9,%r15,8)
	cmpq %r13,%r10
	jnb L_382952
L_24545:
	movq %r9,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%rsp,%r15,1)
	movq %r11,0x0(%r9,%r10,8)
	jmp loop_357
.p2align 0x4
L_382952:
L_24511:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_382956:
L_24546:
	movq 0x20(%rbp),%r15
	movq 0x38(%rbp),%r14
	movq 0x0(%r15,%r14,8),%r13
	movq 0x70(%rbp),%r11
	cmpq 0x30(%rbp),%r11
	jnb L_24511
L_24548:
	movq 0x0(%r15,%r11,8),%r10
	movq 0x28(%rbp),%r15
	movq %r15,%r9
	shrq $0x8,%r9
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r9,1)
	movq %r10,0x0(%r15,%r14,8)
	cmpq 0x40(%rbp),%r11
	jnb L_24511
L_24550:
	movq %r15,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r8,%r14,1)
	movq %r13,0x0(%r15,%r11,8)
	movl 0xC(%rbp),%r15d
	decl %r15d
	jo L_24502
L_24551:
	movl %r15d,0x68(%rbp)
	movl 0x4(%rbp),%r15d
	movl %r15d,0x6C(%rbp)
	movb 0x8(%rbp),%r15b
	movb %r15b,0x70(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x68,%rbp
	leaq (L_24552+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp qsort_7
.p2align 0x4
L_382960:
L_24532:
	movq %r9,0x88(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_24533+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1216
.p2align 0x4
L_382963:
L_24558:
	movl 0x58(%rbp),%ecx
	jmp loop_357
.p2align 0x4
L_382964:
L_24525:
	movq %r8,0x78(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_24526+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1216
.p2align 0x4
.long 0x60C
L_24552:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movl 0x58(%rbp),%r15d
	movl %r15d,0x4(%rbp)
	jmp loop_355
.p2align 0x4
.long 0x715
L_24533:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movl 0x80(%rbp),%r15d
	movl %r15d,0x78(%rbp)
	testl %r15d,%r15d
	jnz L_24536
L_24534:
	movl 0xC(%rbp),%ecx
	jmp loop_358
.p2align 0x4
.long 0x714
L_24526:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movl 0x78(%rbp),%r15d
	movl %r15d,0x70(%rbp)
	testl %r15d,%r15d
	jnz L_382975
L_24527:
	movl 0x58(%rbp),%ecx
	jmp loop_357
.p2align 0x4
L_382975:
L_24528:
	movl 0xC(%rbp),%ecx
	jmp loop_358
.text
.p2align 0x4
.globl loopStr_0
.hidden loopStr_0
loopStr_0:
L_24561:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_24640
L_24562:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_383004
L_24563:
	movq 0x10(%rbp),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x28(%rbp)
	movq 0x10(%r13),%r11
	movq %r11,0x30(%rbp)
	movq 0x18(%r13),%r11
	movq %r11,0x38(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_383003
L_24565:
	movq %r15,0x0(%r13)
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_383002
L_24566:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movl $0x0,0xC(%rbp)
	movq %r13,%r15
.p2align 0x4,,0x7
L_24568:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_24569
L_24629:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xCB6,%r13
	jne L_24569
L_24630:
	movq 0x8(%r14),%r13
	movq %r13,0x10(%rbp)
	movq 0x20(%rbp),%r13
	cmpq %r13,0x0(%r14)
	je L_382996
L_24569:
	movl 0xC(%rbp),%r13d
	incl %r13d
	movl %r13d,0x10(%rbp)
	jo L_24570
L_24571:
	cmpq $0x1,%r15
	je L_382976
L_24572:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movl %r13d,0xC(%rbp)
	jmp L_24568
.p2align 0x4
L_382976:
L_24573:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_24574
L_24627:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_24628+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_24628
.p2align 0x4
.long 0x71C
L_24628:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_24574:
	movl 0x10(%rbp),%ecx
L_24575:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_382993
L_24577:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_24579
L_24626:
	movl %ecx,0x0(%r15)
L_24579:
	movq $0x1CD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x0,0x0(%r15)
	movq $0x196D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq 0x38(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r10,0x0(%r13)
L_24580:
	movq 0x0(%r15),%r14
	movq %r14,%r13
	andq $0x1,%r13
	jz L_24582
L_24621:
	movq %r14,%r13
	andq $0x1,%r13
	jz L_382990
L_24623:
	shrq $0x1,%r14
	movl %r14d,%r13d
	cmpl %r13d,0x8(%rbp)
	jl L_382977
L_24624:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_382977:
L_24582:
	movl 0x8(%rbp),%r14d
	shlq $0x1,%r14
	orq $0x1,%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0xC(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_24584
L_24585:
	cmpl $0x0,%r13d
	jl L_24614
L_24586:
	movl $0x0,0x10(%rbp)
loop_359:
	movl 0xC(%rbp),%r15d
	cmpl %r15d,0x10(%rbp)
	jl L_382987
L_24587:
	movq 0x30(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0xC(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_382986
L_24589:
	cmpl $0x0,%r13d
	jl L_382985
L_24590:
	movl $0x0,0x10(%rbp)
loop_360:
	movl 0xC(%rbp),%r15d
	cmpl %r15d,0x10(%rbp)
	jl L_382978
L_24591:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_382978:
L_24592:
	movslq 0x10(%rbp),%r15
	movq 0x30(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x28(%rbp)
	movq 0x18(%r13),%r11
	movl 0x8(%rbp),%r15d
	incl %r15d
	movl %r15d,0x14(%rbp)
	jo L_382984
L_24593:
	movq $0x1BD3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x38(%rbp)
	movq %r11,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq 0x0(%rbp),%r15
	cmpq $0x1,%r15
	je L_382983
L_24594:
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	movq $0x1,0x50(%rbp)
.p2align 0x4,,0x7
L_24595:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_382982
.p2align 0x4,,0x7
L_24596:
	movq $0x1BD3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_382979
L_24597:
	movq %r15,0x50(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x40(%rbp)
	movq %r15,0x48(%rbp)
	jmp L_24595
.p2align 0x4
L_382979:
L_24598:
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x38(%rbp)
.p2align 0x4,,0x7
L_24599:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_382981
.p2align 0x4,,0x7
L_24600:
	movq $0x1BD3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x38(%rbp),%r14
	cmpq $0x1,%r14
	je L_382980
L_24601:
	movq %r15,0x48(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x38(%rbp)
	movq %r15,0x40(%rbp)
	jmp L_24599
.p2align 0x4
L_382980:
L_24603:
	movq %r15,0x40(%rbp)
	movl 0x14(%rbp),%r15d
	movl %r15d,0x48(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x40,%rbp
	leaq (L_24604+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loopStr_0
.p2align 0x4
L_382981:
L_24608:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_24609+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_24609
.p2align 0x4
.long 0x718
L_24609:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	jmp L_24600
.p2align 0x4
L_382982:
L_24610:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_24611+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_24611
.p2align 0x4
.long 0x719
L_24611:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	jmp L_24596
.p2align 0x4
L_382983:
L_24612:
	movq 0x38(%rbp),%r14
	xchgq %r14,%r15
	jmp L_24603
.p2align 0x4
L_382984:
L_24570:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_382985:
L_24614:
	movq (globalObjptr+0x4F8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_382986:
L_24584:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_382987:
L_24615:
	movslq 0x10(%rbp),%r15
	movq 0x28(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x58(%rbp)
	movq 0x18(%r13),%r11
	movq %r11,0x50(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x40(%rbp)
	movl 0x8(%rbp),%r15d
	movl %r15d,0x48(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x40,%rbp
	leaq (L_24616+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp doType_0
.p2align 0x4
L_382990:
L_24622:
	movq $0x9,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_382993:
L_24576:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_382996:
L_24632:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_24633
L_24637:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_24638+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_24638
.p2align 0x4
.long 0x658
L_24638:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_24633:
	movl 0xC(%rbp),%r14d
	movslq %r14d,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_24576
L_24634:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %r14d,0x0(%r13)
	jl L_382997
L_24635:
	movq 0x10(%rbp),%r15
	jmp L_24580
.p2align 0x4
L_382997:
L_24636:
	movq (globalObjptr+0x1078)(%rip),%r14
	movl 0xC(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movq 0x10(%rbp),%r15
	jmp L_24580
.p2align 0x4
L_383002:
L_24639:
	xorl %ecx,%ecx
	jmp L_24575
.p2align 0x4
L_383003:
L_24564:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_383004:
L_24640:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_24641+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_24641
.p2align 0x4
.long 0x659
L_24641:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	jmp L_24563
.p2align 0x4
.long 0x716
L_24604:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_24605
L_24606:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_24607+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_24607
.p2align 0x4
.long 0x717
L_24607:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_24605:
	incl 0x10(%rbp)
	jmp loop_360
.p2align 0x4
.long 0x71A
L_24616:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_24617
L_24618:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_24619+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_24619
.p2align 0x4
.long 0x71B
L_24619:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_24617:
	incl 0x10(%rbp)
	jmp loop_359
.text
.p2align 0x4
.globl doType_0
.hidden doType_0
doType_0:
L_24642:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_24743
L_24643:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_383026
L_24644:
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1051,%r15
	je L_383025
	cmpq $0x1052,%r15
	je L_383024
L_24645:
	movq 0x0(%r14),%r15
	movq %r15,0x18(%rbp)
L_24646:
	movq 0x20(%rbp),%r11
	movq 0x8(%r11),%r14
	movq 0x0(%r11),%r10
	movq %r10,0x28(%rbp)
	movq 0x18(%rbp),%r11
	movq 0x10(%r11),%r10
	movq %r10,0x30(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_383023
L_24648:
	movq %r15,0x0(%r11)
	movq 0x0(%r10),%r11
	cmpq $0x1,%r11
	je L_383022
L_24649:
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r11
	xorl %ecx,%ecx
	movq %r11,%r15
.p2align 0x4,,0x7
L_24651:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_383021
L_24733:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xCB6,%r11
	jne L_383020
L_24734:
	movq 0x8(%r13),%r11
	cmpq 0x0(%r13),%r14
	movq %r14,(localObjptr+0x0)(%rip)
	je L_383017
L_24652:
	incl %ecx
	movl %ecx,0xC(%rbp)
	jo L_383016
L_24654:
	cmpq $0x1,%r15
	je L_383008
L_24655:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x0)(%rip),%r14
	jmp L_24651
.p2align 0x4
L_383008:
L_24656:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_24657
L_24731:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_24732+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_24732
.p2align 0x4
.long 0x721
L_24732:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_24657:
	movl 0xC(%rbp),%ecx
L_24658:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_383014
L_24660:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_24662
L_24730:
	movl %ecx,0x0(%r15)
L_24662:
	movq $0x1CD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x0,0x0(%r15)
	movq $0x196D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq 0x30(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r10,0x0(%r13)
L_24663:
	movq 0x0(%r15),%r14
	movq %r14,%r13
	andq $0x1,%r13
	jz L_24665
L_24725:
	movq %r14,%r13
	andq $0x1,%r13
	jz L_383011
L_24727:
	shrq $0x1,%r14
	movl %r14d,%r13d
	cmpl %r13d,0x8(%rbp)
	jl L_383009
L_24728:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_383009:
L_24665:
	movl 0x8(%rbp),%r14d
	shlq $0x1,%r14
	orq $0x1,%r14
	movq %r14,0x0(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_383010
L_24666:
	movq 0x8(%r14),%r13
	movq %r13,0x20(%rbp)
	movq 0x0(%r14),%r15
	movq $0x1,0x28(%rbp)
L_24667:
	movq 0x8(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_24668+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_383010:
L_24724:
	movq $0x1,0x20(%rbp)
L_24676:
	movq 0x10(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_24677+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_383011:
L_24726:
	movq $0x9,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_383014:
L_24659:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_383016:
L_24653:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_383017:
L_24736:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_24659
L_24737:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_383018
L_24739:
	movl %ecx,0x0(%r14)
	movq %r11,%r15
	jmp L_24663
.p2align 0x4
L_383018:
L_24738:
	movq %r11,%r15
	jmp L_24663
.p2align 0x4
L_383020:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_24652
.p2align 0x4
L_383021:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_24652
.p2align 0x4
L_383022:
L_24740:
	xorl %ecx,%ecx
	jmp L_24658
.p2align 0x4
L_383023:
L_24647:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_383024:
L_24742:
	movq 0x8(%r14),%r15
	movq %r15,0x18(%rbp)
	jmp L_24646
.p2align 0x4
L_383025:
L_24741:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_383026:
L_24743:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_24744+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_24744
.p2align 0x4
.long 0x659
L_24744:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	jmp L_24644
.p2align 0x4
.long 0x4A6
L_24668:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_24669
L_24722:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_24723+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_24723
.p2align 0x4
.long 0x720
L_24723:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_24669:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_383028
L_24670:
	movq %r15,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	jmp L_24667
.p2align 0x4
L_383028:
L_24671:
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq $0x1,0x30(%rbp)
.p2align 0x4,,0x7
L_24672:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_383030
.p2align 0x4,,0x7
L_24673:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_383029
L_24674:
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x28(%rbp)
	jmp L_24672
.p2align 0x4
L_383029:
L_24675:
	movq %r15,0x20(%rbp)
	jmp L_24676
.p2align 0x4
L_383030:
L_24720:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_24721+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_24721
.p2align 0x4
.long 0x720
L_24721:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_24673
.p2align 0x4
.long 0x519
L_24677:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_24678
L_24718:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_24719+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_24719
.p2align 0x4
.long 0x51C
L_24719:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_24678:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x30(%rbp)
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je L_383036
L_24679:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x20(%rbp)
	movq %r14,0x28(%rbp)
	movq $0x1,0x38(%rbp)
.p2align 0x4,,0x7
L_24680:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_383035
.p2align 0x4,,0x7
L_24681:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_383032
L_24682:
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x28(%rbp)
	jmp L_24680
.p2align 0x4
L_383032:
L_24683:
	movq 0x38(%rbp),%r15
	movq %r15,0x20(%rbp)
.p2align 0x4,,0x7
L_24684:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_383034
.p2align 0x4,,0x7
L_24685:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_383033
L_24686:
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x28(%rbp)
	jmp L_24684
.p2align 0x4
L_383033:
L_24687:
	movq 0x30(%rbp),%r15
	movq %r15,0x20(%rbp)
L_24688:
	movq (globalObjptr+0xA050)(%rip),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_24689+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_383034:
L_24713:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_24714+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_24714
.p2align 0x4
.long 0x71F
L_24714:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_24685
.p2align 0x4
L_383035:
L_24715:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_24716+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_24716
.p2align 0x4
.long 0x5E7
L_24716:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_24681
.p2align 0x4
L_383036:
L_24717:
	movq $0x1,0x20(%rbp)
	jmp L_24688
.p2align 0x4
.long 0x71D
L_24689:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x20(%rbp),%r14
	movq %r14,0x38(%rbp)
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_24690+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3787
.p2align 0x4
.long 0x71E
L_24690:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_24691
L_24711:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_24712+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_24712
.p2align 0x4
.long 0x51C
L_24712:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_24691:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x30(%rbp)
	addq $0x18,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%r13)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_24692:
	addl 0x0(%r15),%ecx
	movl %ecx,0x20(%rbp)
	jo L_24653
L_24693:
	cmpq $0x1,%r14
	je L_383038
L_24694:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_24692
.p2align 0x4
L_383038:
L_24695:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_24696
L_24709:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_24710+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_24710
.p2align 0x4
.long 0x607
L_24710:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_24696:
	movl 0x20(%rbp),%ecx
	testl %ecx,%ecx
	jz L_383039
L_24697:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
toString_7:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x30(%rbp)
	movq $0x1,0x28(%rbp)
	addq $0x28,%rbp
	leaq (rev_8+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_383039:
L_24708:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_7
.p2align 0x4
.long 0x48F
rev_8:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq $0x1,%r15
	je L_383045
L_24698:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x20(%rbp)
	movq %r14,0x28(%rbp)
	movq $0x1,0x30(%rbp)
.p2align 0x4,,0x7
L_24699:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_383044
.p2align 0x4,,0x7
L_24700:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_383043
L_24701:
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x28(%rbp)
	jmp L_24699
.p2align 0x4
L_383043:
L_24703:
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_24704+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_383044:
L_24705:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_24706+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_24706
.p2align 0x4
.long 0x71F
L_24706:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_24700
.p2align 0x4
L_383045:
L_24707:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_24703
.p2align 0x4
.long 0x48F
L_24704:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x18(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r15,0x0(%r13)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl x_1230
.hidden x_1230
x_1230:
L_24745:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_24814
L_24746:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_383055
L_24747:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x28(%rbp)
	movq 0x18(%r15),%r11
	movq %r11,0x30(%rbp)
	movq 0x40(%r15),%r10
	movq 0x50(%r15),%r9
	movq %r9,0x38(%rbp)
	movq 0x0(%r9),%r15
	movq %r15,0x40(%rbp)
	movq $0x71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x44D,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r15,0x8(%r8)
	addq $0x18,%r12
	movl $0x0,0x0(%r8)
	movl $0x0,0x4(%r8)
	movq %r9,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r15,1)
	movq %r8,0x0(%r9)
	movq 0x10(%r10),%r15
	movq %r15,0x48(%rbp)
	movq 0x0(%r15),%r10
	movq %r10,0x50(%rbp)
	movq %r15,%r10
	shrq $0x8,%r10
	movb $0x1,0x0(%rsp,%r10,1)
	movq $0x1,0x0(%r15)
	movq 0x10(%r11),%r15
	movq %r15,0x58(%rbp)
	movq 0x0(%r15),%r11
	movq %r11,0x60(%rbp)
	movq %r15,%r11
	shrq $0x8,%r11
	movb $0x1,0x0(%rsp,%r11,1)
	movq $0x1,0x0(%r15)
	movq 0x10(%r13),%r15
	movq %r15,0x68(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x70(%rbp)
	movq %r15,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%rsp,%r13,1)
	movq $0x1,0x0(%r15)
	movq 0x10(%r14),%r15
	movq %r15,0x78(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x80(%rbp)
	movq %r15,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%rsp,%r14,1)
	movq $0x1,0x0(%r15)
	movq 0x10(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x90(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x98(%rbp)
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0xA8(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0xB0(%rbp)
	movq 0x0(%r9),%r15
	movq %r15,0xB8(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movl %r13d,0xC0(%rbp)
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_24749
L_24750:
	cmpl $0x0,%r13d
	jl L_24801
L_24751:
	movl $0x0,0x8(%rbp)
loop_361:
	movl 0xC0(%rbp),%r15d
	cmpl %r15d,0x8(%rbp)
	jl L_383052
L_24752:
	movq 0xA0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x8(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_24749
L_24754:
	cmpl $0x0,%r13d
	jl L_24801
L_24755:
	movl $0x0,0xC(%rbp)
loop_362:
	movl 0x8(%rbp),%r15d
	cmpl %r15d,0xC(%rbp)
	jl L_383049
L_24756:
	movq 0xA8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x8(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_383048
L_24758:
	cmpl $0x0,%r13d
	jl L_383047
L_24759:
	movl $0x0,0xC(%rbp)
loop_363:
	movl 0x8(%rbp),%r15d
	cmpl %r15d,0xC(%rbp)
	jl L_383046
L_24760:
	movq 0x0(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x90,%rbp
	leaq (L_24761+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp setTyconNames_0
.p2align 0x4
L_383046:
L_24795:
	movslq 0xC(%rbp),%r15
	movq 0xA8(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x8(%r13),%r11
	movl 0x0(%r13),%r10d
	movq 0x10(%r13),%r9
	movq 0x18(%r13),%r8
	movq $0x1711,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r10d,0x0(%r15)
	movq %r11,0x8(%r15)
	movq %r9,0x18(%r15)
	movq %r8,0x20(%r15)
	addq $0x30,%r12
	movl $0x0,0x4(%r15)
	movq 0xB8(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0xC8(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0xD0(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0xD8(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0xE0(%rbp)
	addq $0xC8,%rbp
	leaq (L_24796+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1236
.p2align 0x4
L_383047:
L_24801:
	movq (globalObjptr+0x4F8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_383048:
L_24749:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_383049:
L_24802:
	movslq 0xC(%rbp),%r15
	movq 0xA0(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x8(%r13),%r11
	movl 0x0(%r13),%r10d
	movq 0x10(%r13),%r9
	movq 0x18(%r13),%r8
	movq $0x170F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r10d,0x0(%r15)
	movq %r11,0x8(%r15)
	movq %r9,0x18(%r15)
	movq %r8,0x20(%r15)
	addq $0x30,%r12
	movl $0x0,0x4(%r15)
	movq 0xB8(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0xC8(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0xD0(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0xD8(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0xE0(%rbp)
	addq $0xC8,%rbp
	leaq (L_24803+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1237
.p2align 0x4
L_383052:
L_24808:
	movslq 0x8(%rbp),%r15
	movq 0xB0(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x8(%r13),%r11
	movl 0x0(%r13),%r10d
	movq 0x10(%r13),%r9
	movq 0x18(%r13),%r8
	movq $0x170D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r10d,0x0(%r15)
	movq %r11,0x8(%r15)
	movq %r9,0x18(%r15)
	movq %r8,0x20(%r15)
	addq $0x30,%r12
	movl $0x0,0x4(%r15)
	movq 0xB8(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0xD0(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0xD8(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0xE0(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0xE8(%rbp)
	addq $0xD0,%rbp
	leaq (L_24809+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1238
.p2align 0x4
L_383055:
L_24814:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_24815+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_24815
.p2align 0x4
.long 0x4AE
L_24815:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	jmp L_24747
.p2align 0x4
.long 0x722
L_24761:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x48(%rbp),%r13
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_24767
L_24762:
	movq 0x0(%r11),%r14
	movq 0x8(%r11),%r11
	movq %r11,%r15
.p2align 0x4,,0x7
L_24763:
	movq 0x0(%r14),%r13
	cmpq $0x1,%r13
	je L_24787
L_24764:
	movq 0x8(%r13),%r11
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r11,0x0(%r14)
	cmpq $0x1,%r15
	je L_383057
L_24765:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_24763
.p2align 0x4
L_383057:
L_24767:
	movq 0x48(%rbp),%r13
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq 0x50(%rbp),%r11
	movq %r11,0x0(%r13)
	movq 0x58(%rbp),%r13
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_24773
L_24768:
	movq 0x0(%r11),%r14
	movq 0x8(%r11),%r11
	movq %r11,%r15
.p2align 0x4,,0x7
L_24769:
	movq 0x0(%r14),%r13
	cmpq $0x1,%r13
	je L_24787
L_24770:
	movq 0x8(%r13),%r11
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r11,0x0(%r14)
	cmpq $0x1,%r15
	je L_383058
L_24771:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_24769
.p2align 0x4
L_383058:
L_24773:
	movq 0x58(%rbp),%r13
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq 0x60(%rbp),%r11
	movq %r11,0x0(%r13)
	movq 0x68(%rbp),%r13
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_24779
L_24774:
	movq 0x0(%r11),%r14
	movq 0x8(%r11),%r11
	movq %r11,%r15
.p2align 0x4,,0x7
L_24775:
	movq 0x0(%r14),%r13
	cmpq $0x1,%r13
	je L_24787
L_24776:
	movq 0x8(%r13),%r11
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r11,0x0(%r14)
	cmpq $0x1,%r15
	je L_383059
L_24777:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_24775
.p2align 0x4
L_383059:
L_24779:
	movq 0x68(%rbp),%r13
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq 0x70(%rbp),%r11
	movq %r11,0x0(%r13)
	movq 0x78(%rbp),%r13
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_24785
L_24780:
	movq 0x0(%r11),%r14
	movq 0x8(%r11),%r11
	movq %r11,%r15
.p2align 0x4,,0x7
L_24781:
	movq 0x0(%r14),%r13
	cmpq $0x1,%r13
	je L_383061
L_24782:
	movq 0x8(%r13),%r11
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r11,0x0(%r14)
	cmpq $0x1,%r15
	je L_383060
L_24783:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_24781
.p2align 0x4
L_383060:
L_24785:
	movq 0x78(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x80(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_383061:
L_24787:
	movq (globalObjptr+0x7E8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x723
L_24796:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_24797
L_24798:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_24799+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_24799
.p2align 0x4
.long 0x724
L_24799:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_24797:
	incl 0xC(%rbp)
	jmp loop_363
.p2align 0x4
.long 0x725
L_24803:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_24804
L_24805:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_24806+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_24806
.p2align 0x4
.long 0x726
L_24806:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_24804:
	incl 0xC(%rbp)
	jmp loop_362
.p2align 0x4
.long 0x727
L_24809:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_24810
L_24811:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_24812+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_24812
.p2align 0x4
.long 0x728
L_24812:
	addq $0xFFFFFFFFFFFFFF30,%rbp
L_24810:
	incl 0x8(%rbp)
	jmp loop_361
.text
.p2align 0x4
.globl x_1236
.hidden x_1236
x_1236:
L_24816:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_24817
L_24895:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_24896+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_24896
.p2align 0x4
.long 0x4AE
L_24896:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_24817:
	movq 0x18(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x10(%rbp),%r15
	movq 0x28(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movl 0x0(%r15),%r14d
	movl %r14d,0x50(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x60(%rbp)
	movl 0x4(%r15),%r14d
	movl %r14d,0x54(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x70(%rbp)
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_24818+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_23
.p2align 0x4
.long 0x729
L_24818:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_24819
L_24893:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_24894+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_24894
.p2align 0x4
.long 0x72C
L_24894:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_24819:
	movq 0x10(%rbp),%r14
	movq 0x0(%r14),%r13
	cmpq $0x1,%r13
	je L_24826
L_24820:
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r15,0x18(%rbp)
	movq %r13,%r15
.p2align 0x4,,0x7
L_24821:
	movq 0x18(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x106C,%r13
	je L_383092
L_24822:
	cmpq $0x1,%r15
	je L_383073
L_24823:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r14,0x18(%rbp)
	jmp L_24821
.p2align 0x4
L_383073:
L_24824:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_24826
L_24886:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_24887+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_24887
.p2align 0x4
.long 0x72C
L_24887:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_24826:
	movq $0x1E9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x20D9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq 0x10(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x20E5,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r10,0x0(%r13)
	movq %r15,0x10(%rbp)
L_24827:
	movq 0x10(%rbp),%r13
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_383085
L_24828:
	movq 0x8(%r11),%r14
	movq 0x0(%r11),%r13
	movq 0x8(%r13),%r10
	movq 0x58(%rbp),%r9
	movq 0x10(%r13),%r8
	movq 0x8(%r8),%rsp
	cmpq %rsp,0x8(%r9)
	jne L_383079
L_24846:
	movq 0x48(%rbp),%r15
	cmpq $0x1,%r15
	je L_383078
	cmpq $0x2,%r15
	je L_383074
L_24847:
L_24848:
	movq $0x11C9,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x30,%r12
	movl 0x50(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq 0x58(%rbp),%r15
	movq %r15,0x10(%r13)
	movq 0x60(%rbp),%r15
	movq %r15,0x18(%r13)
	movq 0x68(%rbp),%r15
	movq %r15,0x20(%r13)
	movq $0x24ED,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_383074:
L_24850:
	movq 0x30(%rbp),%r11
	cmpq $0x1,0x0(%r11)
L_24852:
	movq 0x8(%rbp),%r11
	movq 0x8(%r11),%r13
	movq $0x53,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movl $0x0,0x0(%r11)
	movl $0x0,0x4(%r11)
	movq $0x6D9,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	addq $0x18,%r12
	movq %r11,0x0(%r10)
	movq $0x1,0x8(%r10)
	movq 0x28(%rbp),%r9
	movl 0x0(%r9),%r8d
	testl %r8d,%r8d
	jz L_383077
L_24860:
	movq $0x11D1,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	addq $0x20,%r12
	movb $0x1,%r8b
	movzbl %r8b,%esp
	movl %esp,0x0(%r9)
	movl $0x0,0x4(%r9)
	movq %r10,0x8(%r9)
	movq 0x68(%rbp),%r8
	movq %r8,0x10(%r9)
	movq 0x0(%r13),%r8
	movq $0x24E3,0x0(%r12)
	movq %r12,%rsp
	addq $0x8,%rsp
	movq %r9,0x0(%rsp)
	movq %r8,0x8(%rsp)
	addq $0x18,%r12
	movq %r13,%r9
	shrq $0x8,%r9
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r9,1)
	movq %rsp,0x0(%r13)
	xchgq %r10,%r15
	movq %r11,%r13
L_24854:
	movq 0x20(%rbp),%r11
	movq 0x10(%r11),%r10
	movl 0x0(%r10),%r9d
	testl %r9d,%r9d
	jz L_24856
L_24857:
	movl 0x54(%rbp),%r11d
	testl %r11d,%r11d
	jnz L_383075
L_24858:
	jmp L_24848
.p2align 0x4
L_383075:
L_24856:
	movl $0x1,0x0(%r13)
	jmp L_24848
.p2align 0x4
L_383077:
	xchgq %r10,%r15
	movq %r11,%r13
	jmp L_24854
.p2align 0x4
L_383078:
L_24849:
	xchgq %r10,%r15
	jmp L_24848
.p2align 0x4
L_383079:
L_24829:
	movq 0x40(%rbp),%r13
	movq 0x0(%r13),%r15
	movq $0x24E1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r10
	movq %r10,0x0(%r14)
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r15,1)
	movq %r14,0x0(%r13)
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_383084
	cmpq $0x2,%r14
	je L_383080
L_24830:
	movq %r11,%r15
L_24831:
	movq $0x11C9,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x30,%r12
	movl 0x50(%rbp),%r14d
	movl %r14d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq 0x58(%rbp),%r14
	movq %r14,0x10(%r13)
	movq 0x60(%rbp),%r14
	movq %r14,0x18(%r13)
	movq 0x68(%rbp),%r14
	movq %r14,0x20(%r13)
	movq $0x24ED,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r15
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_383080:
L_24834:
	movq 0x30(%rbp),%r10
	cmpq $0x1,0x0(%r10)
L_24836:
	movq 0x8(%rbp),%r10
	movq 0x8(%r10),%r15
	movq $0x53,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movl $0x0,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq $0x6D9,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	addq $0x18,%r12
	movq %r13,0x0(%r10)
	movq $0x1,0x8(%r10)
	movq 0x28(%rbp),%r9
	movl 0x0(%r9),%r8d
	testl %r8d,%r8d
	jz L_383083
L_24844:
	movq $0x11D1,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	addq $0x20,%r12
	movb $0x1,%r8b
	movzbl %r8b,%esp
	movl %esp,0x0(%r9)
	movl $0x0,0x4(%r9)
	movq %r10,0x8(%r9)
	movq 0x68(%rbp),%r8
	movq %r8,0x10(%r9)
	movq 0x0(%r15),%r8
	movq $0x24E3,0x0(%r12)
	movq %r12,%rsp
	addq $0x8,%rsp
	movq %r9,0x0(%rsp)
	movq %r8,0x8(%rsp)
	addq $0x18,%r12
	movq %r15,%r9
	shrq $0x8,%r9
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r9,1)
	movq %rsp,0x0(%r15)
	movq %r11,%r15
	xchgq %r10,%r14
L_24838:
	movq 0x20(%rbp),%r11
	movq 0x10(%r11),%r10
	movl 0x0(%r10),%r9d
	testl %r9d,%r9d
	jz L_24840
L_24841:
	movl 0x54(%rbp),%r11d
	testl %r11d,%r11d
	jnz L_383081
L_24842:
	jmp L_24831
.p2align 0x4
L_383081:
L_24840:
	movl $0x1,0x0(%r13)
	jmp L_24831
.p2align 0x4
L_383083:
	movq %r11,%r15
	xchgq %r10,%r14
	jmp L_24838
.p2align 0x4
L_383084:
L_24833:
	movq (globalObjptr+0x4DA8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_383085:
L_24862:
	movq 0x58(%rbp),%r15
	movl 0x0(%r15),%r14d
	testl %r14d,%r14d
	jz new_19
L_24879:
	movq 0x38(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x98(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x70(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x80(%rbp)
	movq %r14,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_24880+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_0
.p2align 0x4
new_19:
new_0:
	movq 0x40(%rbp),%r14
	movq 0x0(%r14),%r15
	movq $0x24E1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x10(%rbp),%r11
	movq %r11,0x0(%r13)
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	movq 0x48(%rbp),%r15
	cmpq $0x1,%r15
	je L_24833
	cmpq $0x2,%r15
	je L_383086
L_24864:
L_24865:
	movq $0x11C9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x30,%r12
	movl 0x50(%rbp),%r15d
	movl %r15d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x58(%rbp),%r15
	movq %r15,0x10(%r14)
	movq 0x60(%rbp),%r15
	movq %r15,0x18(%r14)
	movq 0x68(%rbp),%r15
	movq %r15,0x20(%r14)
	movq $0x24ED,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_383086:
L_24867:
	movq 0x30(%rbp),%r13
	cmpq $0x1,0x0(%r13)
L_24869:
	movq 0x8(%rbp),%r13
	movq 0x8(%r13),%r14
	movq $0x53,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movl $0x0,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq $0x6D9,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x18,%r12
	movq %r13,0x0(%r11)
	movq $0x1,0x8(%r11)
	movq 0x28(%rbp),%r10
	movl 0x0(%r10),%r9d
	testl %r9d,%r9d
	jz L_383089
L_24877:
	movq $0x11D1,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	addq $0x20,%r12
	movb $0x1,%r9b
	movzbl %r9b,%r8d
	movl %r8d,0x0(%r10)
	movl $0x0,0x4(%r10)
	movq %r11,0x8(%r10)
	movq 0x68(%rbp),%r9
	movq %r9,0x10(%r10)
	movq 0x0(%r14),%r9
	movq $0x24E3,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r10,0x0(%r8)
	movq %r9,0x8(%r8)
	addq $0x18,%r12
	movq %r14,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r8,0x0(%r14)
	xchgq %r11,%r15
	movq %r13,%r14
L_24871:
	movq 0x20(%rbp),%r13
	movq 0x10(%r13),%r11
	movl 0x0(%r11),%r10d
	testl %r10d,%r10d
	jz L_24873
L_24874:
	movl 0x54(%rbp),%r13d
	testl %r13d,%r13d
	jnz L_383087
L_24875:
	jmp L_24865
.p2align 0x4
L_383087:
L_24873:
	movl $0x1,0x0(%r14)
	jmp L_24865
.p2align 0x4
L_383089:
	xchgq %r11,%r15
	movq %r13,%r14
	jmp L_24871
.p2align 0x4
L_383092:
L_24888:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_24889
L_24890:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_24891+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_24891
.p2align 0x4
.long 0x72D
L_24891:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_24889:
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	jmp L_24827
.p2align 0x4
.long 0x72A
L_24880:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movb 0x90(%rbp),%r15b
	movb %r15b,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_24881
L_24884:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_24885+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_24885
.p2align 0x4
.long 0x72B
L_24885:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_24881:
	movb 0x38(%rbp),%r15b
	testb %r15b,%r15b
	jz new_0
L_24883:
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x20E7,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x0(%r15)
	movq $0x1943,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x80(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	movq %r13,0x8(%r10)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%r11,%r15,1)
	movq %r10,0x0(%r14)
	jmp new_0
.text
.p2align 0x4
.globl peek_0
.hidden peek_0
peek_0:
L_24897:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_24898
L_24924:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_24925+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_24925
.p2align 0x4
.long 0x45F
L_24925:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_24898:
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_383107
L_24900:
	movq %r15,0x0(%r13)
	movq 0x0(%rbp),%r13
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_383106
L_24901:
	movq 0x0(%r11),%r14
	movq 0x8(%r11),%r11
	xorl %ecx,%ecx
	movq %r11,%r15
.p2align 0x4,,0x7
L_24903:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_24904
L_24915:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xCA1,%r13
	jne L_24904
L_24916:
	movq 0x0(%r14),%r13
	cmpq %r13,0x8(%rbp)
	je L_383101
L_24904:
	incl %ecx
	jo L_383100
L_24906:
	cmpq $0x1,%r15
	je L_383097
L_24907:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_24903
.p2align 0x4
L_383097:
L_24908:
L_24909:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_383099
L_24911:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_24913
L_24914:
	movl %ecx,0x0(%r15)
L_24913:
	movb $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_383099:
L_24910:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_383100:
L_24905:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_383101:
L_24918:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_24910
L_24919:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_24921
L_24922:
	movl %ecx,0x0(%r15)
L_24921:
	movb $0x0,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_383106:
L_24923:
	xorl %ecx,%ecx
	jmp L_24909
.p2align 0x4
L_383107:
L_24899:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl x_1237
.hidden x_1237
x_1237:
L_24926:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_24927
L_25080:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_25081+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_25081
.p2align 0x4
.long 0x4AE
L_25081:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_24927:
	movq 0x18(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x10(%rbp),%r15
	movq 0x28(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movl 0x0(%r15),%r14d
	movl %r14d,0x50(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x70(%rbp)
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_24928+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_23
.p2align 0x4
.long 0x729
L_24928:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_24929
L_25078:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_25079+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_25079
.p2align 0x4
.long 0x72C
L_25079:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_24929:
	movq 0x10(%rbp),%r14
	movq 0x0(%r14),%r13
	cmpq $0x1,%r13
	je L_24936
L_24930:
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r15,0x18(%rbp)
	movq %r13,%r15
.p2align 0x4,,0x7
L_24931:
	movq 0x18(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x106B,%r13
	je L_383174
L_24932:
	cmpq $0x1,%r15
	je L_383110
L_24933:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r14,0x18(%rbp)
	jmp L_24931
.p2align 0x4
L_383110:
L_24934:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_24936
L_25071:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_25072+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_25072
.p2align 0x4
.long 0x72C
L_25072:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_24936:
	movq $0x15F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x20D7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq 0x10(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x20E5,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r10,0x0(%r13)
	movq %r15,0x10(%rbp)
L_24937:
	movq 0x10(%rbp),%r13
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_383152
L_24938:
	movq 0x8(%r11),%r14
	movq 0x0(%r11),%r13
	movq 0x8(%r13),%r10
	movq 0x58(%rbp),%r9
	movq 0x10(%r13),%r8
	movq 0x8(%r8),%rsp
	cmpq %rsp,0x8(%r9)
	jne L_383131
L_24981:
	movq 0x48(%rbp),%r15
	cmpq $0x1,%r15
	je L_383130
	cmpq $0x2,%r15
	je L_383111
L_24982:
L_24983:
	movq $0x11C3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x30,%r12
	movl 0x50(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq 0x58(%rbp),%r15
	movq %r15,0x10(%r13)
	movq 0x60(%rbp),%r15
	movq %r15,0x18(%r13)
	movq 0x68(%rbp),%r15
	movq %r15,0x20(%r13)
	movq $0x24F3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_383111:
L_24985:
	movq 0x60(%rbp),%r13
	movq 0x8(%r13),%r11
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r13
	shrq $0x1,%r13
	cmpq $0x104D,%r13
	je L_383129
	cmpq $0x104E,%r13
	je L_383128
	cmpq $0x104F,%r13
	je L_383127
L_24986:
	xorb %dl,%dl
	xchgq %r11,%r15
L_24987:
	movq 0x30(%rbp),%r13
	cmpq $0x1,0x0(%r13)
	je L_24998
L_24988:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0x104D,%r13
	je L_383125
	cmpq $0x104E,%r13
	je L_383124
	cmpq $0x104F,%r13
	je L_383123
L_24989:
	xorb %cl,%cl
L_24990:
	testb %cl,%cl
	jz L_25006
L_24991:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0x104D,%r13
	je L_383121
	cmpq $0x104E,%r13
	je L_383120
	cmpq $0x104F,%r13
	je L_383119
L_24992:
	xorb %cl,%cl
L_24993:
	cmpb $0x5,%cl
	je L_25006
L_24994:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0x104D,%r13
	je L_383117
	cmpq $0x104E,%r13
	je L_383116
	cmpq $0x104F,%r13
	je L_383115
L_24995:
	xorb %cl,%cl
L_24996:
	cmpb $0x6,%cl
	je L_383114
L_24998:
	movq $0x1,%r15
L_24999:
	movq 0x8(%rbp),%r11
	movq 0x8(%r11),%r13
	movq $0x5CB,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq $0x1,0x0(%r11)
	movq $0x53,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	addq $0x10,%r12
	movl $0x0,0x0(%r10)
	movl $0x0,0x4(%r10)
	movq $0x5CD,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r11,0x8(%r9)
	addq $0x18,%r12
	movq %r10,0x0(%r9)
	movq 0x28(%rbp),%r11
	movl 0x0(%r11),%r8d
	testl %r8d,%r8d
	jz L_383113
L_25004:
	movq $0x11D7,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x10(%r11)
	addq $0x28,%r12
	movzbl %dl,%r8d
	movl %r8d,0x0(%r11)
	movl $0x0,0x4(%r11)
	movq %r9,0x8(%r11)
	movq 0x68(%rbp),%r8
	movq %r8,0x18(%r11)
	movq 0x0(%r13),%r15
	movq $0x24D1,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r11,0x0(%r8)
	movq %r15,0x8(%r8)
	addq $0x18,%r12
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r8,0x0(%r13)
	movq %r9,%r15
	movq %r10,%r13
L_25001:
	movq 0x20(%rbp),%r11
	movq 0x10(%r11),%r10
	movl 0x0(%r10),%r9d
	testl %r9d,%r9d
	jnz L_24983
L_25002:
	movl $0x1,0x0(%r13)
	jmp L_24983
.p2align 0x4
L_383113:
	movq %r9,%r15
	movq %r10,%r13
	jmp L_25001
.p2align 0x4
L_383114:
L_25006:
	movq 0x60(%rbp),%r15
	jmp L_24999
.p2align 0x4
L_383115:
L_25009:
	movb $0x6,%cl
	jmp L_24996
.p2align 0x4
L_383116:
L_25008:
	movb $0x5,%cl
	jmp L_24996
.p2align 0x4
L_383117:
L_25007:
	xorb %cl,%cl
	jmp L_24996
.p2align 0x4
L_383119:
L_25013:
	movb $0x6,%cl
	jmp L_24993
.p2align 0x4
L_383120:
L_25012:
	movb $0x5,%cl
	jmp L_24993
.p2align 0x4
L_383121:
L_25011:
	xorb %cl,%cl
	jmp L_24993
.p2align 0x4
L_383123:
L_25017:
	movb $0x6,%cl
	jmp L_24990
.p2align 0x4
L_383124:
L_25016:
	movb $0x5,%cl
	jmp L_24990
.p2align 0x4
L_383125:
L_25015:
	xorb %cl,%cl
	jmp L_24990
.p2align 0x4
L_383127:
L_25021:
	movb $0x6,%dl
	xchgq %r11,%r15
	jmp L_24987
.p2align 0x4
L_383128:
L_25020:
	movb $0x5,%dl
	xchgq %r11,%r15
	jmp L_24987
.p2align 0x4
L_383129:
L_25019:
	xorb %dl,%dl
	xchgq %r11,%r15
	jmp L_24987
.p2align 0x4
L_383130:
L_24984:
	xchgq %r10,%r15
	jmp L_24983
.p2align 0x4
L_383131:
L_24939:
	movq 0x40(%rbp),%r13
	movq 0x0(%r13),%r15
	movq $0x24CF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r10
	movq %r10,0x0(%r14)
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r15,1)
	movq %r14,0x0(%r13)
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_383151
	cmpq $0x2,%r14
	je L_383132
L_24940:
	movq %r11,%r15
L_24941:
	movq $0x11C3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x30,%r12
	movl 0x50(%rbp),%r14d
	movl %r14d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq 0x58(%rbp),%r14
	movq %r14,0x10(%r13)
	movq 0x60(%rbp),%r14
	movq %r14,0x18(%r13)
	movq 0x68(%rbp),%r14
	movq %r14,0x20(%r13)
	movq $0x24F3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r15
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_383132:
L_24944:
	movq 0x60(%rbp),%r13
	movq 0x8(%r13),%r10
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r15
	shrq $0x1,%r15
	cmpq $0x104D,%r15
	je L_383150
	cmpq $0x104E,%r15
	je L_383149
	cmpq $0x104F,%r15
	je L_383148
L_24945:
	xorb %dl,%dl
	movq %r11,%r15
	xchgq %r10,%r14
L_24946:
	movq 0x30(%rbp),%r13
	cmpq $0x1,0x0(%r13)
	je L_24957
L_24947:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x104D,%r13
	je L_383146
	cmpq $0x104E,%r13
	je L_383145
	cmpq $0x104F,%r13
	je L_383144
L_24948:
	xorb %cl,%cl
L_24949:
	testb %cl,%cl
	jz L_24965
L_24950:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x104D,%r13
	je L_383142
	cmpq $0x104E,%r13
	je L_383141
	cmpq $0x104F,%r13
	je L_383140
L_24951:
	xorb %cl,%cl
L_24952:
	cmpb $0x5,%cl
	je L_24965
L_24953:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x104D,%r13
	je L_383138
	cmpq $0x104E,%r13
	je L_383137
	cmpq $0x104F,%r13
	je L_383136
L_24954:
	xorb %cl,%cl
	movq %r15,(localObjptr+0x0)(%rip)
L_24955:
	cmpb $0x6,%cl
	je L_383135
	movq (localObjptr+0x0)(%rip),%r15
L_24957:
	movq $0x1,%r14
L_24958:
	movq 0x8(%rbp),%r11
	movq 0x8(%r11),%r13
	movq $0x5CB,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq $0x1,0x0(%r11)
	movq $0x53,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	addq $0x10,%r12
	movl $0x0,0x0(%r10)
	movl $0x0,0x4(%r10)
	movq $0x5CD,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r11,0x8(%r9)
	addq $0x18,%r12
	movq %r10,0x0(%r9)
	movq 0x28(%rbp),%r11
	movl 0x0(%r11),%r8d
	testl %r8d,%r8d
	jz L_383134
L_24963:
	movq $0x11D7,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x10(%r11)
	addq $0x28,%r12
	movzbl %dl,%r8d
	movl %r8d,0x0(%r11)
	movl $0x0,0x4(%r11)
	movq %r9,0x8(%r11)
	movq 0x68(%rbp),%r8
	movq %r8,0x18(%r11)
	movq 0x0(%r13),%r14
	movq $0x24D1,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r11,0x0(%r8)
	movq %r14,0x8(%r8)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r8,0x0(%r13)
	movq %r9,%r14
	movq %r10,%r13
L_24960:
	movq 0x20(%rbp),%r11
	movq 0x10(%r11),%r10
	movl 0x0(%r10),%r9d
	testl %r9d,%r9d
	jnz L_24941
L_24961:
	movl $0x1,0x0(%r13)
	jmp L_24941
.p2align 0x4
L_383134:
	movq %r9,%r14
	movq %r10,%r13
	jmp L_24960
.p2align 0x4
L_383135:
	movq (localObjptr+0x0)(%rip),%r15
L_24965:
	movq 0x60(%rbp),%r14
	jmp L_24958
.p2align 0x4
L_383136:
L_24968:
	movb $0x6,%cl
	movq %r15,(localObjptr+0x0)(%rip)
	jmp L_24955
.p2align 0x4
L_383137:
L_24967:
	movb $0x5,%cl
	movq %r15,(localObjptr+0x0)(%rip)
	jmp L_24955
.p2align 0x4
L_383138:
L_24966:
	xorb %cl,%cl
	movq %r15,(localObjptr+0x0)(%rip)
	jmp L_24955
.p2align 0x4
L_383140:
L_24972:
	movb $0x6,%cl
	jmp L_24952
.p2align 0x4
L_383141:
L_24971:
	movb $0x5,%cl
	jmp L_24952
.p2align 0x4
L_383142:
L_24970:
	xorb %cl,%cl
	jmp L_24952
.p2align 0x4
L_383144:
L_24976:
	movb $0x6,%cl
	jmp L_24949
.p2align 0x4
L_383145:
L_24975:
	movb $0x5,%cl
	jmp L_24949
.p2align 0x4
L_383146:
L_24974:
	xorb %cl,%cl
	jmp L_24949
.p2align 0x4
L_383148:
L_24980:
	movb $0x6,%dl
	movq %r11,%r15
	xchgq %r10,%r14
	jmp L_24946
.p2align 0x4
L_383149:
L_24979:
	movb $0x5,%dl
	movq %r11,%r15
	xchgq %r10,%r14
	jmp L_24946
.p2align 0x4
L_383150:
L_24978:
	xorb %dl,%dl
	movq %r11,%r15
	xchgq %r10,%r14
	jmp L_24946
.p2align 0x4
L_383151:
L_24943:
	movq (globalObjptr+0x4DA8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_383152:
L_25022:
	movq 0x58(%rbp),%r15
	movl 0x0(%r15),%r14d
	testl %r14d,%r14d
	jz new_21
L_25064:
	movq 0x38(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x98(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x70(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x80(%rbp)
	movq %r14,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_25065+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_0
.p2align 0x4
new_21:
new_1:
	movq 0x40(%rbp),%r14
	movq 0x0(%r14),%r15
	movq $0x24CF,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x10(%rbp),%r11
	movq %r11,0x0(%r13)
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	movq 0x48(%rbp),%r15
	cmpq $0x1,%r15
	je L_24943
	cmpq $0x2,%r15
	je L_383153
L_25024:
L_25025:
	movq $0x11C3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x30,%r12
	movl 0x50(%rbp),%r15d
	movl %r15d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x58(%rbp),%r15
	movq %r15,0x10(%r14)
	movq 0x60(%rbp),%r15
	movq %r15,0x18(%r14)
	movq 0x68(%rbp),%r15
	movq %r15,0x20(%r14)
	movq $0x24F3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_383153:
L_25027:
	movq 0x60(%rbp),%r14
	movq 0x8(%r14),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r14
	shrq $0x1,%r14
	cmpq $0x104D,%r14
	je L_383171
	cmpq $0x104E,%r14
	je L_383170
	cmpq $0x104F,%r14
	je L_383169
L_25028:
	xorb %dl,%dl
	xchgq %r13,%r15
L_25029:
	movq 0x30(%rbp),%r14
	cmpq $0x1,0x0(%r14)
	je L_25040
L_25030:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x104D,%r14
	je L_383167
	cmpq $0x104E,%r14
	je L_383166
	cmpq $0x104F,%r14
	je L_383165
L_25031:
	xorb %cl,%cl
L_25032:
	testb %cl,%cl
	jz L_25048
L_25033:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x104D,%r14
	je L_383163
	cmpq $0x104E,%r14
	je L_383162
	cmpq $0x104F,%r14
	je L_383161
L_25034:
	xorb %cl,%cl
L_25035:
	cmpb $0x5,%cl
	je L_25048
L_25036:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x104D,%r14
	je L_383159
	cmpq $0x104E,%r14
	je L_383158
	cmpq $0x104F,%r14
	je L_383157
L_25037:
	xorb %cl,%cl
L_25038:
	cmpb $0x6,%cl
	je L_383156
L_25040:
	movq $0x1,%r15
L_25041:
	movq 0x8(%rbp),%r13
	movq 0x8(%r13),%r14
	movq $0x5CB,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0x53,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movl $0x0,0x0(%r11)
	movl $0x0,0x4(%r11)
	movq $0x5CD,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r13,0x8(%r10)
	addq $0x18,%r12
	movq %r11,0x0(%r10)
	movq 0x28(%rbp),%r13
	movl 0x0(%r13),%r9d
	testl %r9d,%r9d
	jz L_383155
L_25046:
	movq $0x11D7,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x10(%r13)
	addq $0x28,%r12
	movzbl %dl,%r9d
	movl %r9d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r10,0x8(%r13)
	movq 0x68(%rbp),%r9
	movq %r9,0x18(%r13)
	movq 0x0(%r14),%r15
	movq $0x24D1,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r13,0x0(%r9)
	movq %r15,0x8(%r9)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r9,0x0(%r14)
	movq %r10,%r15
	movq %r11,%r14
L_25043:
	movq 0x20(%rbp),%r13
	movq 0x10(%r13),%r11
	movl 0x0(%r11),%r10d
	testl %r10d,%r10d
	jnz L_25025
L_25044:
	movl $0x1,0x0(%r14)
	jmp L_25025
.p2align 0x4
L_383155:
	movq %r10,%r15
	movq %r11,%r14
	jmp L_25043
.p2align 0x4
L_383156:
L_25048:
	movq 0x60(%rbp),%r15
	jmp L_25041
.p2align 0x4
L_383157:
L_25051:
	movb $0x6,%cl
	jmp L_25038
.p2align 0x4
L_383158:
L_25050:
	movb $0x5,%cl
	jmp L_25038
.p2align 0x4
L_383159:
L_25049:
	xorb %cl,%cl
	jmp L_25038
.p2align 0x4
L_383161:
L_25055:
	movb $0x6,%cl
	jmp L_25035
.p2align 0x4
L_383162:
L_25054:
	movb $0x5,%cl
	jmp L_25035
.p2align 0x4
L_383163:
L_25053:
	xorb %cl,%cl
	jmp L_25035
.p2align 0x4
L_383165:
L_25059:
	movb $0x6,%cl
	jmp L_25032
.p2align 0x4
L_383166:
L_25058:
	movb $0x5,%cl
	jmp L_25032
.p2align 0x4
L_383167:
L_25057:
	xorb %cl,%cl
	jmp L_25032
.p2align 0x4
L_383169:
L_25063:
	movb $0x6,%dl
	xchgq %r13,%r15
	jmp L_25029
.p2align 0x4
L_383170:
L_25062:
	movb $0x5,%dl
	xchgq %r13,%r15
	jmp L_25029
.p2align 0x4
L_383171:
L_25061:
	xorb %dl,%dl
	xchgq %r13,%r15
	jmp L_25029
.p2align 0x4
L_383174:
L_25073:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_25074
L_25075:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_25076+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_25076
.p2align 0x4
.long 0x72D
L_25076:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_25074:
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	jmp L_24937
.p2align 0x4
.long 0x72A
L_25065:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movb 0x90(%rbp),%r15b
	movb %r15b,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_25066
L_25069:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_25070+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_25070
.p2align 0x4
.long 0x72B
L_25070:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_25066:
	movb 0x38(%rbp),%r15b
	testb %r15b,%r15b
	jz new_1
L_25068:
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x20E7,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x0(%r15)
	movq $0x1943,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x80(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	movq %r13,0x8(%r10)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%r11,%r15,1)
	movq %r10,0x0(%r14)
	jmp new_1
.text
.p2align 0x4
.globl x_1238
.hidden x_1238
x_1238:
L_25082:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_25083
L_25148:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_25149+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_25149
.p2align 0x4
.long 0x4AE
L_25149:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_25083:
	movq 0x18(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x10(%rbp),%r15
	movq 0x28(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movl 0x0(%r15),%r14d
	movl %r14d,0x50(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x70(%rbp)
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_25084+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_23
.p2align 0x4
.long 0x729
L_25084:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_25085
L_25146:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_25147+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_25147
.p2align 0x4
.long 0x72C
L_25147:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_25085:
	movq 0x10(%rbp),%r14
	movq 0x0(%r14),%r13
	cmpq $0x1,%r13
	je L_25092
L_25086:
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r15,0x18(%rbp)
	movq %r13,%r15
.p2align 0x4,,0x7
L_25087:
	movq 0x18(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x106D,%r13
	je L_383193
L_25088:
	cmpq $0x1,%r15
	je L_383180
L_25089:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r14,0x18(%rbp)
	jmp L_25087
.p2align 0x4
L_383180:
L_25090:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_25092
L_25139:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_25140+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_25140
.p2align 0x4
.long 0x72C
L_25140:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_25092:
	movq $0x1E7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x20DB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq 0x10(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x20E5,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r10,0x0(%r13)
	movq %r15,0x10(%rbp)
L_25093:
	movq 0x10(%rbp),%r13
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_383188
L_25094:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r11
	movq 0x10(%r11),%r10
	movq 0x58(%rbp),%r9
	movq 0x8(%r9),%r8
	cmpq %r8,0x8(%r10)
	je L_383184
L_25095:
	movq 0x40(%rbp),%r11
	movq 0x0(%r11),%r14
	movq $0x24CB,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x8(%r10)
	addq $0x18,%r12
	movq %r13,0x0(%r10)
	movq %r11,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq %r10,0x0(%r11)
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_383181
L_25096:
L_25097:
	movq $0x11CF,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x30,%r12
	movl 0x50(%rbp),%r14d
	movl %r14d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq 0x58(%rbp),%r14
	movq %r14,0x10(%r13)
	movq 0x60(%rbp),%r14
	movq %r14,0x18(%r13)
	movq 0x68(%rbp),%r14
	movq %r14,0x20(%r13)
	movq $0x24E7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r15
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_383181:
L_25098:
	movq 0x30(%rbp),%r11
	cmpq $0x1,0x0(%r11)
L_25100:
	movq 0x8(%rbp),%r11
	movq 0x8(%r11),%r13
	movq $0x53,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movl $0x0,0x0(%r11)
	movl $0x0,0x4(%r11)
	movq $0x6DB,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	addq $0x18,%r12
	movq %r11,0x0(%r10)
	movq $0x1,0x8(%r10)
	movq 0x28(%rbp),%r9
	movl 0x0(%r9),%r8d
	testl %r8d,%r8d
	jz L_383183
L_25105:
	movq $0x11D9,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	addq $0x20,%r12
	movb $0x2,%r8b
	movzbl %r8b,%esp
	movl %esp,0x0(%r9)
	movl $0x0,0x4(%r9)
	movq %r10,0x8(%r9)
	movq 0x68(%rbp),%r8
	movq %r8,0x10(%r9)
	movq 0x0(%r13),%r8
	movq $0x24CD,0x0(%r12)
	movq %r12,%rsp
	addq $0x8,%rsp
	movq %r9,0x0(%rsp)
	movq %r8,0x8(%rsp)
	addq $0x18,%r12
	movq %r13,%r9
	shrq $0x8,%r9
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r9,1)
	movq %rsp,0x0(%r13)
	xchgq %r10,%r14
	movq %r11,%r13
L_25102:
	movq 0x20(%rbp),%r11
	movq 0x10(%r11),%r10
	movl 0x0(%r10),%r9d
	testl %r9d,%r9d
	jnz L_25097
L_25103:
	movl $0x1,0x0(%r13)
	jmp L_25097
.p2align 0x4
L_383183:
	xchgq %r10,%r14
	movq %r11,%r13
	jmp L_25102
.p2align 0x4
L_383184:
L_25107:
	movq 0x48(%rbp),%r11
	cmpq $0x1,%r11
	je L_383185
L_25108:
	movq %r14,%r15
	movq %r11,%r14
L_25109:
	movq $0x11CF,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x30,%r12
	movl 0x50(%rbp),%r14d
	movl %r14d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq 0x58(%rbp),%r14
	movq %r14,0x10(%r13)
	movq 0x60(%rbp),%r14
	movq %r14,0x18(%r13)
	movq 0x68(%rbp),%r14
	movq %r14,0x20(%r13)
	movq $0x24E7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r15
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_383185:
L_25110:
	movq 0x30(%rbp),%r10
	cmpq $0x1,0x0(%r10)
L_25112:
	movq 0x8(%rbp),%r10
	movq 0x8(%r10),%r15
	movq $0x53,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	addq $0x10,%r12
	movl $0x0,0x0(%r10)
	movl $0x0,0x4(%r10)
	movq $0x6DB,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	addq $0x18,%r12
	movq %r10,0x0(%r9)
	movq $0x1,0x8(%r9)
	movq 0x28(%rbp),%r8
	movl 0x0(%r8),%esp
	testl %esp,%esp
	jz L_383187
L_25117:
	movq $0x11D9,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	addq $0x20,%r12
	movb $0x2,%spl
	movzbl %spl,%esi
	movl %esi,0x0(%r8)
	movl $0x0,0x4(%r8)
	movq %r9,0x8(%r8)
	movq 0x68(%rbp),%rsp
	movq %rsp,0x10(%r8)
	movq 0x0(%r15),%rsp
	movq $0x24CD,0x0(%r12)
	movq %r12,%rsi
	addq $0x8,%rsi
	movq %r8,0x0(%rsi)
	movq %rsp,0x8(%rsi)
	addq $0x18,%r12
	movq %r15,%r8
	shrq $0x8,%r8
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r8,1)
	movq %rsi,0x0(%r15)
	movq %r14,%r15
	movq %r9,%r14
	xchgq %r10,%r13
L_25114:
	movq 0x20(%rbp),%r11
	movq 0x10(%r11),%r10
	movl 0x0(%r10),%r9d
	testl %r9d,%r9d
	jnz L_25109
L_25115:
	movl $0x1,0x0(%r13)
	jmp L_25109
.p2align 0x4
L_383187:
	movq %r14,%r15
	movq %r9,%r14
	xchgq %r10,%r13
	jmp L_25114
.p2align 0x4
L_383188:
L_25119:
	movq 0x58(%rbp),%r15
	movl 0x0(%r15),%r14d
	testl %r14d,%r14d
	jz new_23
L_25132:
	movq 0x38(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x98(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x70(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x80(%rbp)
	movq %r14,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_25133+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_0
.p2align 0x4
new_23:
new_2:
	movq 0x40(%rbp),%r14
	movq 0x0(%r14),%r15
	movq $0x24CB,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x10(%rbp),%r11
	movq %r11,0x0(%r13)
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	movq 0x48(%rbp),%r15
	cmpq $0x1,%r15
	je L_383189
L_25121:
L_25122:
	movq $0x11CF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x30,%r12
	movl 0x50(%rbp),%r15d
	movl %r15d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x58(%rbp),%r15
	movq %r15,0x10(%r14)
	movq 0x60(%rbp),%r15
	movq %r15,0x18(%r14)
	movq 0x68(%rbp),%r15
	movq %r15,0x20(%r14)
	movq $0x24E7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_383189:
L_25123:
	movq 0x30(%rbp),%r13
	cmpq $0x1,0x0(%r13)
L_25125:
	movq 0x8(%rbp),%r13
	movq 0x8(%r13),%r14
	movq $0x53,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movl $0x0,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq $0x6DB,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x18,%r12
	movq %r13,0x0(%r11)
	movq $0x1,0x8(%r11)
	movq 0x28(%rbp),%r10
	movl 0x0(%r10),%r9d
	testl %r9d,%r9d
	jz L_383191
L_25130:
	movq $0x11D9,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	addq $0x20,%r12
	movb $0x2,%r9b
	movzbl %r9b,%r8d
	movl %r8d,0x0(%r10)
	movl $0x0,0x4(%r10)
	movq %r11,0x8(%r10)
	movq 0x68(%rbp),%r9
	movq %r9,0x10(%r10)
	movq 0x0(%r14),%r9
	movq $0x24CD,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r10,0x0(%r8)
	movq %r9,0x8(%r8)
	addq $0x18,%r12
	movq %r14,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r8,0x0(%r14)
	xchgq %r11,%r15
	movq %r13,%r14
L_25127:
	movq 0x20(%rbp),%r13
	movq 0x10(%r13),%r11
	movl 0x0(%r11),%r10d
	testl %r10d,%r10d
	jnz L_25122
L_25128:
	movl $0x1,0x0(%r14)
	jmp L_25122
.p2align 0x4
L_383191:
	xchgq %r11,%r15
	movq %r13,%r14
	jmp L_25127
.p2align 0x4
L_383193:
L_25141:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_25142
L_25143:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_25144+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_25144
.p2align 0x4
.long 0x72D
L_25144:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_25142:
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	jmp L_25093
.p2align 0x4
.long 0x72A
L_25133:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movb 0x90(%rbp),%r15b
	movb %r15b,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_25134
L_25137:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_25138+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_25138
.p2align 0x4
.long 0x72B
L_25138:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_25134:
	movb 0x38(%rbp),%r15b
	testb %r15b,%r15b
	jz new_2
L_25136:
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x20E7,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x0(%r15)
	movq $0x1943,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x80(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	movq %r13,0x8(%r10)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%r11,%r15,1)
	movq %r10,0x0(%r14)
	jmp new_2
.text
.p2align 0x4
.globl unify_3
.hidden unify_3
unify_3:
L_25150:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_25233
L_25151:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_383212
L_25152:
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_383211
	cmpq $0x2,%r14
	je L_383210
L_25153:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xE73,%r15
	je L_383201
L_25203:
	movq 0x0(%r14),%r15
L_25204:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x23E0,%r14
	je L_383200
	cmpq $0x23E1,%r14
	je L_383199
	cmpq $0x23E2,%r14
	je L_383198
L_25205:
	movq 0x10(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	addq $0x20,%rbp
	leaq (L_25206+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1232
.p2align 0x4
L_383198:
L_25230:
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	addq $0x18,%rbp
	leaq (loop_365+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1233
.p2align 0x4
L_383199:
L_25229:
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	addq $0x18,%rbp
	leaq (loop_365+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1234
.p2align 0x4
L_383200:
L_25220:
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	addq $0x18,%rbp
	leaq (loop_365+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1235
.p2align 0x4
L_383201:
L_25154:
	movq 0x0(%r14),%r15
x_43:
	movq 0x0(%r15),%r14
	movq %r14,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	je L_383209
L_25155:
	movq 0x0(%r14),%r15
	movq $0x411D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	movq $0x2849,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r13,0x0(%r10)
	movq %r15,0x8(%r10)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r10,0x0(%r14)
	cmpq $0x1,%r11
	je L_383208
	cmpq $0x2,%r11
	je L_383207
L_25156:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE73,%r15
	je L_383205
L_25160:
	movq 0x0(%r11),%r15
L_25161:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x23E0,%r14
	je L_383204
	cmpq $0x23E1,%r14
	je L_383203
	cmpq $0x23E2,%r14
	je L_383202
L_25162:
	movq 0x10(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	addq $0x20,%rbp
	leaq (L_25163+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1232
.p2align 0x4
L_383202:
L_25188:
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	addq $0x18,%rbp
	leaq (loop_364+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1233
.p2align 0x4
L_383203:
L_25187:
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	addq $0x18,%rbp
	leaq (loop_364+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1234
.p2align 0x4
L_383204:
L_25178:
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	addq $0x18,%rbp
	leaq (loop_364+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1235
.p2align 0x4
L_383205:
L_25157:
	movq 0x0(%r11),%r15
x_44:
	movq 0x0(%r15),%r14
	movq %r14,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	je L_383206
L_25158:
	movq 0x0(%r14),%r15
	movq $0x411F,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq 0x8(%rbp),%r11
	movq %r11,0x0(%r13)
	movq $0x2849,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r15,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	movl $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_383206:
L_25159:
	shrq $0x1,%r14
	movl %r14d,%r15d
	movl %r15d,0x0(%rbp)
	jmp x_1239
.p2align 0x4
L_383207:
L_25172:
	movl $0x0,0x0(%rbp)
	jmp x_1239
.p2align 0x4
L_383208:
L_25170:
	movl $0x1,0x0(%rbp)
	jmp x_1239
.p2align 0x4
L_383209:
L_25191:
	shrq $0x1,%r14
	movl %r14d,%r15d
	movl %r15d,0x18(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x20(%rbp)
	addq $0x18,%rbp
	leaq (L_25192+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1240
.p2align 0x4
L_383210:
L_25215:
	movl $0x0,0x18(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x20(%rbp)
	addq $0x18,%rbp
	leaq (L_25192+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1240
.p2align 0x4
L_383211:
L_25213:
	movl $0x1,0x18(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x20(%rbp)
	addq $0x18,%rbp
	leaq (L_25192+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1240
.p2align 0x4
L_383212:
L_25233:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_25234+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_25234
.p2align 0x4
.long 0x45F
L_25234:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_25152
.p2align 0x4
.long 0x51E
L_25206:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_25207
L_25218:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_25219+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_25219
.p2align 0x4
.long 0x4AE
L_25219:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_25207:
	movq 0x18(%rbp),%r13
	movq 0x10(%r13),%r11
	movb 0x0(%r11),%r14b
	cmpb $0x1,%r14b
	je L_25215
	cmpb $0x2,%r14b
	je L_383217
L_25208:
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_25213
	cmpq $0x2,%r14
	je L_25215
L_25209:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xE73,%r15
	je L_383214
L_25211:
	movq 0x0(%r14),%r15
	jmp L_25204
.p2align 0x4
L_383214:
L_25210:
	movq 0x0(%r14),%r15
	jmp x_43
.p2align 0x4
L_383217:
L_25175:
	movq (globalObjptr+0x1B08)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x5AF
loop_365:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_25221
L_25227:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_25228+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_25228
.p2align 0x4
.long 0x45B
L_25228:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_25221:
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_25213
	cmpq $0x2,%r14
	je L_25215
L_25222:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xE73,%r15
	je L_383220
L_25224:
	movq 0x0(%r14),%r15
	jmp L_25204
.p2align 0x4
L_383220:
L_25223:
	movq 0x0(%r14),%r15
	jmp x_43
.p2align 0x4
.long 0x4E5
L_25163:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_25164
L_25176:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_25177+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_25177
.p2align 0x4
.long 0x4E7
L_25177:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_25164:
	movq 0x18(%rbp),%r13
	movq 0x10(%r13),%r11
	movb 0x0(%r11),%r14b
	cmpb $0x1,%r14b
	je L_25172
	cmpb $0x2,%r14b
	je L_25175
L_25165:
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_25170
	cmpq $0x2,%r14
	je L_25172
L_25166:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xE73,%r15
	je L_383224
L_25168:
	movq 0x0(%r14),%r15
	jmp L_25161
.p2align 0x4
L_383224:
L_25167:
	movq 0x0(%r14),%r15
	jmp x_44
.p2align 0x4
.long 0x521
loop_364:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_25179
L_25185:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_25186+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_25186
.p2align 0x4
.long 0x4E8
L_25186:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_25179:
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_25170
	cmpq $0x2,%r14
	je L_25172
L_25180:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xE73,%r15
	je L_383230
L_25182:
	movq 0x0(%r14),%r15
	jmp L_25161
.p2align 0x4
L_383230:
L_25181:
	movq 0x0(%r14),%r15
	jmp x_44
.p2align 0x4
.long 0x5AF
L_25192:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movl 0x18(%rbp),%r15d
	movl %r15d,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_25193
L_25201:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_25202+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_25202
.p2align 0x4
.long 0x45D
L_25202:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_25193:
	movl 0x10(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_383234
L_25194:
	movl $0x0,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_383234:
L_25195:
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_25170
	cmpq $0x2,%r14
	je L_25172
L_25196:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xE73,%r15
	je L_383235
L_25198:
	movq 0x0(%r14),%r15
	jmp L_25161
.p2align 0x4
L_383235:
L_25197:
	movq 0x0(%r14),%r15
	jmp x_44
.text
.p2align 0x4
.globl x_1239
.hidden x_1239
x_1239:
L_25235:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_25236
L_25237:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_25238+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_25238
.p2align 0x4
.long 0x494
L_25238:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_25236:
	jmp set_8
.text
.p2align 0x4
.globl set_8
.hidden set_8
set_8:
L_25239:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_25240
L_25284:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_25285+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_25285
.p2align 0x4
.long 0x494
L_25285:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_25240:
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_383251
	cmpq $0x2,%r14
	je L_383250
L_25241:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xE73,%r15
	je L_383243
L_25260:
	movq 0x0(%r14),%r15
L_25261:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x23E0,%r14
	je L_383242
	cmpq $0x23E1,%r14
	je L_383241
	cmpq $0x23E2,%r14
	je L_383240
L_25262:
	movq 0x10(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x8(%rbp)
	addq $0x18,%rbp
	leaq (L_25263+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1232
.p2align 0x4
L_383240:
L_25281:
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	addq $0x10,%rbp
	leaq (loop_366+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1233
.p2align 0x4
L_383241:
L_25280:
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	addq $0x10,%rbp
	leaq (loop_366+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1234
.p2align 0x4
L_383242:
L_25274:
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	addq $0x10,%rbp
	leaq (loop_366+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1235
.p2align 0x4
L_383243:
L_25242:
	movq 0x0(%r14),%r15
L_25243:
	movq 0x0(%r15),%r14
	movq %r14,%r13
	andq $0x1,%r13
	cmpq $0x1,%r13
	je L_383249
L_25244:
	movl 0x0(%rbp),%r13d
	shlq $0x1,%r13
	orq $0x1,%r13
	movq %r15,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r13,0x0(%r15)
	movq 0x0(%r14),%r15
	cmpq $0x1,%r15
	je L_383248
L_25245:
	movq 0x8(%r15),%r14
	movq %r14,0x8(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,%r15
L_25246:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x208D,%r14
	je L_383247
	cmpq $0x208E,%r14
	je L_383246
	cmpq $0x208F,%r14
	je L_383245
	cmpq $0x2090,%r14
	je L_383244
L_25247:
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movl 0x0(%rbp),%r15d
	movl %r15d,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_25248+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1241
.p2align 0x4
L_383244:
L_25257:
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movl 0x0(%rbp),%r15d
	movl %r15d,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_25248+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1242
.p2align 0x4
L_383245:
L_25256:
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movl 0x0(%rbp),%r15d
	movl %r15d,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_25248+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1239
.p2align 0x4
L_383246:
L_25255:
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movl 0x0(%rbp),%r15d
	movl %r15d,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_25248+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1240
.p2align 0x4
L_383247:
L_25254:
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movl 0x0(%rbp),%r15d
	movl %r15d,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_25248+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1243
.p2align 0x4
L_383248:
L_25253:
	movl $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_383249:
L_25259:
	shrq $0x1,%r14
	movl %r14d,%r15d
	cmpl 0x0(%rbp),%r15d
	sete %al
	movzbl %al,%eax
	movl %eax,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_383250:
L_25271:
	cmpl $0x0,0x0(%rbp)
	sete %al
	movzbl %al,%eax
	movl %eax,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_383251:
L_25269:
	cmpl $0x1,0x0(%rbp)
	sete %al
	movzbl %al,%eax
	movl %eax,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x521
L_25263:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r14
	movq %r14,0x10(%rbp)
	movq 0x10(%r14),%r11
	movb 0x0(%r11),%r13b
	cmpb $0x1,%r13b
	je L_25271
	cmpb $0x2,%r13b
	je L_383256
L_25264:
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_25269
	cmpq $0x2,%r14
	je L_25271
L_25265:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xE73,%r15
	je L_383253
L_25267:
	movq 0x0(%r14),%r15
	jmp L_25261
.p2align 0x4
L_383253:
L_25266:
	movq 0x0(%r14),%r15
	jmp L_25243
.p2align 0x4
L_383256:
L_25273:
	movq (globalObjptr+0x1B08)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x72E
loop_366:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%rbp)
	cmpq $0x1,%r14
	je L_25269
	cmpq $0x2,%r14
	je L_25271
L_25275:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xE73,%r15
	je L_383258
L_25277:
	movq 0x0(%r14),%r15
	jmp L_25261
.p2align 0x4
L_383258:
L_25276:
	movq 0x0(%r14),%r15
	jmp L_25243
.p2align 0x4
.long 0x521
L_25248:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movl 0x18(%rbp),%r15d
	movl %r15d,0x4(%rbp)
	testl %r15d,%r15d
	jnz L_383261
L_25249:
	movl $0x0,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_383261:
L_25250:
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_25253
L_25251:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_25246
.text
.p2align 0x4
.globl x_1241
.hidden x_1241
x_1241:
L_25286:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_25287
L_25290:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_25291+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_25291
.p2align 0x4
.long 0x4E8
L_25291:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_25287:
	movl 0x0(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_383263
L_25288:
	movl $0x0,0x0(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp set_8
.p2align 0x4
L_383263:
L_25289:
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp unify_3
.text
.p2align 0x4
.globl x_1243
.hidden x_1243
x_1243:
L_25292:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_25293
L_25296:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_25297+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_25297
.p2align 0x4
.long 0x494
L_25297:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_25293:
	movl 0x0(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_383265
L_25294:
	movl $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_383265:
L_25295:
	movl $0x0,0x0(%rbp)
	jmp set_8
.text
.p2align 0x4
.globl x_1240
.hidden x_1240
x_1240:
L_25298:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_25299
L_25300:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_25301+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_25301
.p2align 0x4
.long 0x494
L_25301:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_25299:
	jmp set_8
.text
.p2align 0x4
.globl x_1242
.hidden x_1242
x_1242:
L_25302:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_25303
L_25313:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_25314+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_25314
.p2align 0x4
.long 0x4E8
L_25314:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_25303:
	movl 0x0(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_383268
L_25304:
	movq 0x10(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_25305+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp dep_0
.p2align 0x4
L_383268:
L_25309:
	movl $0x1,0x20(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_25310+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp set_8
.p2align 0x4
.long 0x4E5
L_25305:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movl 0x20(%rbp),%r15d
	movl %r15d,0x18(%rbp)
	testl %r15d,%r15d
	jz L_383270
L_25308:
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp dep_0
.p2align 0x4
L_383270:
L_25307:
	movl $0x0,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x2B
L_25310:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movl 0x20(%rbp),%r15d
	movl %r15d,0x18(%rbp)
	testl %r15d,%r15d
	jz L_25307
L_25312:
	movl $0x1,0x0(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp set_8
.text
.p2align 0x4
.globl dep_0
.hidden dep_0
dep_0:
L_25315:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_25352
L_25316:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_383279
L_25317:
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_383278
	cmpq $0x2,%r14
	je L_383277
L_25318:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xE73,%r15
	je L_383275
L_25322:
	movq 0x0(%r14),%r15
L_25323:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x23E0,%r14
	je L_383274
	cmpq $0x23E1,%r14
	je L_383273
	cmpq $0x23E2,%r14
	je L_383272
L_25324:
	movq 0x10(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x8(%rbp)
	addq $0x18,%rbp
	leaq (L_25325+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1232
.p2align 0x4
L_383272:
L_25349:
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	addq $0x10,%rbp
	leaq (loop_367+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1233
.p2align 0x4
L_383273:
L_25348:
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	addq $0x10,%rbp
	leaq (loop_367+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1234
.p2align 0x4
L_383274:
L_25339:
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	addq $0x10,%rbp
	leaq (loop_367+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1235
.p2align 0x4
L_383275:
L_25319:
	movq 0x0(%r14),%r15
x_45:
	movq 0x0(%r15),%r14
	movq %r14,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	je L_383276
L_25320:
	movq 0x0(%r14),%r15
	movq $0x411B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	movq $0x2849,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r15,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	movl $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_383276:
L_25321:
	shrq $0x1,%r14
	movl %r14d,%r15d
	movq 0x0(%rbp),%r14
	movq %r14,0x8(%rbp)
	movl %r15d,0x0(%rbp)
	jmp x_1243
.p2align 0x4
L_383277:
L_25334:
	movq 0x0(%rbp),%r15
	movq %r15,0x8(%rbp)
	movl $0x0,0x0(%rbp)
	jmp x_1243
.p2align 0x4
L_383278:
L_25332:
	movq 0x0(%rbp),%r15
	movq %r15,0x8(%rbp)
	movl $0x1,0x0(%rbp)
	jmp x_1243
.p2align 0x4
L_383279:
L_25352:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_25353+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_25353
.p2align 0x4
.long 0x45F
L_25353:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_25317
.p2align 0x4
.long 0x5AF
L_25325:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_25326
L_25337:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_25338+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_25338
.p2align 0x4
.long 0x45B
L_25338:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_25326:
	movq 0x10(%rbp),%r13
	movq 0x10(%r13),%r11
	movb 0x0(%r11),%r14b
	cmpb $0x1,%r14b
	je L_25334
	cmpb $0x2,%r14b
	je L_383284
L_25327:
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_25332
	cmpq $0x2,%r14
	je L_25334
L_25328:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xE73,%r15
	je L_383281
L_25330:
	movq 0x0(%r14),%r15
	jmp L_25323
.p2align 0x4
L_383281:
L_25329:
	movq 0x0(%r14),%r15
	jmp x_45
.p2align 0x4
L_383284:
L_25336:
	movq (globalObjptr+0x1B08)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4AF
loop_367:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_25340
L_25346:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_25347+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_25347
.p2align 0x4
.long 0x45F
L_25347:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_25340:
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_25332
	cmpq $0x2,%r14
	je L_25334
L_25341:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xE73,%r15
	je L_383287
L_25343:
	movq 0x0(%r14),%r15
	jmp L_25323
.p2align 0x4
L_383287:
L_25342:
	movq 0x0(%r14),%r15
	jmp x_45
.text
.p2align 0x4
.globl x_1232
.hidden x_1232
x_1232:
L_25354:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_25355
L_25411:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_25412+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_25412
.p2align 0x4
.long 0x45F
L_25412:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_25355:
	movq 0x0(%rbp),%r13
	movq 0x10(%r13),%r15
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r14
	incq %r14
	jo L_383300
L_25357:
	movq %r14,0x0(%r13)
	movq 0x0(%r15),%r13
	cmpq $0x1,%r13
	je L_383299
L_25358:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_25360:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_25361
L_25404:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0xCCE,%r13
	je L_383295
L_25361:
	incl %ecx
	jo L_383294
L_25363:
	cmpq $0x1,%r14
	je L_383291
L_25364:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_25360
.p2align 0x4
L_383291:
L_25365:
L_25366:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_383293
L_25368:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl x_46
L_25403:
	movl %ecx,0x0(%r15)
x_46:
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x10(%rbp)
	movq 0x18(%r15),%r11
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	jne L_383292
L_25401:
	movq %r11,0x20(%rbp)
	movq %r14,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_25402+0x0)(%rip),%r14
	movq %r14,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unique_0
.p2align 0x4
L_383292:
L_25370:
L_25371:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_25372+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_383293:
L_25367:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_383294:
L_25362:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_383295:
L_25405:
	movslq %ecx,%r14
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r14
	jo L_25367
L_25406:
	movq %r14,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_25408
L_25409:
	movl %ecx,0x0(%r14)
L_25408:
	movq 0x0(%r15),%r14
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_383299:
L_25410:
	xorl %ecx,%ecx
	jmp L_25366
.p2align 0x4
L_383300:
L_25356:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x2B
L_25402:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x10(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp L_25371
.p2align 0x4
.long 0x1
L_25372:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_25373+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4AF
L_25373:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xE1B8)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_25374+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5AF
L_25374:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_25375+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x51E
L_25375:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_25376
L_25399:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_25400+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_25400
.p2align 0x4
.long 0x4AE
L_25400:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_25376:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_25377:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_25362
L_25378:
	cmpq $0x1,%r14
	je L_383302
L_25379:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_25377
.p2align 0x4
L_383302:
L_25380:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_25381
L_25397:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_25398+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_25398
.p2align 0x4
.long 0x4E6
L_25398:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_25381:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_383303
L_25382:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
toString_8:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	addq $0x8,%rbp
	leaq (rev_9+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_383303:
L_25396:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_8
.p2align 0x4
.long 0x1
rev_9:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_383309
L_25383:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_25384:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_383308
.p2align 0x4,,0x7
L_25385:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_383307
L_25386:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_25384
.p2align 0x4
L_383307:
L_25388:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_25389+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_383308:
L_25393:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_25394+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_25394
.p2align 0x4
.long 0x45B
L_25394:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_25385
.p2align 0x4
L_383309:
L_25395:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_25388
.p2align 0x4
.long 0x1
L_25389:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_25390
L_25391:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_25392+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_25392
.p2align 0x4
.long 0x451
L_25392:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_25390:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl x_1235
.hidden x_1235
x_1235:
L_25413:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_25414
L_25425:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_25426+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_25426
.p2align 0x4
.long 0x45F
L_25426:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_25414:
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x23E0,%r14
	je L_383313
	cmpq $0x23E1,%r14
	je L_383312
	cmpq $0x23E2,%r14
	je L_383311
L_25415:
	movq 0x10(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	addq $0x20,%rbp
	leaq (L_25416+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1232
.p2align 0x4
L_383311:
L_25424:
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	addq $0x18,%rbp
	leaq (L_25422+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1233
.p2align 0x4
L_383312:
L_25423:
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	addq $0x18,%rbp
	leaq (L_25422+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1234
.p2align 0x4
L_383313:
L_25421:
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	addq $0x18,%rbp
	leaq (L_25422+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1235
.p2align 0x4
.long 0x4E5
L_25416:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r14
	movq %r14,0x18(%rbp)
	movq 0x10(%r14),%r11
	movb 0x0(%r11),%r13b
	cmpb $0x1,%r13b
	je L_383316
	cmpb $0x2,%r13b
	je L_383315
L_25417:
	movq 0x10(%rbp),%r15
L_25418:
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp and2_0
.p2align 0x4
L_383315:
L_25420:
	movq (globalObjptr+0x1B08)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_383316:
L_25419:
	movq $0x2,%r15
	jmp L_25418
.p2align 0x4
.long 0x521
L_25422:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	jmp L_25418
.text
.p2align 0x4
.globl and2_0
.hidden and2_0
and2_0:
L_25427:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_25479
L_25428:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_383338
L_25429:
	movq 0x8(%rbp),%r15
	cmpq $0x1,%r15
	je L_383334
	cmpq $0x2,%r15
	je L_25454
L_25430:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xE73,%r14
	je L_383320
L_25466:
	movq 0x0(%r15),%r14
	movq 0x0(%rbp),%r15
	cmpq $0x1,%r15
	je L_383319
	cmpq $0x2,%r15
	je L_383318
L_25467:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0xE74,%r13
	je L_383317
L_25468:
	movq $0x47C1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq %r15,0x0(%r13)
	movq $0x1CE9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r15,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_383317:
L_25469:
	movq $0x47C3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq %r15,0x0(%r13)
	movq $0x1CE9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r15,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_383318:
L_25454:
	movq $0x2,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_383319:
L_25470:
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_383320:
L_25431:
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_383332
	cmpq $0x2,%r14
	je L_25454
L_25432:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xE73,%r13
	je L_383321
L_25463:
	movq 0x0(%r14),%r13
	movq $0x47C5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x8(%r14)
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq $0x1CE9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_383321:
L_25433:
	movq 0x0(%r14),%r13
	movq %r13,0x18(%rbp)
	movq 0x10(%rbp),%r14
	movq 0x0(%r14),%r11
	movq 0x0(%r13),%r14
	movq %r11,%r13
	andq $0x1,%r13
	cmpq $0x1,%r13
	jne L_383325
L_25456:
	shrq $0x1,%r11
	movl %r11d,%r13d
	testl %r13d,%r13d
	jz L_25454
L_25458:
	movq %r14,%r13
	andq $0x1,%r13
	cmpq $0x1,%r13
	jne L_383323
L_25460:
	shrq $0x1,%r14
	movl %r14d,%r13d
	testl %r13d,%r13d
	jz L_25454
L_25462:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_383323:
L_25459:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_383325:
L_25434:
	movq %r14,%r13
	andq $0x1,%r13
	cmpq $0x1,%r13
	jne L_383327
L_25452:
	shrq $0x1,%r14
	movl %r14d,%r13d
	testl %r13d,%r13d
	jz L_25454
L_25455:
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_383327:
L_25435:
	movq $0x2847,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x12C9,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x10,%r12
	movq $0x1CE7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x20(%rbp)
	addq $0x10,%r12
	movq %r13,0x0(%r14)
	movq 0x0(%r13),%r14
	movq %r14,%r13
	andq $0x1,%r13
	cmpq $0x1,%r13
	je L_383330
L_25436:
	movq 0x0(%r14),%r13
	movq $0x4121,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x18,%r12
	movq 0x0(%rbp),%r10
	movq %r10,0x0(%r11)
	movq %r15,0x8(%r11)
	movq $0x2849,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	movq 0x10(%rbp),%r15
x_47:
	movq 0x0(%r15),%r14
	movq %r14,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	je L_383329
L_25437:
	movq 0x0(%r14),%r15
	movq $0x4119,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq 0x20(%rbp),%r11
	movq %r11,0x0(%r13)
	movq 0x0(%rbp),%r11
	movq %r11,0x8(%r13)
	movq $0x2849,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r15,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	movq 0x18(%rbp),%r15
x_48:
	movq 0x0(%r15),%r14
	movq %r14,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	je L_383328
L_25438:
	movq 0x0(%r14),%r15
	movq $0x4119,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq 0x20(%rbp),%r11
	movq %r11,0x0(%r13)
	movq 0x8(%rbp),%r11
	movq %r11,0x8(%r13)
	movq $0x2849,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r15,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
L_25439:
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_383328:
L_25440:
	shrq $0x1,%r14
	movl %r14d,%r15d
	movl %r15d,0x30(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x30,%rbp
	leaq (L_25441+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1241
.p2align 0x4
L_383329:
L_25442:
	shrq $0x1,%r14
	movl %r14d,%r15d
	movl %r15d,0x30(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x30,%rbp
	leaq (L_25443+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1241
.p2align 0x4
L_383330:
L_25447:
	shrq $0x1,%r14
	movl %r14d,%r13d
	movl %r13d,0x30(%rbp)
	movq %r15,0x38(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x30,%rbp
	leaq (L_25448+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1242
.p2align 0x4
L_383332:
L_25464:
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_383334:
L_25472:
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_383337
	cmpq $0x2,%r14
	je L_25454
L_25473:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xE74,%r13
	je L_383335
L_25474:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_383335:
L_25475:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_383337:
L_25476:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_383338:
L_25479:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_25480+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_25480
.p2align 0x4
.long 0x45F
L_25480:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_25429
.p2align 0x4
.long 0x459
L_25441:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movl 0x30(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	jmp L_25439
.p2align 0x4
.long 0x5FF
L_25443:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movl 0x30(%rbp),%r15d
	movl %r15d,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_25444
L_25445:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_25446+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_25446
.p2align 0x4
.long 0x72F
L_25446:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_25444:
	movq 0x18(%rbp),%r15
	jmp x_48
.p2align 0x4
.long 0x4DD
L_25448:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movl 0x30(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_25449
L_25450:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_25451+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_25451
.p2align 0x4
.long 0x63C
L_25451:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_25449:
	movq 0x10(%rbp),%r15
	jmp x_47
.text
.p2align 0x4
.globl x_1234
.hidden x_1234
x_1234:
L_25481:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_25482
L_25493:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_25494+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_25494
.p2align 0x4
.long 0x45F
L_25494:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_25482:
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x23E0,%r14
	je L_383344
	cmpq $0x23E1,%r14
	je L_383343
	cmpq $0x23E2,%r14
	je L_383342
L_25483:
	movq 0x10(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	addq $0x20,%rbp
	leaq (L_25484+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1232
.p2align 0x4
L_383342:
L_25492:
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	addq $0x18,%rbp
	leaq (L_25490+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1233
.p2align 0x4
L_383343:
L_25491:
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	addq $0x18,%rbp
	leaq (L_25490+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1234
.p2align 0x4
L_383344:
L_25489:
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	addq $0x18,%rbp
	leaq (L_25490+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1235
.p2align 0x4
.long 0x4E5
L_25484:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r14
	movq %r14,0x18(%rbp)
	movq 0x10(%r14),%r11
	movb 0x0(%r11),%r13b
	cmpb $0x1,%r13b
	je L_383347
	cmpb $0x2,%r13b
	je L_383346
L_25485:
	movq 0x10(%rbp),%r15
L_25486:
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp and2_0
.p2align 0x4
L_383346:
L_25488:
	movq (globalObjptr+0x1B08)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_383347:
L_25487:
	movq $0x2,%r15
	jmp L_25486
.p2align 0x4
.long 0x521
L_25490:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	jmp L_25486
.text
.p2align 0x4
.globl x_1233
.hidden x_1233
x_1233:
L_25495:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_25496
L_25507:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_25508+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_25508
.p2align 0x4
.long 0x45F
L_25508:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_25496:
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x23E0,%r14
	je L_383350
	cmpq $0x23E1,%r14
	je L_383349
	cmpq $0x23E2,%r14
	je L_383348
L_25497:
	movq 0x10(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	addq $0x20,%rbp
	leaq (L_25498+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1232
.p2align 0x4
L_383348:
L_25506:
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	addq $0x18,%rbp
	leaq (L_25504+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1233
.p2align 0x4
L_383349:
L_25505:
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	addq $0x18,%rbp
	leaq (L_25504+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1234
.p2align 0x4
L_383350:
L_25503:
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	addq $0x18,%rbp
	leaq (L_25504+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1235
.p2align 0x4
.long 0x4E5
L_25498:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r14
	movq %r14,0x18(%rbp)
	movq 0x10(%r14),%r11
	movb 0x0(%r11),%r13b
	cmpb $0x1,%r13b
	je L_383353
	cmpb $0x2,%r13b
	je L_383352
L_25499:
	movq 0x10(%rbp),%r15
L_25500:
	movq %r15,0x0(%rbp)
	jmp and2_0
.p2align 0x4
L_383352:
L_25502:
	movq (globalObjptr+0x1B08)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_383353:
L_25501:
	movq $0x2,%r15
	jmp L_25500
.p2align 0x4
.long 0x521
L_25504:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	jmp L_25500
.text
.p2align 0x4
.globl get_25
.hidden get_25
get_25:
L_25509:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_25510
L_25631:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_25632+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_25632
.p2align 0x4
.long 0x45F
L_25632:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_25510:
	movq 0x8(%rbp),%r15
	movq 0x20(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_25511+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_0
.p2align 0x4
.long 0x655
L_25511:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r15,0x38(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1448,%r15
	jne L_383355
L_25513:
	movq 0x8(%r14),%r15
	movq 0x10(%r15),%r13
	movq %r13,0x38(%rbp)
	movq %r13,0x48(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_25514+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_1
.p2align 0x4
L_383355:
L_25512:
	movq (globalObjptr+0x1500)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x540
L_25514:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x10(%rbp)
	andq $0x1,%r15
	jnz L_383356
L_25515:
	movq 0x0(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_25516+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_0
.p2align 0x4
L_383356:
L_25630:
	movq 0x10(%rbp),%r15
	shrq $0x1,%r15
	movl %r15d,%r14d
	movl %r14d,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x540
L_25516:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_25517
L_25628:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_25629+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_25629
.p2align 0x4
.long 0x657
L_25629:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_25517:
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1448,%r15
	jne L_25512
L_25518:
	movq 0x8(%r14),%r15
	movq 0x10(%r15),%r13
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x28DD,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r14,0x8(%r11)
	addq $0x18,%r12
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq %r11,0x0(%r15)
	movq 0x0(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_25519+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_12
.p2align 0x4
.long 0x5BF
L_25519:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x10(%rbp)
	movb 0x0(%r15),%r14b
	cmpb $0x1,%r14b
	je L_383360
	cmpb $0x2,%r14b
	je L_383359
L_25520:
	movb $0x2,0x0(%r15)
	movq 0x0(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_25521+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_0
.p2align 0x4
L_383359:
L_25627:
	movq (globalObjptr+0x1B60)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_383360:
L_25626:
	movq (globalObjptr+0x1AE0)(%rip),%r13
	movq %r13,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x730
L_25521:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_25522
L_25624:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_25625+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_25625
.p2align 0x4
.long 0x736
L_25625:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_25522:
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1448,%r15
	jne L_25512
L_25523:
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r13
	movq %r13,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	je L_383382
L_25524:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE77,%r15
	je L_383381
	cmpq $0xE78,%r15
	je L_383367
	cmpq $0xE79,%r15
	je L_383365
	cmpq $0xE7A,%r15
	je L_383363
	cmpq $0xE7B,%r15
	je L_383361
L_25525:
	xorl %ecx,%ecx
L_25526:
	movq 0x10(%rbp),%r15
	movb $0x1,0x0(%r15)
	movq $0x195F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %ecx,0x0(%r15)
	movl %ecx,0x0(%rbp)
	addq $0x18,%r12
	movl $0x0,0x4(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x38(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_383361:
L_25604:
	movq 0x8(%r13),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_383362
L_25606:
	movl %r13d,0x50(%rbp)
	movq $0x38DD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_25607+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_0
.p2align 0x4
L_383362:
L_25531:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_383363:
L_25601:
	movq 0x0(%r13),%r14
	cmpq $0x1,%r14
	je L_383364
L_25602:
	movq 0x8(%r14),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r14),%r14
	movq $0x1,0x20(%rbp)
	movq %r14,%r15
L_25582:
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_25583+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_25
.p2align 0x4
L_383364:
L_25554:
	xorl %ecx,%ecx
	jmp L_25526
.p2align 0x4
L_383365:
L_25580:
	movq 0x8(%r13),%r14
	cmpq $0x1,%r14
	je L_25554
L_25581:
	movq 0x8(%r14),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r14),%r14
	movq $0x1,0x20(%rbp)
	movq %r14,%r15
	jmp L_25582
.p2align 0x4
L_383367:
L_25528:
	movq 0x0(%r13),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x127F,%r14
	je L_383369
L_25561:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_25531
L_25563:
	movl %r13d,0x50(%rbp)
	movq $0x38D9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_25564+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_0
.p2align 0x4
L_383369:
L_25529:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x20(%rbp)
	cmpq %rdx,%r15
	movq %r14,0x18(%rbp)
	jne L_25531
L_25532:
	testq %rdx,%rdx
	jz L_383379
L_25533:
	cmpq $0x7FFFFFFF,%rdx
	ja L_383378
L_25534:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xF1,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_25535+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_25535
.p2align 0x4
.long 0x731
L_25535:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq %rax,0x28(%rbp)
L_25536:
	movq $0x0,0x40(%rbp)
loop_368:
	movq 0x20(%rbp),%r14
	cmpq %r14,0x40(%rbp)
	jl L_383377
L_25537:
	movq 0x28(%rbp),%r14
	movq $0xAA1,0xFFFFFFFFFFFFFFF8(%r14)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%ecx
	movslq %ecx,%r14
	cmpq %r14,%r15
	jne L_25531
L_25539:
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_369:
	cmpl %ecx,%ebx
	je L_383374
L_25540:
	movslq %ebx,%r14
	cmpq %r15,%r14
	jnb L_383373
L_25543:
	movq 0x28(%rbp),%r13
	movl 0x0(%r13,%r14,4),%r11d
	testl %r11d,%r11d
	jnz L_383371
L_25544:
	incl %ebx
	jo L_383370
L_25546:
	jmp loop_369
.p2align 0x4
L_383370:
L_25545:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_383371:
L_25547:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_25549
L_25550:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_25551+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_25551
.p2align 0x4
.long 0x732
L_25551:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_25549:
	movl $0x1,%ecx
	jmp L_25526
.p2align 0x4
L_383373:
L_25542:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_383374:
L_25552:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_25554
L_25555:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_25556+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_25556
.p2align 0x4
.long 0x732
L_25556:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_25554
.p2align 0x4
L_383377:
L_25557:
	movq 0x40(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x18(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x50(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_25558+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_25
.p2align 0x4
L_383378:
L_25559:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_383379:
L_25560:
	movq (globalObjptr+0x1B68)(%rip),%r15
	movq %r15,0x28(%rbp)
	jmp L_25536
.p2align 0x4
L_383381:
L_25527:
	movq 0x28(%rbp),%r15
	movl 0x0(%r15),%r14d
	cmpl %r14d,0x4(%r13)
	sete %cl
	movzbl %cl,%ecx
	jmp L_25526
.p2align 0x4
L_383382:
L_25623:
	xorl %ecx,%ecx
	jmp L_25526
.p2align 0x4
.long 0x734
L_25607:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r14
	movq %r14,0x18(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%ecx
	movslq %ecx,%r14
	cmpq %r15,%r14
	jne L_25531
L_25609:
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_371:
	cmpl %ecx,%ebx
	je L_383389
L_25610:
	movslq %ebx,%r14
	cmpq %r15,%r14
	jnb L_25542
L_25612:
	movq 0x18(%rbp),%r13
	movl 0x0(%r13,%r14,4),%r11d
	testl %r11d,%r11d
	jnz L_383386
L_25613:
	incl %ebx
	jo L_25545
L_25614:
	jmp loop_371
.p2align 0x4
L_383386:
L_25615:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_25549
L_25617:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_25618+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_25618
.p2align 0x4
.long 0x732
L_25618:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_25549
.p2align 0x4
L_383389:
L_25619:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_25554
L_25621:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_25622+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_25622
.p2align 0x4
.long 0x732
L_25622:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_25554
.p2align 0x4
.long 0x4E4
L_25583:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movl 0x48(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_25584
L_25598:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_25599+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_25599
.p2align 0x4
.long 0x735
L_25599:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_25584:
	movq $0x253F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x28(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_383392
L_25585:
	movq %r15,0x20(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	jmp L_25582
.p2align 0x4
L_383392:
L_25586:
	movq 0x20(%rbp),%r15
	movl 0x28(%rbp),%ecx
.p2align 0x4,,0x7
L_25587:
	testl %ecx,%ecx
	jnz L_383395
L_25588:
	cmpq $0x1,%r15
	je L_383393
L_25589:
	movl 0x0(%r15),%ecx
	movq 0x8(%r15),%r15
	jmp L_25587
.p2align 0x4
L_383393:
L_25590:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_25554
L_25592:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_25593+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_25593
.p2align 0x4
.long 0x732
L_25593:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_25554
.p2align 0x4
L_383395:
L_25594:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_25549
L_25596:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_25597+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_25597
.p2align 0x4
.long 0x732
L_25597:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_25549
.p2align 0x4
.long 0x734
L_25564:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r14
	movq %r14,0x18(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%ecx
	movslq %ecx,%r14
	cmpq %r15,%r14
	jne L_25531
L_25566:
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_370:
	cmpl %ecx,%ebx
	je L_383402
L_25567:
	movslq %ebx,%r14
	cmpq %r15,%r14
	jnb L_25542
L_25569:
	movq 0x18(%rbp),%r13
	movl 0x0(%r13,%r14,4),%r11d
	testl %r11d,%r11d
	jnz L_383399
L_25570:
	incl %ebx
	jo L_25545
L_25571:
	jmp loop_370
.p2align 0x4
L_383399:
L_25572:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_25549
L_25574:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_25575+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_25575
.p2align 0x4
.long 0x732
L_25575:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_25549
.p2align 0x4
L_383402:
L_25576:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_25554
L_25578:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_25579+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_25579
.p2align 0x4
.long 0x732
L_25579:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_25554
.p2align 0x4
.long 0x733
L_25558:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movl 0x50(%rbp),%r15d
	movl %r15d,0x48(%rbp)
	movq 0x28(%rbp),%r14
	movq 0x40(%rbp),%r13
	movl %r15d,0x0(%r14,%r13,4)
	incq %r13
	movq %r13,0x40(%rbp)
	jmp loop_368
.text
.p2align 0x4
.globl peek_1
.hidden peek_1
peek_1:
L_25633:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_25634
L_25660:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_25661+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_25661
.p2align 0x4
.long 0x45F
L_25661:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_25634:
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_383415
L_25636:
	movq %r15,0x0(%r13)
	movq 0x0(%rbp),%r13
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_383414
L_25637:
	movq 0x0(%r11),%r14
	movq 0x8(%r11),%r11
	xorl %ecx,%ecx
	movq %r11,%r15
.p2align 0x4,,0x7
L_25639:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_25640
L_25651:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xCAF,%r13
	jne L_25640
L_25652:
	movl 0x0(%r14),%r13d
	movq 0x8(%r14),%r11
	cmpq %r11,0x8(%rbp)
	je L_383409
L_25640:
	incl %ecx
	jo L_383408
L_25642:
	cmpq $0x1,%r15
	je L_383405
L_25643:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_25639
.p2align 0x4
L_383405:
L_25644:
L_25645:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_383407
L_25647:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_25649
L_25650:
	movl %ecx,0x0(%r15)
L_25649:
	movq $0x0,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_383407:
L_25646:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_383408:
L_25641:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_383409:
L_25654:
	movl %r13d,%r14d
	shlq $0x1,%r14
	orq $0x1,%r14
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_25646
L_25655:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_25657
L_25658:
	movl %ecx,0x0(%r15)
L_25657:
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_383414:
L_25659:
	xorl %ecx,%ecx
	jmp L_25645
.p2align 0x4
L_383415:
L_25635:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl tabulate_0
.hidden tabulate_0
tabulate_0:
L_25662:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_25663
L_25745:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_25746+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_25746
.p2align 0x4
.long 0x457
L_25746:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_25663:
	movslq 0x8(%rbp),%rdx
	movq %rdx,0x10(%rbp)
	testq %rdx,%rdx
	jz L_383438
L_25664:
	cmpq $0x7FFFFFFF,%rdx
	ja L_383437
L_25665:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xF1,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_25666+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_25666
.p2align 0x4
.long 0x452
L_25666:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq %rax,0x8(%rbp)
L_25667:
	movq $0x0,0x18(%rbp)
.p2align 0x4,,0x7
loop_372:
	movq 0x18(%rbp),%r15
	cmpq 0x10(%rbp),%r15
	jnl L_383436
L_25669:
	movl %r15d,%r14d
	movq 0x0(%rbp),%r15
	cmpq $0x1,%r15
	je L_383434
	cmpq $0x2,%r15
	je L_383433
L_25670:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%rax
	shrq $0x1,%rax
	subq $0x1C68,%rax
	cmpq $0xB,%rax
	ja L_383417
	leaq jumpTable_37(%rip),%rbx
	jmp *(%rbx,%rax,8)
.data
.p2align 0x4
jumpTable_37:
.quad L_383432,L_383431,L_383430,L_383429,L_383428,L_383426,L_383425,L_383423,L_383422,L_383421,L_383420,L_383419
.text
.p2align 0x4
L_383417:
L_25671:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r13
	movslq %r14d,%r11
	movq 0x8(%r15),%r14
	movq 0x0(%r14,%r11,8),%r10
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r15
	shrq $0x1,%r15
	cmpq $0xE7F,%r15
	je L_383418
L_25675:
	movq %r13,0x30(%rbp)
	movq 0x18(%r10),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_25673+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_26
.p2align 0x4
L_383418:
L_25672:
	movq %r13,0x30(%rbp)
	movq 0x0(%r10),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_25673+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_26
.p2align 0x4
L_383419:
L_25738:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x30(%rbp)
	movslq %r14d,%r13
	movq 0x8(%r15),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq %r11,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_25673+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_26
.p2align 0x4
L_383420:
L_25737:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x30(%rbp)
	movslq %r14d,%r13
	movq 0x8(%r15),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq %r11,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_25673+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3806
.p2align 0x4
L_383421:
L_25731:
	movslq %r14d,%r15
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r13
	movq 0x0(%r13,%r15,8),%r11
	movq 0x0(%r11),%r10
	movq %r10,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_25732+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_4
.p2align 0x4
L_383422:
L_25730:
	movq 0x0(%rbp),%r13
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r15
	movslq %r14d,%r13
	movq 0x0(%r11,%r13,8),%r11
	movq %r11,%r14
get_0:
	movq 0x8(%r15),%r13
	movq %r13,0x40(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x8(%r14),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x28(%rbp)
	movq %r13,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_25716+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_2
.p2align 0x4
L_383423:
L_25727:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r13
	movslq %r14d,%r15
	cmpq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	jnb L_383424
L_25729:
	salq $0x4,%r15
	movq 0x8(%r13,%r15,1),%r14
	movl 0x0(%r14),%ecx
.p2align 0x4,,0x7
L_25674:
	movq 0x8(%rbp),%r15
	movq 0x18(%rbp),%r14
	movl %ecx,0x0(%r15,%r14,4)
	incq %r14
	movq %r14,0x18(%rbp)
	jmp loop_372
.p2align 0x4
L_383424:
L_25693:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_383425:
L_25726:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x30(%rbp)
	movslq %r14d,%r13
	movq 0x8(%r15),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq %r11,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_25673+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_25
.p2align 0x4
L_383426:
L_25723:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r13
	movslq %r14d,%r15
	cmpq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	jnb L_25693
L_25725:
	movl 0x0(%r13,%r15,4),%ecx
	jmp L_25674
.p2align 0x4
L_383428:
L_25722:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x30(%rbp)
	movslq %r14d,%r13
	movq 0x8(%r15),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq %r11,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_25673+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_25
.p2align 0x4
L_383429:
L_25715:
	movq 0x0(%rbp),%r13
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r15
	movslq %r14d,%r13
	movq 0x0(%r11,%r13,8),%r11
	movq %r11,%r14
	jmp get_0
.p2align 0x4
L_383430:
L_25678:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x20(%rbp)
	movslq %r14d,%r11
	movq 0x8(%r15),%r14
	movq 0x0(%r14,%r11,8),%r10
	movq %r10,0x28(%rbp)
	movq 0x18(%r13),%r15
	movq %r15,0x60(%rbp)
	movq 0x10(%r13),%r15
	movq %r15,0x30(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x38(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x40(%rbp)
	movq 0x10(%r10),%r15
	movq %r15,0x48(%rbp)
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_25679+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_1
.p2align 0x4
L_383431:
L_25677:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x30(%rbp)
	movslq %r14d,%r13
	movq 0x8(%r15),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq %r11,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_25673+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3806
.p2align 0x4
L_383432:
L_25676:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x30(%rbp)
	movslq %r14d,%r13
	movq 0x8(%r15),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq %r11,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_25673+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_26
.p2align 0x4
L_383433:
L_25742:
	movq (globalObjptr+0x4A0)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_383434:
L_25739:
	cmpl $0xFF,%r14d
	ja L_383435
L_25740:
	movq 0x18(%rbp),%r14
	movb %r14b,%r13b
	movb %r13b,0x28(%rbp)
	movq (globalObjptr+0xE2A8)(%rip),%r14
	movq %r14,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_25673+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp contains_0
.p2align 0x4
L_383435:
L_25741:
	movq $0x7,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_383436:
L_25668:
	movq 0x8(%rbp),%r14
	movq $0xAA1,0xFFFFFFFFFFFFFFF8(%r14)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_383437:
L_25743:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_383438:
L_25744:
	movq (globalObjptr+0xC00)(%rip),%r15
	movq %r15,0x8(%rbp)
	jmp L_25667
.p2align 0x4
.long 0x5F8
L_25673:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl 0x28(%rbp),%ecx
	movl %ecx,0x20(%rbp)
	jmp L_25674
.p2align 0x4
.long 0x5F8
L_25732:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x144C,%r15
	jne L_383441
L_25734:
	cmpq $0x1,0x8(%r14)
	je L_383440
L_25735:
	xorl %ecx,%ecx
	jmp L_25674
.p2align 0x4
L_383440:
L_25736:
	movl $0x1,%ecx
	jmp L_25674
.p2align 0x4
L_383441:
L_25733:
	movq (globalObjptr+0x1500)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x557
L_25716:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_25717
L_25720:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_25721+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_25721
.p2align 0x4
.long 0x575
L_25721:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_25717:
	movq 0x30(%rbp),%r15
	cmpq $0x1,%r15
	je L_383442
L_25718:
x_49:
	movl 0x0(%r15),%ecx
	jmp L_25674
.p2align 0x4
L_383442:
L_25719:
	movq $0x53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x1953,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq 0x20(%rbp),%r11
	movq %r11,0x0(%r13)
	movq %r14,0x8(%r13)
	movq 0x28(%rbp),%r11
	movq 0x0(%r11),%r10
	movq $0x28DF,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r13,0x0(%r9)
	movq %r10,0x8(%r9)
	addq $0x18,%r12
	movq %r11,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r9,0x0(%r11)
	xchgq %r14,%r15
	jmp x_49
.p2align 0x4
.long 0x597
L_25679:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_25680
L_25713:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_25714+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_25714
.p2align 0x4
.long 0x5FC
L_25714:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_25680:
	movq 0x50(%rbp),%r15
	andq $0x1,%r15
	jnz L_383446
L_25681:
	movq 0x30(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x28DD,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x0(%r15)
	movq 0x28(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xE96,%r15
	jne L_383445
L_25682:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_383444
L_25685:
	movl %r13d,0x60(%rbp)
	movq $0x38D5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_25686+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_0
.p2align 0x4
L_383444:
L_25684:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_383445:
L_25711:
	xorl %ecx,%ecx
L_25701:
	movq $0x195F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl %ecx,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x48(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	jmp L_25674
.p2align 0x4
L_383446:
L_25712:
	movq 0x50(%rbp),%r15
	shrq $0x1,%r15
	movl %r15d,%ecx
	jmp L_25674
.p2align 0x4
.long 0x5F9
L_25686:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_25687
L_25709:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_25710+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_25710
.p2align 0x4
.long 0x738
L_25710:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_25687:
	movq 0x28(%rbp),%r14
	movq 0x38(%rbp),%r13
	movq 0x10(%r13),%r11
	cmpq %r11,0x10(%r14)
	je L_25700
L_25688:
	movq 0x20(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%ecx
	movslq %ecx,%r14
	cmpq %r14,%r15
	jne L_25684
L_25690:
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_373:
	cmpl %ecx,%ebx
	je L_383452
L_25691:
	movslq %ebx,%r14
	cmpq %r15,%r14
	jnb L_25693
L_25694:
	movq 0x20(%rbp),%r13
	movl 0x0(%r13,%r14,4),%r11d
	testl %r11d,%r11d
	jnz L_383449
L_25695:
	incl %ebx
	jo L_383448
L_25697:
	jmp loop_373
.p2align 0x4
L_383448:
L_25696:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_383449:
L_25698:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_25700
L_25702:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_25703+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_25703
.p2align 0x4
.long 0x737
L_25703:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_25700:
	movl $0x1,%ecx
	jmp L_25701
.p2align 0x4
L_383452:
L_25704:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_25705
L_25706:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_25707+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_25707
.p2align 0x4
.long 0x737
L_25707:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_25705:
	xorl %ecx,%ecx
	jmp L_25701
.text
.p2align 0x4
.globl get_26
.hidden get_26
get_26:
L_25747:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_25748
L_25891:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_25892+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_25892
.p2align 0x4
.long 0x45F
L_25892:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_25748:
	movq 0x8(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_25749+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_0
.p2align 0x4
.long 0x739
L_25749:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r15,0x30(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1448,%r15
	jne L_383458
L_25751:
	movq 0x8(%r14),%r15
	movq 0x10(%r15),%r13
	movq %r13,0x30(%rbp)
	movq %r13,0x40(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_25752+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_1
.p2align 0x4
L_383458:
L_25750:
	movq (globalObjptr+0x1500)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x526
L_25752:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x10(%rbp)
	andq $0x1,%r15
	jnz L_383459
L_25753:
	movq 0x0(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_25754+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_0
.p2align 0x4
L_383459:
L_25890:
	movq 0x10(%rbp),%r15
	shrq $0x1,%r15
	movl %r15d,%r14d
	movl %r14d,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x526
L_25754:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_25755
L_25888:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_25889+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_25889
.p2align 0x4
.long 0x646
L_25889:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_25755:
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1448,%r15
	jne L_25750
L_25756:
	movq 0x8(%r14),%r15
	movq 0x10(%r15),%r13
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x28DD,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r14,0x8(%r11)
	addq $0x18,%r12
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq %r11,0x0(%r15)
	movq 0x0(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_25757+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_12
.p2align 0x4
.long 0x56E
L_25757:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_25758
L_25886:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_25887+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_25887
.p2align 0x4
.long 0x73E
L_25887:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_25758:
	movq 0x10(%rbp),%r14
	movb 0x0(%r14),%r15b
	cmpb $0x1,%r15b
	je L_383463
	cmpb $0x2,%r15b
	je L_383462
L_25759:
	movb $0x2,0x0(%r14)
	movq 0x0(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_25760+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_0
.p2align 0x4
L_383462:
L_25885:
	xorl %ecx,%ecx
L_25766:
	movq $0x195F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %ecx,0x0(%r15)
	movl %ecx,0x0(%rbp)
	addq $0x18,%r12
	movl $0x0,0x4(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_383463:
L_25884:
	movq (globalObjptr+0x1AE0)(%rip),%r13
	movq %r13,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x73A
L_25760:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_25761
L_25882:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_25883+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_25883
.p2align 0x4
.long 0x73B
L_25883:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_25761:
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1448,%r15
	jne L_25750
L_25762:
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r13
	movq %r13,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	je L_383486
L_25763:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE77,%r15
	je L_383485
	cmpq $0xE78,%r15
	je L_383471
	cmpq $0xE79,%r15
	je L_383469
	cmpq $0xE7A,%r15
	je L_383467
	cmpq $0xE7B,%r15
	je L_383465
L_25764:
	xorl %ecx,%ecx
L_25765:
	movq 0x10(%rbp),%r15
	movb $0x1,0x0(%r15)
	jmp L_25766
.p2align 0x4
L_383465:
L_25862:
	movq 0x8(%r13),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_383466
L_25864:
	movl %r13d,0x48(%rbp)
	movq $0x38D1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_25865+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_0
.p2align 0x4
L_383466:
L_25771:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_383467:
L_25841:
	movq 0x0(%r13),%r14
	cmpq $0x1,%r14
	je L_383468
L_25842:
	movq 0x8(%r14),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r14),%r14
	movq $0x1,0x20(%rbp)
	movq %r14,%r15
L_25843:
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_25844+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_26
.p2align 0x4
L_383468:
L_25794:
	xorl %ecx,%ecx
	jmp L_25765
.p2align 0x4
L_383469:
L_25820:
	movq 0x8(%r13),%r14
	cmpq $0x1,%r14
	je L_25794
L_25821:
	movq 0x8(%r14),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r14),%r14
	movq $0x1,0x20(%rbp)
	movq %r14,%r15
L_25822:
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_25823+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_26
.p2align 0x4
L_383471:
L_25768:
	movq 0x0(%r13),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x127F,%r14
	je L_383473
L_25801:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_25771
L_25803:
	movl %r13d,0x48(%rbp)
	movq $0x38E7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_25804+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_0
.p2align 0x4
L_383473:
L_25769:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x20(%rbp)
	cmpq %rdx,%r15
	movq %r14,0x18(%rbp)
	jne L_25771
L_25772:
	testq %rdx,%rdx
	jz L_383483
L_25773:
	cmpq $0x7FFFFFFF,%rdx
	ja L_383482
L_25774:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xF1,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_25775+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_25775
.p2align 0x4
.long 0x73B
L_25775:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq %rax,0x38(%rbp)
L_25776:
	movq $0x0,0x40(%rbp)
loop_374:
	movq 0x20(%rbp),%r14
	cmpq %r14,0x40(%rbp)
	jl L_383481
L_25777:
	movq 0x38(%rbp),%r14
	movq $0xAA1,0xFFFFFFFFFFFFFFF8(%r14)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%ecx
	movslq %ecx,%r14
	cmpq %r15,%r14
	jne L_25771
L_25779:
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_375:
	cmpl %ecx,%ebx
	je L_383478
L_25780:
	movslq %ebx,%r14
	cmpq %r15,%r14
	jnb L_383477
L_25783:
	movq 0x38(%rbp),%r13
	movl 0x0(%r13,%r14,4),%r11d
	testl %r11d,%r11d
	jnz L_383475
L_25784:
	incl %ebx
	jo L_383474
L_25786:
	jmp loop_375
.p2align 0x4
L_383474:
L_25785:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_383475:
L_25787:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_25789
L_25790:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_25791+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_25791
.p2align 0x4
.long 0x73C
L_25791:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_25789:
	movl $0x1,%ecx
	jmp L_25765
.p2align 0x4
L_383477:
L_25782:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_383478:
L_25792:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_25794
L_25795:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_25796+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_25796
.p2align 0x4
.long 0x73C
L_25796:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_25794
.p2align 0x4
L_383481:
L_25797:
	movq 0x40(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x18(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x50(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_25798+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_26
.p2align 0x4
L_383482:
L_25799:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_383483:
L_25800:
	movq (globalObjptr+0x6D48)(%rip),%r15
	movq %r15,0x38(%rbp)
	jmp L_25776
.p2align 0x4
L_383485:
L_25767:
	movl $0x1,%ecx
	jmp L_25765
.p2align 0x4
L_383486:
L_25881:
	xorl %ecx,%ecx
	jmp L_25765
.p2align 0x4
.long 0x50D
L_25865:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r14
	movq %r14,0x18(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%ecx
	movslq %ecx,%r14
	cmpq %r14,%r15
	jne L_25771
L_25867:
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_377:
	cmpl %ecx,%ebx
	je L_383493
L_25868:
	movslq %ebx,%r14
	cmpq %r15,%r14
	jnb L_25782
L_25870:
	movq 0x18(%rbp),%r13
	movl 0x0(%r13,%r14,4),%r11d
	testl %r11d,%r11d
	jnz L_383490
L_25871:
	incl %ebx
	jo L_25785
L_25872:
	jmp loop_377
.p2align 0x4
L_383490:
L_25873:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_25789
L_25875:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_25876+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_25876
.p2align 0x4
.long 0x73C
L_25876:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_25789
.p2align 0x4
L_383493:
L_25877:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_25794
L_25879:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_25880+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_25880
.p2align 0x4
.long 0x73C
L_25880:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_25794
.p2align 0x4
.long 0x4EC
L_25844:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movl 0x40(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_25845
L_25859:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_25860+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_25860
.p2align 0x4
.long 0x73D
L_25860:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_25845:
	movq $0x253F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x38(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_383496
L_25846:
	movq %r15,0x20(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	jmp L_25843
.p2align 0x4
L_383496:
L_25847:
	movq 0x20(%rbp),%r15
	movl 0x38(%rbp),%ecx
.p2align 0x4,,0x7
L_25848:
	testl %ecx,%ecx
	jnz L_383499
L_25849:
	cmpq $0x1,%r15
	je L_383497
L_25850:
	movl 0x0(%r15),%ecx
	movq 0x8(%r15),%r15
	jmp L_25848
.p2align 0x4
L_383497:
L_25851:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_25794
L_25853:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_25854+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_25854
.p2align 0x4
.long 0x73C
L_25854:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_25794
.p2align 0x4
L_383499:
L_25855:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_25789
L_25857:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_25858+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_25858
.p2align 0x4
.long 0x73C
L_25858:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_25789
.p2align 0x4
.long 0x4EC
L_25823:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movl 0x40(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_25824
L_25838:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_25839+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_25839
.p2align 0x4
.long 0x73D
L_25839:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_25824:
	movq $0x253F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x38(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_383502
L_25825:
	movq %r15,0x20(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	jmp L_25822
.p2align 0x4
L_383502:
L_25826:
	movq 0x20(%rbp),%r15
	movl 0x38(%rbp),%ecx
.p2align 0x4,,0x7
L_25827:
	testl %ecx,%ecx
	jnz L_383505
L_25828:
	cmpq $0x1,%r15
	je L_383503
L_25829:
	movl 0x0(%r15),%ecx
	movq 0x8(%r15),%r15
	jmp L_25827
.p2align 0x4
L_383503:
L_25830:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_25794
L_25832:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_25833+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_25833
.p2align 0x4
.long 0x73C
L_25833:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_25794
.p2align 0x4
L_383505:
L_25834:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_25789
L_25836:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_25837+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_25837
.p2align 0x4
.long 0x73C
L_25837:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_25789
.p2align 0x4
.long 0x50D
L_25804:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r14
	movq %r14,0x18(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%ecx
	movslq %ecx,%r14
	cmpq %r14,%r15
	jne L_25771
L_25806:
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_376:
	cmpl %ebx,%ecx
	je L_383512
L_25807:
	movslq %ebx,%r14
	cmpq %r15,%r14
	jnb L_25782
L_25809:
	movq 0x18(%rbp),%r13
	movl 0x0(%r13,%r14,4),%r11d
	testl %r11d,%r11d
	jnz L_383509
L_25810:
	incl %ebx
	jo L_25785
L_25811:
	jmp loop_376
.p2align 0x4
L_383509:
L_25812:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_25789
L_25814:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_25815+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_25815
.p2align 0x4
.long 0x73C
L_25815:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_25789
.p2align 0x4
L_383512:
L_25816:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_25794
L_25818:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_25819+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_25819
.p2align 0x4
.long 0x73C
L_25819:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_25794
.p2align 0x4
.long 0x733
L_25798:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movl 0x50(%rbp),%r15d
	movl %r15d,0x48(%rbp)
	movq 0x38(%rbp),%r14
	movq 0x40(%rbp),%r13
	movl %r15d,0x0(%r14,%r13,4)
	incq %r13
	movq %r13,0x40(%rbp)
	jmp loop_374
.text
.p2align 0x4
.globl loop_3806
.hidden loop_3806
loop_3806:
L_25893:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_25959
L_25894:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_383529
L_25895:
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1057,%r14
	je L_383517
	cmpq $0x1058,%r14
	je L_383515
L_25897:
	movl $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_383515:
L_25937:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r13,0x10(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_383516
L_25939:
	movl %r13d,0x28(%rbp)
	movq $0x38D3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_25940+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_0
.p2align 0x4
L_383516:
L_25901:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_383517:
L_25898:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1059,%r15
	je L_383519
L_25924:
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_25901
L_25926:
	movl %r13d,0x10(%rbp)
	movq $0x38E5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_25927+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_0
.p2align 0x4
L_383519:
L_25899:
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x18(%rbp)
	cmpq %r14,%rdx
	movq %r15,0x10(%rbp)
	jne L_25901
L_25902:
	testq %rdx,%rdx
	jz L_383527
L_25903:
	cmpq $0x7FFFFFFF,%rdx
	ja L_383526
L_25904:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xF1,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_25905+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_25905
.p2align 0x4
.long 0x49B
L_25905:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq %rax,0x20(%rbp)
L_25906:
	movq $0x0,0x28(%rbp)
loop_378:
	movq 0x18(%rbp),%r14
	cmpq %r14,0x28(%rbp)
	jl L_383525
L_25907:
	movq 0x20(%rbp),%r14
	movq $0xAA1,0xFFFFFFFFFFFFFFF8(%r14)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%ecx
	movslq %ecx,%r14
	cmpq %r14,%r15
	jne L_25901
L_25909:
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_379:
	cmpl %ebx,%ecx
	je L_25897
L_25910:
	movslq %ebx,%r14
	cmpq %r15,%r14
	jnb L_383522
L_25913:
	movq 0x20(%rbp),%r13
	movl 0x0(%r13,%r14,4),%r11d
	testl %r11d,%r11d
	jz L_383521
L_25916:
	incl %ebx
	jo L_383520
L_25918:
	jmp loop_379
.p2align 0x4
L_383520:
L_25917:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_383521:
L_25915:
	movl $0x0,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_383522:
L_25912:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_383525:
L_25920:
	movq 0x28(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x10(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x38(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_25921+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3806
.p2align 0x4
L_383526:
L_25922:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_383527:
L_25923:
	movq (globalObjptr+0x4D58)(%rip),%r15
	movq %r15,0x20(%rbp)
	jmp L_25906
.p2align 0x4
L_383529:
L_25959:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_25960+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_25960
.p2align 0x4
.long 0x45F
L_25960:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_25895
.p2align 0x4
.long 0x4E5
L_25940:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x10(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1054,%r14
	je L_383531
L_25955:
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_25956+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_7
.p2align 0x4
L_383531:
L_25941:
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_25942+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1232
.p2align 0x4
.long 0x1
L_25927:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%ecx
	movslq %ecx,%r14
	cmpq %r14,%r15
	jne L_25901
L_25929:
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_380:
	cmpl %ebx,%ecx
	je L_25897
L_25930:
	movslq %ebx,%r14
	cmpq %r15,%r14
	jnb L_25912
L_25932:
	movq 0x0(%rbp),%r13
	movl 0x0(%r13,%r14,4),%r11d
	testl %r11d,%r11d
	jz L_25915
L_25934:
	incl %ebx
	jo L_25917
L_25935:
	jmp loop_380
.p2align 0x4
.long 0x73F
L_25921:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movl 0x38(%rbp),%r15d
	movl %r15d,0x30(%rbp)
	movq 0x20(%rbp),%r14
	movq 0x28(%rbp),%r13
	movl %r15d,0x0(%r14,%r13,4)
	incq %r13
	movq %r13,0x28(%rbp)
	jmp loop_378
.p2align 0x4
.long 0x48F
L_25956:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r14),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x144A,%r15
	jne L_383544
L_25958:
	movq 0x8(%r13),%r14
	movq 0x30(%r14),%r13
	movq %r13,%r15
x_50:
	movb 0x0(%r15),%r14b
	cmpb $0x1,%r14b
	je L_25915
	cmpb $0x2,%r14b
	je L_25897
L_25943:
	movq 0x18(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%ecx
	movslq %ecx,%r14
	cmpq %r14,%r15
	jne L_25901
L_25945:
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_381:
	cmpl %ebx,%ecx
	je L_25897
L_25946:
	movslq %ebx,%r14
	cmpq %r15,%r14
	jnb L_25912
L_25948:
	movq 0x18(%rbp),%r13
	movl 0x0(%r13,%r14,4),%r11d
	testl %r11d,%r11d
	jz L_25915
L_25950:
	incl %ebx
	jo L_25917
L_25951:
	jmp loop_381
.p2align 0x4
L_383544:
L_25957:
	movq (globalObjptr+0x1500)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x48F
L_25942:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r14
	movq %r14,0x20(%rbp)
	movq 0x10(%r14),%r15
	jmp x_50
.text
.p2align 0x4
.globl root_7
.hidden root_7
root_7:
L_25961:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_25962
L_25971:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_25972+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_25972
.p2align 0x4
.long 0x451
L_25972:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_25962:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x144A,%r13
	je L_383546
L_25963:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x144B,%r15
	jne L_383545
L_25965:
	movq 0x0(%r14),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_25966+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_7
.p2align 0x4
L_383545:
L_25964:
	movq (globalObjptr+0x14F8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_383546:
L_25970:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4AF
L_25966:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_25967
L_25968:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_25969+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_25969
.p2align 0x4
.long 0x45F
L_25969:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_25967:
	movq $0x2897,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x0(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r15,0x0(%r13)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl peek_2
.hidden peek_2
peek_2:
L_25973:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_25974
L_26000:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_26001+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_26001
.p2align 0x4
.long 0x45F
L_26001:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_25974:
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_383559
L_25976:
	movq %r15,0x0(%r13)
	movq 0x0(%rbp),%r13
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_383558
L_25977:
	movq 0x0(%r11),%r14
	movq 0x8(%r11),%r11
	xorl %ecx,%ecx
	movq %r11,%r15
.p2align 0x4,,0x7
L_25979:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_25980
L_25991:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xCA9,%r13
	jne L_25980
L_25992:
	movq 0x8(%r14),%r13
	movq 0x8(%rbp),%r11
	cmpq %r11,0x0(%r14)
	je L_383553
L_25980:
	incl %ecx
	jo L_383552
L_25982:
	cmpq $0x1,%r15
	je L_383549
L_25983:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_25979
.p2align 0x4
L_383549:
L_25984:
L_25985:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_383551
L_25987:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_25989
L_25990:
	movl %ecx,0x0(%r15)
L_25989:
	movq $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_383551:
L_25986:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_383552:
L_25981:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_383553:
L_25994:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_25986
L_25995:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_383554
L_25998:
	movl %ecx,0x0(%r14)
	movq %r13,%r15
L_25997:
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_383554:
	movq %r13,%r15
	jmp L_25997
.p2align 0x4
L_383558:
L_25999:
	xorl %ecx,%ecx
	jmp L_25985
.p2align 0x4
L_383559:
L_25975:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl root_4
.hidden root_4
root_4:
L_26002:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_26003
L_26012:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_26013+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_26013
.p2align 0x4
.long 0x451
L_26013:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_26003:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x144C,%r13
	je L_383562
L_26004:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x144D,%r15
	jne L_383561
L_26006:
	movq 0x0(%r14),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_26007+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_4
.p2align 0x4
L_383561:
L_26005:
	movq (globalObjptr+0x14F8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_383562:
L_26011:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4AF
L_26007:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_26008
L_26009:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_26010+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_26010
.p2align 0x4
.long 0x45F
L_26010:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_26008:
	movq $0x289B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x0(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r15,0x0(%r13)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl contains_0
.hidden contains_0
contains_0:
L_26014:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_26015
L_26125:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_26126+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_26126
.p2align 0x4
.long 0x494
L_26126:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_26015:
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r15d
	movslq %r15d,%rdx
	movq %rdx,0x18(%rbp)
	cmpq %rdx,%r14
	movq %r14,0x10(%rbp)
	jne L_26017
L_26018:
	cmpq $0x7FFFFFFF,%rdx
	ja L_383577
L_26019:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x51,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_26020+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_26020
.p2align 0x4
.long 0x49A
L_26020:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq %rax,0x20(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_382:
	cmpq 0x18(%rbp),%r15
	jnl L_383566
L_26121:
	movl %r15d,%r14d
	movslq %r14d,%r13
	cmpq 0x10(%rbp),%r13
	jnb L_383565
L_26123:
	movq 0x20(%rbp),%r14
	movq 0x8(%rbp),%r10
	movb 0x0(%r10,%r13,1),%r11b
	movb %r11b,0x0(%r14,%r15,1)
	incq %r15
	jmp loop_382
.p2align 0x4
L_383565:
L_26033:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_383566:
L_26021:
	movq 0x18(%rbp),%r15
	movl %r15d,%r14d
	movl %r14d,0x4(%rbp)
	movslq %r14d,%r13
	cmpq %r15,%r13
	jne L_383576
L_26023:
	cmpl $0x1,%r14d
	jng L_383567
L_26048:
	movl $0x2,0x30(%rbp)
	movl %r14d,0x34(%rbp)
	addq $0x30,%rbp
	leaq (loop_384+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp div_0
.p2align 0x4
L_383567:
L_26025:
	movl 0x4(%rbp),%r15d
	testl %r15d,%r15d
	jz L_383575
L_26026:
	movl %r15d,0x8(%rbp)
	movl $0x0,0xC(%rbp)
loop_383:
	movl 0x8(%rbp),%r15d
	movl %r15d,%r14d
	movl 0xC(%rbp),%r13d
	subl %r13d,%r14d
	jo L_26027
L_26028:
	cmpl $0x1,%r14d
	je L_383569
L_26029:
	addl %r15d,%r13d
	jo L_383568
L_26030:
	movl %r13d,0x34(%rbp)
	movl $0x2,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_26031+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp div_0
.p2align 0x4
L_383568:
L_26027:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_383569:
L_26037:
	movslq %r13d,%r14
	cmpq 0x18(%rbp),%r14
	jnb L_26033
L_26039:
	movq 0x20(%rbp),%r11
	movb 0x0(%rbp),%r10b
	cmpb %r10b,0x0(%r11,%r14,1)
	jb L_383572
L_26040:
	movl %r13d,%ecx
L_26041:
	cmpl 0x4(%rbp),%ecx
	je L_383571
L_26042:
	movslq %ecx,%r15
	cmpq 0x18(%rbp),%r15
	jnb L_26033
L_26044:
	movq 0x20(%rbp),%r14
	movb 0x0(%rbp),%r13b
	cmpb %r13b,0x0(%r14,%r15,1)
	sete %al
	movzbl %al,%eax
	movl %eax,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_383571:
L_26045:
	movl $0x0,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_383572:
L_26046:
	movl %r15d,%ecx
	jmp L_26041
.p2align 0x4
L_383575:
L_26047:
	xorl %ecx,%ecx
	jmp L_26041
.p2align 0x4
L_383576:
L_26017:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_383577:
L_26124:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x459
loop_384:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movl 0x30(%rbp),%ecx
	movl %ecx,0x8(%rbp)
.p2align 0x4,,0x7
loop_385:
	testl %ecx,%ecx
	jz L_383598
L_26049:
	decl %ecx
	jo L_26027
L_26050:
	movslq %ecx,%r15
	cmpq 0x18(%rbp),%r15
	jnb L_26033
L_26052:
	movq 0x20(%rbp),%r14
	movb 0x0(%r14,%r15,1),%dl
	movl %ecx,%ebx
.p2align 0x4,,0x7
loop_386:
	movl %ebx,%r15d
	addl %r15d,%r15d
	jo L_26027
L_26053:
	incl %r15d
	jo L_26027
L_26054:
	movl %r15d,%r14d
	incl %r14d
	jo L_26027
L_26055:
	cmpl 0x4(%rbp),%r14d
	jnl L_383586
L_26069:
	movslq %r15d,%r13
	movq 0x18(%rbp),%r11
	cmpq %r11,%r13
	jnb L_26033
L_26071:
	movq 0x20(%rbp),%r10
	movb 0x0(%r10,%r13,1),%r9b
	movslq %r14d,%r13
	cmpq %r11,%r13
	jnb L_26033
L_26073:
	movb 0x0(%r10,%r13,1),%r11b
	cmpb %r11b,%r9b
	jb L_383583
L_26074:
	movl %ecx,(localWord32+0x4)(%rip)
	movb %r9b,%cl
	xchgl %r15d,%ebx
	movl %r15d,(localWord32+0x0)(%rip)
L_26075:
	cmpb %dl,%cl
	jb L_383581
L_26076:
	movslq (localWord32+0x0)(%rip),%r15
	cmpq 0x18(%rbp),%r15
	jnb L_26033
L_26078:
	movq 0x20(%rbp),%r14
	movb %cl,0x0(%r14,%r15,1)
	movl (localWord32+0x4)(%rip),%ecx
	jmp loop_386
.p2align 0x4
L_383581:
L_26079:
	movslq (localWord32+0x0)(%rip),%r15
	cmpq 0x18(%rbp),%r15
	jnb L_26033
L_26081:
	movq 0x20(%rbp),%r14
	movb %dl,0x0(%r14,%r15,1)
	movl (localWord32+0x4)(%rip),%ecx
	jmp loop_385
.p2align 0x4
L_383583:
L_26082:
	movl %ecx,(localWord32+0x4)(%rip)
	movb %r11b,%cl
	xchgl %r14d,%ebx
	movl %r14d,(localWord32+0x0)(%rip)
	jmp L_26075
.p2align 0x4
L_383586:
L_26056:
	cmpl 0x4(%rbp),%r14d
	jne L_383591
L_26060:
	movslq %r15d,%r14
	movq 0x18(%rbp),%r15
	cmpq %r15,%r14
	jnb L_26033
L_26062:
	movq 0x20(%rbp),%r13
	movb 0x0(%r13,%r14,1),%r11b
	cmpb %dl,%r11b
	jb L_383588
L_26063:
	movslq %ebx,%r10
	cmpq %r15,%r10
	jnb L_26033
L_26065:
	movb %r11b,0x0(%r13,%r10,1)
	movb %dl,0x0(%r13,%r14,1)
	jmp loop_385
.p2align 0x4
L_383588:
L_26066:
	movslq %ebx,%r14
	cmpq %r15,%r14
	jnb L_26033
L_26068:
	movb %dl,0x0(%r13,%r14,1)
	jmp loop_385
.p2align 0x4
L_383591:
L_26057:
	movslq %ebx,%r15
	cmpq 0x18(%rbp),%r15
	jnb L_26033
L_26059:
	movq 0x20(%rbp),%r14
	movb %dl,0x0(%r14,%r15,1)
	jmp loop_385
.p2align 0x4
L_383598:
L_26083:
	movl 0x4(%rbp),%ecx
.p2align 0x4,,0x7
loop_387:
	decl %ecx
	jo L_26027
L_26084:
	testl %ecx,%ecx
	jz L_26025
L_26085:
	movslq %ecx,%r15
	movq 0x18(%rbp),%r14
	cmpq %r14,%r15
	jnb L_26033
L_26087:
	movq 0x20(%rbp),%r13
	movb 0x0(%r13,%r15,1),%dl
	cmpq $0x0,%r14
	jna L_26033
L_26089:
	movb 0x0(%r13),%r14b
	movb %r14b,0x0(%r13,%r15,1)
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_388:
	movl %ebx,%r15d
	addl %r15d,%r15d
	jo L_26027
L_26090:
	incl %r15d
	jo L_26027
L_26091:
	movl %r15d,%r14d
	incl %r14d
	jo L_26027
L_26092:
	cmpl %ecx,%r14d
	jnl L_383605
L_26106:
	movslq %r15d,%r13
	movq 0x18(%rbp),%r11
	cmpq %r11,%r13
	jnb L_26033
L_26108:
	movq 0x20(%rbp),%r10
	movb 0x0(%r10,%r13,1),%r9b
	movslq %r14d,%r13
	cmpq %r11,%r13
	jnb L_26033
L_26110:
	movb 0x0(%r10,%r13,1),%r11b
	cmpb %r11b,%r9b
	jb L_383602
L_26111:
	movl %ecx,(localWord32+0x4)(%rip)
	movb %r9b,%cl
	xchgl %r15d,%ebx
	movl %r15d,(localWord32+0x0)(%rip)
L_26112:
	cmpb %dl,%cl
	jb L_383600
L_26113:
	movslq (localWord32+0x0)(%rip),%r15
	cmpq 0x18(%rbp),%r15
	jnb L_26033
L_26115:
	movq 0x20(%rbp),%r14
	movb %cl,0x0(%r14,%r15,1)
	movl (localWord32+0x4)(%rip),%ecx
	jmp loop_388
.p2align 0x4
L_383600:
L_26116:
	movslq (localWord32+0x0)(%rip),%r15
	cmpq 0x18(%rbp),%r15
	jnb L_26033
L_26118:
	movq 0x20(%rbp),%r14
	movb %dl,0x0(%r14,%r15,1)
	movl (localWord32+0x4)(%rip),%ecx
	jmp loop_387
.p2align 0x4
L_383602:
L_26119:
	movl %ecx,(localWord32+0x4)(%rip)
	movb %r11b,%cl
	xchgl %r14d,%ebx
	movl %r14d,(localWord32+0x0)(%rip)
	jmp L_26112
.p2align 0x4
L_383605:
L_26093:
	cmpl %r14d,%ecx
	jne L_383610
L_26097:
	movslq %r15d,%r14
	movq 0x18(%rbp),%r15
	cmpq %r15,%r14
	jnb L_26033
L_26099:
	movq 0x20(%rbp),%r13
	movb 0x0(%r13,%r14,1),%r11b
	cmpb %dl,%r11b
	jb L_383607
L_26100:
	movslq %ebx,%r10
	cmpq %r15,%r10
	jnb L_26033
L_26102:
	movb %r11b,0x0(%r13,%r10,1)
	movb %dl,0x0(%r13,%r14,1)
	jmp loop_387
.p2align 0x4
L_383607:
L_26103:
	movslq %ebx,%r14
	cmpq %r15,%r14
	jnb L_26033
L_26105:
	movb %dl,0x0(%r13,%r14,1)
	jmp loop_387
.p2align 0x4
L_383610:
L_26094:
	movslq %ebx,%r15
	cmpq 0x18(%rbp),%r15
	jnb L_26033
L_26096:
	movq 0x20(%rbp),%r14
	movb %dl,0x0(%r14,%r15,1)
	jmp loop_387
.p2align 0x4
.long 0x459
L_26031:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movl 0x30(%rbp),%r15d
	movl %r15d,0x10(%rbp)
	movslq %r15d,%r14
	cmpq 0x18(%rbp),%r14
	jnb L_26033
L_26034:
	movq 0x20(%rbp),%r13
	movb 0x0(%rbp),%r11b
	cmpb %r11b,0x0(%r13,%r14,1)
	jb L_383619
L_26035:
	movl %r15d,0x8(%rbp)
	jmp loop_383
.p2align 0x4
L_383619:
L_26036:
	movl %r15d,0xC(%rbp)
	jmp loop_383
.text
.p2align 0x4
.globl loop_3799
.hidden loop_3799
loop_3799:
L_26127:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x28(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_26128
L_26302:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_26303+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_26303
.p2align 0x4
.long 0x75C
L_26303:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_26128:
	movq 0x0(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_26129+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_0
.p2align 0x4
.long 0x740
L_26129:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_26130
L_26300:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_26301+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_26301
.p2align 0x4
.long 0x75B
L_26301:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_26130:
	movq 0x30(%rbp),%r13
	movq 0x0(%r13),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1448,%r14
	jne L_383649
L_26132:
	movq 0x8(%r15),%r13
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r11
	movq 0x18(%rbp),%r13
	movl 0x0(%r13),%r10d
	movl %r10d,0x30(%rbp)
	movq 0x0(%r11),%r9
	cmpl 0x0(%r9),%r10d
	jnl L_383648
L_26134:
	movq %r11,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r15,1)
	movq %r13,0x0(%r11)
	movq %r14,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	je L_383647
L_26135:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xE77,%r15
	je L_383646
	cmpq $0xE78,%r15
	je L_383638
	cmpq $0xE79,%r15
	je L_383636
	cmpq $0xE7A,%r15
	je L_383634
	cmpq $0xE7B,%r15
	je L_383633
L_26136:
	movq 0x8(%rbp),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x10(%rbp)
	movq 0x0(%r14),%r13
	movq 0x8(%r13),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x38(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_383632
L_26138:
	movq %r15,0x0(%r13)
	movq 0x0(%r10),%r13
	cmpq $0x1,%r13
	je L_383631
L_26139:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_26141:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_26142
L_26158:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xCCF,%r13
	je L_383627
L_26142:
	incl %ecx
	movl %ecx,0x34(%rbp)
	jo L_383626
L_26144:
	cmpq $0x1,%r15
	je L_383622
L_26145:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_26141
.p2align 0x4
L_383622:
L_26146:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_26147
L_26156:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_26157+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_26157
.p2align 0x4
.long 0x5F7
L_26157:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_26147:
	movl 0x34(%rbp),%ecx
L_26148:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_383624
L_26150:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl now_0
L_26155:
	movl %ecx,0x0(%r15)
now_0:
	movq 0x10(%rbp),%r14
	movq 0x0(%r14),%r15
	movq $0x1F7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x199F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq 0x38(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r10,0x0(%r13)
	movq %r14,%r15
L_26152:
	movq 0x0(%r15),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x30(%rbp)
	jnl L_383623
L_26154:
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_383623:
L_26153:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_383624:
L_26149:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_383626:
L_26143:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_383627:
L_26159:
	movq 0x0(%r14),%r15
	movslq %ecx,%r14
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r14
	jo L_26149
L_26160:
	movq %r14,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_26152
L_26162:
	movl %ecx,0x0(%r14)
	jmp L_26152
.p2align 0x4
L_383631:
L_26163:
	xorl %ecx,%ecx
	jmp L_26148
.p2align 0x4
L_383632:
L_26137:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_383633:
L_26195:
	movq 0x8(%r14),%r15
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x40(%rbp)
	movq %r15,0x50(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_26196+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1232
.p2align 0x4
L_383634:
L_26192:
	movq 0x0(%r14),%r13
	cmpq $0x1,%r13
	je L_383635
L_26193:
	movq 0x8(%r13),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r13),%r13
	movq %r13,%r15
L_26186:
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x40,%rbp
	leaq (L_26187+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3799
.p2align 0x4
L_383635:
L_26190:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_383636:
L_26184:
	movq 0x8(%r14),%r13
	cmpq $0x1,%r13
	je L_26190
L_26185:
	movq 0x8(%r13),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r13),%r13
	movq %r13,%r15
	jmp L_26186
.p2align 0x4
L_383638:
L_26165:
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x127F,%r14
	je L_383642
L_26176:
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movl %r13d,0x38(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_383641
L_26178:
	cmpl $0x0,%r13d
	jl L_383640
L_26179:
	movl $0x0,0x3C(%rbp)
loop_390:
	movl 0x38(%rbp),%r15d
	cmpl %r15d,0x3C(%rbp)
	jl L_383639
L_26180:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_383639:
L_26181:
	movslq 0x3C(%rbp),%r15
	movq 0x30(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x48(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x48,%rbp
	leaq (L_26182+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3799
.p2align 0x4
L_383640:
L_26175:
	movq (globalObjptr+0x4F8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_383641:
L_26168:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_383642:
L_26166:
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movl %r13d,0x38(%rbp)
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_26168
L_26169:
	cmpl $0x0,%r13d
	jl L_26175
L_26170:
	movl $0x0,0x3C(%rbp)
loop_389:
	movl 0x38(%rbp),%r15d
	cmpl %r15d,0x3C(%rbp)
	jl L_383643
L_26171:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_383643:
L_26172:
	movslq 0x3C(%rbp),%r15
	movq 0x30(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x48(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x48,%rbp
	leaq (L_26173+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3799
.p2align 0x4
L_383646:
L_26164:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_383647:
L_26299:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_383648:
L_26133:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_383649:
L_26131:
	movq (globalObjptr+0x1500)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x743
L_26196:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r15,0x48(%rbp)
	movq 0x0(%r14),%r15
	movl 0x0(%r15),%r13d
	cmpl %r13d,0x30(%rbp)
	jnl L_383658
L_26206:
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x8(%r15),%r14
	cmpq $0x1,%r14
	je L_383657
	cmpq $0x2,%r14
	je L_383656
	cmpq $0x3,%r14
	je L_383655
L_26207:
	movq 0x30(%r14),%r15
	movq %r15,0x30(%rbp)
	movq 0x28(%r14),%r15
	movq %r15,0x48(%rbp)
	movq 0x20(%r14),%r15
	movq %r15,0x50(%rbp)
	movq 0x18(%r14),%r15
	movq %r15,0x58(%rbp)
	movq 0x10(%r14),%r15
	movq %r15,0x60(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x68(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x70(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x78(%rbp)
	cmpq $0x1,%r14
	je L_383654
	cmpq $0x2,%r14
	je L_383653
L_26208:
	movq %r15,%r11
	shrq $0x8,%r11
	movb $0x1,0x0(%r13,%r11,1)
	movq $0x2,0x0(%r15)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x2075,%r15
	je L_383652
	cmpq $0x2076,%r15
	je L_383651
L_26209:
	movq 0x8(%r14),%r15
	movq %r15,0x90(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x88(%rbp)
	leaq L_26291(%rip),%r15
	movq %r15,0x20(%rbp)
	movq %rbp,%r15
	addq $0x28,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x88,%rbp
	leaq (L_26210+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp setTyconNames_0
.p2align 0x4
L_383651:
L_26293:
	movq 0x8(%r14),%r15
	movq %r15,0x90(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x88(%rbp)
	leaq L_26291(%rip),%r15
	movq %r15,0x20(%rbp)
	movq %rbp,%r15
	addq $0x28,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x88,%rbp
	leaq (L_26210+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp setTyconNames_0
.p2align 0x4
L_383652:
L_26292:
	movq 0x18(%r14),%r15
	movq %r15,0x88(%rbp)
	movq 0x10(%r14),%r15
	movq %r15,0x90(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x98(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0xA0(%rbp)
	leaq L_26291(%rip),%r15
	movq %r15,0x20(%rbp)
	movq %rbp,%r15
	addq $0x28,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x88,%rbp
	leaq (L_26210+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1230
.p2align 0x4
L_383653:
L_26295:
	movq $0x12,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_383654:
L_26211:
	movq 0x28(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0xE2B0)(%rip),%r15
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_26212+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_383655:
L_26298:
	movq (globalObjptr+0x1B40)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_383656:
L_26297:
	movq (globalObjptr+0x1B38)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_383657:
L_26296:
	movq (globalObjptr+0x1B30)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_383658:
L_26198:
	movq 0x38(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x30(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_26168
L_26200:
	cmpl $0x0,%r13d
	jl L_26175
L_26201:
	movl $0x0,0x34(%rbp)
loop_391:
	movl 0x30(%rbp),%r15d
	cmpl %r15d,0x34(%rbp)
	jl L_383659
L_26202:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_383659:
L_26203:
	movslq 0x34(%rbp),%r15
	movq 0x38(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x48(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x48,%rbp
	leaq (L_26204+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3799
.p2align 0x4
.long 0x742
L_26187:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_26190
L_26188:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	jmp L_26186
.p2align 0x4
.long 0x741
L_26182:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	incl 0x3C(%rbp)
	jmp loop_390
.p2align 0x4
.long 0x741
L_26173:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	incl 0x3C(%rbp)
	jmp loop_389
.p2align 0x4
.long 0x745
L_26210:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq $0x1,0x0(%r15)
	jmp L_26211
.p2align 0x4
.long 0x473
L_26291:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x746
L_26212:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_26213+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1232
.p2align 0x4
.long 0x744
L_26204:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	incl 0x34(%rbp)
	jmp loop_391
.p2align 0x4
.long 0x747
L_26213:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r15,0x68(%rbp)
	cmpq $0x1,%r13
	je L_26289
L_26214:
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_383663
L_26215:
	movq 0x60(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x90(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x68(%rbp)
	movq 0x0(%r15),%r14
	movl 0x0(%r14),%r13d
	movl %r13d,0x78(%rbp)
	movl 0x4(%r14),%r13d
	movl %r13d,0x7C(%rbp)
	movq %r14,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_26216+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp file_0
.p2align 0x4
L_383663:
L_26289:
	movq (globalObjptr+0xBDB0)(%rip),%r15
L_26221:
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_26222+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x748
L_26216:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x60(%rbp)
	movl 0x78(%rbp),%r15d
	movl %r15d,0x88(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x88,%rbp
	leaq (L_26217+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0x74B
L_26222:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_26223
L_26284:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_26285+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_26285
.p2align 0x4
.long 0x759
L_26285:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_26223:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x60(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x68(%rbp)
	addq $0x18,%r12
	movq 0x70(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_26224:
	addl 0x0(%r15),%ecx
	movl %ecx,0x60(%rbp)
	jo L_26143
L_26225:
	cmpq $0x1,%r14
	je L_383665
L_26226:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_26224
.p2align 0x4
L_383665:
L_26227:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_26228
L_26282:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_26283+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_26283
.p2align 0x4
.long 0x758
L_26283:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_26228:
	movl 0x60(%rbp),%ecx
	testl %ecx,%ecx
	jz L_383666
L_26229:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
L_26230:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x60(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0xE2B8)(%rip),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_26231+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_383666:
L_26281:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_26230
.p2align 0x4
.long 0x749
L_26217:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x80(%rbp)
	movl 0x7C(%rbp),%r15d
	movl %r15d,0x90(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x90,%rbp
	leaq (L_26218+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0x74C
L_26231:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x58(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x40(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x70(%rbp)
	movq 0x18(%r15),%r11
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	jne L_383670
L_26279:
	movq %r11,0x80(%rbp)
	movq %r14,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_26280+0x0)(%rip),%r14
	movq %r14,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unique_0
.p2align 0x4
L_383670:
L_26232:
L_26233:
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_26234+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x74A
L_26218:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_26219
L_26286:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_26287+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_26287
.p2align 0x4
.long 0x75A
L_26287:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_26219:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xA050)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x80(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_26220+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x757
L_26280:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x70(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp L_26233
.p2align 0x4
.long 0x74D
L_26234:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_26235
L_26277:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_26278+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_26278
.p2align 0x4
.long 0x756
L_26278:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_26235:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x58(%rbp)
	addq $0x18,%r12
	movq 0x68(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_26236:
	addl 0x0(%r15),%ecx
	movl %ecx,0x40(%rbp)
	jo L_26143
L_26237:
	cmpq $0x1,%r14
	je L_383672
L_26238:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_26236
.p2align 0x4
L_383672:
L_26239:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_26240
L_26275:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_26276+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_26276
.p2align 0x4
.long 0x755
L_26276:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_26240:
	movl 0x40(%rbp),%ecx
	testl %ecx,%ecx
	jz L_383673
L_26241:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
L_26242:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x40(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq 0x50(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x68(%rbp)
	movq (globalObjptr+0xE040)(%rip),%r15
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_26243+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_383673:
L_26274:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_26242
.p2align 0x4
.long 0x74B
L_26220:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x60(%rbp)
	jmp L_26221
.p2align 0x4
.long 0x74E
L_26243:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_26244+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutDec_1
.p2align 0x4
.long 0x74F
L_26244:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x58(%rbp)
	movl 0x78(%rbp),%r15d
	movl %r15d,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_26245
L_26272:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_26273+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_26273
.p2align 0x4
.long 0x754
L_26273:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_26245:
	movq $0xC3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x68(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_26246+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp approximate_0
.p2align 0x4
.long 0x74F
L_26246:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_26247
L_26270:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_26271+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_26271
.p2align 0x4
.long 0x753
L_26271:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_26247:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x58(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x68(%rbp)
	addq $0x18,%r12
	movq 0x50(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_26248:
	addl 0x0(%r15),%ecx
	movl %ecx,0x50(%rbp)
	jo L_26143
L_26249:
	cmpq $0x1,%r14
	je L_383678
L_26250:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_26248
.p2align 0x4
L_383678:
L_26251:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_26252
L_26268:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_26269+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_26269
.p2align 0x4
.long 0x752
L_26269:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_26252:
	movl 0x50(%rbp),%ecx
	testl %ecx,%ecx
	jz L_383679
L_26253:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
L_26254:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x40(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_26255+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3782
.p2align 0x4
L_383679:
L_26267:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_26254
.p2align 0x4
.long 0x750
L_26255:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movl 0x70(%rbp),%r15d
	movl %r15d,0x40(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_26256
L_26265:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_26266+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_26266
.p2align 0x4
.long 0x751
L_26266:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_26256:
	movl 0x40(%rbp),%ecx
	testl %ecx,%ecx
	jz L_383685
L_26257:
	decl %ecx
	jo L_26143
L_26258:
	movq $0x1B67,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl $0x1,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
L_26259:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_26143
L_26260:
	movl %r13d,0x0(%r15)
	movq 0x60(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq %r14,0x48(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x60(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x48,%rbp
	leaq (L_26261+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_383685:
L_26264:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_26259
.p2align 0x4
.long 0x744
L_26261:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq (globalObjptr+0x1608)(%rip),%r15
	movq (globalObjptr+0x1610)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	jne L_26198
L_26263:
	movq (globalObjptr+0x1618)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl layoutDec_1
.hidden layoutDec_1
layoutDec_1:
L_26304:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_26970
L_26305:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_383712
L_26306:
	movq 0x8(%rbp),%r15
	movq 0x90(%r15),%r14
	movq 0x88(%r15),%r13
	movq %r13,0x10(%rbp)
	movq 0x80(%r15),%r13
	movq 0x78(%r15),%r11
	movq %r11,0x18(%rbp)
	movq 0x70(%r15),%r11
	movq 0x68(%r15),%r10
	movq 0x50(%r15),%r9
	movq %r9,0x20(%rbp)
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r9
	movq 0xFFFFFFFFFFFFFFF8(%r9),%rax
	shrq $0x1,%rax
	subq $0xE0E,%rax
	cmpq $0x9,%rax
	ja L_383688
	leaq jumpTable_38(%rip),%rbx
	jmp *(%rbx,%rax,8)
.data
.p2align 0x4
jumpTable_38:
.quad L_383711,L_383709,L_383708,L_383707,L_383706,L_383704,L_383699,L_383693,L_383691,L_383690
.text
.p2align 0x4
L_383688:
L_26307:
	movq 0x10(%r9),%r15
	movq 0x8(%r9),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%r9),%r14
	movq %r14,0x18(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_383689
L_26310:
	movl %r13d,0x30(%rbp)
	movq $0x3BD5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_26311+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
L_383689:
L_26309:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_383690:
L_26939:
	movq %r14,0x30(%rbp)
	movq 0x8(%r9),%r15
	movq %r15,0x20(%rbp)
	movq 0x0(%r9),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xE328)(%rip),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_26940+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_29
.p2align 0x4
L_383691:
L_26920:
	movq 0x0(%r9),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x129D,%r14
	je L_383692
L_26938:
	movq %r10,0x10(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x0(%rbp)
	movq (globalObjptr+0xE320)(%rip),%r15
	movq %r15,0x8(%rbp)
	jmp layout_29
.p2align 0x4
L_383692:
L_26921:
	movq 0x8(%r15),%r14
	movq %r14,0x0(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x8(%rbp)
	movq (globalObjptr+0xE310)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_26922+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_383693:
L_26879:
	movq 0x0(%r9),%r15
	movq %r15,0x18(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_26309
L_26881:
	decl %r13d
	jo L_383697
L_26882:
	movl %r13d,0x28(%rbp)
	movq $0x1,0x20(%rbp)
.p2align 0x4,,0x7
loop_393:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_383696
.p2align 0x4,,0x7
L_26883:
	movl 0x28(%rbp),%r15d
	cmpl $0x0,%r15d
	jl L_383694
L_26884:
	movl %r15d,%r14d
	decl %r14d
	movslq %r15d,%r13
	movl %r14d,0x28(%rbp)
	movq 0x18(%rbp),%r15
	movq 0x0(%r15,%r13,8),%r14
	movq $0x2703,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x20(%rbp)
	jmp loop_393
.p2align 0x4
L_383694:
L_26885:
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_383695
L_26886:
	movq 0x8(%r14),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x28(%rbp)
	movq (globalObjptr+0x17C8)(%rip),%r14
	movq %r14,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_26887+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_383695:
L_26917:
	movq $0x1,0x0(%rbp)
	movl $0x0,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_383696:
L_26918:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_26919+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_26919
.p2align 0x4
.long 0x650
L_26919:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_26883
.p2align 0x4
L_383697:
L_26324:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_383699:
L_26828:
	movq 0x8(%r9),%r15
	movq %r15,0x0(%rbp)
	movq 0x0(%r9),%r15
	cmpq $0x1,%r15
	je L_383703
L_26829:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xDEF,%r14
	je L_383701
L_26874:
	movq 0x0(%r15),%r14
	movq %r14,%r15
	andq $0x1,%r15
	jz L_383700
L_26876:
	movq %r11,0x18(%rbp)
	shrq $0x1,%r14
	movl %r14d,%r15d
	movl %r15d,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_26877+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_383700:
L_26875:
	movq (globalObjptr+0xE2F8)(%rip),%r15
L_26832:
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_26833+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_383701:
L_26830:
	movq 0x0(%r15),%r14
	movq %r14,%r15
	andq $0x1,%r15
	jz L_383702
L_26871:
	movq %r11,0x18(%rbp)
	shrq $0x1,%r14
	movl %r14d,%r15d
	movl %r15d,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_26872+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_383702:
L_26831:
	movq (globalObjptr+0xE2E8)(%rip),%r15
	jmp L_26832
.p2align 0x4
L_383703:
L_26878:
	movq (globalObjptr+0xE308)(%rip),%r15
	jmp L_26832
.p2align 0x4
L_383704:
L_26727:
	movq 0x8(%r9),%r15
	movq 0x0(%r9),%r14
	movq %r14,0x10(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_26309
L_26729:
	movl %r13d,0x28(%rbp)
	movq $0x3BD9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_26730+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
L_383706:
L_26689:
	movq 0x8(%r9),%r15
	movq %r15,0x10(%rbp)
	movq 0x0(%r9),%r15
	movq %r15,0x20(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_26690+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutDec_1
.p2align 0x4
L_383707:
L_26651:
	movq 0x0(%r9),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xE2D0)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_26652+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_383708:
L_26538:
	movq 0x20(%r9),%r15
	movq %r15,0x28(%rbp)
	movq 0x18(%r9),%r15
	movq %r15,0x30(%rbp)
	movq 0x8(%r9),%r15
	movq %r15,0x38(%rbp)
	movq 0x0(%r9),%r15
	movq %r15,0x40(%rbp)
	movq (globalObjptr+0xE2C8)(%rip),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_26539+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_383709:
L_26527:
	movq 0x0(%r9),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_26309
L_26529:
	movl %r13d,0x10(%rbp)
	movq $0x3BFD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_26530+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
L_383711:
L_26526:
	movq %r13,0x8(%rbp)
	movq 0x0(%r9),%r15
	movq %r15,0x0(%rbp)
	jmp layout_30
.p2align 0x4
L_383712:
L_26970:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_26971+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_26971
.p2align 0x4
.long 0x45F
L_26971:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_26306
.p2align 0x4
.long 0x5EF
L_26311:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_26312
L_26524:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_26525+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_26525
.p2align 0x4
.long 0x4E9
L_26525:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_26312:
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je L_383723
L_26313:
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x10(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_26309
L_26315:
	testl %r13d,%r13d
	jz L_383717
L_26316:
	cmpl $0x0,%r13d
	je L_383716
	cmpl $0x1,%r13d
	je L_383714
L_26317:
	movl %r13d,0x48(%rbp)
	movq $0x3BFF,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq %r15,0x0(%r13)
	movq %r13,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_26318+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
L_383714:
L_26519:
	cmpq $0x0,%r14
	jna L_383715
L_26521:
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_26319+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_383715:
L_26483:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_383716:
L_26518:
	movq (globalObjptr+0x9D0)(%rip),%r14
	movq %r14,0x20(%rbp)
L_26320:
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_26321+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_383717:
L_26522:
	movq 0x30(%rbp),%r14
	xchgq %r14,%r15
L_26330:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x8(%r14)
	movq %r14,%r15
fromList_2:
	movq $0xC6F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x20(%rbp)
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	cmpq $0x1,%r15
	je L_383721
L_26331:
	movq 0x8(%r15),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_26332:
	incl %ecx
	movl %ecx,0x28(%rbp)
	jo L_26324
L_26333:
	cmpq $0x1,%r15
	je L_383718
L_26334:
	movq 0x8(%r15),%r15
	jmp L_26332
.p2align 0x4
L_383718:
L_26335:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_26336
L_26510:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_26511+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_26511
.p2align 0x4
.long 0x764
L_26511:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_26336:
	movl 0x28(%rbp),%ecx
L_26337:
	movl %ecx,0x30(%rbp)
	movq $0x370F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (toList_0+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_15
.p2align 0x4
L_383721:
L_26512:
	xorl %ecx,%ecx
	jmp L_26337
.p2align 0x4
L_383723:
L_26523:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp fromList_2
.p2align 0x4
.long 0x4E5
L_26940:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	movl 0x28(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_26941
L_26968:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_26969+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_26969
.p2align 0x4
.long 0x4E1
L_26969:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_26941:
	movq $0xC3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x28(%rbp)
	addq $0x18,%r12
	movl 0x20(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq (globalObjptr+0xE330)(%rip),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_26942+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5AF
L_26922:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_26923+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4E2
L_26887:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_26888+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4AF
L_26877:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xE300)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x10,%rbp
	leaq (L_26873+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x4AF
L_26833:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_26834+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4AF
L_26872:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xE2F0)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x10,%rbp
	leaq (L_26873+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x2B
L_26730:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_26731
L_26826:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_26827+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_26827
.p2align 0x4
.long 0x2C
L_26827:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_26731:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_383735
L_26732:
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x10(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_26309
L_26734:
	testl %r13d,%r13d
	jz L_383729
L_26735:
	cmpl $0x0,%r13d
	je L_383728
	cmpl $0x1,%r13d
	je L_383726
L_26736:
	movl %r13d,0x40(%rbp)
	movq $0x3BFB,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq %r15,0x0(%r13)
	movq %r13,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_26737+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
L_383726:
L_26821:
	cmpq $0x0,%r14
	jna L_26483
L_26823:
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_26738+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_383728:
L_26820:
	movq (globalObjptr+0x9D0)(%rip),%r14
	movq %r14,0x30(%rbp)
L_26739:
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_26740+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_383729:
L_26824:
	movq 0x28(%rbp),%r14
	xchgq %r14,%r15
L_26748:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x8(%r14)
	movq %r14,%r15
fromList_4:
	movq $0xC6F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	cmpq $0x1,%r15
	je L_383733
L_26749:
	movq 0x8(%r15),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_26750:
	incl %ecx
	movl %ecx,0x8(%rbp)
	jo L_26324
L_26751:
	cmpq $0x1,%r15
	je L_383730
L_26752:
	movq 0x8(%r15),%r15
	jmp L_26750
.p2align 0x4
L_383730:
L_26753:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_26754
L_26812:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_26813+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_26813
.p2align 0x4
.long 0x457
L_26813:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_26754:
	movl 0x8(%rbp),%ecx
L_26755:
	movl %ecx,0x10(%rbp)
	movq $0x370F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (toList_2+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_15
.p2align 0x4
L_383733:
L_26814:
	xorl %ecx,%ecx
	jmp L_26755
.p2align 0x4
L_383735:
L_26825:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp fromList_4
.p2align 0x4
.long 0x4E5
L_26690:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	movl 0x28(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_26691
L_26725:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_26726+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_26726
.p2align 0x4
.long 0x4E1
L_26726:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_26691:
	movq $0xC3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x28(%rbp)
	addq $0x18,%r12
	movl 0x20(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_26692+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutDec_1
.p2align 0x4
.long 0x4AF
L_26652:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_26653
L_26687:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_26688+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_26688
.p2align 0x4
.long 0x45F
L_26688:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_26653:
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_26309
L_26655:
	movl %r13d,0x20(%rbp)
	movq $0x3BD7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq %r14,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_26656+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
.long 0x766
L_26539:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x40(%rbp),%r15
	andq $0x1,%r15
	jnz L_383740
L_26540:
	movq (globalObjptr+0x9D0)(%rip),%r15
	movq %r15,0x40(%rbp)
L_26541:
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_26542+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_383740:
L_26648:
	movq 0x40(%rbp),%r15
	shrq $0x1,%r15
	movl %r15d,%r14d
	movl %r14d,0x58(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_26649+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0x1
L_26530:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_26531+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3782
.p2align 0x4
.long 0x5F5
L_26318:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq %r15,0x40(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x48(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0x50(%rbp)
	movq (globalObjptr+0xD0F8)(%rip),%r15
	movq %r15,0x58(%rbp)
	addq $0x40,%rbp
	leaq (L_26319+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
.long 0x5F5
L_26319:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x20(%rbp)
	jmp L_26320
.p2align 0x4
.long 0x4EC
L_26321:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_26322
L_26516:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_26517+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_26517
.p2align 0x4
.long 0x4EB
L_26517:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_26322:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x40(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_26323:
	addl 0x0(%r15),%ecx
	movl %ecx,0x20(%rbp)
	jo L_26324
L_26325:
	cmpq $0x1,%r14
	je L_383741
L_26326:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_26323
.p2align 0x4
L_383741:
L_26327:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_26328
L_26514:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_26515+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_26515
.p2align 0x4
.long 0x765
L_26515:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_26328:
	movl 0x20(%rbp),%r15d
	testl %r15d,%r15d
	jz L_383742
L_26329:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,%r15
	jmp L_26330
.p2align 0x4
L_383742:
L_26513:
	movq (globalObjptr+0x9D0)(%rip),%r14
	movq %r14,%r15
	jmp L_26330
.p2align 0x4
.long 0x5EF
toList_0:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_26338
L_26508:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_26509+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_26509
.p2align 0x4
.long 0x4E9
L_26509:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_26338:
	movq 0x20(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_26309
L_26340:
	movl %r13d,0x30(%rbp)
	movq $0x3BE9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq %r14,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_26341+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
.long 0x785
L_26942:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_26943+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutDec_1
.p2align 0x4
.long 0x788
L_26923:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xE318)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_26924+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4E2
L_26888:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq %r15,0x30(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x28,%rbp
	leaq (L_26889+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1245
.p2align 0x4
.long 0x4AF
L_26873:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp L_26832
.p2align 0x4
.long 0x5AF
L_26834:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_26835
L_26869:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_26870+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_26870
.p2align 0x4
.long 0x45B
L_26870:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_26835:
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_26309
L_26837:
	movl %r13d,0x28(%rbp)
	movq $0x3BD1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq %r14,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_26838+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
.long 0x5ED
L_26737:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq %r15,0x38(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x40(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0x48(%rbp)
	movq (globalObjptr+0xD0F8)(%rip),%r15
	movq %r15,0x50(%rbp)
	addq $0x38,%rbp
	leaq (L_26738+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
.long 0x5ED
L_26738:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	jmp L_26739
.p2align 0x4
.long 0x6FF
L_26740:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_26741
L_26818:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_26819+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_26819
.p2align 0x4
.long 0x5EE
L_26819:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_26741:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x40(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_26742:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_26324
L_26743:
	cmpq $0x1,%r14
	je L_383750
L_26744:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_26742
.p2align 0x4
L_383750:
L_26745:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_26746
L_26816:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_26817+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_26817
.p2align 0x4
.long 0x784
L_26817:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_26746:
	movl 0x28(%rbp),%r15d
	testl %r15d,%r15d
	jz L_383751
L_26747:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,%r15
	jmp L_26748
.p2align 0x4
L_383751:
L_26815:
	movq (globalObjptr+0x9D0)(%rip),%r14
	movq %r14,%r15
	jmp L_26748
.p2align 0x4
.long 0x1
toList_2:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_26756
L_26810:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_26811+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_26811
.p2align 0x4
.long 0x451
L_26811:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_26756:
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_26309
L_26758:
	movl %r13d,0x10(%rbp)
	movq $0x3BE9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_26759+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
.long 0x51A
L_26692:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movl 0x40(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_26693
L_26723:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_26724+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_26724
.p2align 0x4
.long 0x782
L_26724:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_26693:
	movq $0xC3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x40(%rbp)
	addq $0x18,%r12
	movl 0x38(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x48(%rbp)
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq (globalObjptr+0xE2D8)(%rip),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_26694+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x521
L_26656:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_26657
L_26685:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_26686+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_26686
.p2align 0x4
.long 0x4E8
L_26686:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_26657:
	movq 0x10(%rbp),%r15
	cmpq $0x1,%r15
	je L_383758
L_26658:
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_26659+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_383758:
L_26684:
	movq $0x1,%r14
	xorl %ecx,%ecx
	xchgq %r14,%r15
L_26667:
	testl %ecx,%ecx
	jz L_383763
L_26668:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
L_26669:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x10(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_26670:
	addl 0x0(%r14),%ecx
	movl %ecx,0x18(%rbp)
	jo L_26324
L_26671:
	cmpq $0x1,%r15
	je L_383759
L_26672:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_26670
.p2align 0x4
L_383759:
L_26673:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_26674
L_26677:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_26678+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_26678
.p2align 0x4
.long 0x4A4
L_26678:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_26674:
	movl 0x18(%rbp),%r15d
	testl %r15d,%r15d
	jz L_383760
L_26675:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r14,0x0(%rbp)
	movl %r15d,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_383760:
L_26676:
	movq $0x1,0x0(%rbp)
	movl $0x0,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_383763:
L_26679:
	movq $0x1,%r15
	xorl %ecx,%ecx
	jmp L_26669
.p2align 0x4
.long 0x767
L_26542:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x38(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_26543+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x77C
L_26649:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_26650+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1
L_26531:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movl 0x8(%rbp),%r15d
	movl %r15d,0x0(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_26532
L_26536:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_26537+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_26537
.p2align 0x4
.long 0x494
L_26537:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_26532:
	movl 0x0(%rbp),%r15d
	testl %r15d,%r15d
	jz L_383766
L_26533:
	decl %r15d
	jo L_26324
L_26534:
	movq $0x1B67,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movl $0x1,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x8(%rbp),%r13
	movq %r13,0x8(%r14)
	movq %r14,0x0(%rbp)
	movl %r15d,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_383766:
L_26535:
	movq $0x1,0x0(%rbp)
	movl $0x0,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x5EF
L_26341:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_26342
L_26506:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_26507+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_26507
.p2align 0x4
.long 0x4E9
L_26507:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_26342:
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je L_383768
L_26343:
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq (globalObjptr+0x17B0)(%rip),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_26344+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_383768:
L_26505:
	movq $0x1,%r14
	xorl %ecx,%ecx
	xchgq %r14,%r15
L_26376:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x20(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq 0x18(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_26309
L_26378:
	movl %r13d,0x38(%rbp)
	movq $0x3BD3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_26379+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
.long 0x71E
L_26943:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x20(%rbp)
	movl 0x40(%rbp),%r15d
	movl %r15d,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_26944
L_26966:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_26967+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_26967
.p2align 0x4
.long 0x789
L_26967:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_26944:
	movq $0xC3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x30(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x38(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_26945:
	addl 0x0(%r15),%ecx
	movl %ecx,0x30(%rbp)
	jo L_26324
L_26946:
	cmpq $0x1,%r14
	je L_383771
L_26947:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_26945
.p2align 0x4
L_383771:
L_26948:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_26949
L_26964:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_26965+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_26965
.p2align 0x4
.long 0x5F3
L_26965:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_26949:
	movl 0x30(%rbp),%ecx
	testl %ecx,%ecx
	jz L_383772
L_26950:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
L_26951:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x30(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0xDED8)(%rip),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_26952+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_383772:
L_26963:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_26951
.p2align 0x4
.long 0x51E
L_26924:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_26925+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_26
.p2align 0x4
.long 0x490
L_26889:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movl 0x30(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_26890
L_26915:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_26916+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_26916
.p2align 0x4
.long 0x650
L_26916:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_26890:
	movq $0xC3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x30(%rbp)
	addq $0x18,%r12
	movl 0x28(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_383776
L_26891:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x18(%rbp)
	movq %r14,0x20(%rbp)
	movq $0x1,0x28(%rbp)
L_26892:
	movq (globalObjptr+0xE2C0)(%rip),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_26893+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_383776:
L_26914:
	movq $0x1,%r14
	xchgq %r14,%r15
L_26902:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_26903+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3782
.p2align 0x4
.long 0x4E5
L_26838:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_26839
L_26867:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_26868+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_26868
.p2align 0x4
.long 0x4E7
L_26868:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_26839:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_383778
L_26840:
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_26841+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_383778:
L_26866:
	movq $0x1,%r14
	xorl %ecx,%ecx
	xchgq %r14,%r15
L_26849:
	testl %ecx,%ecx
	jz L_383783
L_26850:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
L_26851:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x18(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x8(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r14,%r15
	movq %r11,%r14
.p2align 0x4,,0x7
L_26852:
	addl 0x0(%r14),%ecx
	movl %ecx,0x20(%rbp)
	jo L_26324
L_26853:
	cmpq $0x1,%r15
	je L_383779
L_26854:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_26852
.p2align 0x4
L_383779:
L_26855:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_26856
L_26859:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_26860+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_26860
.p2align 0x4
.long 0x49C
L_26860:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_26856:
	movl 0x20(%rbp),%r15d
	testl %r15d,%r15d
	jz L_383780
L_26857:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r14,0x0(%rbp)
	movl %r15d,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_383780:
L_26858:
	movq $0x1,0x0(%rbp)
	movl $0x0,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_383783:
L_26861:
	movq $0x1,%r15
	xorl %ecx,%ecx
	jmp L_26851
.p2align 0x4
.long 0x1
L_26759:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_383785
L_26760:
	movq 0x8(%r15),%r14
	movq %r14,0x8(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	movq (globalObjptr+0x17C0)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_26761+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_383785:
L_26809:
	movq $0x1,0x0(%rbp)
	movl $0x0,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x77D
L_26694:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_26695
L_26721:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_26722+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_26722
.p2align 0x4
.long 0x780
L_26722:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_26695:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x58(%rbp)
	addq $0x18,%r12
	movq 0x50(%rbp),%r15
	movq %r15,0x0(%r13)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_26696:
	addl 0x0(%r15),%ecx
	movl %ecx,0x3C(%rbp)
	jo L_26324
L_26697:
	cmpq $0x1,%r14
	je L_383786
L_26698:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_26696
.p2align 0x4
L_383786:
L_26699:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_26700
L_26719:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_26720+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_26720
.p2align 0x4
.long 0x781
L_26720:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_26700:
	movl 0x3C(%rbp),%ecx
	testl %ecx,%ecx
	jz L_383787
L_26701:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
L_26702:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x48(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0xE2E0)(%rip),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_26703+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_383787:
L_26718:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_26702
.p2align 0x4
.long 0x5FF
L_26659:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x18(%rbp),%r14
	movq %r14,0x30(%rbp)
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_26660+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3787
.p2align 0x4
.long 0x768
L_26543:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq (globalObjptr+0xDEC0)(%rip),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_26544+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x77C
L_26650:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x40(%rbp)
	jmp L_26541
.p2align 0x4
.long 0x5F5
L_26344:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_26345+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x2
L_26379:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_26380
L_26487:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_26488+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_26488
.p2align 0x4
.long 0x4B1
L_26488:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_26380:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_383800
L_26381:
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x10(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_26309
L_26383:
	testl %r13d,%r13d
	jz L_383794
L_26384:
	cmpl $0x0,%r13d
	je L_383793
	cmpl $0x1,%r13d
	je L_383791
L_26385:
	movl %r13d,0x48(%rbp)
	movq $0x3C01,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq %r15,0x0(%r13)
	movq %r13,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_26386+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
L_383791:
L_26481:
	cmpq $0x0,%r14
	jna L_26483
L_26484:
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_26387+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_383793:
L_26480:
	movq (globalObjptr+0x9D0)(%rip),%r14
	movq %r14,0x38(%rbp)
L_26388:
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_26389+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_383794:
L_26485:
	movq 0x30(%rbp),%r14
	xchgq %r14,%r15
L_26397:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x8(%r14)
	movq %r14,%r15
fromList_3:
	movq $0xC6F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x28(%rbp)
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	cmpq $0x1,%r15
	je L_383798
L_26398:
	movq 0x8(%r15),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_26399:
	incl %ecx
	movl %ecx,0x30(%rbp)
	jo L_26324
L_26400:
	cmpq $0x1,%r15
	je L_383795
L_26401:
	movq 0x8(%r15),%r15
	jmp L_26399
.p2align 0x4
L_383795:
L_26402:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_26403
L_26472:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_26473+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_26473
.p2align 0x4
.long 0x760
L_26473:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_26403:
	movl 0x30(%rbp),%ecx
L_26404:
	movl %ecx,0x38(%rbp)
	movq $0x370F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (toList_1+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_15
.p2align 0x4
L_383798:
L_26474:
	xorl %ecx,%ecx
	jmp L_26404
.p2align 0x4
L_383800:
L_26486:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp fromList_3
.p2align 0x4
.long 0x5F1
L_26952:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_26953
L_26961:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_26962+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_26962
.p2align 0x4
.long 0x489
L_26962:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_26953:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_26954+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3782
.p2align 0x4
.long 0x5EF
L_26925:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movl 0x30(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_26926
L_26936:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_26937+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_26937
.p2align 0x4
.long 0x764
L_26937:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_26926:
	movq $0xC3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x28(%rbp),%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x20(%rbp),%r13
	movq %r13,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x30(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_26927:
	addl 0x0(%r15),%ecx
	movl %ecx,0x38(%rbp)
	jo L_26324
L_26928:
	cmpq $0x1,%r14
	je L_383803
L_26929:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_26927
.p2align 0x4
L_383803:
L_26930:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_26931
L_26934:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_26935+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_26935
.p2align 0x4
.long 0x51D
L_26935:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_26931:
	movl 0x38(%rbp),%r15d
	testl %r15d,%r15d
	jz L_383804
L_26932:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r14,0x0(%rbp)
	movl %r15d,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_383804:
L_26933:
	movq $0x1,0x0(%rbp)
	movl $0x0,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4A7
L_26893:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x20(%rbp),%r14
	movq %r14,0x40(%rbp)
	movq %r15,0x48(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x40,%rbp
	leaq (L_26894+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1245
.p2align 0x4
.long 0x1
L_26903:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movl 0x8(%rbp),%r15d
	movl %r15d,0x0(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_26904
L_26908:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_26909+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_26909
.p2align 0x4
.long 0x494
L_26909:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_26904:
	movl 0x0(%rbp),%r15d
	testl %r15d,%r15d
	jz L_383809
L_26905:
	decl %r15d
	jo L_26324
L_26906:
	movq $0x1B67,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movl $0x1,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x8(%rbp),%r13
	movq %r13,0x8(%r14)
	movq %r14,0x0(%rbp)
	movl %r15d,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_383809:
L_26907:
	movq $0x1,0x0(%rbp)
	movl $0x0,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x639
L_26841:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x20(%rbp),%r14
	movq %r14,0x38(%rbp)
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_26842+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3787
.p2align 0x4
.long 0x4E5
L_26761:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_26762+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x77D
L_26703:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_26704
L_26716:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_26717+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_26717
.p2align 0x4
.long 0x780
L_26717:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_26704:
	movq $0x1B65,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl $0x3,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x58(%rbp)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl 0x38(%rbp),%r15d
	movl %r15d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0xDED8)(%rip),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_26705+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x496
L_26660:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_26661
L_26682:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_26683+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_26683
.p2align 0x4
.long 0x63A
L_26683:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_26661:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x18(%rbp)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%r13)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_26662:
	addl 0x0(%r15),%ecx
	movl %ecx,0x10(%rbp)
	jo L_26324
L_26663:
	cmpq $0x1,%r14
	je L_383812
L_26664:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_26662
.p2align 0x4
L_383812:
L_26665:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_26666
L_26680:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_26681+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_26681
.p2align 0x4
.long 0x522
L_26681:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_26666:
	movq 0x18(%rbp),%r15
	movl 0x10(%rbp),%ecx
	jmp L_26667
.p2align 0x4
.long 0x4B3
L_26544:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_26545
L_26646:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_26647+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_26647
.p2align 0x4
.long 0x4B6
L_26647:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_26545:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x58(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x60(%rbp)
	addq $0x18,%r12
	movq 0x38(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_26546:
	addl 0x0(%r15),%ecx
	movl %ecx,0x38(%rbp)
	jo L_26324
L_26547:
	cmpq $0x1,%r14
	je L_383816
L_26548:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_26546
.p2align 0x4
L_383816:
L_26549:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_26550
L_26644:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_26645+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_26645
.p2align 0x4
.long 0x77B
L_26645:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_26550:
	movl 0x38(%rbp),%ecx
	testl %ecx,%ecx
	jz L_383817
L_26551:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
L_26552:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x38(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq 0x30(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_26553+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_15
.p2align 0x4
L_383817:
L_26643:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_26552
.p2align 0x4
.long 0x5F5
L_26345:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_26346
L_26503:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_26504+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_26504
.p2align 0x4
.long 0x4F0
L_26504:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_26346:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x38(%rbp)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_26347:
	addl 0x0(%r15),%ecx
	movl %ecx,0x20(%rbp)
	jo L_26324
L_26348:
	cmpq $0x1,%r14
	je L_383821
L_26349:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_26347
.p2align 0x4
L_383821:
L_26350:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_26351
L_26501:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_26502+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_26502
.p2align 0x4
.long 0x763
L_26502:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_26351:
	movl 0x20(%rbp),%ecx
	testl %ecx,%ecx
	jz L_383823
L_26352:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
L_26353:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x20(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_383822
L_26354:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x28(%rbp)
	movq %r14,0x30(%rbp)
	movq $0x1,0x38(%rbp)
L_26355:
	movq (globalObjptr+0xE2C0)(%rip),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_26356+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_383822:
L_26499:
	movq $0x1,%r14
	xchgq %r14,%r15
L_26371:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_26372+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3782
.p2align 0x4
L_383823:
L_26500:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_26353
.p2align 0x4
.long 0x6FF
L_26386:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq %r15,0x40(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x48(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0x50(%rbp)
	movq (globalObjptr+0xD0F8)(%rip),%r15
	movq %r15,0x58(%rbp)
	addq $0x40,%rbp
	leaq (L_26387+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
.long 0x6FF
L_26387:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	jmp L_26388
.p2align 0x4
.long 0x4B2
L_26389:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_26390
L_26478:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_26479+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_26479
.p2align 0x4
.long 0x4B7
L_26479:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_26390:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x48(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x38(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_26391:
	addl 0x0(%r15),%ecx
	movl %ecx,0x30(%rbp)
	jo L_26324
L_26392:
	cmpq $0x1,%r14
	je L_383827
L_26393:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_26391
.p2align 0x4
L_383827:
L_26394:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_26395
L_26476:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_26477+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_26477
.p2align 0x4
.long 0x761
L_26477:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_26395:
	movl 0x30(%rbp),%r15d
	testl %r15d,%r15d
	jz L_383828
L_26396:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,%r15
	jmp L_26397
.p2align 0x4
L_383828:
L_26475:
	movq (globalObjptr+0x9D0)(%rip),%r14
	movq %r14,%r15
	jmp L_26397
.p2align 0x4
.long 0x459
toList_1:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_26405
L_26470:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_26471+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_26471
.p2align 0x4
.long 0x508
L_26471:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_26405:
	movq 0x28(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_26309
L_26407:
	movl %r13d,0x38(%rbp)
	movq $0x3BE9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq %r14,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_26408+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
.long 0x1
L_26954:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movl 0x8(%rbp),%r15d
	movl %r15d,0x0(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_26955
L_26959:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_26960+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_26960
.p2align 0x4
.long 0x494
L_26960:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_26955:
	movl 0x0(%rbp),%r15d
	testl %r15d,%r15d
	jz L_383835
L_26956:
	decl %r15d
	jo L_26324
L_26957:
	movq $0x1B67,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movl $0x1,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x8(%rbp),%r13
	movq %r13,0x8(%r14)
	movq %r14,0x0(%rbp)
	movl %r15d,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_383835:
L_26958:
	movq $0x1,0x0(%rbp)
	movl $0x0,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x786
L_26894:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x20(%rbp)
	movl 0x48(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_26895
L_26912:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_26913+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_26913
.p2align 0x4
.long 0x787
L_26913:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_26895:
	movq $0xC3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x38(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x28(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x18(%rbp),%r13
	cmpq $0x1,%r13
	je L_383837
L_26896:
	movq %r14,0x28(%rbp)
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movq %r13,0x18(%rbp)
	movq %r14,0x20(%rbp)
	jmp L_26892
.p2align 0x4
L_383837:
L_26897:
	movq %r15,0x40(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq $0x1,0x48(%rbp)
.p2align 0x4,,0x7
L_26898:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_383839
.p2align 0x4,,0x7
L_26899:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x38(%rbp),%r14
	cmpq $0x1,%r14
	je L_26902
L_26900:
	movq %r15,0x48(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x38(%rbp)
	movq %r15,0x40(%rbp)
	jmp L_26898
.p2align 0x4
L_383839:
L_26910:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_26911+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_26911
.p2align 0x4
.long 0x514
L_26911:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	jmp L_26899
.p2align 0x4
.long 0x785
L_26842:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_26843
L_26864:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_26865+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_26865
.p2align 0x4
.long 0x4F1
L_26865:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_26843:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	addq $0x18,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%r13)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_26844:
	addl 0x0(%r15),%ecx
	movl %ecx,0x18(%rbp)
	jo L_26324
L_26845:
	cmpq $0x1,%r14
	je L_383841
L_26846:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_26844
.p2align 0x4
L_383841:
L_26847:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_26848
L_26862:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_26863+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_26863
.p2align 0x4
.long 0x63A
L_26863:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_26848:
	movq 0x20(%rbp),%r15
	movl 0x18(%rbp),%ecx
	jmp L_26849
.p2align 0x4
.long 0x4E5
L_26762:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_26763
L_26807:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_26808+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_26808
.p2align 0x4
.long 0x4E7
L_26808:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_26763:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	addq $0x18,%r12
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_26764:
	addl 0x0(%r15),%ecx
	movl %ecx,0x10(%rbp)
	jo L_26324
L_26765:
	cmpq $0x1,%r14
	je L_383845
L_26766:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_26764
.p2align 0x4
L_383845:
L_26767:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_26768
L_26805:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_26806+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_26806
.p2align 0x4
.long 0x499
L_26806:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_26768:
	movl 0x10(%rbp),%ecx
	testl %ecx,%ecx
	jz L_383847
L_26769:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
L_26770:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x10(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq 0x8(%rbp),%r15
	cmpq $0x1,%r15
	je L_383846
L_26771:
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq $0x1,0x28(%rbp)
L_26772:
	movq (globalObjptr+0xE2C0)(%rip),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_26773+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_383846:
L_26803:
	movq $0x1,%r14
	xchgq %r14,%r15
L_26788:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_26789+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3782
.p2align 0x4
L_383847:
L_26804:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_26770
.p2align 0x4
.long 0x77E
L_26705:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_26706
L_26714:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_26715+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_26715
.p2align 0x4
.long 0x77F
L_26715:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_26706:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x58(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x48(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_26707+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3782
.p2align 0x4
.long 0x6F3
L_26553:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_26554
L_26641:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_26642+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_26642
.p2align 0x4
.long 0x77A
L_26642:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_26554:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x38(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_26555+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3782
.p2align 0x4
.long 0x4ED
L_26356:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_26357
L_26497:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_26498+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_26498
.p2align 0x4
.long 0x4EF
L_26498:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_26357:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x48(%rbp)
	addq $0x18,%r12
	movq 0x40(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_26358:
	addl 0x0(%r15),%ecx
	movl %ecx,0x30(%rbp)
	jo L_26324
L_26359:
	cmpq $0x1,%r14
	je L_383853
L_26360:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_26358
.p2align 0x4
L_383853:
L_26361:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_26362
L_26495:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_26496+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_26496
.p2align 0x4
.long 0x762
L_26496:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_26362:
	movl 0x30(%rbp),%ecx
	testl %ecx,%ecx
	jz L_383857
L_26363:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
L_26364:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x28(%rbp),%r13
	cmpq $0x1,%r13
	je L_383854
L_26365:
	movq %r15,0x38(%rbp)
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movq %r13,0x28(%rbp)
	movq %r14,0x30(%rbp)
	jmp L_26355
.p2align 0x4
L_383854:
L_26366:
	movq %r14,0x30(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq $0x1,0x38(%rbp)
.p2align 0x4,,0x7
L_26367:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_383856
.p2align 0x4,,0x7
L_26368:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_26371
L_26369:
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x30(%rbp)
	jmp L_26367
.p2align 0x4
L_383856:
L_26492:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_26493+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_26493
.p2align 0x4
.long 0x4EB
L_26493:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_26368
.p2align 0x4
L_383857:
L_26494:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_26364
.p2align 0x4
.long 0x5EF
L_26372:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl 0x28(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_26373
L_26490:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_26491+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_26491
.p2align 0x4
.long 0x4F1
L_26491:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_26373:
	movl 0x20(%rbp),%ecx
	testl %ecx,%ecx
	jz L_383862
L_26374:
	decl %ecx
	jo L_26324
L_26375:
	movq $0x1B67,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl $0x1,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_26376
.p2align 0x4
L_383862:
L_26489:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_26376
.p2align 0x4
.long 0x459
L_26408:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_26409
L_26468:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_26469+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_26469
.p2align 0x4
.long 0x508
L_26469:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_26409:
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_383864
L_26410:
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq (globalObjptr+0x17B8)(%rip),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_26411+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_383864:
L_26467:
	movq $0x1,%r14
	xorl %ecx,%ecx
	xchgq %r14,%r15
L_26443:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_26444+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3782
.p2align 0x4
.long 0x4A6
L_26773:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_26774
L_26801:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_26802+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_26802
.p2align 0x4
.long 0x720
L_26802:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_26774:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x38(%rbp)
	addq $0x18,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_26775:
	addl 0x0(%r15),%ecx
	movl %ecx,0x20(%rbp)
	jo L_26324
L_26776:
	cmpq $0x1,%r14
	je L_383866
L_26777:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_26775
.p2align 0x4
L_383866:
L_26778:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_26779
L_26799:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_26800+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_26800
.p2align 0x4
.long 0x783
L_26800:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_26779:
	movl 0x20(%rbp),%ecx
	testl %ecx,%ecx
	jz L_383870
L_26780:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
L_26781:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x18(%rbp),%r13
	cmpq $0x1,%r13
	je L_383867
L_26782:
	movq %r15,0x28(%rbp)
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movq %r13,0x18(%rbp)
	movq %r14,0x20(%rbp)
	jmp L_26772
.p2align 0x4
L_383867:
L_26783:
	movq %r14,0x20(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq $0x1,0x28(%rbp)
.p2align 0x4,,0x7
L_26784:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_383869
.p2align 0x4,,0x7
L_26785:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_26788
L_26786:
	movq %r15,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_26784
.p2align 0x4
L_383869:
L_26796:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_26797+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_26797
.p2align 0x4
.long 0x51F
L_26797:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_26785
.p2align 0x4
L_383870:
L_26798:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_26781
.p2align 0x4
.long 0x1
L_26789:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movl 0x8(%rbp),%r15d
	movl %r15d,0x0(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_26790
L_26794:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_26795+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_26795
.p2align 0x4
.long 0x494
L_26795:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_26790:
	movl 0x0(%rbp),%r15d
	testl %r15d,%r15d
	jz L_383875
L_26791:
	decl %r15d
	jo L_26324
L_26792:
	movq $0x1B67,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movl $0x1,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x8(%rbp),%r13
	movq %r13,0x8(%r14)
	movq %r14,0x0(%rbp)
	movl %r15d,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_383875:
L_26793:
	movq $0x1,0x0(%rbp)
	movl $0x0,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_26707:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movl 0x8(%rbp),%r15d
	movl %r15d,0x0(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_26708
L_26712:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_26713+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_26713
.p2align 0x4
.long 0x494
L_26713:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_26708:
	movl 0x0(%rbp),%r15d
	testl %r15d,%r15d
	jz L_383878
L_26709:
	decl %r15d
	jo L_26324
L_26710:
	movq $0x1B67,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movl $0x1,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x8(%rbp),%r13
	movq %r13,0x8(%r14)
	movq %r14,0x0(%rbp)
	movl %r15d,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_383878:
L_26711:
	movq $0x1,0x0(%rbp)
	movl $0x0,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x769
L_26555:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movl 0x60(%rbp),%r15d
	movl %r15d,0x30(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_26556
L_26639:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_26640+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_26640
.p2align 0x4
.long 0x779
L_26640:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_26556:
	movl 0x30(%rbp),%ecx
	testl %ecx,%ecx
	jz L_383886
L_26557:
	decl %ecx
	jo L_26324
L_26558:
	movq $0x1B67,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
L_26559:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x30(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq 0x28(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_26309
L_26561:
	decl %r13d
	jo L_26324
L_26562:
	movl %r13d,0x58(%rbp)
	movq $0x1,0x38(%rbp)
.p2align 0x4,,0x7
loop_392:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_383882
.p2align 0x4,,0x7
L_26563:
	movl 0x58(%rbp),%r15d
	cmpl $0x0,%r15d
	jl L_383880
L_26564:
	movl %r15d,%r14d
	decl %r14d
	movslq %r15d,%r13
	movl %r14d,0x58(%rbp)
	movq 0x28(%rbp),%r15
	movq 0x0(%r15,%r13,8),%r14
	movq $0x26F9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x38(%rbp)
	jmp loop_392
.p2align 0x4
L_383880:
L_26565:
	movq 0x38(%rbp),%r14
	cmpq $0x1,%r14
	je L_383881
L_26566:
	movq 0x8(%r14),%r13
	movq %r13,0x58(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x60(%rbp)
	movq (globalObjptr+0x17A8)(%rip),%r14
	movq %r14,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_26567+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_383881:
L_26635:
	movq $0x1,%r13
	xorl %ecx,%ecx
	movq %r13,%r15
L_26601:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_26602+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3782
.p2align 0x4
L_383882:
L_26636:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_26637+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_26637
.p2align 0x4
.long 0x778
L_26637:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	jmp L_26563
.p2align 0x4
L_383886:
L_26638:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_26559
.p2align 0x4
.long 0x75D
L_26411:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_26412+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1
L_26444:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movl 0x8(%rbp),%r15d
	movl %r15d,0x0(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_26445
L_26449:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_26450+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_26450
.p2align 0x4
.long 0x494
L_26450:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_26445:
	movl 0x0(%rbp),%r15d
	testl %r15d,%r15d
	jz L_383889
L_26446:
	decl %r15d
	jo L_26324
L_26447:
	movq $0x1B67,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movl $0x1,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x8(%rbp),%r13
	movq %r13,0x8(%r14)
	movq %r14,0x0(%rbp)
	movl %r15d,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_383889:
L_26448:
	movq $0x1,0x0(%rbp)
	movl $0x0,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x76A
L_26567:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_26568+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x76F
L_26602:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movl 0x60(%rbp),%r15d
	movl %r15d,0x58(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_26603
L_26617:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_26618+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_26618
.p2align 0x4
.long 0x771
L_26618:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_26603:
	movl 0x58(%rbp),%ecx
	testl %ecx,%ecx
	jz L_383896
L_26604:
	decl %ecx
	jo L_26324
L_26605:
	movq $0x1B67,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl $0x1,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
L_26606:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x58(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_26607:
	addl 0x0(%r14),%ecx
	movl %ecx,0x60(%rbp)
	jo L_26324
L_26608:
	cmpq $0x1,%r15
	je L_383891
L_26609:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_26607
.p2align 0x4
L_383891:
L_26610:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_26611
L_26614:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_26615+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_26615
.p2align 0x4
.long 0x770
L_26615:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_26611:
	movl 0x60(%rbp),%r15d
	testl %r15d,%r15d
	jz L_383892
L_26612:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x58(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r14,0x0(%rbp)
	movl %r15d,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_383892:
L_26613:
	movq $0x1,0x0(%rbp)
	movl $0x0,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_383896:
L_26616:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_26606
.p2align 0x4
.long 0x75D
L_26412:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_26413
L_26465:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_26466+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_26466
.p2align 0x4
.long 0x5EE
L_26466:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_26413:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x40(%rbp)
	addq $0x18,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_26414:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_26324
L_26415:
	cmpq $0x1,%r14
	je L_383898
L_26416:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_26414
.p2align 0x4
L_383898:
L_26417:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_26418
L_26463:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_26464+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_26464
.p2align 0x4
.long 0x75F
L_26464:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_26418:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_383900
L_26419:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
L_26420:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x28(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq 0x30(%rbp),%r15
	cmpq $0x1,%r15
	je L_383899
L_26421:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x30(%rbp)
	movq %r14,0x38(%rbp)
	movq $0x1,0x40(%rbp)
L_26422:
	movq (globalObjptr+0xE2C0)(%rip),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_26423+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_383899:
L_26461:
	movq $0x1,%r14
	xchgq %r14,%r15
L_26438:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_26439+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3782
.p2align 0x4
L_383900:
L_26462:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_26420
.p2align 0x4
.long 0x76A
L_26568:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_26569+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_31
.p2align 0x4
.long 0x4B4
L_26423:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_26424
L_26459:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_26460+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_26460
.p2align 0x4
.long 0x4B5
L_26460:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_26424:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x50(%rbp)
	addq $0x18,%r12
	movq 0x48(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_26425:
	addl 0x0(%r15),%ecx
	movl %ecx,0x38(%rbp)
	jo L_26324
L_26426:
	cmpq $0x1,%r14
	je L_383904
L_26427:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_26425
.p2align 0x4
L_383904:
L_26428:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_26429
L_26457:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_26458+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_26458
.p2align 0x4
.long 0x75E
L_26458:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_26429:
	movl 0x38(%rbp),%ecx
	testl %ecx,%ecx
	jz L_383908
L_26430:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
L_26431:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x30(%rbp),%r13
	cmpq $0x1,%r13
	je L_383905
L_26432:
	movq %r15,0x40(%rbp)
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movq %r13,0x30(%rbp)
	movq %r14,0x38(%rbp)
	jmp L_26422
.p2align 0x4
L_383905:
L_26433:
	movq %r14,0x38(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq $0x1,0x40(%rbp)
.p2align 0x4,,0x7
L_26434:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_383907
.p2align 0x4,,0x7
L_26435:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_26438
L_26436:
	movq %r15,0x40(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	movq %r15,0x38(%rbp)
	jmp L_26434
.p2align 0x4
L_383907:
L_26454:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_26455+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_26455
.p2align 0x4
.long 0x4B7
L_26455:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_26435
.p2align 0x4
L_383908:
L_26456:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_26431
.p2align 0x4
.long 0x459
L_26439:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movl 0x30(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_26440
L_26452:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_26453+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_26453
.p2align 0x4
.long 0x600
L_26453:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_26440:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_383913
L_26441:
	decl %ecx
	jo L_26324
L_26442:
	movq $0x1B67,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl $0x1,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_26443
.p2align 0x4
L_383913:
L_26451:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_26443
.p2align 0x4
.long 0x76B
L_26569:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	movl 0x70(%rbp),%r15d
	movl %r15d,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_26570
L_26633:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_26634+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_26634
.p2align 0x4
.long 0x777
L_26634:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_26570:
	movq $0xC3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x68(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x70(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x38(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_26571:
	addl 0x0(%r15),%ecx
	movl %ecx,0x38(%rbp)
	jo L_26324
L_26572:
	cmpq $0x1,%r14
	je L_383915
L_26573:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_26571
.p2align 0x4
L_383915:
L_26574:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_26575
L_26631:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_26632+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_26632
.p2align 0x4
.long 0x776
L_26632:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_26575:
	movl 0x38(%rbp),%ecx
	testl %ecx,%ecx
	jz L_383917
L_26576:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
L_26577:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x38(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq 0x58(%rbp),%r15
	cmpq $0x1,%r15
	je L_383916
L_26578:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x58(%rbp)
	movq %r14,0x60(%rbp)
	movq $0x1,0x68(%rbp)
L_26579:
	movq (globalObjptr+0xE2C0)(%rip),%r15
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_26580+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_383916:
L_26629:
	movq $0x1,%r14
	xchgq %r14,%r15
L_26596:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x38(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_26597+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3782
.p2align 0x4
L_383917:
L_26630:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_26577
.p2align 0x4
.long 0x76C
L_26580:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_26581+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_31
.p2align 0x4
.long 0x76E
L_26597:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movl 0x60(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_26598
L_26620:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_26621+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_26621
.p2align 0x4
.long 0x772
L_26621:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_26598:
	movl 0x38(%rbp),%ecx
	testl %ecx,%ecx
	jz L_383922
L_26599:
	decl %ecx
	jo L_26324
L_26600:
	movq $0x1B67,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl $0x1,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_26601
.p2align 0x4
L_383922:
L_26619:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_26601
.p2align 0x4
.long 0x76D
L_26581:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x60(%rbp)
	movl 0x88(%rbp),%r15d
	movl %r15d,0x78(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_26582
L_26627:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_26628+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_26628
.p2align 0x4
.long 0x775
L_26628:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_26582:
	movq $0xC3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x78(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x80(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x70(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_26583:
	addl 0x0(%r15),%ecx
	movl %ecx,0x60(%rbp)
	jo L_26324
L_26584:
	cmpq $0x1,%r14
	je L_383924
L_26585:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_26583
.p2align 0x4
L_383924:
L_26586:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_26587
L_26625:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_26626+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_26626
.p2align 0x4
.long 0x774
L_26626:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_26587:
	movl 0x60(%rbp),%ecx
	testl %ecx,%ecx
	jz L_383928
L_26588:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x80(%rbp),%r14
	movq %r14,0x0(%r15)
L_26589:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r14,0x0(%r15)
	movq 0x68(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x58(%rbp),%r13
	cmpq $0x1,%r13
	je L_383925
L_26590:
	movq %r15,0x68(%rbp)
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movq %r13,0x58(%rbp)
	movq %r14,0x60(%rbp)
	jmp L_26579
.p2align 0x4
L_383925:
L_26591:
	movq %r14,0x60(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq $0x1,0x68(%rbp)
.p2align 0x4,,0x7
L_26592:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_383927
.p2align 0x4,,0x7
L_26593:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x58(%rbp),%r14
	cmpq $0x1,%r14
	je L_26596
L_26594:
	movq %r15,0x68(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x58(%rbp)
	movq %r15,0x60(%rbp)
	jmp L_26592
.p2align 0x4
L_383927:
L_26622:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_26623+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_26623
.p2align 0x4
.long 0x773
L_26623:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	jmp L_26593
.p2align 0x4
L_383928:
L_26624:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_26589
