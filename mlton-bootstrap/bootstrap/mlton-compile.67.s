/* MLton 20130715 (built Mon Jun 13 11:54:01 AEST 2016 on ports.extensibl.com) */
/*   created this file on Mon Jun 13 12:09:50 2016. */
/* Do not edit this file. */
/* Flag settings:  */
/*    align: 8 */
/*    atMLtons: (mlton-compile, @MLton, --) */
/*    chunk: chunk per function */
/*    closureConvertGlobalize: true */
/*    closureConvertShrink: true */
/*    codegen: amd64 */
/*    contifyIntoMain: false */
/*    debug: false */
/*    defaultChar: char8 */
/*    defaultWideChar: widechar32 */
/*    defaultInt: int32 */
/*    defaultReal: real64 */
/*    defaultWord: word32 */
/*    diag passes: [] */
/*    drop passes: [] */
/*    elaborate allowConstant (default): false */
/*    elaborate allowConstant (enabled): true */
/*    elaborate allowFFI (default): false */
/*    elaborate allowFFI (enabled): true */
/*    elaborate allowPrim (default): false */
/*    elaborate allowPrim (enabled): true */
/*    elaborate allowOverload (default): false */
/*    elaborate allowOverload (enabled): true */
/*    elaborate allowRebindEquals (default): false */
/*    elaborate allowRebindEquals (enabled): true */
/*    elaborate deadCode (default): false */
/*    elaborate deadCode (enabled): true */
/*    elaborate forceUsed (default): false */
/*    elaborate forceUsed (enabled): true */
/*    elaborate ffiStr (default):  */
/*    elaborate ffiStr (enabled): true */
/*    elaborate nonexhaustiveExnMatch (default): default */
/*    elaborate nonexhaustiveExnMatch (enabled): true */
/*    elaborate nonexhaustiveMatch (default): warn */
/*    elaborate nonexhaustiveMatch (enabled): true */
/*    elaborate redundantMatch (default): warn */
/*    elaborate redundantMatch (enabled): true */
/*    elaborate resolveScope (default): strdec */
/*    elaborate resolveScope (enabled): true */
/*    elaborate sequenceNonUnit (default): warn */
/*    elaborate sequenceNonUnit (enabled): true */
/*    elaborate warnUnused (default): true */
/*    elaborate warnUnused (enabled): true */
/*    elaborate only: false */
/*    emit main: true */
/*    export header: None */
/*    exn history: false */
/*    generated output format: executable */
/*    gc check: Limit */
/*    indentation: 3 */
/*    inlineIntoMain: true */
/*    inlineLeafA: {loops = true, repeat = true, size = Some 20} */
/*    inlineLeafB: {loops = true, repeat = true, size = Some 40} */
/*    inlineNonRec: {small = 60, product = 320} */
/*    input file: mlton */
/*    keep CoreML: false */
/*    keep def use: true */
/*    keep dot: false */
/*    keep Machine: false */
/*    keep passes: [] */
/*    keep RSSA: false */
/*    keep SSA: false */
/*    keep SSA2: false */
/*    keep SXML: false */
/*    keep XML: false */
/*    extra_: false */
/*    lib dir: /usr/ports/pobj/mlton-20130715/mlton-on-20130715-release/build/lib */
/*    lib target dir: /usr/ports/pobj/mlton-20130715/mlton-on-20130715-release/build/lib/targets/self */
/*    loop passes: 1 */
/*    mark cards: true */
/*    max function size: 10000 */
/*    mlb path vars: [{var = MLTON_ROOT, path = $(LIB_MLTON_DIR)/sml}, {var = SML_LIB, path = $(LIB_MLTON_DIR)/sml}] */
/*    native commented: 0 */
/*    native live stack: false */
/*    native optimize: 1 */
/*    native move hoist: true */
/*    native copy prop: true */
/*    native copy prop cutoff: 1000 */
/*    native cutoff: 100 */
/*    native live transfer: 8 */
/*    native shuffle: true */
/*    native ieee fp: false */
/*    native split: Some 20000 */
/*    optimizationPasses: [<ssa2::default>, <ssa::default>, <sxml::default>, <xml::default>] */
/*    polyvariance: Some {hofo = true, rounds = 2, small = 30, product = 300} */
/*    prefer abs paths: false */
/*    prof passes: [] */
/*    profile: None */
/*    profile branch: false */
/*    profile C: [] */
/*    profile IL: ProfileSource */
/*    profile include/exclude: [(Seq [Star [.], Or [Seq [Seq [[$], [(], [S], [M], [L], [_], [L], [I], [B], [)]]]], Star [.]], false)] */
/*    profile raise: false */
/*    profile stack: false */
/*    profile val: false */
/*    show basis: None */
/*    show def-use: None */
/*    show types: true */
/*    target: self */
/*    target arch: AMD64 */
/*    target OS: OpenBSD */
/*    type check: false */
/*    verbosity: Pass */
/*    warn unrecognized annotation: true */
/*    warn deprecated features: true */
/*    zone cut depth: 100 */
.text
.p2align 0x4
.globl shrink_1
.hidden shrink_1
shrink_1:
L_201735:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_201824
L_201736:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_462896
L_201737:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x28(%r15),%r13
	movq %r13,0x38(%rbp)
	movq $0x71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x40(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x35D3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq %r15,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r13,0x50(%rbp)
	movq %r14,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_201738+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_0
.p2align 0x4
L_462896:
L_201824:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_201825+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_201825
.p2align 0x4
.long 0x45F
L_201825:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_201737
.p2align 0x4
.long 0x67A
L_201738:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x50,%rbp
	leaq (L_201739+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_37
.p2align 0x4
.long 0x67A
L_201739:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_201740
L_201822:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_201823+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_201823
.p2align 0x4
.long 0x8A7
L_201823:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_201740:
	movq 0x48(%rbp),%r15
	movq 0x0(%r15),%r14
	movl 0x0(%r14),%r15d
	incl %r15d
	jo L_462898
L_201742:
	movl %r15d,0x0(%r14)
	movq $0x35CD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x50(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_201743+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_0
.p2align 0x4
L_462898:
L_201741:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x67A
L_201743:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_201744
L_201820:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_201821+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_201821
.p2align 0x4
.long 0x4EF
L_201821:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_201744:
	movq $0x35D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x50(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_201745+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_0
.p2align 0x4
.long 0x67A
L_201745:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x30(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x48(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_462911
L_201748:
	cmpl $0x0,%r13d
	jl L_462910
L_201749:
	movq $0x1,0x50(%rbp)
	movl $0x0,0x4C(%rbp)
loop_2207:
	movl 0x48(%rbp),%r14d
	cmpl %r14d,0x4C(%rbp)
	jl L_462909
L_201750:
	movq 0x50(%rbp),%r14
	cmpq $0x1,%r14
	je L_462908
L_201751:
	movq 0x8(%r14),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_201752:
	incl %ecx
	jo L_201741
L_201753:
	cmpq $0x1,%r15
	je L_462901
L_201754:
	movq 0x8(%r15),%r15
	jmp L_201752
.p2align 0x4
L_462901:
L_201755:
L_201756:
	movslq %ecx,%rdx
	movq %rdx,0x30(%rbp)
	testq %rdx,%rdx
	jz L_462906
L_201757:
	cmpq $0x7FFFFFFF,%rdx
	ja L_462905
L_201758:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x143B,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_201759+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_201759
.p2align 0x4
.long 0x2D33
L_201759:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq %rax,0x48(%rbp)
L_201760:
	movq 0x50(%rbp),%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2208:
	cmpq 0x30(%rbp),%r15
	jnl L_462903
L_201766:
	cmpq $0x1,%r14
	je L_462902
L_201767:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq 0x48(%rbp),%r11
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r13,0x0(%r11,%r15,8)
	incq %r15
	jmp loop_2208
.p2align 0x4
L_462902:
L_201768:
	movq (globalObjptr+0x4B0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_462903:
L_201761:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_201762
L_201764:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_201765+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_201765
.p2align 0x4
.long 0xDF6
L_201765:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_201762:
	movq 0x48(%rbp),%r15
	movq $0x779,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x35CB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r14,0x58(%rbp)
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_201763+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_0
.p2align 0x4
L_462905:
L_201770:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_462906:
L_201771:
	movq (globalObjptr+0xD50)(%rip),%r15
	movq %r15,0x48(%rbp)
	jmp L_201760
.p2align 0x4
L_462908:
L_201772:
	xorl %ecx,%ecx
	jmp L_201756
.p2align 0x4
L_462909:
L_201773:
	movslq 0x4C(%rbp),%r15
	movq 0x30(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x58(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x60(%rbp)
	movq 0x10(%r13),%r11
	movq %r11,0x68(%rbp)
	movq 0x18(%r13),%r10
	movq %r10,0x70(%rbp)
	movq 0x20(%r13),%r10
	movq %r10,0x78(%rbp)
	movq %r11,0x88(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x88,%rbp
	leaq (L_201774+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_37
.p2align 0x4
L_462910:
L_201819:
	movq (globalObjptr+0x4F8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_462911:
L_201747:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x2D34
L_201763:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x2D35
L_201774:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x80(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_201775
L_201817:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_201818+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_201818
.p2align 0x4
.long 0x2D3B
L_201818:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_201775:
	movq 0x80(%rbp),%r14
	movq 0x8(%r14),%r13
	movl 0x0(%r13),%r11d
	testl %r11d,%r11d
	jnz L_462915
L_201776:
	movq $0x2621,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq 0x58(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x109C,%r13
	jne L_462912
L_201790:
	movq %r15,0x80(%rbp)
	movq 0x8(%r14),%r15
	movq %r14,0x60(%rbp)
	movq 0x0(%r14),%r14
	movq %r14,0x58(%rbp)
L_201791:
	movq %r15,0x90(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x98(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0xA0(%rbp)
	addq $0x90,%rbp
	leaq (L_201792+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_37
.p2align 0x4
L_462912:
L_201777:
	movq $0x1,0x80(%rbp)
	movq %r14,0x88(%rbp)
	movq $0x1,0x58(%rbp)
.p2align 0x4,,0x7
L_201778:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_462914
.p2align 0x4,,0x7
L_201779:
	movq $0x2621,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x80(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x58(%rbp),%r14
	cmpq $0x1,%r14
	je L_462913
L_201780:
	movq %r15,0x80(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x58(%rbp)
	movq %r15,0x60(%rbp)
	jmp L_201778
.p2align 0x4
L_462913:
L_201781:
	movq 0x88(%rbp),%r14
	movq %r14,0x58(%rbp)
L_201782:
	movq %r15,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_201783+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_4
.p2align 0x4
L_462914:
L_201788:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_201789+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_201789
.p2align 0x4
.long 0x2D38
L_201789:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	jmp L_201779
.p2align 0x4
L_462915:
L_201816:
	movq 0x50(%rbp),%r15
L_201785:
	movq %r15,0x50(%rbp)
	incl 0x4C(%rbp)
	jmp loop_2207
.p2align 0x4
.long 0x19E8
L_201792:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movl 0x0(%r13),%r11d
	testl %r11d,%r11d
	movq %r15,0x88(%rbp)
	jz L_462925
L_201796:
	movq 0x0(%r14),%r15
	movq %r15,0x60(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x88(%rbp)
	movq 0x20(%r14),%r15
	movq %r15,0x90(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	movq %r11,0x98(%rbp)
	cmpq %r11,%r14
	jne L_201747
L_201798:
	movq 0x58(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r11d
	movslq %r11d,%r10
	cmpq %r10,%r14
	jne L_201747
L_201800:
	cmpl %r13d,%r11d
	je L_462917
L_201801:
	movq (globalObjptr+0x4E0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_462917:
L_201802:
	movq 0x98(%rbp),%rdx
	testq %rdx,%rdx
	jz L_462922
L_201803:
	cmpq $0x7FFFFFFF,%rdx
	ja L_201770
L_201804:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1437,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_201805+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_201805
.p2align 0x4
.long 0x2D39
L_201805:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq %rax,0xA0(%rbp)
L_201806:
	movq $0x0,0xA8(%rbp)
.p2align 0x4,,0x7
loop_2209:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_462920
.p2align 0x4,,0x7
L_201807:
	movq 0xA8(%rbp),%r15
	cmpq 0x98(%rbp),%r15
	jnl L_462918
L_201811:
	movl %r15d,%r14d
	movslq %r14d,%r13
	movq 0x90(%rbp),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq 0x58(%rbp),%r14
	movq 0x0(%r14,%r13,8),%r10
	movq $0x212D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r11,0x8(%r14)
	movq %r10,0x10(%r14)
	addq $0x20,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0xA0(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r14,0x0(%r13,%r15,8)
	incq %r15
	movq %r15,0xA8(%rbp)
	jmp loop_2209
.p2align 0x4
L_462918:
L_201808:
	movq 0xA0(%rbp),%r14
	movq $0x33,0xFFFFFFFFFFFFFFF8(%r14)
	movq $0x2621,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq %r14,0x0(%r13)
	movq 0x80(%rbp),%r14
	movq %r14,0x8(%r13)
	movq $0x2621,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x88(%rbp),%r11
	movq %r11,0x0(%r14)
	movq %r13,0x8(%r14)
	movq 0x60(%rbp),%r10
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r9
	shrq $0x1,%r9
	cmpq $0x109C,%r9
	je L_462919
L_201809:
	movq %r13,0x58(%rbp)
	movq $0x1,0x80(%rbp)
	movq %r11,0x60(%rbp)
	movq %r10,0x88(%rbp)
	jmp L_201778
.p2align 0x4
L_462919:
L_201810:
	movq %r14,0x80(%rbp)
	movq 0x8(%r10),%r14
	movq 0x0(%r10),%r13
	movq %r13,0x58(%rbp)
	xchgq %r14,%r15
	jmp L_201791
.p2align 0x4
L_462920:
L_201812:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_201813+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_201813
.p2align 0x4
.long 0x2D3A
L_201813:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	jmp L_201807
.p2align 0x4
L_462922:
L_201815:
	movq (globalObjptr+0x5198)(%rip),%r15
	movq %r15,0xA0(%rbp)
	jmp L_201806
.p2align 0x4
L_462925:
L_201793:
	movq 0x80(%rbp),%r15
	cmpq $0x1,%r15
	je L_462926
L_201794:
	movq 0x8(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x0(%r15),%r14
	movq $0x1,0x80(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq %r14,0x60(%rbp)
	jmp L_201778
.p2align 0x4
L_462926:
L_201795:
	movq $0x1,%r14
	movq 0x60(%rbp),%r13
	movq %r13,0x58(%rbp)
	xchgq %r14,%r15
	jmp L_201782
.p2align 0x4
.long 0x2D36
L_201783:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_201784
L_201786:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_201787+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_201787
.p2align 0x4
.long 0x2D37
L_201787:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_201784:
	movq $0x35,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x30,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x20(%r15)
	movq $0x21A7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x8(%r14)
	movq %r14,%r15
	jmp L_201785
.text
.p2align 0x4
.globl x_1847
.hidden x_1847
x_1847:
L_201826:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_201939
L_201827:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_462930
L_201828:
	movq 0x0(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x50(%rbp)
	movq 0x10(%r14),%r13
	movq %r13,0x58(%rbp)
	movl 0x0(%r14),%r13d
	movl %r13d,0x60(%rbp)
	movq 0x18(%r14),%r11
	testl %r13d,%r13d
	jz L_462929
L_201830:
	cmpq $0x1,%r11
	je L_462928
L_201831:
	movq 0x8(%r11),%r14
	movq %r14,0x68(%rbp)
	movq 0x0(%r11),%r11
	movq $0x1,0x70(%rbp)
	movq %r11,%r15
L_201832:
	movq 0x0(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x90(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x98(%rbp)
	movq 0x28(%r15),%r13
	movq %r13,0xA0(%rbp)
	movq $0x4363,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x71,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movl $0x0,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq $0x8CF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,0xA8(%rbp)
	movq %r15,0x0(%r11)
	addq $0x18,%r12
	movq %r13,0x8(%r11)
	movq $0x35B1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r13,0x8(%r15)
	movq %r15,0xB8(%rbp)
	addq $0x18,%r12
	movq %r14,0xC0(%rbp)
	addq $0xB8,%rbp
	leaq (L_201833+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_0
.p2align 0x4
L_462928:
L_201938:
	movq $0x1,%r15
L_201887:
	movq $0x77F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x18(%r14)
	addq $0x28,%r12
	movl 0x60(%rbp),%r15d
	movl %r15d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x50(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x58(%rbp),%r15
	movq %r15,0x10(%r14)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_462929:
L_201829:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_462930:
L_201939:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_201940+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_201940
.p2align 0x4
.long 0x80A
L_201940:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	jmp L_201828
.p2align 0x4
.long 0x2D3C
L_201833:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_201834
L_201936:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_201937+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_201937
.p2align 0x4
.long 0x2D53
L_201937:
	addq $0xFFFFFFFFFFFFFF48,%rbp
L_201834:
	movq $0x9C1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xB0(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq 0x98(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	movq %r11,0xB8(%rbp)
	cmpq %r11,%r14
	je L_462932
L_201835:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_462932:
L_201836:
	movq $0x71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq %r15,0xC0(%rbp)
	movq 0xB8(%rbp),%r15
	cmpq $0x0,%r15
	sete %bl
	movzbl %bl,%ebx
	movl %ebx,0x64(%rbp)
	je L_462939
L_201837:
	cmpq $0x7FFFFFFF,%r15
	ja L_201898
L_201838:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_201839
L_201932:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_201933+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_201933
.p2align 0x4
.long 0x2D3D
L_201933:
	addq $0xFFFFFFFFFFFFFF30,%rbp
L_201839:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xAB5,%rcx
	movq 0xB8(%rbp),%rdx
	movq $0x50,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_201840+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_201840
.p2align 0x4
.long 0x2D3D
L_201840:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movq %rax,0xC8(%rbp)
L_201841:
	movq $0x0,0xD0(%rbp)
loop_2210:
	movq 0xB8(%rbp),%rdx
	cmpq %rdx,0xD0(%rbp)
	jl L_462936
L_201842:
	movq 0xC8(%rbp),%r15
	movq $0xCB1,0xFFFFFFFFFFFFFFF8(%r15)
	cmpq $0x7FFFFFFF,%rdx
	ja L_462935
L_201843:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xF1,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_201844+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_201844
.p2align 0x4
.long 0x2D3E
L_201844:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq %rax,0xD0(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2211:
	cmpq 0xB8(%rbp),%r15
	jnl L_462933
L_201923:
	movq 0xD0(%rbp),%r14
	movl $0x0,0x0(%r14,%r15,4)
	incq %r15
	jmp loop_2211
.p2align 0x4
L_462933:
L_201845:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_201846
L_201921:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_201922+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_201922
.p2align 0x4
.long 0x2D50
L_201922:
	addq $0xFFFFFFFFFFFFFF20,%rbp
L_201846:
	movq $0xCB3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xA8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xC8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x35F1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x18,%r12
	movq %r14,0x8(%r13)
	movq %r13,0xE0(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0xE8(%rbp)
	addq $0xE0,%rbp
	leaq (L_201847+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_0
.p2align 0x4
L_462935:
L_201898:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_462936:
L_201925:
	movq 0xD0(%rbp),%r15
	movl %r15d,0xD8(%rbp)
	movq $0x45,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0xE0(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x47,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0xE8(%rbp)
	movq %r15,0x0(%r13)
	addq $0x18,%r12
	movq %r14,0x8(%r13)
	movq 0xB0(%rbp),%r15
	movq 0x0(%r15),%r11
	movq $0x1B7F,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,0x0(%r10)
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r10,0x0(%r15)
	movq %r14,0xF8(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0x100(%rbp)
	addq $0xF8,%rbp
	leaq (L_201926+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_3
.p2align 0x4
L_462939:
L_201935:
	movq (globalObjptr+0x7458)(%rip),%r14
	movq %r14,0xC8(%rbp)
	jmp L_201841
.p2align 0x4
.long 0x2D3F
L_201847:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_201848
L_201919:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_201920+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_201920
.p2align 0x4
.long 0x2D50
L_201920:
	addq $0xFFFFFFFFFFFFFF20,%rbp
L_201848:
	movq $0x797,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xD8(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x1879,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0xE0(%rbp)
	addq $0x50,%r12
	movq %r15,0x0(%r14)
	movq 0x48(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x40(%rbp),%r15
	movq %r15,0x10(%r14)
	movq 0x38(%rbp),%r15
	movq %r15,0x18(%r14)
	movq 0x30(%rbp),%r15
	movq %r15,0x20(%r14)
	movq 0x28(%rbp),%r15
	movq %r15,0x28(%r14)
	movq 0x20(%rbp),%r15
	movq %r15,0x30(%r14)
	movq 0x18(%rbp),%r15
	movq %r15,0x38(%r14)
	movq 0x10(%rbp),%r15
	movq %r15,0x40(%r14)
	movq %r15,0xF0(%rbp)
	addq $0xF0,%rbp
	leaq (L_201849+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x2D51
L_201926:
	addq $0xFFFFFFFFFFFFFF08,%rbp
	movq 0xF8(%rbp),%r15
	movq %r15,0xF0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_201927
L_201930:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x100,%rbp
	leaq (L_201931+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_201931
.p2align 0x4
.long 0x2D52
L_201931:
	addq $0xFFFFFFFFFFFFFF00,%rbp
L_201927:
	movq 0xF0(%rbp),%r15
	andq $0x1,%r15
	jnz L_462942
L_201928:
	movq $0x1955,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0xD8(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0xC0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xE0(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	movq 0xC8(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r13,%r14,1)
	movq 0xD0(%rbp),%r14
	movq 0xE8(%rbp),%r13
	movq %r13,0x0(%r15,%r14,8)
	incq %r14
	movq %r14,0xD0(%rbp)
	jmp loop_2210
.p2align 0x4
L_462942:
L_201929:
	movq (globalObjptr+0x578)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x2D40
L_201849:
	addq $0xFFFFFFFFFFFFFF10,%rbp
	movl 0xF0(%rbp),%r15d
	movl %r15d,0xE8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_201850
L_201917:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF8,%rbp
	leaq (L_201918+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_201918
.p2align 0x4
.long 0x2D4F
L_201918:
	addq $0xFFFFFFFFFFFFFF08,%rbp
L_201850:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0xF0(%rbp)
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0xE8(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xEC10)(%rip),%r15
	movq %r15,0x18(%r13)
	movq (globalObjptr+0xF20)(%rip),%r15
	movq $0x31,0xFFFFFFFFFFFFFFF8(%r15)
	movq (globalObjptr+0xF48)(%rip),%r14
	movq $0x33,0xFFFFFFFFFFFFFFF8(%r14)
	movq (globalObjptr+0xF40)(%rip),%r11
	movq $0x907,0xFFFFFFFFFFFFFFF8(%r11)
	movq $0x2139,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	addq $0x18,%r12
	movq %r11,0x0(%r10)
	movq 0x78(%rbp),%r11
	movq %r11,0x8(%r10)
	movq $0x35,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r10,0x0(%r11)
	addq $0x30,%r12
	movq %r14,0x8(%r11)
	movq %r13,0x10(%r11)
	movq $0x1,0x18(%r11)
	movq %r15,0x20(%r11)
	movq %r11,0x100(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0x108(%rbp)
	addq $0x100,%rbp
	leaq (L_201851+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp addSignalCheck_0
.p2align 0x4
.long 0x2D41
L_201851:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x100(%rbp)
	movq 0xA8(%rbp),%r15
	movq %r15,0x108(%rbp)
	addq $0x100,%rbp
	leaq (L_201852+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_33
.p2align 0x4
.long 0x2D42
L_201852:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movl 0x100(%rbp),%r15d
	movl %r15d,0x78(%rbp)
	movslq %r15d,%r14
	movq 0xC8(%rbp),%r15
	cmpq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	jnb L_462945
L_201855:
	movq 0x0(%r15,%r14,8),%r13
	movq %r13,0x100(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0x108(%rbp)
	addq $0x100,%rbp
	leaq (L_201856+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loopForestSteensgaard_0
.p2align 0x4
L_462945:
L_201854:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x2D43
L_201856:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq %r15,0x100(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0x108(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0x110(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0x118(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0x120(%rbp)
	addq $0x100,%rbp
	leaq (L_201857+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3921
.p2align 0x4
.long 0x2D44
L_201857:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movl 0x64(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_462961
L_201858:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1699,%rcx
	movq 0xB8(%rbp),%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x100,%rbp
	leaq (L_201859+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_201859
.p2align 0x4
.long 0x2D45
L_201859:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq %rax,0x78(%rbp)
L_201860:
	movl $0x0,0x64(%rbp)
	movq $0x0,0xB0(%rbp)
loop_2212:
	movq 0xB8(%rbp),%r15
	cmpq %r15,0xB0(%rbp)
	jl L_462960
L_201861:
	movq 0x78(%rbp),%r15
	movq $0x187B,0xFFFFFFFFFFFFFFF8(%r15)
	movslq 0x64(%rbp),%rdx
	movq %rdx,0x98(%rbp)
	testq %rdx,%rdx
	jz L_462959
L_201862:
	cmpq $0x7FFFFFFF,%rdx
	ja L_201898
L_201863:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x143B,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x100,%rbp
	leaq (L_201864+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_201864
.p2align 0x4
.long 0x2D46
L_201864:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq %rax,0xA8(%rbp)
L_201865:
	xorl %ecx,%ecx
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2213:
	cmpq 0x98(%rbp),%r15
	jnl L_462949
.p2align 0x4,,0x7
loop_2215:
	movslq %ecx,%r14
	movq 0x78(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r11
	cmpq $0x1,%r11
	jne L_462947
L_201904:
	incl %ecx
	jo L_462946
L_201905:
	jmp loop_2215
.p2align 0x4
L_462946:
L_201869:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_462947:
L_201902:
	incl %ecx
	jo L_201869
L_201903:
	movq 0xA8(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r11,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_2213
.p2align 0x4
L_462949:
L_201866:
	movq 0xA8(%rbp),%r14
	movq $0x779,0xFFFFFFFFFFFFFFF8(%r14)
	movq 0xD8(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x78(%rbp)
	cmpq $0x1,%r13
	je L_462957
L_201867:
	movq 0x8(%r13),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_201868:
	incl %ecx
	jo L_201869
L_201870:
	cmpq $0x1,%r15
	je L_462950
L_201871:
	movq 0x8(%r15),%r15
	jmp L_201868
.p2align 0x4
L_462950:
L_201872:
L_201873:
	movslq %ecx,%rdx
	movq %rdx,0x98(%rbp)
	testq %rdx,%rdx
	jz L_462955
L_201874:
	cmpq $0x7FFFFFFF,%rdx
	ja L_201898
L_201875:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x143B,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x100,%rbp
	leaq (L_201876+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_201876
.p2align 0x4
.long 0x2D47
L_201876:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq %rax,0xB0(%rbp)
L_201877:
	movq 0x78(%rbp),%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2214:
	cmpq 0x98(%rbp),%r15
	jnl L_462952
L_201894:
	cmpq $0x1,%r14
	je L_462951
L_201895:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq 0xB0(%rbp),%r11
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r13,0x0(%r11,%r15,8)
	incq %r15
	jmp loop_2214
.p2align 0x4
L_462951:
L_201896:
	movq (globalObjptr+0x4B0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_462952:
L_201878:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_201879
L_201892:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x100,%rbp
	leaq (L_201893+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_201893
.p2align 0x4
.long 0x2D4D
L_201893:
	addq $0xFFFFFFFFFFFFFF00,%rbp
L_201879:
	movq 0xB0(%rbp),%r15
	movq $0x779,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x25F5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x25F5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0xA8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x100(%rbp)
	addq $0x100,%rbp
	leaq (L_201880+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_5
.p2align 0x4
L_462955:
L_201899:
	movq (globalObjptr+0xD50)(%rip),%r15
	movq %r15,0xB0(%rbp)
	jmp L_201877
.p2align 0x4
L_462957:
L_201900:
	xorl %ecx,%ecx
	jmp L_201873
.p2align 0x4
L_462959:
L_201907:
	movq (globalObjptr+0x7468)(%rip),%r15
	movq %r15,0xA8(%rbp)
	jmp L_201865
.p2align 0x4
L_462960:
L_201908:
	movq 0xB0(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x98(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0xC0(%rbp)
	movq 0x10(%r13),%r15
	movq %r15,0x100(%rbp)
	movq 0xA8(%rbp),%r15
	movq %r15,0x108(%rbp)
	addq $0x100,%rbp
	leaq (L_201909+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_33
.p2align 0x4
L_462961:
L_201916:
	movq (globalObjptr+0x7460)(%rip),%r15
	movq %r15,0x78(%rbp)
	jmp L_201860
.p2align 0x4
.long 0x2D48
L_201880:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0x78(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_201881
L_201890:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x100,%rbp
	leaq (L_201891+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_201891
.p2align 0x4
.long 0x2D4C
L_201891:
	addq $0xFFFFFFFFFFFFFF00,%rbp
L_201881:
	movq $0x77B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x98(%rbp)
	addq $0x38,%r12
	movq 0xF0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x80(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x88(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x90(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x78(%rbp),%r13
	movq %r13,0x20(%r15)
	movq 0xA0(%rbp),%r13
	movq %r13,0x28(%r15)
	movq 0x10(%r14),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq $0x1,0x0(%r15)
	movq $0x1,0xA8(%rbp)
	movq %r13,0xB0(%rbp)
	addq $0xA8,%rbp
	leaq (L_201882+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_3
.p2align 0x4
.long 0x2D4E
L_201909:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movl 0x100(%rbp),%r14d
	movl %r14d,0xC8(%rbp)
	movslq %r14d,%r15
	cmpq 0xB8(%rbp),%r15
	jnb L_201854
L_201911:
	movq 0xD0(%rbp),%r14
	movl 0x0(%r14,%r15,4),%r13d
	testl %r13d,%r13d
	jnz L_462964
L_201912:
	movl 0x64(%rbp),%ecx
	incl %ecx
	jo L_201869
L_201913:
	movq 0xC0(%rbp),%r15
L_201914:
	movl %ecx,0x64(%rbp)
	movq 0x78(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0xB0(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0xB0(%rbp)
	jmp loop_2212
.p2align 0x4
L_462964:
L_201915:
	movl 0x64(%rbp),%ecx
	movq $0x1,%r15
	jmp L_201914
.p2align 0x4
.long 0x2D49
L_201882:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq $0x2,0xA8(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0xB0(%rbp)
	addq $0xA8,%rbp
	leaq (L_201883+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_0
.p2align 0x4
.long 0x2D4A
L_201883:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_201884
L_201888:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_201889+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_201889
.p2align 0x4
.long 0x2D4B
L_201889:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_201884:
	movq $0x23A5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x98(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x68(%rbp),%r14
	cmpq $0x1,%r14
	je L_201887
L_201885:
	movq %r15,0x70(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x68(%rbp)
	jmp L_201832
.text
.p2align 0x4
.globl addSignalCheck_0
.hidden addSignalCheck_0
addSignalCheck_0:
L_201941:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_201942
L_202025:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_202026+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_202026
.p2align 0x4
.long 0x45F
L_202026:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_201942:
	movq 0x8(%rbp),%r15
	movq 0x40(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x38(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x30(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x28(%r15),%r13
	movq %r13,0x28(%rbp)
	movq 0x20(%r15),%r13
	movq %r13,0x30(%rbp)
	movq 0x18(%r15),%r13
	movq %r13,0x38(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x40(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x48(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x50(%rbp)
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x58(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x60(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x68(%rbp)
	movq 0x18(%r15),%r13
	movq %r13,0x70(%rbp)
	movq 0x20(%r15),%r13
	movq %r13,0x78(%rbp)
	movq %r14,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_201943+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x2D54
L_201943:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movl 0x88(%rbp),%r15d
	movl %r15d,0x80(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_201944
L_202023:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_202024+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_202024
.p2align 0x4
.long 0x2D73
L_202024:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_201944:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x88(%rbp)
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x80(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xEC10)(%rip),%r15
	movq %r15,0x18(%r13)
	movq 0x10(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_201945+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x2D55
L_201945:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movl 0x98(%rbp),%r15d
	movl %r15d,0x80(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_201946
L_202021:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_202022+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_202022
.p2align 0x4
.long 0x2D72
L_202022:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_201946:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x90(%rbp)
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x80(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xEC10)(%rip),%r15
	movq %r15,0x18(%r13)
	movq 0x10(%rbp),%r15
	movq %r15,0xA0(%rbp)
	addq $0xA0,%rbp
	leaq (L_201947+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x2D56
L_201947:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movl 0xA0(%rbp),%r15d
	movl %r15d,0x80(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_201948
L_202019:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_202020+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_202020
.p2align 0x4
.long 0x2D71
L_202020:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_201948:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x98(%rbp)
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x80(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xEC10)(%rip),%r15
	movq %r15,0x18(%r13)
	movq 0x18(%rbp),%r15
	movq %r15,0xA8(%rbp)
	addq $0xA8,%rbp
	leaq (L_201949+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x2D57
L_201949:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movl 0xA8(%rbp),%r15d
	movl %r15d,0x80(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_201950
L_202017:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_202018+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_202018
.p2align 0x4
.long 0x2D70
L_202018:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_201950:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movq %r12,(gcState+0x0)(%rip)
	movl 0x80(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xCE38)(%rip),%r15
	movq %r15,0x18(%r13)
	movq %r13,0xA0(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1433,%rcx
	movq $0x2,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_201951+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_201951
.p2align 0x4
.long 0x2D58
L_201951:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movq %rax,0x80(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2216:
	cmpq $0x2,%r15
	jnl L_462974
L_202012:
	movl %r15d,%r14d
	cmpl $0x0,%r14d
	je L_462973
	cmpl $0x1,%r14d
	je L_462972
L_202013:
	movq (globalObjptr+0x4A8)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_462972:
L_202016:
	movq (globalObjptr+0x51E0)(%rip),%r14
L_202015:
	movq 0x80(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r14,0x0(%r13,%r15,8)
	incq %r15
	jmp loop_2216
.p2align 0x4
L_462973:
L_202014:
	movq (globalWord64+0xE8)(%rip),%r14
	jmp L_202015
.p2align 0x4
L_462974:
L_201952:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_201953
L_202010:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_202011+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_202011
.p2align 0x4
.long 0x2D6F
L_202011:
	addq $0xFFFFFFFFFFFFFF50,%rbp
L_201953:
	movq 0x80(%rbp),%r15
	movq $0x907,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x23BB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0xA0(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x20(%rbp),%r13
	movq %r13,0x8(%r14)
	movq $0x2127,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x20,%r12
	movq %r12,(gcState+0x0)(%rip)
	movq %r15,0x0(%r13)
	movq $0xB,0x10(%r13)
	movq %r13,0xA8(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1437,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_201954+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_201954
.p2align 0x4
.long 0x2D59
L_201954:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq %rax,0x80(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2217:
	cmpq $0x1,%r15
	jnl L_462975
L_202009:
	movq 0x80(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0xA8(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_2217
.p2align 0x4
L_462975:
L_201955:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_201956
L_202007:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_202008+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_202008
.p2align 0x4
.long 0x2D6F
L_202008:
	addq $0xFFFFFFFFFFFFFF50,%rbp
L_201956:
	movq 0x80(%rbp),%r15
	movq $0x33,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x1143,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xA0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x2115,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0xA8(%rbp)
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq 0x28(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0xB0(%rbp)
	movq 0x0(%r14),%r11
	movq 0x8(%r11),%r10
	movq %r10,0xB8(%rbp)
	movq 0x0(%r11),%r10
	movq %r10,0xC0(%rbp)
	movq %r13,0xD0(%rbp)
	addq $0xD0,%rbp
	leaq (L_201957+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x2D5A
L_201957:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movl 0xD0(%rbp),%r15d
	movl %r15d,0xA0(%rbp)
	movl %r15d,0xD0(%rbp)
	movq $0x3,0xD8(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0xE0(%rbp)
	addq $0xD0,%rbp
	leaq (L_201958+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x2D5A
L_201958:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movq 0xD0(%rbp),%r15
	movq %r15,0xA0(%rbp)
	movq %r15,0xD0(%rbp)
	movq $0x1,0xD8(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0xE0(%rbp)
	addq $0xD0,%rbp
	leaq (L_201959+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x2D5A
L_201959:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movq 0xD0(%rbp),%r15
	movq %r15,0xA0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_201960
L_202005:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_202006+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_202006
.p2align 0x4
.long 0x2D6E
L_202006:
	addq $0xFFFFFFFFFFFFFF30,%rbp
L_201960:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xA0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xB0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0xBB3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0xC8(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x98(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0xD8(%rbp)
	addq $0xD8,%rbp
	leaq (L_201961+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x2D5B
L_201961:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movl 0xD8(%rbp),%r15d
	movl %r15d,0xA0(%rbp)
	movl %r15d,0xD8(%rbp)
	movq $0x3,0xE0(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0xE8(%rbp)
	addq $0xD8,%rbp
	leaq (L_201962+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x2D5C
L_201962:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0xA0(%rbp)
	movq %r15,0xD8(%rbp)
	movq $0x3,0xE0(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0xE8(%rbp)
	addq $0xD8,%rbp
	leaq (L_201963+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x2D5D
L_201963:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0xA0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_201964
L_202003:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_202004+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_202004
.p2align 0x4
.long 0x2D6D
L_202004:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_201964:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xA0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xB0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0xBB3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x88(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x3979,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0xC8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0xB8(%rbp)
	movl $0x2,0xC0(%rbp)
	addq $0xB8,%rbp
	leaq (L_201965+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_27
.p2align 0x4
.long 0x2D5E
L_201965:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0xA0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_201966
L_202001:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_202002+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_202002
.p2align 0x4
.long 0x2D6C
L_202002:
	addq $0xFFFFFFFFFFFFFF48,%rbp
L_201966:
	movq $0x2133,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xB0(%rbp)
	addq $0x20,%r12
	movq 0xA0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq 0xA8(%rbp),%r14
	movq %r14,0x10(%r15)
	movl $0x1,0xC0(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC0,%rbp
	leaq (L_201967+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp gc_0
.p2align 0x4
.long 0x2D5F
L_201967:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movl 0xC0(%rbp),%r15d
	movl %r15d,0xA0(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0xA8(%rbp)
	movb 0xD0(%rbp),%r15b
	movb %r15b,0xA4(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movl 0xE8(%rbp),%r15d
	movl %r15d,0xC8(%rbp)
	movb 0xEC(%rbp),%r15b
	movb %r15b,0xA5(%rbp)
	movq 0xF0(%rbp),%r15
	movq %r15,0xD0(%rbp)
	movq 0xF8(%rbp),%r15
	movq %r15,0xD8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_201968
L_201999:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE8,%rbp
	leaq (L_202000+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_202000
.p2align 0x4
.long 0x2D6B
L_202000:
	addq $0xFFFFFFFFFFFFFF18,%rbp
L_201968:
	movq $0x1243,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xE0(%rbp)
	addq $0x50,%r12
	movq 0xD0(%rbp),%r14
	movq %r14,0x0(%r15)
	movl 0xA0(%rbp),%r14d
	movl %r14d,0x8(%r15)
	movl %r14d,0xC(%r15)
	movl %r14d,0x10(%r15)
	movl 0xC8(%rbp),%r13d
	movl %r13d,0x14(%r15)
	movl %r14d,0x18(%r15)
	movl %r14d,0x1C(%r15)
	movzbl 0xA4(%rbp),%r14d
	movzbl 0xA5(%rbp),%r13d
	shll $0x8,%r13d
	orl %r13d,%r14d
	movl %r14d,0x20(%r15)
	movl $0x0,0x24(%r15)
	movq 0xA8(%rbp),%r14
	movq %r14,0x28(%r15)
	movq 0xB8(%rbp),%r14
	movq %r14,0x30(%r15)
	movq 0xC0(%rbp),%r14
	movq %r14,0x38(%r15)
	movq 0xD8(%rbp),%r14
	movq %r14,0x40(%r15)
	movq $0x35,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xE8(%rbp)
	addq $0x30,%r12
	movq 0xB0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x80(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x20(%r15)
	movq (globalObjptr+0xF20)(%rip),%r15
	movq $0x31,0xFFFFFFFFFFFFFFF8(%r15)
	movq (globalObjptr+0xF48)(%rip),%r15
	movq $0x33,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x38(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r13),%r11
	movq 0x8(%r13),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_462982
L_201969:
	movq %r14,0x100(%rbp)
	movq 0x0(%r9),%r15
	movq %r15,0xF8(%rbp)
	addq $0xF8,%rbp
	leaq (L_201970+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_462982:
L_201994:
	movq %r11,0x8(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_201995+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x2D60
L_201970:
	addq $0xFFFFFFFFFFFFFF08,%rbp
	movq 0xF8(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x40(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x70(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x78(%rbp)
	movq %r15,0xF8(%rbp)
	addq $0xF8,%rbp
	leaq (L_201971+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x1
L_201995:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (bug_564+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x2D61
L_201971:
	addq $0xFFFFFFFFFFFFFF08,%rbp
	movl 0xF8(%rbp),%r15d
	movl %r15d,0x80(%rbp)
	movl %r15d,0xF8(%rbp)
	movq $0x3,0x100(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x108(%rbp)
	addq $0xF8,%rbp
	leaq (L_201972+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x1
bug_564:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_201996
L_201997:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_201998+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_201998
.p2align 0x4
.long 0x451
L_201998:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_201996:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x2D62
L_201972:
	addq $0xFFFFFFFFFFFFFF08,%rbp
	movq 0xF8(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq %r15,0xF8(%rbp)
	movq $0x1,0x100(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x108(%rbp)
	addq $0xF8,%rbp
	leaq (L_201973+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x2D63
L_201973:
	addq $0xFFFFFFFFFFFFFF08,%rbp
	movq 0xF8(%rbp),%r15
	movq %r15,0x70(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_201974
L_201992:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF8,%rbp
	leaq (L_201993+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_201993
.p2align 0x4
.long 0x2D6A
L_201993:
	addq $0xFFFFFFFFFFFFFF08,%rbp
L_201974:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x211B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x78(%rbp)
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq 0x48(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x0(%r15),%r13
	movq 0x8(%r13),%r11
	movq %r11,0xB0(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0xF0(%rbp)
	movq %r14,0x100(%rbp)
	addq $0x100,%rbp
	leaq (L_201975+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x2D64
L_201975:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movl 0x100(%rbp),%r15d
	movl %r15d,0x68(%rbp)
	movl %r15d,0x100(%rbp)
	movq $0x3,0x108(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0x110(%rbp)
	addq $0x100,%rbp
	leaq (L_201976+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x2D65
L_201976:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq %r15,0xF8(%rbp)
	movq $0x1,0x100(%rbp)
	movq 0xF0(%rbp),%r15
	movq %r15,0x108(%rbp)
	addq $0xF8,%rbp
	leaq (L_201977+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x2D66
L_201977:
	addq $0xFFFFFFFFFFFFFF08,%rbp
	movq 0xF8(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_201978
L_201990:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF8,%rbp
	leaq (L_201991+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_201991
.p2align 0x4
.long 0x2D69
L_201991:
	addq $0xFFFFFFFFFFFFFF08,%rbp
L_201978:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x80(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x211B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x70(%rbp)
	addq $0x10,%r12
	movq %r12,(gcState+0x0)(%rip)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1433,%rcx
	movq $0x3,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF8,%rbp
	leaq (L_201979+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_201979
.p2align 0x4
.long 0x2D67
L_201979:
	addq $0xFFFFFFFFFFFFFF08,%rbp
	movq %rax,0x68(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2218:
	cmpq $0x3,%r15
	jnl L_462989
L_201984:
	movl %r15d,%r14d
	cmpl $0x0,%r14d
	je L_462988
	cmpl $0x1,%r14d
	je L_462987
	cmpl $0x2,%r14d
	je L_462986
L_201985:
	movq (globalObjptr+0x4C0)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_462986:
L_201989:
	movq 0x70(%rbp),%r14
L_201987:
	movq 0x68(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r14,0x0(%r13,%r15,8)
	incq %r15
	jmp loop_2218
.p2align 0x4
L_462987:
L_201988:
	movq 0x78(%rbp),%r14
	jmp L_201987
.p2align 0x4
L_462988:
L_201986:
	movq $0x2,%r14
	jmp L_201987
.p2align 0x4
L_462989:
L_201980:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_201981
L_201982:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF8,%rbp
	leaq (L_201983+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_201983
.p2align 0x4
.long 0x2D68
L_201983:
	addq $0xFFFFFFFFFFFFFF08,%rbp
L_201981:
	movq 0x68(%rbp),%r15
	movq $0x907,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x213D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x20,%r12
	movq %r15,0x0(%r14)
	movq 0xE0(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x90(%rbp),%r15
	movq %r15,0x10(%r14)
	movq $0x35,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x30,%r12
	movq (globalObjptr+0xF48)(%rip),%r14
	movq %r14,0x8(%r13)
	movq 0x88(%rbp),%r11
	movq %r11,0x10(%r13)
	movq $0x1,0x18(%r13)
	movq (globalObjptr+0xF20)(%rip),%r11
	movq %r11,0x20(%r13)
	movq $0x31,0xFFFFFFFFFFFFFFF8(%r11)
	movq $0x212F,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	addq $0x50,%r12
	movq 0xD0(%rbp),%r9
	movq %r9,0x0(%r10)
	movl 0xA0(%rbp),%r9d
	movl %r9d,0x8(%r10)
	movl %r9d,0xC(%r10)
	movl 0xC8(%rbp),%r8d
	movl %r8d,0x10(%r10)
	movl %r9d,0x14(%r10)
	movl %r9d,0x18(%r10)
	movl %r9d,0x1C(%r10)
	movzbl 0xA5(%rbp),%r9d
	movzbl 0xA4(%rbp),%r8d
	shll $0x8,%r8d
	orl %r8d,%r9d
	movl %r9d,0x20(%r10)
	movl $0x0,0x24(%r10)
	movq 0xD8(%rbp),%r9
	movq %r9,0x28(%r10)
	movq 0xC0(%rbp),%r9
	movq %r9,0x30(%r10)
	movq 0xB8(%rbp),%r9
	movq %r9,0x38(%r10)
	movq 0xA8(%rbp),%r9
	movq %r9,0x40(%r10)
	movq $0x33,0xFFFFFFFFFFFFFFF8(%r14)
	movq (globalObjptr+0xF40)(%rip),%r9
	movq $0x907,0xFFFFFFFFFFFFFFF8(%r9)
	movq $0x2139,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	addq $0x18,%r12
	movq %r9,0x0(%r8)
	movq 0x98(%rbp),%r9
	movq %r9,0x8(%r8)
	movq $0x35,0x0(%r12)
	movq %r12,%rsp
	addq $0x8,%rsp
	movq %r8,0x0(%rsp)
	movq %r10,0x18(%rsp)
	addq $0x30,%r12
	movq %r14,0x8(%rsp)
	movq %r15,0x10(%rsp)
	movq %r11,0x20(%rsp)
	movq $0x31,0xFFFFFFFFFFFFFFF8(%r11)
	movq $0x35,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x30,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r9,0x10(%r15)
	movq $0x1,0x18(%r15)
	movq %r11,0x20(%r15)
	movq 0x50(%rbp),%r14
	movq 0x0(%r14),%r11
	movq $0x21A7,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq $0x21A7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %rsp,0x0(%r15)
	movq %r10,0x8(%r15)
	addq $0x18,%r12
	movq $0x21A7,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r15,0x8(%r11)
	addq $0x18,%r12
	movq $0x21A7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x8(%r15)
	addq $0x18,%r12
	movq 0xE8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl loop_3921
.hidden loop_3921
loop_3921:
L_202027:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_202028
L_202082:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_202083+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_202083
.p2align 0x4
.long 0x63C
L_202083:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_202028:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movl %r13d,0x30(%rbp)
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_202030
L_202031:
	cmpl $0x0,%r13d
	jl L_202080
L_202032:
	movl $0x0,0x34(%rbp)
loop_2219:
	movl 0x30(%rbp),%r15d
	cmpl %r15d,0x34(%rbp)
	jl L_462992
L_202033:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_462992:
L_202034:
	movslq 0x34(%rbp),%r15
	movq %r15,%r14
	salq $0x4,%r14
	movq 0x28(%rbp),%r13
	movq 0x0(%r13,%r14,1),%r11
	movq %r11,0x38(%rbp)
	salq $0x4,%r15
	movq 0x8(%r13,%r15,1),%r14
	movq %r14,0x40(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r15
	movl %r15d,%r14d
	movl %r14d,0x48(%rbp)
	movslq %r14d,%r13
	cmpq %r13,%r15
	jne L_462995
L_202036:
	cmpl $0x0,%r14d
	jl L_462994
L_202037:
	movl $0x0,0x4C(%rbp)
loop_2220:
	movl 0x48(%rbp),%r15d
	cmpl %r15d,0x4C(%rbp)
	jl L_462993
L_202038:
	movq 0x8(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x40,%rbp
	leaq (L_202039+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3921
.p2align 0x4
L_462993:
L_202040:
	movslq 0x4C(%rbp),%r15
	salq $0x4,%r15
	movq 0x38(%rbp),%r14
	movq 0x8(%r14,%r15,1),%r13
	movq %r13,0x58(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_202041+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_3
.p2align 0x4
L_462994:
L_202080:
	movq (globalObjptr+0x4F8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_462995:
L_202030:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xF79
L_202039:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	incl 0x34(%rbp)
	jmp loop_2219
.p2align 0x4
.long 0x2D74
L_202041:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	andq $0x1,%r15
	jnz L_462999
L_202042:
	movq (globalObjptr+0xDFE0)(%rip),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_202043+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_462999:
L_202072:
	movq 0x50(%rbp),%r15
	shrq $0x1,%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x18(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_202074
L_202075:
	movl $0x1,0x0(%r14,%r15,4)
	movq 0x10(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_463000
L_202077:
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x58(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_202078+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp addSignalCheck_0
.p2align 0x4
L_463000:
L_202074:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_202043:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_202044+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x2D74
L_202078:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	incl 0x4C(%rbp)
	jmp loop_2220
.p2align 0x4
.long 0x4AF
L_202044:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xDEE8)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_202045+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5AF
L_202045:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_202046+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x51E
L_202046:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_202047
L_202070:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_202071+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_202071
.p2align 0x4
.long 0x4AE
L_202071:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_202047:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_202048:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_463005
L_202050:
	cmpq $0x1,%r14
	je L_463002
L_202051:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_202048
.p2align 0x4
L_463002:
L_202052:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_202053
L_202068:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_202069+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_202069
.p2align 0x4
.long 0x4E6
L_202069:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_202053:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_463003
L_202054:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
toString_294:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	addq $0x8,%rbp
	leaq (rev_292+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_463003:
L_202067:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_294
.p2align 0x4
L_463005:
L_202049:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
rev_292:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_463009
L_202055:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_202056:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_463008
.p2align 0x4,,0x7
L_202057:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_463007
L_202058:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_202056
.p2align 0x4
L_463007:
L_202060:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_565+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_463008:
L_202064:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_202065+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_202065
.p2align 0x4
.long 0x45B
L_202065:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_202057
.p2align 0x4
L_463009:
L_202066:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_202060
.p2align 0x4
.long 0x1
bug_565:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_202061
L_202062:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_202063+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_202063
.p2align 0x4
.long 0x451
L_202063:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_202061:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl passTypeCheck_3
.hidden passTypeCheck_3
passTypeCheck_3:
L_202084:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x40(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_202291
L_202085:
	movq (gcState+0x458)(%rip),%r15
	subq %r12,%r15
	cmpq $0x248,%r15
	jb L_463017
L_202086:
	movq 0x30(%rbp),%r14
	movq 0x88(%r14),%r13
	movq %r13,0x48(%rbp)
	movq 0x80(%r14),%r13
	movq %r13,0x50(%rbp)
	movq 0x78(%r14),%r13
	movq %r13,0x58(%rbp)
	movq 0x70(%r14),%r13
	movq %r13,0x60(%rbp)
	movq 0x68(%r14),%r13
	movq %r13,0x68(%rbp)
	movq 0x60(%r14),%r13
	movq %r13,0x70(%rbp)
	movq 0x58(%r14),%r13
	movq %r13,0x78(%rbp)
	movq 0x50(%r14),%r13
	movq %r13,0x80(%rbp)
	movq 0x48(%r14),%r13
	movq %r13,0x88(%rbp)
	movq 0x40(%r14),%r13
	movq %r13,0x90(%rbp)
	movq 0x38(%r14),%r13
	movq %r13,0x98(%rbp)
	movq 0x30(%r14),%r13
	movq %r13,0xA0(%rbp)
	movq 0x28(%r14),%r13
	movq %r13,0xA8(%rbp)
	movq 0x20(%r14),%r13
	movq %r13,0xB0(%rbp)
	movq 0x18(%r14),%r13
	movq %r13,0xB8(%rbp)
	movq 0x10(%r14),%r13
	movq %r13,0xC0(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0xC8(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0xD0(%rbp)
	movq 0x98(%r14),%r13
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_463011
L_202087:
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,%r15
L_202088:
	movq %r15,0xE8(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0xE0(%rbp)
	addq $0xE0,%rbp
	leaq (L_202089+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1608
.p2align 0x4
L_463011:
L_202094:
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x209E,%r14
	je L_463016
L_202286:
	movq 0xF8(%r15),%r14
	movq 0xF0(%r15),%r13
	movq 0xE8(%r15),%r11
	movq 0xE0(%r15),%r10
	movq 0xD8(%r15),%r9
	movq 0xD0(%r15),%r8
	movq 0xC8(%r15),%rsp
	movq 0xC0(%r15),%rsi
	movq 0xB8(%r15),%rdi
	movq 0xB0(%r15),%rdx
	movq 0xA8(%r15),%rcx
	movq 0xA0(%r15),%rbx
	movq 0x98(%r15),%rax
	movq %r14,(localObjptr+0x0)(%rip)
	movl 0x0(%r15),%r14d
	movq %r13,(localObjptr+0x8)(%rip)
	movq 0x90(%r15),%r13
	movq %r11,(localObjptr+0x10)(%rip)
	movq 0x88(%r15),%r11
	movq %r10,(localObjptr+0x18)(%rip)
	movq 0x80(%r15),%r10
	movq %r9,(localObjptr+0x20)(%rip)
	movq 0x78(%r15),%r9
	movq %r8,(localObjptr+0x28)(%rip)
	movq 0x70(%r15),%r8
	movq %rsp,(localObjptr+0x30)(%rip)
	movq 0x68(%r15),%rsp
	movq %rsi,(localObjptr+0x38)(%rip)
	movq 0x60(%r15),%rsi
	movq %rdi,(localObjptr+0x40)(%rip)
	movq 0x58(%r15),%rdi
	movq %rdx,(localObjptr+0x48)(%rip)
	movq 0x50(%r15),%rdx
	movq %rcx,(localObjptr+0x50)(%rip)
	movq 0x48(%r15),%rcx
	movq %rbx,(localObjptr+0x58)(%rip)
	movq 0x40(%r15),%rbx
	movq %rax,(localObjptr+0x60)(%rip)
	movq 0x38(%r15),%rax
	movq %r13,(localObjptr+0x68)(%rip)
	movq 0x30(%r15),%r13
	movq %r11,(localObjptr+0x70)(%rip)
	movq 0x28(%r15),%r11
	movq %r10,(localObjptr+0x78)(%rip)
	movq 0x20(%r15),%r10
	movq %r9,(localObjptr+0x80)(%rip)
	movq 0x18(%r15),%r9
	movq %r8,(localObjptr+0x88)(%rip)
	movq 0x10(%r15),%r8
	movq %rsp,(localObjptr+0x90)(%rip)
	movq 0x8(%r15),%rsp
	movq $0x3095,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r14d,0x0(%r15)
	movq %rsp,0x8(%r15)
	movq %r8,0x10(%r15)
	movq %r9,0x18(%r15)
	movq %r10,0x20(%r15)
	movq %r11,0x28(%r15)
	movq %r13,0x30(%r15)
	movq %rax,0x38(%r15)
	movq %rbx,0x40(%r15)
	movq %rcx,0x48(%r15)
	movq %rdx,0x50(%r15)
	movq %rdi,0x58(%r15)
	movq %rsi,0x60(%r15)
	movq (localObjptr+0x90)(%rip),%r14
	movq %r14,0x68(%r15)
	movq (localObjptr+0x88)(%rip),%r14
	movq %r14,0x70(%r15)
	movq (localObjptr+0x80)(%rip),%r14
	movq %r14,0x78(%r15)
	movq (localObjptr+0x78)(%rip),%r14
	movq %r14,0x80(%r15)
	movq (localObjptr+0x70)(%rip),%r14
	movq %r14,0x88(%r15)
	movq (localObjptr+0x68)(%rip),%r14
	movq %r14,0x90(%r15)
	movq (localObjptr+0x60)(%rip),%r14
	movq %r14,0x98(%r15)
	movq (localObjptr+0x58)(%rip),%r14
	movq %r14,0xA0(%r15)
	movq (localObjptr+0x50)(%rip),%r14
	movq %r14,0xA8(%r15)
	movq (localObjptr+0x48)(%rip),%r14
	movq %r14,0xB0(%r15)
	movq (localObjptr+0x40)(%rip),%r14
	movq %r14,0xB8(%r15)
	movq (localObjptr+0x38)(%rip),%r14
	movq %r14,0xC0(%r15)
	movq (localObjptr+0x30)(%rip),%r14
	movq %r14,0xC8(%r15)
	movq (localObjptr+0x28)(%rip),%r14
	movq %r14,0xD0(%r15)
	movq (localObjptr+0x20)(%rip),%r14
	movq %r14,0xD8(%r15)
	movq (localObjptr+0x18)(%rip),%r14
	movq %r14,0xE0(%r15)
	movq (localObjptr+0x10)(%rip),%r14
	movq %r14,0xE8(%r15)
	movq (localObjptr+0x8)(%rip),%r14
	movq %r14,0xF0(%r15)
	movq (localObjptr+0x0)(%rip),%r14
	movq %r14,0xF8(%r15)
	addq $0x108,%r12
	movl $0x0,0x4(%r15)
	movq %r15,0x8(%rbp)
L_202096:
	movq 0x58(%rbp),%r14
	movb 0x0(%r14),%r15b
	cmpb $0x0,%r15b
	je L_202221
	cmpb $0x1,%r15b
	je L_463014
L_202097:
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1849,%r14
	je L_463013
	cmpq $0x184A,%r14
	je L_463012
L_202098:
	movq 0x210(%r15),%r14
	movq %r14,0xE0(%rbp)
	movq 0x208(%r15),%r14
	movq %r14,0xE8(%rbp)
	movq 0x200(%r15),%r14
	movq %r14,0xF0(%rbp)
	movq 0x1F8(%r15),%r14
	movq %r14,0xF8(%rbp)
	movq 0x1F0(%r15),%r14
	movq %r14,0x100(%rbp)
	movq 0x1E8(%r15),%r14
	movq %r14,0x108(%rbp)
	movq 0x1E0(%r15),%r14
	movq %r14,0x110(%rbp)
	movq 0x1D8(%r15),%r14
	movq %r14,0x118(%rbp)
	movq 0x1D0(%r15),%r14
	movq %r14,0x120(%rbp)
	movq 0x1C8(%r15),%r14
	movq %r14,0x128(%rbp)
	movq 0x1C0(%r15),%r14
	movq %r14,0x130(%rbp)
	movq 0x1B8(%r15),%r14
	movq %r14,0x138(%rbp)
	movq 0x1B0(%r15),%r14
	movq %r14,0x140(%rbp)
	movq 0x1A8(%r15),%r14
	movq %r14,0x148(%rbp)
	movq 0x1A0(%r15),%r14
	movq %r14,0x150(%rbp)
	movq 0x198(%r15),%r14
	movq %r14,0x158(%rbp)
	movq 0x190(%r15),%r14
	movq %r14,0x160(%rbp)
	movq 0x188(%r15),%r14
	movq %r14,0x168(%rbp)
	movq 0x180(%r15),%r14
	movq %r14,0x170(%rbp)
	movq 0x178(%r15),%r14
	movq %r14,0x178(%rbp)
	movq 0x170(%r15),%r14
	movq %r14,0x180(%rbp)
	movq 0x168(%r15),%r14
	movq %r14,0x188(%rbp)
	movq 0x160(%r15),%r14
	movq %r14,0x190(%rbp)
	movq 0x158(%r15),%r14
	movq %r14,0x198(%rbp)
	movq 0x150(%r15),%r14
	movq %r14,0x1A0(%rbp)
	movq 0x148(%r15),%r14
	movq %r14,0x1A8(%rbp)
	movq 0x140(%r15),%r14
	movq %r14,0x1B0(%rbp)
	movq 0x138(%r15),%r14
	movq %r14,0x1B8(%rbp)
	movq 0x130(%r15),%r14
	movq %r14,0x1C0(%rbp)
	movq 0x128(%r15),%r14
	movq %r14,0x1C8(%rbp)
	movq 0x120(%r15),%r14
	movq %r14,0x1D0(%rbp)
	movq 0x118(%r15),%r14
	movq %r14,0x1D8(%rbp)
	movq 0x110(%r15),%r14
	movq %r14,0x1E0(%rbp)
	movq 0x108(%r15),%r14
	movq %r14,0x1E8(%rbp)
	movq 0x100(%r15),%r14
	movq %r14,0x1F0(%rbp)
	movq 0xF8(%r15),%r14
	movq %r14,0x1F8(%rbp)
	movq 0xF0(%r15),%r14
	movq %r14,0x200(%rbp)
	movq 0xE8(%r15),%r14
	movq %r14,0x208(%rbp)
	movq 0xE0(%r15),%r14
	movq %r14,0x210(%rbp)
	movq 0xD8(%r15),%r14
	movq %r14,0x218(%rbp)
	movq 0xD0(%r15),%r14
	movq %r14,0x220(%rbp)
	movq 0xC8(%r15),%r14
	movq %r14,0x228(%rbp)
	movq 0xC0(%r15),%r14
	movq %r14,0x230(%rbp)
	movq 0xB8(%r15),%r14
	movq %r14,0x238(%rbp)
	movq 0xB0(%r15),%r14
	movq %r14,0x240(%rbp)
	movq 0xA8(%r15),%r14
	movq %r14,0x248(%rbp)
	movq 0xA0(%r15),%r14
	movq %r14,0x250(%rbp)
	movq 0x98(%r15),%r14
	movq %r14,0x258(%rbp)
	movq 0x90(%r15),%r14
	movq %r14,0x260(%rbp)
	movq 0x88(%r15),%r14
	movq %r14,0x268(%rbp)
	movq 0x80(%r15),%r14
	movq %r14,0x270(%rbp)
	movq 0x78(%r15),%r14
	movq %r14,0x278(%rbp)
	movl 0x0(%r15),%r14d
	movl %r14d,0x280(%rbp)
	movq 0x70(%r15),%r14
	movq %r14,0x288(%rbp)
	movq 0x68(%r15),%r14
	movq %r14,0x290(%rbp)
	movq 0x60(%r15),%r14
	movq %r14,0x298(%rbp)
	movq 0x58(%r15),%r14
	movq %r14,0x2A0(%rbp)
	movq 0x50(%r15),%r14
	movq %r14,0x2A8(%rbp)
	movq 0x48(%r15),%r14
	movq %r14,0x2B0(%rbp)
	movq 0x40(%r15),%r14
	movq %r14,0x2B8(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x2C0(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x2C8(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x2D0(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x2D8(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x2E0(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x2E8(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x2F0(%rbp)
	addq $0xE0,%rbp
	leaq (L_202099+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1867
.p2align 0x4
L_463012:
L_202219:
	movq 0xF8(%r15),%r14
	movq %r14,0xE0(%rbp)
	movq 0xF0(%r15),%r14
	movq %r14,0xE8(%rbp)
	movq 0xE8(%r15),%r14
	movq %r14,0xF0(%rbp)
	movq 0xE0(%r15),%r14
	movq %r14,0xF8(%rbp)
	movq 0xD8(%r15),%r14
	movq %r14,0x100(%rbp)
	movq 0xD0(%r15),%r14
	movq %r14,0x108(%rbp)
	movq 0xC8(%r15),%r14
	movq %r14,0x110(%rbp)
	movq 0xC0(%r15),%r14
	movq %r14,0x118(%rbp)
	movq 0xB8(%r15),%r14
	movq %r14,0x120(%rbp)
	movq 0xB0(%r15),%r14
	movq %r14,0x128(%rbp)
	movq 0xA8(%r15),%r14
	movq %r14,0x130(%rbp)
	movq 0xA0(%r15),%r14
	movq %r14,0x138(%rbp)
	movq 0x98(%r15),%r14
	movq %r14,0x140(%rbp)
	movl 0x0(%r15),%r14d
	movl %r14d,0x148(%rbp)
	movq 0x90(%r15),%r14
	movq %r14,0x150(%rbp)
	movq 0x88(%r15),%r14
	movq %r14,0x158(%rbp)
	movq 0x80(%r15),%r14
	movq %r14,0x160(%rbp)
	movq 0x78(%r15),%r14
	movq %r14,0x168(%rbp)
	movq 0x70(%r15),%r14
	movq %r14,0x170(%rbp)
	movq 0x68(%r15),%r14
	movq %r14,0x178(%rbp)
	movq 0x60(%r15),%r14
	movq %r14,0x180(%rbp)
	movq 0x58(%r15),%r14
	movq %r14,0x188(%rbp)
	movq 0x50(%r15),%r14
	movq %r14,0x190(%rbp)
	movq 0x48(%r15),%r14
	movq %r14,0x198(%rbp)
	movq 0x40(%r15),%r14
	movq %r14,0x1A0(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x1A8(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x1B0(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x1B8(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x1C0(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x1C8(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x1D0(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x1D8(%rbp)
	addq $0xE0,%rbp
	leaq (L_202099+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1866
.p2align 0x4
L_463013:
L_202208:
	movq 0x18(%r15),%r14
	movq 0x10(%r15),%r13
	movq %r13,0x30(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x48(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x50(%rbp)
	movq $0x8A3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xD8(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0x1640)(%rip),%r14
	movq %r14,0x8(%r15)
	movq %r15,0xE8(%rbp)
	addq $0xE8,%rbp
	leaq (L_202209+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_463014:
L_202221:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x1600)(%rip),%r14
	movq %r14,0x8(%r15)
	movq %r15,0xE0(%rbp)
	addq $0xE0,%rbp
	leaq (L_202222+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_463016:
L_202095:
	movq 0x210(%r15),%r14
	movq 0x208(%r15),%r13
	movq 0x200(%r15),%r11
	movq 0x1F8(%r15),%r10
	movq 0x1F0(%r15),%r9
	movq 0x1E8(%r15),%r8
	movq 0x1E0(%r15),%rsp
	movq 0x1D8(%r15),%rsi
	movq 0x1D0(%r15),%rdi
	movq 0x1C8(%r15),%rdx
	movq 0x1C0(%r15),%rcx
	movq 0x1B8(%r15),%rbx
	movq 0x1B0(%r15),%rax
	movq %r14,(localObjptr+0x0)(%rip)
	movq 0x1A8(%r15),%r14
	movq %r13,(localObjptr+0x8)(%rip)
	movq 0x1A0(%r15),%r13
	movq %r11,(localObjptr+0x10)(%rip)
	movq 0x198(%r15),%r11
	movq %r10,(localObjptr+0x18)(%rip)
	movq 0x190(%r15),%r10
	movq %r9,(localObjptr+0x20)(%rip)
	movq 0x188(%r15),%r9
	movq %r8,(localObjptr+0x28)(%rip)
	movq 0x180(%r15),%r8
	movq %rsp,(localObjptr+0x30)(%rip)
	movq 0x178(%r15),%rsp
	movq %rsi,(localObjptr+0x38)(%rip)
	movq 0x170(%r15),%rsi
	movq %rdi,(localObjptr+0x40)(%rip)
	movq 0x168(%r15),%rdi
	movq %rdx,(localObjptr+0x48)(%rip)
	movq 0x160(%r15),%rdx
	movq %rcx,(localObjptr+0x50)(%rip)
	movq 0x158(%r15),%rcx
	movq %rbx,(localObjptr+0x58)(%rip)
	movq 0x150(%r15),%rbx
	movq %rax,(localObjptr+0x60)(%rip)
	movq 0x148(%r15),%rax
	movq %r14,(localObjptr+0x68)(%rip)
	movq 0x140(%r15),%r14
	movq %r13,(localObjptr+0x70)(%rip)
	movq 0x138(%r15),%r13
	movq %r11,(localObjptr+0x78)(%rip)
	movq 0x130(%r15),%r11
	movq %r10,(localObjptr+0x80)(%rip)
	movq 0x128(%r15),%r10
	movq %r9,(localObjptr+0x88)(%rip)
	movq 0x120(%r15),%r9
	movq %r8,(localObjptr+0x90)(%rip)
	movq 0x118(%r15),%r8
	movq %rsp,(localObjptr+0x98)(%rip)
	movq 0x110(%r15),%rsp
	movq %rsi,(localObjptr+0xA0)(%rip)
	movq 0x108(%r15),%rsi
	movq %rdi,(localObjptr+0xA8)(%rip)
	movq 0x100(%r15),%rdi
	movq %rdx,(localObjptr+0xB0)(%rip)
	movq 0xF8(%r15),%rdx
	movq %rcx,(localObjptr+0xB8)(%rip)
	movq 0xF0(%r15),%rcx
	movq %rbx,(localObjptr+0xC0)(%rip)
	movq 0xE8(%r15),%rbx
	movq %rax,(localObjptr+0xC8)(%rip)
	movq 0xE0(%r15),%rax
	movq %r14,(localObjptr+0xD0)(%rip)
	movq 0xD8(%r15),%r14
	movq %r13,(localObjptr+0xD8)(%rip)
	movq 0xD0(%r15),%r13
	movq %r11,(localObjptr+0xE0)(%rip)
	movq 0xC8(%r15),%r11
	movq %r10,(localObjptr+0xE8)(%rip)
	movq 0xC0(%r15),%r10
	movq %r9,(localObjptr+0xF0)(%rip)
	movq 0xB8(%r15),%r9
	movq %r8,(localObjptr+0xF8)(%rip)
	movq 0xB0(%r15),%r8
	movq %rsp,(localObjptr+0x100)(%rip)
	movq 0xA8(%r15),%rsp
	movq %rsi,(localObjptr+0x108)(%rip)
	movq 0xA0(%r15),%rsi
	movq %rdi,(localObjptr+0x110)(%rip)
	movq 0x98(%r15),%rdi
	movq %rdx,(localObjptr+0x118)(%rip)
	movq 0x90(%r15),%rdx
	movq %rcx,(localObjptr+0x120)(%rip)
	movq 0x88(%r15),%rcx
	movq %rbx,(localObjptr+0x128)(%rip)
	movq 0x80(%r15),%rbx
	movq %rax,(localObjptr+0x130)(%rip)
	movq 0x78(%r15),%rax
	movq %r14,(localObjptr+0x138)(%rip)
	movl 0x0(%r15),%r14d
	movq %r13,(localObjptr+0x140)(%rip)
	movq 0x70(%r15),%r13
	movq %r11,(localObjptr+0x148)(%rip)
	movq 0x68(%r15),%r11
	movq %r10,(localObjptr+0x150)(%rip)
	movq 0x60(%r15),%r10
	movq %r9,(localObjptr+0x158)(%rip)
	movq 0x58(%r15),%r9
	movq %r8,(localObjptr+0x160)(%rip)
	movq 0x50(%r15),%r8
	movq %rsp,(localObjptr+0x168)(%rip)
	movq 0x48(%r15),%rsp
	movq %rsi,(localObjptr+0x170)(%rip)
	movq 0x40(%r15),%rsi
	movq %rdi,(localObjptr+0x178)(%rip)
	movq 0x38(%r15),%rdi
	movq %rdx,(localObjptr+0x180)(%rip)
	movq 0x30(%r15),%rdx
	movq %rcx,(localObjptr+0x188)(%rip)
	movq 0x28(%r15),%rcx
	movq %rbx,(localObjptr+0x190)(%rip)
	movq 0x20(%r15),%rbx
	movq %rax,(localObjptr+0x198)(%rip)
	movq 0x18(%r15),%rax
	movq %r13,(localObjptr+0x1A0)(%rip)
	movq 0x10(%r15),%r13
	movq %r11,(localObjptr+0x1A8)(%rip)
	movq 0x8(%r15),%r11
	movq $0x3091,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r14d,0x0(%r15)
	movq %r11,0x8(%r15)
	movq %r13,0x10(%r15)
	movq %rax,0x18(%r15)
	movq %rbx,0x20(%r15)
	movq %rcx,0x28(%r15)
	movq %rdx,0x30(%r15)
	movq %rdi,0x38(%r15)
	movq %rsi,0x40(%r15)
	movq %rsp,0x48(%r15)
	movq %r8,0x50(%r15)
	movq %r9,0x58(%r15)
	movq %r10,0x60(%r15)
	movq (localObjptr+0x1A8)(%rip),%r14
	movq %r14,0x68(%r15)
	movq (localObjptr+0x1A0)(%rip),%r14
	movq %r14,0x70(%r15)
	movq (localObjptr+0x198)(%rip),%r14
	movq %r14,0x78(%r15)
	movq (localObjptr+0x190)(%rip),%r14
	movq %r14,0x80(%r15)
	movq (localObjptr+0x188)(%rip),%r14
	movq %r14,0x88(%r15)
	movq (localObjptr+0x180)(%rip),%r14
	movq %r14,0x90(%r15)
	movq (localObjptr+0x178)(%rip),%r14
	movq %r14,0x98(%r15)
	movq (localObjptr+0x170)(%rip),%r14
	movq %r14,0xA0(%r15)
	movq (localObjptr+0x168)(%rip),%r14
	movq %r14,0xA8(%r15)
	movq (localObjptr+0x160)(%rip),%r14
	movq %r14,0xB0(%r15)
	movq (localObjptr+0x158)(%rip),%r14
	movq %r14,0xB8(%r15)
	movq (localObjptr+0x150)(%rip),%r14
	movq %r14,0xC0(%r15)
	movq (localObjptr+0x148)(%rip),%r14
	movq %r14,0xC8(%r15)
	movq (localObjptr+0x140)(%rip),%r14
	movq %r14,0xD0(%r15)
	movq (localObjptr+0x138)(%rip),%r14
	movq %r14,0xD8(%r15)
	movq (localObjptr+0x130)(%rip),%r14
	movq %r14,0xE0(%r15)
	movq (localObjptr+0x128)(%rip),%r14
	movq %r14,0xE8(%r15)
	movq (localObjptr+0x120)(%rip),%r14
	movq %r14,0xF0(%r15)
	movq (localObjptr+0x118)(%rip),%r14
	movq %r14,0xF8(%r15)
	movq (localObjptr+0x110)(%rip),%r14
	movq %r14,0x100(%r15)
	movq (localObjptr+0x108)(%rip),%r14
	movq %r14,0x108(%r15)
	movq (localObjptr+0x100)(%rip),%r14
	movq %r14,0x110(%r15)
	movq (localObjptr+0xF8)(%rip),%r14
	movq %r14,0x118(%r15)
	movq (localObjptr+0xF0)(%rip),%r14
	movq %r14,0x120(%r15)
	movq (localObjptr+0xE8)(%rip),%r14
	movq %r14,0x128(%r15)
	movq (localObjptr+0xE0)(%rip),%r14
	movq %r14,0x130(%r15)
	movq (localObjptr+0xD8)(%rip),%r14
	movq %r14,0x138(%r15)
	movq (localObjptr+0xD0)(%rip),%r14
	movq %r14,0x140(%r15)
	movq (localObjptr+0xC8)(%rip),%r14
	movq %r14,0x148(%r15)
	movq (localObjptr+0xC0)(%rip),%r14
	movq %r14,0x150(%r15)
	movq (localObjptr+0xB8)(%rip),%r14
	movq %r14,0x158(%r15)
	movq (localObjptr+0xB0)(%rip),%r14
	movq %r14,0x160(%r15)
	movq (localObjptr+0xA8)(%rip),%r14
	movq %r14,0x168(%r15)
	movq (localObjptr+0xA0)(%rip),%r14
	movq %r14,0x170(%r15)
	movq (localObjptr+0x98)(%rip),%r14
	movq %r14,0x178(%r15)
	movq (localObjptr+0x90)(%rip),%r14
	movq %r14,0x180(%r15)
	movq (localObjptr+0x88)(%rip),%r14
	movq %r14,0x188(%r15)
	movq (localObjptr+0x80)(%rip),%r14
	movq %r14,0x190(%r15)
	movq (localObjptr+0x78)(%rip),%r14
	movq %r14,0x198(%r15)
	movq (localObjptr+0x70)(%rip),%r14
	movq %r14,0x1A0(%r15)
	movq (localObjptr+0x68)(%rip),%r14
	movq %r14,0x1A8(%r15)
	movq (localObjptr+0x60)(%rip),%r14
	movq %r14,0x1B0(%r15)
	movq (localObjptr+0x58)(%rip),%r14
	movq %r14,0x1B8(%r15)
	movq (localObjptr+0x50)(%rip),%r14
	movq %r14,0x1C0(%r15)
	movq (localObjptr+0x48)(%rip),%r14
	movq %r14,0x1C8(%r15)
	movq (localObjptr+0x40)(%rip),%r14
	movq %r14,0x1D0(%r15)
	movq (localObjptr+0x38)(%rip),%r14
	movq %r14,0x1D8(%r15)
	movq (localObjptr+0x30)(%rip),%r14
	movq %r14,0x1E0(%r15)
	movq (localObjptr+0x28)(%rip),%r14
	movq %r14,0x1E8(%r15)
	movq (localObjptr+0x20)(%rip),%r14
	movq %r14,0x1F0(%r15)
	movq (localObjptr+0x18)(%rip),%r14
	movq %r14,0x1F8(%r15)
	movq (localObjptr+0x10)(%rip),%r14
	movq %r14,0x200(%r15)
	movq (localObjptr+0x8)(%rip),%r14
	movq %r14,0x208(%r15)
	movq (localObjptr+0x0)(%rip),%r14
	movq %r14,0x210(%r15)
	addq $0x220,%r12
	movl $0x0,0x4(%r15)
	movq %r15,0x8(%rbp)
	jmp L_202096
.p2align 0x4
L_463017:
L_202291:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	movq $0x248,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_202292+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_202292
.p2align 0x4
.long 0xC02
L_202292:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_202086
.p2align 0x4
.long 0x2D75
L_202089:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	movl 0xE0(%rbp),%r15d
	movl %r15d,0xD8(%rbp)
	movq (gcState+0x458)(%rip),%r15
	subq %r12,%r15
	cmpq $0x248,%r15
	jnb L_202090
L_202288:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	movq $0x248,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE8,%rbp
	leaq (L_202289+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_202289
.p2align 0x4
.long 0x2D9C
L_202289:
	addq $0xFFFFFFFFFFFFFF18,%rbp
L_202090:
	movl 0xD8(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_463020
L_202091:
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_202094
L_202092:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	jmp L_202088
.p2align 0x4
L_463020:
L_202287:
	movq $0x3093,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x28,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x8(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x18(%r15)
	movq %r15,0x8(%rbp)
	jmp L_202096
.p2align 0x4
.long 0x2D76
L_202099:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	movq 0xE0(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_202101
L_202206:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_202207+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_202207
.p2align 0x4
.long 0x2D8F
L_202207:
	addq $0xFFFFFFFFFFFFFF20,%rbp
L_202101:
	movq $0xDCF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x48(%rbp)
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x3107,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0xE0(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movb $0x0,0xE8(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0xF0(%rbp)
	addq $0xE0,%rbp
	leaq (L_202102+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp message_0
.p2align 0x4
.long 0x2D90
L_202209:
	addq $0xFFFFFFFFFFFFFF18,%rbp
	movq 0xE8(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_202210
L_202217:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE8,%rbp
	leaq (L_202218+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_202218
.p2align 0x4
.long 0x2D93
L_202218:
	addq $0xFFFFFFFFFFFFFF18,%rbp
L_202210:
	movq $0x412F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0xD8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x10(%r15)
	movq $0x2763,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0xE8(%rbp)
	addq $0x10,%r12
	movb $0x4,0xF0(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0xF8(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x100(%rbp)
	addq $0xE8,%rbp
	leaq (L_202211+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp saveToFile_0
.p2align 0x4
.long 0x2D94
L_202222:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	movq 0xE0(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_202223
L_202283:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_202284+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_202284
.p2align 0x4
.long 0x2D8F
L_202284:
	addq $0xFFFFFFFFFFFFFF20,%rbp
L_202223:
	movq $0x3117,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0xE0(%rbp)
	movb $0x1,0xE8(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0xF0(%rbp)
	addq $0xE0,%rbp
	leaq (L_202224+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp message_0
.p2align 0x4
.long 0x2D77
L_202102:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_202103
L_202204:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_202205+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_202205
.p2align 0x4
.long 0x2D8E
L_202205:
	addq $0xFFFFFFFFFFFFFF20,%rbp
L_202103:
	movq (globalObjptr+0x15E8)(%rip),%r15
	movl 0x0(%r15),%r14d
	addl $0x3,%r14d
	jo L_463025
L_202105:
	movl %r14d,0x0(%r15)
	movq $0x312B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x88(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0xE0(%rbp)
	movb $0x0,0xE8(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0xF0(%rbp)
	addq $0xE0,%rbp
	leaq (L_202106+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp message_0
.p2align 0x4
L_463025:
L_202104:
	movq 0x40(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x2D91
L_202211:
	addq $0xFFFFFFFFFFFFFF18,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_202212
L_202215:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE8,%rbp
	leaq (L_202216+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_202216
.p2align 0x4
.long 0x2D92
L_202216:
	addq $0xFFFFFFFFFFFFFF18,%rbp
L_202212:
	movq 0xD8(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_463027
L_202213:
	movq 0x8(%r14),%r15
	movq %r15,0x8(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x30(%rbp)
	jmp L_202101
.p2align 0x4
L_463027:
L_202214:
	movq $0x9,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x2D94
L_202224:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0xE0(%rbp)
	addq $0xE0,%rbp
	leaq (L_202225+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp time_0
.p2align 0x4
.long 0x2D78
L_202106:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_202107
L_202202:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_202203+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_202203
.p2align 0x4
.long 0x2D8D
L_202203:
	addq $0xFFFFFFFFFFFFFF20,%rbp
L_202107:
	movq $0x3105,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0xE0(%rbp)
	movb $0x0,0xE8(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0xF0(%rbp)
	addq $0xE0,%rbp
	leaq (L_202108+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp message_0
.p2align 0x4
.long 0x2D94
L_202225:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	movq 0xE0(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_202226
L_202281:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_202282+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_202282
.p2align 0x4
.long 0x2D8E
L_202282:
	addq $0xFFFFFFFFFFFFFF20,%rbp
L_202226:
	movq (globalObjptr+0x15E8)(%rip),%r15
	movl 0x0(%r15),%r14d
	addl $0x3,%r14d
	jo L_202104
L_202227:
	movl %r14d,0x0(%r15)
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1849,%r14
	je L_463031
	cmpq $0x184A,%r14
	je L_463030
L_202228:
	movq 0x210(%r15),%r14
	movq %r14,0xE0(%rbp)
	movq 0x208(%r15),%r14
	movq %r14,0xE8(%rbp)
	movq 0x200(%r15),%r14
	movq %r14,0xF0(%rbp)
	movq 0x1F8(%r15),%r14
	movq %r14,0xF8(%rbp)
	movq 0x1F0(%r15),%r14
	movq %r14,0x100(%rbp)
	movq 0x1E8(%r15),%r14
	movq %r14,0x108(%rbp)
	movq 0x1E0(%r15),%r14
	movq %r14,0x110(%rbp)
	movq 0x1D8(%r15),%r14
	movq %r14,0x118(%rbp)
	movq 0x1D0(%r15),%r14
	movq %r14,0x120(%rbp)
	movq 0x1C8(%r15),%r14
	movq %r14,0x128(%rbp)
	movq 0x1C0(%r15),%r14
	movq %r14,0x130(%rbp)
	movq 0x1B8(%r15),%r14
	movq %r14,0x138(%rbp)
	movq 0x1B0(%r15),%r14
	movq %r14,0x140(%rbp)
	movq 0x1A8(%r15),%r14
	movq %r14,0x148(%rbp)
	movq 0x1A0(%r15),%r14
	movq %r14,0x150(%rbp)
	movq 0x198(%r15),%r14
	movq %r14,0x158(%rbp)
	movq 0x190(%r15),%r14
	movq %r14,0x160(%rbp)
	movq 0x188(%r15),%r14
	movq %r14,0x168(%rbp)
	movq 0x180(%r15),%r14
	movq %r14,0x170(%rbp)
	movq 0x178(%r15),%r14
	movq %r14,0x178(%rbp)
	movq 0x170(%r15),%r14
	movq %r14,0x180(%rbp)
	movq 0x168(%r15),%r14
	movq %r14,0x188(%rbp)
	movq 0x160(%r15),%r14
	movq %r14,0x190(%rbp)
	movq 0x158(%r15),%r14
	movq %r14,0x198(%rbp)
	movq 0x150(%r15),%r14
	movq %r14,0x1A0(%rbp)
	movq 0x148(%r15),%r14
	movq %r14,0x1A8(%rbp)
	movq 0x140(%r15),%r14
	movq %r14,0x1B0(%rbp)
	movq 0x138(%r15),%r14
	movq %r14,0x1B8(%rbp)
	movq 0x130(%r15),%r14
	movq %r14,0x1C0(%rbp)
	movq 0x128(%r15),%r14
	movq %r14,0x1C8(%rbp)
	movq 0x120(%r15),%r14
	movq %r14,0x1D0(%rbp)
	movq 0x118(%r15),%r14
	movq %r14,0x1D8(%rbp)
	movq 0x110(%r15),%r14
	movq %r14,0x1E0(%rbp)
	movq 0x108(%r15),%r14
	movq %r14,0x1E8(%rbp)
	movq 0x100(%r15),%r14
	movq %r14,0x1F0(%rbp)
	movq 0xF8(%r15),%r14
	movq %r14,0x1F8(%rbp)
	movq 0xF0(%r15),%r14
	movq %r14,0x200(%rbp)
	movq 0xE8(%r15),%r14
	movq %r14,0x208(%rbp)
	movq 0xE0(%r15),%r14
	movq %r14,0x210(%rbp)
	movq 0xD8(%r15),%r14
	movq %r14,0x218(%rbp)
	movq 0xD0(%r15),%r14
	movq %r14,0x220(%rbp)
	movq 0xC8(%r15),%r14
	movq %r14,0x228(%rbp)
	movq 0xC0(%r15),%r14
	movq %r14,0x230(%rbp)
	movq 0xB8(%r15),%r14
	movq %r14,0x238(%rbp)
	movq 0xB0(%r15),%r14
	movq %r14,0x240(%rbp)
	movq 0xA8(%r15),%r14
	movq %r14,0x248(%rbp)
	movq 0xA0(%r15),%r14
	movq %r14,0x250(%rbp)
	movq 0x98(%r15),%r14
	movq %r14,0x258(%rbp)
	movq 0x90(%r15),%r14
	movq %r14,0x260(%rbp)
	movq 0x88(%r15),%r14
	movq %r14,0x268(%rbp)
	movq 0x80(%r15),%r14
	movq %r14,0x270(%rbp)
	movq 0x78(%r15),%r14
	movq %r14,0x278(%rbp)
	movl 0x0(%r15),%r14d
	movl %r14d,0x280(%rbp)
	movq 0x70(%r15),%r14
	movq %r14,0x288(%rbp)
	movq 0x68(%r15),%r14
	movq %r14,0x290(%rbp)
	movq 0x60(%r15),%r14
	movq %r14,0x298(%rbp)
	movq 0x58(%r15),%r14
	movq %r14,0x2A0(%rbp)
	movq 0x50(%r15),%r14
	movq %r14,0x2A8(%rbp)
	movq 0x48(%r15),%r14
	movq %r14,0x2B0(%rbp)
	movq 0x40(%r15),%r14
	movq %r14,0x2B8(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x2C0(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x2C8(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x2D0(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x2D8(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x2E0(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x2E8(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x2F0(%rbp)
	leaq L_202267(%rip),%r15
	movq %r15,0x38(%rbp)
	movq %rbp,%r15
	addq $0x40,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0xE0,%rbp
	leaq (L_202229+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1867
.p2align 0x4
L_463030:
L_202280:
	movq 0xF8(%r15),%r14
	movq %r14,0xE0(%rbp)
	movq 0xF0(%r15),%r14
	movq %r14,0xE8(%rbp)
	movq 0xE8(%r15),%r14
	movq %r14,0xF0(%rbp)
	movq 0xE0(%r15),%r14
	movq %r14,0xF8(%rbp)
	movq 0xD8(%r15),%r14
	movq %r14,0x100(%rbp)
	movq 0xD0(%r15),%r14
	movq %r14,0x108(%rbp)
	movq 0xC8(%r15),%r14
	movq %r14,0x110(%rbp)
	movq 0xC0(%r15),%r14
	movq %r14,0x118(%rbp)
	movq 0xB8(%r15),%r14
	movq %r14,0x120(%rbp)
	movq 0xB0(%r15),%r14
	movq %r14,0x128(%rbp)
	movq 0xA8(%r15),%r14
	movq %r14,0x130(%rbp)
	movq 0xA0(%r15),%r14
	movq %r14,0x138(%rbp)
	movq 0x98(%r15),%r14
	movq %r14,0x140(%rbp)
	movl 0x0(%r15),%r14d
	movl %r14d,0x148(%rbp)
	movq 0x90(%r15),%r14
	movq %r14,0x150(%rbp)
	movq 0x88(%r15),%r14
	movq %r14,0x158(%rbp)
	movq 0x80(%r15),%r14
	movq %r14,0x160(%rbp)
	movq 0x78(%r15),%r14
	movq %r14,0x168(%rbp)
	movq 0x70(%r15),%r14
	movq %r14,0x170(%rbp)
	movq 0x68(%r15),%r14
	movq %r14,0x178(%rbp)
	movq 0x60(%r15),%r14
	movq %r14,0x180(%rbp)
	movq 0x58(%r15),%r14
	movq %r14,0x188(%rbp)
	movq 0x50(%r15),%r14
	movq %r14,0x190(%rbp)
	movq 0x48(%r15),%r14
	movq %r14,0x198(%rbp)
	movq 0x40(%r15),%r14
	movq %r14,0x1A0(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x1A8(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x1B0(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x1B8(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x1C0(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x1C8(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x1D0(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x1D8(%rbp)
	leaq L_202267(%rip),%r15
	movq %r15,0x38(%rbp)
	movq %rbp,%r15
	addq $0x40,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0xE0,%rbp
	leaq (L_202229+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1866
.p2align 0x4
L_463031:
L_202272:
	movq 0x18(%r15),%r14
	movq 0x10(%r15),%r13
	movq %r13,0x50(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0xD8(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0xE0(%rbp)
	movq $0x8A3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xE8(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0x1640)(%rip),%r14
	movq %r14,0x8(%r15)
	movq %r15,0xF8(%rbp)
	leaq L_202267(%rip),%r15
	movq %r15,0x38(%rbp)
	movq %rbp,%r15
	addq $0x40,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0xF8,%rbp
	leaq (L_202273+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x2D79
L_202108:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_202109
L_202200:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_202201+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_202201
.p2align 0x4
.long 0x2D8C
L_202201:
	addq $0xFFFFFFFFFFFFFF20,%rbp
L_202109:
	movq $0x3113,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x90(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0xE0(%rbp)
	movb $0x0,0xE8(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0xF0(%rbp)
	addq $0xE0,%rbp
	leaq (L_202110+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp message_0
.p2align 0x4
.long 0x2D95
L_202229:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	movq 0xE0(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0x50(%rbp)
L_202230:
	movq (globalObjptr+0x15E8)(%rip),%r15
	movl 0x0(%r15),%r14d
	subl $0x3,%r14d
	jo L_463035
L_202255:
	movl %r14d,0x0(%r15)
	movq 0x68(%rbp),%r15
	movq %r15,0xE0(%rbp)
	addq $0xE0,%rbp
	leaq (L_202256+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp time_0
.p2align 0x4
L_463035:
L_202231:
	movq $0x3,0x28(%rbp)
L_202232:
	movq (globalObjptr+0x15E8)(%rip),%r15
	movl 0x0(%r15),%r14d
	subl $0x3,%r14d
	jo L_202104
L_202233:
	movl %r14d,0x0(%r15)
	movq 0x40(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x68(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_202234+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp time_0
.p2align 0x4
.long 0xA1C
L_202267:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	movq %r15,0x28(%rbp)
	jmp L_202232
.p2align 0x4
.long 0x2D99
L_202273:
	addq $0xFFFFFFFFFFFFFF08,%rbp
	movq 0xF8(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_202274
L_202278:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF8,%rbp
	leaq (L_202279+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_202279
.p2align 0x4
.long 0x2D9B
L_202279:
	addq $0xFFFFFFFFFFFFFF08,%rbp
L_202274:
	movq $0x412F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0xE8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xD8(%rbp),%r14
	movq %r14,0x10(%r15)
	movq $0x2763,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0xF8(%rbp)
	addq $0x10,%r12
	movb $0x4,0x100(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x108(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0x110(%rbp)
	addq $0xF8,%rbp
	leaq (L_202275+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp saveToFile_0
.p2align 0x4
.long 0x2D7A
L_202110:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_202111
L_202198:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_202199+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_202199
.p2align 0x4
.long 0x2D8B
L_202199:
	addq $0xFFFFFFFFFFFFFF20,%rbp
L_202111:
	movq $0x311D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x98(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0xE0(%rbp)
	movb $0x0,0xE8(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0xF0(%rbp)
	addq $0xE0,%rbp
	leaq (L_202112+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp message_0
.p2align 0x4
.long 0x2D75
L_202256:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	movq 0xE0(%rbp),%r15
	movq %r15,0xD8(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0xE0(%rbp)
	movq 0x48(%rbp),%r14
	movq %r14,0xE8(%rbp)
	movq %r15,0xF0(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0xF8(%rbp)
	addq $0xE8,%rbp
	leaq (L_202257+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x282A
L_202234:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x48(%rbp),%r14
	movq %r14,0x88(%rbp)
	movq %r15,0x90(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x88,%rbp
	leaq (L_202235+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x2D9A
L_202275:
	addq $0xFFFFFFFFFFFFFF08,%rbp
	movq 0xE8(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_463039
L_202276:
	movq 0x8(%r14),%r15
	movq %r15,0x8(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x50(%rbp)
	jmp L_202230
.p2align 0x4
L_463039:
L_202277:
	movq $0x9,0x28(%rbp)
	jmp L_202232
.p2align 0x4
.long 0x2D7B
L_202112:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_202113
L_202196:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_202197+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_202197
.p2align 0x4
.long 0x2D8A
L_202197:
	addq $0xFFFFFFFFFFFFFF20,%rbp
L_202113:
	movq (globalObjptr+0x15E8)(%rip),%r14
	movl 0x0(%r14),%r13d
	subl $0x3,%r13d
	jo L_202104
L_202114:
	movl %r13d,0x0(%r14)
	movq (globalObjptr+0x1608)(%rip),%r14
	cmpl $0x0,0x0(%r14)
	jg L_463044
L_202115:
	movq 0xA0(%rbp),%r14
	movq 0x0(%r14),%r13
	cmpq $0x1,%r13
	je x_1892
L_202116:
	movq 0x8(%r13),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r13),%r13
	movq %r13,%r15
L_202117:
	movq %r15,0xE8(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0xE0(%rbp)
	addq $0xE0,%rbp
	leaq (L_202118+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1608
.p2align 0x4
x_1892:
x_680:
	movq 0xD0(%rbp),%r15
	movl 0x0(%r15),%r14d
	testl %r14d,%r14d
	jnz L_463040
L_202123:
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_463040:
L_202124:
	movq 0x58(%rbp),%r14
	movb 0x0(%r14),%r15b
	cmpb $0x0,%r15b
	je L_202130
	cmpb $0x1,%r15b
	je L_463042
L_202125:
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x184B,%r14
	je L_463041
L_202128:
	movq 0x0(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_202127+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp typeCheck_0
.p2align 0x4
L_463041:
L_202126:
	movq 0x0(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_202127+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp typeCheck_0
.p2align 0x4
L_463042:
L_202130:
	movq (globalObjptr+0x1650)(%rip),%r15
	movq %r15,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_202131+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_463044:
L_202192:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x1620)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xFC58)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x50(%rbp)
	addq $0x50,%rbp
	leaq (fail_4+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x2D96
L_202257:
	addq $0xFFFFFFFFFFFFFF18,%rbp
	movq 0xE8(%rbp),%r15
	movq %r15,0xE0(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0xF0(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0xF8(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x100(%rbp)
	addq $0xF0,%rbp
	leaq (L_202258+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x282B
L_202235:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x88,%rbp
	leaq (L_202236+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x2D7C
L_202118:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	movl 0xE0(%rbp),%r15d
	movl %r15d,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_202119
L_202189:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_202190+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_202190
.p2align 0x4
.long 0x2D89
L_202190:
	addq $0xFFFFFFFFFFFFFF20,%rbp
L_202119:
	movl 0x50(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_463047
L_202120:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je x_680
L_202121:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	jmp L_202117
.p2align 0x4
L_463047:
L_202180:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xA050)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0xE0(%rbp)
	addq $0xE0,%rbp
	leaq (L_202181+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x2D7D
L_202127:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x2D7E
L_202131:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_202132
L_202177:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_202178+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_202178
.p2align 0x4
.long 0x2D83
L_202178:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_202132:
	movq $0x3117,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x88(%rbp)
	movb $0x1,0x90(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x88,%rbp
	leaq (L_202133+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp message_0
.p2align 0x4
.long 0x281B
fail_4:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_202193
L_202194:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_202195+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_202195
.p2align 0x4
.long 0x477
L_202195:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_202193:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x2D97
L_202258:
	addq $0xFFFFFFFFFFFFFF10,%rbp
	movq 0xF0(%rbp),%r15
	movq %r15,0xD8(%rbp)
	movq %r15,0xE8(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0xF0(%rbp)
	addq $0xE0,%rbp
	leaq (L_202259+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp timeToString_0
.p2align 0x4
.long 0x282C
L_202236:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x48(%rbp),%r14
	movq %r14,0x70(%rbp)
	movq 0x78(%rbp),%r14
	movq %r14,0x80(%rbp)
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_202237+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp timeToString_0
.p2align 0x4
.long 0x2D84
L_202181:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	movq 0xE0(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_202182
L_202187:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_202188+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_202188
.p2align 0x4
.long 0x2D88
L_202188:
	addq $0xFFFFFFFFFFFFFF20,%rbp
L_202182:
	movq 0xA8(%rbp),%r15
	movq 0x20(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x88(%rbp)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xA050)(%rip),%r15
	movq %r15,0x0(%r14)
	movq 0xB0(%rbp),%r15
	movq 0x0(%r15),%r13
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r15,0xE0(%rbp)
	addq $0x18,%r12
	addq $0xE0,%rbp
	leaq (L_202183+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x2D7E
L_202133:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_202134+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp time_0
.p2align 0x4
.long 0x2D75
L_202259:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	movq 0xE0(%rbp),%r15
	movq %r15,0xD8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_202260
L_202270:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE8,%rbp
	leaq (L_202271+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_202271
.p2align 0x4
.long 0x2D93
L_202271:
	addq $0xFFFFFFFFFFFFFF18,%rbp
L_202260:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xD8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xD4B0)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0xE0(%rbp)
	addq $0xE0,%rbp
	leaq (L_202261+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x282D
L_202237:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_202238
L_202253:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_202254+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_202254
.p2align 0x4
.long 0x282E
L_202254:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_202238:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xD4A0)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_202239+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x2D85
L_202183:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	movq 0xE0(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_202184
L_202185:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_202186+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_202186
.p2align 0x4
.long 0x2D87
L_202186:
	addq $0xFFFFFFFFFFFFFF20,%rbp
L_202184:
	movq $0x31AF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x38,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xB8(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0xC0(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0xC8(%rbp),%r14
	movq %r14,0x20(%r15)
	movq 0xB0(%rbp),%r14
	movq %r14,0x28(%r15)
	movq %r15,0xE0(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0xE8(%rbp)
	movq %r14,0xF0(%rbp)
	movq (globalObjptr+0x1638)(%rip),%r15
	movq %r15,0xF8(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x100(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x108(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x110(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x118(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x120(%rbp)
	movb $0x2,0x128(%rbp)
	addq $0xE0,%rbp
	leaq (x_681+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1832
.p2align 0x4
.long 0x2D7E
L_202134:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq (globalObjptr+0x15E8)(%rip),%r15
	movl 0x0(%r15),%r14d
	addl $0x3,%r14d
	jo L_202104
L_202135:
	movl %r14d,0x0(%r15)
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x184B,%r14
	je L_463055
L_202176:
	movq 0x0(%r15),%r14
	movq %r14,0x90(%rbp)
	leaq L_202171(%rip),%r15
	movq %r15,0x38(%rbp)
	movq %rbp,%r15
	addq $0x40,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x30(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_202137+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp typeCheck_0
.p2align 0x4
L_463055:
L_202136:
	movq 0x0(%r15),%r14
	movq %r14,0x90(%rbp)
	leaq L_202171(%rip),%r15
	movq %r15,0x38(%rbp)
	movq %rbp,%r15
	addq $0x40,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x30(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_202137+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp typeCheck_0
.p2align 0x4
.long 0x2D75
L_202261:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	movq 0xE0(%rbp),%r15
	movq %r15,0xD8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_202262
L_202268:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE8,%rbp
	leaq (L_202269+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_202269
.p2align 0x4
.long 0x2D93
L_202269:
	addq $0xFFFFFFFFFFFFFF18,%rbp
L_202262:
	movq $0x3117,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xD8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0xE0(%rbp)
	movb $0x1,0xE8(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0xF0(%rbp)
	addq $0xE0,%rbp
	leaq (L_202263+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp message_0
.p2align 0x4
.long 0x282D
L_202239:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_202240
L_202251:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_202252+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_202252
.p2align 0x4
.long 0x282E
L_202252:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_202240:
	movq $0x3117,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x70(%rbp)
	movb $0x1,0x78(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x70,%rbp
	leaq (L_202241+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp message_0
.p2align 0x4
.long 0x2D86
x_681:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	jmp x_680
.p2align 0x4
.long 0x2D7F
L_202137:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq (globalObjptr+0x15E8)(%rip),%r15
	movl 0x0(%r15),%r14d
	subl $0x3,%r14d
	jo L_463059
L_202162:
	movl %r14d,0x0(%r15)
	movq 0x68(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_202163+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp time_0
.p2align 0x4
L_463059:
L_202138:
	movq $0x3,0x20(%rbp)
L_202139:
	movq (globalObjptr+0x15E8)(%rip),%r15
	movl 0x0(%r15),%r14d
	subl $0x3,%r14d
	jo L_202104
L_202140:
	movl %r14d,0x0(%r15)
	movq 0x40(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x68(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_202141+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp time_0
.p2align 0x4
.long 0xA1C
L_202171:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	movq %r15,0x20(%rbp)
	jmp L_202139
.p2align 0x4
.long 0x2D75
L_202263:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_202264
L_202265:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_202266+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_202266
.p2align 0x4
.long 0x2D98
L_202266:
	addq $0xFFFFFFFFFFFFFF20,%rbp
L_202264:
	movq 0x50(%rbp),%r15
	movq %r15,0x30(%rbp)
	jmp L_202101
.p2align 0x4
.long 0x282D
L_202241:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_202242+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp name_0
.p2align 0x4
.long 0x2D7F
L_202163:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x18(%rbp),%r14
	movq %r14,0x88(%rbp)
	movq %r15,0x90(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x88,%rbp
	leaq (L_202164+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x2811
L_202141:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x18(%rbp),%r14
	movq %r14,0x88(%rbp)
	movq %r15,0x90(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x88,%rbp
	leaq (L_202142+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x282D
L_202242:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_202243
L_202249:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_202250+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_202250
.p2align 0x4
.long 0x282E
L_202250:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_202243:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xD4A8)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_202244+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x2D80
L_202164:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x88,%rbp
	leaq (L_202165+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x2812
L_202142:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x88,%rbp
	leaq (L_202143+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x925
L_202244:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_202245
L_202247:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_202248+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_202248
.p2align 0x4
.long 0x926
L_202248:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_202245:
	movq $0x3117,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x50(%rbp)
	movb $0x1,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_202246+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp message_0
.p2align 0x4
.long 0x2D81
L_202165:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x28(%rbp),%r14
	movq %r14,0x88(%rbp)
	movq %r15,0x90(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x88,%rbp
	leaq (L_202166+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp timeToString_0
.p2align 0x4
.long 0x2813
L_202143:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x18(%rbp),%r14
	movq %r14,0x70(%rbp)
	movq 0x78(%rbp),%r14
	movq %r14,0x80(%rbp)
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_202144+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp timeToString_0
.p2align 0x4
.long 0x90A
L_202246:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x2D7F
L_202166:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_202167
L_202174:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_202175+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_202175
.p2align 0x4
.long 0x2D82
L_202175:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_202167:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xD4B0)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0xA3F8)(%rip),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_202168+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x2814
L_202144:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_202145
L_202160:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_202161+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_202161
.p2align 0x4
.long 0x2816
L_202161:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_202145:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xD4A0)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0xA3F8)(%rip),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_202146+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x2D7F
L_202168:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_202169
L_202172:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_202173+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_202173
.p2align 0x4
.long 0x2D82
L_202173:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_202169:
	movq $0x3117,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x88(%rbp)
	movb $0x1,0x90(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x88,%rbp
	leaq (L_202170+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp message_0
.p2align 0x4
.long 0x2814
L_202146:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_202147
L_202158:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_202159+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_202159
.p2align 0x4
.long 0x2816
L_202159:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_202147:
	movq $0x3117,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x70(%rbp)
	movb $0x1,0x78(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x70,%rbp
	leaq (L_202148+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp message_0
.p2align 0x4
.long 0x2D7F
L_202170:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x2814
L_202148:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_202149+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp name_0
.p2align 0x4
.long 0x2814
L_202149:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_202150
L_202156:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_202157+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_202157
.p2align 0x4
.long 0x2816
L_202157:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_202150:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xD4A8)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0xA3F8)(%rip),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_202151+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x2814
L_202151:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_202152
L_202154:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_202155+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_202155
.p2align 0x4
.long 0x2816
L_202155:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_202152:
	movq $0x3117,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x50(%rbp)
	movb $0x1,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_202153+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp message_0
.p2align 0x4
.long 0x2815
L_202153:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl x_1866
.hidden x_1866
x_1866:
L_202293:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_202521
L_202294:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_463074
L_202295:
	movq 0x0(%rbp),%r14
	movb 0x0(%r14),%r15b
	cmpb $0x7,%r15b
	je L_463073
L_202296:
	movq 0x8(%rbp),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x100(%rbp)
	movq 0x10(%r13),%r11
	movq %r11,0x108(%rbp)
	movl 0x0(%r13),%r11d
	movl %r11d,0x6C(%rbp)
	movq 0x18(%r13),%r11
	movq %r11,0x110(%rbp)
	movb %r15b,0x118(%rbp)
	movq 0x10(%rbp),%r14
	movl 0x0(%r14),%r13d
	movl %r13d,0x11C(%rbp)
	testb %r15b,%r15b
	jz L_463072
L_202297:
	cmpb $0x2,%r15b
	sete %al
	movzbl %al,%eax
	je L_463071
L_202298:
	movl %eax,0x124(%rbp)
	cmpb $0x1,%r15b
	sete %al
	movzbl %al,%eax
	movl %eax,0x120(%rbp)
L_202299:
	movq $0x7FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x128(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0xC99,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x130(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x4B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x22B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x138(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	cmpb $0x5,0x118(%rbp)
	je L_463070
L_202300:
	movq (globalObjptr+0xEDD8)(%rip),%r13
L_202301:
	movq $0x71,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movl $0x0,0x0(%r11)
	movl $0x0,0x4(%r11)
	movq $0xC9B,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r10,0x140(%rbp)
	movq %r15,0x8(%r10)
	movq %r11,0x10(%r10)
	movq %r14,0x18(%r10)
	movq %r13,0x30(%r10)
	movq %r11,0x38(%r10)
	addq $0x48,%r12
	movq 0x130(%rbp),%r15
	movq %r15,0x0(%r10)
	movq 0x138(%rbp),%r15
	movq %r15,0x20(%r10)
	movq 0x18(%rbp),%r15
	movq %r15,0x28(%r10)
	movq 0x20(%rbp),%r15
	movq %r15,0x150(%rbp)
	movq %r10,0x158(%rbp)
	addq $0x150,%rbp
	leaq (L_202302+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sourceInfoNode_0
.p2align 0x4
L_463070:
L_202517:
	movq (globalObjptr+0xA188)(%rip),%r13
	jmp L_202301
.p2align 0x4
L_463071:
L_202518:
	movl %eax,0x124(%rbp)
	movl $0x1,0x120(%rbp)
	jmp L_202299
.p2align 0x4
L_463072:
L_202519:
	movl $0x1,0x120(%rbp)
	movl $0x1,0x124(%rbp)
	jmp L_202299
.p2align 0x4
L_463073:
L_202520:
	movq $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_463074:
L_202521:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x108,%rbp
	leaq (L_202522+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_202522
.p2align 0x4
.long 0x2DBD
L_202522:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
	jmp L_202295
.p2align 0x4
.long 0x2D9D
L_202302:
	addq $0xFFFFFFFFFFFFFEB0,%rbp
	movq 0x150(%rbp),%r15
	movq %r15,0x148(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x158(%rbp)
	movq 0x140(%rbp),%r15
	movq %r15,0x160(%rbp)
	addq $0x158,%rbp
	leaq (L_202303+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sourceInfoNode_0
.p2align 0x4
.long 0x2D9E
L_202303:
	addq $0xFFFFFFFFFFFFFEA8,%rbp
	movq 0x158(%rbp),%r15
	movq %r15,0x150(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x160(%rbp)
	movq 0x140(%rbp),%r15
	movq %r15,0x168(%rbp)
	addq $0x160,%rbp
	leaq (L_202304+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sourceInfoNode_0
.p2align 0x4
.long 0x2D9F
L_202304:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq %r15,0x158(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_202305
L_202515:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x168,%rbp
	leaq (L_202516+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_202516
.p2align 0x4
.long 0x2DBC
L_202516:
	addq $0xFFFFFFFFFFFFFE98,%rbp
L_202305:
	movq 0x50(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq 0x18(%r15),%r10
	movq 0x8(%r10),%r9
	movq $0x3D4F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x38(%rbp),%r10
	movq %r10,0x0(%r15)
	movq 0x40(%rbp),%r8
	movq %r8,0x8(%r15)
	movq 0x48(%rbp),%rsp
	movq %rsp,0x10(%r15)
	movq $0xA4D,0x0(%r12)
	movq %r12,%rsp
	addq $0x8,%rsp
	movq %rsp,0x160(%rbp)
	movq %r15,0x8(%rsp)
	addq $0x30,%r12
	movq %r9,0x0(%rsp)
	movq %r14,0x10(%rsp)
	movq %r13,0x18(%rsp)
	movq %r11,0x20(%rsp)
	movq $0x3D51,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq %rsp,0x0(%r15)
	movq %r8,0x8(%r15)
	movq %r10,0x10(%r15)
	movq $0xA4D,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r10,0x168(%rbp)
	movq %r15,0x8(%r10)
	addq $0x30,%r12
	movq %r9,0x0(%r10)
	movq %r14,0x10(%r10)
	movq %r13,0x18(%r10)
	movq %r11,0x20(%r10)
	movq $0x3D4D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movb 0x118(%rbp),%r10b
	movzbl %r10b,%r8d
	movl %r8d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq %rsp,0x8(%r15)
	movq $0xA4D,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r8,0x170(%rbp)
	movq %r9,0x0(%r8)
	movq %r15,0x8(%r8)
	movq %r14,0x10(%r8)
	movq %r13,0x18(%r8)
	movq %r11,0x20(%r8)
	addq $0x30,%r12
	cmpb $0x4,%r10b
	jne L_202306
L_202497:
	movq 0x58(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_463076
L_202498:
	movq 0x8(%r14),%r15
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x40(%rbp)
L_202499:
	movq 0x40(%rbp),%r15
	movq %r15,0x180(%rbp)
	movq 0x160(%rbp),%r15
	movq %r15,0x188(%rbp)
	addq $0x180,%rbp
	leaq (L_202500+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1607
.p2align 0x4
L_463076:
L_202306:
	movq $0xC9F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x40,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x148(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x150(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x20(%r15)
	movq 0x158(%rbp),%r14
	movq %r14,0x28(%r15)
	movq 0x140(%rbp),%r14
	movq %r14,0x30(%r15)
	movq %r15,0x38(%rbp)
	movq 0x60(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movl 0x68(%rbp),%r15d
	movl %r15d,%r14d
	decl %r14d
	movl %r14d,0x48(%rbp)
	movslq %r15d,%rdx
	movq %rdx,0x50(%rbp)
	cmpq $0x7FFFFFFF,%rdx
	ja L_463079
L_202307:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xC8F,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x180,%rbp
	leaq (L_202308+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_202308
.p2align 0x4
.long 0x2DA0
L_202308:
	addq $0xFFFFFFFFFFFFFE80,%rbp
	movq %rax,0x58(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2221:
	cmpq 0x50(%rbp),%r15
	jnl L_463077
L_202495:
	movq 0x58(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_2221
.p2align 0x4
L_463077:
L_202309:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_202310
L_202493:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x180,%rbp
	leaq (L_202494+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_202494
.p2align 0x4
.long 0x2DB7
L_202494:
	addq $0xFFFFFFFFFFFFFE80,%rbp
L_202310:
	movq $0xC91,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x4B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x4B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movl 0x48(%rbp),%r11d
	movl %r11d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq $0x4B,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movl $0x0,0x0(%r11)
	movl $0x0,0x4(%r11)
	movq $0xC93,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r10,0x50(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r10)
	movq $0xC95,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r9,0x140(%rbp)
	movq %r14,0x0(%r9)
	movq %r11,0x8(%r9)
	movq %r13,0x18(%r9)
	movq %r15,0x20(%r9)
	addq $0x30,%r12
	movq %r10,0x10(%r9)
	movq 0x148(%rbp),%r15
	movl 0x0(%r15),%r14d
	movq $0x1B59,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r14d,0x0(%r15)
	addq $0x18,%r12
	movl $0x0,0x4(%r15)
	movq $0x1,0x8(%r15)
	movq %r15,0x180(%rbp)
	movq %r9,0x188(%rbp)
	addq $0x180,%rbp
	leaq (L_202311+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sourceSeqIndex_0
.p2align 0x4
L_463079:
L_202425:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x2DB8
L_202500:
	addq $0xFFFFFFFFFFFFFE80,%rbp
	movl 0x180(%rbp),%r15d
	movl %r15d,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_202501
L_202512:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x180,%rbp
	leaq (L_202513+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_202513
.p2align 0x4
.long 0x2DBB
L_202513:
	addq $0xFFFFFFFFFFFFFE80,%rbp
L_202501:
	movl 0x48(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_463083
L_202502:
	movq 0x38(%rbp),%r15
	cmpq $0x1,%r15
	je L_202306
L_202503:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x38(%rbp)
	movq %r14,0x40(%rbp)
	jmp L_202499
.p2align 0x4
L_463083:
L_202505:
	movq 0x40(%rbp),%r15
	movq %r15,0x180(%rbp)
	movq 0x140(%rbp),%r15
	movq %r15,0x188(%rbp)
	addq $0x180,%rbp
	leaq (L_202506+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sourceInfoNode_0
.p2align 0x4
.long 0x2DA1
L_202311:
	addq $0xFFFFFFFFFFFFFE80,%rbp
	movl 0x180(%rbp),%r15d
	movl %r15d,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_202312
L_202491:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x180,%rbp
	leaq (L_202492+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_202492
.p2align 0x4
.long 0x2DB6
L_202492:
	addq $0xFFFFFFFFFFFFFE80,%rbp
L_202312:
	movq 0x150(%rbp),%r15
	movl 0x0(%r15),%r14d
	movq $0x1B59,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r14d,0x0(%r15)
	addq $0x18,%r12
	movl $0x0,0x4(%r15)
	movq $0x1,0x8(%r15)
	movq %r15,0x180(%rbp)
	movq 0x140(%rbp),%r15
	movq %r15,0x188(%rbp)
	addq $0x180,%rbp
	leaq (L_202313+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sourceSeqIndex_0
.p2align 0x4
.long 0x2DB9
L_202506:
	addq $0xFFFFFFFFFFFFFE80,%rbp
	movq 0x180(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_202507
L_202510:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x180,%rbp
	leaq (L_202511+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_202511
.p2align 0x4
.long 0x2DBA
L_202511:
	addq $0xFFFFFFFFFFFFFE80,%rbp
L_202507:
	movq 0x38(%rbp),%r15
	cmpq $0x1,%r15
	je L_202306
L_202508:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x38(%rbp)
	movq %r14,0x40(%rbp)
	jmp L_202499
.p2align 0x4
.long 0x2DA2
L_202313:
	addq $0xFFFFFFFFFFFFFE80,%rbp
	movl 0x180(%rbp),%r15d
	movl %r15d,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_202314
L_202489:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x180,%rbp
	leaq (L_202490+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_202490
.p2align 0x4
.long 0x2DB5
L_202490:
	addq $0xFFFFFFFFFFFFFE80,%rbp
L_202314:
	movq $0xC97,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x48(%rbp)
	addq $0x18,%r12
	movq 0x128(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x140(%rbp),%r13
	movq %r13,0x8(%r14)
	movq $0x71,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x58(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x47B,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,0x148(%rbp)
	addq $0x18,%r12
	movq 0x70(%rbp),%r10
	movq %r10,0x0(%r11)
	movq %r14,0x8(%r11)
	movq $0x56D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x150(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0xCA5,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,0x158(%rbp)
	addq $0x28,%r12
	movl 0x124(%rbp),%r10d
	movl %r10d,0x0(%r11)
	movzbl 0x118(%rbp),%r10d
	movl %r10d,0x4(%r11)
	movq 0x80(%rbp),%r10
	movq %r10,0x8(%r11)
	movq 0x78(%rbp),%r10
	movq %r10,0x10(%r11)
	movq %r14,0x18(%r11)
	movq $0xCA7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x178(%rbp)
	addq $0x18,%r12
	movq %r11,0x0(%r14)
	movq %r13,0x8(%r14)
	movq $0x71,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x180(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x110(%rbp),%r14
	cmpq $0x1,%r14
	je L_463088
L_202315:
	movq 0x8(%r14),%r13
	movq %r13,0x78(%rbp)
	movq 0x0(%r14),%r15
	movq $0x1,0x188(%rbp)
L_202316:
	movq %r15,0x198(%rbp)
	movq 0x158(%rbp),%r15
	movq %r15,0x1A0(%rbp)
	movq 0xF8(%rbp),%r15
	movq %r15,0x1A8(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x1B0(%rbp)
	movq 0xF0(%rbp),%r15
	movq %r15,0x1B8(%rbp)
	movb 0x118(%rbp),%r15b
	movb %r15b,0x1C0(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0x1C8(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0x1D0(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0x1D8(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x1E0(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x1E8(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x1F0(%rbp)
	movq 0x128(%rbp),%r15
	movq %r15,0x1F8(%rbp)
	movq 0x140(%rbp),%r15
	movq %r15,0x200(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0x208(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0x210(%rbp)
	movl 0x11C(%rbp),%r15d
	movl %r15d,0x218(%rbp)
	movq 0x178(%rbp),%r15
	movq %r15,0x220(%rbp)
	movl 0x120(%rbp),%r15d
	movl %r15d,0x228(%rbp)
	movq 0x148(%rbp),%r15
	movq %r15,0x230(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x238(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0x240(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0x248(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x250(%rbp)
	movq 0x168(%rbp),%r15
	movq %r15,0x258(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0x260(%rbp)
	movq 0x160(%rbp),%r15
	movq %r15,0x268(%rbp)
	movq 0x170(%rbp),%r15
	movq %r15,0x270(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x278(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x280(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x288(%rbp)
	movq 0xA8(%rbp),%r15
	movq %r15,0x290(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0x298(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0x2A0(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0x2A8(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x2B0(%rbp)
	movq 0x180(%rbp),%r15
	movq %r15,0x2B8(%rbp)
	addq $0x198,%rbp
	leaq (L_202317+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp doFunction_0
.p2align 0x4
L_463088:
L_202488:
	movq $0x1,0x78(%rbp)
L_202321:
	movq 0x108(%rbp),%r15
	movq %r15,0x190(%rbp)
	movq 0x158(%rbp),%r15
	movq %r15,0x198(%rbp)
	movq 0xF8(%rbp),%r15
	movq %r15,0x1A0(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x1A8(%rbp)
	movq 0xF0(%rbp),%r15
	movq %r15,0x1B0(%rbp)
	movb 0x118(%rbp),%r15b
	movb %r15b,0x1B8(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0x1C0(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0x1C8(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0x1D0(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x1D8(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x1E0(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x1E8(%rbp)
	movq 0x128(%rbp),%r15
	movq %r15,0x1F0(%rbp)
	movq 0x140(%rbp),%r15
	movq %r15,0x1F8(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0x200(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0x208(%rbp)
	movl 0x11C(%rbp),%r15d
	movl %r15d,0x210(%rbp)
	movq 0x178(%rbp),%r15
	movq %r15,0x218(%rbp)
	movl 0x120(%rbp),%r15d
	movl %r15d,0x220(%rbp)
	movq 0x148(%rbp),%r15
	movq %r15,0x228(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x230(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0x238(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0x240(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x248(%rbp)
	movq 0x168(%rbp),%r15
	movq %r15,0x250(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0x258(%rbp)
	movq 0x160(%rbp),%r15
	movq %r15,0x260(%rbp)
	movq 0x170(%rbp),%r15
	movq %r15,0x268(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x270(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x278(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x280(%rbp)
	movq 0xA8(%rbp),%r15
	movq %r15,0x288(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0x290(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0x298(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0x2A0(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x2A8(%rbp)
	movq 0x180(%rbp),%r15
	movq %r15,0x2B0(%rbp)
	addq $0x190,%rbp
	leaq (L_202322+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp doFunction_0
.p2align 0x4
.long 0x2DA3
L_202317:
	addq $0xFFFFFFFFFFFFFE68,%rbp
	movq 0x198(%rbp),%r15
	movq %r15,0x190(%rbp)
	movq 0x1A0(%rbp),%r15
	movq %r15,0x198(%rbp)
	movq 0x1A8(%rbp),%r15
	movq %r15,0x1A0(%rbp)
	movq 0x1B0(%rbp),%r15
	movq %r15,0x1A8(%rbp)
	movq 0x1B8(%rbp),%r15
	movq %r15,0x1B0(%rbp)
	movq 0x1C0(%rbp),%r15
	movq %r15,0x1B8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_202318
L_202486:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1C8,%rbp
	leaq (L_202487+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_202487
.p2align 0x4
.long 0x2DB4
L_202487:
	addq $0xFFFFFFFFFFFFFE38,%rbp
L_202318:
	movq $0x77B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x38,%r12
	movq 0x190(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x198(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x1A0(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x1A8(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x1B0(%rbp),%r14
	movq %r14,0x20(%r15)
	movq 0x1B8(%rbp),%r14
	movq %r14,0x28(%r15)
	movq $0x23A5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x188(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x78(%rbp),%r13
	cmpq $0x1,%r13
	je L_463090
L_202319:
	movq %r14,0x188(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x78(%rbp)
	jmp L_202316
.p2align 0x4
L_463090:
L_202320:
	movq %r14,0x78(%rbp)
	jmp L_202321
.p2align 0x4
.long 0x2DA4
L_202322:
	addq $0xFFFFFFFFFFFFFE70,%rbp
	movq 0x190(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x198(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x1A0(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0x1A8(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0x1B0(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq 0x1B8(%rbp),%r15
	movq %r15,0x98(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_202323
L_202484:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x190,%rbp
	leaq (L_202485+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_202485
.p2align 0x4
.long 0x2DB3
L_202485:
	addq $0xFFFFFFFFFFFFFE70,%rbp
L_202323:
	movq $0x77B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x38,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x80(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x88(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x90(%rbp),%r14
	movq %r14,0x20(%r15)
	movq 0x98(%rbp),%r14
	movq %r14,0x28(%r15)
	movq $0x77F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0xA0(%rbp)
	movq %r15,0x10(%r14)
	addq $0x28,%r12
	movl 0x6C(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x100(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x78(%rbp),%r13
	movq %r13,0x18(%r14)
	movq 0x110(%rbp),%r14
	cmpq $0x1,%r14
	je L_463104
L_202324:
	movq 0x8(%r14),%r13
	movq %r13,0x58(%rbp)
	movq 0x0(%r14),%r15
L_202325:
	movq $0x18D3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x60(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq 0x18(%r15),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x68(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_463103
L_202327:
	movq %r15,0x0(%r13)
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_463102
L_202328:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_202330:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_202331
L_202475:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xD9E,%r13
	jne L_202331
L_202476:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	cmpq %r11,0x180(%rbp)
	je L_463097
L_202331:
	incl %ecx
	movl %ecx,0x78(%rbp)
	jo L_463096
L_202333:
	cmpq $0x1,%r15
	je L_463092
L_202334:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_202330
.p2align 0x4
L_463092:
L_202335:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_202336
L_202473:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x190,%rbp
	leaq (L_202474+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_202474
.p2align 0x4
.long 0x2DB2
L_202474:
	addq $0xFFFFFFFFFFFFFE70,%rbp
L_202336:
	movl 0x78(%rbp),%ecx
L_202337:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_463094
L_202339:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_202341
L_202472:
	movl %ecx,0x0(%r15)
L_202341:
	movq $0xC99,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0xC99,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x53,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movl $0x0,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq $0xCAD,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq $0x1,0x0(%r11)
	movq $0x114B,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r11,0x0(%r10)
	movq %r13,0x8(%r10)
	movq %r14,0x10(%r10)
	movq %r15,0x18(%r10)
	addq $0x28,%r12
	movq $0x1B3D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r10,0x8(%r15)
	addq $0x18,%r12
	movq 0x180(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x68(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	movq %r10,%r15
L_202342:
	movq %r15,0x190(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x1A0(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0x198(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x1A8(%rbp)
	addq $0x190,%rbp
	leaq (L_202343+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp call_0
.p2align 0x4
L_463094:
L_202338:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_463096:
L_202332:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_463097:
L_202478:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_202338
L_202479:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_463098
L_202481:
	movl %ecx,0x0(%r14)
	movq %r13,%r15
	jmp L_202342
.p2align 0x4
L_463098:
L_202480:
	movq %r13,%r15
	jmp L_202342
.p2align 0x4
L_463102:
L_202482:
	xorl %ecx,%ecx
	jmp L_202337
.p2align 0x4
L_463103:
L_202326:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_463104:
L_202353:
	movq 0x138(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x58(%rbp)
	cmpq $0x1,%r13
	je L_463151
L_202354:
	movq 0x8(%r13),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_202355:
	incl %ecx
	jo L_202332
L_202356:
	cmpq $0x1,%r15
	je L_463105
L_202357:
	movq 0x8(%r15),%r15
	jmp L_202355
.p2align 0x4
L_463105:
L_202358:
L_202359:
	movslq %ecx,%rdx
	movq %rdx,0x60(%rbp)
	testq %rdx,%rdx
	jz L_463149
L_202360:
	cmpq $0x7FFFFFFF,%rdx
	ja L_202425
L_202361:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xA11,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_202362+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_202362
.p2align 0x4
.long 0x2DA6
L_202362:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq %rax,0x68(%rbp)
L_202363:
	movq 0x58(%rbp),%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2222:
	cmpq 0x60(%rbp),%r15
	jnl L_463107
L_202461:
	cmpq $0x1,%r14
	je L_463106
L_202462:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq 0x68(%rbp),%r11
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r13,0x0(%r11,%r15,8)
	incq %r15
	jmp loop_2222
.p2align 0x4
L_463106:
L_202430:
	movq (globalObjptr+0x4B0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_463107:
L_202364:
	movq 0x68(%rbp),%r15
	movq $0x1BF,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x58(%rbp)
	cmpq %r14,%rdx
	jne L_202366
L_202367:
	decl %r13d
	movl %r13d,0x60(%rbp)
	jo L_202332
L_202368:
	testq %rdx,%rdx
	jz L_463145
L_202369:
	cmpq $0x7FFFFFFF,%rdx
	ja L_202425
L_202370:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xA11,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_202371+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_202371
.p2align 0x4
.long 0x2DA7
L_202371:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq %rax,0x78(%rbp)
L_202372:
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2223:
	cmpq 0x58(%rbp),%r15
	jnl L_463109
L_202457:
	movl %r15d,%r14d
	movl 0x60(%rbp),%r13d
	subl %r14d,%r13d
	jo L_202332
L_202458:
	movslq %r13d,%r14
	movq 0x68(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r11
	movq 0x78(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r11,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_2223
.p2align 0x4
L_463109:
L_202373:
	movq 0x78(%rbp),%r14
	movq $0x1BF,0xFFFFFFFFFFFFFFF8(%r14)
	movq 0x130(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x58(%rbp)
	cmpq $0x1,%r13
	je L_463143
L_202374:
	movq 0x8(%r13),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_202375:
	incl %ecx
	jo L_202332
L_202376:
	cmpq $0x1,%r15
	je L_463110
L_202377:
	movq 0x8(%r15),%r15
	jmp L_202375
.p2align 0x4
L_463110:
L_202378:
L_202379:
	movslq %ecx,%rdx
	movq %rdx,0x60(%rbp)
	testq %rdx,%rdx
	jz L_463141
L_202380:
	cmpq $0x7FFFFFFF,%rdx
	ja L_202425
L_202381:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x169B,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_202382+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_202382
.p2align 0x4
.long 0x2DA8
L_202382:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq %rax,0x68(%rbp)
L_202383:
	movq 0x58(%rbp),%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2224:
	cmpq 0x60(%rbp),%r15
	jnl L_463112
L_202451:
	cmpq $0x1,%r14
	je L_202430
L_202452:
	movq %r15,%r13
	movq %r15,%r11
	movq %r15,%r10
	movq %r15,%r9
	movq 0x0(%r14),%r8
	movq 0x8(%r14),%r14
	movq 0x8(%r8),%rsp
	movl 0x0(%r8),%esi
	movl 0x4(%r8),%edi
	movq 0x10(%r8),%rdx
	movq 0x68(%rbp),%r8
	movq %r8,%rcx
	shrq $0x8,%rcx
	movq (gcState+0x3C8)(%rip),%rbx
	movb $0x1,0x0(%rbx,%rcx,1)
	imulq $0x18,%r13
	movq %rsp,0x8(%r8,%r13,1)
	imulq $0x18,%r11
	movl %esi,0x0(%r8,%r11,1)
	imulq $0x18,%r10
	movl %edi,0x4(%r8,%r10,1)
	movq %r8,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%rbx,%r13,1)
	imulq $0x18,%r9
	movq %rdx,0x10(%r8,%r9,1)
	incq %r15
	jmp loop_2224
.p2align 0x4
L_463112:
L_202384:
	movq 0x68(%rbp),%r15
	movq $0x18D1,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x58(%rbp)
	cmpq %rdx,%r14
	jne L_202366
L_202386:
	decl %r13d
	movl %r13d,0x60(%rbp)
	jo L_202332
L_202387:
	testq %rdx,%rdx
	jz L_463137
L_202388:
	cmpq $0x7FFFFFFF,%rdx
	ja L_202425
L_202389:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x169B,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_202390+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_202390
.p2align 0x4
.long 0x2DA9
L_202390:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq %rax,0x80(%rbp)
L_202391:
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2225:
	cmpq 0x58(%rbp),%r15
	jnl L_463114
L_202447:
	movl %r15d,%r14d
	movl 0x60(%rbp),%r13d
	subl %r14d,%r13d
	jo L_202332
L_202448:
	movq %r15,%r14
	movq %r15,%r11
	movq %r15,%r10
	movq %r15,%r9
	movslq %r13d,%r8
	movq %r8,%r13
	movq %r8,%rsp
	movq %r8,%rsi
	imulq $0x18,%r13
	movq 0x68(%rbp),%rdi
	movq 0x8(%rdi,%r13,1),%rdx
	imulq $0x18,%rsp
	movq %rsp,%rax
	movl 0x0(%rdi,%rax,1),%r13d
	imulq $0x18,%rsi
	movl 0x4(%rdi,%rsi,1),%esp
	imulq $0x18,%r8
	movq 0x10(%rdi,%r8,1),%rsi
	movq 0x80(%rbp),%r8
	movq %r8,%rdi
	shrq $0x8,%rdi
	movq (gcState+0x3C8)(%rip),%rcx
	movb $0x1,0x0(%rcx,%rdi,1)
	imulq $0x18,%r14
	movq %rdx,0x8(%r8,%r14,1)
	imulq $0x18,%r11
	movl %r13d,0x0(%r8,%r11,1)
	imulq $0x18,%r10
	movl %esp,0x4(%r8,%r10,1)
	movq %r8,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%rcx,%r14,1)
	imulq $0x18,%r9
	movq %rsi,0x10(%r8,%r9,1)
	incq %r15
	jmp loop_2225
.p2align 0x4
L_463114:
L_202392:
	movq 0x80(%rbp),%r15
	movq $0x18D1,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x58(%rbp)
	cmpq %rdx,%r14
	jne L_202366
L_202394:
	testq %rdx,%rdx
	jz L_463134
L_202395:
	cmpq $0x7FFFFFFF,%rdx
	ja L_202425
L_202396:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x169D,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_202397+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_202397
.p2align 0x4
.long 0x2DAA
L_202397:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq %rax,0x60(%rbp)
L_202398:
	movq $0x0,0x68(%rbp)
loop_2226:
	movq 0x58(%rbp),%r14
	cmpq %r14,0x68(%rbp)
	jl L_463129
L_202399:
	movq 0x60(%rbp),%r14
	movq $0x7FB,0xFFFFFFFFFFFFFFF8(%r14)
	movq 0x50(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x58(%rbp)
	cmpq $0x1,%r13
	je L_463128
L_202400:
	movq 0x8(%r13),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_202401:
	incl %ecx
	jo L_202332
L_202402:
	cmpq $0x1,%r15
	je L_463115
L_202403:
	movq 0x8(%r15),%r15
	jmp L_202401
.p2align 0x4
L_463115:
L_202404:
L_202405:
	movslq %ecx,%rdx
	movq %rdx,0x68(%rbp)
	testq %rdx,%rdx
	jz L_463126
L_202406:
	cmpq $0x7FFFFFFF,%rdx
	ja L_202425
L_202407:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x169F,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_202408+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_202408
.p2align 0x4
.long 0x2DAB
L_202408:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq %rax,0x80(%rbp)
L_202409:
	movq 0x58(%rbp),%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2227:
	cmpq 0x68(%rbp),%r15
	jnl L_463117
L_202427:
	cmpq $0x1,%r14
	je L_202430
L_202428:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq 0x80(%rbp),%r11
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r13,0x0(%r11,%r15,8)
	incq %r15
	jmp loop_2227
.p2align 0x4
L_463117:
L_202410:
	movq 0x80(%rbp),%r15
	movq $0x7FD,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x68(%rbp)
	cmpq %r14,%rdx
	jne L_463124
L_202412:
	decl %r13d
	movl %r13d,0x88(%rbp)
	jo L_202332
L_202413:
	testq %rdx,%rdx
	jz L_463122
L_202414:
	cmpq $0x7FFFFFFF,%rdx
	ja L_202425
L_202415:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x169F,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_202416+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_202416
.p2align 0x4
.long 0x2DAC
L_202416:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq %rax,0x90(%rbp)
L_202417:
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2228:
	cmpq 0x68(%rbp),%r15
	jnl L_463119
L_202422:
	movl %r15d,%r14d
	movl 0x88(%rbp),%r13d
	subl %r14d,%r13d
	jo L_202332
L_202423:
	movslq %r13d,%r14
	movq 0x80(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r11
	movq 0x90(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r11,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_2228
.p2align 0x4
L_463119:
L_202418:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_202419
L_202420:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_202421+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_202421
.p2align 0x4
.long 0x2DAD
L_202421:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
L_202419:
	movq 0x90(%rbp),%r15
	movq $0x7FD,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x415B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x38,%r12
	movq 0x70(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x128(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x150(%rbp),%r13
	movq %r13,0x10(%r14)
	movq 0x78(%rbp),%r13
	movq %r13,0x18(%r14)
	movq %r15,0x20(%r14)
	movq 0x60(%rbp),%r15
	movq %r15,0x28(%r14)
	movq %r14,0x0(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_463122:
L_202426:
	movq (globalObjptr+0x74E0)(%rip),%r15
	movq %r15,0x90(%rbp)
	jmp L_202417
.p2align 0x4
L_463124:
L_202366:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_463126:
L_202432:
	movq (globalObjptr+0x74D8)(%rip),%r15
	movq %r15,0x80(%rbp)
	jmp L_202409
.p2align 0x4
L_463128:
L_202433:
	xorl %ecx,%ecx
	jmp L_202405
.p2align 0x4
L_463129:
L_202434:
	movq 0x68(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq %r15,%r14
	imulq $0x18,%r14
	imulq $0x18,%r15
	movq 0x80(%rbp),%r13
	movl 0x4(%r13,%r15,1),%r11d
	movl %r11d,0x88(%rbp)
	movq 0x8(%r13,%r14,1),%r15
	movq 0x0(%r15),%r11
	cmpq $0x1,%r11
	je L_463132
L_202435:
	movq 0x8(%r11),%r15
	movq %r15,0x90(%rbp)
	movq 0x0(%r11),%r15
	movq %r15,0x98(%rbp)
	movq $0x1,0xA8(%rbp)
.p2align 0x4,,0x7
L_202436:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_463131
.p2align 0x4,,0x7
L_202437:
	movq 0x98(%rbp),%r15
	movl 0x0(%r15),%r14d
	movq $0x1B59,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r14d,0x0(%r15)
	addq $0x18,%r12
	movl $0x0,0x4(%r15)
	movq 0xA8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x90(%rbp),%r14
	cmpq $0x1,%r14
	je L_463130
L_202438:
	movq %r15,0xA8(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x90(%rbp)
	movq %r15,0x98(%rbp)
	jmp L_202436
.p2align 0x4
L_463130:
L_202440:
	movq %r15,0x160(%rbp)
	movq 0x140(%rbp),%r15
	movq %r15,0x168(%rbp)
	addq $0x160,%rbp
	leaq (L_202441+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sourceSeqIndex_0
.p2align 0x4
L_463131:
L_202442:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_202443+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_202443
.p2align 0x4
.long 0x2DAF
L_202443:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	jmp L_202437
.p2align 0x4
L_463132:
L_202444:
	movq $0x1,%r15
	jmp L_202440
.p2align 0x4
L_463134:
L_202446:
	movq (globalObjptr+0x74D0)(%rip),%r15
	movq %r15,0x60(%rbp)
	jmp L_202398
.p2align 0x4
L_463137:
L_202450:
	movq (globalObjptr+0x74C8)(%rip),%r15
	movq %r15,0x80(%rbp)
	jmp L_202391
.p2align 0x4
L_463141:
L_202455:
	movq (globalObjptr+0x74C0)(%rip),%r15
	movq %r15,0x68(%rbp)
	jmp L_202383
.p2align 0x4
L_463143:
L_202456:
	xorl %ecx,%ecx
	jmp L_202379
.p2align 0x4
L_463145:
L_202460:
	movq (globalObjptr+0x74B8)(%rip),%r15
	movq %r15,0x78(%rbp)
	jmp L_202372
.p2align 0x4
L_463149:
L_202465:
	movq (globalObjptr+0xD60)(%rip),%r15
	movq %r15,0x68(%rbp)
	jmp L_202363
.p2align 0x4
L_463151:
L_202466:
	xorl %ecx,%ecx
	jmp L_202359
.p2align 0x4
.long 0x2DA5
L_202343:
	addq $0xFFFFFFFFFFFFFE70,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_202344
L_202470:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x190,%rbp
	leaq (L_202471+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_202471
.p2align 0x4
.long 0x2DB1
L_202471:
	addq $0xFFFFFFFFFFFFFE70,%rbp
L_202344:
	movq 0x60(%rbp),%r13
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_202350
L_202345:
	movq 0x0(%r11),%r14
	movq 0x8(%r11),%r11
	movq %r11,%r15
.p2align 0x4,,0x7
L_202346:
	movl $0x0,0x0(%r14)
	cmpq $0x1,%r15
	je L_463153
L_202347:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_202346
.p2align 0x4
L_463153:
L_202348:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_202350
L_202467:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x190,%rbp
	leaq (L_202468+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_202468
.p2align 0x4
.long 0x2DB0
L_202468:
	addq $0xFFFFFFFFFFFFFE70,%rbp
L_202350:
	movq 0x58(%rbp),%r14
	cmpq $0x1,%r14
	je L_202353
L_202351:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x58(%rbp)
	jmp L_202325
.p2align 0x4
.long 0x2DAE
L_202441:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movl 0x160(%rbp),%r15d
	movl %r15d,0x8C(%rbp)
	movq 0x60(%rbp),%r14
	movq 0x68(%rbp),%r13
	movl %r15d,0x0(%r14,%r13,8)
	movl 0x88(%rbp),%r15d
	movl %r15d,0x4(%r14,%r13,8)
	incq %r13
	movq %r13,0x68(%rbp)
	jmp loop_2226
.text
.p2align 0x4
.globl doFunction_0
.hidden doFunction_0
doFunction_0:
L_202523:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x130(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_202658
L_202524:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_463171
L_202525:
	movq 0x0(%rbp),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x138(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x140(%rbp)
	movq 0x10(%r13),%r11
	movq %r11,0x148(%rbp)
	movq 0x18(%r13),%r11
	movq %r11,0x150(%rbp)
	movq 0x20(%r13),%r10
	movq %r10,0x158(%rbp)
	movq 0x28(%r13),%r10
	movq %r10,0x160(%rbp)
	movq 0x10(%r11),%r13
	movq %r13,0x168(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_463170
L_202527:
	movq %r15,0x0(%r11)
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_463169
L_202528:
	movq 0x0(%r11),%r14
	movq 0x8(%r11),%r11
	movl $0x0,0x2C(%rbp)
	movq %r11,%r15
.p2align 0x4,,0x7
L_202530:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_202531
L_202647:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xD9E,%r13
	jne L_202531
L_202648:
	movq 0x8(%r14),%r13
	movq %r13,0x170(%rbp)
	movq 0x0(%r14),%r13
	cmpq %r13,0x120(%rbp)
	je L_463163
L_202531:
	movl 0x2C(%rbp),%r13d
	incl %r13d
	movl %r13d,0x84(%rbp)
	jo L_463162
L_202533:
	cmpq $0x1,%r15
	je L_463158
L_202534:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movl %r13d,0x2C(%rbp)
	jmp L_202530
.p2align 0x4
L_463158:
L_202535:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_202536
L_202645:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x178,%rbp
	leaq (L_202646+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_202646
.p2align 0x4
.long 0x2DCC
L_202646:
	addq $0xFFFFFFFFFFFFFE88,%rbp
L_202536:
	movl 0x84(%rbp),%ecx
L_202537:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_463160
L_202539:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_202541
L_202644:
	movl %ecx,0x0(%r15)
L_202541:
	movq $0xC99,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0xC99,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x53,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movl $0x0,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq $0xCAD,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq $0x1,0x0(%r11)
	movq $0x114B,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r11,0x0(%r10)
	movq %r13,0x8(%r10)
	movq %r14,0x10(%r10)
	movq %r15,0x18(%r10)
	addq $0x28,%r12
	movq $0x1B3D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r10,0x8(%r15)
	addq $0x18,%r12
	movq 0x120(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x168(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	movq %r10,%r15
L_202542:
	movq 0x0(%r15),%r14
	movq %r14,0x168(%rbp)
	movq 0x10(%r15),%r14
	movq $0xCA1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x28(%r15)
	addq $0x80,%r12
	movq 0xB0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xB8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xC0(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0xC8(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0xD0(%rbp),%r14
	movq %r14,0x20(%r15)
	movq 0xD8(%rbp),%r14
	movq %r14,0x30(%r15)
	movq 0xE0(%rbp),%r14
	movq %r14,0x38(%r15)
	movq 0xE8(%rbp),%r14
	movq %r14,0x40(%r15)
	movq 0xF0(%rbp),%r14
	movq %r14,0x48(%r15)
	movq 0xF8(%rbp),%r14
	movq %r14,0x50(%r15)
	movq 0x100(%rbp),%r13
	movq %r13,0x58(%r15)
	movq 0x108(%rbp),%r11
	movq %r11,0x60(%r15)
	movq 0x110(%rbp),%r10
	movq %r10,0x68(%r15)
	movq 0x118(%rbp),%r9
	movq %r9,0x70(%r15)
	movq $0xCA3,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r8,0x170(%rbp)
	movq %r15,0x8(%r8)
	addq $0x40,%r12
	movq 0xA8(%rbp),%r15
	movq %r15,0x0(%r8)
	movq %r14,0x10(%r8)
	movq %r13,0x18(%r8)
	movq %r11,0x20(%r8)
	movq %r10,0x28(%r8)
	movq %r9,0x30(%r8)
	movq $0x35F5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xA0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r15,0x180(%rbp)
	movq 0x158(%rbp),%r15
	movq %r15,0x188(%rbp)
	addq $0x180,%rbp
	leaq (L_202543+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_0
.p2align 0x4
L_463160:
L_202538:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_463162:
L_202532:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_463163:
L_202650:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_202651
L_202655:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x180,%rbp
	leaq (L_202656+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_202656
.p2align 0x4
.long 0x2DCD
L_202656:
	addq $0xFFFFFFFFFFFFFE80,%rbp
L_202651:
	movl 0x2C(%rbp),%r14d
	movslq %r14d,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_202538
L_202652:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %r14d,0x0(%r13)
	jl L_463164
L_202653:
	movq 0x170(%rbp),%r15
	jmp L_202542
.p2align 0x4
L_463164:
L_202654:
	movq (globalObjptr+0x1078)(%rip),%r14
	movl 0x2C(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movq 0x170(%rbp),%r15
	jmp L_202542
.p2align 0x4
L_463169:
L_202657:
	xorl %ecx,%ecx
	jmp L_202537
.p2align 0x4
L_463170:
L_202526:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_463171:
L_202658:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x140,%rbp
	leaq (L_202659+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_202659
.p2align 0x4
.long 0x2DCE
L_202659:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	jmp L_202525
.p2align 0x4
.long 0x2DBE
L_202543:
	addq $0xFFFFFFFFFFFFFE80,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_202544
L_202642:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x180,%rbp
	leaq (L_202643+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_202643
.p2align 0x4
.long 0x2DCB
L_202643:
	addq $0xFFFFFFFFFFFFFE80,%rbp
L_202544:
	movq $0x71,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r10,0xA0(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r10)
	movl $0x0,0x4(%r10)
	movq 0x98(%rbp),%r10
	movq 0x8(%r10),%r11
	movq 0x0(%r10),%r13
	movq 0x138(%rbp),%r10
	movq 0x10(%r10),%r15
	movq (globalObjptr+0x1068)(%rip),%r10
	movq 0x0(%r10),%r14
	incq %r14
	jo L_463184
L_202546:
	movq %r14,0x0(%r10)
	movq 0x0(%r15),%r10
	cmpq $0x1,%r10
	je L_463183
L_202547:
	movq 0x8(%r10),%r14
	movq 0x0(%r10),%r10
	movl $0x0,0x2C(%rbp)
	movq %r10,%r15
.p2align 0x4,,0x7
L_202549:
	movq %r15,%r10
	andq $0x3,%r10
	jnz L_463182
L_202619:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r10
	shrq $0x1,%r10
	cmpq $0xD9D,%r10
	jne L_463181
L_202620:
	movq 0x8(%r15),%r10
	movq %r10,0xA8(%rbp)
	cmpq %r11,0x0(%r15)
	movq %r11,(localObjptr+0x0)(%rip)
	je L_463176
L_202550:
	movl 0x2C(%rbp),%r10d
	incl %r10d
	jo L_463175
L_202552:
	cmpq $0x1,%r14
	je L_463173
L_202553:
	movl %r10d,0x2C(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq (localObjptr+0x0)(%rip),%r11
	jmp L_202549
.p2align 0x4
L_463173:
	movl %r10d,%ecx
L_202555:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_463174
L_202557:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl x_682
L_202618:
	movl %ecx,0x0(%r15)
x_682:
	movq %r13,0x188(%rbp)
	leaq L_202581(%rip),%r15
	movq %r15,0x128(%rbp)
	movq %rbp,%r15
	addq $0x130,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x138(%rbp),%r15
	movq %r15,0x180(%rbp)
	addq $0x180,%rbp
	leaq (L_202559+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_463174:
L_202556:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_463175:
L_202551:
	movq 0x130(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_463176:
L_202622:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_202623
L_202639:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x180,%rbp
	leaq (L_202640+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_202640
.p2align 0x4
.long 0x2DC7
L_202640:
	addq $0xFFFFFFFFFFFFFE80,%rbp
L_202623:
	movl 0x2C(%rbp),%r14d
	movslq %r14d,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_202556
L_202624:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %r14d,0x0(%r13)
	jl L_463178
L_202625:
	movq 0xA8(%rbp),%r15
L_202626:
	movq 0x8(%r15),%r14
	movq 0x10(%r15),%r13
	movl 0x0(%r14),%r15d
	testl %r15d,%r15d
	jnz L_463177
L_202627:
	movl $0x1,0x0(%r14)
	movq 0x0(%r13),%r15
	movq %r15,0xA8(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x188(%rbp)
	movq $0x329D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xA0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x138(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x180(%rbp)
	leaq L_202581(%rip),%r15
	movq %r15,0x128(%rbp)
	movq %rbp,%r15
	addq $0x130,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x180,%rbp
	leaq (L_202628+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_4
.p2align 0x4
L_463177:
L_202632:
	movq $0x1,%r15
L_202589:
	movq $0x797,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0xA0(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0xCA9,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x40,%r12
	movl 0x80(%rbp),%r11d
	movl %r11d,0x0(%r13)
	movl 0x90(%rbp),%r10d
	movl %r10d,0x4(%r13)
	movq %r14,0x8(%r13)
	movq 0x60(%rbp),%r9
	movq %r9,0x10(%r13)
	movq 0x68(%rbp),%r8
	movq %r8,0x18(%r13)
	movq 0x70(%rbp),%rsp
	movq %rsp,0x20(%r13)
	movq 0x78(%rbp),%rsi
	movq %rsi,0x28(%r13)
	movq 0x88(%rbp),%rdi
	movq %rdi,0x30(%r13)
	movq 0x58(%rbp),%rdi
	movq 0x8(%rdi),%rdx
	movq $0xCAB,0x0(%r12)
	movq %r12,%rdi
	addq $0x8,%rdi
	movq %rdx,0x0(%rdi)
	movq %r13,0x8(%rdi)
	addq $0x30,%r12
	movq 0xF8(%rbp),%r13
	movq %r13,0x10(%rdi)
	movq 0x100(%rbp),%r13
	movq %r13,0x18(%rdi)
	movq 0x108(%rbp),%r13
	movq %r13,0x20(%rdi)
	movq $0xCAF,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %rdi,0x48(%r13)
	movq %r15,0xB0(%r13)
	addq $0xC8,%r12
	movl %r10d,0x0(%r13)
	movl %r11d,0x4(%r13)
	movzbl 0x28(%rbp),%r15d
	movl %r15d,0x8(%r13)
	movl $0x0,0xC(%r13)
	movq %r14,0x10(%r13)
	movq 0x8(%rbp),%r15
	movq %r15,0x18(%r13)
	movq %r9,0x20(%r13)
	movq %r8,0x28(%r13)
	movq 0x168(%rbp),%r15
	movq %r15,0x30(%r13)
	movq 0x120(%rbp),%r15
	movq %r15,0x38(%r13)
	movq 0x10(%rbp),%r15
	movq %r15,0x40(%r13)
	movq 0x18(%rbp),%r15
	movq %r15,0x50(%r13)
	movq 0x20(%rbp),%r15
	movq %r15,0x58(%r13)
	movq 0x30(%rbp),%r15
	movq %r15,0x60(%r13)
	movq 0x38(%rbp),%r15
	movq %r15,0x68(%r13)
	movq %rsi,0x70(%r13)
	movq %rsp,0x78(%r13)
	movq 0x40(%rbp),%r15
	movq %r15,0x80(%r13)
	movq 0x48(%rbp),%r15
	movq %r15,0x88(%r13)
	movq 0xC8(%rbp),%r15
	movq %r15,0x90(%r13)
	movq 0x170(%rbp),%r15
	movq %r15,0x98(%r13)
	movq 0x50(%rbp),%r15
	movq %r15,0xA0(%r13)
	movq 0x138(%rbp),%r15
	movq %r15,0xA8(%r13)
	movq 0x98(%rbp),%r14
	movq %r14,0xB8(%r13)
	movq %r13,0x180(%rbp)
	movq 0x130(%rbp),%r14
	movq %r14,(gcState+0x20)(%rip)
	movq $0x1,0x170(%rbp)
	movq %r15,0x178(%rbp)
	addq $0x170,%rbp
	leaq (L_202590+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp goto_0
.p2align 0x4
L_463178:
L_202638:
	movq (globalObjptr+0x1078)(%rip),%r14
	movl 0x2C(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movq 0xA8(%rbp),%r15
	jmp L_202626
.p2align 0x4
L_463181:
	movq %r11,(localObjptr+0x0)(%rip)
	jmp L_202550
.p2align 0x4
L_463182:
	movq %r11,(localObjptr+0x0)(%rip)
	jmp L_202550
.p2align 0x4
L_463183:
L_202641:
	xorl %ecx,%ecx
	jmp L_202555
.p2align 0x4
L_463184:
L_202545:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x2DBF
L_202559:
	addq $0xFFFFFFFFFFFFFE80,%rbp
	movq 0x180(%rbp),%r15
	movq %r15,0xA8(%rbp)
	movq %r15,0x180(%rbp)
	addq $0x180,%rbp
	leaq (L_202560+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x2DC4
L_202581:
	addq $0xFFFFFFFFFFFFFED0,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	movq %r15,0xA8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_202583
L_202608:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x180,%rbp
	leaq (L_202609+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_202609
.p2align 0x4
.long 0x2DC7
L_202609:
	addq $0xFFFFFFFFFFFFFE80,%rbp
L_202583:
	movq 0xA8(%rbp),%r15
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_202584
L_202585:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xD9F,%r14
	jne L_463187
L_202586:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	cmpq %r13,0xA0(%rbp)
	je L_463186
L_202587:
	movq 0x130(%rbp),%r13
	movq %r13,(gcState+0x20)(%rip)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r13,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_463186:
	xchgq %r14,%r15
	jmp L_202589
.p2align 0x4
L_463187:
L_202584:
	movq 0x130(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0xA8(%rbp),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x2DC0
L_202628:
	addq $0xFFFFFFFFFFFFFE80,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_202629
L_202635:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x180,%rbp
	leaq (L_202636+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_202636
.p2align 0x4
.long 0x2DC7
L_202636:
	addq $0xFFFFFFFFFFFFFE80,%rbp
L_202629:
	movq $0x36D3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x98(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xA0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x14A9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x20,%r12
	movq $0x2,0x0(%r14)
	movq $0x1,0x10(%r14)
	movq %r14,0x180(%rbp)
	movq 0xA8(%rbp),%r15
	movq %r15,0x188(%rbp)
	addq $0x180,%rbp
	leaq (L_202630+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDefLabelUse_0
.p2align 0x4
.long 0x2DC5
L_202590:
	addq $0xFFFFFFFFFFFFFE90,%rbp
	movq 0xA0(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0xA8(%rbp)
	cmpq $0x1,%r13
	je L_463197
L_202591:
	movq 0x8(%r13),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_202592:
	incl %ecx
	jo L_202532
L_202593:
	cmpq $0x1,%r15
	je L_463191
L_202594:
	movq 0x8(%r15),%r15
	jmp L_202592
.p2align 0x4
L_463191:
L_202595:
L_202596:
	movslq %ecx,%rdx
	movq %rdx,0xB0(%rbp)
	testq %rdx,%rdx
	jz L_463195
L_202597:
	cmpq $0x7FFFFFFF,%rdx
	ja L_463194
L_202598:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x143B,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x170,%rbp
	leaq (L_202599+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_202599
.p2align 0x4
.long 0x2DC6
L_202599:
	addq $0xFFFFFFFFFFFFFE90,%rbp
	movq %rax,%r15
L_202600:
	movq 0xA8(%rbp),%r13
	xorq %r14,%r14
.p2align 0x4,,0x7
loop_2229:
	cmpq 0xB0(%rbp),%r14
	jnl L_463193
L_202602:
	cmpq $0x1,%r13
	je L_463192
L_202603:
	movq 0x0(%r13),%r11
	movq 0x8(%r13),%r13
	movq %r15,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r11,0x0(%r15,%r14,8)
	incq %r14
	jmp loop_2229
.p2align 0x4
L_463192:
L_202604:
	movq (globalObjptr+0x4B0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_463193:
L_202601:
	movq $0x779,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x20(%rbp)
	movq 0x138(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq 0x140(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x148(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x150(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x160(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_463194:
L_202605:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_463195:
L_202606:
	movq (globalObjptr+0xD50)(%rip),%r15
	jmp L_202600
.p2align 0x4
L_463197:
L_202607:
	xorl %ecx,%ecx
	jmp L_202596
.p2align 0x4
.long 0x2DBF
L_202560:
	addq $0xFFFFFFFFFFFFFE80,%rbp
	movq 0x180(%rbp),%r15
	movq %r15,0xA8(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x180(%rbp)
	addq $0x180,%rbp
	leaq (L_202561+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x2DBF
L_202630:
	addq $0xFFFFFFFFFFFFFE80,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_202632
L_202633:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x180,%rbp
	leaq (L_202634+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_202634
.p2align 0x4
.long 0x2DCB
L_202634:
	addq $0xFFFFFFFFFFFFFE80,%rbp
	jmp L_202632
.p2align 0x4
.long 0x2DC0
L_202561:
	addq $0xFFFFFFFFFFFFFE80,%rbp
	movq 0x180(%rbp),%r15
	movq %r15,0xB0(%rbp)
	movq (globalObjptr+0xE1B8)(%rip),%r15
	movq %r15,0x180(%rbp)
	addq $0x180,%rbp
	leaq (L_202562+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x2DC1
L_202562:
	addq $0xFFFFFFFFFFFFFE80,%rbp
	movq 0x180(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x180(%rbp)
	addq $0x180,%rbp
	leaq (L_202563+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x2DC2
L_202563:
	addq $0xFFFFFFFFFFFFFE80,%rbp
	movq 0x180(%rbp),%r15
	movq %r15,0xC0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_202564
L_202616:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x180,%rbp
	leaq (L_202617+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_202617
.p2align 0x4
.long 0x2DCA
L_202617:
	addq $0xFFFFFFFFFFFFFE80,%rbp
L_202564:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xC0(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0xB8(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0xB0(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0xD0(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0xA8(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_202565:
	addl 0x0(%r15),%ecx
	movl %ecx,0x2C(%rbp)
	jo L_202551
L_202566:
	cmpq $0x1,%r14
	je L_463199
L_202567:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_202565
.p2align 0x4
L_463199:
L_202568:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_202569
L_202614:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x180,%rbp
	leaq (L_202615+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_202615
.p2align 0x4
.long 0x2DC9
L_202615:
	addq $0xFFFFFFFFFFFFFE80,%rbp
L_202569:
	movl 0x2C(%rbp),%ecx
	testl %ecx,%ecx
	jz L_463200
L_202570:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xD0(%rbp),%r14
	movq %r14,0x0(%r15)
toString_295:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x188(%rbp)
	movq $0x1,0x180(%rbp)
	addq $0x180,%rbp
	leaq (rev_293+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_463200:
L_202613:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_295
.p2align 0x4
.long 0x2DBF
rev_293:
	addq $0xFFFFFFFFFFFFFE80,%rbp
	movq 0x180(%rbp),%r15
	movq %r15,0xA8(%rbp)
	cmpq $0x1,%r15
	je L_463206
L_202571:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0xA8(%rbp)
	movq %r14,0xB0(%rbp)
	movq $0x1,0xB8(%rbp)
.p2align 0x4,,0x7
L_202572:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_463205
.p2align 0x4,,0x7
L_202573:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xB0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xB8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xA8(%rbp),%r14
	cmpq $0x1,%r14
	je L_463204
L_202574:
	movq %r15,0xB8(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0xA8(%rbp)
	movq %r15,0xB0(%rbp)
	jmp L_202572
.p2align 0x4
L_463204:
L_202576:
	movq %r15,0x180(%rbp)
	addq $0x180,%rbp
	leaq (L_202577+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_463205:
L_202610:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x180,%rbp
	leaq (L_202611+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_202611
.p2align 0x4
.long 0x2DC8
L_202611:
	addq $0xFFFFFFFFFFFFFE80,%rbp
	jmp L_202573
.p2align 0x4
L_463206:
L_202612:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_202576
.p2align 0x4
.long 0x2DBF
L_202577:
	addq $0xFFFFFFFFFFFFFE80,%rbp
	movq 0x180(%rbp),%r15
	movq %r15,0xA8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_202578
L_202579:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x140,%rbp
	leaq (L_202580+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_202580
.p2align 0x4
.long 0x2DC3
L_202580:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
L_202578:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xA8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq 0x130(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl call_0
.hidden call_0
call_0:
L_202660:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_202707
L_202661:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_463223
L_202662:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x8(%r15),%r14
	movq 0x10(%r15),%r13
	movq %r13,0x28(%rbp)
	movl 0x0(%r14),%r15d
	testl %r15d,%r15d
	jnz L_463222
L_202663:
	movl $0x1,0x0(%r14)
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r13
	movq $0x2627,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq %r11,0x0(%r15)
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_202684
L_202664:
	movq 0x8(%r14),%r15
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x38(%rbp)
.p2align 0x4,,0x7
L_202665:
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_202681
L_202666:
	movq 0x8(%r14),%r15
	movq %r15,0x40(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x48(%rbp)
L_202667:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_463219
.p2align 0x4,,0x7
L_202668:
	movq 0x8(%rbp),%r11
	movq 0x8(%r11),%r10
	movq 0x8(%r10),%r15
	movq 0x0(%r10),%r14
	movq 0x38(%rbp),%r9
	movq 0x8(%r9),%r8
	movq %r8,0x50(%rbp)
	movq 0x48(%rbp),%r9
	movq 0x10(%r9),%rsp
	movq 0x8(%rsp),%rsi
	movq 0x10(%r10),%r9
	cmpq %rsi,0x8(%r9)
	je L_202695
L_202669:
	cmpq %rsi,0x8(%r15)
	je L_202695
L_202670:
	cmpq %rsi,0x8(%r14)
	je L_202695
L_202671:
	movq 0x0(%r8),%r11
	cmpq $0x1,%r11
	je L_202678
L_202672:
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r11
	movq %rsi,%r15
	movq %r11,%r14
.p2align 0x4,,0x7
L_202673:
	movq 0x10(%r13),%r11
	cmpq %r15,0x8(%r11)
	je L_463213
L_202674:
	cmpq $0x1,%r14
	je L_463208
L_202675:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	jmp L_202673
.p2align 0x4
L_463208:
L_202676:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_463212
.p2align 0x4,,0x7
L_202678:
	movq 0x50(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x2143,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x0(%r15)
	movq 0x40(%rbp),%r15
	cmpq $0x1,%r15
	je L_463209
L_202679:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x40(%rbp)
	movq %r14,0x48(%rbp)
	jmp L_202667
.p2align 0x4
L_463209:
L_202681:
	movq 0x30(%rbp),%r15
	cmpq $0x1,%r15
	je L_463210
L_202682:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x30(%rbp)
	movq %r14,0x38(%rbp)
	jmp L_202665
.p2align 0x4
L_463210:
L_202684:
	movq 0x20(%rbp),%r14
	movq 0x0(%r14),%r13
	cmpq $0x1,%r13
	je L_463211
L_202685:
	movq 0x8(%r13),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r13),%r13
	movq %r13,%r15
L_202686:
	movq %r15,0x30(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x30,%rbp
	leaq (L_202687+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp call_0
.p2align 0x4
L_463211:
L_202690:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_463212:
L_202692:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_202693+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_202693
.p2align 0x4
.long 0x85C
L_202693:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	jmp L_202678
.p2align 0x4
L_463213:
L_202695:
	movq 0x40(%rbp),%r15
	cmpq $0x1,%r15
	je L_202681
L_202696:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x40(%rbp)
	movq %r14,0x48(%rbp)
	jmp L_202667
.p2align 0x4
L_463219:
L_202702:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_202703+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_202703
.p2align 0x4
.long 0x8A7
L_202703:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	jmp L_202668
.p2align 0x4
L_463222:
L_202706:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_463223:
L_202707:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_202708+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_202708
.p2align 0x4
.long 0x4AE
L_202708:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	jmp L_202662
.p2align 0x4
.long 0x4A5
L_202687:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_202690
L_202688:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	jmp L_202686
.text
.p2align 0x4
.globl x_1862
.hidden x_1862
x_1862:
L_202709:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_202710
L_202837:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_202838+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_202838
.p2align 0x4
.long 0x804
L_202838:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_202710:
	movq 0x8(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_202711+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1895
.p2align 0x4
.long 0x65E
L_202711:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movl $0x0,0x68(%rbp)
.p2align 0x4,,0x7
loop_2230:
	movl 0x68(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_463234
L_202836:
	movq (globalObjptr+0xA058)(%rip),%r15
	movq %r15,0x70(%rbp)
.p2align 0x4,,0x7
L_202716:
	movq (globalObjptr+0x818)(%rip),%r15
	movl 0x68(%rbp),%r14d
	cmpl %r14d,0x0(%r15)
	je L_463230
L_202717:
	incl %r14d
	movl %r14d,0x6C(%rbp)
	jo L_463229
L_202719:
	movq 0x38(%rbp),%r15
	movq 0x0(%r15),%r13
	cmpq $0x1,%r13
	jne L_463227
L_202762:
	movl %r14d,0x68(%rbp)
	jmp loop_2230
.p2align 0x4
L_463227:
L_202720:
	movq 0x8(%r13),%r15
	movq 0x0(%r13),%r13
	movq 0x8(%rbp),%r11
	movq %r11,0x78(%rbp)
	movq %r15,0x8(%rbp)
	movq %r13,%r15
L_202721:
	movq 0x0(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x30(%rbp),%r14
	movq 0x0(%r14),%r15
	cmpq $0x1,%r15
	je L_463228
L_202722:
	movq 0x8(%r15),%r14
	movq %r14,0x90(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,%r15
L_202723:
	movq %r15,0xA8(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0xA0(%rbp)
	addq $0xA0,%rbp
	leaq (L_202724+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1608
.p2align 0x4
L_463228:
L_202728:
	movq (globalObjptr+0x10040)(%rip),%r15
	movq %r15,0x98(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0xA0(%rbp)
	addq $0x98,%rbp
	leaq (L_202729+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_463229:
L_202718:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_463230:
L_202763:
	movq 0x48(%rbp),%r15
	cmpb $0x7,0x0(%r15)
	je L_202766
L_202764:
	movq 0x50(%rbp),%r15
	cmpb $0x1,0x0(%r15)
	jne L_463231
L_202805:
	movq (globalObjptr+0x10040)(%rip),%r15
	movq %r15,0x70(%rbp)
	movq (globalObjptr+0xA058)(%rip),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_202806+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_463231:
L_202766:
	movq 0x30(%rbp),%r14
	movq 0x0(%r14),%r13
	cmpq $0x1,%r13
	je L_463232
L_202767:
	movq 0x8(%r13),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r13),%r13
	movq %r13,%r15
L_202768:
	movq %r15,0x78(%rbp)
	movq (globalObjptr+0x10050)(%rip),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_202769+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1608
.p2align 0x4
L_463232:
L_202773:
	movq (globalObjptr+0x10040)(%rip),%r15
	movq %r15,0x70(%rbp)
	movq (globalObjptr+0xA058)(%rip),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_202774+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_463234:
L_202712:
	movl 0x68(%rbp),%r15d
	movl %r15d,0x78(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_202713+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0x2DD0
L_202724:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movl 0xA0(%rbp),%r14d
	movl %r14d,0x68(%rbp)
	testl %r14d,%r14d
	jnz L_463236
L_202725:
	movq 0x90(%rbp),%r14
	cmpq $0x1,%r14
	je L_202728
L_202726:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x90(%rbp)
	jmp L_202723
.p2align 0x4
L_463236:
L_202758:
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_463237
L_202759:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_202721
.p2align 0x4
L_463237:
L_202760:
	movq 0x78(%rbp),%r15
	movq %r15,0x8(%rbp)
	movl 0x6C(%rbp),%r15d
	movl %r15d,0x68(%rbp)
	jmp loop_2230
.p2align 0x4
.long 0x2DD1
L_202729:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq 0x20(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x98(%rbp)
	movq 0x10(%r14),%r13
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_463238
L_202730:
	movq 0x8(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,%r15
L_202731:
	movq %r15,0xB8(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0xB0(%rbp)
	addq $0xB0,%rbp
	leaq (L_202732+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1608
.p2align 0x4
L_463238:
L_202737:
	movq (globalObjptr+0x10048)(%rip),%r15
	movq %r15,0x98(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0xA0(%rbp)
	addq $0x98,%rbp
	leaq (L_202738+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0xBF6
L_202806:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r14
	movq %r14,0x38(%rbp)
	movq 0x20(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x40(%rbp)
	movq 0x10(%r14),%r13
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_463239
L_202807:
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,%r15
L_202808:
	movq %r15,0x78(%rbp)
	movq (globalObjptr+0x10058)(%rip),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_202809+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1608
.p2align 0x4
L_463239:
L_202814:
	movq (globalObjptr+0x10048)(%rip),%r15
	movq %r15,0x70(%rbp)
	movq (globalObjptr+0xA058)(%rip),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_202815+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x2DDA
L_202769:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movl 0x70(%rbp),%r14d
	movl %r14d,0x38(%rbp)
	testl %r14d,%r14d
	jnz L_463241
L_202770:
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_202773
L_202771:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	jmp L_202768
.p2align 0x4
L_463241:
L_202786:
	movq 0x8(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x20(%rbp)
	addq $0x18,%rbp
	leaq (L_202787+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1895
.p2align 0x4
.long 0x2DDB
L_202774:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r14
	movq %r14,0x30(%rbp)
	movq 0x20(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x38(%rbp)
	movq 0x10(%r14),%r13
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_463242
L_202775:
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,%r15
L_202776:
	movq %r15,0x78(%rbp)
	movq (globalObjptr+0x10050)(%rip),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_202777+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1608
.p2align 0x4
L_463242:
L_202782:
	movq (globalObjptr+0x10048)(%rip),%r15
	movq %r15,0x70(%rbp)
	movq (globalObjptr+0xA058)(%rip),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_202783+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x2DCF
L_202713:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x70(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_202714
L_202834:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_202835+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_202835
.p2align 0x4
.long 0x2DE8
L_202835:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_202714:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x7C8)(%rip),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_202715+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x2DD2
L_202732:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movl 0xB0(%rbp),%r15d
	movl %r15d,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_202733
L_202755:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_202756+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_202756
.p2align 0x4
.long 0x2DD9
L_202756:
	addq $0xFFFFFFFFFFFFFF50,%rbp
L_202733:
	movl 0x68(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_463245
L_202734:
	movq 0xA0(%rbp),%r14
	cmpq $0x1,%r14
	je L_202737
L_202735:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0xA0(%rbp)
	jmp L_202731
.p2align 0x4
L_463245:
L_202745:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x90(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xA050)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x80(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0xA8(%rbp)
	addq $0xA8,%rbp
	leaq (L_202746+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x2DD1
L_202738:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x90(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_202739
L_202743:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_202744+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_202744
.p2align 0x4
.long 0x2DD4
L_202744:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_202739:
	movq $0x4147,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x88(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x88(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x98(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0xA0(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0xA8(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0xB0(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_202740+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp passTypeCheck_0
.p2align 0x4
.long 0x1F68
L_202809:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movl 0x70(%rbp),%r15d
	movl %r15d,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_202810
L_202830:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_202831+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_202831
.p2align 0x4
.long 0x2666
L_202831:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_202810:
	movl 0x50(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_463249
L_202811:
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_202814
L_202812:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	jmp L_202808
.p2align 0x4
L_463249:
L_202820:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xA050)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0x10058)(%rip),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_202821+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0xBF6
L_202815:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_202816
L_202818:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_202819+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_202819
.p2align 0x4
.long 0x2DE4
L_202819:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_202816:
	movq $0x4143,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x78(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq (globalObjptr+0x10058)(%rip),%r15
	movq %r15,0x90(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x98(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0xA0(%rbp)
	addq $0x70,%rbp
	leaq (L_202817+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp passTypeCheck_0
.p2align 0x4
.long 0x521
L_202787:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x2DDC
L_202777:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movl 0x70(%rbp),%r15d
	movl %r15d,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_202778
L_202800:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_202801+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_202801
.p2align 0x4
.long 0x2DE2
L_202801:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_202778:
	movl 0x40(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_463253
L_202779:
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_202782
L_202780:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	jmp L_202776
.p2align 0x4
L_463253:
L_202790:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xA050)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0x10050)(%rip),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_202791+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x251F
L_202783:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_202784
L_202788:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_202789+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_202789
.p2align 0x4
.long 0x2DDD
L_202789:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_202784:
	movq $0x4149,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq (globalObjptr+0x10050)(%rip),%r14
	movq %r14,0x30(%rbp)
	movq 0x28(%rbp),%r14
	movq %r14,0x38(%rbp)
	movq 0x10(%rbp),%r14
	movq %r14,0x40(%rbp)
	movq 0x18(%rbp),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x18(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_202785+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp passTypeCheck_0
.p2align 0x4
.long 0x2DCF
L_202715:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x70(%rbp)
	jmp L_202716
.p2align 0x4
.long 0x2DD5
L_202746:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x90(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_202747
L_202753:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_202754+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_202754
.p2align 0x4
.long 0x2DD8
L_202754:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_202747:
	movq 0x98(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0xA8(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0xB0(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0xB8(%rbp)
	movq 0x20(%r15),%r13
	movq 0x20(%r13),%r11
	movq %r11,0xC0(%rbp)
	movq 0x18(%r13),%r11
	movq %r11,0xC8(%rbp)
	movq 0x10(%r13),%r11
	movq %r11,0xD0(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0xD8(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0xE0(%rbp)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x90(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq (globalObjptr+0xA050)(%rip),%r15
	movq %r15,0x0(%r13)
	movq 0x0(%r14),%r15
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r13,0x8(%r14)
	movq %r14,0xF0(%rbp)
	addq $0x18,%r12
	addq $0xF0,%rbp
	leaq (L_202748+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x2DD3
L_202740:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r14
	movq %r14,0x78(%rbp)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_463257
L_202741:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_202721
.p2align 0x4
L_463257:
L_202742:
	movq 0x78(%rbp),%r15
	movq %r15,0x8(%rbp)
	movl 0x6C(%rbp),%r15d
	movl %r15d,0x68(%rbp)
	jmp loop_2230
.p2align 0x4
.long 0x2DE5
L_202821:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_202822
L_202828:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_202829+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_202829
.p2align 0x4
.long 0x266E
L_202829:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_202822:
	movq 0x40(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x50(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x68(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x70(%rbp)
	movq 0x20(%r15),%r13
	movq 0x20(%r13),%r11
	movq %r11,0x78(%rbp)
	movq 0x18(%r13),%r11
	movq %r11,0x80(%rbp)
	movq 0x10(%r13),%r11
	movq %r11,0x88(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x90(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x98(%rbp)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq (globalObjptr+0xA050)(%rip),%r15
	movq %r15,0x0(%r13)
	movq 0x0(%r14),%r15
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r13,0x8(%r14)
	movq %r14,0xA8(%rbp)
	addq $0x18,%r12
	addq $0xA8,%rbp
	leaq (L_202823+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x2DE3
L_202817:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp L_202766
.p2align 0x4
.long 0x2DDE
L_202791:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_202792
L_202798:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_202799+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_202799
.p2align 0x4
.long 0x2DE1
L_202799:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_202792:
	movq 0x38(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x40(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x48(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x50(%rbp)
	movq 0x20(%r15),%r13
	movq 0x20(%r13),%r11
	movq %r11,0x58(%rbp)
	movq 0x18(%r13),%r11
	movq %r11,0x68(%rbp)
	movq 0x10(%r13),%r11
	movq %r11,0x70(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x78(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x80(%rbp)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq (globalObjptr+0xA050)(%rip),%r15
	movq %r15,0x0(%r13)
	movq 0x0(%r14),%r15
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r13,0x8(%r14)
	movq %r14,0x90(%rbp)
	addq $0x18,%r12
	addq $0x90,%rbp
	leaq (L_202793+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x4AF
L_202785:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp L_202786
.p2align 0x4
.long 0x2DD6
L_202748:
	addq $0xFFFFFFFFFFFFFF10,%rbp
	movq 0xF0(%rbp),%r15
	movq %r15,0x90(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_202749
L_202751:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF0,%rbp
	leaq (L_202752+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_202752
.p2align 0x4
.long 0x2DD7
L_202752:
	addq $0xFFFFFFFFFFFFFF10,%rbp
L_202749:
	movq $0x31B9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x38,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xA8(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0xB0(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0xB8(%rbp),%r14
	movq %r14,0x20(%r15)
	movq 0xA0(%rbp),%r14
	movq %r14,0x28(%r15)
	movq %r15,0x98(%rbp)
	movq %r14,0xA8(%rbp)
	movq (globalObjptr+0x1638)(%rip),%r15
	movq %r15,0xB0(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0xD0(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0xD8(%rbp)
	movb $0x7,0xE0(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0xA0(%rbp)
	addq $0x98,%rbp
	leaq (L_202750+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1832
.p2align 0x4
.long 0x2DE6
L_202823:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_202824
L_202826:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_202827+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_202827
.p2align 0x4
.long 0x2DE7
L_202827:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_202824:
	movq $0x31B9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x38,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x20(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x28(%r15)
	movq %r15,0x70(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0xA0(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0xA8(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0xB0(%rbp)
	movb $0x7,0xB8(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x98(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq (globalObjptr+0x1638)(%rip),%r15
	movq %r15,0x88(%rbp)
	movq %r14,0x80(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_202825+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1832
.p2align 0x4
.long 0x2DDF
L_202793:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_202794
L_202796:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_202797+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_202797
.p2align 0x4
.long 0x2DE0
L_202797:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_202794:
	movq $0x31B9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x38,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x20(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x28(%r15)
	movq (globalObjptr+0x1638)(%rip),%r13
	movq %r13,0x88(%rbp)
	movq 0x58(%rbp),%r13
	movq %r13,0x90(%rbp)
	movq 0x68(%rbp),%r13
	movq %r13,0x98(%rbp)
	movq 0x70(%rbp),%r13
	movq %r13,0xA0(%rbp)
	movq %r15,0x70(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0xA8(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0xB0(%rbp)
	movb $0x7,0xB8(%rbp)
	movq %r14,0x80(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_202795+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1832
.p2align 0x4
.long 0x2DD1
L_202750:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	jmp L_202737
.p2align 0x4
.long 0xBF6
L_202825:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_202814
.p2align 0x4
.long 0x251F
L_202795:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_202782
.text
.p2align 0x4
.globl x_1895
.hidden x_1895
x_1895:
L_202839:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x18(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_202840
L_202952:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_202953+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_202953
.p2align 0x4
.long 0x45C
L_202953:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_202840:
	movq 0x8(%rbp),%r15
.p2align 0x4,,0x7
loop_2231:
	movq 0x30(%r15),%r14
	movq %r14,0x8(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x40(%rbp)
	movb 0x0(%r14),%r13b
	movb %r13b,0x48(%rbp)
	movq 0x8(%r15),%r14
	movb 0x0(%r14),%r11b
	cmpb $0x1,%r13b
	je L_463273
	cmpb $0x2,%r13b
	je L_463271
	cmpb $0x3,%r13b
	je L_202869
L_202841:
	testb %r11b,%r11b
	jz L_463268
L_202842:
	movq 0x8(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x20A6,%r15
	je L_463265
	cmpq $0x20A7,%r15
	je L_463264
	cmpq $0x20A8,%r15
	je L_463263
L_202843:
	movq 0x0(%r14),%r15
	jmp loop_2231
.p2align 0x4
L_463263:
L_202867:
	movq 0xF8(%r14),%r15
	movq %r15,0x10(%rbp)
	movq 0xF0(%r14),%r15
	movq %r15,0x18(%rbp)
	movq 0xE8(%r14),%r15
	movq %r15,0x20(%rbp)
	movq 0xE0(%r14),%r15
	movq %r15,0x28(%rbp)
	movq 0xD8(%r14),%r15
	movq %r15,0x30(%rbp)
	movq 0xD0(%r14),%r15
	movq %r15,0x38(%rbp)
	movq 0xC8(%r14),%r15
	movq %r15,0x40(%rbp)
	movq 0xC0(%r14),%r15
	movq %r15,0x48(%rbp)
	movq 0xB8(%r14),%r15
	movq %r15,0x50(%rbp)
	movq 0xB0(%r14),%r15
	movq %r15,0x58(%rbp)
	movq 0xA8(%r14),%r15
	movq %r15,0x60(%rbp)
	movq 0xA0(%r14),%r15
	movq %r15,0x68(%rbp)
	movq 0x98(%r14),%r15
	movq %r15,0x70(%rbp)
	movq 0x90(%r14),%r15
	movq %r15,0x78(%rbp)
	movq 0x88(%r14),%r15
	movq %r15,0x80(%rbp)
	movq 0x80(%r14),%r15
	movq %r15,0x88(%rbp)
	movq 0x78(%r14),%r15
	movq %r15,0x90(%rbp)
	movq 0x70(%r14),%r15
	movq %r15,0x98(%rbp)
	movq 0x68(%r14),%r15
	movq %r15,0xA0(%rbp)
	movq 0x60(%r14),%r15
	movq %r15,0xA8(%rbp)
	movq 0x58(%r14),%r15
	movq %r15,0xB0(%rbp)
	movq 0x50(%r14),%r15
	movq %r15,0xB8(%rbp)
	movq 0x48(%r14),%r15
	movq %r15,0xC0(%rbp)
	movq 0x40(%r14),%r15
	movq %r15,0xC8(%rbp)
	movq 0x38(%r14),%r15
	movq %r15,0xD0(%rbp)
	movq 0x30(%r14),%r15
	movq %r15,0xD8(%rbp)
	movq 0x28(%r14),%r15
	movq %r15,0xE0(%rbp)
	movq 0x20(%r14),%r15
	movq %r15,0xE8(%rbp)
	movq 0x18(%r14),%r15
	movq %r15,0xF0(%rbp)
	movq 0x10(%r14),%r15
	movq %r15,0xF8(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x100(%rbp)
	movq 0x0(%r14),%r15
	movq 0x100(%r14),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x108(%rbp)
	jmp typeCheck_1
.p2align 0x4
L_463264:
L_202866:
	movq 0x20(%r14),%r15
	movq %r15,0x10(%rbp)
	movl 0x0(%r14),%r15d
	movl %r15d,0x18(%rbp)
	movq 0x18(%r14),%r15
	movq %r15,0x20(%rbp)
	movq 0x10(%r14),%r15
	movq %r15,0x28(%rbp)
	movq 0x8(%r14),%r15
	movq 0x28(%r14),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x30(%rbp)
	jmp checkScopes_0
.p2align 0x4
L_463265:
L_202844:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_202845
L_202864:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_202865+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_202865
.p2align 0x4
.long 0x45C
L_202865:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_202845:
	movq 0x8(%rbp),%r14
	movq 0x18(%r14),%r13
	movq %r13,0x20(%rbp)
	movq 0x10(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x30(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x38(%rbp)
	movq 0x0(%rbp),%r14
	movq 0x10(%r14),%r13
	cmpq $0x1,%r13
	je L_463266
L_202846:
	movq 0x8(%r13),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r13),%r13
	movq %r13,%r15
L_202847:
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x48(%rbp)
	movq 0x28(%r14),%r13
	movq %r13,0x50(%rbp)
	movq $0x71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x58(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x47B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x60(%rbp)
	addq $0x18,%r12
	movq 0x38(%rbp),%r11
	movq %r11,0x0(%r14)
	movq %r15,0x8(%r14)
	movq $0x3567,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x70(%rbp)
	movq %r13,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_202848+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_4
.p2align 0x4
L_463266:
L_202856:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_463268:
L_202869:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_202870
L_202943:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_202944+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_202944
.p2align 0x4
.long 0xF7E
L_202944:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_202870:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x1600)(%rip),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_202871+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_463271:
L_202948:
	cmpb $0x3,%r11b
	jne L_202869
	jmp L_202842
.p2align 0x4
L_463273:
L_202945:
	cmpb $0x0,%r11b
	je L_202869
	cmpb $0x1,%r11b
	je L_202869
	jmp L_202842
.p2align 0x4
.long 0xA36
L_202848:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_202849
L_202861:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_202862+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_202862
.p2align 0x4
.long 0x802
L_202862:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_202849:
	movq $0xCD7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x38,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x20(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x28(%r15)
	movq %r15,0x78(%rbp)
	movq $0x1,0x68(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_202850+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp goto_2
.p2align 0x4
.long 0x2DE9
L_202871:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_202872
L_202941:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_202942+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_202942
.p2align 0x4
.long 0x5A0
L_202942:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_202872:
	movq $0x3117,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x58(%rbp)
	movb 0x48(%rbp),%r15b
	movb %r15b,0x60(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x58,%rbp
	leaq (L_202873+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp message_0
.p2align 0x4
.long 0x1D86
L_202850:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_202851
L_202859:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_202860+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_202860
.p2align 0x4
.long 0x1D8C
L_202860:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_202851:
	movq $0x3545,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x58(%rbp)
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_202852+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_4
.p2align 0x4
.long 0x2DE9
L_202873:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_202874+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp time_0
.p2align 0x4
.long 0x4B4
L_202852:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_202853
L_202857:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_202858+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_202858
.p2align 0x4
.long 0x4B7
L_202858:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_202853:
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_202856
L_202854:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x40(%rbp)
	jmp L_202847
.p2align 0x4
.long 0x2DE9
L_202874:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_202875
L_202939:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_202940+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_202940
.p2align 0x4
.long 0x111B
L_202940:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_202875:
	movq (globalObjptr+0x15E8)(%rip),%r15
	movl 0x0(%r15),%r14d
	addl $0x3,%r14d
	jo L_202876
L_202877:
	movl %r14d,0x0(%r15)
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x20A6,%r14
	je L_463284
	cmpq $0x20A7,%r14
	je L_463283
	cmpq $0x20A8,%r14
	je L_463282
L_202878:
	movq 0x0(%r15),%r14
	movq %r14,0x70(%rbp)
	leaq L_202914(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x0(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_202879+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1895
.p2align 0x4
L_463282:
L_202938:
	movq 0x100(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0xF8(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0xF0(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0xE8(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0xE0(%r15),%r14
	movq %r14,0x90(%rbp)
	movq 0xD8(%r15),%r14
	movq %r14,0x98(%rbp)
	movq 0xD0(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq 0xC8(%r15),%r14
	movq %r14,0xA8(%rbp)
	movq 0xC0(%r15),%r14
	movq %r14,0xB0(%rbp)
	movq 0xB8(%r15),%r14
	movq %r14,0xB8(%rbp)
	movq 0xB0(%r15),%r14
	movq %r14,0xC0(%rbp)
	movq 0xA8(%r15),%r14
	movq %r14,0xC8(%rbp)
	movq 0xA0(%r15),%r14
	movq %r14,0xD0(%rbp)
	movq 0x98(%r15),%r14
	movq %r14,0xD8(%rbp)
	movq 0x90(%r15),%r14
	movq %r14,0xE0(%rbp)
	movq 0x88(%r15),%r14
	movq %r14,0xE8(%rbp)
	movq 0x80(%r15),%r14
	movq %r14,0xF0(%rbp)
	movq 0x78(%r15),%r14
	movq %r14,0xF8(%rbp)
	movq 0x70(%r15),%r14
	movq %r14,0x100(%rbp)
	movq 0x68(%r15),%r14
	movq %r14,0x108(%rbp)
	movq 0x60(%r15),%r14
	movq %r14,0x110(%rbp)
	movq 0x58(%r15),%r14
	movq %r14,0x118(%rbp)
	movq 0x50(%r15),%r14
	movq %r14,0x120(%rbp)
	movq 0x48(%r15),%r14
	movq %r14,0x128(%rbp)
	movq 0x40(%r15),%r14
	movq %r14,0x130(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x138(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x140(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x148(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x150(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x158(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x160(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x168(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x170(%rbp)
	leaq L_202914(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x0(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_202879+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp typeCheck_1
.p2align 0x4
L_463283:
L_202937:
	movq 0x28(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x78(%rbp)
	movl 0x0(%r15),%r14d
	movl %r14d,0x80(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x90(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x98(%rbp)
	leaq L_202914(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x0(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_202879+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp checkScopes_0
.p2align 0x4
L_463284:
L_202919:
	movq 0x18(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x0(%rbp),%r14
	movq 0x10(%r14),%r13
	cmpq $0x1,%r13
	je L_463285
L_202920:
	movq 0x8(%r13),%r14
	movq %r14,0x80(%rbp)
	movq 0x0(%r13),%r13
	movq %r13,%r15
L_202921:
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x88(%rbp)
	movq 0x28(%r14),%r13
	movq %r13,0x90(%rbp)
	movq $0x71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x98(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x47B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0xA0(%rbp)
	addq $0x18,%r12
	movq 0x78(%rbp),%r11
	movq %r11,0x0(%r14)
	movq %r15,0x8(%r14)
	movq $0x3567,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0xB0(%rbp)
	leaq L_202914(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq %r13,0xB8(%rbp)
	addq $0xB0,%rbp
	leaq (L_202922+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_4
.p2align 0x4
L_463285:
L_202880:
	movq (globalObjptr+0x15E8)(%rip),%r15
	movl 0x0(%r15),%r14d
	subl $0x3,%r14d
	jo L_463286
L_202905:
	movl %r14d,0x0(%r15)
	leaq L_202914(%rip),%r15
	movq %r15,0x10(%rbp)
	movq %rbp,%r15
	addq $0x18,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x30(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_202906+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp time_0
.p2align 0x4
L_463286:
L_202881:
	movq $0x3,0x60(%rbp)
L_202882:
	movq (globalObjptr+0x15E8)(%rip),%r15
	movl 0x0(%r15),%r14d
	subl $0x3,%r14d
	jo L_463287
L_202883:
	movl %r14d,0x0(%r15)
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x30(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_202884+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp time_0
.p2align 0x4
L_463287:
L_202876:
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1D86
L_202879:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	jmp L_202880
.p2align 0x4
.long 0x25
L_202914:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	movq %r15,0x60(%rbp)
	jmp L_202882
.p2align 0x4
.long 0x2DF3
L_202922:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_202923
L_202934:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_202935+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_202935
.p2align 0x4
.long 0x2DF8
L_202935:
	addq $0xFFFFFFFFFFFFFF50,%rbp
L_202923:
	movq $0xCD7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x38,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x90(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xA0(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x20(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x28(%r15)
	movq %r15,0xB8(%rbp)
	movq $0x1,0xA8(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0xB0(%rbp)
	addq $0xA8,%rbp
	leaq (L_202924+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp goto_2
.p2align 0x4
.long 0x1D86
L_202906:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x58(%rbp),%r14
	movq %r14,0x70(%rbp)
	movq %r15,0x78(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x70,%rbp
	leaq (L_202907+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x2DEA
L_202884:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x58(%rbp),%r14
	movq %r14,0x70(%rbp)
	movq %r15,0x78(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x70,%rbp
	leaq (L_202885+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x2DF4
L_202924:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_202925
L_202932:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_202933+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_202933
.p2align 0x4
.long 0x2DF7
L_202933:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_202925:
	movq $0x3545,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x98(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x90(%rbp),%r14
	movq %r14,0x98(%rbp)
	movq %r15,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_202926+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_4
.p2align 0x4
.long 0x2DF0
L_202907:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x78,%rbp
	leaq (L_202908+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x2DEB
L_202885:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x70,%rbp
	leaq (L_202886+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x2DF5
L_202926:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_202927
L_202930:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_202931+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_202931
.p2align 0x4
.long 0x2DF6
L_202931:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_202927:
	movq 0x80(%rbp),%r14
	cmpq $0x1,%r14
	je L_202880
L_202928:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x80(%rbp)
	jmp L_202921
.p2align 0x4
.long 0x2DF1
L_202908:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq %r15,0x70(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x68,%rbp
	leaq (L_202909+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp timeToString_0
.p2align 0x4
.long 0x2DEC
L_202886:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x58(%rbp),%r14
	movq %r14,0x70(%rbp)
	movq %r15,0x78(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x70,%rbp
	leaq (L_202887+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp timeToString_0
.p2align 0x4
.long 0x1D86
L_202909:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_202910
L_202917:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_202918+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_202918
.p2align 0x4
.long 0x2DF2
L_202918:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_202910:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xD4B0)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_202911+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x1005
L_202887:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_202888
L_202903:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_202904+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_202904
.p2align 0x4
.long 0x2DEF
L_202904:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_202888:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xD4A0)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_202889+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x1D86
L_202911:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_202912
L_202915:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_202916+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_202916
.p2align 0x4
.long 0x2DF2
L_202916:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_202912:
	movq $0x3117,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x68(%rbp)
	movb 0x48(%rbp),%r15b
	movb %r15b,0x70(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x68,%rbp
	leaq (L_202913+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp message_0
.p2align 0x4
.long 0x1005
L_202889:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_202890
L_202901:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_202902+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_202902
.p2align 0x4
.long 0x2DEF
L_202902:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_202890:
	movq $0x3117,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x70(%rbp)
	movb 0x48(%rbp),%r15b
	movb %r15b,0x78(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x70,%rbp
	leaq (L_202891+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp message_0
.p2align 0x4
.long 0x1D86
L_202913:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1005
L_202891:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_202892+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp name_0
.p2align 0x4
.long 0x1005
L_202892:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_202893
L_202899:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_202900+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_202900
.p2align 0x4
.long 0x2DEF
L_202900:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_202893:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xD4A8)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_202894+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x2DED
L_202894:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_202895
L_202897:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_202898+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_202898
.p2align 0x4
.long 0x2DEE
L_202898:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_202895:
	movq $0x3117,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x70(%rbp)
	movb 0x48(%rbp),%r15b
	movb %r15b,0x78(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x70,%rbp
	leaq (L_202896+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp message_0
.p2align 0x4
.long 0x79A
L_202896:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl checkScopes_0
.hidden checkScopes_0
checkScopes_0:
L_202954:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_203177
L_202955:
	movq (gcState+0x458)(%rip),%r15
	subq %r12,%r15
	cmpq $0x208,%r15
	jb L_463300
L_202956:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x50(%rbp)
	movq $0x71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x89,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq %r15,0x0(%r13)
	movq %r15,0x8(%r13)
	movq $0xCBD,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,0x58(%rbp)
	addq $0x18,%r12
	movq 0x30(%rbp),%r10
	movq %r10,0x0(%r11)
	movq %r13,0x8(%r11)
	movq $0x71,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	addq $0x10,%r12
	movl $0x0,0x0(%r9)
	movl $0x0,0x4(%r9)
	movq $0x89,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	addq $0x18,%r12
	movq %r9,0x0(%r8)
	movq %r9,0x8(%r8)
	movq $0x71,0x0(%r12)
	movq %r12,%rsp
	addq $0x8,%rsp
	movq %rsp,0x60(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%rsp)
	movl $0x0,0x4(%rsp)
	movq $0x89,0x0(%r12)
	movq %r12,%rsi
	addq $0x8,%rsi
	movq %rsi,0x68(%rbp)
	addq $0x18,%r12
	movq %rsp,0x0(%rsi)
	movq %rsp,0x8(%rsi)
	movq $0xCBD,0x0(%r12)
	movq %r12,%rsp
	addq $0x8,%rsp
	movq %rsp,0x70(%rbp)
	addq $0x18,%r12
	movq 0x28(%rbp),%rdi
	movq %rdi,0x0(%rsp)
	movq %rsi,0x8(%rsp)
	movq $0x71,0x0(%r12)
	movq %r12,%rdx
	addq $0x8,%rdx
	movq %rdx,0x78(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%rdx)
	movl $0x0,0x4(%rdx)
	movq $0x89,0x0(%r12)
	movq %r12,%rcx
	addq $0x8,%rcx
	movq %rcx,0x80(%rbp)
	addq $0x18,%r12
	movq %rdx,0x0(%rcx)
	movq %rdx,0x8(%rcx)
	movq $0x71,0x0(%r12)
	movq %r12,%rdx
	addq $0x8,%rdx
	movq %rdx,0x88(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%rdx)
	movl $0x0,0x4(%rdx)
	movq $0x89,0x0(%r12)
	movq %r12,%rcx
	addq $0x8,%rcx
	addq $0x18,%r12
	movq %rdx,0x0(%rcx)
	movq %rdx,0x8(%rcx)
	movq $0xD5D,0x0(%r12)
	movq %r12,%rdx
	addq $0x8,%rdx
	movq %rdx,0x90(%rbp)
	movq %rcx,0x0(%rdx)
	addq $0x18,%r12
	movq %rdi,0x8(%rdx)
	movq $0x2CD,0x0(%r12)
	movq %r12,%rdx
	addq $0x8,%rdx
	movq %rdx,0x98(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%rdx)
	movq $0x71,0x0(%r12)
	movq %r12,%rcx
	addq $0x8,%rcx
	movq %rcx,0xA0(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%rcx)
	movl $0x0,0x4(%rcx)
	movq $0xD7B,0x0(%r12)
	movq %r12,%rbx
	addq $0x8,%rbx
	movq %rbx,0xA8(%rbp)
	addq $0x28,%r12
	movq %rcx,0x0(%rbx)
	movq %r11,0x8(%rbx)
	movq %rdx,0x10(%rbx)
	movq %rcx,0x18(%rbx)
	movq $0xD7D,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,0xB0(%rbp)
	addq $0x28,%r12
	movq %rbx,0x0(%r11)
	movq %rsi,0x8(%r11)
	movq %rdi,0x10(%r11)
	movq %rsi,0x18(%r11)
	movq $0xDA1,0x0(%r12)
	movq %r12,%rsi
	addq $0x8,%rsi
	movq %rsi,0xB8(%rbp)
	addq $0x40,%r12
	movq %r11,0x0(%rsi)
	movq %rbx,0x8(%rsi)
	movq %rsp,0x10(%rsi)
	movq %rbx,0x18(%rsi)
	movq %rsp,0x20(%rsi)
	movq 0x20(%rbp),%r11
	movq %r11,0x28(%rsi)
	movq %r8,0x30(%rsi)
	movq $0x32B1,0x0(%r12)
	movq %r12,%rsp
	addq $0x8,%rsp
	movq %r8,0x0(%rsp)
	movq %r9,0x10(%rsp)
	movq %r9,0x18(%rsp)
	movq %r15,0x20(%rsp)
	movq %r15,0x28(%rsp)
	movq %r13,0x38(%rsp)
	addq $0x48,%r12
	movq %r11,0x8(%rsp)
	movq %r10,0x30(%rsp)
	movq %rsp,0xC8(%rbp)
	movq %r14,0xD0(%rbp)
	addq $0xC8,%rbp
	leaq (L_202957+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_2
.p2align 0x4
L_463300:
L_203177:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	movq $0x208,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_203178+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_203178
.p2align 0x4
.long 0x103C
L_203178:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_202956
.p2align 0x4
.long 0x2DF9
L_202957:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_202958
L_203175:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_203176+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_203176
.p2align 0x4
.long 0x2E0C
L_203176:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_202958:
	movq $0x32B7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x28,%r12
	movq 0xA0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x98(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x58(%rbp),%r13
	movq %r13,0x10(%r15)
	movq %r14,0x18(%r15)
	movq %r15,0xC8(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC8,%rbp
	leaq (L_202959+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_2
.p2align 0x4
.long 0x2DF9
L_202959:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_202960
L_203173:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_203174+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_203174
.p2align 0x4
.long 0x2E0C
L_203174:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_202960:
	movq $0x3323,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xB8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0xC8(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC8,%rbp
	leaq (L_202961+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_6
.p2align 0x4
.long 0x2DF9
L_202961:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_202962
L_203171:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_203172+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_203172
.p2align 0x4
.long 0x2E0C
L_203172:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_202962:
	movq 0x48(%rbp),%r15
	cmpq $0x1,%r15
	je L_203013
L_202963:
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
.p2align 0x4,,0x7
L_202964:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_463348
.p2align 0x4,,0x7
L_202965:
	movq 0x30(%rbp),%r13
	movq 0x0(%r13),%r11
	movq 0x20(%r11),%r10
	movq %r10,0xC0(%rbp)
	movq 0x10(%r10),%r13
	movq %r13,0xC8(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_202966
L_202967:
	movq %r15,0x0(%r11)
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_463346
L_202968:
	movq 0x0(%r11),%r14
	movq 0x8(%r11),%r11
	movl $0x0,0x1C(%rbp)
	movq %r11,%r15
.p2align 0x4,,0x7
L_202970:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_202971
L_203157:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xCB3,%r13
	jne L_202971
L_203158:
	movq 0x8(%r14),%r13
	movq %r13,0x30(%rbp)
	movq 0x0(%r14),%r13
	cmpq %r13,0x88(%rbp)
	je L_463340
L_202971:
	movl 0x1C(%rbp),%r13d
	incl %r13d
	movl %r13d,0x30(%rbp)
	jo L_202972
L_202973:
	cmpq $0x1,%r15
	je L_463304
L_202974:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movl %r13d,0x1C(%rbp)
	jmp L_202970
.p2align 0x4
L_463304:
L_202975:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_463338
.p2align 0x4,,0x7
L_202976:
	movl 0x30(%rbp),%ecx
L_202977:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_202978
L_202979:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_202981
L_203154:
	movl %ecx,0x0(%r15)
L_202981:
	movq $0x1411,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movb $0x2,%r14b
	movzbl %r14b,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x1967,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x88(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq 0xC8(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r10,0x0(%r13)
x_683:
	cmpb $0x2,0x0(%r15)
	jne L_463335
L_202997:
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_202966
L_202998:
	movq %r15,0x0(%r13)
	movq 0xC8(%rbp),%r13
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_463333
L_202999:
	movq 0x0(%r11),%r14
	movq 0x8(%r11),%r11
	movl $0x0,0x1C(%rbp)
	movq %r11,%r15
.p2align 0x4,,0x7
L_203001:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_203002
L_203140:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xCB3,%r13
	jne L_203002
L_203141:
	movq 0x8(%r14),%r13
	movq %r13,0x30(%rbp)
	movq 0x0(%r14),%r13
	cmpq %r13,0x88(%rbp)
	je L_463326
L_203002:
	movl 0x1C(%rbp),%r13d
	incl %r13d
	movl %r13d,0x30(%rbp)
	jo L_202972
L_203003:
	cmpq $0x1,%r15
	je L_463305
L_203004:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movl %r13d,0x1C(%rbp)
	jmp L_203001
.p2align 0x4
L_463305:
L_203005:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_463324
.p2align 0x4,,0x7
L_203006:
	movl 0x30(%rbp),%ecx
L_203007:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_202978
L_203008:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_203010
L_203137:
	movl %ecx,0x0(%r15)
L_203010:
	movq $0x1411,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movb $0x1,%r14b
	movzbl %r14b,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x1967,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x88(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0xC8(%rbp),%r15
	movq 0x0(%r15),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq %r11,0x0(%r15)
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je L_463306
L_203011:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x20(%rbp)
	movq %r14,0x30(%rbp)
	jmp L_202964
.p2align 0x4
L_463306:
L_203013:
	movq 0x38(%rbp),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x20(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_463321
L_203014:
	movq %r15,0x0(%r13)
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_463320
L_203015:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movl $0x0,0x1C(%rbp)
	movq %r13,%r15
.p2align 0x4,,0x7
L_203017:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_203018
L_203126:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xCB3,%r13
	jne L_203018
L_203127:
	movq 0x8(%r14),%r13
	movq %r13,0x30(%rbp)
	movq 0x0(%r14),%r13
	cmpq %r13,0x88(%rbp)
	je L_463314
L_203018:
	movl 0x1C(%rbp),%r13d
	incl %r13d
	movl %r13d,0x30(%rbp)
	jo L_463313
L_203019:
	cmpq $0x1,%r15
	je L_463307
L_203020:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movl %r13d,0x1C(%rbp)
	jmp L_203017
.p2align 0x4
L_463307:
L_203021:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_203022
L_203124:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_203125+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_203125
.p2align 0x4
.long 0x2E06
L_203125:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_203022:
	movl 0x30(%rbp),%ecx
L_203023:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_463311
L_203024:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_203026
L_203123:
	movl %ecx,0x0(%r15)
L_203026:
	movq $0x1411,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movb $0x2,%r14b
	movzbl %r14b,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x1967,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x88(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq 0x20(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r10,0x0(%r13)
x_684:
	cmpb $0x1,0x0(%r15)
	je L_463308
L_203027:
	movq 0x38(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_203028+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_463308:
L_203045:
	movq 0x48(%rbp),%r15
	cmpq $0x1,%r15
	je L_463309
L_203046:
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
L_203047:
	movq 0x30(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x38(%rbp)
	movq 0x10(%r14),%r13
	movq %r13,0x88(%rbp)
	movq 0x18(%r14),%r13
	movq %r13,0xC0(%rbp)
	movq 0x28(%r14),%r13
	movq %r13,0xC8(%rbp)
	movq 0x30(%r14),%r13
	movq %r13,0xD0(%rbp)
	movq $0x3415,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x28,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r11
	movq %r11,0x8(%r15)
	movq %r14,0x10(%r15)
	movq 0xA8(%rbp),%r14
	movq %r14,0x18(%r15)
	movq %r15,0xE0(%rbp)
	movq %r13,0xE8(%rbp)
	addq $0xE0,%rbp
	leaq (L_203048+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_2
.p2align 0x4
L_463309:
L_203080:
	movq $0x1,0xB0(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0xB8(%rbp)
	addq $0xB0,%rbp
	leaq (L_203081+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_2
.p2align 0x4
L_463311:
L_202978:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_463313:
L_202972:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_463314:
L_203129:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_203130
L_203134:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_203135+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_203135
.p2align 0x4
.long 0x2E07
L_203135:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_203130:
	movl 0x1C(%rbp),%r14d
	movslq %r14d,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_202978
L_203131:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %r14d,0x0(%r13)
	jl L_463315
L_203132:
	movq 0x30(%rbp),%r15
	jmp x_684
.p2align 0x4
L_463315:
L_203133:
	movq (globalObjptr+0x1078)(%rip),%r14
	movl 0x1C(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movq 0x30(%rbp),%r15
	jmp x_684
.p2align 0x4
L_463320:
L_203136:
	xorl %ecx,%ecx
	jmp L_203023
.p2align 0x4
L_463321:
L_202966:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_463324:
L_203138:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_203139+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_203139
.p2align 0x4
.long 0x2E08
L_203139:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	jmp L_203006
.p2align 0x4
L_463326:
L_203143:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_463330
.p2align 0x4,,0x7
L_203144:
	movl 0x1C(%rbp),%r14d
	movslq %r14d,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_202978
L_203145:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %r14d,0x0(%r13)
	jl L_463328
L_203146:
	movq 0x30(%rbp),%r15
L_203147:
	movb $0x1,0x0(%r15)
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je L_203013
L_203148:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x20(%rbp)
	movq %r14,0x30(%rbp)
	jmp L_202964
.p2align 0x4
L_463328:
L_203150:
	movq (globalObjptr+0x1078)(%rip),%r14
	movl 0x1C(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movq 0x30(%rbp),%r15
	jmp L_203147
.p2align 0x4
L_463330:
L_203151:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_203152+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_203152
.p2align 0x4
.long 0x2E09
L_203152:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	jmp L_203144
.p2align 0x4
L_463333:
L_203153:
	xorl %ecx,%ecx
	jmp L_203007
.p2align 0x4
L_463335:
L_202982:
	movq 0xC0(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_202983+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_463338:
L_203155:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_203156+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_203156
.p2align 0x4
.long 0x2E0A
L_203156:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	jmp L_202976
.p2align 0x4
L_463340:
L_203160:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_463343
.p2align 0x4,,0x7
L_203161:
	movl 0x1C(%rbp),%r14d
	movslq %r14d,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_202978
L_203162:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %r14d,0x0(%r13)
	jl L_463341
L_203163:
	movq 0x30(%rbp),%r15
	jmp x_683
.p2align 0x4
L_463341:
L_203164:
	movq (globalObjptr+0x1078)(%rip),%r14
	movl 0x1C(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movq 0x30(%rbp),%r15
	jmp x_683
.p2align 0x4
L_463343:
L_203165:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_203166+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_203166
.p2align 0x4
.long 0x2E0B
L_203166:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	jmp L_203161
.p2align 0x4
L_463346:
L_203167:
	xorl %ecx,%ecx
	jmp L_202977
.p2align 0x4
L_463348:
L_203168:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_203169+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_203169
.p2align 0x4
.long 0x2E09
L_203169:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	jmp L_202965
.p2align 0x4
.long 0x1
L_203028:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (toString_297+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x2DFA
L_203048:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_203049
L_203120:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_203121+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_203121
.p2align 0x4
.long 0x2E05
L_203121:
	addq $0xFFFFFFFFFFFFFF20,%rbp
L_203049:
	movq $0x354B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x80(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r13
	movq %r13,0x8(%r15)
	movq %r14,0x10(%r15)
	movq %r15,0xE0(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0xE8(%rbp)
	addq $0xE0,%rbp
	leaq (L_203050+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_4
.p2align 0x4
.long 0x2DFE
L_203081:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movq 0x48(%rbp),%r13
	cmpq $0x1,%r13
	je L_203086
L_203082:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
.p2align 0x4,,0x7
L_203083:
	movq 0x0(%r15),%r13
	movq 0x20(%r13),%r11
	movq 0x10(%r11),%r10
	movq %r10,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq $0x1,0x0(%r10)
	cmpq $0x1,%r14
	je L_463352
L_203084:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_203083
.p2align 0x4
L_463352:
L_203086:
	movq $0x1,0xB0(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0xB8(%rbp)
	addq $0xB0,%rbp
	leaq (L_203087+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_6
.p2align 0x4
.long 0x1
L_202983:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (toString_296+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1
toString_297:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (rev_295+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x2DFA
L_203050:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0xE0(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0xE8(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0xF0(%rbp)
	addq $0xE0,%rbp
	leaq (L_203051+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1417
.p2align 0x4
.long 0x2DFF
L_203087:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_203088
L_203099:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_203100+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_203100
.p2align 0x4
.long 0x10C4
L_203100:
	addq $0xFFFFFFFFFFFFFF50,%rbp
L_203088:
	movq 0x98(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_463354
L_203089:
	movq 0x8(%r14),%r15
	movq %r15,0xA8(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0xB0(%rbp)
L_203090:
	movq 0xB0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0xC8(%rbp)
	movq $0x3DBF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xA0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0xC0(%rbp)
	addq $0xC0,%rbp
	leaq (L_203091+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp remove_0
.p2align 0x4
L_463354:
L_203095:
	movq 0x98(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq $0x1,0x0(%r15)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
toString_296:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (rev_294+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x1
rev_295:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_463358
L_203029:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_203030:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_463357
.p2align 0x4,,0x7
L_203031:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_463356
L_203032:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_203030
.p2align 0x4
L_463356:
L_203034:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_203035+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_463357:
L_203042:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_203043+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_203043
.p2align 0x4
.long 0x45B
L_203043:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_203031
.p2align 0x4
L_463358:
L_203044:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_203034
.p2align 0x4
.long 0x2DFB
L_203051:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_203052
L_203118:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_203119+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_203119
.p2align 0x4
.long 0x2E04
L_203119:
	addq $0xFFFFFFFFFFFFFF20,%rbp
L_203052:
	movq $0x3565,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x80(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0xE0(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0xE8(%rbp)
	addq $0xE0,%rbp
	leaq (L_203053+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_4
.p2align 0x4
.long 0x2E00
L_203091:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0xB8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_203092
L_203096:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_203097+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_203097
.p2align 0x4
.long 0x2E01
L_203097:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_203092:
	movq 0xB0(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0xB8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xA8(%rbp),%r15
	cmpq $0x1,%r15
	je L_203095
L_203093:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0xA8(%rbp)
	movq %r14,0xB0(%rbp)
	jmp L_203090
.p2align 0x4
.long 0x1
rev_294:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_463364
L_202984:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_202985:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_463363
.p2align 0x4,,0x7
L_202986:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_463362
L_202987:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_202985
.p2align 0x4
L_463362:
L_202989:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_202990+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_463363:
L_202994:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_202995+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_202995
.p2align 0x4
.long 0x45B
L_202995:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_202986
.p2align 0x4
L_463364:
L_202996:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_202989
.p2align 0x4
.long 0x1
L_203035:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_203036
L_203040:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_203041+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_203041
.p2align 0x4
.long 0x451
L_203041:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_203036:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xE70)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xEFD0)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_567+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x2DFB
L_203053:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0xE0(%rbp)
	addq $0xE0,%rbp
	leaq (L_203054+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1896
.p2align 0x4
.long 0x1
L_202990:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xEFF8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (bug_566+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x1
bug_567:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_203037
L_203038:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_203039+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_203039
.p2align 0x4
.long 0x451
L_203039:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_203037:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x2DFB
L_203054:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	movq 0xE0(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq %r15,0xE0(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0xE8(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0xF0(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0xF8(%rbp)
	movl 0x18(%rbp),%r15d
	movl %r15d,0x100(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x108(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x110(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0x118(%rbp)
	movq 0xA8(%rbp),%r15
	movq %r15,0x120(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0x128(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0x130(%rbp)
	addq $0xE0,%rbp
	leaq (L_203055+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3922
.p2align 0x4
.long 0x1
bug_566:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_202991
L_202992:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_202993+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_202993
.p2align 0x4
.long 0x451
L_202993:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_202991:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x2DFB
L_203055:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_203056
L_203116:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_203117+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_203117
.p2align 0x4
.long 0x2E04
L_203117:
	addq $0xFFFFFFFFFFFFFF20,%rbp
L_203056:
	movq $0x3549,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r15,0xE0(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0xE8(%rbp)
	addq $0xE0,%rbp
	leaq (L_203057+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_4
.p2align 0x4
.long 0x2DFB
L_203057:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_203058
L_203114:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_203115+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_203115
.p2align 0x4
.long 0x2E04
L_203115:
	addq $0xFFFFFFFFFFFFFF20,%rbp
L_203058:
	movq $0x3423,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r15,0xE0(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0xE8(%rbp)
	addq $0xE0,%rbp
	leaq (L_203059+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_2
.p2align 0x4
.long 0x2DFB
L_203059:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	movq 0x88(%rbp),%r15
	cmpq $0x1,%r15
	je L_203066
L_203060:
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x1C(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_203062
L_203063:
	cmpl $0x0,%r13d
	jl L_203108
L_203064:
	movl $0x0,0x38(%rbp)
loop_2232:
	movl 0x38(%rbp),%r15d
	cmpl 0x1C(%rbp),%r15d
	jnl L_463370
L_203110:
	movslq %r15d,%r14
	movq 0x88(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	movq %r13,0xE0(%rbp)
	movq 0xA8(%rbp),%r15
	movq %r15,0xE8(%rbp)
	addq $0xE0,%rbp
	leaq (L_203111+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_76
.p2align 0x4
L_463370:
L_203066:
	movq 0xC0(%rbp),%r15
	cmpq $0x1,%r15
	je L_203072
L_203067:
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x1C(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_463373
L_203069:
	cmpl $0x0,%r13d
	jl L_463372
L_203070:
	movl $0x0,0x38(%rbp)
loop_2233:
	movl 0x38(%rbp),%r15d
	cmpl 0x1C(%rbp),%r15d
	jnl L_463371
L_203105:
	movslq %r15d,%r14
	movq 0xC0(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	movq %r13,0xE0(%rbp)
	movq 0xA8(%rbp),%r15
	movq %r15,0xE8(%rbp)
	addq $0xE0,%rbp
	leaq (L_203106+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_76
.p2align 0x4
L_463371:
L_203072:
	movq 0x30(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq $0x1,0xD8(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0xE0(%rbp)
	addq $0xD8,%rbp
	leaq (L_203073+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_2
.p2align 0x4
L_463372:
L_203108:
	movq (globalObjptr+0x4F8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_463373:
L_203062:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x2DFB
L_203111:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	incl 0x38(%rbp)
	jmp loop_2232
.p2align 0x4
.long 0x2E03
L_203106:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	incl 0x38(%rbp)
	jmp loop_2233
.p2align 0x4
.long 0x2DFC
L_203073:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0xD0(%rbp)
	movq $0x1,0xC8(%rbp)
	addq $0xC8,%rbp
	leaq (L_203074+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_4
.p2align 0x4
.long 0x2DFD
L_203074:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_203075
L_203103:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_203104+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_203104
.p2align 0x4
.long 0x2E02
L_203104:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_203075:
	movq 0x38(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r14),%r15
	cmpq $0x1,%r15
	je L_463379
L_203076:
L_203077:
	movq $0x2937,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x10,%r12
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je L_203080
L_203078:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x20(%rbp)
	movq %r14,0x30(%rbp)
	jmp L_203047
.p2align 0x4
L_463379:
L_203102:
	movq (globalObjptr+0x1E50)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl x_1896
.hidden x_1896
x_1896:
L_203179:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x10(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_203324
L_203180:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_463385
L_203181:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_203309
L_203182:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x149A,%r14
	je L_463381
L_203310:
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq $0x1,0x0(%r13)
	movq 0x8(%r14),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x28(%rbp)
	movq 0x28(%r15),%r13
	movq %r13,0x60(%rbp)
	movq $0x9C1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x30(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x71,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x38(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0xCBF,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x40(%rbp)
	addq $0x20,%r12
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	movq $0x71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x89,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x48(%rbp)
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq %r15,0x8(%r14)
	movq $0x3559,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x20,%r12
	movq %r13,0x10(%r14)
	movq %r14,0x58(%rbp)
	leaq L_203319(%rip),%r15
	movq %r15,0x8(%rbp)
	movq %rbp,%r15
	addq $0x10,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x58,%rbp
	leaq (L_203311+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_4
.p2align 0x4
L_463381:
L_203183:
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
L_203184:
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_463383
L_203185:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x148A,%r13
	je L_463382
L_203187:
	movq 0x10(%r14),%r13
	movq %r13,0x20(%rbp)
	movq 0x8(%r14),%r11
	movq %r11,0x28(%rbp)
	movq 0x0(%r14),%r10
	movq %r10,0x30(%rbp)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r14,1)
	movq $0x1,0x0(%r15)
	leaq L_203248(%rip),%r15
	movq %r15,0x8(%rbp)
	movq %rbp,%r15
	addq $0x10,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq %r11,0x40(%rbp)
	movq %r13,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_203188+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp dominators_0
.p2align 0x4
L_463382:
L_203186:
	movq 0x0(%r14),%r13
	movq %r13,0x0(%rbp)
	movq 0x10(%rbp),%r14
	movq %r14,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_463383:
L_203309:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x12,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_463385:
L_203324:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_203325+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_203325
.p2align 0x4
.long 0x452
L_203325:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_203181
.p2align 0x4
.long 0x911
L_203311:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x28(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x50(%rbp)
	movq %r14,0x60(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_203312+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_4
.p2align 0x4
.long 0x72E
L_203319:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_203320
L_203321:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_203322+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_203322
.p2align 0x4
.long 0x51C
L_203322:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_203320:
	movq $0x2937,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x28(%rbp),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x510
L_203188:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_203189
L_203306:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_203307+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_203307
.p2align 0x4
.long 0x5E7
L_203307:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_203189:
	movq $0x71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x40(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x20(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_463388
L_203190:
	movq 0x8(%r14),%r15
	movq %r15,0x48(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x50(%rbp)
L_203191:
	movq 0x50(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_203192+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_20
.p2align 0x4
L_463388:
L_203274:
	movq 0x30(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_203275+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp treeAt_1
.p2align 0x4
.long 0x72E
L_203248:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_203249
L_203250:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_203251+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_203251
.p2align 0x4
.long 0x5E7
L_203251:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_203249:
	movq 0x38(%rbp),%r15
L_203196:
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq $0x2917,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x212D
L_203312:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_203313
L_203317:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_203318+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_203318
.p2align 0x4
.long 0x2E11
L_203318:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_203313:
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_463391
L_203314:
L_203315:
	movq $0x2917,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x20,%r12
	movq 0x48(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x30(%rbp),%r13
	movq %r13,0x10(%r14)
	movq $0xF81,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	addq $0x10,%r12
	movq $0x2935,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x28,%r12
	movq %r11,0x0(%r14)
	movq %r13,0x8(%r14)
	movq 0x40(%rbp),%r13
	movq %r13,0x10(%r14)
	movq %r15,0x18(%r14)
	movq 0x18(%rbp),%r15
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r14,0x0(%r15)
	movq %r11,0x18(%rbp)
	jmp L_203184
.p2align 0x4
L_463391:
L_203316:
	movq $0x45,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x13,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0x47,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x1B7F,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r13,0x8(%r10)
	addq $0x18,%r12
	movq %r11,0x0(%r10)
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r13,1)
	movq %r10,0x0(%r14)
	movq $0x196B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r11,0x8(%r14)
	addq $0x18,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x50(%rbp),%r13
	movq 0x0(%r13),%r10
	movq $0x28DF,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r14,0x0(%r8)
	movq %r10,0x8(%r8)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r9,%r14,1)
	movq %r8,0x0(%r13)
	xchgq %r11,%r15
	jmp L_203315
.p2align 0x4
.long 0x8BC
L_203192:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_203193
L_203303:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_203304+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_203304
.p2align 0x4
.long 0x8C0
L_203304:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_203193:
	movq 0x58(%rbp),%r13
	cmpq $0x1,%r13
	je L_463423
	cmpq $0x2,%r13
	je L_463421
L_203194:
	movq 0x8(%r13),%r11
	movq %r11,0x60(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_203195
L_203197:
	movq %r15,0x0(%r13)
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_463419
L_203198:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movl $0x0,0x58(%rbp)
	movq %r13,%r15
.p2align 0x4,,0x7
L_203200:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_203201
L_203286:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xCE4,%r13
	jne L_203201
L_203287:
	movq 0x8(%r14),%r13
	movq %r13,0x68(%rbp)
	movq 0x40(%rbp),%r13
	cmpq %r13,0x0(%r14)
	je L_463413
L_203201:
	movl 0x58(%rbp),%r13d
	incl %r13d
	movl %r13d,0x5C(%rbp)
	jo L_203202
L_203206:
	cmpq $0x1,%r15
	je L_463393
L_203207:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movl %r13d,0x58(%rbp)
	jmp L_203200
.p2align 0x4
L_463393:
L_203208:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_203209
L_203284:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_203285+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_203285
.p2align 0x4
.long 0x2E0F
L_203285:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_203209:
	movl 0x5C(%rbp),%ecx
L_203210:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_203211
L_203212:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_203214
L_203283:
	movl %ecx,0x0(%r15)
L_203214:
	movq $0x9C1,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,0x58(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r11)
	movq 0x30(%rbp),%r11
	movq 0x8(%r11),%r14
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_463408
L_203215:
	movq %r15,0x0(%r11)
	movq 0x60(%rbp),%r11
	movq 0x0(%r11),%r10
	cmpq $0x1,%r10
	je L_463407
L_203216:
	movq 0x0(%r10),%r13
	movq 0x8(%r10),%r10
	movl $0x0,0x68(%rbp)
	movq %r10,%r15
.p2align 0x4,,0x7
L_203218:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_463406
L_203263:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xC9F,%r11
	jne L_463405
L_203264:
	movq 0x8(%r13),%r11
	movq %r11,0x70(%rbp)
	cmpq 0x0(%r13),%r14
	movq %r14,(localObjptr+0x0)(%rip)
	je L_463400
L_203219:
	movl 0x68(%rbp),%r11d
	incl %r11d
	movl %r11d,0x6C(%rbp)
	jo L_463398
L_203220:
	cmpq $0x1,%r15
	je L_463394
L_203221:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movl %r11d,0x68(%rbp)
	movq (localObjptr+0x0)(%rip),%r14
	jmp L_203218
.p2align 0x4
L_463394:
L_203222:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_203223
L_203261:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_203262+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_203262
.p2align 0x4
.long 0x2E0E
L_203262:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_203223:
	movl 0x6C(%rbp),%ecx
L_203224:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_463396
L_203225:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_203227
L_203260:
	movl %ecx,0x0(%r15)
L_203227:
	movq (globalObjptr+0xDFE0)(%rip),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_203228+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_463396:
L_203211:
	movq (globalObjptr+0x1080)(%rip),%r15
	jmp L_203196
.p2align 0x4
L_463398:
L_203202:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_203203
L_203204:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_203205+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_203205
.p2align 0x4
.long 0x71F
L_203205:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_203203:
	movq $0x3,%r15
	jmp L_203196
.p2align 0x4
L_463400:
L_203266:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_203267
L_203280:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_203281+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_203281
.p2align 0x4
.long 0xC31
L_203281:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_203267:
	movl 0x68(%rbp),%r14d
	movslq %r14d,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_203211
L_203268:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %r14d,0x0(%r13)
	jl L_463402
L_203269:
	movq 0x70(%rbp),%r15
L_203270:
	movq $0x13F3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x58(%rbp),%r13
	movq %r13,0x8(%r14)
	movq $0x19C9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x60(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r10,0x0(%r13)
	movq %r14,%r15
L_203271:
	movq 0x8(%r15),%r14
	movq 0x0(%r14),%r15
	movq $0x1B7F,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x50(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	movq 0x48(%rbp),%r15
	cmpq $0x1,%r15
	je L_203274
L_203272:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x48(%rbp)
	movq %r14,0x50(%rbp)
	jmp L_203191
.p2align 0x4
L_463402:
L_203279:
	movq (globalObjptr+0x1078)(%rip),%r14
	movl 0x68(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movq 0x70(%rbp),%r15
	jmp L_203270
.p2align 0x4
L_463405:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_203219
.p2align 0x4
L_463406:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_203219
.p2align 0x4
L_463407:
L_203282:
	xorl %ecx,%ecx
	jmp L_203224
.p2align 0x4
L_463408:
L_203195:
	movq (globalObjptr+0x1088)(%rip),%r15
	jmp L_203196
.p2align 0x4
L_463413:
L_203289:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_203290
L_203294:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_203295+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_203295
.p2align 0x4
.long 0x2E10
L_203295:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_203290:
	movl 0x58(%rbp),%r14d
	movslq %r14d,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_203211
L_203291:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %r14d,0x0(%r13)
	jl L_463414
L_203292:
	movq 0x68(%rbp),%r15
	jmp L_203271
.p2align 0x4
L_463414:
L_203293:
	movq (globalObjptr+0x1078)(%rip),%r14
	movl 0x58(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movq 0x68(%rbp),%r15
	jmp L_203271
.p2align 0x4
L_463419:
L_203296:
	xorl %ecx,%ecx
	jmp L_203210
.p2align 0x4
L_463421:
L_203300:
	movq 0x48(%rbp),%r15
	cmpq $0x1,%r15
	je L_203274
L_203301:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x48(%rbp)
	movq %r14,0x50(%rbp)
	jmp L_203191
.p2align 0x4
L_463423:
L_203297:
	movq 0x48(%rbp),%r15
	cmpq $0x1,%r15
	je L_203274
L_203298:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x48(%rbp)
	movq %r14,0x50(%rbp)
	jmp L_203191
.p2align 0x4
.long 0x510
L_203275:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_203276
L_203277:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_203278+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_203278
.p2align 0x4
.long 0xBA6
L_203278:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_203276:
	movq $0x2915,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r15,0x0(%r13)
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x510
L_203228:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_203229+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5F0
L_203229:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq (globalObjptr+0xE1B8)(%rip),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_203230+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4AA
L_203230:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_203231+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x911
L_203231:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_203232
L_203258:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_203259+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_203259
.p2align 0x4
.long 0x9A6
L_203259:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_203232:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x58(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x38(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_203233:
	addl 0x0(%r15),%ecx
	movl %ecx,0x38(%rbp)
	jo L_203202
L_203234:
	cmpq $0x1,%r14
	je L_463427
L_203235:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_203233
.p2align 0x4
L_463427:
L_203236:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_203237
L_203256:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_203257+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_203257
.p2align 0x4
.long 0x2E0D
L_203257:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_203237:
	movl 0x38(%rbp),%ecx
	testl %ecx,%ecx
	jz L_463428
L_203238:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
toString_298:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x48(%rbp)
	movq $0x1,0x40(%rbp)
	addq $0x40,%rbp
	leaq (rev_296+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_463428:
L_203255:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_298
.p2align 0x4
.long 0x510
rev_296:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq $0x1,%r15
	je L_463434
L_203239:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x38(%rbp)
	movq %r14,0x40(%rbp)
	movq $0x1,0x48(%rbp)
.p2align 0x4,,0x7
L_203240:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_463433
.p2align 0x4,,0x7
L_203241:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x38(%rbp),%r14
	cmpq $0x1,%r14
	je L_463432
L_203242:
	movq %r15,0x48(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x38(%rbp)
	movq %r15,0x40(%rbp)
	jmp L_203240
.p2align 0x4
L_463432:
L_203244:
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (bug_568+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_463433:
L_203252:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_203253+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_203253
.p2align 0x4
.long 0x4AD
L_203253:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	jmp L_203241
.p2align 0x4
L_463434:
L_203254:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_203244
.p2align 0x4
.long 0x510
bug_568:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_203245
L_203246:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_203247+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_203247
.p2align 0x4
.long 0x5E7
L_203247:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_203245:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_203196
.text
.p2align 0x4
.globl treeAt_1
.hidden treeAt_1
treeAt_1:
L_203326:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_203440
L_203327:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_463470
L_203328:
	movq 0x0(%rbp),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x18(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_203329
L_203330:
	movq %r15,0x0(%r13)
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_463468
L_203331:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movl $0x0,0x20(%rbp)
	movq %r13,%r15
.p2align 0x4,,0x7
L_203333:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_203334
L_203429:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xCE4,%r13
	jne L_203334
L_203430:
	movq 0x8(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0x10(%rbp),%r13
	cmpq %r13,0x0(%r14)
	je L_463462
L_203334:
	movl 0x20(%rbp),%r13d
	incl %r13d
	movl %r13d,0x24(%rbp)
	jo L_203335
L_203336:
	cmpq $0x1,%r15
	je L_463436
L_203337:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movl %r13d,0x20(%rbp)
	jmp L_203333
.p2align 0x4
L_463436:
L_203338:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_203339
L_203427:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_203428+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_203428
.p2align 0x4
.long 0x4E1
L_203428:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_203339:
	movl 0x24(%rbp),%ecx
L_203340:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_203341
L_203342:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_203344
L_203426:
	movl %ecx,0x0(%r15)
L_203344:
	movq $0x9C1,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,0x20(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r11)
	movq 0x8(%rbp),%r11
	movq 0x8(%r11),%r14
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_463457
L_203345:
	movq %r15,0x0(%r11)
	movq 0x18(%rbp),%r11
	movq 0x0(%r11),%r10
	cmpq $0x1,%r10
	je L_463456
L_203346:
	movq 0x0(%r10),%r13
	movq 0x8(%r10),%r10
	movl $0x0,0x28(%rbp)
	movq %r10,%r15
.p2align 0x4,,0x7
L_203348:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_463455
L_203386:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xC9F,%r11
	jne L_463454
L_203387:
	movq 0x8(%r13),%r11
	movq %r11,0x30(%rbp)
	cmpq %r14,0x0(%r13)
	movq %r14,(localObjptr+0x0)(%rip)
	je L_463441
L_203349:
	movl 0x28(%rbp),%r11d
	incl %r11d
	jo L_463440
L_203350:
	cmpq $0x1,%r15
	je L_463437
L_203351:
	movl %r11d,0x28(%rbp)
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x0)(%rip),%r14
	jmp L_203348
.p2align 0x4
L_463437:
	movl %r11d,%ecx
L_203353:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_463439
L_203354:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_203356
L_203385:
	movl %ecx,0x0(%r15)
L_203356:
	movq (globalObjptr+0xDFE0)(%rip),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_203357+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_463439:
L_203341:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_463440:
L_203335:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_463441:
L_203389:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_203390
L_203423:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_203424+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_203424
.p2align 0x4
.long 0xA27
L_203424:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_203390:
	movl 0x28(%rbp),%r14d
	movslq %r14d,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_203341
L_203391:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %r14d,0x0(%r13)
	jl L_463451
L_203392:
	movq 0x30(%rbp),%r15
L_203393:
	movq $0x13F3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x8(%r14)
	movq $0x19C9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x18(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r10,0x0(%r13)
	movq %r14,%r15
L_203394:
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x8(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x20(%rbp)
	cmpq $0x1,%r13
	je L_463450
L_203395:
	movq 0x8(%r13),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_203396:
	incl %ecx
	movl %ecx,0x28(%rbp)
	jo L_203335
L_203397:
	cmpq $0x1,%r15
	je L_463442
L_203398:
	movq 0x8(%r15),%r15
	jmp L_203396
.p2align 0x4
L_463442:
L_203399:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_203400
L_203419:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_203420+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_203420
.p2align 0x4
.long 0x764
L_203420:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_203400:
	movl 0x28(%rbp),%ecx
L_203401:
	movslq %ecx,%r15
	movq %r15,0x28(%rbp)
	testq %r15,%r15
	jz L_463447
L_203402:
	cmpq $0x7FFFFFFF,%r15
	ja L_463446
L_203403:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_203404
L_203415:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_203416+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_203416
.p2align 0x4
.long 0x764
L_203416:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_203404:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1533,%rcx
	movq 0x28(%rbp),%rdx
	movq $0x18,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_203405+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_203405
.p2align 0x4
.long 0x764
L_203405:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq %rax,0x30(%rbp)
L_203406:
	movq 0x20(%rbp),%r15
	movq $0x0,0x20(%rbp)
loop_2234:
	movq 0x28(%rbp),%r14
	cmpq %r14,0x20(%rbp)
	jnl L_463444
L_203408:
	cmpq $0x1,%r15
	je L_463443
L_203409:
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x48,%rbp
	leaq (L_203410+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp treeAt_1
.p2align 0x4
L_463443:
L_203414:
	movq (globalObjptr+0x4B0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_463444:
L_203407:
	movq 0x30(%rbp),%r15
	movq $0xF,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x5343,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_463446:
L_203417:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_463447:
L_203418:
	movq (globalObjptr+0x1E48)(%rip),%r14
	movq %r14,0x30(%rbp)
	jmp L_203406
.p2align 0x4
L_463450:
L_203421:
	xorl %ecx,%ecx
	jmp L_203401
.p2align 0x4
L_463451:
L_203422:
	movq (globalObjptr+0x1078)(%rip),%r14
	movl 0x28(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movq 0x30(%rbp),%r15
	jmp L_203393
.p2align 0x4
L_463454:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_203349
.p2align 0x4
L_463455:
	movq %r14,(localObjptr+0x0)(%rip)
	jmp L_203349
.p2align 0x4
L_463456:
L_203425:
	xorl %ecx,%ecx
	jmp L_203353
.p2align 0x4
L_463457:
L_203329:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_463462:
L_203432:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_203433
L_203437:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_203438+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_203438
.p2align 0x4
.long 0x463
L_203438:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_203433:
	movl 0x20(%rbp),%r14d
	movslq %r14d,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_203341
L_203434:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %r14d,0x0(%r13)
	jl L_463463
L_203435:
	movq 0x28(%rbp),%r15
	jmp L_203394
.p2align 0x4
L_463463:
L_203436:
	movq (globalObjptr+0x1078)(%rip),%r14
	movl 0x20(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movq 0x28(%rbp),%r15
	jmp L_203394
.p2align 0x4
L_463468:
L_203439:
	xorl %ecx,%ecx
	jmp L_203340
.p2align 0x4
L_463470:
L_203440:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_203441+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_203441
.p2align 0x4
.long 0x45B
L_203441:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_203328
.p2align 0x4
.long 0x1
L_203357:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_203358+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0xB29
L_203410:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_203411
L_203412:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_203413+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_203413
.p2align 0x4
.long 0x287A
L_203413:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_203411:
	movq 0x30(%rbp),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq 0x20(%rbp),%r13
	movq 0x40(%rbp),%r11
	movq %r11,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x20(%rbp)
	movq 0x38(%rbp),%r15
	jmp loop_2234
.p2align 0x4
.long 0x4AF
L_203358:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xE1B8)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_203359+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5AF
L_203359:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_203360+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x51E
L_203360:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_203361
L_203383:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_203384+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_203384
.p2align 0x4
.long 0x4AE
L_203384:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_203361:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_203362:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_203335
L_203363:
	cmpq $0x1,%r14
	je L_463473
L_203364:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_203362
.p2align 0x4
L_463473:
L_203365:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_203366
L_203381:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_203382+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_203382
.p2align 0x4
.long 0x4E6
L_203382:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_203366:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_463474
L_203367:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
toString_299:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	addq $0x8,%rbp
	leaq (rev_297+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_463474:
L_203380:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_299
.p2align 0x4
.long 0x1
rev_297:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_463480
L_203368:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_203369:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_463479
.p2align 0x4,,0x7
L_203370:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_463478
L_203371:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_203369
.p2align 0x4
L_463478:
L_203373:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_569+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_463479:
L_203377:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_203378+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_203378
.p2align 0x4
.long 0x45B
L_203378:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_203370
.p2align 0x4
L_463480:
L_203379:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_203373
.p2align 0x4
.long 0x1
bug_569:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_203374
L_203375:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_203376+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_203376
.p2align 0x4
.long 0x451
L_203376:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_203374:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl loop_3922
.hidden loop_3922
loop_3922:
L_203442:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_203682
L_203443:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_463482
L_203444:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x0(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x60(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x68(%rbp)
	movq 0x18(%r14),%r13
	movq %r13,0x70(%rbp)
	movq $0x3417,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x80(%rbp)
	movq %r13,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_203445+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_2
.p2align 0x4
L_463482:
L_203682:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_203683+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_203683
.p2align 0x4
.long 0x2E28
L_203683:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	jmp L_203444
.p2align 0x4
.long 0x2E12
L_203445:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_203446
L_203680:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_203681+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_203681
.p2align 0x4
.long 0x2E27
L_203681:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_203446:
	movq $0x3323,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x80(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_203447+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_6
.p2align 0x4
.long 0x2E12
L_203447:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_203448
L_203678:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_203679+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_203679
.p2align 0x4
.long 0x2E27
L_203679:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_203448:
	movq 0x60(%rbp),%r15
	cmpq $0x1,%r15
	je length_66
L_203449:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xEBE,%r14
	je L_463504
	cmpq $0xEBF,%r14
	je L_463503
	cmpq $0xEC0,%r14
	je L_463502
	cmpq $0xEC1,%r14
	je L_463501
	cmpq $0xEC2,%r14
	je L_463486
	cmpq $0xEC3,%r14
	je L_463485
L_203450:
	movq 0x0(%r15),%r14
	movq %r14,0x88(%rbp)
	movq $0x33A9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (length_30+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_5
.p2align 0x4
L_463485:
L_203675:
	movq 0x20(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x90(%rbp)
	movq $0x33A9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_203676+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_5
.p2align 0x4
L_463486:
L_203628:
	movq 0x8(%r15),%r11
	movq %r11,0x78(%rbp)
	movq 0x0(%r15),%r10
	movq %r10,0x80(%rbp)
	movq 0x38(%rbp),%r10
	movq 0x8(%r10),%r9
	movq %r9,0x88(%rbp)
	movq 0x0(%r10),%r9
	movq 0x8(%r9),%r8
	movq %r8,0x90(%rbp)
	movq 0x0(%r9),%r14
	movq 0x10(%r11),%r10
	movq %r10,0x98(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_463500
L_203629:
	movq %r15,0x0(%r11)
	movq 0x0(%r10),%r11
	cmpq $0x1,%r11
	je L_463499
L_203630:
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r11
	movl $0x0,0x24(%rbp)
	movq %r11,%r15
.p2align 0x4,,0x7
L_203632:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_463498
L_203664:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xCB3,%r11
	jne L_463497
L_203665:
	movq 0x8(%r13),%r11
	movq %r11,0x60(%rbp)
	cmpq 0x0(%r13),%r14
	movq %r14,(localObjptr+0x8)(%rip)
	je L_463493
L_203633:
	movl 0x24(%rbp),%r11d
	incl %r11d
	movl %r11d,0x60(%rbp)
	jo L_463492
L_203634:
	cmpq $0x1,%r15
	je L_463487
L_203635:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movl %r11d,0x24(%rbp)
	movq (localObjptr+0x8)(%rip),%r14
	jmp L_203632
.p2align 0x4
L_463487:
L_203636:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_203637
L_203662:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_203663+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_203663
.p2align 0x4
.long 0x2E24
L_203663:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_203637:
	movl 0x60(%rbp),%ecx
L_203638:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_463490
L_203639:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_203641
L_203661:
	movl %ecx,0x0(%r15)
L_203641:
	movq $0x1411,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movb $0x2,%r14b
	movzbl %r14b,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x1967,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x90(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq 0x98(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r10,0x0(%r13)
x_685:
	cmpb $0x1,0x0(%r15)
	je L_463488
L_203642:
	movq 0x78(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_203643+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_463488:
L_203660:
	movq $0x33A9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x80(%rbp),%r14
	movq %r14,0x88(%rbp)
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (length_30+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_5
.p2align 0x4
L_463490:
L_203515:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_463492:
L_203509:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_463493:
L_203667:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_203668
L_203672:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_203673+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_203673
.p2align 0x4
.long 0x2E25
L_203673:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_203668:
	movl 0x24(%rbp),%r14d
	movslq %r14d,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_203515
L_203669:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %r14d,0x0(%r13)
	jl L_463494
L_203670:
	movq 0x60(%rbp),%r15
	jmp x_685
.p2align 0x4
L_463494:
L_203671:
	movq (globalObjptr+0x1078)(%rip),%r14
	movl 0x24(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movq 0x60(%rbp),%r15
	jmp x_685
.p2align 0x4
L_463497:
	movq %r14,(localObjptr+0x8)(%rip)
	jmp L_203633
.p2align 0x4
L_463498:
	movq %r14,(localObjptr+0x8)(%rip)
	jmp L_203633
.p2align 0x4
L_463499:
L_203674:
	xorl %ecx,%ecx
	jmp L_203638
.p2align 0x4
L_463500:
L_203503:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_463501:
L_203472:
	movq 0x10(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x80(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x88(%rbp)
	movq %r14,0x98(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0xA0(%rbp)
	addq $0x98,%rbp
	leaq (L_203473+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1389
.p2align 0x4
L_463502:
L_203471:
	movq 0x0(%r15),%r14
	movq %r14,0x88(%rbp)
	movq $0x33A9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (length_30+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_5
.p2align 0x4
L_463503:
L_203470:
	movq 0x0(%r15),%r14
	movq %r14,0x88(%rbp)
	movq $0x33A9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (length_30+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_5
.p2align 0x4
L_463504:
L_203469:
	movq 0x0(%r15),%r14
	movq %r14,0x88(%rbp)
	movq $0x33A9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (length_30+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_5
.p2align 0x4
length_66:
length_31:
	movq 0x58(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x24(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_463507
L_203454:
	cmpl $0x0,%r13d
	jl L_463506
L_203455:
	movl $0x0,0x60(%rbp)
loop_2235:
	movl 0x24(%rbp),%r15d
	cmpl %r15d,0x60(%rbp)
	jl L_463505
L_203456:
	movq $0x3317,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x80(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_203457+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_6
.p2align 0x4
L_463505:
L_203461:
	movslq 0x60(%rbp),%r15
	movq 0x58(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x80(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x98(%rbp)
	movl 0x20(%rbp),%r15d
	movl %r15d,0xA0(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0xA8(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0xB0(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0x80,%rbp
	leaq (L_203462+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3922
.p2align 0x4
L_463506:
L_203466:
	movq (globalObjptr+0x4F8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_463507:
L_203453:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x2E13
length_30:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb length_31
L_203467:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_203468+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_203468
.p2align 0x4
.long 0x2E16
L_203468:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	jmp length_31
.p2align 0x4
.long 0x2E26
L_203676:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (length_30+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_76
.p2align 0x4
.long 0x1
L_203643:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (toString_302+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x2E17
L_203473:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_203474
L_203626:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_203627+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_203627
.p2align 0x4
.long 0x2E23
L_203627:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_203474:
	movq 0x88(%rbp),%r11
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0x1206,%r15
	je L_463542
L_203502:
	movq 0x0(%r11),%r10
	movq %r10,0x60(%rbp)
	movq 0x30(%rbp),%r11
	movq 0x0(%r11),%r10
	movq %r10,0x90(%rbp)
	movq 0x8(%r11),%r10
	movq 0x8(%r10),%r9
	movq %r9,0x98(%rbp)
	movq 0x0(%r10),%r14
	movq 0x78(%rbp),%r11
	movq 0x10(%r11),%r10
	movq %r10,0xA0(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_203503
L_203504:
	movq %r15,0x0(%r11)
	movq 0x0(%r10),%r11
	cmpq $0x1,%r11
	je L_463540
L_203505:
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r11
	movl $0x0,0x24(%rbp)
	movq %r11,%r15
.p2align 0x4,,0x7
L_203507:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_463539
L_203615:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xCE9,%r11
	jne L_463538
L_203616:
	movq 0x8(%r13),%r11
	movq %r11,0x88(%rbp)
	cmpq %r14,0x0(%r13)
	movq %r14,(localObjptr+0x8)(%rip)
	je L_463534
L_203508:
	movl 0x24(%rbp),%r11d
	incl %r11d
	movl %r11d,0x88(%rbp)
	jo L_203509
L_203510:
	cmpq $0x1,%r15
	je L_463509
L_203511:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movl %r11d,0x24(%rbp)
	movq (localObjptr+0x8)(%rip),%r14
	jmp L_203507
.p2align 0x4
L_463509:
L_203512:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_203513
L_203613:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_203614+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_203614
.p2align 0x4
.long 0x2E21
L_203614:
	addq $0xFFFFFFFFFFFFFF50,%rbp
L_203513:
	movl 0x88(%rbp),%ecx
L_203514:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_203515
L_203516:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_203518
L_203612:
	movl %ecx,0x0(%r15)
L_203518:
	movq $0x13EB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x2,0x0(%r15)
	movq $0x19D3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x98(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq 0xA0(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r10,0x0(%r13)
L_203519:
	movq 0x0(%r15),%r14
L_203520:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_463529
L_203539:
	movq 0x8(%r14),%r15
L_203540:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_203541
L_203542:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xEB4,%r14
	jne L_463527
L_203543:
	movq 0x0(%r15),%r11
	movq %r11,0x78(%rbp)
	movq 0x28(%rbp),%r10
	movq 0x0(%r10),%r9
	movq %r9,0x88(%rbp)
	movq 0x8(%r10),%r9
	movq 0x8(%r9),%r8
	movq %r8,0x90(%rbp)
	movq 0x0(%r9),%r14
	movq 0x10(%r11),%r10
	movq %r10,0x98(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_203503
L_203544:
	movq %r15,0x0(%r11)
	movq 0x0(%r10),%r11
	cmpq $0x1,%r11
	je L_463525
L_203545:
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r11
	xorl %ecx,%ecx
	movq %r11,%r15
.p2align 0x4,,0x7
L_203547:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_463524
L_203604:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xCE8,%r11
	jne L_463523
L_203605:
	movq 0x8(%r13),%r11
	cmpq %r14,0x0(%r13)
	movq %r14,(localObjptr+0x10)(%rip)
	je L_463520
L_203548:
	incl %ecx
	movl %ecx,0x24(%rbp)
	jo L_203509
L_203549:
	cmpq $0x1,%r15
	je L_463510
L_203550:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x10)(%rip),%r14
	jmp L_203547
.p2align 0x4
L_463510:
L_203551:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_203552
L_203602:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_203603+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_203603
.p2align 0x4
.long 0x2E20
L_203603:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_203552:
	movl 0x24(%rbp),%ecx
L_203553:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_203515
L_203554:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_203556
L_203601:
	movl %ecx,0x0(%r15)
L_203556:
	movq $0x13ED,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x0,0x0(%r15)
	movq $0x19D1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x90(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq 0x98(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r10,0x0(%r13)
L_203557:
	movq 0x0(%r15),%r14
	movq %r14,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	jne L_463514
L_203579:
	shrq $0x1,%r14
	movl %r14d,%r15d
	movslq %r15d,%r14
	shlq $0x1,%r14
	orq $0x1,%r14
	movq %r14,0x78(%rbp)
	movl 0x20(%rbp),%r15d
	movl %r15d,%r14d
	decl %r14d
	movl %r14d,0x24(%rbp)
	movslq %r15d,%rdx
	movq %rdx,0x88(%rbp)
	cmpq $0x7FFFFFFF,%rdx
	ja L_463513
L_203580:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xD09,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_203581+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_203581
.p2align 0x4
.long 0x2E1D
L_203581:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq %rax,0x90(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2237:
	cmpq 0x88(%rbp),%r15
	jnl L_463511
L_203599:
	movq 0x90(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_2237
.p2align 0x4
L_463511:
L_203582:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_203583
L_203597:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_203598+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_203598
.p2align 0x4
.long 0x2E1F
L_203598:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_203583:
	movq $0x4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x4B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movl 0x24(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x361F,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x20,%r12
	movq 0x90(%rbp),%r15
	movq %r15,0x10(%r13)
	movq %r13,0x98(%rbp)
	movb $0xE,0x90(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0xA0(%rbp)
	addq $0x90,%rbp
	leaq (L_203584+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldP_1
.p2align 0x4
L_463513:
L_203501:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_463514:
L_203558:
	movq 0x88(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x78(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x80(%rbp)
	movq 0x18(%r15),%r11
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	jne L_463515
L_203577:
	movq %r11,0x90(%rbp)
	movq %r14,0x98(%rbp)
	addq $0x90,%rbp
	leaq (L_203578+0x0)(%rip),%r14
	movq %r14,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unique_0
.p2align 0x4
L_463515:
L_203559:
L_203560:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (toString_301+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_463520:
L_203607:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_203515
L_203608:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_463521
L_203610:
	movl %ecx,0x0(%r14)
	movq %r11,%r15
	jmp L_203557
.p2align 0x4
L_463521:
L_203609:
	movq %r11,%r15
	jmp L_203557
.p2align 0x4
L_463523:
	movq %r14,(localObjptr+0x10)(%rip)
	jmp L_203548
.p2align 0x4
L_463524:
	movq %r14,(localObjptr+0x10)(%rip)
	jmp L_203548
.p2align 0x4
L_463525:
L_203611:
	xorl %ecx,%ecx
	jmp L_203553
.p2align 0x4
L_463527:
L_203541:
	movq (globalObjptr+0x1EC8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_463529:
L_203521:
	movq 0x78(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_203522+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_463534:
L_203618:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_203619
L_203623:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_203624+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_203624
.p2align 0x4
.long 0x2E22
L_203624:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_203619:
	movl 0x24(%rbp),%r14d
	movslq %r14d,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_203515
L_203620:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %r14d,0x0(%r13)
	jl L_463535
L_203621:
	movq 0x88(%rbp),%r15
	jmp L_203519
.p2align 0x4
L_463535:
L_203622:
	movq (globalObjptr+0x1078)(%rip),%r14
	movl 0x24(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movq 0x88(%rbp),%r15
	jmp L_203519
.p2align 0x4
L_463538:
	movq %r14,(localObjptr+0x8)(%rip)
	jmp L_203508
.p2align 0x4
L_463539:
	movq %r14,(localObjptr+0x8)(%rip)
	jmp L_203508
.p2align 0x4
L_463540:
L_203625:
	xorl %ecx,%ecx
	jmp L_203514
.p2align 0x4
L_463542:
L_203475:
	movq 0x8(%r11),%r15
	movq %r15,0x60(%rbp)
	movq 0x0(%r11),%r15
	movq %r15,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_203476+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x2E14
L_203457:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_203458
L_203459:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_203460+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_203460
.p2align 0x4
.long 0x2E15
L_203460:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_203458:
	movq $0x3421,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp foreachi_2
.p2align 0x4
.long 0x2E13
L_203462:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_203463
L_203464:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_203465+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_203465
.p2align 0x4
.long 0x2E16
L_203465:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_203463:
	incl 0x60(%rbp)
	jmp loop_2235
.p2align 0x4
.long 0x1
toString_302:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (rev_300+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x2E18
L_203584:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x60(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	movq %r11,0x88(%rbp)
	jne L_203453
L_203586:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_203587
L_203595:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_203596+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_203596
.p2align 0x4
.long 0x2E1E
L_203596:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_203587:
	movq 0x88(%rbp),%rsi
	shlq $0x1,%rsi
	orq $0x1,%rsi
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0x78(%rbp),%rdi
	xorq %rax,%rax
	call IntInf_equal
L_203588:
	cmpq $0x1,0x80(%rbp)
	je L_463546
L_203589:
	testl %eax,%eax
	jz length_31
L_203490:
	movq (globalObjptr+0x1EC0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_463546:
L_203592:
	testl %eax,%eax
	jnz length_31
L_203493:
	movq (globalObjptr+0x1EB8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xE14
L_203578:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0x80(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp L_203560
.p2align 0x4
.long 0x1
toString_301:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (rev_299+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x1
L_203522:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (toString_300+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x2E18
L_203476:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movl 0x90(%rbp),%r15d
	movl %r15d,0x24(%rbp)
	movl %r15d,0x90(%rbp)
	movq $0x3,0x98(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0xA0(%rbp)
	addq $0x90,%rbp
	leaq (L_203477+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x1
rev_300:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_463551
L_203644:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_203645:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_463550
.p2align 0x4,,0x7
L_203646:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_463549
L_203647:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_203645
.p2align 0x4
L_463549:
L_203649:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_203650+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_463550:
L_203657:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_203658+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_203658
.p2align 0x4
.long 0x45B
L_203658:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_203646
.p2align 0x4
L_463551:
L_203659:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_203649
.p2align 0x4
.long 0x1
rev_299:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_463554
L_203561:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_203562:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_463553
.p2align 0x4,,0x7
L_203563:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_463552
L_203564:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_203562
.p2align 0x4
L_463552:
L_203566:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_203567+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_463553:
L_203574:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_203575+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_203575
.p2align 0x4
.long 0x45B
L_203575:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_203563
.p2align 0x4
L_463554:
L_203576:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_203566
.p2align 0x4
.long 0x1
toString_300:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (rev_298+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x2E18
L_203477:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x78(%rbp)
	movl 0x20(%rbp),%r15d
	movl %r15d,%r14d
	decl %r14d
	movl %r14d,0x24(%rbp)
	movslq %r15d,%rdx
	movq %rdx,0x88(%rbp)
	cmpq $0x7FFFFFFF,%rdx
	ja L_203501
L_203478:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xD01,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_203479+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_203479
.p2align 0x4
.long 0x2E19
L_203479:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq %rax,0x90(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2236:
	cmpq 0x88(%rbp),%r15
	jnl L_463555
L_203499:
	movq 0x90(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_2236
.p2align 0x4
L_463555:
L_203480:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_203481
L_203497:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_203498+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_203498
.p2align 0x4
.long 0x2E1C
L_203498:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_203481:
	movq $0xD03,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x90(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x4B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x4B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movl 0x24(%rbp),%r11d
	movl %r11d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq $0x364D,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	movq %r15,0x10(%r11)
	addq $0x28,%r12
	movq 0x10(%rbp),%r15
	movq %r15,0x18(%r11)
	movq %r11,0x98(%rbp)
	movb $0xC,0x90(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0xA0(%rbp)
	addq $0x90,%rbp
	leaq (L_203482+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldP_0
.p2align 0x4
.long 0x1
L_203650:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_203651
L_203655:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_203656+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_203656
.p2align 0x4
.long 0x451
L_203656:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_203651:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xE70)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xEFD0)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_572+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x1
L_203567:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_203568
L_203572:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_203573+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_203573
.p2align 0x4
.long 0x451
L_203573:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_203568:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xE70)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xEFD0)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_571+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x1
rev_298:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_463562
L_203523:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_203524:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_463561
.p2align 0x4,,0x7
L_203525:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_463560
L_203526:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_203524
.p2align 0x4
L_463560:
L_203528:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_203529+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_463561:
L_203536:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_203537+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_203537
.p2align 0x4
.long 0x45B
L_203537:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_203525
.p2align 0x4
L_463562:
L_203538:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_203528
.p2align 0x4
.long 0x2E1A
L_203482:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x60(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	movq %r11,0x88(%rbp)
	jne L_203453
L_203484:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_203485
L_203495:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_203496+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_203496
.p2align 0x4
.long 0x2E1B
L_203496:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_203485:
	movq 0x88(%rbp),%rsi
	shlq $0x1,%rsi
	orq $0x1,%rsi
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0x78(%rbp),%rdi
	xorq %rax,%rax
	call IntInf_equal
L_203486:
	cmpq $0x1,0x80(%rbp)
	je L_463564
L_203487:
	testl %eax,%eax
	jnz L_203490
	jmp length_31
.p2align 0x4
L_463564:
L_203491:
	testl %eax,%eax
	jnz length_31
	jmp L_203493
.p2align 0x4
.long 0x1
bug_572:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_203652
L_203653:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_203654+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_203654
.p2align 0x4
.long 0x451
L_203654:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_203652:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
bug_571:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_203569
L_203570:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_203571+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_203571
.p2align 0x4
.long 0x451
L_203571:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_203569:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_203529:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_203530
L_203534:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_203535+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_203535
.p2align 0x4
.long 0x451
L_203535:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_203530:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xE70)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xEFD0)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_570+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x1
bug_570:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_203531
L_203532:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_203533+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_203533
.p2align 0x4
.long 0x451
L_203533:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_203531:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl typeCheck_1
.hidden typeCheck_1
typeCheck_1:
L_203684:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x118(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_203685
L_203923:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x128,%rbp
	leaq (L_203924+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_203924
.p2align 0x4
.long 0x2E48
L_203924:
	addq $0xFFFFFFFFFFFFFED8,%rbp
L_203685:
	movq 0x0(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x120(%rbp)
	movq %r15,0x130(%rbp)
	movq 0x108(%rbp),%r15
	movq %r15,0x138(%rbp)
	addq $0x130,%rbp
	leaq (L_203686+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1895
.p2align 0x4
.long 0x2E29
L_203686:
	addq $0xFFFFFFFFFFFFFED0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_203687
L_203921:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x130,%rbp
	leaq (L_203922+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_203922
.p2align 0x4
.long 0x2E47
L_203922:
	addq $0xFFFFFFFFFFFFFED0,%rbp
L_203687:
	movq 0x100(%rbp),%r15
	cmpb $0x7,0x0(%r15)
	je outputc_4
L_203688:
	movq 0x0(%rbp),%r15
	movq %r15,0x130(%rbp)
	movq 0xF8(%rbp),%r15
	movq %r15,0x138(%rbp)
	addq $0x130,%rbp
	leaq (outputc_0+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1895
.p2align 0x4
outputc_4:
outputc_1:
	movq $0x7E1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xF8(%rbp)
	addq $0x18,%r12
	movq 0xF0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r14,0x8(%r15)
	movq $0xA4F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x100(%rbp)
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0xE8(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0xE0(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x108(%rbp)
	movq $0xA51,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x128(%rbp)
	addq $0x30,%r12
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	movq 0xC8(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0xD0(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0xD8(%rbp),%r14
	movq %r14,0x20(%r15)
	movq $0x71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x47B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x130(%rbp)
	addq $0x18,%r12
	movq 0xC0(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq $0x32AF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x20,%r12
	movq 0xB8(%rbp),%r15
	movq %r15,0x10(%r14)
	movq %r14,0x140(%rbp)
	movq 0x120(%rbp),%r15
	movq %r15,0x148(%rbp)
	addq $0x140,%rbp
	leaq (L_203690+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_2
.p2align 0x4
.long 0x2E2A
outputc_0:
	addq $0xFFFFFFFFFFFFFED0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb outputc_1
L_203918:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x130,%rbp
	leaq (L_203919+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_203919
.p2align 0x4
.long 0x2E46
L_203919:
	addq $0xFFFFFFFFFFFFFED0,%rbp
	jmp outputc_1
.p2align 0x4
.long 0x2E2B
L_203690:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	movq (gcState+0x458)(%rip),%r15
	subq %r12,%r15
	cmpq $0x288,%r15
	jnb L_203691
L_203916:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	movq $0x288,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x140,%rbp
	leaq (L_203917+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_203917
.p2align 0x4
.long 0x2E45
L_203917:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
L_203691:
	movq $0xA53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0xB8(%rbp)
	addq $0xA0,%r12
	movq 0xF8(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0xE8(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x50(%rbp),%r13
	movq %r13,0x10(%r14)
	movq 0xD8(%rbp),%r13
	movq %r13,0x18(%r14)
	movq 0xD0(%rbp),%r11
	movq %r11,0x20(%r14)
	movq 0xC8(%rbp),%r10
	movq %r10,0x28(%r14)
	movq 0x58(%rbp),%r9
	movq %r9,0x30(%r14)
	movq 0xE0(%rbp),%r9
	movq %r9,0x38(%r14)
	movq 0x60(%rbp),%r9
	movq %r9,0x40(%r14)
	movq 0x68(%rbp),%r9
	movq %r9,0x48(%r14)
	movq 0x70(%rbp),%r9
	movq %r9,0x50(%r14)
	movq 0x78(%rbp),%r9
	movq %r9,0x58(%r14)
	movq 0x80(%rbp),%r9
	movq %r9,0x60(%r14)
	movq 0x88(%rbp),%r9
	movq %r9,0x68(%r14)
	movq 0x90(%rbp),%r9
	movq %r9,0x70(%r14)
	movq 0x98(%rbp),%r9
	movq %r9,0x78(%r14)
	movq 0xA0(%rbp),%r9
	movq %r9,0x80(%r14)
	movq 0xA8(%rbp),%r9
	movq %r9,0x88(%r14)
	movq 0xB0(%rbp),%r9
	movq %r9,0x90(%r14)
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r9
	movq %r9,0xC0(%rbp)
	movq 0x8(%r14),%r9
	movq %r9,0x138(%rbp)
	movq 0x10(%r14),%r9
	movq %r9,0x140(%rbp)
	movq $0x71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x47B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x48(%rbp),%r8
	movq %r8,0x0(%r14)
	movq %r15,0x8(%r14)
	movq $0x89,0x0(%r12)
	movq %r12,%rsp
	addq $0x8,%rsp
	movq %rsp,0x148(%rbp)
	movq %r15,0x0(%rsp)
	movq %r15,0x8(%rsp)
	addq $0x18,%r12
	movq $0x8FD,0x0(%r12)
	movq %r12,%rsp
	addq $0x8,%rsp
	movq %rsp,0x150(%rbp)
	movq %r14,0x8(%rsp)
	addq $0x40,%r12
	movq 0x108(%rbp),%r14
	movq %r14,0x0(%rsp)
	movq %r10,0x10(%rsp)
	movq %r11,0x18(%rsp)
	movq %r13,0x20(%rsp)
	movq 0x38(%rbp),%r14
	movq %r14,0x28(%rsp)
	movq 0x40(%rbp),%r14
	movq %r14,0x30(%rsp)
	movq $0x71,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x158(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x47B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x160(%rbp)
	addq $0x18,%r12
	movq %r8,0x0(%r13)
	movq %r14,0x8(%r13)
	movq $0x71,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x168(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x47B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x170(%rbp)
	addq $0x18,%r12
	movq %r8,0x0(%r13)
	movq %r14,0x8(%r13)
	cmpq $0x1,%r9
	je L_463574
L_203692:
	movq 0x8(%r9),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%r9),%r15
L_203693:
	movq 0x0(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x40(%rbp)
	movq 0x18(%r14),%r13
	movq %r13,0x50(%rbp)
	movq 0x20(%r14),%r13
	movq %r13,0x58(%rbp)
	movq 0x30(%r14),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movl %r15d,%r14d
	movslq %r14d,%r11
	cmpq %r11,%r15
	jne L_463573
L_203721:
	movl %r14d,0x188(%rbp)
	movq $0x3881,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq 0x148(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x180(%rbp)
	leaq L_203789(%rip),%r15
	movq %r15,0x110(%rbp)
	movq %rbp,%r15
	addq $0x118,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x180,%rbp
	leaq (L_203722+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_5
.p2align 0x4
L_463573:
L_203695:
	movq (globalObjptr+0x4D8)(%rip),%r15
L_203696:
	movq %r15,0x128(%rbp)
	movq 0x118(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x128,%rbp
	leaq (toString_303+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_0
.p2align 0x4
L_463574:
L_203754:
	movq $0xCDD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x38(%rbp)
	addq $0x80,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x130(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x100(%rbp),%r13
	movq %r13,0x20(%r15)
	movq 0x30(%rbp),%r11
	movq %r11,0x28(%r15)
	movq 0x150(%rbp),%r11
	movq %r11,0x30(%r15)
	movq 0x98(%rbp),%r10
	movq %r10,0x38(%r15)
	movq 0x170(%rbp),%r9
	movq %r9,0x40(%r15)
	movq 0x160(%rbp),%r8
	movq %r8,0x48(%r15)
	movq 0x128(%rbp),%r8
	movq %r8,0x50(%r15)
	movq 0xB8(%rbp),%rsp
	movq %rsp,0x58(%r15)
	movq %r11,0x60(%r15)
	movq %r8,0x68(%r15)
	movq %r9,0x70(%r15)
	movq 0x8(%rbp),%r15
	movq 0x30(%r15),%r9
	movq 0x28(%r15),%rsi
	movq 0x20(%r15),%rdi
	movq 0x38(%r15),%rdx
	movq 0x8(%rdx),%rcx
	movq $0x3D4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x68,%r12
	movq %r11,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r13,0x10(%r15)
	movq %rsp,0x18(%r15)
	movq %r11,0x20(%r15)
	movq 0xF0(%rbp),%r14
	movq %r14,0x28(%r15)
	movq %r14,0x30(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x38(%r15)
	movq %r10,0x40(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x48(%r15)
	movq %r8,0x50(%r15)
	movq 0x148(%rbp),%r14
	movq %r14,0x58(%r15)
	movq $0xCD1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x40(%rbp)
	movq %rcx,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r9,0x10(%r14)
	movq %rsi,0x18(%r14)
	movq %rdi,0x20(%r14)
	addq $0x30,%r12
	leaq L_203789(%rip),%r15
	movq %r15,0x110(%rbp)
	movq %rbp,%r15
	addq $0x118,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x1,0x180(%rbp)
	movl $0x0,0x188(%rbp)
	addq $0x180,%rbp
	leaq (L_203755+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_5
.p2align 0x4
.long 0x2E31
L_203722:
	addq $0xFFFFFFFFFFFFFE80,%rbp
	movq 0x180(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_203723
L_203913:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x180,%rbp
	leaq (L_203914+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_203914
.p2align 0x4
.long 0x2E44
L_203914:
	addq $0xFFFFFFFFFFFFFE80,%rbp
L_203723:
	movq 0x50(%rbp),%r15
	cmpq $0x1,%r15
	je L_463577
L_203724:
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_203695
L_203726:
	movl %r13d,0x188(%rbp)
	movq $0x3889,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq %r14,0x180(%rbp)
	addq $0x180,%rbp
	leaq (L_203727+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_5
.p2align 0x4
L_463577:
L_203910:
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_463579
L_203911:
	movq $0x1,0x40(%rbp)
	xchgq %r14,%r15
L_203730:
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_203695
L_203732:
	movl %r13d,0x188(%rbp)
	movq $0x387F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x180(%rbp)
	addq $0x10,%r12
	addq $0x180,%rbp
	leaq (L_203733+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_5
.p2align 0x4
L_463579:
L_203912:
	movq $0x1,%r13
	movq $0x1,%r11
	xchgq %r11,%r15
	xchgq %r13,%r14
L_203735:
	movq $0x13E5,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x40(%rbp)
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x20,%r12
	movq 0x68(%rbp),%r11
	movq %r11,0x10(%r13)
	movq 0x58(%rbp),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x50(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_463592
L_203737:
	movq %r15,0x0(%r13)
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_463591
L_203738:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_203740:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_203741
L_203897:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xCED,%r13
	jne L_203741
L_203898:
	movq 0x0(%r14),%r13
	cmpq %r13,0x158(%rbp)
	je L_463586
L_203741:
	incl %ecx
	movl %ecx,0x58(%rbp)
	jo L_463585
L_203743:
	cmpq $0x1,%r15
	je L_463580
L_203744:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_203740
.p2align 0x4
L_463580:
L_203745:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_203746
L_203895:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x180,%rbp
	leaq (L_203896+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_203896
.p2align 0x4
.long 0x2E43
L_203896:
	addq $0xFFFFFFFFFFFFFE80,%rbp
L_203746:
	movl 0x58(%rbp),%ecx
L_203747:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_463583
L_203749:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_203751
L_203894:
	movl %ecx,0x0(%r15)
L_203751:
	movq $0x19DB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x158(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x50(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	movq 0x38(%rbp),%r14
	cmpq $0x1,%r14
	je L_203754
L_203752:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x38(%rbp)
	jmp L_203693
.p2align 0x4
L_463583:
L_203748:
	movq (globalObjptr+0x1080)(%rip),%r15
	jmp L_203696
.p2align 0x4
L_463585:
L_203742:
	movq $0x3,%r15
	jmp L_203696
.p2align 0x4
L_463586:
L_203900:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_203748
L_203901:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_463587
L_203903:
	movl %ecx,0x0(%r14)
	movq (globalObjptr+0x578)(%rip),%r15
	jmp L_203696
.p2align 0x4
L_463587:
L_203902:
	movq (globalObjptr+0x578)(%rip),%r15
	jmp L_203696
.p2align 0x4
L_463591:
L_203904:
	xorl %ecx,%ecx
	jmp L_203747
.p2align 0x4
L_463592:
L_203736:
	movq (globalObjptr+0x1088)(%rip),%r15
	jmp L_203696
.p2align 0x4
.long 0x2E37
L_203789:
	addq $0xFFFFFFFFFFFFFEE8,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	jmp L_203696
.p2align 0x4
.long 0x2E2C
toString_303:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movq 0x128(%rbp),%r15
	movq %r15,0xF8(%rbp)
	movq $0x1,0x128(%rbp)
	movq %r15,0x130(%rbp)
	addq $0x128,%rbp
	leaq (rev_301+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x2E33
L_203755:
	addq $0xFFFFFFFFFFFFFE80,%rbp
	movq 0x180(%rbp),%r13
	movq %r13,0x50(%rbp)
	movq 0xC0(%rbp),%r13
	movq 0x10(%r13),%r15
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r14
	incq %r14
	jo L_203736
L_203756:
	movq %r14,0x0(%r13)
	movq 0x0(%r15),%r13
	cmpq $0x1,%r13
	je L_463602
L_203757:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_203759:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_203760
L_203799:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0xCED,%r13
	jne L_203760
L_203800:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	cmpq %r11,0x158(%rbp)
	je L_463597
L_203760:
	incl %ecx
	jo L_203742
L_203761:
	cmpq $0x1,%r14
	je L_463594
L_203762:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_203759
.p2align 0x4
L_463594:
L_203763:
L_203764:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_203748
L_203765:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl x_686
L_203798:
	movl %ecx,0x0(%r15)
x_686:
	movq 0xC0(%rbp),%r15
	movq %r15,0x128(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x130(%rbp)
	addq $0x128,%rbp
	leaq (L_203767+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_463597:
L_203802:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_203748
L_203803:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_463598
L_203892:
	movl %ecx,0x0(%r14)
	movq %r13,%r15
L_203805:
	movq 0x10(%r15),%r14
	movq %r14,0x180(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x188(%rbp)
	movq (globalObjptr+0xCE00)(%rip),%r15
	movq %r15,0x190(%rbp)
	movq 0x128(%rbp),%r15
	movq %r15,0x198(%rbp)
	addq $0x180,%rbp
	leaq (L_203806+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp coerces_1
.p2align 0x4
L_463598:
L_203804:
	movq %r13,%r15
	jmp L_203805
.p2align 0x4
L_463602:
L_203893:
	xorl %ecx,%ecx
	jmp L_203764
.p2align 0x4
.long 0x2E32
L_203727:
	addq $0xFFFFFFFFFFFFFE80,%rbp
	movq 0x180(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_203728
L_203908:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x180,%rbp
	leaq (L_203909+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_203909
.p2align 0x4
.long 0x2E44
L_203909:
	addq $0xFFFFFFFFFFFFFE80,%rbp
L_203728:
	movq 0x40(%rbp),%r15
	cmpq $0x1,%r15
	je L_463604
L_203729:
	movq 0x50(%rbp),%r14
	movq %r14,0x40(%rbp)
	jmp L_203730
.p2align 0x4
L_463604:
L_203907:
	movq $0x1,%r14
	movq 0x50(%rbp),%r13
	xchgq %r13,%r15
	jmp L_203735
.p2align 0x4
.long 0x2E32
L_203733:
	addq $0xFFFFFFFFFFFFFE80,%rbp
	movq 0x180(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_203734
L_203905:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x180,%rbp
	leaq (L_203906+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_203906
.p2align 0x4
.long 0x2E44
L_203906:
	addq $0xFFFFFFFFFFFFFE80,%rbp
L_203734:
	movq 0x50(%rbp),%r14
	movq 0x40(%rbp),%r15
	jmp L_203735
.p2align 0x4
.long 0x2E2C
rev_301:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movq 0x128(%rbp),%r15
	movq %r15,0xF8(%rbp)
	cmpq $0x1,%r15
	je L_463609
L_203697:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0xF8(%rbp)
	movq %r14,0x100(%rbp)
	movq $0x1,0x108(%rbp)
.p2align 0x4,,0x7
L_203698:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_463608
.p2align 0x4,,0x7
L_203699:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x100(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x108(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xF8(%rbp),%r14
	cmpq $0x1,%r14
	je L_463607
L_203700:
	movq %r15,0x108(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0xF8(%rbp)
	movq %r15,0x100(%rbp)
	jmp L_203698
.p2align 0x4
L_463607:
L_203702:
	movq %r15,0x128(%rbp)
	addq $0x128,%rbp
	leaq (L_203703+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_463608:
L_203718:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x128,%rbp
	leaq (L_203719+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_203719
.p2align 0x4
.long 0x2E30
L_203719:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	jmp L_203699
.p2align 0x4
L_463609:
L_203720:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_203702
.p2align 0x4
.long 0x2E2C
L_203767:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movq 0x128(%rbp),%r15
	movq %r15,0xF8(%rbp)
	movq %r15,0x128(%rbp)
	addq $0x128,%rbp
	leaq (L_203768+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x2E3A
L_203806:
	addq $0xFFFFFFFFFFFFFE80,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_203807
L_203890:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x180,%rbp
	leaq (L_203891+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_203891
.p2align 0x4
.long 0x2E42
L_203891:
	addq $0xFFFFFFFFFFFFFE80,%rbp
L_203807:
	movq $0x3319,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x180(%rbp)
	movq 0x138(%rbp),%r15
	movq %r15,0x188(%rbp)
	addq $0x180,%rbp
	leaq (L_203808+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_6
.p2align 0x4
.long 0x2E2C
L_203703:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movq 0x128(%rbp),%r15
	movq %r15,0xF8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_203704
L_203716:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x128,%rbp
	leaq (L_203717+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_203717
.p2align 0x4
.long 0x2E2F
L_203717:
	addq $0xFFFFFFFFFFFFFED8,%rbp
L_203704:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xF8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x10060)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x128(%rbp)
	addq $0x128,%rbp
	leaq (L_203705+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x2E2C
L_203768:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movq 0x128(%rbp),%r15
	movq %r15,0xF8(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x128(%rbp)
	addq $0x128,%rbp
	leaq (L_203769+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x2E3A
L_203808:
	addq $0xFFFFFFFFFFFFFE80,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_203809
L_203888:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x180,%rbp
	leaq (L_203889+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_203889
.p2align 0x4
.long 0x2E42
L_203889:
	addq $0xFFFFFFFFFFFFFE80,%rbp
L_203809:
	movq 0x140(%rbp),%r14
	cmpq $0x1,%r14
	je L_463612
L_203810:
	movq 0x8(%r14),%r13
	movq %r13,0x50(%rbp)
	movq 0x0(%r14),%r15
L_203811:
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x58(%rbp)
	movq 0x20(%r14),%r13
	movq %r13,0x60(%rbp)
	movq 0x28(%r14),%r13
	movq %r13,0x188(%rbp)
	movq $0x356B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x168(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r14,0x8(%r15)
	movq 0x148(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0x180(%rbp)
	addq $0x180,%rbp
	leaq (L_203812+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_4
.p2align 0x4
L_463612:
L_203866:
	movq 0x118(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x1,0x150(%rbp)
	movq 0x120(%rbp),%r15
	movq %r15,0x158(%rbp)
	addq $0x150,%rbp
	leaq (L_203867+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_2
.p2align 0x4
.long 0x2E2C
L_203705:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movq 0x128(%rbp),%r15
	movq %r15,0xF8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_203706
L_203714:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x128,%rbp
	leaq (L_203715+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_203715
.p2align 0x4
.long 0x2E2F
L_203715:
	addq $0xFFFFFFFFFFFFFED8,%rbp
L_203706:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xF8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x858)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xA808)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x128(%rbp)
	addq $0x128,%rbp
	leaq (L_203707+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x2E34
L_203769:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movq 0x128(%rbp),%r15
	movq %r15,0x100(%rbp)
	movq (globalObjptr+0xF080)(%rip),%r15
	movq %r15,0x128(%rbp)
	addq $0x128,%rbp
	leaq (L_203770+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x2E3B
L_203812:
	addq $0xFFFFFFFFFFFFFE80,%rbp
	movq 0x60(%rbp),%r13
	movq 0x10(%r13),%r15
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r14
	incq %r14
	jo L_203736
L_203813:
	movq %r14,0x0(%r13)
	movq 0x0(%r15),%r13
	cmpq $0x1,%r13
	je L_463623
L_203814:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_203816:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_203817
L_203855:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0xCED,%r13
	jne L_203817
L_203856:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	cmpq %r11,0x158(%rbp)
	je L_463618
L_203817:
	incl %ecx
	jo L_203742
L_203818:
	cmpq $0x1,%r14
	je L_463615
L_203819:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_203816
.p2align 0x4
L_463615:
L_203820:
L_203821:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_203748
L_203822:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl x_687
L_203854:
	movl %ecx,0x0(%r15)
x_687:
	movq 0x60(%rbp),%r15
	movq %r15,0x128(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x130(%rbp)
	addq $0x128,%rbp
	leaq (L_203824+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_463618:
L_203858:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_203748
L_203859:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_463619
L_203885:
	movl %ecx,0x0(%r14)
	movq %r13,%r15
L_203861:
	movq 0x0(%r15),%r14
	movq %r14,0x198(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x190(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x180(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x188(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x1A0(%rbp)
	movq 0x170(%rbp),%r15
	movq %r15,0x1A8(%rbp)
	addq $0x180,%rbp
	leaq (L_203862+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp visit_10
.p2align 0x4
L_463619:
L_203860:
	movq %r13,%r15
	jmp L_203861
.p2align 0x4
L_463623:
L_203886:
	xorl %ecx,%ecx
	jmp L_203821
.p2align 0x4
.long 0x2E3D
L_203867:
	addq $0xFFFFFFFFFFFFFEB0,%rbp
	movq $0x1,0x150(%rbp)
	movq 0x138(%rbp),%r15
	movq %r15,0x158(%rbp)
	addq $0x150,%rbp
	leaq (L_203868+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_6
.p2align 0x4
.long 0x2E2C
L_203707:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movq 0x128(%rbp),%r15
	movq %r15,0xF8(%rbp)
	movq %r15,0x128(%rbp)
	movq 0xF0(%rbp),%r15
	movq %r15,0x130(%rbp)
	addq $0x128,%rbp
	leaq (L_203708+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x2E35
L_203770:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movq 0x128(%rbp),%r15
	movq %r15,0x108(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x128(%rbp)
	addq $0x128,%rbp
	leaq (L_203771+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x2E2C
L_203824:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movq 0x128(%rbp),%r15
	movq %r15,0xF8(%rbp)
	movq %r15,0x128(%rbp)
	addq $0x128,%rbp
	leaq (L_203825+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x2E3C
L_203862:
	addq $0xFFFFFFFFFFFFFE80,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_203863
L_203883:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x180,%rbp
	leaq (L_203884+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_203884
.p2align 0x4
.long 0x2E41
L_203884:
	addq $0xFFFFFFFFFFFFFE80,%rbp
L_203863:
	movq 0x50(%rbp),%r14
	cmpq $0x1,%r14
	je L_203866
L_203864:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x50(%rbp)
	jmp L_203811
.p2align 0x4
.long 0x1EC1
L_203868:
	addq $0xFFFFFFFFFFFFFEB0,%rbp
	movq 0x140(%rbp),%r14
	cmpq $0x1,%r14
	je L_463627
L_203869:
	movq 0x8(%r14),%r13
	movq %r13,0x120(%rbp)
	movq 0x0(%r14),%r15
L_203870:
	movq 0x8(%r15),%r14
	movq %r14,0x128(%rbp)
	movq 0x0(%r15),%r14
	movq 0x28(%r14),%r13
	movq %r13,0x130(%rbp)
	movq 0x30(%r14),%r13
	movq %r13,0x148(%rbp)
	movq $0x1,0x140(%rbp)
	addq $0x140,%rbp
	leaq (L_203871+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_2
.p2align 0x4
L_463627:
L_203878:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x2E2C
L_203708:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_203709
L_203712:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x128,%rbp
	leaq (L_203713+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_203713
.p2align 0x4
.long 0x2E2E
L_203713:
	addq $0xFFFFFFFFFFFFFED8,%rbp
L_203709:
	movq $0x3E37,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xF0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x138(%rbp)
	movq (globalObjptr+0x9D8)(%rip),%r15
	movq %r15,0x128(%rbp)
	movq (globalObjptr+0x9D0)(%rip),%r15
	movq %r15,0x130(%rbp)
	addq $0x128,%rbp
	leaq (L_203710+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3780
.p2align 0x4
.long 0x2E36
L_203771:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movq 0x128(%rbp),%r15
	movq %r15,0x120(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_203772
L_203796:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x130,%rbp
	leaq (L_203797+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_203797
.p2align 0x4
.long 0x2E39
L_203797:
	addq $0xFFFFFFFFFFFFFED0,%rbp
L_203772:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x120(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x108(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x100(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x128(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0xF8(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_203773:
	addl 0x0(%r15),%ecx
	movl %ecx,0xF8(%rbp)
	jo L_203742
L_203774:
	cmpq $0x1,%r14
	je L_463629
L_203775:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_203773
.p2align 0x4
L_463629:
L_203776:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_203777
L_203794:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x138,%rbp
	leaq (L_203795+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_203795
.p2align 0x4
.long 0x2E38
L_203795:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
L_203777:
	movl 0xF8(%rbp),%ecx
	testl %ecx,%ecx
	jz L_463630
L_203778:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x128(%rbp),%r14
	movq %r14,0x0(%r15)
toString_304:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x130(%rbp)
	movq $0x1,0x128(%rbp)
	addq $0x128,%rbp
	leaq (rev_302+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_463630:
L_203793:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_304
.p2align 0x4
.long 0x2E2C
L_203825:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movq 0x128(%rbp),%r15
	movq %r15,0xF8(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x128(%rbp)
	addq $0x128,%rbp
	leaq (L_203826+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x2E3E
L_203871:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	movq $0x1,0x138(%rbp)
	movq 0x130(%rbp),%r15
	movq %r15,0x140(%rbp)
	addq $0x138,%rbp
	leaq (L_203872+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_4
.p2align 0x4
.long 0x2E2C
L_203710:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movq 0x128(%rbp),%r15
	movq %r15,0xF8(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x128(%rbp)
	movq 0xF0(%rbp),%r15
	movq %r15,0x130(%rbp)
	addq $0x128,%rbp
	leaq (L_203711+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x2E2C
rev_302:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movq 0x128(%rbp),%r15
	movq %r15,0xF8(%rbp)
	cmpq $0x1,%r15
	je L_463636
L_203779:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0xF8(%rbp)
	movq %r14,0x100(%rbp)
	movq $0x1,0x108(%rbp)
.p2align 0x4,,0x7
L_203780:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_463635
.p2align 0x4,,0x7
L_203781:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x100(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x108(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xF8(%rbp),%r14
	cmpq $0x1,%r14
	je L_463634
L_203782:
	movq %r15,0x108(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0xF8(%rbp)
	movq %r15,0x100(%rbp)
	jmp L_203780
.p2align 0x4
L_463634:
L_203784:
	movq %r15,0x128(%rbp)
	addq $0x128,%rbp
	leaq (L_203785+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_463635:
L_203790:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x128,%rbp
	leaq (L_203791+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_203791
.p2align 0x4
.long 0x2E30
L_203791:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	jmp L_203781
.p2align 0x4
L_463636:
L_203792:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_203784
.p2align 0x4
.long 0x2E34
L_203826:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movq 0x128(%rbp),%r15
	movq %r15,0x100(%rbp)
	movq (globalObjptr+0xF080)(%rip),%r15
	movq %r15,0x128(%rbp)
	addq $0x128,%rbp
	leaq (L_203827+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x2E3F
L_203872:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_203873
L_203880:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x138,%rbp
	leaq (L_203881+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_203881
.p2align 0x4
.long 0x2E40
L_203881:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
L_203873:
	movq 0x128(%rbp),%r14
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r13
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_463638
L_203874:
L_203875:
	movq $0x2937,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	addq $0x10,%r12
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	movq 0x120(%rbp),%r14
	cmpq $0x1,%r14
	je L_203878
L_203876:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x120(%rbp)
	jmp L_203870
.p2align 0x4
L_463638:
L_203879:
	movq (globalObjptr+0x1E50)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x2E2D
L_203711:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movq $0x15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x2E2C
L_203785:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movq 0x128(%rbp),%r15
	movq %r15,0xF8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_203786
L_203787:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x128,%rbp
	leaq (L_203788+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_203788
.p2align 0x4
.long 0x2E2F
L_203788:
	addq $0xFFFFFFFFFFFFFED8,%rbp
L_203786:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xF8(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_203696
.p2align 0x4
.long 0x2E35
L_203827:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movq 0x128(%rbp),%r15
	movq %r15,0x108(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x128(%rbp)
	addq $0x128,%rbp
	leaq (L_203828+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x2E36
L_203828:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movq 0x128(%rbp),%r15
	movq %r15,0x120(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_203829
L_203852:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x130,%rbp
	leaq (L_203853+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_203853
.p2align 0x4
.long 0x2E39
L_203853:
	addq $0xFFFFFFFFFFFFFED0,%rbp
L_203829:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x120(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x108(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x100(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x128(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0xF8(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_203830:
	addl 0x0(%r15),%ecx
	movl %ecx,0xF8(%rbp)
	jo L_203742
L_203831:
	cmpq $0x1,%r14
	je L_463641
L_203832:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_203830
.p2align 0x4
L_463641:
L_203833:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_203834
L_203850:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x138,%rbp
	leaq (L_203851+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_203851
.p2align 0x4
.long 0x2E38
L_203851:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
L_203834:
	movl 0xF8(%rbp),%ecx
	testl %ecx,%ecx
	jz L_463642
L_203835:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x128(%rbp),%r14
	movq %r14,0x0(%r15)
toString_305:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x130(%rbp)
	movq $0x1,0x128(%rbp)
	addq $0x128,%rbp
	leaq (rev_303+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_463642:
L_203849:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_305
.p2align 0x4
.long 0x2E2C
rev_303:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movq 0x128(%rbp),%r15
	movq %r15,0xF8(%rbp)
	cmpq $0x1,%r15
	je L_463648
L_203836:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0xF8(%rbp)
	movq %r14,0x100(%rbp)
	movq $0x1,0x108(%rbp)
.p2align 0x4,,0x7
L_203837:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_463647
.p2align 0x4,,0x7
L_203838:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x100(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x108(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xF8(%rbp),%r14
	cmpq $0x1,%r14
	je L_463646
L_203839:
	movq %r15,0x108(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0xF8(%rbp)
	movq %r15,0x100(%rbp)
	jmp L_203837
.p2align 0x4
L_463646:
L_203841:
	movq %r15,0x128(%rbp)
	addq $0x128,%rbp
	leaq (L_203842+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_463647:
L_203846:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x128,%rbp
	leaq (L_203847+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_203847
.p2align 0x4
.long 0x2E30
L_203847:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	jmp L_203838
.p2align 0x4
L_463648:
L_203848:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_203841
.p2align 0x4
.long 0x2E2C
L_203842:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movq 0x128(%rbp),%r15
	movq %r15,0xF8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_203843
L_203844:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x128,%rbp
	leaq (L_203845+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_203845
.p2align 0x4
.long 0x2E2F
L_203845:
	addq $0xFFFFFFFFFFFFFED8,%rbp
L_203843:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xF8(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_203696
