/* MLton 20130715 (built Mon Jun 13 11:54:01 AEST 2016 on ports.extensibl.com) */
/*   created this file on Mon Jun 13 12:10:02 2016. */
/* Do not edit this file. */
/* Flag settings:  */
/*    align: 8 */
/*    atMLtons: (mlton-compile, @MLton, --) */
/*    chunk: chunk per function */
/*    closureConvertGlobalize: true */
/*    closureConvertShrink: true */
/*    codegen: amd64 */
/*    contifyIntoMain: false */
/*    debug: false */
/*    defaultChar: char8 */
/*    defaultWideChar: widechar32 */
/*    defaultInt: int32 */
/*    defaultReal: real64 */
/*    defaultWord: word32 */
/*    diag passes: [] */
/*    drop passes: [] */
/*    elaborate allowConstant (default): false */
/*    elaborate allowConstant (enabled): true */
/*    elaborate allowFFI (default): false */
/*    elaborate allowFFI (enabled): true */
/*    elaborate allowPrim (default): false */
/*    elaborate allowPrim (enabled): true */
/*    elaborate allowOverload (default): false */
/*    elaborate allowOverload (enabled): true */
/*    elaborate allowRebindEquals (default): false */
/*    elaborate allowRebindEquals (enabled): true */
/*    elaborate deadCode (default): false */
/*    elaborate deadCode (enabled): true */
/*    elaborate forceUsed (default): false */
/*    elaborate forceUsed (enabled): true */
/*    elaborate ffiStr (default):  */
/*    elaborate ffiStr (enabled): true */
/*    elaborate nonexhaustiveExnMatch (default): default */
/*    elaborate nonexhaustiveExnMatch (enabled): true */
/*    elaborate nonexhaustiveMatch (default): warn */
/*    elaborate nonexhaustiveMatch (enabled): true */
/*    elaborate redundantMatch (default): warn */
/*    elaborate redundantMatch (enabled): true */
/*    elaborate resolveScope (default): strdec */
/*    elaborate resolveScope (enabled): true */
/*    elaborate sequenceNonUnit (default): warn */
/*    elaborate sequenceNonUnit (enabled): true */
/*    elaborate warnUnused (default): true */
/*    elaborate warnUnused (enabled): true */
/*    elaborate only: false */
/*    emit main: true */
/*    export header: None */
/*    exn history: false */
/*    generated output format: executable */
/*    gc check: Limit */
/*    indentation: 3 */
/*    inlineIntoMain: true */
/*    inlineLeafA: {loops = true, repeat = true, size = Some 20} */
/*    inlineLeafB: {loops = true, repeat = true, size = Some 40} */
/*    inlineNonRec: {small = 60, product = 320} */
/*    input file: mlton */
/*    keep CoreML: false */
/*    keep def use: true */
/*    keep dot: false */
/*    keep Machine: false */
/*    keep passes: [] */
/*    keep RSSA: false */
/*    keep SSA: false */
/*    keep SSA2: false */
/*    keep SXML: false */
/*    keep XML: false */
/*    extra_: false */
/*    lib dir: /usr/ports/pobj/mlton-20130715/mlton-on-20130715-release/build/lib */
/*    lib target dir: /usr/ports/pobj/mlton-20130715/mlton-on-20130715-release/build/lib/targets/self */
/*    loop passes: 1 */
/*    mark cards: true */
/*    max function size: 10000 */
/*    mlb path vars: [{var = MLTON_ROOT, path = $(LIB_MLTON_DIR)/sml}, {var = SML_LIB, path = $(LIB_MLTON_DIR)/sml}] */
/*    native commented: 0 */
/*    native live stack: false */
/*    native optimize: 1 */
/*    native move hoist: true */
/*    native copy prop: true */
/*    native copy prop cutoff: 1000 */
/*    native cutoff: 100 */
/*    native live transfer: 8 */
/*    native shuffle: true */
/*    native ieee fp: false */
/*    native split: Some 20000 */
/*    optimizationPasses: [<ssa2::default>, <ssa::default>, <sxml::default>, <xml::default>] */
/*    polyvariance: Some {hofo = true, rounds = 2, small = 30, product = 300} */
/*    prefer abs paths: false */
/*    prof passes: [] */
/*    profile: None */
/*    profile branch: false */
/*    profile C: [] */
/*    profile IL: ProfileSource */
/*    profile include/exclude: [(Seq [Star [.], Or [Seq [Seq [[$], [(], [S], [M], [L], [_], [L], [I], [B], [)]]]], Star [.]], false)] */
/*    profile raise: false */
/*    profile stack: false */
/*    profile val: false */
/*    show basis: None */
/*    show def-use: None */
/*    show types: true */
/*    target: self */
/*    target arch: AMD64 */
/*    target OS: OpenBSD */
/*    type check: false */
/*    verbosity: Pass */
/*    warn unrecognized annotation: true */
/*    warn deprecated features: true */
/*    zone cut depth: 100 */
.text
.p2align 0x4
.globl simplifyStatements_0
.hidden simplifyStatements_0
simplifyStatements_0:
L_231612:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_231613
L_231770:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_231771+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_231771
.p2align 0x4
.long 0x4AE
L_231771:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_231613:
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x20(%rbp)
	cmpq %r14,%rdx
	jne L_474783
L_231616:
	testq %rdx,%rdx
	jz L_474782
L_231617:
	cmpq $0x7FFFFFFF,%rdx
	ja L_231634
L_231618:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x156B,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_231619+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_231619
.p2align 0x4
.long 0x4DF
L_231619:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq %rax,0x28(%rbp)
L_231620:
	movl $0x0,0x30(%rbp)
	movq $0x0,0x38(%rbp)
.p2align 0x4,,0x7
loop_2624:
	movq 0x38(%rbp),%r14
	cmpq 0x20(%rbp),%r14
	jnl L_474774
L_231636:
	movl %r14d,%r13d
	movslq %r13d,%r15
	movq 0x0(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x40(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xF2E,%r15
	je L_474773
	cmpq $0xF2F,%r15
	je L_474761
L_231637:
	movq 0x10(%r13),%r14
	movq %r14,0x48(%rbp)
	movl 0x0(%r13),%r14d
	movl %r14d,0x34(%rbp)
	movq 0x8(%r13),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xF3D,%r15
	je L_474760
L_231638:
	movq %r13,%r15
.p2align 0x4,,0x7
L_231639:
	movl 0x30(%rbp),%ecx
	incl %ecx
	jo L_474759
.p2align 0x4,,0x7
L_231641:
	movl %ecx,0x30(%rbp)
	movq 0x28(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x38(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x38(%rbp)
	jmp loop_2624
.p2align 0x4
L_474759:
L_231629:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_474760:
L_231642:
	movq 0x0(%r14),%r15
	movq %r15,0x50(%rbp)
	movq %r15,0x60(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_231643+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_45
.p2align 0x4
L_474761:
L_231668:
	movq 0x10(%r13),%r15
	movq %r15,0x48(%rbp)
	movq 0x8(%r13),%r14
	movq %r14,0x50(%rbp)
	movq 0x0(%r13),%r14
	movq %r14,0x58(%rbp)
	cmpq $0x1,%r15
	jne L_474772
.p2align 0x4,,0x7
L_231671:
	movq 0x58(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xF28,%r15
	je L_474770
	cmpq $0xF29,%r15
	je L_474769
	cmpq $0xF2A,%r15
	je L_474767
	cmpq $0xF2B,%r15
	je L_474765
	cmpq $0xF2C,%r15
	je L_474763
L_231672:
	movq $0x1,%r15
.p2align 0x4,,0x7
L_231673:
	cmpq $0x1,%r15
	jne L_474762
.p2align 0x4,,0x7
L_231736:
	movl 0x30(%rbp),%ecx
	movq $0x1,%r15
	jmp L_231641
.p2align 0x4
L_474762:
L_231674:
	movq %r15,0x40(%rbp)
doitP_2:
	movq 0x50(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_231675+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp simplifyType_1
.p2align 0x4
L_474763:
L_231756:
	movq $0x1,%r15
.p2align 0x4,,0x7
L_231757:
	cmpq $0x1,%r15
	je L_231736
L_231758:
	movq %r15,0x40(%rbp)
	jmp doitP_2
.p2align 0x4
L_474765:
L_231752:
	movq $0x1,%r15
.p2align 0x4,,0x7
L_231753:
	cmpq $0x1,%r15
	je L_231736
L_231754:
	movq %r15,0x40(%rbp)
	jmp doitP_2
.p2align 0x4
L_474767:
L_231748:
	movq $0x1,%r15
.p2align 0x4,,0x7
L_231749:
	cmpq $0x1,%r15
	je L_231736
L_231750:
	movq %r15,0x40(%rbp)
	jmp doitP_2
.p2align 0x4
L_474769:
L_231741:
	movq 0x58(%rbp),%r14
	movq 0x8(%r14),%r15
	movq $0x1,0x40(%rbp)
L_231742:
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_231743+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp maySideEffect_0
.p2align 0x4
L_474770:
L_231737:
	movq $0x1,%r15
.p2align 0x4,,0x7
L_231738:
	cmpq $0x1,%r15
	je L_231736
L_231739:
	movq %r15,0x40(%rbp)
	jmp doitP_2
.p2align 0x4
L_474772:
L_231669:
	movq 0x48(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_231670+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_45
.p2align 0x4
L_474773:
L_231667:
	movq %r13,%r15
	jmp L_231639
.p2align 0x4
L_474774:
L_231621:
	movq 0x28(%rbp),%r15
	movq $0x18BB,0xFFFFFFFFFFFFFFF8(%r15)
	movslq 0x30(%rbp),%r14
	movq %r14,0x38(%rbp)
	testq %r14,%r14
	jz L_474780
L_231622:
	cmpq $0x7FFFFFFF,%r14
	ja L_474779
L_231623:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1443,%rcx
	movq %r14,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_231624+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_231624
.p2align 0x4
.long 0x39B7
L_231624:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq %rax,%r15
L_231625:
	xorl %ecx,%ecx
	xorq %r14,%r14
.p2align 0x4,,0x7
loop_2625:
	cmpq 0x38(%rbp),%r14
	jnl L_474778
.p2align 0x4,,0x7
loop_2626:
	movslq %ecx,%r13
	movq 0x28(%rbp),%r11
	movq 0x0(%r11,%r13,8),%r10
	cmpq $0x1,%r10
	jne L_474776
L_231631:
	incl %ecx
	jo L_231629
L_231632:
	jmp loop_2626
.p2align 0x4
L_474776:
L_231628:
	incl %ecx
	jo L_231629
L_231630:
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r10,0x0(%r15,%r14,8)
	incq %r14
	jmp loop_2625
.p2align 0x4
L_474778:
L_231626:
	movq $0x21,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_474779:
L_231634:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_474780:
L_231635:
	movq (globalObjptr+0x23D0)(%rip),%r15
	jmp L_231625
.p2align 0x4
L_474782:
L_231769:
	movq (globalObjptr+0x23C8)(%rip),%r15
	movq %r15,0x28(%rbp)
	jmp L_231620
.p2align 0x4
L_474783:
L_231615:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x39B8
L_231643:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r13
L_231644:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_231645
L_231646:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xF25,%r15
	jne L_474787
L_231647:
	movq 0x8(%r13),%r15
	cmpq $0x1,%r15
	je L_474786
	cmpq $0x2,%r15
	je L_474785
L_231648:
	movq %r15,0x60(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_231649+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_17
.p2align 0x4
L_474785:
L_231666:
	movq 0x40(%rbp),%r15
	jmp L_231639
.p2align 0x4
L_474786:
L_231665:
	movq (globalObjptr+0x23E0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_474787:
L_231645:
	movq (globalObjptr+0x23D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x39BC
L_231675:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_231676
L_231733:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_231734+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_231734
.p2align 0x4
.long 0x39C4
L_231734:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_231676:
	movq 0x58(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xF28,%r14
	je L_474791
	cmpq $0xF2A,%r14
	je L_474789
L_231677:
L_231678:
	movq $0x1E5F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x20,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x40(%rbp),%r13
	movq %r13,0x10(%r14)
	movq %r14,%r15
	jmp L_231639
.p2align 0x4
L_474789:
L_231704:
	movq 0x8(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x60(%rbp)
	cmpq $0x1,%r14
	je L_474790
L_231705:
	movq %r14,0x70(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_231706+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_17
.p2align 0x4
L_474790:
L_231732:
	movq 0x58(%rbp),%r15
	jmp L_231678
.p2align 0x4
L_474791:
L_231679:
	movl 0x0(%r15),%r14d
	movl %r14d,0x34(%rbp)
	movq 0x8(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xF3D,%r15
	jne L_474792
L_231681:
	movq 0x0(%r14),%r15
	movq %r15,0x50(%rbp)
	movq %r15,0x68(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_231682+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_45
.p2align 0x4
L_474792:
L_231680:
	movq 0x58(%rbp),%r15
	jmp L_231678
.p2align 0x4
.long 0x39BD
L_231743:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movl 0x68(%rbp),%r15d
	movl %r15d,0x34(%rbp)
	testl %r15d,%r15d
	jnz L_474795
L_231744:
	cmpq $0x1,0x40(%rbp)
	je L_231736
	jmp doitP_2
.p2align 0x4
L_474795:
L_231747:
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	jmp doitP_2
.p2align 0x4
.long 0x39BB
L_231670:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r14),%r13
	cmpq $0x1,0x8(%r13)
	jne L_231671
L_231760:
	movq 0x58(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xF28,%r15
	je L_474800
	cmpq $0xF29,%r15
	je L_474799
	cmpq $0xF2A,%r15
	je L_474798
	cmpq $0xF2B,%r15
	je L_474797
	cmpq $0xF2C,%r15
	je L_474796
L_231761:
	movq 0x48(%rbp),%r15
	jmp L_231673
.p2align 0x4
L_474796:
L_231766:
	movq 0x48(%rbp),%r15
	jmp L_231757
.p2align 0x4
L_474797:
L_231765:
	movq 0x48(%rbp),%r15
	jmp L_231753
.p2align 0x4
L_474798:
L_231764:
	movq 0x48(%rbp),%r15
	jmp L_231749
.p2align 0x4
L_474799:
L_231763:
	movq 0x58(%rbp),%r14
	movq 0x8(%r14),%r15
	movq 0x48(%rbp),%r14
	movq %r14,0x40(%rbp)
	jmp L_231742
.p2align 0x4
L_474800:
L_231762:
	movq 0x48(%rbp),%r15
	jmp L_231738
.p2align 0x4
.long 0x39B9
L_231649:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq 0x20(%r15),%r14
	movq %r15,0x40(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movslq 0x34(%rbp),%r15
	cmpq %r13,%r15
	jnb L_231651
L_231652:
	salq $0x4,%r15
	movq 0x8(%r14,%r15,1),%r11
	movq 0x8(%r11),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,0x8(%r9)
	jne L_474807
L_231654:
	movl $0x0,0x40(%rbp)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
loop_2627:
	cmpl 0x34(%rbp),%ecx
	jnl L_474805
L_231659:
	movl %ecx,%r15d
	incl %r15d
	movslq %ecx,%r11
	cmpq %r13,%r11
	jnb L_474804
L_231661:
	salq $0x4,%r11
	movq 0x8(%r14,%r11,1),%r10
	movq 0x8(%r10),%r9
	movq 0x0(%r9),%r8
	cmpq $0x1,0x8(%r8)
	je L_474802
L_231662:
	movl %r15d,%ecx
	jmp loop_2627
.p2align 0x4
L_474802:
L_231663:
	movl 0x40(%rbp),%r11d
	incl %r11d
	jo L_231629
L_231664:
	movl %r11d,0x40(%rbp)
	movl %r15d,%ecx
	jmp loop_2627
.p2align 0x4
L_474804:
L_231651:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_474805:
L_231655:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_231656
L_231657:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_231658+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_231658
.p2align 0x4
.long 0x39BA
L_231658:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_231656:
	movq $0x1E7B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1E5B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x20,%r12
	movl 0x40(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x48(%rbp),%r13
	movq %r13,0x10(%r14)
	movq %r14,%r15
	jmp L_231639
.p2align 0x4
L_474807:
L_231653:
	movl 0x30(%rbp),%ecx
	movq $0x1,%r15
	jmp L_231641
.p2align 0x4
.long 0x39C0
L_231706:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_231707
L_231730:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_231731+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_231731
.p2align 0x4
.long 0x39BF
L_231731:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_231707:
	movq 0x58(%rbp),%r13
	movq 0x10(%r13),%r11
	movb 0x4(%r11),%r14b
	testb %r14b,%r14b
	jz L_474809
L_231708:
	movq 0x8(%r13),%r14
	movq 0x8(%r14),%r14
	movq %r14,%r15
	jmp L_231678
.p2align 0x4
L_474809:
L_231709:
	movq 0x20(%r13),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_231615
L_231711:
	movl %r13d,0x78(%rbp)
	movq $0x395D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x70(%rbp)
	addq $0x10,%r12
	addq $0x70,%rbp
	leaq (L_231712+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_20
.p2align 0x4
.long 0x39BD
L_231682:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_231683
L_231702:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_231703+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_231703
.p2align 0x4
.long 0x39BF
L_231703:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_231683:
	movq 0x60(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r13
L_231684:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_231685
L_231686:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xF25,%r15
	jne L_474814
L_231687:
	movq 0x8(%r13),%r15
	cmpq $0x1,%r15
	je L_474813
	cmpq $0x2,%r15
	je L_474812
L_231688:
	movq %r15,0x60(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_231689+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_17
.p2align 0x4
L_474812:
L_231701:
	movq 0x58(%rbp),%r15
	jmp L_231678
.p2align 0x4
L_474813:
L_231700:
	movq (globalObjptr+0x23F0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_474814:
L_231685:
	movq (globalObjptr+0x23E8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x39C0
L_231712:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_231713
L_231728:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_231729+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_231729
.p2align 0x4
.long 0x39BF
L_231729:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_231713:
	movq $0x4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x68(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x60(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r10,%r13
	jne L_231615
L_231715:
	movq 0x58(%rbp),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r10
	movl %r10d,%r9d
	movslq %r9d,%r8
	cmpq %r8,%r10
	jne L_231615
L_231717:
	cmpl %r9d,%r11d
	jne L_474817
L_231719:
	movl %r11d,0x80(%rbp)
	movq $0x38C7,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x20,%r12
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	movq %r14,0x10(%r11)
	movq %r11,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_231720+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_31
.p2align 0x4
L_474817:
L_231718:
	movq (globalObjptr+0x4E0)(%rip),%r11
	movq %r11,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x39B8
L_231689:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r14
	movq 0x20(%r14),%r15
	movq %r14,0x58(%rbp)
	movl $0x0,0x58(%rbp)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
loop_2628:
	cmpl 0x34(%rbp),%ecx
	jnl L_474824
L_231694:
	movl %ecx,%r14d
	incl %r14d
	movslq %ecx,%r13
	cmpq 0xFFFFFFFFFFFFFFF0(%r15),%r13
	jnb L_231651
L_231696:
	salq $0x4,%r13
	movq 0x8(%r15,%r13,1),%r11
	movq 0x8(%r11),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,0x8(%r9)
	je L_474821
L_231697:
	movl %r14d,%ecx
	jmp loop_2628
.p2align 0x4
L_474821:
L_231698:
	movl 0x58(%rbp),%r13d
	incl %r13d
	jo L_231629
L_231699:
	movl %r13d,0x58(%rbp)
	movl %r14d,%ecx
	jmp loop_2628
.p2align 0x4
L_474824:
L_231690:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_231691
L_231692:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_231693+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_231693
.p2align 0x4
.long 0x39BE
L_231693:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_231691:
	movq $0x1E7B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1E51,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl 0x58(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq %r14,%r15
	jmp L_231678
.p2align 0x4
.long 0x39C1
L_231720:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_231721
L_231726:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_231727+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_231727
.p2align 0x4
.long 0x39C3
L_231727:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_231721:
	movq $0x4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x931,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x58(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x68(%rbp),%r13
	movl 0x0(%r13),%r11d
	movl %r11d,0x68(%rbp)
	movq $0x3FC5,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r13,0x60(%rbp)
	addq $0x18,%r12
	addq $0x60,%rbp
	leaq (L_231722+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
.long 0x39B8
L_231722:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_231723
L_231724:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_231725+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_231725
.p2align 0x4
.long 0x39C2
L_231725:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_231723:
	movq $0x1E55,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_231678
.text
.p2align 0x4
.globl tabulate_43
.hidden tabulate_43
tabulate_43:
L_231772:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_231773
L_231821:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_231822+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_231822
.p2align 0x4
.long 0x457
L_231822:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_231773:
	movslq 0x8(%rbp),%rdx
	movq %rdx,0x10(%rbp)
	testq %rdx,%rdx
	jz L_474841
L_231774:
	cmpq $0x7FFFFFFF,%rdx
	ja L_474840
L_231775:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x145D,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_231776+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_231776
.p2align 0x4
.long 0x452
L_231776:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq %rax,0x8(%rbp)
L_231777:
	movq $0x0,0x18(%rbp)
.p2align 0x4,,0x7
loop_2629:
	movq 0x18(%rbp),%r14
	cmpq 0x10(%rbp),%r14
	jnl L_474839
L_231779:
	movl %r14d,%r13d
	movq 0x0(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1CB5,%r15
	je L_474837
	cmpq $0x1CB6,%r15
	je L_474834
	cmpq $0x1CB7,%r15
	je L_474833
	cmpq $0x1CB8,%r15
	je L_474831
	cmpq $0x1CB9,%r15
	je L_474829
L_231780:
	movq 0x8(%r14),%r11
	movq 0x0(%r14),%r10
	movq %r10,0x20(%rbp)
	movslq %r13d,%r15
	movq %r15,%r13
	salq $0x4,%r13
	movq 0x10(%r14),%r10
	movq 0x0(%r10,%r15,8),%r9
	movq 0x0(%r9),%r8
	movq 0x8(%r9),%rsp
	movq %rsp,0x28(%rbp)
	movq 0x18(%r14),%r10
	movq 0x8(%r10,%r13,1),%r9
	movq 0x0(%r9),%rsp
	cmpq $0x1,0x8(%rsp)
	je L_474828
L_231781:
	movq $0x1,%r15
.p2align 0x4,,0x7
L_231782:
	movq 0x8(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x18(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x18(%rbp)
	jmp loop_2629
.p2align 0x4
L_474828:
L_231783:
	movq %r8,0x38(%rbp)
	movq %r11,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_231784+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp simplifyType_1
.p2align 0x4
L_474829:
L_231811:
	movq 0x8(%r14),%r11
	movq 0x0(%r14),%r10
	movq %r10,0x20(%rbp)
	movslq %r13d,%r15
	movq %r15,%r13
	salq $0x4,%r13
	movq 0x10(%r14),%r10
	movq 0x0(%r10,%r15,8),%r9
	movq 0x0(%r9),%r8
	movq 0x8(%r9),%rsp
	movq %rsp,0x28(%rbp)
	movq 0x18(%r14),%r10
	movq 0x8(%r10,%r13,1),%r9
	movq 0x0(%r9),%rsp
	cmpq $0x1,0x8(%rsp)
	je L_474830
L_231812:
	movq $0x1,%r15
	jmp L_231782
.p2align 0x4
L_474830:
L_231813:
	movq %r8,0x38(%rbp)
	movq %r11,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_231814+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp simplifyType_1
.p2align 0x4
L_474831:
L_231803:
	movq 0x8(%r14),%r11
	movq 0x0(%r14),%r10
	movq %r10,0x20(%rbp)
	movslq %r13d,%r15
	movq %r15,%r13
	salq $0x4,%r13
	movq 0x10(%r14),%r10
	movq 0x0(%r10,%r13,1),%r9
	movq %r9,0x28(%rbp)
	salq $0x4,%r15
	movq 0x8(%r10,%r15,1),%r13
	movq 0x0(%r13),%r9
	cmpq $0x1,0x8(%r9)
	je L_474832
L_231804:
	movq $0x1,%r15
	jmp L_231782
.p2align 0x4
L_474832:
L_231805:
	movq %r11,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_231806+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_474833:
L_231802:
	movq 0x0(%r14),%r11
	movslq %r13d,%r15
	salq $0x4,%r15
	movq 0x8(%r11,%r15,1),%r11
	movq %r11,%r15
	jmp L_231782
.p2align 0x4
L_474834:
L_231798:
	movq 0x0(%r14),%r15
	movslq %r13d,%r11
	movq 0x8(%r14),%r13
	movq 0x0(%r13,%r11,8),%r10
	cmpq $0x1,%r10
	je L_474836
L_231799:
	movl 0x0(%r15),%r14d
	incl %r14d
	jo L_474835
L_231800:
	movl %r14d,0x0(%r15)
	movq %r10,%r15
	jmp L_231782
.p2align 0x4
L_474835:
L_231786:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_474836:
L_231801:
	movq %r10,%r15
	jmp L_231782
.p2align 0x4
L_474837:
L_231790:
	movq 0x8(%r14),%r11
	movq 0x0(%r14),%r10
	movq %r10,0x20(%rbp)
	movslq %r13d,%r15
	movq %r15,%r13
	salq $0x4,%r13
	movq 0x10(%r14),%r10
	movq 0x0(%r10,%r13,1),%r9
	movq %r9,0x28(%rbp)
	salq $0x4,%r15
	movq 0x8(%r10,%r15,1),%r13
	movq 0x0(%r13),%r9
	cmpq $0x1,0x8(%r9)
	je L_474838
L_231791:
	movq $0x1,%r15
	jmp L_231782
.p2align 0x4
L_474838:
L_231792:
	movq %r11,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_231793+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_474839:
L_231778:
	movq 0x8(%rbp),%r15
	movq $0xBB9,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_474840:
L_231819:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_474841:
L_231820:
	movq (globalObjptr+0xBA0)(%rip),%r15
	movq %r15,0x8(%rbp)
	jmp L_231777
.p2align 0x4
.long 0x557
L_231784:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_231785
L_231788:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_231789+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_231789
.p2align 0x4
.long 0x575
L_231789:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_231785:
	movq $0x2725,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	movl 0x0(%r14),%r13d
	incl %r13d
	jo L_231786
L_231787:
	movl %r13d,0x0(%r14)
	jmp L_231782
.p2align 0x4
.long 0x557
L_231814:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_231815
L_231817:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_231818+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_231818
.p2align 0x4
.long 0x575
L_231818:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_231815:
	movq $0x2725,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	movl 0x0(%r14),%r13d
	incl %r13d
	jo L_231786
L_231816:
	movl %r13d,0x0(%r14)
	jmp L_231782
.p2align 0x4
.long 0x557
L_231806:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movl 0x38(%rbp),%r15d
	movl %r15d,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_231807
L_231809:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_231810+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_231810
.p2align 0x4
.long 0x68B
L_231810:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_231807:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x30(%rbp),%r14d
	movl %r14d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xCE38)(%rip),%r14
	movq %r14,0x18(%r13)
	movq $0x2725,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	movl 0x0(%r14),%r13d
	incl %r13d
	jo L_231786
L_231808:
	movl %r13d,0x0(%r14)
	jmp L_231782
.p2align 0x4
.long 0x557
L_231793:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movl 0x38(%rbp),%r15d
	movl %r15d,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_231794
L_231796:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_231797+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_231797
.p2align 0x4
.long 0x68B
L_231797:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_231794:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x30(%rbp),%r14d
	movl %r14d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xCE38)(%rip),%r14
	movq %r14,0x18(%r13)
	movq $0x2725,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	movl 0x0(%r14),%r13d
	incl %r13d
	jo L_231786
L_231795:
	movl %r13d,0x0(%r14)
	jmp L_231782
.text
.p2align 0x4
.globl getWrapperLabel_1
.hidden getWrapperLabel_1
getWrapperLabel_1:
L_231823:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_231824
L_231955:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_231956+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_231956
.p2align 0x4
.long 0x63C
L_231956:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_231824:
	movq 0x8(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_231825+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_42
.p2align 0x4
.long 0x65B
L_231825:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r13
	movq %r13,0x20(%rbp)
	movq 0x18(%r13),%r11
	movq %r11,0x28(%rbp)
	movq 0x0(%rbp),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movl %r15d,%ecx
	movslq %ecx,%r13
	movq %r13,0x30(%rbp)
	cmpq %r15,%r13
	jne L_231827
L_231828:
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r14
	movl %r14d,%ebx
	movslq %ebx,%r13
	cmpq %r14,%r13
	jne L_474866
L_231830:
	cmpl %ecx,%ebx
	jne L_474865
L_231832:
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_2630:
	cmpl %ecx,%ebx
	je L_474864
L_231833:
	movslq %ebx,%r13
	cmpq %r15,%r13
	jnb L_231835
L_231836:
	movq %r13,%r11
	salq $0x4,%r11
	movq 0x0(%rbp),%r10
	movq 0x8(%r10,%r11,1),%r9
	cmpq %r14,%r13
	jnb L_474862
L_231838:
	salq $0x4,%r13
	movq 0x28(%rbp),%r11
	movq 0x8(%r11,%r13,1),%r10
	movq 0x0(%r9),%r11
	cmpq $0x1,0x8(%r11)
	je L_474861
L_231839:
	xorl %r11d,%r11d
	movq %r10,%r13
	xchgl %r11d,%ecx
	movl %r11d,(localWord32+0x0)(%rip)
L_231840:
	movq 0x0(%r13),%r11
	cmpq $0x1,0x8(%r11)
	je L_474860
L_231841:
	xorl %r13d,%r13d
	xchgl %r13d,%ebx
	movl %r13d,(localWord32+0x4)(%rip)
L_231842:
	cmpl %ecx,%ebx
	jne L_474853
L_231950:
	movl (localWord32+0x4)(%rip),%ebx
	incl %ebx
	jo L_474852
L_231951:
	movl (localWord32+0x0)(%rip),%ecx
	jmp loop_2630
.p2align 0x4
L_474852:
L_231937:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_474853:
L_231843:
	movq 0x30(%rbp),%rdx
	cmpq $0x0,%rdx
	sete %bl
	movzbl %bl,%ebx
	movl %ebx,0x38(%rbp)
	je L_474859
L_231844:
	cmpq $0x7FFFFFFF,%rdx
	ja L_474858
L_231845:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1565,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_231846+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_231846
.p2align 0x4
.long 0x976
L_231846:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq %rax,0x40(%rbp)
L_231847:
	movl $0x0,0x3C(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2631:
	cmpq 0x30(%rbp),%r15
	jnl L_474856
L_231943:
	movl %r15d,%r13d
	movslq %r13d,%r14
	movq %r14,%r13
	salq $0x4,%r13
	movq 0x0(%rbp),%r11
	movq 0x0(%r11,%r13,1),%r10
	salq $0x4,%r14
	movq 0x8(%r11,%r14,1),%r13
	movq 0x0(%r13),%r9
	cmpq $0x1,0x8(%r9)
	jne L_474855
L_231946:
	movl 0x3C(%rbp),%ecx
	incl %ecx
	jo L_231937
	movq %r10,%r14
L_231945:
	movl %ecx,0x3C(%rbp)
	movq 0x40(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r14,0x0(%r13,%r15,8)
	incq %r15
	jmp loop_2631
.p2align 0x4
L_474855:
L_231944:
	movl 0x3C(%rbp),%ecx
	movq $0x1,%r14
	jmp L_231945
.p2align 0x4
L_474856:
L_231848:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_231849
L_231941:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_231942+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_231942
.p2align 0x4
.long 0x975
L_231942:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_231849:
	movq 0x40(%rbp),%r15
	movq $0xB6F,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x4B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0xB71,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq $0x3AAD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r15,0x48(%rbp)
	addq $0x18,%r12
	movl 0x3C(%rbp),%r15d
	movl %r15d,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_231850+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_18
.p2align 0x4
L_474858:
L_231923:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_474859:
L_231949:
	movq (globalObjptr+0x23B0)(%rip),%r15
	movq %r15,0x40(%rbp)
	jmp L_231847
.p2align 0x4
L_474860:
L_231952:
	movl $0x1,%r13d
	xchgl %r13d,%ebx
	movl %r13d,(localWord32+0x4)(%rip)
	jmp L_231842
.p2align 0x4
L_474861:
L_231953:
	movl $0x1,%r11d
	movq %r10,%r13
	xchgl %r11d,%ecx
	movl %r11d,(localWord32+0x0)(%rip)
	jmp L_231840
.p2align 0x4
L_474862:
L_231835:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_474864:
L_231954:
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_474865:
L_231831:
	movq (globalObjptr+0x1B28)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_474866:
L_231827:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x19D0
L_231850:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x20(%rbp),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x48(%rbp)
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_231860
L_231851:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movq %r13,%r15
.p2align 0x4,,0x7
L_231852:
	movq 0x8(%r14),%r11
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r13
	movl %r13d,%ecx
	movslq %ecx,%r10
	cmpq %r13,%r10
	jne L_231827
L_231854:
	movq 0x40(%rbp),%r9
	movq 0xFFFFFFFFFFFFFFF0(%r9),%r10
	movl %r10d,%ebx
	movslq %ebx,%r9
	cmpq %r9,%r10
	jne L_231827
L_231856:
	cmpl %ebx,%ecx
	jne L_474874
L_231927:
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_2633:
	cmpl %ebx,%ecx
	je L_474873
L_231928:
	movslq %ebx,%r9
	cmpq %r13,%r9
	jnb L_231835
L_231930:
	movq 0x0(%r11,%r9,8),%r8
	cmpq %r10,%r9
	jnb L_231835
L_231932:
	movq 0x40(%rbp),%rsp
	movq 0x0(%rsp,%r9,8),%rsi
	movq 0x10(%rsi),%rdi
	cmpq %rdi,0x10(%r8)
	jne L_474869
L_231936:
	incl %ebx
	jo L_231937
L_231938:
	jmp loop_2633
.p2align 0x4
L_474869:
L_231933:
	cmpq $0x1,%r15
	je L_474870
L_231934:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_231852
.p2align 0x4
L_474870:
L_231860:
	movq 0x18(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_231861+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_474873:
L_231939:
	movq 0x0(%r14),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_474874:
L_231857:
	cmpq $0x1,%r15
	je L_231860
L_231858:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_231852
.p2align 0x4
.long 0x39C5
L_231861:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movl 0x58(%rbp),%r15d
	movl %r15d,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_231862
L_231925:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_231926+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_231926
.p2align 0x4
.long 0x39CE
L_231926:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_231862:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x18(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xEC10)(%rip),%r15
	movq %r15,0x18(%r13)
	movq %r13,0x40(%rbp)
	movl 0x38(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_474883
L_231863:
	cmpq $0x7FFFFFFF,0x30(%rbp)
	ja L_231923
L_231864:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_231865
L_231920:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_231921+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_231921
.p2align 0x4
.long 0x39C6
L_231921:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_231865:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1567,%rcx
	movq 0x30(%rbp),%rdx
	movq $0x10,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_231866+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_231866
.p2align 0x4
.long 0x39C6
L_231866:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq %rax,0x18(%rbp)
L_231867:
	movq $0x0,0x38(%rbp)
loop_2632:
	movq 0x30(%rbp),%r15
	cmpq %r15,0x38(%rbp)
	jl L_474880
L_231868:
	movq 0x18(%rbp),%r15
	movq $0xBB7,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x10(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_231827
L_231870:
	movq $0x396F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq %r14,0x58(%rbp)
	movl %r13d,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_231871+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_43
.p2align 0x4
L_474880:
L_231909:
	movq 0x38(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq %r15,%r14
	movq %r15,%r13
	salq $0x4,%r14
	movq 0x0(%rbp),%r11
	movq 0x0(%r11,%r14,1),%r10
	movq %r10,0x50(%rbp)
	salq $0x4,%r13
	movq 0x8(%r11,%r13,1),%r14
	movq %r14,0x58(%rbp)
	salq $0x4,%r15
	movq 0x28(%rbp),%r14
	movq 0x8(%r14,%r15,1),%r13
	movq %r13,0x60(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_231910+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_474883:
L_231924:
	movq (globalObjptr+0x23B8)(%rip),%r15
	movq %r15,0x18(%rbp)
	jmp L_231867
.p2align 0x4
.long 0x3643
L_231871:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_231872
L_231907:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_231908+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_231908
.p2align 0x4
.long 0x39CB
L_231908:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_231872:
	movq $0x38A9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x58(%rbp)
	movl 0x10(%rbp),%r15d
	movl %r15d,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_231873+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_31
.p2align 0x4
.long 0x39CC
L_231910:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movl 0x70(%rbp),%r15d
	movl %r15d,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_231911
L_231918:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_231919+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_231919
.p2align 0x4
.long 0x39CD
L_231919:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_231911:
	movq $0x15,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x13,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	movq %r15,0x10(%r13)
	addq $0x28,%r12
	movl 0x68(%rbp),%r11d
	movl %r11d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xCE38)(%rip),%r11
	movq %r11,0x18(%r13)
	movq 0x58(%rbp),%r11
	movq 0x0(%r11),%r10
	cmpq $0x1,0x8(%r10)
	je L_474887
L_231912:
	movq $0x1,%r14
	movq %r13,%r15
L_231913:
	movq 0x60(%rbp),%r13
	movq 0x0(%r13),%r11
	cmpq $0x1,0x8(%r11)
	jne L_474886
L_231916:
L_231915:
	movq 0x18(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq 0x38(%rbp),%r11
	movq %r11,%r9
	salq $0x4,%r9
	movq %r15,0x0(%r13,%r9,1)
	movq %r13,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%r10,%r15,1)
	movq %r11,%r15
	salq $0x4,%r15
	movq %r14,0x8(%r13,%r15,1)
	incq %r11
	movq %r11,0x38(%rbp)
	jmp loop_2632
.p2align 0x4
L_474886:
L_231914:
	movq $0x1,%r15
	jmp L_231915
.p2align 0x4
L_474887:
L_231917:
	movq $0x2725,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r13,0x0(%r14)
	movq 0x50(%rbp),%r11
	movq %r11,0x8(%r14)
	movq %r13,%r15
	jmp L_231913
.p2align 0x4
.long 0x244B
L_231873:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_231874
L_231905:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_231906+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_231906
.p2align 0x4
.long 0x39CA
L_231906:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_231874:
	movq $0x4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x18(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x28(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r10,%r13
	jne L_231827
L_231876:
	movl %r11d,0x60(%rbp)
	movq $0x396D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	movq %r13,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_231877+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_43
.p2align 0x4
.long 0x39C7
L_231877:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_231878
L_231903:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_231904+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_231904
.p2align 0x4
.long 0xBB8
L_231904:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_231878:
	movq $0x4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0xC2B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x28(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x18(%rbp),%r13
	movl 0x0(%r13),%r11d
	movl %r11d,0x60(%rbp)
	movq $0x3809,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r13,0x58(%rbp)
	addq $0x18,%r12
	addq $0x58,%rbp
	leaq (L_231879+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_26
.p2align 0x4
.long 0x39C8
L_231879:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_231880
L_231901:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_231902+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_231902
.p2align 0x4
.long 0x39C9
L_231902:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_231880:
	movq 0x18(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x28(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_231827
L_231882:
	movq $0x3FC7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq %r14,0x58(%rbp)
	movl %r13d,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_231883+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
.long 0x39C7
L_231883:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_231884
L_231899:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_231900+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_231900
.p2align 0x4
.long 0x39C9
L_231900:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_231884:
	movq $0x3A9D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x58(%rbp)
	movl 0x28(%rbp),%r15d
	movl %r15d,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_231885+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_18
.p2align 0x4
.long 0x39C7
L_231885:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_231886
L_231897:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_231898+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_231898
.p2align 0x4
.long 0xBB8
L_231898:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_231886:
	movq $0x4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x30(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x10(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r10,%r13
	jne L_231827
L_231888:
	movl %r11d,0x60(%rbp)
	movq $0x38B9,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	movq %r13,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_231889+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_31
.p2align 0x4
.long 0xBD5
L_231889:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_231890
L_231895:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_231896+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_231896
.p2align 0x4
.long 0xBD7
L_231896:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_231890:
	movq $0x4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x931,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x10(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x30(%rbp),%r13
	movl 0x0(%r13),%r11d
	movl %r11d,0x60(%rbp)
	movq $0x400F,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r13,0x58(%rbp)
	addq $0x18,%r12
	addq $0x58,%rbp
	leaq (L_231891+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
.long 0x1B3E
L_231891:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_231892
L_231893:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_231894+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_231894
.p2align 0x4
.long 0xBB8
L_231894:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_231892:
	movq (globalObjptr+0xF70)(%rip),%r15
	movq $0x21,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x1E67,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x8(%rbp),%r13
	movq %r13,0x8(%r14)
	movq $0x23,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x28,%r12
	movq %r15,0x8(%r13)
	movq 0x40(%rbp),%r15
	movq %r15,0x10(%r13)
	movq 0x18(%rbp),%r14
	movq %r14,0x18(%r13)
	movq $0x12AB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x28(%rbp),%r11
	movq %r11,0x8(%r14)
	movq 0x48(%rbp),%r11
	movq 0x0(%r11),%r10
	movq $0x1E9B,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r14,0x0(%r9)
	movq %r10,0x8(%r9)
	addq $0x18,%r12
	movq %r11,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r14,1)
	movq %r9,0x0(%r11)
	movq 0x20(%rbp),%r14
	movq 0x10(%r14),%r11
	movq 0x0(%r11),%r9
	movq 0x0(%r9),%r14
	movq $0x1E99,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r14,0x8(%r11)
	addq $0x18,%r12
	movq %r9,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r10,%r14,1)
	movq %r11,0x0(%r9)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl addCuts_0
.hidden addCuts_0
addCuts_0:
L_231957:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_232021
L_231958:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_474918
L_231959:
	movq 0x8(%rbp),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x30(%rbp)
	movq 0x0(%r11),%r15
	movl 0x0(%rbp),%r11d
	testl %r11d,%r11d
	jnz L_474916
L_231971:
	movq 0x10(%r15),%r11
	movq %r11,0x38(%rbp)
	movq 0x28(%rbp),%r10
	movq 0x8(%r10),%r14
	movq 0x0(%r10),%r9
	movq %r9,0x40(%rbp)
	movq 0x10(%r11),%r10
	movq %r10,0x48(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_474915
L_231973:
	movq %r15,0x0(%r11)
	movq 0x0(%r10),%r11
	cmpq $0x1,%r11
	je L_474914
L_231974:
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r11
	xorl %ecx,%ecx
	movq %r11,%r15
.p2align 0x4,,0x7
L_231976:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_474913
L_232013:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xCAC,%r11
	jne L_474912
L_232014:
	movq 0x8(%r13),%r11
	cmpq %r14,0x0(%r13)
	movq %r14,(localObjptr+0x8)(%rip)
	je L_474909
L_231977:
	incl %ecx
	movl %ecx,0x14(%rbp)
	jo L_474908
L_231978:
	cmpq $0x1,%r15
	je L_474899
L_231979:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x8)(%rip),%r14
	jmp L_231976
.p2align 0x4
L_474899:
L_231980:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_231981
L_232011:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_232012+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_232012
.p2align 0x4
.long 0x4AD
L_232012:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_231981:
	movl 0x14(%rbp),%ecx
L_231982:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_474906
L_231984:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_231986
L_232010:
	movl %ecx,0x0(%r15)
L_231986:
	movq $0x53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x13B7,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq $0x1959,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq 0x0(%r14),%r11
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r10,0x0(%r14)
	movq %r13,%r15
L_231987:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movl 0x0(%r13),%r11d
	testl %r11d,%r11d
	jnz L_474903
L_231988:
	movl $0x1,0x0(%r14)
L_231989:
	movl 0x10(%rbp),%r15d
	movl %r15d,0x14(%rbp)
L_231963:
	movq 0x30(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x38(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r14
	je L_474900
L_231964:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_474900:
L_231965:
	cmpl $0x0,0x38(%rbp)
	jl L_474902
L_231966:
	movl $0x0,0x3C(%rbp)
loop_2634:
	movl 0x38(%rbp),%r15d
	cmpl %r15d,0x3C(%rbp)
	jl L_474901
L_231967:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_474901:
L_231968:
	movslq 0x3C(%rbp),%r15
	movq 0x30(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x50(%rbp)
	movl 0x14(%rbp),%r15d
	movl %r15d,0x48(%rbp)
	movl 0x10(%rbp),%r15d
	movl %r15d,0x58(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x48,%rbp
	leaq (L_231969+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp addCuts_0
.p2align 0x4
L_474902:
L_231970:
	movq (globalObjptr+0x4F8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_474903:
L_231990:
	movq 0x20(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	cmpq $0x1,%r14
	je L_474904
L_231991:
	movq (globalObjptr+0x10348)(%rip),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_231992+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_474904:
L_232009:
	movl 0x10(%rbp),%r15d
	movl %r15d,0x14(%rbp)
	jmp L_231963
.p2align 0x4
L_474906:
L_231983:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_474908:
L_231961:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_474909:
L_232016:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_231983
L_232017:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_474910
L_232019:
	movl %ecx,0x0(%r14)
	movq %r11,%r15
	jmp L_231987
.p2align 0x4
L_474910:
L_232018:
	movq %r11,%r15
	jmp L_231987
.p2align 0x4
L_474912:
	movq %r14,(localObjptr+0x8)(%rip)
	jmp L_231977
.p2align 0x4
L_474913:
	movq %r14,(localObjptr+0x8)(%rip)
	jmp L_231977
.p2align 0x4
L_474914:
L_232020:
	xorl %ecx,%ecx
	jmp L_231982
.p2align 0x4
L_474915:
L_231972:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_474916:
L_231960:
	movl 0x0(%rbp),%r15d
	decl %r15d
	jo L_231961
L_231962:
	movl %r15d,0x14(%rbp)
	jmp L_231963
.p2align 0x4
L_474918:
L_232021:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_232022+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_232022
.p2align 0x4
.long 0xA29
L_232022:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_231959
.p2align 0x4
.long 0x5E8
L_231969:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	incl 0x3C(%rbp)
	jmp loop_2634
.p2align 0x4
.long 0x4AA
L_231992:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_231993+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
.long 0x39CF
L_231993:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_231994+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x39CF
L_231994:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_231995
L_232007:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_232008+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_232008
.p2align 0x4
.long 0x4AD
L_232008:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_231995:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x50(%rbp)
	addq $0x18,%r12
	movq 0x48(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_231996:
	addl 0x0(%r15),%ecx
	movl %ecx,0x14(%rbp)
	jo L_231961
L_231997:
	cmpq $0x1,%r14
	je L_474920
L_231998:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_231996
.p2align 0x4
L_474920:
L_231999:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_232000
L_232005:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_232006+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_232006
.p2align 0x4
.long 0x15B5
L_232006:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_232000:
	movl 0x14(%rbp),%ecx
	testl %ecx,%ecx
	jz L_474921
L_232001:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
x_805:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x58(%rbp)
	movq $0x3E37,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x60(%rbp)
	movq (globalObjptr+0x9D8)(%rip),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_232002+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3780
.p2align 0x4
L_474921:
L_232004:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp x_805
.p2align 0x4
.long 0x5E9
L_232002:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_232003+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x510
L_232003:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_231989
.text
.p2align 0x4
.globl loop_3933
.hidden loop_3933
loop_3933:
L_232023:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_232416
L_232024:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_474939
L_232025:
	movq 0x8(%rbp),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x50(%rbp)
	movq 0x0(%r11),%r10
	movq 0x0(%r10),%r9
	movq %r9,0x58(%rbp)
	movq 0x8(%r10),%r9
	movq %r9,0x60(%rbp)
	movq 0x10(%r10),%r9
	movq %r9,0x68(%rbp)
	movq 0x18(%r10),%r8
	movq %r8,0x70(%rbp)
	movq 0x48(%rbp),%r11
	movq 0x8(%r11),%r14
	movq 0x0(%r11),%r10
	movq %r10,0x78(%rbp)
	movq 0x10(%r9),%r11
	movq %r11,0x80(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r10
	movq 0x0(%r10),%r15
	incq %r15
	jo L_474938
L_232027:
	movq %r15,0x0(%r10)
	movq 0x0(%r11),%r10
	cmpq $0x1,%r10
	je L_474937
L_232028:
	movq 0x0(%r10),%r13
	movq 0x8(%r10),%r10
	movl $0x0,0x8(%rbp)
	movq %r10,%r15
.p2align 0x4,,0x7
L_232030:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_474936
L_232405:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xCAC,%r11
	jne L_474935
L_232406:
	movq 0x8(%r13),%r11
	movq %r11,0x88(%rbp)
	cmpq %r14,0x0(%r13)
	movq %r14,(localObjptr+0x8)(%rip)
	je L_474931
L_232031:
	movl 0x8(%rbp),%r11d
	incl %r11d
	movl %r11d,0xC(%rbp)
	jo L_474930
L_232033:
	cmpq $0x1,%r15
	je L_474925
L_232034:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movl %r11d,0x8(%rbp)
	movq (localObjptr+0x8)(%rip),%r14
	jmp L_232030
.p2align 0x4
L_474925:
L_232035:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_232036
L_232403:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_232404+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_232404
.p2align 0x4
.long 0x39FE
L_232404:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_232036:
	movl 0xC(%rbp),%ecx
L_232037:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_474928
L_232039:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_232041
L_232402:
	movl %ecx,0x0(%r15)
L_232041:
	movq $0x53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x13B7,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq $0x1959,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x80(%rbp),%r14
	movq 0x0(%r14),%r11
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r10,0x0(%r14)
	movq %r13,%r15
L_232042:
	movq 0x8(%r15),%r14
	movl 0x0(%r14),%r13d
	movl %r13d,0x8(%rbp)
	testl %r13d,%r13d
	jnz L_474926
L_232043:
	movq 0x0(%rbp),%r15
	movq %r15,0x78(%rbp)
L_232044:
	movq $0x34DD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r14,0x8(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0x88(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x88,%rbp
	leaq (L_232045+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_1
.p2align 0x4
L_474926:
L_232397:
	movq $0x19D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x78(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x80(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x88(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x40(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_232398+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_474928:
L_232038:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_474930:
L_232032:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_474931:
L_232408:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_232409
L_232413:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_232414+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_232414
.p2align 0x4
.long 0x39FF
L_232414:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_232409:
	movl 0x8(%rbp),%r14d
	movslq %r14d,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_232038
L_232410:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %r14d,0x0(%r13)
	jl L_474932
L_232411:
	movq 0x88(%rbp),%r15
	jmp L_232042
.p2align 0x4
L_474932:
L_232412:
	movq (globalObjptr+0x1078)(%rip),%r14
	movl 0x8(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movq 0x88(%rbp),%r15
	jmp L_232042
.p2align 0x4
L_474935:
	movq %r14,(localObjptr+0x8)(%rip)
	jmp L_232031
.p2align 0x4
L_474936:
	movq %r14,(localObjptr+0x8)(%rip)
	jmp L_232031
.p2align 0x4
L_474937:
L_232415:
	xorl %ecx,%ecx
	jmp L_232037
.p2align 0x4
L_474938:
L_232026:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_474939:
L_232416:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_232417+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_232417
.p2align 0x4
.long 0x80A
L_232417:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	jmp L_232025
.p2align 0x4
.long 0xF62
L_232045:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x60(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x80(%rbp)
	cmpq %r14,%rdx
	jne L_232047
L_232048:
	testq %rdx,%rdx
	jz L_474998
L_232049:
	cmpq $0x7FFFFFFF,%rdx
	ja L_232155
L_232050:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1443,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_232051+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_232051
.p2align 0x4
.long 0x39D0
L_232051:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq %rax,0x88(%rbp)
L_232052:
	movq $0x0,0x90(%rbp)
.p2align 0x4,,0x7
loop_2635:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_474996
.p2align 0x4,,0x7
L_232053:
	movq 0x90(%rbp),%r15
	cmpq 0x80(%rbp),%r15
	jnl L_474967
L_232290:
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x60(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq $0x93F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x78(%rbp),%r14
	movq %r14,%r11
	movq %r11,0x0(%r15)
	movq 0x30(%rbp),%r10
	movq %r10,0x8(%r15)
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r9
	shrq $0x1,%r9
	cmpq $0xF2E,%r9
	je L_474966
	cmpq $0xF2F,%r9
	je L_474942
L_232291:
	movq 0x10(%r13),%r9
	movq %r9,0x98(%rbp)
	movl 0x0(%r13),%r9d
	movl %r9d,0xC(%rbp)
	movq 0x8(%r13),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0xF3C,%r13
	je L_474941
L_232304:
	movq 0x0(%r15),%r13
	movq %r13,0xB0(%rbp)
	movq %r14,0xA8(%rbp)
	movq %r10,0xB8(%rbp)
	addq $0xA8,%rbp
	leaq (L_232305+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp replaceVar_0
.p2align 0x4
L_474941:
L_232292:
	movq 0x8(%r15),%r13
	movq %r13,0xA0(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0xB8(%rbp)
	movq %r14,0xB0(%rbp)
	movq %r10,0xC0(%rbp)
	addq $0xB0,%rbp
	leaq (L_232293+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp replaceVar_0
.p2align 0x4
L_474942:
L_232310:
	movq 0x10(%r13),%r9
	movq %r9,0x98(%rbp)
	movq 0x8(%r13),%r9
	movq %r9,0xA0(%rbp)
	movq 0x0(%r13),%r9
	movq 0xFFFFFFFFFFFFFFF8(%r9),%r13
	shrq $0x1,%r13
	cmpq $0xF28,%r13
	je L_474964
	cmpq $0xF29,%r13
	je L_474962
	cmpq $0xF2A,%r13
	je L_474960
	cmpq $0xF2B,%r13
	je L_474959
	cmpq $0xF2C,%r13
	je L_474943
L_232311:
	movq 0x0(%r9),%r13
	movq %r13,0xB8(%rbp)
	movq %r14,0xB0(%rbp)
	movq %r10,0xC0(%rbp)
	addq $0xB0,%rbp
	leaq (L_232312+0x0)(%rip),%r14
	movq %r14,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp replaceVar_0
.p2align 0x4
L_474943:
L_232390:
	movq 0x98(%rbp),%r15
	cmpq $0x1,%r15
	je L_474958
L_232391:
	xchgq %r9,%r14
.p2align 0x4,,0x7
L_232315:
	movq %r15,0x98(%rbp)
	movq %r14,0xA8(%rbp)
.p2align 0x4,,0x7
L_232316:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_474957
.p2align 0x4,,0x7
L_232317:
	movq $0x1E5F,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0xB0(%rbp)
	addq $0x20,%r12
	movq 0xA8(%rbp),%r11
	movq %r11,0x0(%r13)
	movq 0xA0(%rbp),%r11
	movq %r11,0x8(%r13)
	movq 0x98(%rbp),%r10
	movq %r10,0x10(%r13)
	cmpq $0x1,%r10
	je L_232332
L_232318:
	movq $0x6F5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq 0x78(%rbp),%r13
	movq 0x8(%r13),%r14
	movq $0x10B7,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0x271B,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r9,0xA8(%rbp)
	movq %r15,0x0(%r9)
	movq %r14,0x8(%r9)
	movq %r13,0x18(%r9)
	addq $0x28,%r12
	movq %r11,0x10(%r9)
	movq 0x10(%r10),%r13
	movq %r13,0xB8(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_232026
L_232319:
	movq %r15,0x0(%r11)
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_474954
L_232320:
	movq 0x0(%r11),%r14
	movq 0x8(%r11),%r11
	xorl %ecx,%ecx
	movq %r11,%r15
.p2align 0x4,,0x7
L_232322:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_232323
L_232336:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xD54,%r13
	jne L_232323
L_232337:
	movq 0x38(%rbp),%r13
	cmpq %r13,0x0(%r14)
	je L_474949
L_232323:
	incl %ecx
	movl %ecx,0xC(%rbp)
	jo L_232032
L_232324:
	cmpq $0x1,%r15
	je L_474944
L_232325:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_232322
.p2align 0x4
L_474944:
L_232326:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_474947
.p2align 0x4,,0x7
L_232327:
	movl 0xC(%rbp),%ecx
L_232328:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_232038
L_232329:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_232331
L_232333:
	movl %ecx,0x0(%r15)
L_232331:
	movq $0x1AA9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xA8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xB8(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
L_232332:
	movq 0xB0(%rbp),%r15
.p2align 0x4,,0x7
L_232299:
	movq 0x88(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x90(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x90(%rbp)
	jmp loop_2635
.p2align 0x4
L_474947:
L_232334:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_232335+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_232335
.p2align 0x4
.long 0x39F8
L_232335:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	jmp L_232327
.p2align 0x4
L_474949:
L_232339:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_232038
L_232340:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_474950
L_232342:
	movl %ecx,0x0(%r15)
	movq (globalObjptr+0x578)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_474950:
L_232341:
	movq (globalObjptr+0x578)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_474954:
L_232343:
	xorl %ecx,%ecx
	jmp L_232328
.p2align 0x4
L_474957:
L_232345:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_232346+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_232346
.p2align 0x4
.long 0x39F6
L_232346:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	jmp L_232317
.p2align 0x4
L_474958:
L_232392:
	movq %r9,0xA8(%rbp)
	movq $0x1,0x98(%rbp)
	jmp L_232316
.p2align 0x4
L_474959:
L_232383:
	movq 0x8(%r9),%r15
	movq %r15,0xC0(%rbp)
	movq 0x0(%r9),%r15
	movq %r15,0xA8(%rbp)
	movq %r14,0xB8(%rbp)
	movq %r10,0xC8(%rbp)
	addq $0xB8,%rbp
	leaq (L_232384+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp replaceVar_0
.p2align 0x4
L_474960:
L_232374:
	movq 0x8(%r9),%r13
	movq %r13,0xA8(%rbp)
	movq 0x0(%r9),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r9
	movl %r9d,%r8d
	movslq %r8d,%rsp
	cmpq %r9,%rsp
	jne L_474961
L_232376:
	movl %r8d,0xC0(%rbp)
	movq $0x3FBF,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r15,0x0(%r9)
	movq %r13,0x8(%r9)
	movq %r9,0xB8(%rbp)
	addq $0x18,%r12
	addq $0xB8,%rbp
	leaq (L_232377+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
L_474961:
L_232047:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_474962:
L_232365:
	movq 0x8(%r9),%r13
	movq %r13,0xA8(%rbp)
	movq 0x0(%r9),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r9
	movl %r9d,%r8d
	movslq %r8d,%rsp
	cmpq %r9,%rsp
	jne L_232047
L_232367:
	movl %r8d,0xC0(%rbp)
	movq $0x3FBF,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r15,0x0(%r9)
	movq %r13,0x8(%r9)
	movq %r9,0xB8(%rbp)
	addq $0x18,%r12
	addq $0xB8,%rbp
	leaq (L_232368+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
L_474964:
L_232350:
	movl 0x0(%r9),%r15d
	movl %r15d,0xC(%rbp)
	movq 0x8(%r9),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0xF3C,%r13
	je L_474965
L_232360:
	movq 0x0(%r15),%r13
	movq %r13,0xB8(%rbp)
	movq %r14,0xB0(%rbp)
	movq %r10,0xC0(%rbp)
	addq $0xB0,%rbp
	leaq (L_232361+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp replaceVar_0
.p2align 0x4
L_474965:
L_232351:
	movq 0x8(%r15),%r13
	movq %r13,0xA8(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0xC0(%rbp)
	movq %r14,0xB8(%rbp)
	movq %r10,0xC8(%rbp)
	addq $0xB8,%rbp
	leaq (L_232352+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp replaceVar_0
.p2align 0x4
L_474966:
	movq %r13,%r15
	jmp L_232299
.p2align 0x4
L_474967:
L_232054:
	movq 0x88(%rbp),%r14
	movq $0x21,0xFFFFFFFFFFFFFFF8(%r14)
	movq $0x93F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x78(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x30(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x58(%rbp),%r13
	cmpq $0x1,%r13
	je L_474980
L_232055:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xF31,%r11
	je L_474978
	cmpq $0xF32,%r11
	je L_474976
	cmpq $0xF33,%r11
	je L_474974
	cmpq $0xF34,%r11
	je L_474973
	cmpq $0xF35,%r11
	je L_474971
	cmpq $0xF36,%r11
	je L_474969
L_232056:
	movq 0x10(%r13),%r11
	movq %r11,0x60(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x80(%rbp)
	movq 0x0(%r13),%r11
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r13
	movl %r13d,%r10d
	movslq %r10d,%r9
	cmpq %r13,%r9
	jne L_232047
L_232058:
	movl %r10d,0xA0(%rbp)
	movq $0x4057,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r11,0x8(%r13)
	movq %r13,0x98(%rbp)
	addq $0x18,%r12
	addq $0x98,%rbp
	leaq (L_232059+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
L_474969:
L_232282:
	movq 0x20(%r13),%r11
	movq %r11,0x60(%rbp)
	movq 0x18(%r13),%r11
	movq %r11,0x80(%rbp)
	movq 0x10(%r13),%r15
	movq %r15,0x90(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x98(%rbp)
	movq 0x0(%r13),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r13,%r10
	jne L_232047
L_232284:
	movl %r11d,0xB0(%rbp)
	movq $0x4057,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r13,0xA8(%rbp)
	addq $0x18,%r12
	addq $0xA8,%rbp
	leaq (L_232285+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
L_474971:
L_232267:
	movq 0x10(%r13),%r11
	movq %r11,0x60(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x80(%rbp)
	movq 0x0(%r13),%r11
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r13
	movl %r13d,%r10d
	movslq %r10d,%r9
	cmpq %r9,%r13
	jne L_232047
L_232269:
	movl %r10d,0xA0(%rbp)
	movq $0x4057,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r11,0x8(%r13)
	movq %r13,0x98(%rbp)
	addq $0x18,%r12
	addq $0x98,%rbp
	leaq (L_232270+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
L_474973:
L_232236:
	movq 0x10(%r13),%r14
	movq %r14,0xA0(%rbp)
	movq 0x8(%r13),%r14
	movq %r14,0x60(%rbp)
	movq 0x0(%r13),%r14
	movq %r14,0x80(%rbp)
	movq 0x78(%rbp),%r14
	movq %r14,0x98(%rbp)
	movq 0x30(%rbp),%r14
	movq %r14,0xA8(%rbp)
	addq $0x98,%rbp
	leaq (L_232237+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp replaceVar_0
.p2align 0x4
L_474974:
L_232229:
	movq 0x8(%r13),%r11
	movq %r11,0x60(%rbp)
	movq 0x0(%r13),%r11
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r13
	movl %r13d,%r10d
	movslq %r10d,%r9
	cmpq %r13,%r9
	jne L_232047
L_232231:
	movl %r10d,0xA0(%rbp)
	movq $0x4057,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r11,0x8(%r13)
	movq %r13,0x98(%rbp)
	addq $0x18,%r12
	addq $0x98,%rbp
	leaq (L_232232+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
L_474976:
L_232222:
	movq 0x0(%r13),%r11
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r13
	movl %r13d,%r10d
	movslq %r10d,%r9
	cmpq %r9,%r13
	jne L_232047
L_232224:
	movl %r10d,0xA0(%rbp)
	movq $0x4057,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r11,0x8(%r13)
	movq %r13,0x98(%rbp)
	addq $0x18,%r12
	addq $0x98,%rbp
	leaq (L_232225+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
L_474978:
L_232215:
	movq 0x0(%r13),%r11
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r13
	movl %r13d,%r10d
	movslq %r10d,%r9
	cmpq %r9,%r13
	jne L_232047
L_232217:
	movl %r10d,0xA0(%rbp)
	movq $0x4057,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r11,0x8(%r13)
	movq %r13,0x98(%rbp)
	addq $0x18,%r12
	addq $0x98,%rbp
	leaq (L_232218+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
L_474980:
L_232289:
	movq $0x1,0x58(%rbp)
L_232061:
	movq 0x28(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x60(%rbp)
	cmpq $0x1,%r13
	je L_474995
L_232062:
	movq 0x8(%r13),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_232063:
	incl %ecx
	jo L_232032
L_232064:
	cmpq $0x1,%r15
	je L_474981
L_232065:
	movq 0x8(%r15),%r15
	jmp L_232063
.p2align 0x4
L_474981:
L_232066:
L_232067:
	movslq %ecx,%rdx
	movq %rdx,0x80(%rbp)
	testq %rdx,%rdx
	jz L_474993
L_232068:
	cmpq $0x7FFFFFFF,%rdx
	ja L_232155
L_232069:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x156D,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_232070+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_232070
.p2align 0x4
.long 0x39D1
L_232070:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq %rax,0x90(%rbp)
L_232071:
	movq 0x60(%rbp),%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2636:
	cmpq 0x80(%rbp),%r15
	jnl L_474983
L_232207:
	cmpq $0x1,%r14
	je L_474982
L_232208:
	movq %r15,%r13
	movq %r15,%r11
	movq 0x0(%r14),%r10
	movq 0x8(%r14),%r14
	movq 0x0(%r10),%r9
	movq 0x8(%r10),%r8
	movq 0x90(%rbp),%r10
	movq %r10,%rsp
	shrq $0x8,%rsp
	movq (gcState+0x3C8)(%rip),%rsi
	movq %rsp,%rax
	movb $0x1,0x0(%rsi,%rax,1)
	salq $0x4,%r13
	movq %r9,0x0(%r10,%r13,1)
	movq %r10,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%rsi,%r13,1)
	salq $0x4,%r11
	movq %r8,0x8(%r10,%r11,1)
	incq %r15
	jmp loop_2636
.p2align 0x4
L_474982:
L_232165:
	movq (globalObjptr+0x4B0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_474983:
L_232072:
	movq 0x90(%rbp),%r15
	movq $0x18BD,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%ecx
	movslq %ecx,%r13
	movq %r13,0x60(%rbp)
	cmpq %r14,%r13
	jne L_232047
L_232074:
	cmpl $0x0,%ecx
	jl L_474990
L_232075:
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_2637:
	cmpl %ecx,%ebx
	jnl L_474984
L_232205:
	movslq %ebx,%r15
	salq $0x4,%r15
	movq 0x90(%rbp),%r14
	movq 0x8(%r14,%r15,1),%r13
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r14
	movb $0x1,0x0(%r14,%r15,1)
	movq $0x1,0x0(%r13)
	incl %ebx
	jmp loop_2637
.p2align 0x4
L_474984:
L_232076:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_232077
L_232203:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_232204+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_232204
.p2align 0x4
.long 0x39E8
L_232204:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_232077:
	movq 0x28(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq $0x1,0x0(%r15)
	movq $0x271F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x88(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq %r15,0x80(%rbp)
	movq 0x60(%rbp),%rdx
	testq %rdx,%rdx
	jz L_474988
L_232078:
	cmpq $0x7FFFFFFF,%rdx
	ja L_474987
L_232079:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1443,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_232080+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_232080
.p2align 0x4
.long 0x39D2
L_232080:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq %rax,0x88(%rbp)
L_232081:
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2638:
	cmpq 0x60(%rbp),%r15
	jnl L_474985
L_232200:
	movl %r15d,%r14d
	movslq %r14d,%r13
	salq $0x4,%r13
	movq 0x90(%rbp),%r14
	movq 0x0(%r14,%r13,1),%r11
	movq 0x88(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r11,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_2638
.p2align 0x4
L_474985:
L_232082:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_232083
L_232198:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_232199+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_232199
.p2align 0x4
.long 0x39E7
L_232199:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_232083:
	movq 0x88(%rbp),%r15
	movq $0x21,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x271F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x80(%rbp),%r15
	movq %r15,0x8(%r14)
	movq %r14,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_232084+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_6
.p2align 0x4
L_474987:
L_232155:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_474988:
L_232202:
	movq (globalObjptr+0x2428)(%rip),%r15
	movq %r15,0x88(%rbp)
	jmp L_232081
.p2align 0x4
L_474990:
L_232161:
	movq (globalObjptr+0x4F8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_474993:
L_232211:
	movq (globalObjptr+0x2420)(%rip),%r15
	movq %r15,0x90(%rbp)
	jmp L_232071
.p2align 0x4
L_474995:
L_232212:
	xorl %ecx,%ecx
	jmp L_232067
.p2align 0x4
L_474996:
L_232393:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_232394+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_232394
.p2align 0x4
.long 0x39FC
L_232394:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	jmp L_232053
.p2align 0x4
L_474998:
L_232396:
	movq (globalObjptr+0x2430)(%rip),%r15
	movq %r15,0x88(%rbp)
	jmp L_232052
.p2align 0x4
.long 0x39FD
L_232398:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movl 0x98(%rbp),%r15d
	movl %r15d,0xC(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_232399
L_232400:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_232401+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_232401
.p2align 0x4
.long 0x39E9
L_232401:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_232399:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0xC(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xCE38)(%rip),%r15
	movq %r15,0x18(%r13)
	movq $0x93D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x28,%r12
	movq 0x88(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x80(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x18(%r15)
	movq %r15,0x78(%rbp)
	jmp L_232044
.p2align 0x4
.long 0x39F7
L_232305:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0xA0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_232306
L_232307:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_232308+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_232308
.p2align 0x4
.long 0x39F5
L_232308:
	addq $0xFFFFFFFFFFFFFF50,%rbp
L_232306:
	movq $0x1E7B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xA0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0xA0(%rbp)
L_232296:
	movq 0x78(%rbp),%r15
	movq %r15,0xB0(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xB0,%rbp
	leaq (L_232297+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp replaceVar_0
.p2align 0x4
.long 0x39F2
L_232293:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movq 0xB0(%rbp),%r15
	movq %r15,0xA8(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xB8,%rbp
	leaq (L_232294+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp replaceVar_0
.p2align 0x4
.long 0x39F2
L_232312:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movq 0xB0(%rbp),%r15
	movq %r15,0xA8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_232313
L_232348:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_232349+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_232349
.p2align 0x4
.long 0x39F6
L_232349:
	addq $0xFFFFFFFFFFFFFF48,%rbp
L_232313:
	movq $0x1E4F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0xA8(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x98(%rbp),%r15
	cmpq $0x1,%r15
	je L_475002
L_232314:
	jmp L_232315
.p2align 0x4
L_475002:
L_232347:
	movq %r14,0xA8(%rbp)
	movq $0x1,0x98(%rbp)
	jmp L_232316
.p2align 0x4
.long 0x39F9
L_232384:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0xB0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_232385
L_232388:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_232389+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_232389
.p2align 0x4
.long 0x39FB
L_232389:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_232385:
	movq $0x1E57,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0xA8(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0xB0(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x98(%rbp),%r15
	cmpq $0x1,%r15
	je L_475004
L_232386:
	jmp L_232315
.p2align 0x4
L_475004:
L_232387:
	movq %r14,0xA8(%rbp)
	movq $0x1,0x98(%rbp)
	jmp L_232316
.p2align 0x4
.long 0x39F9
L_232377:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0xB0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_232378
L_232381:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_232382+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_232382
.p2align 0x4
.long 0x39FB
L_232382:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_232378:
	movq $0x1E55,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0xB0(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0xA8(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x98(%rbp),%r15
	cmpq $0x1,%r15
	je L_475006
L_232379:
	jmp L_232315
.p2align 0x4
L_475006:
L_232380:
	movq %r14,0xA8(%rbp)
	movq $0x1,0x98(%rbp)
	jmp L_232316
.p2align 0x4
.long 0x39F9
L_232368:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0xB0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_232369
L_232372:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_232373+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_232373
.p2align 0x4
.long 0x39FB
L_232373:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_232369:
	movq $0x1E53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0xB0(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0xA8(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x98(%rbp),%r15
	cmpq $0x1,%r15
	je L_475008
L_232370:
	jmp L_232315
.p2align 0x4
L_475008:
L_232371:
	movq %r14,0xA8(%rbp)
	movq $0x1,0x98(%rbp)
	jmp L_232316
.p2align 0x4
.long 0x39F2
L_232361:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movq 0xB0(%rbp),%r15
	movq %r15,0xA8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_232362
L_232363:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_232364+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_232364
.p2align 0x4
.long 0x39F6
L_232364:
	addq $0xFFFFFFFFFFFFFF48,%rbp
L_232362:
	movq $0x1E7B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xA8(%rbp),%r14
	movq %r14,0x0(%r15)
L_232355:
	movq $0x1E51,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl 0xC(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x98(%rbp),%r15
	cmpq $0x1,%r15
	je L_475010
L_232356:
	jmp L_232315
.p2align 0x4
L_475010:
L_232357:
	movq %r14,0xA8(%rbp)
	movq $0x1,0x98(%rbp)
	jmp L_232316
.p2align 0x4
.long 0x39F9
L_232352:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0xB0(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq 0xA8(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (L_232353+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp replaceVar_0
.p2align 0x4
.long 0x1D43
L_232059:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_232060
L_232213:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_232214+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_232214
.p2align 0x4
.long 0x39E9
L_232214:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_232060:
	movq $0x1E61,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x80(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0x58(%rbp)
	jmp L_232061
.p2align 0x4
.long 0x39F0
L_232285:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_232286
L_232287:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_232288+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_232288
.p2align 0x4
.long 0x39F1
L_232288:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_232286:
	movq $0x1E6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x30,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x98(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x90(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x80(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x20(%r15)
	movq %r15,0x58(%rbp)
	jmp L_232061
.p2align 0x4
.long 0x1D43
L_232270:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_232271
L_232280:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_232281+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_232281
.p2align 0x4
.long 0x39E9
L_232281:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_232271:
	movq 0x60(%rbp),%r13
	cmpq $0x1,%r13
	je L_475017
	cmpq $0x2,%r13
	je L_475016
L_232272:
	movq 0x8(%r13),%r15
	movq 0x0(%r13),%r14
	cmpq $0x1,%r15
	je L_475015
	cmpq $0x2,%r15
	je L_475014
L_232274:
	movq $0x23B5,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq %r13,%r15
L_232275:
	movq $0x1E6B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movq 0x58(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x80(%rbp),%r15
	movq %r15,0x8(%r14)
	movq %r14,0x58(%rbp)
	jmp L_232061
.p2align 0x4
L_475014:
L_232277:
	movq $0x2,%r15
	jmp L_232274
.p2align 0x4
L_475015:
L_232276:
	movq $0x1,%r15
	jmp L_232274
.p2align 0x4
L_475016:
L_232279:
	movq $0x2,%r15
	jmp L_232275
.p2align 0x4
L_475017:
L_232278:
	movq $0x1,%r15
	jmp L_232275
.p2align 0x4
.long 0x1D43
L_232237:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_232238
L_232265:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_232266+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_232266
.p2align 0x4
.long 0x39E9
L_232266:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_232238:
	movq 0x80(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1208,%r14
	je L_475025
L_232249:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x98(%rbp)
	cmpq %rdx,%r15
	movq %r14,0x90(%rbp)
	jne L_232047
L_232251:
	testq %rdx,%rdx
	jz L_475023
L_232252:
	cmpq $0x7FFFFFFF,%rdx
	ja L_232155
L_232253:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14DF,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_232254+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_232254
.p2align 0x4
.long 0x39EF
L_232254:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq %rax,0x80(%rbp)
L_232255:
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2645:
	cmpq 0x98(%rbp),%r15
	jnl L_475019
L_232262:
	movl %r15d,%r14d
	movslq %r14d,%r13
	movq 0x90(%rbp),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq 0x80(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r11,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_2645
.p2align 0x4
L_475019:
L_232256:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_232257
L_232260:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_232261+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_232261
.p2align 0x4
.long 0x39E9
L_232261:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_232257:
	movq 0x80(%rbp),%r13
	movq $0xB03,0xFFFFFFFFFFFFFFF8(%r13)
	movq $0x2413,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r13,0x0(%r14)
	movq 0x60(%rbp),%r15
	cmpq $0x1,%r15
	je L_475020
L_232258:
L_232245:
	movq $0x1E69,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x20,%r12
	movq 0x58(%rbp),%r15
	movq %r15,0x10(%r13)
	movq %r13,0x58(%rbp)
	jmp L_232061
.p2align 0x4
L_475020:
L_232259:
	movq $0x1,%r13
	xchgq %r13,%r15
	jmp L_232245
.p2align 0x4
L_475023:
L_232264:
	movq (globalObjptr+0x2438)(%rip),%r15
	movq %r15,0x80(%rbp)
	jmp L_232255
.p2align 0x4
L_475025:
L_232239:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r13,0x90(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_232047
L_232241:
	movl %r13d,0xA8(%rbp)
	movq $0x3989,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0xA0(%rbp)
	addq $0x10,%r12
	addq $0xA0,%rbp
	leaq (L_232242+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_27
.p2align 0x4
.long 0x39EC
L_232232:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_232233
L_232234:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_232235+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_232235
.p2align 0x4
.long 0x39D1
L_232235:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_232233:
	movq $0x1E67,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x58(%rbp)
	jmp L_232061
.p2align 0x4
.long 0x39EA
L_232225:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_232226
L_232227:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_232228+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_232228
.p2align 0x4
.long 0x39EB
L_232228:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_232226:
	movq $0x1E65,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x58(%rbp)
	jmp L_232061
.p2align 0x4
.long 0x39EA
L_232218:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_232219
L_232220:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_232221+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_232221
.p2align 0x4
.long 0x39EB
L_232221:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_232219:
	movq $0x1E63,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x58(%rbp)
	jmp L_232061
.p2align 0x4
.long 0x39D3
L_232084:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_232085
L_232196:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_232197+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_232197
.p2align 0x4
.long 0x39E6
L_232197:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_232085:
	movq 0x50(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0xC(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_232047
L_232087:
	cmpl $0x0,%r13d
	jl L_232161
L_232088:
	movl $0x0,0x80(%rbp)
loop_2639:
	movl 0xC(%rbp),%r14d
	cmpl %r14d,0x80(%rbp)
	jl L_475036
L_232089:
	movl 0x8(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_475031
L_232090:
	movq 0x60(%rbp),%r15
L_232091:
	movq $0x23,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x28,%r12
	movq 0x58(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x68(%rbp),%r15
	movq %r15,0x10(%r14)
	movq 0x70(%rbp),%r15
	movq %r15,0x18(%r14)
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r13
	movq $0x1E99,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq %r11,0x0(%r15)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_475031:
L_232092:
	movq 0x78(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x8(%rbp)
	movq 0x18(%r14),%r13
	movq 0x0(%r13),%r15
	movq $0x19D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x38(%rbp)
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	cmpq $0x1,%r15
	je L_475035
L_232093:
	movq 0x8(%r15),%r14
	xorl %ecx,%ecx
	movq %r14,%r15
.p2align 0x4,,0x7
L_232094:
	incl %ecx
	movl %ecx,0x40(%rbp)
	jo L_232032
L_232095:
	cmpq $0x1,%r15
	je L_475032
L_232096:
	movq 0x8(%r15),%r15
	jmp L_232094
.p2align 0x4
L_475032:
L_232097:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_232098
L_232187:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_232188+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_232188
.p2align 0x4
.long 0x39E4
L_232188:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_232098:
	movl 0x40(%rbp),%ecx
L_232099:
	movl %ecx,0x88(%rbp)
	movq $0x4009,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_232100+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
L_475035:
L_232189:
	xorl %ecx,%ecx
	jmp L_232099
.p2align 0x4
L_475036:
L_232190:
	movslq 0x80(%rbp),%r15
	movq 0x50(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x98(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0xA0(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0xA8(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0xB0(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0xD0(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0xD8(%rbp)
	addq $0x90,%rbp
	leaq (L_232191+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3933
.p2align 0x4
.long 0x39F4
L_232297:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movq 0xB0(%rbp),%r15
	movq %r15,0x98(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_232298
L_232300:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_232301+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_232301
.p2align 0x4
.long 0x39F5
L_232301:
	addq $0xFFFFFFFFFFFFFF50,%rbp
L_232298:
	movq $0x1E5B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movl 0xC(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0xA0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x98(%rbp),%r14
	movq %r14,0x10(%r15)
	jmp L_232299
.p2align 0x4
.long 0x39F3
L_232294:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0xA0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_232295
L_232302:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_232303+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_232303
.p2align 0x4
.long 0x39F6
L_232303:
	addq $0xFFFFFFFFFFFFFF48,%rbp
L_232295:
	movq $0x1E79,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xA8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xA0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0xA0(%rbp)
	jmp L_232296
.p2align 0x4
.long 0x39FA
L_232353:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0xA8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_232354
L_232358:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_232359+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_232359
.p2align 0x4
.long 0x39FB
L_232359:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_232354:
	movq $0x1E79,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xB0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xA8(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_232355
.p2align 0x4
.long 0x39ED
L_232242:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r15
	movq %r15,0x80(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_232243
L_232247:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_232248+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_232248
.p2align 0x4
.long 0x39EE
L_232248:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_232243:
	movq $0x2411,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x90(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x80(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x60(%rbp),%r15
	cmpq $0x1,%r15
	je L_475043
L_232244:
	jmp L_232245
.p2align 0x4
L_475043:
L_232246:
	movq $0x1,%r13
	xchgq %r13,%r15
	jmp L_232245
.p2align 0x4
.long 0x39D4
L_232100:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_232101
L_232185:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_232186+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_232186
.p2align 0x4
.long 0x39E4
L_232186:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_232101:
	movq 0x38(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_232047
L_232103:
	movl %r13d,%r14d
	decl %r14d
	jo L_232032
L_232104:
	movl %r13d,0x88(%rbp)
	movq $0x4005,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movl %r14d,0x0(%r13)
	addq $0x18,%r12
	movl $0x0,0x4(%r13)
	movq %r15,0x8(%r13)
	movq %r13,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_232105+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
.long 0x39E5
L_232191:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_232192
L_232193:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_232194+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_232194
.p2align 0x4
.long 0x39D0
L_232194:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_232192:
	incl 0x80(%rbp)
	jmp loop_2639
.p2align 0x4
.long 0x39D4
L_232105:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_232106
L_232183:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_232184+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_232184
.p2align 0x4
.long 0x39E4
L_232184:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_232106:
	movq 0x38(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x40(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_232047
L_232108:
	testl %r13d,%r13d
	jz L_475049
L_232109:
	movq $0x3943,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x20(%rbp),%r11
	movq %r11,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x80(%rbp)
	movl %r13d,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_232110+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_7
.p2align 0x4
L_475049:
L_232182:
	movq 0x60(%rbp),%r14
	xchgq %r14,%r15
	jmp L_232091
.p2align 0x4
.long 0x39D5
L_232110:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_232111
L_232180:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_232181+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_232181
.p2align 0x4
.long 0x39E4
L_232181:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_232111:
	movq $0x3FBD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0x80(%rbp)
	movl 0x40(%rbp),%r15d
	movl %r15d,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_232112+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
.long 0x39D6
L_232112:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_232113
L_232178:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_232179+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_232179
.p2align 0x4
.long 0x39E3
L_232179:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_232113:
	movq $0x1E55,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x38(%rbp)
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq 0x18(%rbp),%r15
	movl 0x0(%r15),%ebx
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x20(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%ecx
	movslq %ecx,%r13
	cmpq %r13,%r14
	jne L_232047
L_232115:
	cmpl $0x0,%ecx
	jl L_232161
L_232116:
	movl %ebx,0x18(%rbp)
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_2640:
	cmpl %ecx,%ebx
	jnl L_475053
L_232176:
	movslq %ebx,%r15
	salq $0x4,%r15
	movl 0x18(%rbp),%r14d
	imull $0x5555,%r14d
	movq 0x20(%rbp),%r13
	movq 0x8(%r13,%r15,1),%r11
	xorl 0x0(%r11),%r14d
	movl %r14d,0x18(%rbp)
	incl %ebx
	jmp loop_2640
.p2align 0x4
L_475053:
L_232117:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_232118
L_232174:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_232175+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_232175
.p2align 0x4
.long 0x39E2
L_232175:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_232118:
	movq $0x1E4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x2,0x8(%r15)
	movq %r15,0x80(%rbp)
	movl 0x18(%rbp),%r15d
	movl %r15d,0x88(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x80,%rbp
	leaq (L_232119+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lookup_2
.p2align 0x4
.long 0x39D7
L_232119:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_232120
L_232172:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_232173+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_232173
.p2align 0x4
.long 0x39E1
L_232173:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_232120:
	movq $0x1E5F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x8(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0x20(%rbp)
	movq $0x271F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r12,(gcState+0x0)(%rip)
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq %r15,0x30(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1443,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_232121+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_232121
.p2align 0x4
.long 0x39D8
L_232121:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq %rax,0x18(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2641:
	cmpq $0x1,%r15
	jnl L_475058
L_232171:
	movq 0x18(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_2641
.p2align 0x4
L_475058:
L_232122:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_232123
L_232169:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_232170+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_232170
.p2align 0x4
.long 0x39E0
L_232170:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_232123:
	movq 0x18(%rbp),%r15
	movq $0x21,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x271F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x30(%rbp),%r15
	movq %r15,0x8(%r14)
	movq %r14,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_232124+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_6
.p2align 0x4
.long 0x39D9
L_232124:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r14
	movq %r14,0x18(%rbp)
	movq 0x28(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x20(%rbp)
	cmpq $0x1,%r13
	je L_475075
L_232125:
	movq 0x8(%r13),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_232126:
	incl %ecx
	jo L_232032
L_232127:
	cmpq $0x1,%r15
	je L_475061
L_232128:
	movq 0x8(%r15),%r15
	jmp L_232126
.p2align 0x4
L_475061:
L_232129:
L_232130:
	movslq %ecx,%rdx
	movq %rdx,0x30(%rbp)
	testq %rdx,%rdx
	jz L_475073
L_232131:
	cmpq $0x7FFFFFFF,%rdx
	ja L_232155
L_232132:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x156D,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_232133+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_232133
.p2align 0x4
.long 0x39DA
L_232133:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq %rax,0x38(%rbp)
L_232134:
	movq 0x20(%rbp),%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2642:
	cmpq 0x30(%rbp),%r15
	jnl L_475063
L_232162:
	cmpq $0x1,%r14
	je L_232165
L_232163:
	movq %r15,%r13
	movq %r15,%r11
	movq 0x0(%r14),%r10
	movq 0x8(%r14),%r14
	movq 0x0(%r10),%r9
	movq 0x8(%r10),%r8
	movq 0x38(%rbp),%r10
	movq %r10,%rsp
	shrq $0x8,%rsp
	movq (gcState+0x3C8)(%rip),%rsi
	movq %rsp,%rax
	movb $0x1,0x0(%rsi,%rax,1)
	salq $0x4,%r13
	movq %r9,0x0(%r10,%r13,1)
	movq %r10,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%rsi,%r13,1)
	salq $0x4,%r11
	movq %r8,0x8(%r10,%r11,1)
	incq %r15
	jmp loop_2642
.p2align 0x4
L_475063:
L_232135:
	movq 0x38(%rbp),%r15
	movq $0x18BD,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%ecx
	movslq %ecx,%r13
	movq %r13,0x20(%rbp)
	cmpq %r14,%r13
	jne L_232047
L_232137:
	cmpl $0x0,%ecx
	jl L_232161
L_232138:
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_2643:
	cmpl %ecx,%ebx
	jnl L_475064
L_232159:
	movslq %ebx,%r15
	salq $0x4,%r15
	movq 0x38(%rbp),%r14
	movq 0x8(%r14,%r15,1),%r13
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r14
	movb $0x1,0x0(%r14,%r15,1)
	movq $0x1,0x0(%r13)
	incl %ebx
	jmp loop_2643
.p2align 0x4
L_475064:
L_232139:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_232140
L_232157:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_232158+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_232158
.p2align 0x4
.long 0x39DF
L_232158:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_232140:
	movq 0x28(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq $0x1,0x0(%r15)
	movq $0x271F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq %r15,0x30(%rbp)
	movq 0x20(%rbp),%rdx
	testq %rdx,%rdx
	jz L_475068
L_232141:
	cmpq $0x7FFFFFFF,%rdx
	ja L_232155
L_232142:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1443,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_232143+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_232143
.p2align 0x4
.long 0x39DB
L_232143:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq %rax,0x18(%rbp)
L_232144:
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2644:
	cmpq 0x20(%rbp),%r15
	jnl L_475065
L_232153:
	movl %r15d,%r14d
	movslq %r14d,%r13
	salq $0x4,%r13
	movq 0x38(%rbp),%r14
	movq 0x0(%r14,%r13,1),%r11
	movq 0x18(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r11,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_2644
.p2align 0x4
L_475065:
L_232145:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_232146
L_232151:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_232152+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_232152
.p2align 0x4
.long 0x39DE
L_232152:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_232146:
	movq 0x18(%rbp),%r15
	movq $0x21,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x271F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x30(%rbp),%r15
	movq %r15,0x8(%r14)
	movq %r14,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_232147+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_6
.p2align 0x4
L_475068:
L_232156:
	movq (globalObjptr+0x2428)(%rip),%r15
	movq %r15,0x18(%rbp)
	jmp L_232144
.p2align 0x4
L_475073:
L_232167:
	movq (globalObjptr+0x2420)(%rip),%r15
	movq %r15,0x38(%rbp)
	jmp L_232134
.p2align 0x4
L_475075:
L_232168:
	xorl %ecx,%ecx
	jmp L_232130
.p2align 0x4
.long 0x39DC
L_232147:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_232148
L_232149:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_232150+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_232150
.p2align 0x4
.long 0x39DD
L_232150:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_232148:
	movq 0x18(%rbp),%r15
	jmp L_232091
.text
.p2align 0x4
.globl transformStatements_1
.hidden transformStatements_1
transformStatements_1:
L_232418:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_232419
L_232608:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_232609+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_232609
.p2align 0x4
.long 0x45F
L_232609:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_232419:
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	movq %r11,0x10(%rbp)
	cmpq %r14,%r11
	je L_475077
L_232420:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_475077:
L_232421:
	movq 0x10(%rbp),%rdx
	testq %rdx,%rdx
	jz L_475097
L_232422:
	cmpq $0x7FFFFFFF,%rdx
	ja L_475096
L_232423:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x155F,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_232424+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_232424
.p2align 0x4
.long 0x45D
L_232424:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq %rax,0x18(%rbp)
L_232425:
	movq $0x0,0x20(%rbp)
.p2align 0x4,,0x7
loop_2646:
	movq 0x20(%rbp),%r15
	cmpq 0x10(%rbp),%r15
	jnl L_475095
L_232427:
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x0(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x28(%rbp)
	movq 0x8(%rbp),%r15
	movq 0x60(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x58(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x50(%r15),%r14
	movq 0x40(%r15),%r11
	movq %r11,0x40(%rbp)
	movq 0x10(%r15),%r11
	movq %r11,0x48(%rbp)
	movq 0x8(%r15),%r11
	movq %r11,0x50(%rbp)
	movq 0x0(%r15),%r11
	movq %r11,0x58(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xF2E,%r15
	je L_475093
	cmpq $0xF2F,%r15
	je L_475079
L_232428:
	movq 0x10(%r13),%r15
	movq %r15,0x30(%rbp)
	movl 0x0(%r13),%r15d
	movl %r15d,0x38(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x40(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0xF3C,%r13
	je new1_46
L_232434:
	movq %r14,0x70(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	movq %r14,0x68(%rbp)
	addq $0x68,%rbp
	leaq (deObject_7+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1374
.p2align 0x4
new1_46:
new1_45:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1443,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_232430+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_232430
.p2align 0x4
.long 0x56D
L_232430:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	xorq %r15,%r15
	movq %rax,%r14
.p2align 0x4,,0x7
loop_2647:
	cmpq $0x1,%r15
	jnl L_475078
L_232433:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_2647
.p2align 0x4
L_475078:
L_232431:
	movq $0x21,0xFFFFFFFFFFFFFFF8(%r14)
	movq %r14,%r15
.p2align 0x4,,0x7
L_232432:
	movq 0x18(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x20(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x20(%rbp)
	jmp loop_2646
.p2align 0x4
L_475079:
L_232458:
	movq 0x10(%r13),%r15
	movq %r15,0x58(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x60(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x68(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r13
	shrq $0x1,%r13
	cmpq $0xF28,%r13
	je L_475090
	cmpq $0xF29,%r13
	je L_475085
	cmpq $0xF2A,%r13
	je L_475083
L_232459:
	cmpq $0x1,%r15
	je L_475080
L_232460:
	movq %r15,0x78(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_232461+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1374
.p2align 0x4
L_475080:
L_232470:
	movq 0x60(%rbp),%r14
	movq %r14,0x28(%rbp)
L_232463:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_232464
L_232468:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_232469+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_232469
.p2align 0x4
.long 0x3A04
L_232469:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_232464:
	movq $0x1E5F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq %r12,(gcState+0x0)(%rip)
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0x30(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1443,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_232465+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_232465
.p2align 0x4
.long 0x569
L_232465:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	xorq %r15,%r15
	movq %rax,%r14
.p2align 0x4,,0x7
loop_2649:
	cmpq $0x1,%r15
	jnl L_475081
L_232467:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_2649
.p2align 0x4
L_475081:
L_232466:
	movq $0x21,0xFFFFFFFFFFFFFFF8(%r14)
	movq %r14,%r15
	jmp L_232432
.p2align 0x4
L_475083:
L_232538:
	movq 0x68(%rbp),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x28(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x50(%rbp)
	cmpq $0x1,%r15
	jne L_475084
.p2align 0x4,,0x7
L_232522:
	movq (globalObjptr+0xF70)(%rip),%r15
	movq $0x21,0xFFFFFFFFFFFFFFF8(%r15)
	jmp L_232432
.p2align 0x4
L_475084:
L_232539:
	movq %r14,0x80(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (deObject_9+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1374
.p2align 0x4
L_475085:
L_232523:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_232524
L_232536:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r14d
	movl %r14d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r14
	movq %r14,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_232537+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_232537
.p2align 0x4
.long 0x3A0C
L_232537:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_232524:
	movq 0x68(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq $0x1E53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x28(%rbp)
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x58(%rbp),%r15
	cmpq $0x1,%r15
	je L_475086
L_232525:
	movq %r15,0x68(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_232526+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1374
.p2align 0x4
L_475086:
L_232535:
	movq 0x60(%rbp),%r14
	movq %r14,0x30(%rbp)
L_232528:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_232529
L_232533:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_232534+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_232534
.p2align 0x4
.long 0x183E
L_232534:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_232529:
	movq $0x1E5F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq %r12,(gcState+0x0)(%rip)
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0x38(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1443,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_232530+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_232530
.p2align 0x4
.long 0x580
L_232530:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	xorq %r15,%r15
	movq %rax,%r14
.p2align 0x4,,0x7
loop_2653:
	cmpq $0x1,%r15
	jnl L_475087
L_232532:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_2653
.p2align 0x4
L_475087:
L_232531:
	movq $0x21,0xFFFFFFFFFFFFFFF8(%r14)
	movq %r14,%r15
	jmp L_232432
.p2align 0x4
L_475090:
L_232471:
	movq 0x68(%rbp),%r13
	movl 0x0(%r13),%r11d
	movl %r11d,0x28(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x40(%rbp)
	cmpq $0x1,%r15
	je L_232522
L_232472:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xF3C,%r15
	je L_475091
L_232482:
	movq %r14,0x80(%rbp)
	movq 0x0(%r11),%r15
	movq %r15,0x48(%rbp)
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (deObject_8+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1374
.p2align 0x4
L_475091:
L_232473:
	movq 0x58(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_232474+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1374
.p2align 0x4
L_475093:
L_232454:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1443,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_232455+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_232455
.p2align 0x4
.long 0x56D
L_232455:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	xorq %r15,%r15
	movq %rax,%r14
.p2align 0x4,,0x7
loop_2648:
	cmpq $0x1,%r15
	jnl L_475094
L_232457:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_2648
.p2align 0x4
L_475094:
L_232456:
	movq $0x21,0xFFFFFFFFFFFFFFF8(%r14)
	movq %r14,%r15
	jmp L_232432
.p2align 0x4
L_475095:
L_232426:
	movq 0x18(%rbp),%r14
	movq $0x1791,0xFFFFFFFFFFFFFFF8(%r14)
	movq %r14,0x0(%rbp)
	jmp concatV_0
.p2align 0x4
L_475096:
L_232594:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_475097:
L_232607:
	movq (globalObjptr+0x2390)(%rip),%r15
	movq %r15,0x18(%rbp)
	jmp L_232425
.p2align 0x4
.long 0xFF9
deObject_7:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_232435+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp value_0
.p2align 0x4
.long 0x3A02
L_232461:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq %r15,0x78(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_232462+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp valueType_1
.p2align 0x4
.long 0x3A0D
deObject_9:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_232540+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp value_0
.p2align 0x4
.long 0x3A08
L_232526:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq %r15,0x68(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_232527+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp valueType_1
.p2align 0x4
.long 0x3A05
deObject_8:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_232483+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp value_0
.p2align 0x4
.long 0x3A02
L_232474:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq %r15,0x78(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_232475+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp valueType_1
.p2align 0x4
.long 0xFF9
L_232435:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_232436
L_232452:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_232453+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_232453
.p2align 0x4
.long 0x3A01
L_232453:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_232436:
	movq 0x60(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xF48,%r14
	jne new1_45
L_232438:
	movq 0x30(%r15),%r14
	movq 0x28(%r15),%r13
	movq 0x20(%r15),%r11
	movq 0x18(%r15),%r10
	movq 0x10(%r15),%r9
	movq 0x8(%r15),%r8
	movq 0x0(%r15),%rsp
	movq $0xD91,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x28(%rbp)
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	movq %r11,0x10(%r15)
	movq %r10,0x18(%r15)
	movq %r9,0x20(%r15)
	movq %r8,0x28(%r15)
	movq %rsp,0x30(%r15)
	addq $0x40,%r12
	movq 0x48(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (x_807+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1331
.p2align 0x4
.long 0x3A03
L_232462:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_232463
.p2align 0x4
.long 0x3A0D
L_232540:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_232541
L_232603:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_232604+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_232604
.p2align 0x4
.long 0x3A14
L_232604:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_232541:
	movq 0x60(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xF48,%r14
	je L_475100
L_232542:
	movq 0x58(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_232543+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1374
.p2align 0x4
L_475100:
L_232551:
	movq 0x60(%rbp),%r15
	movq 0x30(%r15),%r14
	movq 0x28(%r15),%r13
	movq 0x20(%r15),%r11
	movq 0x18(%r15),%r10
	movq 0x10(%r15),%r9
	movq 0x8(%r15),%r8
	movq 0x0(%r15),%rsp
	movq $0xD91,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r11,0x10(%r15)
	movq %r10,0x18(%r15)
	movq %r9,0x20(%r15)
	movq %r8,0x28(%r15)
	movq %rsp,0x30(%r15)
	addq $0x40,%r12
	movq %r13,0x8(%r15)
	movq 0x0(%r13),%r14
L_232552:
	andq $0x3,%r14
	jz L_232522
L_232553:
	movq %r15,0x70(%rbp)
	movq $0x1,0x68(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x68,%rbp
	leaq (fromList_6+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp flattenArgs_0
.p2align 0x4
.long 0x3A09
L_232527:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x30(%rbp)
	jmp L_232528
.p2align 0x4
.long 0x3A05
L_232483:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_232484
L_232519:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_232520+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_232520
.p2align 0x4
.long 0x5D9
L_232520:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_232484:
	movq 0x60(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xF48,%r14
	je L_475103
L_232485:
	movq 0x58(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_232486+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1374
.p2align 0x4
L_475103:
L_232494:
	movq 0x60(%rbp),%r15
	movq 0x30(%r15),%r14
	movq 0x28(%r15),%r13
	movq %r13,0x68(%rbp)
	movq 0x20(%r15),%r11
	movq 0x18(%r15),%r10
	movq 0x10(%r15),%r9
	movq 0x8(%r15),%r8
	movq 0x0(%r15),%rsp
	movq $0xD91,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x70(%rbp)
	movq %r14,0x0(%r15)
	movq %r11,0x10(%r15)
	movq %r10,0x18(%r15)
	movq %r9,0x20(%r15)
	movq %r8,0x28(%r15)
	movq %rsp,0x30(%r15)
	addq $0x40,%r12
	movq %r13,0x8(%r15)
	movq 0x58(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_232495+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1374
.p2align 0x4
.long 0x3A03
L_232475:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_232476
L_232480:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_232481+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_232481
.p2align 0x4
.long 0x3A04
L_232481:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_232476:
	movq $0x1E5F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq %r12,(gcState+0x0)(%rip)
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0x30(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1443,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_232477+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_232477
.p2align 0x4
.long 0x569
L_232477:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	xorq %r15,%r15
	movq %rax,%r14
.p2align 0x4,,0x7
loop_2650:
	cmpq $0x1,%r15
	jnl L_475105
L_232479:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_2650
.p2align 0x4
L_475105:
L_232478:
	movq $0x21,0xFFFFFFFFFFFFFFF8(%r14)
	movq %r14,%r15
	jmp L_232432
.p2align 0x4
.long 0x162A
x_807:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_232439
L_232450:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_232451+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_232451
.p2align 0x4
.long 0x3A00
L_232451:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_232439:
	movq 0x48(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_232443
L_232440:
	movq 0x10(%r14),%r15
	movq 0x0(%r15),%r13
L_232441:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_232443
L_232448:
	movq 0x10(%r13),%r15
	movq $0x1E7B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x40(%rbp)
	addq $0x10,%r12
L_232443:
	movq 0x28(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x60(%rbp)
	movl 0x38(%rbp),%r15d
	movl %r15d,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_232444+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp objectOffset_0
.p2align 0x4
.long 0x3A02
L_232543:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq %r15,0x78(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_232544+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp valueType_1
.p2align 0x4
.long 0x1849
fromList_6:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_232554
L_232600:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_232601+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_232601
.p2align 0x4
.long 0x184B
L_232601:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_232554:
	movq $0x19D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x50(%rbp)
	addq $0x10,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14)
	cmpq $0x1,%r13
	je L_475113
L_232555:
	movq 0x8(%r13),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_232556:
	incl %ecx
	movl %ecx,0x40(%rbp)
	jo L_475112
L_232558:
	cmpq $0x1,%r15
	je L_475110
L_232559:
	movq 0x8(%r15),%r15
	jmp L_232556
.p2align 0x4
L_475110:
L_232560:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_232561
L_232597:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_232598+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_232598
.p2align 0x4
.long 0x3A13
L_232598:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_232561:
	movl 0x40(%rbp),%ecx
L_232562:
	movl %ecx,0x70(%rbp)
	movq $0x4009,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_232563+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
L_475112:
L_232557:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_475113:
L_232599:
	xorl %ecx,%ecx
	jmp L_232562
.p2align 0x4
.long 0x3A02
L_232486:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq %r15,0x78(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_232487+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp valueType_1
.p2align 0x4
.long 0x3A06
L_232495:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_232496+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp value_0
.p2align 0x4
.long 0xF00
L_232444:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movl 0x50(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_232445
L_232446:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_232447+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_232447
.p2align 0x4
.long 0x567
L_232447:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_232445:
	movq $0x1E5B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movl 0x28(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0x28(%rbp)
	jmp new1_45
.p2align 0x4
.long 0x3A03
L_232544:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_232545
L_232549:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_232550+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_232550
.p2align 0x4
.long 0x3A04
L_232550:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_232545:
	movq $0x1E5F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq %r12,(gcState+0x0)(%rip)
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0x30(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1443,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_232546+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_232546
.p2align 0x4
.long 0x569
L_232546:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	xorq %r15,%r15
	movq %rax,%r14
.p2align 0x4,,0x7
loop_2654:
	cmpq $0x1,%r15
	jnl L_475116
L_232548:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_2654
.p2align 0x4
L_475116:
L_232547:
	movq $0x21,0xFFFFFFFFFFFFFFF8(%r14)
	movq %r14,%r15
	jmp L_232432
.p2align 0x4
.long 0x1849
L_232563:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r14
	movq %r14,0x40(%rbp)
	movq 0x48(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x50(%rbp)
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq $0x1,0x0(%r14)
	cmpq $0x1,%r13
	je L_475125
L_232564:
	movq 0x8(%r13),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_232565:
	incl %ecx
	jo L_232557
L_232566:
	cmpq $0x1,%r15
	je L_475118
L_232567:
	movq 0x8(%r15),%r15
	jmp L_232565
.p2align 0x4
L_475118:
L_232568:
L_232569:
	movslq %ecx,%rdx
	movq %rdx,0x48(%rbp)
	testq %rdx,%rdx
	jz L_475123
L_232570:
	cmpq $0x7FFFFFFF,%rdx
	ja L_232594
L_232571:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1443,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_232572+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_232572
.p2align 0x4
.long 0x184E
L_232572:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq %rax,0x60(%rbp)
L_232573:
	movq 0x50(%rbp),%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2655:
	cmpq 0x48(%rbp),%r15
	jnl L_475120
L_232590:
	cmpq $0x1,%r14
	je L_475119
L_232591:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq 0x60(%rbp),%r11
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r13,0x0(%r11,%r15,8)
	incq %r15
	jmp loop_2655
.p2align 0x4
L_475119:
L_232592:
	movq (globalObjptr+0x4B0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_475120:
L_232574:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_232575
L_232588:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_232589+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_232589
.p2align 0x4
.long 0x3A12
L_232589:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_232575:
	movq 0x60(%rbp),%r15
	movq $0x21,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x1E55,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x48(%rbp)
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x58(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_232576+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1374
.p2align 0x4
L_475123:
L_232595:
	movq (globalObjptr+0xD90)(%rip),%r15
	movq %r15,0x60(%rbp)
	jmp L_232573
.p2align 0x4
L_475125:
L_232596:
	xorl %ecx,%ecx
	jmp L_232569
.p2align 0x4
.long 0x3A03
L_232487:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_232488
L_232492:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_232493+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_232493
.p2align 0x4
.long 0x3A04
L_232493:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_232488:
	movq $0x1E5F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq %r12,(gcState+0x0)(%rip)
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0x30(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1443,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_232489+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_232489
.p2align 0x4
.long 0x569
L_232489:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	xorq %r15,%r15
	movq %rax,%r14
.p2align 0x4,,0x7
loop_2651:
	cmpq $0x1,%r15
	jnl L_475126
L_232491:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_2651
.p2align 0x4
L_475126:
L_232490:
	movq $0x21,0xFFFFFFFFFFFFFFF8(%r14)
	movq %r14,%r15
	jmp L_232432
.p2align 0x4
.long 0x3A06
L_232496:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_232497
L_232517:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_232518+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_232518
.p2align 0x4
.long 0x3A0B
L_232518:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_232497:
	movq 0x60(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xF48,%r15
	jne L_232498
L_232512:
	movq 0x28(%r14),%r13
	movq 0x0(%r13),%r15
L_232513:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_232498
L_232514:
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r13
	cmpq %r13,0x68(%rbp)
	jne L_475128
L_232516:
	movq $0x1E4F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x28(%rbp)
	movq 0x58(%rbp),%r15
L_232501:
	movq %r15,0x68(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_232502+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1374
.p2align 0x4
L_475128:
L_232498:
	movl 0x28(%rbp),%r15d
	movl %r15d,0x68(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x68,%rbp
	leaq (L_232499+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp objectOffset_0
.p2align 0x4
.long 0x3A0E
L_232576:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq %r15,0x70(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_232577+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp valueType_1
.p2align 0x4
.long 0x3A08
L_232502:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq %r15,0x68(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_232503+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp valueType_1
.p2align 0x4
.long 0x3A07
L_232499:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movl 0x68(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_232500
L_232510:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_232511+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_232511
.p2align 0x4
.long 0x3A0A
L_232511:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_232500:
	movq $0x1E51,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x28(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x28(%rbp)
	movq 0x58(%rbp),%r15
	jmp L_232501
.p2align 0x4
.long 0x3A0F
L_232577:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_232578
L_232586:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_232587+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_232587
.p2align 0x4
.long 0x3A11
L_232587:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_232578:
	movq $0x1E5F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq %r12,(gcState+0x0)(%rip)
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0x30(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1443,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_232579+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_232579
.p2align 0x4
.long 0x3A10
L_232579:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq %rax,0x28(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2656:
	cmpq $0x1,%r15
	jnl L_475133
L_232585:
	movq 0x28(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_2656
.p2align 0x4
L_475133:
L_232580:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_232581
L_232583:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_232584+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_232584
.p2align 0x4
.long 0x1637
L_232584:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_232581:
	movq 0x28(%rbp),%r15
	movq $0x21,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x271F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x271F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_232582+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_6
.p2align 0x4
.long 0x3A09
L_232503:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_232504
L_232508:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_232509+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_232509
.p2align 0x4
.long 0x183E
L_232509:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_232504:
	movq $0x1E5F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq %r12,(gcState+0x0)(%rip)
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0x38(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1443,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_232505+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_232505
.p2align 0x4
.long 0x580
L_232505:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	xorq %r15,%r15
	movq %rax,%r14
.p2align 0x4,,0x7
loop_2652:
	cmpq $0x1,%r15
	jnl L_475136
L_232507:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_2652
.p2align 0x4
L_475136:
L_232506:
	movq $0x21,0xFFFFFFFFFFFFFFF8(%r14)
	movq %r14,%r15
	jmp L_232432
.p2align 0x4
.long 0x5BE
L_232582:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_232432
.text
.p2align 0x4
.globl objectOffset_0
.hidden objectOffset_0
objectOffset_0:
L_232610:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_232669
L_232611:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_475148
L_232612:
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x18(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x30(%r15),%r11
	movq %r11,0x28(%rbp)
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	jne L_475146
L_232617:
	movq 0x0(%r14),%r15
L_232618:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_475138
L_232664:
	movl 0x0(%r15),%r14d
	movl %r14d,0x38(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x38,%rbp
	leaq (L_232665+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp objectOffset_0
.p2align 0x4
L_475138:
L_232619:
	xorl %ecx,%ecx
L_232620:
	movq 0x28(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x4(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_475145
L_232623:
	cmpl $0x0,%r13d
	jl L_475144
L_232624:
	movl %ecx,0x30(%rbp)
	movq $0x1,0x8(%rbp)
	movl $0x0,0x34(%rbp)
loop_2657:
	movl 0x4(%rbp),%r14d
	cmpl %r14d,0x34(%rbp)
	jl L_475143
L_232625:
	movq $0xC59,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x10(%rbp)
	addq $0x10,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r14)
	cmpq $0x1,%r13
	je L_475142
L_232626:
	movq 0x8(%r13),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_232627:
	incl %ecx
	movl %ecx,0x4(%rbp)
	jo L_475141
L_232629:
	cmpq $0x1,%r15
	je L_475139
L_232630:
	movq 0x8(%r15),%r15
	jmp L_232627
.p2align 0x4
L_475139:
L_232631:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_232632
L_232642:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_232643+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_232643
.p2align 0x4
.long 0x97E
L_232643:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_232632:
	movl 0x4(%rbp),%ecx
L_232633:
	movl %ecx,0x38(%rbp)
	movq $0x3743,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_232634+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_8
.p2align 0x4
L_475141:
L_232628:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_475142:
L_232644:
	xorl %ecx,%ecx
	jmp L_232633
.p2align 0x4
L_475143:
L_232645:
	movslq 0x34(%rbp),%r15
	salq $0x4,%r15
	movq 0x28(%rbp),%r14
	movq 0x8(%r14,%r15,1),%r13
	movq %r13,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_232646+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp value_0
.p2align 0x4
L_475144:
L_232663:
	movq (globalObjptr+0x4F8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_475145:
L_232622:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_475146:
L_232614:
	movslq 0x0(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	jnb L_475147
L_232616:
	movl 0x0(%r15,%r14,4),%r13d
	movl %r13d,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_475147:
L_232615:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_475148:
L_232669:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_232670+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_232670
.p2align 0x4
.long 0x4E8
L_232670:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_232612
.p2align 0x4
.long 0x4A6
L_232665:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movl 0x38(%rbp),%r15d
	movl %r15d,0x4(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_232666
L_232667:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_232668+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_232668
.p2align 0x4
.long 0x51F
L_232668:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_232666:
	movl 0x4(%rbp),%ecx
	jmp L_232620
.p2align 0x4
.long 0x459
L_232634:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_232635
L_232640:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_232641+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_232641
.p2align 0x4
.long 0x499
L_232641:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_232635:
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_232622
L_232637:
	movl %r13d,%r14d
	decl %r14d
	jo L_232628
L_232638:
	movl %r13d,0x38(%rbp)
	movq $0x3745,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movl %r14d,0x0(%r13)
	addq $0x18,%r12
	movl $0x0,0x4(%r13)
	movq %r15,0x8(%r13)
	movq %r13,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_232639+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_8
.p2align 0x4
.long 0xF79
L_232646:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_232647
L_232661:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_232662+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_232662
.p2align 0x4
.long 0xA28
L_232662:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_232647:
	movq 0x38(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xF48,%r14
	jne L_232648
L_232651:
	movq 0x30(%r15),%r14
	movq 0x28(%r15),%r13
	movq 0x20(%r15),%r11
	movq 0x18(%r15),%r10
	movq 0x10(%r15),%r9
	movq 0x8(%r15),%r8
	movq 0x0(%r15),%rsp
	movq $0xD91,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r11,0x10(%r15)
	movq %r10,0x18(%r15)
	movq %r9,0x20(%r15)
	movq %r8,0x28(%r15)
	movq %rsp,0x30(%r15)
	addq $0x40,%r12
	movq %r13,0x8(%r15)
	movq 0x0(%r13),%r14
L_232652:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_232648
L_232653:
	movq 0x8(%r14),%r13
	movq 0x8(%r13),%r11
	cmpq %r11,0x18(%rbp)
	jne L_475154
L_232655:
	movq %r15,0x40(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (length_40+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp objectFinalComponents_0
.p2align 0x4
L_475154:
L_232648:
	movl $0x1,%ecx
L_232649:
	movl 0x30(%rbp),%r15d
	addl %r15d,%ecx
	jo L_232628
L_232650:
	movq $0x1B59,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movl %r15d,0x0(%r14)
	movl %ecx,0x30(%rbp)
	movl $0x0,0x4(%r14)
	movq 0x8(%rbp),%r15
	movq %r15,0x8(%r14)
	movq %r14,0x8(%rbp)
	incl 0x34(%rbp)
	jmp loop_2657
.p2align 0x4
.long 0x459
L_232639:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x20(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp L_232614
.p2align 0x4
.long 0xF79
length_40:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_232656
L_232659:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_232660+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_232660
.p2align 0x4
.long 0xA28
L_232660:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_232656:
	movq 0x38(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%ecx
	movslq %ecx,%r13
	cmpq %r14,%r13
	jne L_232622
	jmp L_232649
.text
.p2align 0x4
.globl flattenArgs_0
.hidden flattenArgs_0
flattenArgs_0:
L_232671:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_232672
L_232693:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_232694+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_232694
.p2align 0x4
.long 0x4AE
L_232694:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_232672:
	movq 0x18(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x10(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%ecx
	movslq %ecx,%r13
	cmpq %r14,%r13
	jne L_475163
L_232674:
	decl %ecx
	jo L_475162
L_232676:
	movq 0x0(%rbp),%r15
	movq %r15,0x38(%rbp)
loop_2658:
	cmpl $0x0,%ecx
	jl L_475161
L_232677:
	movl %ecx,%r15d
	decl %r15d
	movl %r15d,0x40(%rbp)
	movslq %ecx,%r15
	movq 0x10(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x48(%rbp)
	movq %r13,0x58(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_232678+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1374
.p2align 0x4
L_475161:
L_232692:
	movq 0x38(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_475162:
L_232675:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_475163:
L_232673:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x19E5
L_232678:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_232679+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp value_0
.p2align 0x4
.long 0x19E5
L_232679:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_232680
L_232690:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_232691+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_232691
.p2align 0x4
.long 0xC43
L_232691:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_232680:
	movq 0x50(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xF48,%r14
	jne L_232681
L_232682:
	movq 0x30(%r15),%r14
	movq 0x28(%r15),%r13
	movq 0x20(%r15),%r11
	movq 0x18(%r15),%r10
	movq 0x10(%r15),%r9
	movq 0x8(%r15),%r8
	movq 0x0(%r15),%rsp
	movq $0xD91,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x58(%rbp)
	movq %r14,0x0(%r15)
	movq %r11,0x10(%r15)
	movq %r10,0x18(%r15)
	movq %r9,0x20(%r15)
	movq %r8,0x28(%r15)
	movq %rsp,0x30(%r15)
	addq $0x40,%r12
	movq %r13,0x8(%r15)
	movq 0x0(%r13),%r15
L_232683:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_232681
L_232684:
	movq 0x8(%rbp),%r14
	movq 0x8(%r15),%r13
	movq 0x8(%r13),%r11
	cmpq %r11,0x8(%r14)
	jne L_475165
L_232686:
	movq 0x48(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (x_808+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1331
.p2align 0x4
L_475165:
L_232681:
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x38(%rbp)
	movl 0x40(%rbp),%ecx
	jmp loop_2658
.p2align 0x4
.long 0x19E4
x_808:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r15,0x50(%rbp)
	cmpq $0x1,%r14
	je L_475169
L_232687:
	movq 0x0(%r14),%r15
	movq %r15,0x60(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x50,%rbp
	leaq (L_232688+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp flattenArgs_0
.p2align 0x4
L_475169:
L_232689:
	movq 0x38(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x50,%rbp
	leaq (L_232688+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp flattenValues_0
.p2align 0x4
.long 0x34A0
L_232688:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x38(%rbp)
	movl 0x40(%rbp),%ecx
	jmp loop_2658
.text
.p2align 0x4
.globl flattenValues_0
.hidden flattenValues_0
flattenValues_0:
L_232695:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_232696
L_232725:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_232726+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_232726
.p2align 0x4
.long 0x4AE
L_232726:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_232696:
	movq 0x18(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x8(%rbp),%r15
	movq 0x30(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_475172
L_232698:
	decl %r13d
	jo L_475171
L_232700:
	movl %r13d,0x50(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x48(%rbp)
loop_2659:
	movl 0x50(%rbp),%r15d
	cmpl $0x0,%r15d
	jl L_475170
L_232701:
	movl %r15d,%r14d
	decl %r14d
	movl %r14d,0x54(%rbp)
	movslq %r15d,%r14
	salq $0x4,%r14
	movq 0x40(%rbp),%r15
	movq 0x8(%r15,%r14,1),%r13
	movq %r13,0x58(%rbp)
	movq %r13,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_232702+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp value_0
.p2align 0x4
L_475170:
L_232724:
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_475171:
L_232699:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_475172:
L_232697:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x712
L_232702:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_232703
L_232722:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_232723+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_232723
.p2align 0x4
.long 0x4CE
L_232723:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_232703:
	movq 0x60(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xF48,%r14
	jne newNoname_3
L_232716:
	movq 0x30(%r15),%r14
	movq 0x28(%r15),%r13
	movq 0x20(%r15),%r11
	movq 0x18(%r15),%r10
	movq 0x10(%r15),%r9
	movq 0x8(%r15),%r8
	movq 0x0(%r15),%rsp
	movq $0xD91,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r11,0x10(%r15)
	movq %r10,0x18(%r15)
	movq %r9,0x20(%r15)
	movq %r8,0x28(%r15)
	movq %rsp,0x30(%r15)
	addq $0x40,%r12
	movq %r13,0x8(%r15)
	movq 0x0(%r13),%r14
L_232717:
	movq %r14,%r13
	andq $0x3,%r13
	jnz newNoname_3
L_232718:
	movq 0x8(%rbp),%r13
	movq 0x8(%r14),%r11
	movq 0x8(%r11),%r10
	cmpq %r10,0x8(%r13)
	jne newNoname_12
L_232720:
	movq %r15,0x68(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x60,%rbp
	leaq (L_232721+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp flattenValues_0
.p2align 0x4
newNoname_12:
newNoname_3:
	movq 0x20(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_232704+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x1983
L_232721:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x48(%rbp)
	movl 0x54(%rbp),%r15d
	movl %r15d,0x50(%rbp)
	jmp loop_2659
.p2align 0x4
.long 0x712
L_232704:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movl 0x68(%rbp),%r15d
	movl %r15d,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_232705
L_232714:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_232715+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_232715
.p2align 0x4
.long 0x1233
L_232715:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_232705:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x68(%rbp)
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x60(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xCE38)(%rip),%r15
	movq %r15,0x18(%r13)
	movq $0x1E7B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x70(%rbp)
	addq $0x10,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movl 0x50(%rbp),%r15d
	movl %r15d,0x80(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x80,%rbp
	leaq (L_232706+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp objectOffset_0
.p2align 0x4
.long 0x11EA
L_232706:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movl 0x80(%rbp),%r15d
	movl %r15d,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_232707
L_232712:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_232713+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_232713
.p2align 0x4
.long 0x3A15
L_232713:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_232707:
	movq $0x1E51,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x60(%rbp)
	addq $0x18,%r12
	movl 0x50(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x58(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_232708+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp valueType_1
.p2align 0x4
.long 0x10CF
L_232708:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_232709
L_232710:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_232711+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_232711
.p2align 0x4
.long 0x713
L_232711:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_232709:
	movq $0x1E5F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x38(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x1E7D,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r10,0x0(%r13)
	movq $0x1CE1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x48(%rbp)
	movl 0x54(%rbp),%r15d
	movl %r15d,0x50(%rbp)
	jmp loop_2659
.text
.p2align 0x4
.globl x_1851
.hidden x_1851
x_1851:
L_232727:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_232791
L_232728:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_475192
L_232729:
	movq 0x0(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x10(%rbp)
	movq 0x8(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x18(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x20(%rbp)
	movq 0x18(%r14),%r13
	movq %r13,0x28(%rbp)
	movq $0xCED,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x30(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq 0x10(%r14),%r13
	movq %r13,0x38(%rbp)
	cmpq $0x1,%r13
	je L_475191
L_232730:
	movq 0x8(%r13),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_232731:
	incl %ecx
	jo L_475190
L_232733:
	cmpq $0x1,%r15
	je L_475178
L_232734:
	movq 0x8(%r15),%r15
	jmp L_232731
.p2align 0x4
L_475178:
L_232735:
L_232736:
	movslq %ecx,%rdx
	movq %rdx,0x40(%rbp)
	testq %rdx,%rdx
	jz L_475189
L_232737:
	cmpq $0x7FFFFFFF,%rdx
	ja L_232774
L_232738:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1553,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_232739+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_232739
.p2align 0x4
.long 0x516
L_232739:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq %rax,0x48(%rbp)
L_232740:
	movq 0x38(%rbp),%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2660:
	cmpq 0x40(%rbp),%r15
	jnl L_475180
L_232785:
	cmpq $0x1,%r14
	je L_475179
L_232786:
	movq %r15,%r13
	movq %r15,%r11
	movq 0x0(%r14),%r10
	movq 0x8(%r14),%r14
	movq 0x0(%r10),%r9
	movq 0x8(%r10),%r8
	movq 0x48(%rbp),%r10
	movq %r10,%rsp
	shrq $0x8,%rsp
	movq (gcState+0x3C8)(%rip),%rsi
	movq %rsp,%rax
	movb $0x1,0x0(%rsi,%rax,1)
	salq $0x4,%r13
	movq %r9,0x0(%r10,%r13,1)
	movq %r10,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%rsi,%r13,1)
	salq $0x4,%r11
	movq %r8,0x8(%r10,%r11,1)
	incq %r15
	jmp loop_2660
.p2align 0x4
L_475179:
L_232787:
	movq (globalObjptr+0x4B0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_475180:
L_232741:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_232742
L_232783:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_232784+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_232784
.p2align 0x4
.long 0x703
L_232784:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_232742:
	movq 0x48(%rbp),%r15
	movq $0xCEB,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x38(%rbp)
	movslq %r13d,%r11
	movq %r11,0x40(%rbp)
	cmpq %r11,%r14
	je L_475181
L_232743:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_475181:
L_232744:
	movq $0x436D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x71,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x50(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x8CF,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x58(%rbp)
	movq %r15,0x0(%r13)
	addq $0x18,%r12
	movq %r14,0x8(%r13)
	cmpl $0x0,0x38(%rbp)
	jl L_475186
L_232745:
	movl $0x0,0x3C(%rbp)
loop_2661:
	movl 0x38(%rbp),%r15d
	cmpl %r15d,0x3C(%rbp)
	jl L_475185
L_232746:
	movq 0x40(%rbp),%rdx
	cmpq $0x7FFFFFFF,%rdx
	ja L_475184
L_232747:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xF1,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_232748+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_232748
.p2align 0x4
.long 0x2D1B
L_232748:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq %rax,0x60(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2662:
	cmpq 0x40(%rbp),%r15
	jnl L_475182
L_232772:
	movq 0x60(%rbp),%r14
	movl $0x0,0x0(%r14,%r15,4)
	incq %r15
	jmp loop_2662
.p2align 0x4
L_475182:
L_232749:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_232750
L_232770:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_232771+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_232771
.p2align 0x4
.long 0x3A18
L_232771:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_232750:
	movq $0xCEF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x30,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x20(%r15)
	movq %r15,0x68(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_232751+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp visit_11
.p2align 0x4
L_475184:
L_232774:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_475185:
L_232775:
	movslq 0x3C(%rbp),%r15
	salq $0x4,%r15
	movq 0x48(%rbp),%r14
	movq 0x0(%r14,%r15,1),%r13
	movq 0x18(%r13),%r11
	movq 0x10(%r11),%r10
	movq %r10,0x60(%rbp)
	movq %r10,0x70(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_232776+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_3
.p2align 0x4
L_475186:
L_232782:
	movq (globalObjptr+0x4F8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_475189:
L_232789:
	movq (globalObjptr+0x2218)(%rip),%r15
	movq %r15,0x48(%rbp)
	jmp L_232740
.p2align 0x4
L_475190:
L_232732:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_475191:
L_232790:
	xorl %ecx,%ecx
	jmp L_232736
.p2align 0x4
L_475192:
L_232791:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_232792+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_232792
.p2align 0x4
.long 0x45F
L_232792:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_232729
.p2align 0x4
.long 0x3A16
L_232751:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_232752
L_232768:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_232769+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_232769
.p2align 0x4
.long 0x3A17
L_232769:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_232752:
	movl $0x0,0x3C(%rbp)
loop_2663:
	movl 0x38(%rbp),%r15d
	cmpl %r15d,0x3C(%rbp)
	jl L_475197
L_232753:
	movq 0x30(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_475196
L_232754:
	movq 0x8(%r14),%r15
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x38(%rbp)
	movq $0x1,0x40(%rbp)
.p2align 0x4,,0x7
L_232755:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_475195
.p2align 0x4,,0x7
L_232756:
	movq $0x23C7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_475194
L_232757:
	movq %r15,0x40(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	movq %r15,0x38(%rbp)
	jmp L_232755
.p2align 0x4
L_475194:
L_232759:
	movq $0x769,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x10(%r14)
	addq $0x28,%r12
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x20(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x28(%rbp),%r15
	movq %r15,0x18(%r14)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_475195:
L_232760:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_232761+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_232761
.p2align 0x4
.long 0x5EB
L_232761:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_232756
.p2align 0x4
L_475196:
L_232762:
	movq $0x1,%r15
	jmp L_232759
.p2align 0x4
L_475197:
L_232763:
	movslq 0x3C(%rbp),%r15
	salq $0x4,%r15
	movq 0x48(%rbp),%r14
	movq 0x0(%r14,%r15,1),%r13
	movq 0x18(%r13),%r11
	movq 0x10(%r11),%r10
	movq %r10,0x40(%rbp)
	movq 0x0(%r10),%r15
	movq %r15,0x68(%rbp)
	movq $0x3DC7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_232764+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp remove_0
.p2align 0x4
.long 0x3A19
L_232776:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_232777
L_232780:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_232781+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_232781
.p2align 0x4
.long 0x3A1A
L_232781:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_232777:
	movq 0x68(%rbp),%r15
	andq $0x1,%r15
	jnz L_475199
L_232778:
	movq $0x1955,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x3C(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x50(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x60(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r10,0x0(%r13)
	incl %r14d
	movl %r14d,0x3C(%rbp)
	jmp loop_2661
.p2align 0x4
L_475199:
L_232779:
	movq (globalObjptr+0x578)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x992
L_232764:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_232765
L_232766:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_232767+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_232767
.p2align 0x4
.long 0x1B73
L_232767:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_232765:
	movq 0x40(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	incl 0x3C(%rbp)
	jmp loop_2663
.text
.p2align 0x4
.globl x_1835
.hidden x_1835
x_1835:
L_232793:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x10(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_232794
L_232936:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_232937+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_232937
.p2align 0x4
.long 0x452
L_232937:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_232794:
	movq 0x0(%rbp),%r15
	movq 0x6E8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x6E0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x6D8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x6D0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x6C8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x6C0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x6B8(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x6B0(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x6A8(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x6A0(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x698(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x690(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x688(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x680(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x678(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x670(%r15),%r14
	movq %r14,0x90(%rbp)
	movq 0x668(%r15),%r14
	movq %r14,0x98(%rbp)
	movq 0x660(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq 0x658(%r15),%r14
	movq %r14,0xA8(%rbp)
	movq 0x650(%r15),%r14
	movq %r14,0xB0(%rbp)
	movq 0x648(%r15),%r14
	movq %r14,0xB8(%rbp)
	movq 0x640(%r15),%r14
	movq %r14,0xC0(%rbp)
	movq 0x638(%r15),%r14
	movq %r14,0xC8(%rbp)
	movq 0x630(%r15),%r14
	movq %r14,0xD0(%rbp)
	movq 0x628(%r15),%r14
	movq %r14,0xD8(%rbp)
	movq 0x620(%r15),%r14
	movq %r14,0xE0(%rbp)
	movq 0x618(%r15),%r14
	movq %r14,0xE8(%rbp)
	movq 0x610(%r15),%r14
	movq %r14,0xF0(%rbp)
	movq 0x608(%r15),%r14
	movq %r14,0xF8(%rbp)
	movq 0x600(%r15),%r14
	movq %r14,0x100(%rbp)
	movq 0x5F8(%r15),%r14
	movq %r14,0x108(%rbp)
	movq 0x5F0(%r15),%r14
	movq %r14,0x110(%rbp)
	movq 0x5E8(%r15),%r14
	movq %r14,0x118(%rbp)
	movq 0x5E0(%r15),%r14
	movq %r14,0x120(%rbp)
	movq 0x5D8(%r15),%r14
	movq %r14,0x128(%rbp)
	movq 0x5D0(%r15),%r14
	movq %r14,0x130(%rbp)
	movq 0x5C8(%r15),%r14
	movq %r14,0x138(%rbp)
	movq 0x5C0(%r15),%r14
	movq %r14,0x140(%rbp)
	movq 0x5B8(%r15),%r14
	movq %r14,0x148(%rbp)
	movq 0x5B0(%r15),%r14
	movq %r14,0x150(%rbp)
	movq 0x5A8(%r15),%r14
	movq %r14,0x158(%rbp)
	movq 0x5A0(%r15),%r14
	movq %r14,0x160(%rbp)
	movq 0x598(%r15),%r14
	movq %r14,0x168(%rbp)
	movq 0x590(%r15),%r14
	movq %r14,0x170(%rbp)
	movq 0x588(%r15),%r14
	movq %r14,0x178(%rbp)
	movq 0x580(%r15),%r14
	movq %r14,0x180(%rbp)
	movq 0x578(%r15),%r14
	movq %r14,0x188(%rbp)
	movq 0x570(%r15),%r14
	movq %r14,0x190(%rbp)
	movq 0x568(%r15),%r14
	movq %r14,0x198(%rbp)
	movq 0x560(%r15),%r14
	movq %r14,0x1A0(%rbp)
	movq 0x558(%r15),%r14
	movq %r14,0x1A8(%rbp)
	movq 0x550(%r15),%r14
	movq %r14,0x1B0(%rbp)
	movq 0x548(%r15),%r14
	movq %r14,0x1B8(%rbp)
	movq 0x540(%r15),%r14
	movq %r14,0x1C0(%rbp)
	movq 0x538(%r15),%r14
	movq %r14,0x1C8(%rbp)
	movq 0x530(%r15),%r14
	movq %r14,0x1D0(%rbp)
	movq 0x528(%r15),%r14
	movq %r14,0x1D8(%rbp)
	movq 0x520(%r15),%r14
	movq %r14,0x1E0(%rbp)
	movq 0x518(%r15),%r14
	movq %r14,0x1E8(%rbp)
	movq 0x510(%r15),%r14
	movq %r14,0x1F0(%rbp)
	movq 0x508(%r15),%r14
	movq %r14,0x1F8(%rbp)
	movq 0x500(%r15),%r14
	movq %r14,0x200(%rbp)
	movq 0x4F8(%r15),%r14
	movq %r14,0x208(%rbp)
	movq 0x4F0(%r15),%r14
	movq %r14,0x210(%rbp)
	movq 0x4E8(%r15),%r14
	movq %r14,0x218(%rbp)
	movq 0x4E0(%r15),%r14
	movq %r14,0x220(%rbp)
	movq 0x4D8(%r15),%r14
	movq %r14,0x228(%rbp)
	movq 0x4D0(%r15),%r14
	movq %r14,0x230(%rbp)
	movq 0x4C8(%r15),%r14
	movq %r14,0x238(%rbp)
	movq 0x4C0(%r15),%r14
	movq %r14,0x240(%rbp)
	movq 0x4B8(%r15),%r14
	movq %r14,0x248(%rbp)
	movq 0x4B0(%r15),%r14
	movq %r14,0x250(%rbp)
	movq 0x4A8(%r15),%r14
	movq %r14,0x258(%rbp)
	movq 0x4A0(%r15),%r14
	movq %r14,0x260(%rbp)
	movq 0x498(%r15),%r14
	movq %r14,0x268(%rbp)
	movq 0x490(%r15),%r14
	movq %r14,0x270(%rbp)
	movq 0x488(%r15),%r14
	movq %r14,0x278(%rbp)
	movq 0x480(%r15),%r14
	movq %r14,0x280(%rbp)
	movq 0x478(%r15),%r14
	movq %r14,0x288(%rbp)
	movq 0x470(%r15),%r14
	movq %r14,0x290(%rbp)
	movq 0x468(%r15),%r14
	movq %r14,0x298(%rbp)
	movq 0x460(%r15),%r14
	movq %r14,0x2A0(%rbp)
	movq 0x458(%r15),%r14
	movq %r14,0x2A8(%rbp)
	movq 0x450(%r15),%r14
	movq %r14,0x2B0(%rbp)
	movq 0x448(%r15),%r14
	movq %r14,0x2B8(%rbp)
	movq 0x440(%r15),%r14
	movq %r14,0x2C0(%rbp)
	movq 0x438(%r15),%r14
	movq %r14,0x2C8(%rbp)
	movq 0x430(%r15),%r14
	movq %r14,0x2D0(%rbp)
	movq 0x428(%r15),%r14
	movq %r14,0x2D8(%rbp)
	movq 0x420(%r15),%r14
	movq %r14,0x2E0(%rbp)
	movq 0x418(%r15),%r14
	movq %r14,0x2E8(%rbp)
	movq 0x410(%r15),%r14
	movq %r14,0x2F0(%rbp)
	movq 0x408(%r15),%r14
	movq %r14,0x2F8(%rbp)
	movq 0x400(%r15),%r14
	movq %r14,0x300(%rbp)
	movq 0x3F8(%r15),%r14
	movq %r14,0x308(%rbp)
	movq 0x3F0(%r15),%r14
	movq %r14,0x310(%rbp)
	movq 0x3E8(%r15),%r14
	movq %r14,0x318(%rbp)
	movq 0x3E0(%r15),%r14
	movq %r14,0x320(%rbp)
	movq 0x3D8(%r15),%r14
	movq %r14,0x328(%rbp)
	movq 0x3D0(%r15),%r14
	movq %r14,0x330(%rbp)
	movq 0x3C8(%r15),%r14
	movq %r14,0x338(%rbp)
	movq 0x3C0(%r15),%r14
	movq %r14,0x340(%rbp)
	movq 0x3B8(%r15),%r14
	movq %r14,0x348(%rbp)
	movq 0x3B0(%r15),%r14
	movq %r14,0x350(%rbp)
	movq 0x3A8(%r15),%r14
	movq %r14,0x358(%rbp)
	movq 0x3A0(%r15),%r14
	movq %r14,0x360(%rbp)
	movq 0x398(%r15),%r14
	movq %r14,0x368(%rbp)
	movq 0x390(%r15),%r14
	movq %r14,0x370(%rbp)
	movq 0x388(%r15),%r14
	movq %r14,0x378(%rbp)
	movq 0x380(%r15),%r14
	movq %r14,0x380(%rbp)
	movq 0x378(%r15),%r14
	movq %r14,0x388(%rbp)
	movq 0x370(%r15),%r14
	movq %r14,0x390(%rbp)
	movq 0x368(%r15),%r14
	movq %r14,0x398(%rbp)
	movq 0x360(%r15),%r14
	movq %r14,0x3A0(%rbp)
	movq 0x358(%r15),%r14
	movq %r14,0x3A8(%rbp)
	movq 0x350(%r15),%r14
	movq %r14,0x3B0(%rbp)
	movq 0x348(%r15),%r14
	movq %r14,0x3B8(%rbp)
	movq 0x340(%r15),%r14
	movq %r14,0x3C0(%rbp)
	movq 0x338(%r15),%r14
	movq %r14,0x3C8(%rbp)
	movq 0x330(%r15),%r14
	movq %r14,0x3D0(%rbp)
	movq 0x328(%r15),%r14
	movq %r14,0x3D8(%rbp)
	movq 0x320(%r15),%r14
	movq %r14,0x3E0(%rbp)
	movq 0x318(%r15),%r14
	movq %r14,0x3E8(%rbp)
	movq 0x310(%r15),%r14
	movq %r14,0x3F0(%rbp)
	movq 0x308(%r15),%r14
	movq %r14,0x3F8(%rbp)
	movq 0x300(%r15),%r14
	movq %r14,0x400(%rbp)
	movq 0x2F8(%r15),%r14
	movq %r14,0x408(%rbp)
	movq 0x2F0(%r15),%r14
	movq %r14,0x410(%rbp)
	movq 0x2E8(%r15),%r14
	movq %r14,0x418(%rbp)
	movq 0x2E0(%r15),%r14
	movq %r14,0x420(%rbp)
	movq 0x2D8(%r15),%r14
	movq %r14,0x428(%rbp)
	movq 0x2D0(%r15),%r14
	movq %r14,0x430(%rbp)
	movq 0x2C8(%r15),%r14
	movq %r14,0x438(%rbp)
	movq 0x2C0(%r15),%r14
	movq %r14,0x440(%rbp)
	movq 0x2B8(%r15),%r14
	movq %r14,0x448(%rbp)
	movq 0x2B0(%r15),%r14
	movq %r14,0x450(%rbp)
	movq 0x2A8(%r15),%r14
	movq %r14,0x458(%rbp)
	movq 0x2A0(%r15),%r14
	movq %r14,0x460(%rbp)
	movq 0x298(%r15),%r14
	movq %r14,0x468(%rbp)
	movq 0x290(%r15),%r14
	movq %r14,0x470(%rbp)
	movq 0x288(%r15),%r14
	movq %r14,0x478(%rbp)
	movq 0x280(%r15),%r14
	movq %r14,0x480(%rbp)
	movq 0x278(%r15),%r14
	movq %r14,0x488(%rbp)
	movq 0x270(%r15),%r14
	movq %r14,0x490(%rbp)
	movq 0x268(%r15),%r14
	movq %r14,0x498(%rbp)
	movq 0x260(%r15),%r14
	movq %r14,0x4A0(%rbp)
	movq 0x258(%r15),%r14
	movq %r14,0x4A8(%rbp)
	movq 0x250(%r15),%r14
	movq %r14,0x4B0(%rbp)
	movq 0x248(%r15),%r14
	movq %r14,0x4B8(%rbp)
	movq 0x240(%r15),%r14
	movq %r14,0x4C0(%rbp)
	movq 0x238(%r15),%r14
	movq %r14,0x4C8(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x4D0(%rbp)
	movq 0x230(%r15),%r14
	movq %r14,0x4D8(%rbp)
	movq 0x228(%r15),%r14
	movq %r14,0x4E0(%rbp)
	movq 0x220(%r15),%r14
	movq %r14,0x4E8(%rbp)
	movq 0x218(%r15),%r14
	movq %r14,0x4F0(%rbp)
	movq 0x210(%r15),%r14
	movq %r14,0x4F8(%rbp)
	movq 0x208(%r15),%r14
	movq %r14,0x500(%rbp)
	movq 0x200(%r15),%r14
	movq %r14,0x508(%rbp)
	movq 0x1F8(%r15),%r14
	movq %r14,0x510(%rbp)
	movq 0x1F0(%r15),%r14
	movq %r14,0x518(%rbp)
	movq 0x1E8(%r15),%r14
	movq %r14,0x520(%rbp)
	movq 0x1E0(%r15),%r14
	movq %r14,0x528(%rbp)
	movq 0x1D8(%r15),%r14
	movq %r14,0x530(%rbp)
	movq 0x1D0(%r15),%r14
	movq %r14,0x538(%rbp)
	movq 0x1C8(%r15),%r14
	movq %r14,0x540(%rbp)
	movq 0x1C0(%r15),%r14
	movq %r14,0x548(%rbp)
	movq 0x1B8(%r15),%r14
	movq %r14,0x550(%rbp)
	movq 0x1B0(%r15),%r14
	movq %r14,0x558(%rbp)
	movq 0x1A8(%r15),%r14
	movq %r14,0x560(%rbp)
	movq 0x1A0(%r15),%r14
	movq %r14,0x568(%rbp)
	movq 0x198(%r15),%r14
	movq %r14,0x570(%rbp)
	movq 0x190(%r15),%r14
	movq %r14,0x578(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x580(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x588(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x590(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x598(%rbp)
	movq 0x188(%r15),%r14
	movq %r14,0x5A0(%rbp)
	movq 0x180(%r15),%r14
	movq %r14,0x5A8(%rbp)
	movq 0x178(%r15),%r14
	movq %r14,0x5B0(%rbp)
	movq 0x170(%r15),%r14
	movq %r14,0x5B8(%rbp)
	movq 0x168(%r15),%r14
	movq %r14,0x5C0(%rbp)
	movq 0x160(%r15),%r14
	movq %r14,0x5C8(%rbp)
	movq 0x158(%r15),%r14
	movq %r14,0x5D0(%rbp)
	movq 0x150(%r15),%r14
	movq %r14,0x5D8(%rbp)
	movq 0x148(%r15),%r14
	movq %r14,0x5E0(%rbp)
	movq 0x140(%r15),%r14
	movq %r14,0x5E8(%rbp)
	movq 0x138(%r15),%r14
	movq %r14,0x5F0(%rbp)
	movq 0x130(%r15),%r14
	movq %r14,0x5F8(%rbp)
	movl 0x28(%r15),%r14d
	movl %r14d,0x600(%rbp)
	movq 0x128(%r15),%r14
	movq %r14,0x608(%rbp)
	movq 0x120(%r15),%r14
	movq %r14,0x610(%rbp)
	movq 0x118(%r15),%r14
	movq %r14,0x618(%rbp)
	movq 0x110(%r15),%r14
	movq %r14,0x620(%rbp)
	movq 0x108(%r15),%r14
	movq %r14,0x628(%rbp)
	movq 0x100(%r15),%r14
	movq %r14,0x630(%rbp)
	movq 0xF8(%r15),%r14
	movq %r14,0x638(%rbp)
	movq 0xF0(%r15),%r14
	movq %r14,0x640(%rbp)
	movq 0xE8(%r15),%r14
	movq %r14,0x648(%rbp)
	movq 0xE0(%r15),%r14
	movq %r14,0x650(%rbp)
	movq 0xD8(%r15),%r14
	movq %r14,0x658(%rbp)
	movq 0xD0(%r15),%r14
	movq %r14,0x660(%rbp)
	movq 0xC8(%r15),%r14
	movq %r14,0x668(%rbp)
	movq 0xC0(%r15),%r14
	movq %r14,0x670(%rbp)
	movq 0xB8(%r15),%r14
	movq %r14,0x678(%rbp)
	movq 0xB0(%r15),%r14
	movq %r14,0x680(%rbp)
	movq 0xA8(%r15),%r14
	movq %r14,0x688(%rbp)
	movq 0xA0(%r15),%r14
	movq %r14,0x690(%rbp)
	movq 0x98(%r15),%r14
	movq %r14,0x698(%rbp)
	movq 0x90(%r15),%r14
	movq %r14,0x6A0(%rbp)
	movq 0x88(%r15),%r14
	movq %r14,0x6A8(%rbp)
	movq 0x80(%r15),%r14
	movq %r14,0x6B0(%rbp)
	movq 0x78(%r15),%r14
	movq %r14,0x6B8(%rbp)
	movq 0x70(%r15),%r14
	movq %r14,0x6C0(%rbp)
	movq 0x68(%r15),%r14
	movq %r14,0x6C8(%rbp)
	movq 0x60(%r15),%r14
	movq %r14,0x6D0(%rbp)
	movq 0x58(%r15),%r14
	movq %r14,0x6D8(%rbp)
	movq 0x50(%r15),%r14
	movq %r14,0x6E0(%rbp)
	movq 0x48(%r15),%r14
	movq %r14,0x6E8(%rbp)
	movq 0x40(%r15),%r14
	movq 0x38(%r15),%r13
	movq 0x30(%r15),%r11
	movq %r11,0x6F0(%rbp)
	movq %r11,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r15,1)
	movq %r13,0x0(%r11)
	movq 0xA8(%r14),%r15
	movq %r15,0x6F8(%rbp)
	movq 0xA0(%r14),%r15
	movq %r15,0x700(%rbp)
	movq 0x98(%r14),%r15
	movq %r15,0x708(%rbp)
	movq 0x90(%r14),%r15
	movq %r15,0x710(%rbp)
	movq 0x88(%r14),%r15
	movq %r15,0x718(%rbp)
	movq 0x80(%r14),%r15
	movq %r15,0x720(%rbp)
	movq 0x78(%r14),%r15
	movq %r15,0x728(%rbp)
	movq 0x70(%r14),%r15
	movq %r15,0x730(%rbp)
	movq 0x68(%r14),%r15
	movq %r15,0x738(%rbp)
	movq 0x60(%r14),%r15
	movq %r15,0x740(%rbp)
	movq 0x58(%r14),%r15
	movq %r15,0x748(%rbp)
	movq 0x50(%r14),%r15
	movq %r15,0x750(%rbp)
	movq 0x48(%r14),%r15
	movq %r15,0x758(%rbp)
	movq 0x40(%r14),%r15
	movq %r15,0x760(%rbp)
	movq 0x38(%r14),%r15
	movq %r15,0x768(%rbp)
	movq 0x30(%r14),%r15
	movq %r15,0x770(%rbp)
	movq 0x28(%r14),%r15
	movq %r15,0x778(%rbp)
	movq 0x20(%r14),%r15
	movq %r15,0x780(%rbp)
	movq 0x18(%r14),%r15
	movq %r15,0x788(%rbp)
	movq 0x10(%r14),%r15
	movq %r15,0x790(%rbp)
	movl 0x0(%r14),%r15d
	movl %r15d,0x604(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x7A0(%rbp)
	addq $0x7A0,%rbp
	leaq (L_232795+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp getcwd_0
.p2align 0x4
.long 0x3A1B
L_232795:
	addq $0xFFFFFFFFFFFFF860,%rbp
	movq 0x7A0(%rbp),%r15
	movq %r15,0x798(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_232796
L_232934:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x7A8,%rbp
	leaq (L_232935+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_232935
.p2align 0x4
.long 0x3A2E
L_232935:
	addq $0xFFFFFFFFFFFFF858,%rbp
L_232796:
	movq $0x409,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq $0x1,0x0(%r15)
	movq 0x798(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r14,0x10(%r15)
	movq %r15,0x7A0(%rbp)
	movl 0x604(%rbp),%r15d
	movl %r15d,%r14d
	decl %r14d
	movl %r14d,0x7A8(%rbp)
	movslq %r15d,%rdx
	movq %rdx,0x7B0(%rbp)
	cmpq $0x7FFFFFFF,%rdx
	ja L_475205
L_232797:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x411,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x7C0,%rbp
	leaq (L_232798+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_232798
.p2align 0x4
.long 0x3A1C
L_232798:
	addq $0xFFFFFFFFFFFFF840,%rbp
	movq %rax,0x798(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2664:
	cmpq 0x7B0(%rbp),%r15
	jnl L_475203
L_232932:
	movq 0x798(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_2664
.p2align 0x4
L_475203:
L_232799:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_232800
L_232930:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x7B8,%rbp
	leaq (L_232931+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_232931
.p2align 0x4
.long 0x3A2D
L_232931:
	addq $0xFFFFFFFFFFFFF848,%rbp
L_232800:
	movq $0x413,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x7B0(%rbp)
	addq $0x10,%r12
	movq 0x798(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x7B8(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x7C0(%rbp)
	addq $0x10,%r12
	movl 0x7A8(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x790(%rbp),%r15
	movq %r15,0x7D0(%rbp)
	addq $0x7D0,%rbp
	leaq (L_232801+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp mlbPathMap_0
.p2align 0x4
L_475205:
L_232849:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3A1D
L_232801:
	addq $0xFFFFFFFFFFFFF830,%rbp
	movq 0x7D0(%rbp),%r15
	movq %r15,0x790(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_232802
L_232928:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x7D0,%rbp
	leaq (L_232929+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_232929
.p2align 0x4
.long 0x3A2C
L_232929:
	addq $0xFFFFFFFFFFFFF830,%rbp
L_232802:
	movq 0x788(%rbp),%r15
	movq 0x8(%r15),%r14
	movq $0x40B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x68,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x740(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x748(%rbp),%r11
	movq %r11,0x10(%r15)
	movq 0x750(%rbp),%r10
	movq %r10,0x18(%r15)
	movq 0x758(%rbp),%r9
	movq %r9,0x20(%r15)
	movq 0x760(%rbp),%r8
	movq %r8,0x28(%r15)
	movq 0x768(%rbp),%rsp
	movq %rsp,0x30(%r15)
	movq 0x770(%rbp),%rsi
	movq %rsi,0x38(%r15)
	movq 0x778(%rbp),%rdi
	movq %rdi,0x40(%r15)
	movq 0x790(%rbp),%rdx
	movq %rdx,0x48(%r15)
	movq %r14,0x50(%r15)
	movq 0x780(%rbp),%rdx
	movq %rdx,0x58(%r15)
	movq $0x40D,0x0(%r12)
	movq %r12,%rcx
	addq $0x8,%rcx
	movq %r15,0x8(%rcx)
	addq $0x18,%r12
	movq 0x738(%rbp),%r15
	movq %r15,0x0(%rcx)
	movq $0x435,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x18(%r15)
	movq %rcx,0x20(%r15)
	addq $0xC0,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x700(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %rdx,0x10(%r15)
	movq %rdi,0x28(%r15)
	movq %rsi,0x30(%r15)
	movq %rsp,0x38(%r15)
	movq %r8,0x40(%r15)
	movq %r9,0x48(%r15)
	movq %r10,0x50(%r15)
	movq %r11,0x58(%r15)
	movq %r13,0x60(%r15)
	movq (globalObjptr+0xAB8)(%rip),%r14
	movq %r14,0x68(%r15)
	movq 0x708(%rbp),%r14
	movq %r14,0x70(%r15)
	movq 0x710(%rbp),%r14
	movq %r14,0x78(%r15)
	movq 0x718(%rbp),%r14
	movq %r14,0x80(%r15)
	movq 0x720(%rbp),%r14
	movq %r14,0x88(%r15)
	movq 0x728(%rbp),%r14
	movq %r14,0x90(%r15)
	movq 0x7B0(%rbp),%r14
	movq %r14,0x98(%r15)
	movq 0x7C0(%rbp),%r14
	movq %r14,0xA0(%r15)
	movq 0x730(%rbp),%r14
	movq %r14,0xA8(%r15)
	movq 0x7B8(%rbp),%r14
	movq %r14,0xB0(%r15)
	movq %r15,0x718(%rbp)
	movq 0x6E8(%rbp),%r15
	movq %r15,0x700(%rbp)
	movq 0x6F8(%rbp),%r15
	movq %r15,0x708(%rbp)
	movq 0x7A0(%rbp),%r15
	movq %r15,0x710(%rbp)
	addq $0x700,%rbp
	leaq (L_232803+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp wrapLexAndParse_0
.p2align 0x4
.long 0x3A1E
L_232803:
	addq $0xFFFFFFFFFFFFF900,%rbp
	movq 0x700(%rbp),%r15
	movq %r15,0x6E8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_232804
L_232926:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x700,%rbp
	leaq (L_232927+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_232927
.p2align 0x4
.long 0x3A1F
L_232927:
	addq $0xFFFFFFFFFFFFF900,%rbp
L_232804:
	movq (globalObjptr+0x1608)(%rip),%r15
	cmpl $0x0,0x0(%r15)
	jg L_475211
L_232805:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xF03,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x700,%rbp
	leaq (L_232806+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_232806
.p2align 0x4
.long 0x3A1F
L_232806:
	addq $0xFFFFFFFFFFFFF900,%rbp
	movq %rax,0x6F8(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2665:
	cmpq $0x1,%r15
	jnl L_475208
L_232921:
	movq 0x6F8(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq (globalObjptr+0x14F0)(%rip),%r13
	movq %r13,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_2665
.p2align 0x4
L_475208:
L_232807:
	movq (gcState+0x458)(%rip),%r15
	subq %r12,%r15
	cmpq $0x538,%r15
	jnb L_232808
L_232919:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	movq $0x538,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x708,%rbp
	leaq (L_232920+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_232920
.p2align 0x4
.long 0x3A2B
L_232920:
	addq $0xFFFFFFFFFFFFF8F8,%rbp
L_232808:
	movq $0xF05,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x700(%rbp)
	addq $0x10,%r12
	movq 0x6F8(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x4B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x708(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq $0xF07,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,0x710(%rbp)
	addq $0x18,%r12
	movq %r13,0x0(%r11)
	movq %r14,0x8(%r11)
	movq $0x71,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x718(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x45F,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x720(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0x71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x461,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r15,0x10(%r11)
	addq $0x20,%r12
	movq %r13,0x8(%r11)
	movq $0x169,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r10,0x728(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r10)
	movq $0x71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x44B,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r9,0x730(%rbp)
	movq %r15,0x8(%r9)
	addq $0x20,%r12
	movq %r14,0x0(%r9)
	movq %r10,0x10(%r9)
	movq $0x1DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r10,0x738(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r10)
	movq $0x451,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x453,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r8,0x740(%rbp)
	movq %r15,0x8(%r8)
	addq $0x20,%r12
	movq %r14,0x0(%r8)
	movq %r10,0x10(%r8)
	movq $0x167,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r10,0x748(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r10)
	movq $0x71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x455,0x0(%r12)
	movq %r12,%rsp
	addq $0x8,%rsp
	movq %rsp,0x750(%rbp)
	movq %r15,0x8(%rsp)
	addq $0x20,%r12
	movq %r14,0x0(%rsp)
	movq %r10,0x10(%rsp)
	movq $0x1E1,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r10,0x758(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r10)
	movq $0x463,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x465,0x0(%r12)
	movq %r12,%rsi
	addq $0x8,%rsi
	movq %rsi,0x760(%rbp)
	movq %r15,0x8(%rsi)
	addq $0x20,%r12
	movq %r14,0x0(%rsi)
	movq %r10,0x10(%rsi)
	movq $0x165,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r10,0x768(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r10)
	movq $0x467,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x469,0x0(%r12)
	movq %r12,%rdi
	addq $0x8,%rdi
	movq %rdi,0x770(%rbp)
	movq %r15,0x8(%rdi)
	addq $0x20,%r12
	movq %r14,0x0(%rdi)
	movq %r10,0x10(%rdi)
	movq $0x1E3,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r10,0x778(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r10)
	movq $0x46B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x46D,0x0(%r12)
	movq %r12,%rdx
	addq $0x8,%rdx
	movq %rdx,0x780(%rbp)
	movq %r15,0x8(%rdx)
	addq $0x20,%r12
	movq %r14,0x0(%rdx)
	movq %r10,0x10(%rdx)
	movq $0x163,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r10,0x788(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r10)
	movq $0x46F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x471,0x0(%r12)
	movq %r12,%rcx
	addq $0x8,%rcx
	movq %rcx,0x790(%rbp)
	movq %r15,0x8(%rcx)
	addq $0x20,%r12
	movq %r14,0x0(%rcx)
	movq %r10,0x10(%rcx)
	movq $0x71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x71,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	addq $0x10,%r12
	movl $0x0,0x0(%r10)
	movl $0x0,0x4(%r10)
	movq $0x457,0x0(%r12)
	movq %r12,%rbx
	addq $0x8,%rbx
	movq %r10,0x8(%rbx)
	addq $0x20,%r12
	movq %r15,0x0(%rbx)
	movq $0x1,0x10(%rbx)
	movq $0x71,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	addq $0x10,%r12
	movl $0x0,0x0(%r10)
	movl $0x0,0x4(%r10)
	movq $0x459,0x0(%r12)
	movq %r12,%rax
	addq $0x8,%rax
	movq %r10,0x8(%rax)
	addq $0x20,%r12
	movq %r15,0x0(%rax)
	movq $0x1,0x10(%rax)
	movq $0x71,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	addq $0x10,%r12
	movl $0x0,0x0(%r10)
	movl $0x0,0x4(%r10)
	movq $0x45B,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r15,0x0(%r9)
	movq %r10,0x8(%r9)
	addq $0x20,%r12
	movq $0x1,0x10(%r9)
	movq $0x45D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r9,0x0(%r15)
	movq %rax,0x8(%r15)
	movq %rbx,0x10(%r15)
	addq $0x20,%r12
	movq $0x71,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	addq $0x10,%r12
	movl $0x0,0x0(%r10)
	movl $0x0,0x4(%r10)
	movq $0x44D,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r10,0x8(%r9)
	addq $0x18,%r12
	movl $0x1,0x0(%r9)
	movl $0x0,0x4(%r9)
	movq $0x44F,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r10,0x798(%rbp)
	movq %r9,0x0(%r10)
	addq $0x10,%r12
	movq $0x473,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r9,0x7A0(%rbp)
	movq %r11,0x28(%r9)
	movq %r15,0x38(%r9)
	addq $0x68,%r12
	movq %rcx,0x0(%r9)
	movq %rdx,0x8(%r9)
	movq %r13,0x10(%r9)
	movq %rdi,0x18(%r9)
	movq %rsi,0x20(%r9)
	movq %r14,0x30(%r9)
	movq %rsp,0x40(%r9)
	movq %r8,0x48(%r9)
	movq %r10,0x50(%r9)
	movq 0x730(%rbp),%r14
	movq %r14,0x58(%r9)
	movq $0x479,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x7A8(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_475209
L_232809:
	movq 0x8(%r15),%r14
	movq %r14,0x6F8(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,%r15
L_232810:
	movq %r15,0x7B8(%rbp)
	movq 0x718(%rbp),%r15
	movq %r15,0x7C0(%rbp)
	addq $0x7B8,%rbp
	leaq (x_809+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_23
.p2align 0x4
L_475209:
L_232822:
	movq $0xF09,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x6F8(%rbp)
	addq $0xE8,%r12
	movq 0x728(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x738(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x748(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x758(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x768(%rbp),%r14
	movq %r14,0x20(%r15)
	movq 0x778(%rbp),%r14
	movq %r14,0x28(%r15)
	movq 0x788(%rbp),%r14
	movq %r14,0x30(%r15)
	movq 0x7A8(%rbp),%r14
	movq %r14,0x38(%r15)
	movq 0x690(%rbp),%r14
	movq %r14,0x40(%r15)
	movq 0x718(%rbp),%r14
	movq %r14,0x48(%r15)
	movq 0x798(%rbp),%r14
	movq %r14,0x50(%r15)
	movq 0x698(%rbp),%r14
	movq %r14,0x58(%r15)
	movq 0x6A0(%rbp),%r14
	movq %r14,0x60(%r15)
	movq 0x7A0(%rbp),%r14
	movq %r14,0x68(%r15)
	movq 0x730(%rbp),%r13
	movq %r13,0x70(%r15)
	movq 0x6A8(%rbp),%r13
	movq %r13,0x78(%r15)
	movq 0x740(%rbp),%r13
	movq %r13,0x80(%r15)
	movq 0x6B0(%rbp),%r13
	movq %r13,0x88(%r15)
	movq 0x750(%rbp),%r13
	movq %r13,0x90(%r15)
	movq 0x6B8(%rbp),%r13
	movq %r13,0x98(%r15)
	movq 0x760(%rbp),%r13
	movq %r13,0xA0(%r15)
	movq 0x6C0(%rbp),%r13
	movq %r13,0xA8(%r15)
	movq 0x770(%rbp),%r13
	movq %r13,0xB0(%r15)
	movq 0x6C8(%rbp),%r13
	movq %r13,0xB8(%r15)
	movq 0x780(%rbp),%r13
	movq %r13,0xC0(%r15)
	movq 0x6D0(%rbp),%r13
	movq %r13,0xC8(%r15)
	movq 0x790(%rbp),%r13
	movq %r13,0xD0(%r15)
	movq 0x6D8(%rbp),%r13
	movq %r13,0xD8(%r15)
	movq $0x29B9,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x98,%r12
	movq 0x680(%rbp),%r11
	movq %r11,0x0(%r13)
	movq %r14,0x8(%r13)
	movq 0x678(%rbp),%r14
	movq %r14,0x10(%r13)
	movq 0x670(%rbp),%r14
	movq %r14,0x18(%r13)
	movq 0x668(%rbp),%r14
	movq %r14,0x20(%r13)
	movq 0x660(%rbp),%r14
	movq %r14,0x28(%r13)
	movq 0x658(%rbp),%r14
	movq %r14,0x30(%r13)
	movq 0x650(%rbp),%r14
	movq %r14,0x38(%r13)
	movq 0x648(%rbp),%r14
	movq %r14,0x40(%r13)
	movq 0x640(%rbp),%r14
	movq %r14,0x48(%r13)
	movq 0x638(%rbp),%r14
	movq %r14,0x50(%r13)
	movq 0x630(%rbp),%r14
	movq %r14,0x58(%r13)
	movq 0x628(%rbp),%r14
	movq %r14,0x60(%r13)
	movq 0x620(%rbp),%r14
	movq %r14,0x68(%r13)
	movq 0x618(%rbp),%r14
	movq %r14,0x70(%r13)
	movq 0x610(%rbp),%r14
	movq %r14,0x78(%r13)
	movq 0x608(%rbp),%r14
	movq %r14,0x80(%r13)
	movq 0x710(%rbp),%r14
	movq %r14,0x88(%r13)
	movq %r13,0x7B0(%rbp)
	movq %r15,0x7B8(%rbp)
	addq $0x7B0,%rbp
	leaq (L_232823+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp emptySnapshot_0
.p2align 0x4
L_475211:
L_232922:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq (globalObjptr+0xFC50)(%rip),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x1620)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xFC58)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x20(%rbp)
	addq $0x20,%rbp
	leaq (fail_9+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x3A20
x_809:
	addq $0xFFFFFFFFFFFFF848,%rbp
	movq 0x7B8(%rbp),%r15
	movq %r15,0x7B0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_232811
L_232916:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x7C0,%rbp
	leaq (L_232917+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_232917
.p2align 0x4
.long 0x3A2A
L_232917:
	addq $0xFFFFFFFFFFFFF840,%rbp
L_232811:
	movq 0x7B0(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_232819
L_232812:
	movq 0x8(%r14),%r15
	movq %r15,0x7B0(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x7B8(%rbp)
.p2align 0x4,,0x7
L_232813:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_475241
.p2align 0x4,,0x7
L_232814:
	movq 0x7B8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x106C,%r14
	je L_475237
	cmpq $0x106D,%r14
	je L_475233
	cmpq $0x106E,%r14
	je L_475229
	cmpq $0x106F,%r14
	je L_475225
	cmpq $0x1070,%r14
	je L_475221
	cmpq $0x1071,%r14
	je L_475217
L_232815:
	movq 0x0(%r15),%r14
	movq 0x0(%r14),%r15
	cmpq $0x1,%r15
	je L_475215
L_232816:
	movq 0x0(%r15),%r13
	movq 0x8(%r13),%r11
	movq 0x18(%r13),%r10
	movq 0x20(%r13),%r9
	movq 0x7A8(%rbp),%r15
	movq 0x0(%r15),%r13
	movq $0x4349,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r14,0x0(%r8)
	movq %r14,0x10(%r8)
	movq %r11,0x18(%r8)
	movq %r10,0x20(%r8)
	movq %r9,0x28(%r8)
	addq $0x40,%r12
	movq 0x788(%rbp),%r14
	movq %r14,0x8(%r8)
	movq 0x6E0(%rbp),%r14
	movq %r14,0x30(%r8)
	movq $0x2687,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r8,0x0(%r14)
	movq %r13,0x8(%r14)
	addq $0x18,%r12
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	movq 0x7B0(%rbp),%r15
	cmpq $0x1,%r15
	je L_475213
L_232817:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x7B0(%rbp)
	movq %r14,0x7B8(%rbp)
	jmp L_232813
.p2align 0x4
L_475213:
L_232819:
	movq 0x6F8(%rbp),%r14
	cmpq $0x1,%r14
	je L_232822
L_232820:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x6F8(%rbp)
	jmp L_232810
.p2align 0x4
L_475215:
L_232868:
	movq 0x7B0(%rbp),%r15
	cmpq $0x1,%r15
	je L_232819
L_232869:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x7B0(%rbp)
	movq %r14,0x7B8(%rbp)
	jmp L_232813
.p2align 0x4
L_475217:
L_232906:
	movq 0x0(%r15),%r14
	movq 0x0(%r14),%r15
	cmpq $0x1,%r15
	je L_475219
L_232907:
	movq 0x0(%r15),%r13
	movq 0x8(%r13),%r11
	movq 0x18(%r13),%r10
	movq 0x20(%r13),%r9
	movq 0x7A8(%rbp),%r15
	movq 0x0(%r15),%r13
	movq $0x434D,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r14,0x0(%r8)
	movq %r14,0x10(%r8)
	movq %r11,0x18(%r8)
	movq %r10,0x20(%r8)
	movq %r9,0x28(%r8)
	addq $0x40,%r12
	movq 0x728(%rbp),%r14
	movq %r14,0x8(%r8)
	movq 0x6E0(%rbp),%r14
	movq %r14,0x30(%r8)
	movq $0x2687,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r8,0x0(%r14)
	movq %r13,0x8(%r14)
	addq $0x18,%r12
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	movq 0x7B0(%rbp),%r15
	cmpq $0x1,%r15
	je L_232819
L_232908:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x7B0(%rbp)
	movq %r14,0x7B8(%rbp)
	jmp L_232813
.p2align 0x4
L_475219:
L_232910:
	movq 0x7B0(%rbp),%r15
	cmpq $0x1,%r15
	je L_232819
L_232911:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x7B0(%rbp)
	movq %r14,0x7B8(%rbp)
	jmp L_232813
.p2align 0x4
L_475221:
L_232899:
	movq 0x0(%r15),%r14
	movq 0x0(%r14),%r15
	cmpq $0x1,%r15
	je L_475223
L_232900:
	movq 0x0(%r15),%r13
	movq 0x8(%r13),%r11
	movq 0x18(%r13),%r10
	movq 0x20(%r13),%r9
	movq 0x7A8(%rbp),%r15
	movq 0x0(%r15),%r13
	movq $0x4353,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r14,0x0(%r8)
	movq %r14,0x10(%r8)
	movq %r11,0x18(%r8)
	movq %r10,0x20(%r8)
	movq %r9,0x28(%r8)
	addq $0x40,%r12
	movq 0x738(%rbp),%r14
	movq %r14,0x8(%r8)
	movq 0x6E0(%rbp),%r14
	movq %r14,0x30(%r8)
	movq $0x2687,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r8,0x0(%r14)
	movq %r13,0x8(%r14)
	addq $0x18,%r12
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	movq 0x7B0(%rbp),%r15
	cmpq $0x1,%r15
	je L_232819
L_232901:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x7B0(%rbp)
	movq %r14,0x7B8(%rbp)
	jmp L_232813
.p2align 0x4
L_475223:
L_232903:
	movq 0x7B0(%rbp),%r15
	cmpq $0x1,%r15
	je L_232819
L_232904:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x7B0(%rbp)
	movq %r14,0x7B8(%rbp)
	jmp L_232813
.p2align 0x4
L_475225:
L_232892:
	movq 0x0(%r15),%r14
	movq 0x0(%r14),%r15
	cmpq $0x1,%r15
	je L_475227
L_232893:
	movq 0x0(%r15),%r13
	movq 0x8(%r13),%r11
	movq 0x18(%r13),%r10
	movq 0x20(%r13),%r9
	movq 0x7A8(%rbp),%r15
	movq 0x0(%r15),%r13
	movq $0x434B,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r14,0x0(%r8)
	movq %r14,0x10(%r8)
	movq %r11,0x18(%r8)
	movq %r10,0x20(%r8)
	movq %r9,0x28(%r8)
	addq $0x40,%r12
	movq 0x748(%rbp),%r14
	movq %r14,0x8(%r8)
	movq 0x6E0(%rbp),%r14
	movq %r14,0x30(%r8)
	movq $0x2687,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r8,0x0(%r14)
	movq %r13,0x8(%r14)
	addq $0x18,%r12
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	movq 0x7B0(%rbp),%r15
	cmpq $0x1,%r15
	je L_232819
L_232894:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x7B0(%rbp)
	movq %r14,0x7B8(%rbp)
	jmp L_232813
.p2align 0x4
L_475227:
L_232896:
	movq 0x7B0(%rbp),%r15
	cmpq $0x1,%r15
	je L_232819
L_232897:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x7B0(%rbp)
	movq %r14,0x7B8(%rbp)
	jmp L_232813
.p2align 0x4
L_475229:
L_232885:
	movq 0x0(%r15),%r14
	movq 0x0(%r14),%r15
	cmpq $0x1,%r15
	je L_475231
L_232886:
	movq 0x0(%r15),%r13
	movq 0x8(%r13),%r11
	movq 0x18(%r13),%r10
	movq 0x20(%r13),%r9
	movq 0x7A8(%rbp),%r15
	movq 0x0(%r15),%r13
	movq $0x4347,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r14,0x0(%r8)
	movq %r14,0x10(%r8)
	movq %r11,0x18(%r8)
	movq %r10,0x20(%r8)
	movq %r9,0x28(%r8)
	addq $0x40,%r12
	movq 0x758(%rbp),%r14
	movq %r14,0x8(%r8)
	movq 0x6E0(%rbp),%r14
	movq %r14,0x30(%r8)
	movq $0x2687,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r8,0x0(%r14)
	movq %r13,0x8(%r14)
	addq $0x18,%r12
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	movq 0x7B0(%rbp),%r15
	cmpq $0x1,%r15
	je L_232819
L_232887:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x7B0(%rbp)
	movq %r14,0x7B8(%rbp)
	jmp L_232813
.p2align 0x4
L_475231:
L_232889:
	movq 0x7B0(%rbp),%r15
	cmpq $0x1,%r15
	je L_232819
L_232890:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x7B0(%rbp)
	movq %r14,0x7B8(%rbp)
	jmp L_232813
.p2align 0x4
L_475233:
L_232878:
	movq 0x0(%r15),%r14
	movq 0x0(%r14),%r15
	cmpq $0x1,%r15
	je L_475235
L_232879:
	movq 0x0(%r15),%r13
	movq 0x8(%r13),%r11
	movq 0x18(%r13),%r10
	movq 0x20(%r13),%r9
	movq 0x7A8(%rbp),%r15
	movq 0x0(%r15),%r13
	movq $0x434F,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r14,0x0(%r8)
	movq %r14,0x10(%r8)
	movq %r11,0x18(%r8)
	movq %r10,0x20(%r8)
	movq %r9,0x28(%r8)
	addq $0x40,%r12
	movq 0x768(%rbp),%r14
	movq %r14,0x8(%r8)
	movq 0x6E0(%rbp),%r14
	movq %r14,0x30(%r8)
	movq $0x2687,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r8,0x0(%r14)
	movq %r13,0x8(%r14)
	addq $0x18,%r12
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	movq 0x7B0(%rbp),%r15
	cmpq $0x1,%r15
	je L_232819
L_232880:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x7B0(%rbp)
	movq %r14,0x7B8(%rbp)
	jmp L_232813
.p2align 0x4
L_475235:
L_232882:
	movq 0x7B0(%rbp),%r15
	cmpq $0x1,%r15
	je L_232819
L_232883:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x7B0(%rbp)
	movq %r14,0x7B8(%rbp)
	jmp L_232813
.p2align 0x4
L_475237:
L_232871:
	movq 0x0(%r15),%r14
	movq 0x0(%r14),%r15
	cmpq $0x1,%r15
	je L_475239
L_232872:
	movq 0x0(%r15),%r13
	movq 0x8(%r13),%r11
	movq 0x18(%r13),%r10
	movq 0x20(%r13),%r9
	movq 0x7A8(%rbp),%r15
	movq 0x0(%r15),%r13
	movq $0x4351,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r14,0x0(%r8)
	movq %r14,0x10(%r8)
	movq %r11,0x18(%r8)
	movq %r10,0x20(%r8)
	movq %r9,0x28(%r8)
	addq $0x40,%r12
	movq 0x778(%rbp),%r14
	movq %r14,0x8(%r8)
	movq 0x6E0(%rbp),%r14
	movq %r14,0x30(%r8)
	movq $0x2687,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r8,0x0(%r14)
	movq %r13,0x8(%r14)
	addq $0x18,%r12
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	movq 0x7B0(%rbp),%r15
	cmpq $0x1,%r15
	je L_232819
L_232873:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x7B0(%rbp)
	movq %r14,0x7B8(%rbp)
	jmp L_232813
.p2align 0x4
L_475239:
L_232875:
	movq 0x7B0(%rbp),%r15
	cmpq $0x1,%r15
	je L_232819
L_232876:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x7B0(%rbp)
	movq %r14,0x7B8(%rbp)
	jmp L_232813
.p2align 0x4
L_475241:
L_232913:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x7C8,%rbp
	leaq (L_232914+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_232914
.p2align 0x4
.long 0x3A29
L_232914:
	addq $0xFFFFFFFFFFFFF838,%rbp
	jmp L_232814
.p2align 0x4
.long 0x3A21
L_232823:
	addq $0xFFFFFFFFFFFFF850,%rbp
	movq 0x7B0(%rbp),%r15
	movq %r15,0x608(%rbp)
	movq 0x7B8(%rbp),%r15
	movq %r15,0x610(%rbp)
	movq 0x7C0(%rbp),%r15
	movq %r15,0x630(%rbp)
	movq 0x7C8(%rbp),%r15
	movq %r15,0x638(%rbp)
	movq 0x7D0(%rbp),%r15
	movq %r15,0x660(%rbp)
	movq 0x7D8(%rbp),%r15
	movq %r15,0x668(%rbp)
	movq 0x7E0(%rbp),%r15
	movq %r15,0x670(%rbp)
	movq 0x7E8(%rbp),%r15
	movq %r15,0x6C8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_232824
L_232866:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x7B0,%rbp
	leaq (L_232867+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_232867
.p2align 0x4
.long 0x3A28
L_232867:
	addq $0xFFFFFFFFFFFFF850,%rbp
L_232824:
	movq $0x6E3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x48,%r12
	movq 0x608(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x610(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x630(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x638(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x660(%rbp),%r14
	movq %r14,0x20(%r15)
	movq 0x668(%rbp),%r14
	movq %r14,0x28(%r15)
	movq 0x670(%rbp),%r14
	movq %r14,0x30(%r15)
	movq 0x6C8(%rbp),%r14
	movq %r14,0x38(%r15)
	movq %r15,0x6D0(%rbp)
	movl 0x600(%rbp),%r15d
	movl %r15d,%r14d
	decl %r14d
	movl %r14d,0x604(%rbp)
	movslq %r15d,%rdx
	movq %rdx,0x6D8(%rbp)
	cmpq $0x7FFFFFFF,%rdx
	ja L_232849
L_232825:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xF0B,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x7B0,%rbp
	leaq (L_232826+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_232826
.p2align 0x4
.long 0x3A22
L_232826:
	addq $0xFFFFFFFFFFFFF850,%rbp
	movq %rax,0x608(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2666:
	cmpq 0x6D8(%rbp),%r15
	jnl L_475244
L_232864:
	movq 0x608(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_2666
.p2align 0x4
L_475244:
L_232827:
	movq (gcState+0x458)(%rip),%r15
	subq %r12,%r15
	cmpq $0x778,%r15
	jnb L_232828
L_232862:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	movq $0x778,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x7B0,%rbp
	leaq (L_232863+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_232863
.p2align 0x4
.long 0x3A27
L_232863:
	addq $0xFFFFFFFFFFFFF850,%rbp
L_232828:
	movq $0xF0D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x608(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x4B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x4B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movl 0x604(%rbp),%r11d
	movl %r11d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq 0x5F8(%rbp),%r11
	movq 0x8(%r11),%r10
	movq $0xF0F,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,0x610(%rbp)
	movq %r10,0x28(%r11)
	movq %r15,0x108(%r11)
	movq %r13,0x110(%r11)
	movq %r14,0x128(%r11)
	movq %r10,0x738(%r11)
	addq $0x748,%r12
	movq 0x4D0(%rbp),%r15
	movq %r15,0x0(%r11)
	movq 0x580(%rbp),%r15
	movq %r15,0x8(%r11)
	movq 0x588(%rbp),%r15
	movq %r15,0x10(%r11)
	movq 0x590(%rbp),%r15
	movq %r15,0x18(%r11)
	movq 0x598(%rbp),%r15
	movq %r15,0x20(%r11)
	movq 0x7A0(%rbp),%r15
	movq %r15,0x30(%r11)
	movq 0x18(%rbp),%r15
	movq %r15,0x38(%r11)
	movq 0x20(%rbp),%r15
	movq %r15,0x40(%r11)
	movq 0x28(%rbp),%r15
	movq %r15,0x48(%r11)
	movq 0x30(%rbp),%r15
	movq %r15,0x50(%r11)
	movq 0x38(%rbp),%r15
	movq %r15,0x58(%r11)
	movq 0x40(%rbp),%r15
	movq %r15,0x60(%r11)
	movq 0x798(%rbp),%r15
	movq %r15,0x68(%r11)
	movq 0x728(%rbp),%r15
	movq %r15,0x70(%r11)
	movq 0x738(%rbp),%r15
	movq %r15,0x78(%r11)
	movq 0x750(%rbp),%r15
	movq %r15,0x80(%r11)
	movq 0x48(%rbp),%r15
	movq %r15,0x88(%r11)
	movq 0x758(%rbp),%r15
	movq %r15,0x90(%r11)
	movq 0x770(%rbp),%r15
	movq %r15,0x98(%r11)
	movq 0x50(%rbp),%r15
	movq %r15,0xA0(%r11)
	movq 0x780(%rbp),%r15
	movq %r15,0xA8(%r11)
	movq 0x58(%rbp),%r15
	movq %r15,0xB0(%r11)
	movq 0x790(%rbp),%r15
	movq %r15,0xB8(%r11)
	movq 0x60(%rbp),%r15
	movq %r15,0xC0(%r11)
	movq 0x730(%rbp),%r15
	movq %r15,0xC8(%r11)
	movq 0x6A8(%rbp),%r15
	movq %r15,0xD0(%r11)
	movq 0x740(%rbp),%r15
	movq %r15,0xD8(%r11)
	movq 0x6B0(%rbp),%r15
	movq %r15,0xE0(%r11)
	movq 0x760(%rbp),%r15
	movq %r15,0xE8(%r11)
	movq 0x6C0(%rbp),%r15
	movq %r15,0xF0(%r11)
	movq 0x68(%rbp),%r15
	movq %r15,0xF8(%r11)
	movq 0x70(%rbp),%r15
	movq %r15,0x100(%r11)
	movq 0x6F8(%rbp),%r15
	movq %r15,0x118(%r11)
	movq 0x688(%rbp),%r15
	movq %r15,0x120(%r11)
	movq 0x78(%rbp),%r15
	movq %r15,0x130(%r11)
	movq 0x80(%rbp),%r15
	movq %r15,0x138(%r11)
	movq 0x88(%rbp),%r15
	movq %r15,0x140(%r11)
	movq 0x6A0(%rbp),%r15
	movq %r15,0x148(%r11)
	movq 0x90(%rbp),%r15
	movq %r15,0x150(%r11)
	movq 0x98(%rbp),%r15
	movq %r15,0x158(%r11)
	movq 0xA0(%rbp),%r15
	movq %r15,0x160(%r11)
	movq 0x680(%rbp),%r15
	movq %r15,0x168(%r11)
	movq 0xA8(%rbp),%r15
	movq %r15,0x170(%r11)
	movq 0xB0(%rbp),%r15
	movq %r15,0x178(%r11)
	movq 0xB8(%rbp),%r15
	movq %r15,0x180(%r11)
	movq 0xC0(%rbp),%r15
	movq %r15,0x188(%r11)
	movq 0xC8(%rbp),%r15
	movq %r15,0x190(%r11)
	movq 0xD0(%rbp),%r15
	movq %r15,0x198(%r11)
	movq 0x6D0(%rbp),%r15
	movq %r15,0x1A0(%r11)
	movq 0xD8(%rbp),%r15
	movq %r15,0x1A8(%r11)
	movq 0xE0(%rbp),%r15
	movq %r15,0x1B0(%r11)
	movq 0xE8(%rbp),%r15
	movq %r15,0x1B8(%r11)
	movq 0xF0(%rbp),%r15
	movq %r15,0x1C0(%r11)
	movq 0xF8(%rbp),%r15
	movq %r15,0x1C8(%r11)
	movq 0x100(%rbp),%r15
	movq %r15,0x1D0(%r11)
	movq 0x108(%rbp),%r15
	movq %r15,0x1D8(%r11)
	movq 0x110(%rbp),%r15
	movq %r15,0x1E0(%r11)
	movq 0x118(%rbp),%r15
	movq %r15,0x1E8(%r11)
	movq 0x120(%rbp),%r15
	movq %r15,0x1F0(%r11)
	movq 0x128(%rbp),%r15
	movq %r15,0x1F8(%r11)
	movq 0x130(%rbp),%r15
	movq %r15,0x200(%r11)
	movq 0x138(%rbp),%r15
	movq %r15,0x208(%r11)
	movq 0x140(%rbp),%r15
	movq %r15,0x210(%r11)
	movq 0x148(%rbp),%r15
	movq %r15,0x218(%r11)
	movq 0x150(%rbp),%r15
	movq %r15,0x220(%r11)
	movq 0x158(%rbp),%r15
	movq %r15,0x228(%r11)
	movq 0x160(%rbp),%r15
	movq %r15,0x230(%r11)
	movq 0x168(%rbp),%r15
	movq %r15,0x238(%r11)
	movq 0x170(%rbp),%r15
	movq %r15,0x240(%r11)
	movq 0x178(%rbp),%r15
	movq %r15,0x248(%r11)
	movq 0x180(%rbp),%r15
	movq %r15,0x250(%r11)
	movq 0x188(%rbp),%r15
	movq %r15,0x258(%r11)
	movq 0x190(%rbp),%r15
	movq %r15,0x260(%r11)
	movq 0x198(%rbp),%r15
	movq %r15,0x268(%r11)
	movq 0x1A0(%rbp),%r15
	movq %r15,0x270(%r11)
	movq 0x1A8(%rbp),%r15
	movq %r15,0x278(%r11)
	movq 0x620(%rbp),%r15
	movq %r15,0x280(%r11)
	movq 0x618(%rbp),%r15
	movq %r15,0x288(%r11)
	movq 0x1B0(%rbp),%r15
	movq %r15,0x290(%r11)
	movq 0x1B8(%rbp),%r15
	movq %r15,0x298(%r11)
	movq 0x1C0(%rbp),%r15
	movq %r15,0x2A0(%r11)
	movq 0x1C8(%rbp),%r15
	movq %r15,0x2A8(%r11)
	movq 0x1D0(%rbp),%r15
	movq %r15,0x2B0(%r11)
	movq 0x1D8(%rbp),%r15
	movq %r15,0x2B8(%r11)
	movq 0x1E0(%rbp),%r15
	movq %r15,0x2C0(%r11)
	movq 0x1E8(%rbp),%r15
	movq %r15,0x2C8(%r11)
	movq 0x1F0(%rbp),%r15
	movq %r15,0x2D0(%r11)
	movq 0x1F8(%rbp),%r15
	movq %r15,0x2D8(%r11)
	movq 0x200(%rbp),%r15
	movq %r15,0x2E0(%r11)
	movq 0x208(%rbp),%r15
	movq %r15,0x2E8(%r11)
	movq 0x210(%rbp),%r15
	movq %r15,0x2F0(%r11)
	movq 0x218(%rbp),%r15
	movq %r15,0x2F8(%r11)
	movq 0x220(%rbp),%r15
	movq %r15,0x300(%r11)
	movq 0x228(%rbp),%r15
	movq %r15,0x308(%r11)
	movq 0x230(%rbp),%r15
	movq %r15,0x310(%r11)
	movq 0x238(%rbp),%r15
	movq %r15,0x318(%r11)
	movq 0x240(%rbp),%r15
	movq %r15,0x320(%r11)
	movq 0x248(%rbp),%r15
	movq %r15,0x328(%r11)
	movq 0x250(%rbp),%r15
	movq %r15,0x330(%r11)
	movq 0x258(%rbp),%r15
	movq %r15,0x338(%r11)
	movq 0x260(%rbp),%r15
	movq %r15,0x340(%r11)
	movq 0x268(%rbp),%r15
	movq %r15,0x348(%r11)
	movq 0x270(%rbp),%r15
	movq %r15,0x350(%r11)
	movq 0x278(%rbp),%r15
	movq %r15,0x358(%r11)
	movq 0x280(%rbp),%r15
	movq %r15,0x360(%r11)
	movq 0x288(%rbp),%r15
	movq %r15,0x368(%r11)
	movq 0x290(%rbp),%r15
	movq %r15,0x370(%r11)
	movq 0x298(%rbp),%r15
	movq %r15,0x378(%r11)
	movq 0x2A0(%rbp),%r15
	movq %r15,0x380(%r11)
	movq 0x2A8(%rbp),%r15
	movq %r15,0x388(%r11)
	movq 0x6E0(%rbp),%r15
	movq %r15,0x390(%r11)
	movq 0x6B8(%rbp),%r15
	movq %r15,0x398(%r11)
	movq 0x2B0(%rbp),%r15
	movq %r15,0x3A0(%r11)
	movq 0x2B8(%rbp),%r15
	movq %r15,0x3A8(%r11)
	movq 0x2C0(%rbp),%r15
	movq %r15,0x3B0(%r11)
	movq 0x2C8(%rbp),%r15
	movq %r15,0x3B8(%r11)
	movq 0x2D0(%rbp),%r15
	movq %r15,0x3C0(%r11)
	movq 0x2D8(%rbp),%r15
	movq %r15,0x3C8(%r11)
	movq 0x2E0(%rbp),%r15
	movq %r15,0x3D0(%r11)
	movq 0x2E8(%rbp),%r15
	movq %r15,0x3D8(%r11)
	movq 0x2F0(%rbp),%r15
	movq %r15,0x3E0(%r11)
	movq 0x2F8(%rbp),%r15
	movq %r15,0x3E8(%r11)
	movq 0x300(%rbp),%r15
	movq %r15,0x3F0(%r11)
	movq 0x308(%rbp),%r15
	movq %r15,0x3F8(%r11)
	movq 0x310(%rbp),%r15
	movq %r15,0x400(%r11)
	movq 0x318(%rbp),%r15
	movq %r15,0x408(%r11)
	movq 0x320(%rbp),%r15
	movq %r15,0x410(%r11)
	movq 0x328(%rbp),%r15
	movq %r15,0x418(%r11)
	movq 0x330(%rbp),%r15
	movq %r15,0x420(%r11)
	movq 0x338(%rbp),%r15
	movq %r15,0x428(%r11)
	movq 0x340(%rbp),%r15
	movq %r15,0x430(%r11)
	movq 0x348(%rbp),%r15
	movq %r15,0x438(%r11)
	movq 0x350(%rbp),%r15
	movq %r15,0x440(%r11)
	movq 0x358(%rbp),%r15
	movq %r15,0x448(%r11)
	movq 0x360(%rbp),%r15
	movq %r15,0x450(%r11)
	movq 0x368(%rbp),%r15
	movq %r15,0x458(%r11)
	movq 0x370(%rbp),%r15
	movq %r15,0x460(%r11)
	movq 0x378(%rbp),%r15
	movq %r15,0x468(%r11)
	movq 0x380(%rbp),%r15
	movq %r15,0x470(%r11)
	movq 0x388(%rbp),%r15
	movq %r15,0x478(%r11)
	movq 0x6F0(%rbp),%r15
	movq %r15,0x480(%r11)
	movq 0x390(%rbp),%r15
	movq %r15,0x488(%r11)
	movq 0x398(%rbp),%r15
	movq %r15,0x490(%r11)
	movq 0x3A0(%rbp),%r15
	movq %r15,0x498(%r11)
	movq 0x3A8(%rbp),%r15
	movq %r15,0x4A0(%r11)
	movq 0x3B0(%rbp),%r15
	movq %r15,0x4A8(%r11)
	movq 0x3B8(%rbp),%r15
	movq %r15,0x4B0(%r11)
	movq 0x3C0(%rbp),%r15
	movq %r15,0x4B8(%r11)
	movq 0x3C8(%rbp),%r15
	movq %r15,0x4C0(%r11)
	movq 0x3D0(%rbp),%r15
	movq %r15,0x4C8(%r11)
	movq 0x3D8(%rbp),%r15
	movq %r15,0x4D0(%r11)
	movq 0x3E0(%rbp),%r15
	movq %r15,0x4D8(%r11)
	movq 0x3E8(%rbp),%r15
	movq %r15,0x4E0(%r11)
	movq 0x3F0(%rbp),%r15
	movq %r15,0x4E8(%r11)
	movq 0x3F8(%rbp),%r15
	movq %r15,0x4F0(%r11)
	movq 0x400(%rbp),%r15
	movq %r15,0x4F8(%r11)
	movq 0x408(%rbp),%r15
	movq %r15,0x500(%r11)
	movq 0x410(%rbp),%r15
	movq %r15,0x508(%r11)
	movq 0x418(%rbp),%r15
	movq %r15,0x510(%r11)
	movq 0x420(%rbp),%r15
	movq %r15,0x518(%r11)
	movq 0x428(%rbp),%r15
	movq %r15,0x520(%r11)
	movq 0x430(%rbp),%r15
	movq %r15,0x528(%r11)
	movq 0x438(%rbp),%r15
	movq %r15,0x530(%r11)
	movq 0x440(%rbp),%r15
	movq %r15,0x538(%r11)
	movq 0x448(%rbp),%r15
	movq %r15,0x540(%r11)
	movq 0x450(%rbp),%r15
	movq %r15,0x548(%r11)
	movq 0x458(%rbp),%r15
	movq %r15,0x550(%r11)
	movq 0x460(%rbp),%r15
	movq %r15,0x558(%r11)
	movq 0x468(%rbp),%r15
	movq %r15,0x560(%r11)
	movq 0x628(%rbp),%r15
	movq %r15,0x568(%r11)
	movq 0x470(%rbp),%r15
	movq %r15,0x570(%r11)
	movq 0x478(%rbp),%r15
	movq %r15,0x578(%r11)
	movq 0x480(%rbp),%r15
	movq %r15,0x580(%r11)
	movq 0x488(%rbp),%r15
	movq %r15,0x588(%r11)
	movq 0x490(%rbp),%r15
	movq %r15,0x590(%r11)
	movq 0x498(%rbp),%r15
	movq %r15,0x598(%r11)
	movq 0x4A0(%rbp),%r15
	movq %r15,0x5A0(%r11)
	movq 0x4A8(%rbp),%r15
	movq %r15,0x5A8(%r11)
	movq 0x4B0(%rbp),%r15
	movq %r15,0x5B0(%r11)
	movq 0x4B8(%rbp),%r15
	movq %r15,0x5B8(%r11)
	movq 0x4C0(%rbp),%r15
	movq %r15,0x5C0(%r11)
	movq 0x4C8(%rbp),%r15
	movq %r15,0x5C8(%r11)
	movq 0x4D8(%rbp),%r15
	movq %r15,0x5D0(%r11)
	movq 0x4E0(%rbp),%r15
	movq %r15,0x5D8(%r11)
	movq 0x4E8(%rbp),%r15
	movq %r15,0x5E0(%r11)
	movq 0x4F0(%rbp),%r15
	movq %r15,0x5E8(%r11)
	movq 0x4F8(%rbp),%r15
	movq %r15,0x5F0(%r11)
	movq 0x500(%rbp),%r15
	movq %r15,0x5F8(%r11)
	movq 0x508(%rbp),%r15
	movq %r15,0x600(%r11)
	movq 0x510(%rbp),%r15
	movq %r15,0x608(%r11)
	movq 0x518(%rbp),%r15
	movq %r15,0x610(%r11)
	movq 0x520(%rbp),%r15
	movq %r15,0x618(%r11)
	movq 0x528(%rbp),%r15
	movq %r15,0x620(%r11)
	movq 0x530(%rbp),%r15
	movq %r15,0x628(%r11)
	movq 0x538(%rbp),%r15
	movq %r15,0x630(%r11)
	movq 0x540(%rbp),%r15
	movq %r15,0x638(%r11)
	movq 0x640(%rbp),%r15
	movq %r15,0x640(%r11)
	movq 0x648(%rbp),%r15
	movq %r15,0x648(%r11)
	movq 0x658(%rbp),%r15
	movq %r15,0x650(%r11)
	movq 0x548(%rbp),%r15
	movq %r15,0x658(%r11)
	movq 0x550(%rbp),%r15
	movq %r15,0x660(%r11)
	movq 0x678(%rbp),%r15
	movq %r15,0x668(%r11)
	movq 0x558(%rbp),%r15
	movq %r15,0x670(%r11)
	movq 0x560(%rbp),%r15
	movq %r15,0x678(%r11)
	movq 0x650(%rbp),%r15
	movq %r15,0x680(%r11)
	movq 0x568(%rbp),%r15
	movq %r15,0x688(%r11)
	movq 0x570(%rbp),%r15
	movq %r15,0x690(%r11)
	movq 0x578(%rbp),%r15
	movq %r15,0x698(%r11)
	movq 0x788(%rbp),%r15
	movq %r15,0x6A0(%r11)
	movq 0x778(%rbp),%r15
	movq %r15,0x6A8(%r11)
	movq 0x768(%rbp),%r15
	movq %r15,0x6B0(%r11)
	movq 0x748(%rbp),%r15
	movq %r15,0x6B8(%r11)
	movq 0x5A0(%rbp),%r15
	movq %r15,0x6C0(%r11)
	movq 0x5A8(%rbp),%r15
	movq %r15,0x6C8(%r11)
	movq 0x5B0(%rbp),%r15
	movq %r15,0x6D0(%r11)
	movq 0x5B8(%rbp),%r15
	movq %r15,0x6D8(%r11)
	movq 0x690(%rbp),%r15
	movq %r15,0x6E0(%r11)
	movq 0x718(%rbp),%r15
	movq %r15,0x6E8(%r11)
	movq 0x720(%rbp),%r15
	movq %r15,0x6F0(%r11)
	movq 0x5C0(%rbp),%r15
	movq %r15,0x6F8(%r11)
	movq 0x5C8(%rbp),%r15
	movq %r15,0x700(%r11)
	movq 0x5D0(%rbp),%r15
	movq %r15,0x708(%r11)
	movq 0x5D8(%rbp),%r15
	movq %r15,0x710(%r11)
	movq 0x5E0(%rbp),%r15
	movq %r15,0x718(%r11)
	movq 0x5E8(%rbp),%r15
	movq %r15,0x720(%r11)
	movq 0x5F0(%rbp),%r15
	movq %r15,0x728(%r11)
	movq 0x710(%rbp),%r15
	movq %r15,0x730(%r11)
	movq 0x698(%rbp),%r15
	movq %r15,0x7B0(%rbp)
	addq $0x7B0,%rbp
	leaq (L_232829+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp withDef_0
.p2align 0x4
.long 0x48A
fail_9:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_232923
L_232924:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_232925+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_232925
.p2align 0x4
.long 0x27
L_232925:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_232923:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3A23
L_232829:
	addq $0xFFFFFFFFFFFFF850,%rbp
	movq 0x7B0(%rbp),%r15
	movq %r15,0x18(%rbp)
	movl 0x7B8(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	movq 0x7C0(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_232830
L_232860:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x7B0,%rbp
	leaq (L_232861+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_232861
.p2align 0x4
.long 0x3A26
L_232861:
	addq $0xFFFFFFFFFFFFF850,%rbp
L_232830:
	movq 0x6A0(%rbp),%r15
	movq 0x8(%r15),%r14
	movl 0x0(%r14),%r13d
	testl %r13d,%r13d
	jnz L_475249
L_232831:
	leaq L_232851(%rip),%r15
	movq %r15,0x8(%rbp)
	movq %rbp,%r15
	addq $0x10,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x6E8(%rbp),%r15
	movq %r15,0x7B0(%rbp)
	movq 0x610(%rbp),%r15
	movq %r15,0x7B8(%rbp)
	addq $0x7B0,%rbp
	leaq (L_232832+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp elabBasdec_0
.p2align 0x4
L_475249:
L_232859:
	movq $0x2A69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x6E8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x610(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x7B0(%rbp)
	leaq L_232851(%rip),%r15
	movq %r15,0x8(%rbp)
	movq %rbp,%r15
	addq $0x10,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x7A0(%rbp),%r15
	movq %r15,0x7B8(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0x7C0(%rbp)
	addq $0x7B0,%rbp
	leaq (L_232832+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp forceUsedLocal_0
.p2align 0x4
.long 0x3A24
L_232832:
	addq $0xFFFFFFFFFFFFF850,%rbp
	movq 0x28(%rbp),%r15
	movl 0x20(%rbp),%ecx
	movq 0x18(%rbp),%r14
.p2align 0x4,,0x7
loop_2668:
	movl %ecx,0x0(%r14)
	cmpq $0x1,%r15
	je L_475254
L_232833:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x18B5,%r14
	je L_475251
L_232838:
	movq 0x10(%r15),%r14
	movl 0x0(%r15),%ecx
	movq 0x8(%r15),%r15
	jmp loop_2668
.p2align 0x4
L_475251:
L_232834:
	movq 0x10(%r15),%r14
	movb 0x0(%r15),%dl
	movq 0x8(%r15),%r15
.p2align 0x4,,0x7
loop_2669:
	movb %dl,0x0(%r14)
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x18B8,%r14
	je L_475253
	cmpq $0x18B9,%r14
	je L_475252
L_232835:
	movq 0x8(%r15),%r14
	movq 0x10(%r15),%r13
	movb 0x0(%r15),%r11b
	movb %r11b,0x0(%r13)
	movq 0x8(%r14),%r13
	movb 0x0(%r14),%dl
	movq 0x10(%r14),%r15
	movq %r13,%r14
	jmp loop_2669
.p2align 0x4
L_475252:
L_232837:
	movq 0x10(%r15),%r14
	movb 0x0(%r15),%dl
	movq 0x8(%r15),%r15
	jmp loop_2669
.p2align 0x4
L_475253:
L_232836:
	movq 0x20(%r15),%r14
	movq 0x18(%r15),%r13
	movq 0x10(%r15),%r11
	movl 0x0(%r15),%r10d
	movq 0x8(%r15),%r9
	movq 0x28(%r15),%r8
	movb 0x4(%r15),%spl
	movb %spl,0x0(%r8)
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r15,1)
	movq %r13,0x0(%r14)
	movl %r10d,0x0(%r11)
	movq 0x8(%r9),%r14
	movl 0x0(%r9),%ecx
	movq 0x10(%r9),%r15
	jmp loop_2668
.p2align 0x4
L_475254:
L_232839:
	movq 0x700(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x708(%rbp),%r15
	movslq 0x0(%r15),%rdx
	movq %rdx,0x20(%rbp)
	testq %rdx,%rdx
	jz L_475258
L_232840:
	cmpq $0x7FFFFFFF,%rdx
	ja L_232849
L_232841:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1661,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x7B0,%rbp
	leaq (L_232842+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_232842
.p2align 0x4
.long 0x3A25
L_232842:
	addq $0xFFFFFFFFFFFFF850,%rbp
	movq %rax,%r15
L_232843:
	xorq %r14,%r14
.p2align 0x4,,0x7
loop_2670:
	cmpq 0x20(%rbp),%r14
	jnl L_475256
L_232845:
	movl %r14d,%r13d
	movslq %r13d,%r11
	movq 0x18(%rbp),%r13
	cmpq 0xFFFFFFFFFFFFFFF0(%r13),%r11
	jnb L_475255
L_232847:
	movq %r14,%r10
	movq %r14,%r9
	movq 0x0(%r13,%r11,8),%r8
	movq 0x8(%r8),%rsp
	salq $0x4,%r10
	movl 0x0(%r8),%esi
	movl %esi,0x0(%r15,%r10,1)
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	salq $0x4,%r9
	movq %rsp,0x8(%r15,%r9,1)
	incq %r14
	jmp loop_2670
.p2align 0x4
L_475255:
L_232846:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_475256:
L_232844:
	movq $0x8A5,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x0(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x7A0(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_475258:
L_232850:
	movq (globalObjptr+0x6F88)(%rip),%r15
	jmp L_232843
.p2align 0x4
.long 0x72E
L_232851:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r13
	movq 0x28(%rbp),%r15
	movl 0x20(%rbp),%ecx
	movq 0x18(%rbp),%r14
.p2align 0x4,,0x7
loop_2672:
	movl %ecx,0x0(%r14)
	cmpq $0x1,%r15
	je L_475262
L_232852:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x18B5,%r14
	je L_475259
L_232857:
	movq 0x10(%r15),%r14
	movl 0x0(%r15),%ecx
	movq 0x8(%r15),%r15
	jmp loop_2672
.p2align 0x4
L_475259:
L_232853:
	movq 0x10(%r15),%r14
	movb 0x0(%r15),%dl
	movq 0x8(%r15),%r15
	movq %r13,(localObjptr+0x0)(%rip)
.p2align 0x4,,0x7
loop_2673:
	movb %dl,0x0(%r14)
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x18B8,%r14
	je L_475261
	cmpq $0x18B9,%r14
	je L_475260
L_232854:
	movq 0x8(%r15),%r14
	movq 0x10(%r15),%r13
	movb 0x0(%r15),%r11b
	movb %r11b,0x0(%r13)
	movq 0x8(%r14),%r13
	movb 0x0(%r14),%dl
	movq 0x10(%r14),%r15
	movq %r13,%r14
	jmp loop_2673
.p2align 0x4
L_475260:
L_232856:
	movq 0x10(%r15),%r14
	movb 0x0(%r15),%dl
	movq 0x8(%r15),%r15
	jmp loop_2673
.p2align 0x4
L_475261:
L_232855:
	movq 0x20(%r15),%r14
	movq 0x18(%r15),%r13
	movq 0x10(%r15),%r11
	movl 0x0(%r15),%r10d
	movq 0x8(%r15),%r9
	movq 0x28(%r15),%r8
	movb 0x4(%r15),%spl
	movb %spl,0x0(%r8)
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r15,1)
	movq %r13,0x0(%r14)
	movl %r10d,0x0(%r11)
	movq 0x8(%r9),%r14
	movl 0x0(%r9),%ecx
	movq 0x10(%r9),%r15
	movq (localObjptr+0x0)(%rip),%r13
	jmp loop_2672
.p2align 0x4
L_475262:
L_232858:
	movq %r13,(globalObjptrNonRoot+0x0)(%rip)
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl mlbPathMap_0
.hidden mlbPathMap_0
mlbPathMap_0:
L_232938:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_233035
L_232939:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_475266
L_232940:
	movq 0x0(%rbp),%r13
	movq 0x58(%r13),%r15
	movq 0x50(%r13),%r11
	movq 0x48(%r13),%r10
	movq %r10,0x8(%rbp)
	movq 0x40(%r13),%r10
	movq %r10,0x10(%rbp)
	movq 0x38(%r13),%r10
	movq %r10,0x18(%rbp)
	movq 0x30(%r13),%r10
	movq %r10,0x20(%rbp)
	movq 0x28(%r13),%r10
	movq %r10,0x28(%rbp)
	movq 0x20(%r13),%r10
	movq %r10,0x30(%rbp)
	movq 0x18(%r13),%r10
	movq %r10,0x38(%rbp)
	movq 0x10(%r13),%r10
	movq %r10,0x40(%rbp)
	movq 0x8(%r13),%r10
	movq %r10,0x48(%rbp)
	movq 0x0(%r13),%r10
	movq %r10,0x50(%rbp)
	movq 0x60(%r13),%r10
	movq 0x0(%r10),%r14
	movq $0xDE5,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x58(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq (globalObjptr+0x10350)(%rip),%r10
	movq %r10,0x0(%r13)
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_475265
L_232941:
	movq %r11,%r15
L_232942:
	movq $0xDE5,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x60(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq (globalObjptr+0x10358)(%rip),%r11
	movq %r11,0x0(%r13)
	movb 0x0(%r15),%dl
	movq (globalObjptr+0x920)(%rip),%r14
	movq (globalObjptr+0x860)(%rip),%r15
.p2align 0x4,,0x7
L_232943:
	cmpb 0x0(%r15),%dl
	je L_475264
L_232944:
	cmpq $0x1,%r14
	je L_475263
L_232945:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq %r13,%r15
	jmp L_232943
.p2align 0x4
L_475263:
L_232947:
	movq $0x9,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_475264:
L_232948:
	movq 0x8(%r15),%r14
	movq %r14,0x70(%rbp)
	movq $0x3,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_232949+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1211
.p2align 0x4
L_475265:
L_233034:
	movq (globalObjptr+0xC9B8)(%rip),%r14
	movq %r11,%r15
	jmp L_232942
.p2align 0x4
L_475266:
L_233035:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_233036+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_233036
.p2align 0x4
.long 0x451
L_233036:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	jmp L_232940
.p2align 0x4
.long 0x9D3
L_232949:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_232950
L_233032:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_233033+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_233033
.p2align 0x4
.long 0x9DD
L_233033:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_232950:
	movq $0xDE5,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x70(%rbp)
	addq $0x18,%r12
	movq (globalObjptr+0x10360)(%rip),%r11
	movq %r11,0x0(%r13)
	movq 0x68(%rbp),%r11
	movq %r11,0x8(%r13)
	movq 0x8(%rbp),%r13
	movb 0x0(%r13),%dl
	movq (globalObjptr+0x9C8)(%rip),%r14
	movq (globalObjptr+0x928)(%rip),%r15
.p2align 0x4,,0x7
L_232951:
	cmpb 0x0(%r15),%dl
	je L_475269
L_232952:
	cmpq $0x1,%r14
	je L_232947
L_232953:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq %r13,%r15
	jmp L_232951
.p2align 0x4
L_475269:
L_232955:
	movq 0x8(%r15),%r14
	movq %r14,0x80(%rbp)
	movq $0x3,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_232956+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1211
.p2align 0x4
.long 0x2138
L_232956:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_232957
L_233030:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_233031+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_233031
.p2align 0x4
.long 0xDFE
L_233031:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_232957:
	movq $0xDE5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x78(%rbp)
	addq $0x18,%r12
	movq (globalObjptr+0x10368)(%rip),%r14
	movq %r14,0x0(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_475271
L_232958:
	movq 0x0(%r11),%r15
	movq %r15,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_232959+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_475271:
L_233025:
	movq %r14,0x8(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_233026+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x3A2F
L_232959:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movl 0x88(%rbp),%r15d
	movl %r15d,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_232960
L_233023:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_233024+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_233024
.p2align 0x4
.long 0x3A31
L_233024:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_232960:
	movl 0x68(%rbp),%r15d
	cmpl $0x20,%r15d
	je L_475275
	cmpl $0x40,%r15d
	je L_475273
L_232961:
	movq (globalObjptr+0x1598)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_475273:
L_233022:
	movq (globalObjptr+0x103B8)(%rip),%r15
L_232963:
	movq $0xDE5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x68(%rbp)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x10378)(%rip),%r15
	movq %r15,0x0(%r14)
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_475274
L_232964:
	movq 0x0(%r11),%r15
	movq %r15,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_232965+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_475274:
L_233017:
	movq %r14,0x8(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_233018+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_475275:
L_232962:
	movq (globalObjptr+0x10370)(%rip),%r14
	movq %r14,%r15
	jmp L_232963
.p2align 0x4
.long 0x1
L_233026:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (bug_634+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x309D
L_232965:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movl 0x88(%rbp),%r15d
	movl %r15d,0x80(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_232966
L_233015:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_233016+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_233016
.p2align 0x4
.long 0x3A30
L_233016:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_232966:
	movl 0x80(%rbp),%r15d
	cmpl $0x20,%r15d
	je L_475279
	cmpl $0x40,%r15d
	je L_475277
	jmp L_232961
.p2align 0x4
L_475277:
L_233014:
	movq (globalObjptr+0xD6D0)(%rip),%r15
L_232968:
	movq $0xDE5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x80(%rbp)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x10380)(%rip),%r15
	movq %r15,0x0(%r14)
	movq 0x20(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_475278
L_232969:
	movq 0x0(%r11),%r15
	movq %r15,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_232970+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_475278:
L_233009:
	movq %r14,0x8(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_233010+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_475279:
L_232967:
	movq (globalObjptr+0xCAA8)(%rip),%r14
	movq %r14,%r15
	jmp L_232968
.p2align 0x4
.long 0x1
L_233018:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (bug_633+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x1
bug_634:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_233027
L_233028:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_233029+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_233029
.p2align 0x4
.long 0x451
L_233029:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_233027:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1F3D
L_232970:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movl 0x90(%rbp),%r15d
	movl %r15d,0x88(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_232971
L_233007:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_233008+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_233008
.p2align 0x4
.long 0x2CC0
L_233008:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_232971:
	movl 0x88(%rbp),%r15d
	cmpl $0x20,%r15d
	je L_475294
	cmpl $0x40,%r15d
	je L_475282
	jmp L_232961
.p2align 0x4
L_475282:
L_233006:
	movq (globalObjptr+0xD6F0)(%rip),%r15
L_232973:
	movq $0xDE5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x10388)(%rip),%r15
	movq %r15,0x0(%r14)
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r13
	movq $0xDE5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0x10390)(%rip),%r13
	movq %r13,0x0(%r15)
	movq 0x30(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0xDE5,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r11,0x8(%r13)
	addq $0x18,%r12
	movq (globalObjptr+0x10398)(%rip),%r11
	movq %r11,0x0(%r13)
	movq 0x38(%rbp),%r11
	movq 0x0(%r11),%r10
	movq $0xDE5,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r10,0x8(%r11)
	addq $0x18,%r12
	movq (globalObjptr+0x103A0)(%rip),%r10
	movq %r10,0x0(%r11)
	movq 0x40(%rbp),%r10
	movq 0x0(%r10),%r9
	movq $0xDE5,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r9,0x8(%r10)
	addq $0x18,%r12
	movq (globalObjptr+0x103A8)(%rip),%r9
	movq %r9,0x0(%r10)
	movq 0x48(%rbp),%r9
	movq 0x0(%r9),%r8
	movq $0xDE5,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r8,0x8(%r9)
	addq $0x18,%r12
	movq (globalObjptr+0x103B0)(%rip),%r8
	movq %r8,0x0(%r9)
	movq $0x1B73,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r9,0x0(%r8)
	addq $0x18,%r12
	movq $0x1,0x8(%r8)
	movq $0x1B73,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r10,0x0(%r9)
	movq %r8,0x8(%r9)
	addq $0x18,%r12
	movq $0x1B73,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r11,0x0(%r10)
	movq %r9,0x8(%r10)
	addq $0x18,%r12
	movq $0x1B73,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r10,0x8(%r11)
	addq $0x18,%r12
	movq $0x1B73,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r11,0x8(%r13)
	addq $0x18,%r12
	movq $0x1B73,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq $0x1B73,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x80(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x1B73,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1B73,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x78(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x1B73,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1B73,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x60(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x1B73,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x8(%rbp)
	movq 0x50(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x2881,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq %r15,0x0(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_232974:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_475293
.p2align 0x4,,0x7
L_232975:
	movq $0x2881,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_475283
L_232976:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_232974
.p2align 0x4
L_475283:
L_232977:
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%rbp)
	movq 0x8(%rbp),%r15
	movq $0x1,0x8(%rbp)
.p2align 0x4,,0x7
L_232978:
	cmpq $0x1,%r15
	je L_475292
L_232979:
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	movq $0x1,0x20(%rbp)
L_232980:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_475291
.p2align 0x4,,0x7
L_232981:
	movq $0x1B73,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_475284
L_232982:
	movq %r15,0x20(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x18(%rbp)
	jmp L_232980
.p2align 0x4
L_475284:
L_232983:
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x8(%rbp)
L_232984:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_475290
.p2align 0x4,,0x7
L_232985:
	movq $0x1B73,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_475285
L_232986:
	movq %r15,0x18(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x10(%rbp)
	jmp L_232984
.p2align 0x4
L_475285:
L_232988:
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_475286
L_232989:
	movq %r15,0x8(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_232978
.p2align 0x4
L_475286:
L_232990:
	cmpq $0x1,%r15
	je L_475289
L_232991:
	movq 0x8(%r15),%r14
	movq %r14,0x0(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_232992:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_475288
.p2align 0x4,,0x7
L_232993:
	movq $0x1B73,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_475287
L_232994:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_232992
.p2align 0x4
L_475287:
L_232995:
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_475288:
L_232996:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_232997+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_232997
.p2align 0x4
.long 0x45B
L_232997:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_232993
.p2align 0x4
L_475289:
L_232998:
	movq $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_475290:
L_232999:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_233000+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_233000
.p2align 0x4
.long 0x4AE
L_233000:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	jmp L_232985
.p2align 0x4
L_475291:
L_233001:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_233002+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_233002
.p2align 0x4
.long 0x63C
L_233002:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	jmp L_232981
.p2align 0x4
L_475292:
L_233003:
	movq 0x8(%rbp),%r15
	jmp L_232988
.p2align 0x4
L_475293:
L_233004:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_233005+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_233005
.p2align 0x4
.long 0x45B
L_233005:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_232975
.p2align 0x4
L_475294:
L_232972:
	movq (globalObjptr+0xCA88)(%rip),%r14
	movq %r14,%r15
	jmp L_232973
.p2align 0x4
.long 0x1
L_233010:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (bug_632+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x1
bug_633:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_233019
L_233020:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_233021+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_233021
.p2align 0x4
.long 0x451
L_233021:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_233019:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
bug_632:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_233011
L_233012:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_233013+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_233013
.p2align 0x4
.long 0x451
L_233013:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_233011:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl wrapLexAndParse_0
.hidden wrapLexAndParse_0
wrapLexAndParse_0:
L_233037:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x28(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_233123
L_233038:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_475299
L_233039:
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x88(%r15),%r13
	movq 0x80(%r15),%r11
	movq 0x70(%r15),%r10
	movq 0x20(%r15),%r9
	movq 0x10(%r15),%r8
	movq 0x0(%r14),%rsp
	movq %rsp,0x38(%rbp)
	movq $0x44B3,0x0(%r12)
	movq %r12,%rsp
	addq $0x8,%rsp
	movq %r13,0x0(%rsp)
	movq %r11,0x8(%rsp)
	movq %r10,0x10(%rsp)
	movq %r9,0x20(%rsp)
	movq %r8,0x28(%rsp)
	addq $0x40,%r12
	movq %r15,0x18(%rsp)
	movq 0x10(%rbp),%r15
	movq %r15,0x30(%rsp)
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %rsp,0x0(%r14)
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x225A,%r15
	je L_475298
L_233085:
	movq 0x10(%r14),%r15
	movq %r15,0x8(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x50(%rbp)
	leaq L_233069(%rip),%r15
	movq %r15,0x20(%rbp)
	movq %rbp,%r15
	addq $0x28,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x0(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_233086+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp openIn_0
.p2align 0x4
L_475298:
L_233040:
	movq 0xA8(%r14),%r15
	movq 0xA0(%r14),%r13
	movq 0x98(%r14),%r11
	movq 0x90(%r14),%r10
	movq 0x88(%r14),%r9
	movq 0x80(%r14),%r8
	movq 0x78(%r14),%rsp
	movq 0x70(%r14),%rsi
	movq 0x68(%r14),%rdi
	movq 0x60(%r14),%rdx
	movq 0x58(%r14),%rcx
	movq 0x50(%r14),%rbx
	movl 0x0(%r14),%eax
	movq %rbx,(localObjptr+0x60)(%rip)
	movq 0x48(%r14),%rbx
	movq %rbx,(localObjptr+0x68)(%rip)
	movq 0x40(%r14),%rbx
	movq %rbx,(localObjptr+0x70)(%rip)
	movq 0x38(%r14),%rbx
	movq %rbx,(localObjptr+0x78)(%rip)
	movq 0x30(%r14),%rbx
	movq %rbx,(localObjptr+0x80)(%rip)
	movq 0x28(%r14),%rbx
	movq %rbx,(localObjptr+0x88)(%rip)
	movq 0x20(%r14),%rbx
	movq %rbx,(localObjptr+0x90)(%rip)
	movq 0x18(%r14),%rbx
	movq %rbx,(localObjptr+0x98)(%rip)
	movq 0x10(%r14),%rbx
	movq %rbx,(localObjptr+0xA0)(%rip)
	movq 0x8(%r14),%rbx
	movq $0x407,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x8(%rbp)
	movl %eax,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r13,0x10(%r14)
	movq %r11,0x18(%r14)
	movq %r10,0x20(%r14)
	movq %r9,0x28(%r14)
	movq %r8,0x30(%r14)
	movq %rsp,0x38(%r14)
	movq %rsi,0x40(%r14)
	movq %rdi,0x48(%r14)
	movq %rdx,0x50(%r14)
	movq %rcx,0x58(%r14)
	movq (localObjptr+0x60)(%rip),%r15
	movq %r15,0x60(%r14)
	movq (localObjptr+0x68)(%rip),%r15
	movq %r15,0x68(%r14)
	movq (localObjptr+0x70)(%rip),%r15
	movq %r15,0x70(%r14)
	movq (localObjptr+0x78)(%rip),%r15
	movq %r15,0x78(%r14)
	movq (localObjptr+0x80)(%rip),%r15
	movq %r15,0x80(%r14)
	movq (localObjptr+0x88)(%rip),%r15
	movq %r15,0x88(%r14)
	movq (localObjptr+0x90)(%rip),%r15
	movq %r15,0x90(%r14)
	movq (localObjptr+0x98)(%rip),%r15
	movq %r15,0x98(%r14)
	movq (localObjptr+0xA0)(%rip),%r15
	movq %r15,0xA0(%r14)
	movq %rbx,0xA8(%r14)
	addq $0xB8,%r12
	movl $0x0,0x4(%r14)
	movq $0x6B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%r12
	movq (globalObjptr+0x103C0)(%rip),%r14
	movq %r14,0x0(%r15)
	movq $0x4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x18(%rbp)
	addq $0x10,%r12
	movl $0x1,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x40(%rbp)
	addq $0x10,%r12
	movl $0xFFFFFFFF,0x0(%r15)
	movl $0x0,0x4(%r15)
	leaq L_233069(%rip),%r15
	movq %r15,0x20(%rbp)
	movq %rbp,%r15
	addq $0x28,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq %r14,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_233041+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromString_24
.p2align 0x4
L_475299:
L_233123:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_233124+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_233124
.p2align 0x4
.long 0x75C
L_233124:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_233039
.p2align 0x4
.long 0x1A8A
L_233086:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_233087
L_233121:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_233122+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_233122
.p2align 0x4
.long 0x3A40
L_233122:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_233087:
	movq $0x10E7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x60(%rbp)
	addq $0x38,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x48(%rbp),%r13
	movq %r13,0x10(%r15)
	movq 0x50(%rbp),%r13
	movq %r13,0x18(%r15)
	movq 0x58(%rbp),%r13
	movq %r13,0x20(%r15)
	movq %r14,0x28(%r15)
	movq $0x6B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x68(%rbp)
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x70(%rbp)
	addq $0x10,%r12
	movl $0x1,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x78(%rbp)
	addq $0x10,%r12
	movl $0xFFFFFFFF,0x0(%r15)
	movl $0x0,0x4(%r15)
	leaq L_233109(%rip),%r15
	movq %r15,0x20(%rbp)
	movq %r14,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_233088+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromString_24
.p2align 0x4
.long 0x473
L_233069:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
L_233058:
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq 0x30(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x101B
L_233041:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	movl 0x58(%rbp),%r15d
	movl %r15d,0x50(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_233042
L_233083:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_233084+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_233084
.p2align 0x4
.long 0x3A37
L_233084:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_233042:
	movq 0x58(%rbp),%r15
	cmpq $0x1,%r15
	je L_475307
L_233043:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x58(%rbp)
	movq %r14,0x60(%rbp)
	movq $0x1,0x68(%rbp)
.p2align 0x4,,0x7
L_233044:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_475306
.p2align 0x4,,0x7
L_233045:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x58(%rbp),%r14
	cmpq $0x1,%r14
	je L_475302
L_233046:
	movq %r15,0x68(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x58(%rbp)
	movq %r15,0x60(%rbp)
	jmp L_233044
.p2align 0x4
L_475302:
L_233047:
	movq 0x68(%rbp),%r15
	cmpq $0x1,%r15
	je L_475305
L_233048:
	movq 0x8(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x60(%rbp)
	movq $0x1,0x68(%rbp)
.p2align 0x4,,0x7
L_233049:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_475304
.p2align 0x4,,0x7
L_233050:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x58(%rbp),%r14
	cmpq $0x1,%r14
	je L_475303
L_233051:
	movq %r15,0x68(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x58(%rbp)
	movq %r15,0x60(%rbp)
	jmp L_233049
.p2align 0x4
L_475303:
L_233053:
	movq %r15,0x60(%rbp)
	movl 0x50(%rbp),%r15d
	movl %r15d,0x58(%rbp)
	movq (globalObjptr+0xD3B8)(%rip),%r15
	movq %r15,0x68(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_233054+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_537
.p2align 0x4
L_475304:
L_233077:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_233078+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_233078
.p2align 0x4
.long 0x3A36
L_233078:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	jmp L_233050
.p2align 0x4
L_475305:
L_233079:
	movq $0x1,%r13
	xchgq %r13,%r15
	jmp L_233053
.p2align 0x4
L_475306:
L_233080:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_233081+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_233081
.p2align 0x4
.long 0x3A36
L_233081:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	jmp L_233045
.p2align 0x4
L_475307:
L_233082:
	movq (globalObjptr+0x103C0)(%rip),%r14
	xchgq %r14,%r15
L_233056:
	movq $0x10E9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x48(%rbp)
	movq %r15,0x0(%r14)
	addq $0x28,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x18(%rbp),%r13
	movq %r13,0x10(%r14)
	movq 0x10(%rbp),%r13
	movq %r13,0x18(%r14)
	movq $0x53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x50(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x4B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x58(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x0(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movl %r11d,0x60(%rbp)
	movslq %r11d,%r15
	cmpq %r15,%r13
	je L_475308
L_233057:
	movq (globalObjptr+0x4D8)(%rip),%r15
	jmp L_233058
.p2align 0x4
L_475308:
L_233059:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_233060
L_233073:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_233074+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_233074
.p2align 0x4
.long 0x3A34
L_233074:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_233060:
	movq $0x4965,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x30,%r12
	movl 0x60(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x0(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x58(%rbp),%r11
	movq %r11,0x10(%r15)
	movq (globalObjptr+0x103C8)(%rip),%r10
	movq %r10,0x18(%r15)
	movq 0x50(%rbp),%r10
	movq %r10,0x20(%r15)
	movq $0x496B,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	addq $0x30,%r12
	movl %r14d,0x0(%r9)
	movl $0x0,0x4(%r9)
	movq %r13,0x8(%r9)
	movq %r11,0x10(%r9)
	movq (globalObjptr+0x103D0)(%rip),%r14
	movq %r14,0x18(%r9)
	movq %r10,0x20(%r9)
	movq $0x4961,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r10,0x0(%r14)
	movq $0x10E3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r9,0x10(%r13)
	movq %r15,0x18(%r13)
	movq %r14,0x28(%r13)
	addq $0x38,%r12
	movq %r12,(gcState+0x0)(%rip)
	movq $0x0,0x0(%r13)
	movl $0x20,0x8(%r13)
	movl $0x0,0xC(%r13)
	movq (globalObjptr+0xDD90)(%rip),%r15
	movq %r15,0x20(%r13)
	movq %r13,0x10(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x51,%rcx
	movq $0x20,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_233061+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_233061
.p2align 0x4
.long 0x3A32
L_233061:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq %rax,0x18(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2674:
	cmpq $0x20,%r15
	jnl L_475309
L_233072:
	movq 0x18(%rbp),%r14
	movb $0x0,0x0(%r14,%r15,1)
	incq %r15
	jmp loop_2674
.p2align 0x4
L_475309:
L_233062:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_233063
L_233070:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_233071+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_233071
.p2align 0x4
.long 0x3A33
L_233071:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_233063:
	movq $0x4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x10E5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq (globalWord64+0x30)(%rip),%r13
	movq %r13,0x0(%r14)
	movq $0x4B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movl $0x0,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq $0x10E7,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x10(%r11)
	movq %r15,0x18(%r11)
	addq $0x38,%r12
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%r11)
	movq 0x18(%rbp),%r14
	movq %r14,0x20(%r11)
	movq %r15,0x28(%r11)
	movq 0x48(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq %r11,0x48(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x48,%rbp
	leaq (L_233064+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lexAndParse_0
.p2align 0x4
.long 0x3A38
L_233088:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x58(%rbp)
	movl 0x90(%rbp),%r15d
	movl %r15d,0x80(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0x88(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_233089
L_233119:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_233120+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_233120
.p2align 0x4
.long 0x3A3F
L_233120:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_233089:
	movq 0x88(%rbp),%r15
	cmpq $0x1,%r15
	je L_475318
L_233090:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x88(%rbp)
	movq %r14,0x90(%rbp)
	movq $0x1,0x98(%rbp)
.p2align 0x4,,0x7
L_233091:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_475317
.p2align 0x4,,0x7
L_233092:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x90(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x98(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x88(%rbp),%r14
	cmpq $0x1,%r14
	je L_475313
L_233093:
	movq %r15,0x98(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x88(%rbp)
	movq %r15,0x90(%rbp)
	jmp L_233091
.p2align 0x4
L_475313:
L_233094:
	movq 0x98(%rbp),%r15
	cmpq $0x1,%r15
	je L_475316
L_233095:
	movq 0x8(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x90(%rbp)
	movq $0x1,0x98(%rbp)
.p2align 0x4,,0x7
L_233096:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_475315
.p2align 0x4,,0x7
L_233097:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x90(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x98(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x88(%rbp),%r14
	cmpq $0x1,%r14
	je L_475314
L_233098:
	movq %r15,0x98(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x88(%rbp)
	movq %r15,0x90(%rbp)
	jmp L_233096
.p2align 0x4
L_475314:
L_233100:
	movq %r15,0x98(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x88(%rbp)
	movl 0x80(%rbp),%r15d
	movl %r15d,0x90(%rbp)
	movq (globalObjptr+0xD3B8)(%rip),%r15
	movq %r15,0xA0(%rbp)
	addq $0x88,%rbp
	leaq (L_233101+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_537
.p2align 0x4
L_475315:
L_233113:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_233114+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_233114
.p2align 0x4
.long 0x3A3E
L_233114:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	jmp L_233097
.p2align 0x4
L_475316:
L_233115:
	movq $0x1,%r13
	xchgq %r13,%r15
	jmp L_233100
.p2align 0x4
L_475317:
L_233116:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_233117+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_233117
.p2align 0x4
.long 0x3A3E
L_233117:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	jmp L_233092
.p2align 0x4
L_475318:
L_233118:
	movq 0x0(%rbp),%r14
	xchgq %r14,%r15
L_233103:
	movq $0x10E9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x28,%r12
	movq 0x78(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x70(%rbp),%r15
	movq %r15,0x10(%r14)
	movq 0x68(%rbp),%r15
	movq %r15,0x18(%r14)
	movq %r14,0x68(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x60,%rbp
	leaq (L_233104+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lexAndParse_0
.p2align 0x4
.long 0x473
L_233109:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	movq %r15,0x58(%rbp)
	leaq L_233069(%rip),%r15
	movq %r15,0x20(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x68,%rbp
	leaq (L_233110+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp closeIn_0
.p2align 0x4
.long 0x101B
L_233054:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_233055
L_233075:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_233076+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_233076
.p2align 0x4
.long 0x3A35
L_233076:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_233055:
	movq 0x48(%rbp),%r15
	jmp L_233056
.p2align 0x4
.long 0x7BF
L_233064:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_233065
L_233067:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_233068+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_233068
.p2align 0x4
.long 0x514
L_233068:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_233065:
	movq 0x40(%rbp),%r14
	movq 0x48(%rbp),%r15
L_233066:
	movq $0x403,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r13,0x0(%rbp)
	addq $0x18,%r12
	movq 0x30(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3A39
L_233101:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_233102
L_233111:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_233112+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_233112
.p2align 0x4
.long 0x3A3D
L_233112:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_233102:
	movq 0x58(%rbp),%r15
	jmp L_233103
.p2align 0x4
.long 0x3A3A
L_233104:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	leaq L_233069(%rip),%r15
	movq %r15,0x20(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x70,%rbp
	leaq (L_233105+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp closeIn_0
.p2align 0x4
.long 0x3A3C
L_233110:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x58(%rbp),%r15
	jmp L_233058
.p2align 0x4
.long 0x178E
L_233105:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_233106
L_233107:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_233108+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_233108
.p2align 0x4
.long 0x3A3B
L_233108:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_233106:
	movq 0x58(%rbp),%r14
	movq 0x60(%rbp),%r15
	jmp L_233066
.text
.p2align 0x4
.globl lexAndParse_0
.hidden lexAndParse_0
lexAndParse_0:
L_233125:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x20(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_233243
L_233126:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_475324
L_233127:
	movq 0x10(%rbp),%r15
	movq 0xA8(%r15),%r14
	movq 0xA0(%r15),%r13
	movq 0x98(%r15),%r11
	movq 0x90(%r15),%r10
	movq 0x88(%r15),%r9
	movq 0x80(%r15),%r8
	movq 0x78(%r15),%rsp
	movq 0x70(%r15),%rsi
	movq 0x68(%r15),%rdi
	movq 0x60(%r15),%rdx
	movq 0x58(%r15),%rcx
	movq 0x50(%r15),%rbx
	movq 0x48(%r15),%rax
	movq %rax,(localObjptr+0x60)(%rip)
	movq 0x40(%r15),%rax
	movq %rax,0x28(%rbp)
	movq 0x38(%r15),%rax
	movq %rax,0x30(%rbp)
	movq 0x30(%r15),%rax
	movq %rax,0x38(%rbp)
	movq 0x8(%r15),%rax
	movq %rax,0x40(%rbp)
	movq $0x6B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq (globalObjptr+0xA088)(%rip),%rax
	movq %rax,0x0(%r15)
	movq $0x4B,0x0(%r12)
	movq %r12,%rax
	addq $0x8,%rax
	addq $0x10,%r12
	movl $0x1,0x0(%rax)
	movl $0x0,0x4(%rax)
	movq $0x4B,0x0(%r12)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,%rbp
	addq $0x8,%rbp
	addq $0x10,%r12
	movl $0x1,0x0(%rbp)
	movl $0x0,0x4(%rbp)
	movq $0x4B,0x0(%r12)
	movq %rax,(localObjptr+0x70)(%rip)
	movq %r12,%rax
	addq $0x8,%rax
	addq $0x10,%r12
	movl $0xFFFFFFFF,0x0(%rax)
	movl $0x0,0x4(%rax)
	movq $0x53,0x0(%r12)
	movq %rbx,(localObjptr+0x58)(%rip)
	movq %r12,%rbx
	addq $0x8,%rbx
	addq $0x10,%r12
	movl $0x0,0x0(%rbx)
	movl $0x0,0x4(%rbx)
	movq $0x4B,0x0(%r12)
	movq %rbx,(localObjptr+0x88)(%rip)
	movq %r12,%rbx
	addq $0x8,%rbx
	addq $0x10,%r12
	movl $0x1,0x0(%rbx)
	movl $0x0,0x4(%rbx)
	movq $0x26CD,0x0(%r12)
	movq %rcx,(localObjptr+0x50)(%rip)
	movq %r12,%rcx
	addq $0x8,%rcx
	movq %r15,0x0(%rcx)
	movq %rax,0x8(%rcx)
	movq %rbp,0x10(%rcx)
	movq %r14,0x20(%rcx)
	movq %r13,0x28(%rcx)
	movq %rbx,0x30(%rcx)
	movq %r11,0x38(%rcx)
	movq %r10,0x40(%rcx)
	movq %r9,0x48(%rcx)
	movq %r8,0x50(%rcx)
	movq %rsp,0x58(%rcx)
	movq %rsi,0x60(%rcx)
	movq %rdi,0x68(%rcx)
	movq %rdx,0x70(%rcx)
	movq (localObjptr+0x50)(%rip),%r15
	movq %r15,0x78(%rcx)
	movq (localObjptr+0x58)(%rip),%r15
	movq %r15,0x80(%rcx)
	movq (localObjptr+0x70)(%rip),%r15
	movq %r15,0x88(%rcx)
	movq (localObjptr+0x88)(%rip),%r15
	movq %r15,0x90(%rcx)
	movq (localObjptr+0x60)(%rip),%r15
	movq %r15,0xA0(%rcx)
	movq %rbx,0xB0(%rcx)
	addq $0xC0,%r12
	movq (gcState+0x10)(%rip),%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x18(%rcx)
	movq 0x0(%rbp),%r15
	movq %r15,0x98(%rcx)
	movq 0x28(%rbp),%r15
	movq %r15,0xA8(%rcx)
	movq $0x1019,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %rcx,0x0(%r15)
	movq %r15,0x50(%rbp)
	addq $0x10,%r12
	leaq L_233166(%rip),%r15
	movq %r15,0x18(%rbp)
	movq %rbp,%r15
	addq $0x20,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x50,%rbp
	leaq (L_233128+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_120
.p2align 0x4
L_475324:
L_233243:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_233244+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_233244
.p2align 0x4
.long 0x6FE
L_233244:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	jmp L_233127
.p2align 0x4
.long 0x9F7
L_233128:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_233129
L_233241:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_233242+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_233242
.p2align 0x4
.long 0x101F
L_233242:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_233129:
	movq 0x10(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r13
	movq 0x8(%r13),%r11
	movq $0x1015,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r11,0x0(%r14)
	movq %r11,0x8(%r14)
	addq $0x20,%r12
	movq $0x1,0x10(%r14)
	movq $0x1017,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl $0x0,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq $0x26D1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x101F,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	movq %r14,0x78(%rbp)
	addq $0x18,%r12
	movq %r15,0x0(%r13)
	movq $0x285B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x1597,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x18,%r12
	movq $0x1,0x8(%r13)
	movq %r13,0x70(%rbp)
	movq 0x30(%rbp),%r14
	movq 0x18(%r14),%r13
	movq %r13,0x48(%rbp)
	movq 0x10(%r14),%r11
	movq %r11,0x50(%rbp)
	movq $0x17CF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x58(%rbp)
	addq $0x20,%r12
	movq %r11,0x0(%r14)
	movq 0x38(%rbp),%r11
	movq %r11,0x8(%r14)
	movq %r13,0x10(%r14)
	movl $0xF,0x68(%rbp)
	movq %r15,0x80(%rbp)
	movq %r14,0x88(%rbp)
	addq $0x68,%rbp
	leaq (loop_2675+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp parseStep_4
.p2align 0x4
.long 0x48A
L_233166:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_233133
L_233168:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_233169+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_233169
.p2align 0x4
.long 0x2CD5
L_233169:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_233133:
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	movl 0x0(%r14),%r13d
	movl %r13d,%r11d
	movq 0x10(%r15),%r10
	movq 0x18(%r15),%r9
	subl %r13d,%r11d
	jo L_475327
L_233135:
	movq 0x0(%r9),%r15
	movl 0x0(%r10),%r14d
	movq $0x389,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movl %r14d,0x0(%r13)
	movl %r11d,0x4(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x30(%rbp)
	movq %r13,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x103D8)(%rip),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_233136+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_475327:
L_233134:
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3A41
loop_2675:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x10(%rbp)
	movl 0x70(%rbp),%r15d
	movl %r15d,0x30(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x70(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_233130
L_233239:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_233240+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_233240
.p2align 0x4
.long 0x3A47
L_233240:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_233130:
	movl 0x30(%rbp),%r15d
	testl %r15d,%r15d
	jz L_475350
L_233132:
	movq 0x10(%rbp),%r15
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_233133
L_233146:
	movq 0x0(%r15),%r14
	andq $0x3,%r14
	cmpq $0x0,%r14
	je parseStep_2
	cmpq $0x1,%r14
	je L_475329
	jmp L_233133
.p2align 0x4
L_475329:
L_233234:
	movq 0x60(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x68,%rbp
	leaq (L_233235+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1972
.p2align 0x4
parseStep_2:
parseStep_0:
	movq 0x60(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x60(%rbp)
loop_2676:
	movq 0x60(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x68(%rbp)
	movq 0x8(%r14),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x70(%rbp)
	movl 0x0(%r13),%r10d
	movl %r10d,0x78(%rbp)
	movq 0x8(%r11),%r14
	movq %r14,0x80(%rbp)
L_233148:
	movq 0x30(%rbp),%r14
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_233133
L_233149:
	movq 0x0(%r14),%r13
	movq %r13,0x88(%rbp)
	movslq 0x0(%r13),%r15
	movq 0x48(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_233133
L_233151:
	movq %r15,%r13
	salq $0x4,%r13
	movq 0x0(%r14,%r13,1),%r11
	movq %r11,0x90(%rbp)
	salq $0x4,%r15
	movq 0x8(%r14,%r15,1),%r13
	cmpq $0x1,%r13
	je L_233226
L_233152:
	movq 0x0(%r13),%r14
	movq %r14,0x98(%rbp)
	movl 0x8(%r13),%r14d
	movq 0x10(%r13),%r13
	movl %r14d,0x7C(%rbp)
	movq %r13,%r15
.p2align 0x4,,0x7
L_233153:
	movl 0x78(%rbp),%r14d
	cmpl %r14d,0x7C(%rbp)
	jnl L_475337
L_233222:
	cmpq $0x1,%r15
	je L_475330
L_233223:
	movq 0x0(%r15),%r14
	movq %r14,0x98(%rbp)
	movl 0x8(%r15),%r14d
	movq 0x10(%r15),%r15
	movl %r14d,0x7C(%rbp)
	jmp L_233153
.p2align 0x4
L_475330:
L_233224:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_233226
L_233231:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_233232+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_233232
.p2align 0x4
.long 0x3A46
L_233232:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_233226:
	movq 0x90(%rbp),%r15
	andq $0x3,%r15
	cmpq $0x1,%r15
	je L_475335
	cmpq $0x2,%r15
	je L_475334
	cmpq $0x3,%r15
	je L_475333
L_233158:
	movq 0x88(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x10(%r14),%r13
L_233159:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_233133
L_233160:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x102F,%r15
	jne L_233133
L_233161:
	movq 0x10(%r13),%r15
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r11
	movq $0x3EF,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	movq %r11,0x10(%r13)
	movq %r13,0x50(%rbp)
	addq $0x20,%r12
	addq $0x50,%rbp
	leaq (L_233162+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1973
.p2align 0x4
L_475333:
L_233230:
	movq 0x90(%rbp),%r15
	shrq $0x2,%r15
	movl %r15d,%ecx
L_233201:
	movq $0x1017,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %ecx,0x0(%r15)
	addq $0x18,%r12
	movl $0x0,0x4(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x26D1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x60(%rbp)
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x68(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_233202+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_120
.p2align 0x4
L_475334:
L_233229:
	movq 0x90(%rbp),%r15
	shrq $0x2,%r15
	movl %r15d,%ecx
L_233176:
	movq 0x30(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x78(%rbp)
	movl %ecx,0x80(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x70,%rbp
	leaq (L_233177+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1974
.p2align 0x4
L_475335:
L_233171:
	movq 0x10(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x68,%rbp
	leaq (loop_2677+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1972
.p2align 0x4
L_475337:
L_233154:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_233155
L_233220:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_233221+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_233221
.p2align 0x4
.long 0x3A45
L_233221:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_233155:
	movl 0x78(%rbp),%r15d
	cmpl %r15d,0x7C(%rbp)
	je L_475341
L_233156:
	movq 0x90(%rbp),%r15
	andq $0x3,%r15
	cmpq $0x1,%r15
	je L_233171
	cmpq $0x2,%r15
	je L_475339
	cmpq $0x3,%r15
	je L_475338
	jmp L_233158
.p2align 0x4
L_475338:
L_233200:
	movq 0x90(%rbp),%r15
	shrq $0x2,%r15
	movl %r15d,%ecx
	jmp L_233201
.p2align 0x4
L_475339:
L_233175:
	movq 0x90(%rbp),%r15
	shrq $0x2,%r15
	movl %r15d,%ecx
	jmp L_233176
.p2align 0x4
L_475341:
L_233215:
	movq 0x98(%rbp),%r15
	andq $0x3,%r15
	cmpq $0x1,%r15
	je L_233171
	cmpq $0x2,%r15
	je L_475343
	cmpq $0x3,%r15
	je L_475342
	jmp L_233158
.p2align 0x4
L_475342:
L_233219:
	movq 0x98(%rbp),%r15
	shrq $0x2,%r15
	movl %r15d,%ecx
	jmp L_233201
.p2align 0x4
L_475343:
L_233218:
	movq 0x98(%rbp),%r15
	shrq $0x2,%r15
	movl %r15d,%ecx
	jmp L_233176
.p2align 0x4
L_475350:
L_233237:
	movq 0x10(%rbp),%r15
	andq $0x3,%r15
	jnz parseStep_0
L_233238:
	movq 0x60(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x60(%rbp)
	jmp loop_2676
.p2align 0x4
.long 0x7AA
L_233136:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	incl %r13d
	jo L_233134
L_233137:
	movl %r13d,0x0(%r14)
	movq (globalObjptr+0x9D0)(%rip),%r14
	movq %r14,0x50(%rbp)
	movq %r15,0x58(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x68(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x50,%rbp
	leaq (L_233138+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
.long 0x3A41
L_233235:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x70(%rbp),%r14
	movq %r14,0x60(%rbp)
	movq 0x78(%rbp),%r13
	movq %r15,0x70(%rbp)
	movq %r14,0x78(%rbp)
	movq %r13,0x80(%rbp)
	movq %r13,0x68(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x88(%rbp)
	movl 0x30(%rbp),%r15d
	movl %r15d,0x68(%rbp)
	addq $0x68,%rbp
	leaq (loop_2675+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp parseStep_4
.p2align 0x4
.long 0x2CD3
L_233162:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_233163
L_233164:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_233165+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_233165
.p2align 0x4
.long 0x287D
L_233165:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_233163:
	movq 0x10(%rbp),%r15
	movq %r15,0x28(%rbp)
L_233141:
	movq $0x403,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,(gcState+0x20)(%rip)
	movq 0x40(%rbp),%r14
	movq %r14,0x48(%rbp)
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_233142+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp checkSyntaxBasdec_0
.p2align 0x4
.long 0x4BB
L_233202:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_233203
L_233213:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_233214+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_233214
.p2align 0x4
.long 0x3A42
L_233214:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_233203:
	movq $0x101F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x60(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x10(%rbp),%r13
	movq 0x0(%r13),%r11
	movq 0x8(%r13),%r14
	movq $0x285B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq %r15,0x0(%r13)
	movq %r11,0x8(%r13)
	cmpq $0x1,%r14
	je L_475354
L_233204:
	movq 0x8(%r14),%r15
	movq %r15,%r14
	movq %r13,%r15
L_233205:
	movq $0x1597,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	movq %r13,0x10(%rbp)
	addq $0x18,%r12
	movq 0x30(%rbp),%r15
	movq 0x60(%rbp),%r14
	movq %r14,0x30(%rbp)
	movq %r15,0x60(%rbp)
	jmp loop_2676
.p2align 0x4
L_475354:
L_233206:
	movq %r11,0x10(%rbp)
	movq %r15,0x68(%rbp)
	movq $0x1,0x70(%rbp)
.p2align 0x4,,0x7
L_233207:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_475356
.p2align 0x4,,0x7
L_233208:
	movq $0x285B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_475355
L_233209:
	movq %r15,0x70(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x68(%rbp)
	jmp L_233207
.p2align 0x4
L_475355:
L_233210:
	movq 0x70(%rbp),%r13
	movq $0x1,%r15
	xchgq %r13,%r14
	jmp L_233205
.p2align 0x4
L_475356:
L_233211:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_233212+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_233212
.p2align 0x4
.long 0xA68
L_233212:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	jmp L_233208
.p2align 0x4
.long 0x4BB
L_233177:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x68(%rbp)
	movl 0x80(%rbp),%r15d
	movl %r15d,0x70(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_233179
L_233198:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_233199+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_233199
.p2align 0x4
.long 0x3A44
L_233199:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_233179:
	movq 0x30(%rbp),%r14
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_233133
L_233180:
	movq 0x0(%r14),%r13
	movslq 0x0(%r13),%r15
	movq 0x50(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_233133
L_233182:
	movq 0x0(%r14,%r15,8),%r13
	cmpq $0x1,%r13
	je L_233133
L_233183:
	movl 0x4(%r13),%r14d
	movl %r14d,0x74(%rbp)
	movl 0x0(%r13),%r14d
	movq 0x8(%r13),%r13
	movl %r14d,0x78(%rbp)
	movq %r13,%r15
.p2align 0x4,,0x7
L_233184:
	movl 0x70(%rbp),%r14d
	cmpl %r14d,0x78(%rbp)
	jnl L_475360
L_233191:
	cmpq $0x1,%r15
	je L_475358
L_233192:
	movl 0x4(%r15),%r14d
	movl %r14d,0x74(%rbp)
	movl 0x0(%r15),%r14d
	movq 0x8(%r15),%r15
	movl %r14d,0x78(%rbp)
	jmp L_233184
.p2align 0x4
L_475358:
L_233193:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_233133
L_233195:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_233196+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_233196
.p2align 0x4
.long 0x2CD5
L_233196:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_233133
.p2align 0x4
L_475360:
L_233185:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_233186
L_233189:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_233190+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_233190
.p2align 0x4
.long 0x3A43
L_233190:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_233186:
	movl 0x78(%rbp),%r15d
	cmpl %r15d,0x70(%rbp)
	jne L_233133
L_233188:
	movq $0x1017,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x74(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x26D1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x8(%r14)
	movq %r14,0x30(%rbp)
	jmp loop_2676
.p2align 0x4
.long 0x3A41
loop_2677:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb loop_2676
L_233173:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_233174+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_233174
.p2align 0x4
.long 0x3A42
L_233174:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp loop_2676
.p2align 0x4
.long 0x847
L_233138:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_233139
L_233144:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_233145+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_233145
.p2align 0x4
.long 0x48C
L_233145:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_233139:
	movq (globalObjptr+0x1608)(%rip),%r15
	movq (globalObjptr+0x1610)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_475367
L_233140:
	movq $0x1,0x28(%rbp)
	movq (globalObjptr+0xAB0)(%rip),%r15
	movq %r15,0x30(%rbp)
	jmp L_233141
.p2align 0x4
L_475367:
L_233143:
	movq (globalObjptr+0x1618)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x5F1
L_233142:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl get_120
.hidden get_120
get_120:
L_233245:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x10(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_233246
L_233883:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_233884+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_233884
.p2align 0x4
.long 0x452
L_233884:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_233246:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1366,%r15
	je L_475369
L_233882:
	movq 0x0(%r14),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_475369:
L_233247:
	movq 0xB0(%r14),%r15
	movq %r15,0x18(%rbp)
	movq 0xA8(%r14),%r15
	movq %r15,0x20(%rbp)
	movq 0xA0(%r14),%r15
	movq %r15,0x28(%rbp)
	movq 0x98(%r14),%r15
	movq %r15,0x30(%rbp)
	movq 0x90(%r14),%r15
	movq %r15,0x38(%rbp)
	movq 0x88(%r14),%r15
	movq %r15,0x40(%rbp)
	movq 0x80(%r14),%r15
	movq %r15,0x48(%rbp)
	movq 0x78(%r14),%r15
	movq %r15,0x50(%rbp)
	movq 0x70(%r14),%r15
	movq %r15,0x58(%rbp)
	movq 0x68(%r14),%r15
	movq %r15,0x60(%rbp)
	movq 0x60(%r14),%r15
	movq %r15,0x68(%rbp)
	movq 0x58(%r14),%r15
	movq %r15,0x70(%rbp)
	movq 0x50(%r14),%r15
	movq %r15,0x78(%rbp)
	movq 0x48(%r14),%r15
	movq %r15,0x80(%rbp)
	movq 0x40(%r14),%r15
	movq %r15,0x88(%rbp)
	movq 0x38(%r14),%r15
	movq %r15,0x90(%rbp)
	movq 0x30(%r14),%r15
	movq %r15,0x98(%rbp)
	movq 0x28(%r14),%r15
	movq %r15,0xA0(%rbp)
	movq 0x20(%r14),%r15
	movq %r15,0xA8(%rbp)
	movq 0x18(%r14),%r15
	movq %r15,0xB0(%rbp)
	movq 0x10(%r14),%r15
	movq %r15,0xB8(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0xC0(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0xC8(%rbp)
.p2align 0x4,,0x7
continue_5:
	movq 0x18(%rbp),%r15
	movl 0x0(%r15),%r14d
	movl %r14d,0xE0(%rbp)
	movq 0xB8(%rbp),%r15
	movl 0x0(%r15),%r14d
	movl %r14d,0xD4(%rbp)
	movl %r14d,0xD0(%rbp)
	movq $0x1,0xD8(%rbp)
loop_2678:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_475541
.p2align 0x4,,0x7
L_233248:
	movq 0x48(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movslq 0xE0(%rbp),%r15
	cmpq %r13,%r15
	jnb L_475540
L_233250:
	movq %r15,%r11
	salq $0x4,%r11
	movq 0x8(%r14,%r11,1),%r10
	salq $0x4,%r15
	movq 0x0(%r14,%r15,1),%r11
	movq %r11,0xE8(%rbp)
	movq $0x26D3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r11,0x0(%r14)
	movq 0xD8(%rbp),%r11
	movq %r11,0x8(%r14)
	movl 0xD4(%rbp),%r11d
	movq 0x40(%rbp),%r9
	cmpl 0x0(%r9),%r11d
	je L_475524
L_233251:
	movq 0xC8(%rbp),%r9
	movq 0x0(%r9),%r15
	movslq %r11d,%r9
	cmpq 0xFFFFFFFFFFFFFFF0(%r15),%r9
	jnb L_475523
L_233253:
	movzbl 0x0(%r15,%r9,1),%ecx
	cmpl $0x80,%ecx
	jl L_475522
L_233254:
	movl $0x80,%ecx
	movq %r10,%r15
L_233255:
	movslq %ecx,%r13
	cmpq 0xFFFFFFFFFFFFFFF0(%r15),%r13
	jnb L_475521
L_233257:
	movzbl 0x0(%r15,%r13,1),%r11d
	testl %r11d,%r11d
	jz action_2
L_233258:
	movl 0xD4(%rbp),%r15d
	incl %r15d
	jo L_475370
L_233260:
	movl %r15d,0xD4(%rbp)
	movq %r14,0xD8(%rbp)
	movl %r11d,0xE0(%rbp)
	jmp loop_2678
.p2align 0x4
L_475370:
L_233259:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
action_2:
.p2align 0x4,,0x7
action_0:
	movq 0xE8(%rbp),%r15
	andq $0x1,%r15
	jnz L_475520
L_233262:
	movq 0xD8(%rbp),%r15
	movl 0xD4(%rbp),%ecx
.p2align 0x4,,0x7
L_233263:
	decl %ecx
	movl %ecx,0xD4(%rbp)
	jo L_475519
L_233265:
	cmpq $0x1,%r15
	je L_475518
L_233266:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r13,0xD8(%rbp)
	andq $0x1,%r13
	jnz L_475371
L_233267:
	movq %r14,%r15
	jmp L_233263
.p2align 0x4
L_475371:
L_233268:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_475517
.p2align 0x4,,0x7
L_233269:
	movq 0xD8(%rbp),%r15
	shrq $0x1,%r15
	movl %r15d,%ebx
	movl 0xD4(%rbp),%ecx
L_233270:
	movq 0xC0(%rbp),%r15
	movl 0x0(%r15),%r14d
	addl 0xD0(%rbp),%r14d
	movl %r14d,0xD4(%rbp)
	jo L_475516
L_233272:
	movq 0xB8(%rbp),%r15
	movl %ecx,0x0(%r15)
	cmpl $0x2,%ebx
	je continue_5
	cmpl $0x7,%ebx
	je L_475514
	cmpl $0xD,%ebx
	je L_475510
	cmpl $0xF,%ebx
	je L_475506
	cmpl $0x11,%ebx
	je L_475502
	cmpl $0x13,%ebx
	je L_475498
	cmpl $0x17,%ebx
	je L_475494
	cmpl $0x1B,%ebx
	je L_475490
	cmpl $0x1F,%ebx
	je L_475486
	cmpl $0x25,%ebx
	je L_475482
	cmpl $0x29,%ebx
	je L_475478
	cmpl $0x31,%ebx
	je L_475474
	cmpl $0x34,%ebx
	je L_475470
	cmpl $0x38,%ebx
	je L_475466
	cmpl $0x3E,%ebx
	je L_475462
	cmpl $0x43,%ebx
	je L_475458
	cmpl $0x4D,%ebx
	je L_475454
	cmpl $0x57,%ebx
	je L_475450
	cmpl $0x5A,%ebx
	je L_475448
	cmpl $0x92,%ebx
	je L_475446
	cmpl $0x94,%ebx
	je L_475444
	cmpl $0xA0,%ebx
	je L_475442
	cmpl $0xA3,%ebx
	je L_475440
	cmpl $0xA5,%ebx
	je L_475436
	cmpl $0xA8,%ebx
	je L_475434
	cmpl $0xAA,%ebx
	je continue_5
	cmpl $0xAD,%ebx
	je L_475432
	cmpl $0xAF,%ebx
	je L_475431
	cmpl $0xB2,%ebx
	je L_475428
	cmpl $0xB6,%ebx
	je L_475427
	cmpl $0xB8,%ebx
	je L_475425
	cmpl $0xBC,%ebx
	je L_475422
	cmpl $0xBF,%ebx
	je L_475421
	cmpl $0xC1,%ebx
	je L_475420
	cmpl $0xC4,%ebx
	je L_475418
	cmpl $0xC6,%ebx
	je L_475416
	cmpl $0xC9,%ebx
	je L_475414
	cmpl $0xCB,%ebx
	je continue_5
	cmpl $0xCD,%ebx
	je L_475410
	cmpl $0xD0,%ebx
	je L_475409
	cmpl $0xD3,%ebx
	je L_475408
	cmpl $0xD6,%ebx
	je L_475407
	cmpl $0xD9,%ebx
	je L_475406
	cmpl $0xDC,%ebx
	je L_475405
	cmpl $0xDF,%ebx
	je L_475404
	cmpl $0xE2,%ebx
	je L_475403
	cmpl $0xE6,%ebx
	je L_475401
	cmpl $0xEA,%ebx
	je L_475397
	cmpl $0xEF,%ebx
	je L_475395
	cmpl $0xF6,%ebx
	je L_475393
	cmpl $0xF9,%ebx
	je L_475392
	cmpl $0xFC,%ebx
	je L_475391
	cmpl $0x102,%ebx
	je L_475390
	cmpl $0x108,%ebx
	je L_475388
	cmpl $0x10A,%ebx
	je L_475386
	cmpl $0x10F,%ebx
	je L_475383
	cmpl $0x112,%ebx
	je L_475381
	cmpl $0x114,%ebx
	je L_475378
	cmpl $0x119,%ebx
	je L_475376
	cmpl $0x11C,%ebx
	je continue_5
	cmpl $0x11E,%ebx
	je L_475374
	cmpl $0x120,%ebx
	je L_475372
L_233273:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_475372:
L_233810:
	movq 0x58(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0xD8(%rbp)
	movq 0x8(%r15),%r14
	movq 0x0(%r14),%r13
	movq 0xB0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x18(%r15),%r11
	movl 0xD4(%rbp),%r10d
	movq 0x8(%r15),%r9
	subl 0x0(%r9),%r10d
	jo L_475373
L_233812:
	movq 0x0(%r11),%r15
	movl 0x0(%r14),%r11d
	movq $0x389,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %r11d,0x0(%r14)
	movl %r10d,0x4(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xD0(%rbp)
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	leaq L_233819(%rip),%r15
	movq %r15,0x8(%rbp)
	movq %rbp,%r15
	addq $0x10,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x10408)(%rip),%r15
	movq %r15,0xE8(%rbp)
	addq $0xE8,%rbp
	leaq (L_233813+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_475373:
L_233811:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_475374:
L_233807:
	movq 0x98(%rbp),%r15
	movl $0x5,0x0(%r15)
	movq 0xB0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x18(%r15),%r13
	movl 0xD4(%rbp),%r11d
	movq 0x8(%r15),%r10
	subl 0x0(%r10),%r11d
	jo L_475375
L_233809:
	movq 0x0(%r13),%r15
	movl 0x0(%r14),%r13d
	movq $0x389,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %r13d,0x0(%r14)
	movl %r11d,0x4(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0xA0(%rbp),%r15
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	jmp continue_5
.p2align 0x4
L_475375:
L_233808:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_475376:
L_233804:
	movq 0xB0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x10(%r15),%r13
	movl 0x0(%r13),%r15d
	incl %r15d
	jo L_475377
L_233806:
	movl %r15d,0x0(%r13)
	movl 0xD4(%rbp),%r15d
	movl %r15d,0x0(%r14)
	jmp continue_5
.p2align 0x4
L_475377:
L_233805:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_475378:
L_233792:
	movl 0xD4(%rbp),%r15d
	incl %r15d
	jo L_475380
L_233794:
	movq 0x58(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0xD0(%rbp)
	movq 0x8(%r14),%r13
	movq 0x0(%r13),%r11
	movq 0xB0(%rbp),%r14
	movq 0x10(%r14),%r13
	movq 0x18(%r14),%r10
	movq 0x8(%r14),%r9
	subl 0x0(%r9),%r15d
	jo L_475379
L_233796:
	movq 0x0(%r10),%r14
	movl 0x0(%r13),%r10d
	movq $0x389,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movl %r10d,0x0(%r13)
	movl %r15d,0x4(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xD8(%rbp)
	movq %r11,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	leaq L_233803(%rip),%r15
	movq %r15,0x8(%rbp)
	movq %rbp,%r15
	addq $0x10,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x10410)(%rip),%r15
	movq %r15,0xE8(%rbp)
	addq $0xE8,%rbp
	leaq (L_233797+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_475379:
L_233795:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_475380:
L_233793:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_475381:
L_233784:
	movq 0xC8(%rbp),%r15
	movq 0x0(%r15),%r14
	movl 0xD0(%rbp),%r15d
	subl %r15d,%ecx
	jo L_475382
L_233786:
	movq %r14,0xE8(%rbp)
	movl %ecx,%r14d
	shlq $0x1,%r14
	orq $0x1,%r14
	movq %r14,0xD8(%rbp)
	leaq L_233791(%rip),%r14
	movq %r14,0x8(%rbp)
	movq %rbp,%r14
	addq $0x10,%r14
	subq (gcState+0x560)(%rip),%r14
	movq %r14,(gcState+0x20)(%rip)
	movl %r15d,0xE0(%rbp)
	addq $0xD8,%rbp
	leaq (L_233787+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp extract_0
.p2align 0x4
L_475382:
L_233785:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_475383:
L_233772:
	movq 0xB0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x10(%r15),%r13
	movl 0x0(%r13),%r11d
	incl %r11d
	jo L_475385
L_233774:
	movl %r11d,0x0(%r13)
	movl 0xD4(%rbp),%r11d
	movl %r11d,%r10d
	movl %r10d,0x0(%r14)
	movq 0x58(%rbp),%r9
	movq 0x0(%r9),%r8
	movq %r8,0xD8(%rbp)
	movq 0x8(%r9),%r8
	movq 0x0(%r8),%rsp
	movq 0x18(%r15),%r9
	subl %r10d,%r11d
	jo L_475384
L_233776:
	movq 0x0(%r9),%r15
	movl 0x0(%r13),%r14d
	movq $0x389,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movl %r14d,0x0(%r13)
	movl %r11d,0x4(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xD0(%rbp)
	movq %rsp,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	leaq L_233783(%rip),%r15
	movq %r15,0x8(%rbp)
	movq %rbp,%r15
	addq $0x10,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x10408)(%rip),%r15
	movq %r15,0xE8(%rbp)
	addq $0xE8,%rbp
	leaq (L_233777+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_475384:
L_233775:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_475385:
L_233773:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_475386:
L_233762:
	movq 0x58(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0xD8(%rbp)
	movq 0x8(%r15),%r14
	movq 0x0(%r14),%r13
	movq 0xB0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x18(%r15),%r11
	movl 0xD4(%rbp),%r10d
	movq 0x8(%r15),%r9
	subl 0x0(%r9),%r10d
	jo L_475387
L_233764:
	movq 0x0(%r11),%r15
	movl 0x0(%r14),%r11d
	movq $0x389,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %r11d,0x0(%r14)
	movl %r10d,0x4(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xD0(%rbp)
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	leaq L_233771(%rip),%r15
	movq %r15,0x8(%rbp)
	movq %rbp,%r15
	addq $0x10,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x10400)(%rip),%r15
	movq %r15,0xE8(%rbp)
	addq $0xE8,%rbp
	leaq (L_233765+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_475387:
L_233763:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_475388:
L_233759:
	movq 0xB0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x10(%r15),%r13
	movl 0x0(%r13),%r15d
	incl %r15d
	jo L_475389
L_233761:
	movl %r15d,0x0(%r13)
	movl 0xD4(%rbp),%r15d
	movl %r15d,0x0(%r14)
	movq 0x98(%rbp),%r15
	movl $0x7,0x0(%r15)
	jmp continue_5
.p2align 0x4
L_475389:
L_233760:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_475390:
L_233758:
	movq 0x98(%rbp),%r15
	movl $0x7,0x0(%r15)
	jmp continue_5
.p2align 0x4
L_475391:
L_233757:
	movq 0x50(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x1B53,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq (globalObjptr+0xE0B0)(%rip),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x0(%r15)
	jmp continue_5
.p2align 0x4
L_475392:
L_233756:
	movq 0x50(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x1B53,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq (globalObjptr+0xA2E0)(%rip),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x0(%r15)
	jmp continue_5
.p2align 0x4
L_475393:
L_233639:
	movq 0xC8(%rbp),%r15
	movq 0x0(%r15),%r14
	movl 0xD0(%rbp),%r15d
	subl %r15d,%ecx
	jo L_475394
L_233641:
	movq %r14,0xF0(%rbp)
	movl %ecx,%r14d
	shlq $0x1,%r14
	orq $0x1,%r14
	movq %r14,0xE0(%rbp)
	leaq L_233755(%rip),%r14
	movq %r14,0x8(%rbp)
	movq %rbp,%r14
	addq $0x10,%r14
	subq (gcState+0x560)(%rip),%r14
	movq %r14,(gcState+0x20)(%rip)
	movl %r15d,0xE8(%rbp)
	addq $0xE0,%rbp
	leaq (L_233642+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp extract_0
.p2align 0x4
L_475394:
L_233640:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_475395:
L_233597:
	movq 0xC8(%rbp),%r15
	movq 0x0(%r15),%r14
	movl 0xD0(%rbp),%r15d
	subl %r15d,%ecx
	jo L_475396
L_233599:
	movq %r14,0xF0(%rbp)
	movl %ecx,%r14d
	shlq $0x1,%r14
	orq $0x1,%r14
	movq %r14,0xE0(%rbp)
	leaq L_233638(%rip),%r14
	movq %r14,0x8(%rbp)
	movq %rbp,%r14
	addq $0x10,%r14
	subq (gcState+0x560)(%rip),%r14
	movq %r14,(gcState+0x20)(%rip)
	movl %r15d,0xE8(%rbp)
	addq $0xE0,%rbp
	leaq (L_233600+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp extract_0
.p2align 0x4
L_475396:
L_233598:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_475397:
L_233583:
	movl 0xD4(%rbp),%r15d
	movl %r15d,%r14d
	addl $0x2,%r14d
	jo L_475400
L_233585:
	movq 0xB0(%rbp),%r13
	movq 0x8(%r13),%r11
	movq 0x10(%r13),%r10
	movq 0x18(%r13),%r9
	subl 0x0(%r11),%r15d
	jo L_475399
L_233587:
	movq 0x0(%r9),%r13
	movl 0x0(%r10),%r8d
	movq $0x389,0x0(%r12)
	movq %r12,%rsp
	addq $0x8,%rsp
	movl %r8d,0x0(%rsp)
	movl %r15d,0x4(%rsp)
	movq %r13,0x8(%rsp)
	addq $0x18,%r12
	subl 0x0(%r11),%r14d
	jo L_475398
L_233589:
	movq 0x0(%r9),%r15
	movl 0x0(%r10),%r13d
	movq $0x389,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movl %r13d,0x0(%r11)
	movl %r14d,0x4(%r11)
	movq %r15,0x8(%r11)
	addq $0x18,%r12
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xD0(%rbp)
	movq %rsp,0x0(%r15)
	movq %r11,0x8(%r15)
	addq $0x18,%r12
	leaq L_233596(%rip),%r15
	movq %r15,0x8(%rbp)
	movq %rbp,%r15
	addq $0x10,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x103E8)(%rip),%r15
	movq %r15,0xE0(%rbp)
	addq $0xE0,%rbp
	leaq (L_233590+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_475398:
L_233588:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_475399:
L_233586:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_475400:
L_233584:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_475401:
L_233567:
	movq 0xC8(%rbp),%r15
	movq 0x0(%r15),%r14
	movl 0xD0(%rbp),%r15d
	subl %r15d,%ecx
	jo L_475402
L_233569:
	movq %r14,0xE8(%rbp)
	movl %ecx,%r14d
	shlq $0x1,%r14
	orq $0x1,%r14
	movq %r14,0xD8(%rbp)
	leaq L_233582(%rip),%r14
	movq %r14,0x8(%rbp)
	movq %rbp,%r14
	addq $0x10,%r14
	subq (gcState+0x560)(%rip),%r14
	movq %r14,(gcState+0x20)(%rip)
	movl %r15d,0xE0(%rbp)
	addq $0xD8,%rbp
	leaq (L_233570+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp extract_0
.p2align 0x4
L_475402:
L_233568:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_475403:
L_233561:
	movq $0xB,%r15
	shlq $0x4,%r15
	orq $0x9,%r15
	movq %r15,0xD8(%rbp)
	leaq L_233566(%rip),%r15
	movq %r15,0x8(%rbp)
	movq %rbp,%r15
	addq $0x10,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movl $0x1,0xE0(%rbp)
	addq $0xD8,%rbp
	leaq (L_233562+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_0
.p2align 0x4
L_475404:
L_233555:
	movq $0x9,%r15
	shlq $0x4,%r15
	orq $0x9,%r15
	movq %r15,0xD8(%rbp)
	leaq L_233560(%rip),%r15
	movq %r15,0x8(%rbp)
	movq %rbp,%r15
	addq $0x10,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movl $0x1,0xE0(%rbp)
	addq $0xD8,%rbp
	leaq (L_233556+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_0
.p2align 0x4
L_475405:
L_233549:
	movq $0xD,%r15
	shlq $0x4,%r15
	orq $0x9,%r15
	movq %r15,0xD8(%rbp)
	leaq L_233554(%rip),%r15
	movq %r15,0x8(%rbp)
	movq %rbp,%r15
	addq $0x10,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movl $0x1,0xE0(%rbp)
	addq $0xD8,%rbp
	leaq (L_233550+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_0
.p2align 0x4
L_475406:
L_233543:
	movq $0xA,%r15
	shlq $0x4,%r15
	orq $0x9,%r15
	movq %r15,0xD8(%rbp)
	leaq L_233548(%rip),%r15
	movq %r15,0x8(%rbp)
	movq %rbp,%r15
	addq $0x10,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movl $0x1,0xE0(%rbp)
	addq $0xD8,%rbp
	leaq (L_233544+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_0
.p2align 0x4
L_475407:
L_233537:
	movq $0xC,%r15
	shlq $0x4,%r15
	orq $0x9,%r15
	movq %r15,0xD8(%rbp)
	leaq L_233542(%rip),%r15
	movq %r15,0x8(%rbp)
	movq %rbp,%r15
	addq $0x10,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movl $0x1,0xE0(%rbp)
	addq $0xD8,%rbp
	leaq (L_233538+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_0
.p2align 0x4
L_475408:
L_233531:
	movq $0x8,%r15
	shlq $0x4,%r15
	orq $0x9,%r15
	movq %r15,0xD8(%rbp)
	leaq L_233536(%rip),%r15
	movq %r15,0x8(%rbp)
	movq %rbp,%r15
	addq $0x10,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movl $0x1,0xE0(%rbp)
	addq $0xD8,%rbp
	leaq (L_233532+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_0
.p2align 0x4
L_475409:
L_233525:
	movq $0x7,%r15
	shlq $0x4,%r15
	orq $0x9,%r15
	movq %r15,0xD8(%rbp)
	leaq L_233530(%rip),%r15
	movq %r15,0x8(%rbp)
	movq %rbp,%r15
	addq $0x10,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movl $0x1,0xE0(%rbp)
	addq $0xD8,%rbp
	leaq (L_233526+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_0
.p2align 0x4
L_475410:
L_233506:
	movq 0xA8(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_475413
L_233507:
	movq 0x8(%r14),%r15
	movq %r15,0xD8(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0xE0(%rbp)
	movq $0x1,0xE8(%rbp)
.p2align 0x4,,0x7
L_233508:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_475412
.p2align 0x4,,0x7
L_233509:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xE0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xE8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xD8(%rbp),%r14
	cmpq $0x1,%r14
	je L_475411
L_233510:
	movq %r15,0xE8(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0xD8(%rbp)
	movq %r15,0xE0(%rbp)
	jmp L_233508
.p2align 0x4
L_475411:
L_233512:
	movq %r15,0xE0(%rbp)
	leaq L_233521(%rip),%r15
	movq %r15,0x8(%rbp)
	movq %rbp,%r15
	addq $0x10,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0xE0,%rbp
	leaq (L_233513+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_475412:
L_233522:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF8,%rbp
	leaq (L_233523+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_233523
.p2align 0x4
.long 0x3A4E
L_233523:
	addq $0xFFFFFFFFFFFFFF08,%rbp
	jmp L_233509
.p2align 0x4
L_475413:
L_233524:
	movq $0x1,%r15
	jmp L_233512
.p2align 0x4
L_475414:
L_233501:
	movq (globalObjptr+0x1690)(%rip),%r15
	movl 0x0(%r15),%r14d
	decl %r14d
	jo L_475415
L_233503:
	movl %r14d,0x0(%r15)
	testl %r14d,%r14d
	jnz continue_5
L_233505:
	movq 0x98(%rbp),%r15
	movl $0x1,0x0(%r15)
	jmp continue_5
.p2align 0x4
L_475415:
L_233502:
	movq 0x10(%rbp),%r14
	movq %r14,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r14,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_475416:
L_233498:
	movq 0xB0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x10(%r15),%r13
	movl 0x0(%r13),%r15d
	incl %r15d
	jo L_475417
L_233500:
	movl %r15d,0x0(%r13)
	movl 0xD4(%rbp),%r15d
	movl %r15d,0x0(%r14)
	jmp continue_5
.p2align 0x4
L_475417:
L_233499:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_475418:
L_233495:
	movq (globalObjptr+0x1690)(%rip),%r15
	movl 0x0(%r15),%r14d
	incl %r14d
	jo L_475419
L_233497:
	movl %r14d,0x0(%r15)
	jmp continue_5
.p2align 0x4
L_475419:
L_233496:
	movq 0x10(%rbp),%r14
	movq %r14,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r14,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_475420:
L_233494:
	movq 0x98(%rbp),%r15
	movl $0x3,0x0(%r15)
	jmp continue_5
.p2align 0x4
L_475421:
L_233493:
	movq 0x98(%rbp),%r15
	movl $0x1,0x0(%r15)
	movq (globalObjptr+0x1690)(%rip),%r15
	movl $0x0,0x0(%r15)
	movq 0xA8(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq $0x1,0x0(%r15)
	jmp continue_5
.p2align 0x4
L_475422:
L_233481:
	movq 0x98(%rbp),%r15
	movl $0x1,0x0(%r15)
	movq 0x78(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0xD8(%rbp)
	movl 0xD4(%rbp),%r15d
	addl $0x3,%r15d
	jo L_475424
L_233483:
	movq (globalObjptr+0x1698)(%rip),%r13
	movl 0x0(%r13),%r11d
	movl %r11d,0xD0(%rbp)
	movq (globalObjptr+0x16A0)(%rip),%r13
	subl 0x0(%r13),%r15d
	movl %r15d,0xD4(%rbp)
	jo L_475423
L_233485:
	movq 0xB0(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0xE0(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0xE8(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0xF0(%rbp)
	movq 0x18(%r15),%r13
	movq %r13,0xF8(%rbp)
	leaq L_233491(%rip),%r15
	movq %r15,0x8(%rbp)
	movq %rbp,%r15
	addq $0x10,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq %r14,0x108(%rbp)
	addq $0x108,%rbp
	leaq (L_233486+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromString_24
.p2align 0x4
L_475423:
L_233484:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_475424:
L_233482:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_475425:
L_233476:
	movq 0xC8(%rbp),%r15
	movq 0x0(%r15),%r14
	movl 0xD0(%rbp),%r15d
	subl %r15d,%ecx
	jo L_475426
L_233478:
	movq %r14,0xE8(%rbp)
	movl %ecx,%r14d
	shlq $0x1,%r14
	orq $0x1,%r14
	movq %r14,0xD8(%rbp)
	leaq L_233480(%rip),%r14
	movq %r14,0x8(%rbp)
	movq %rbp,%r14
	addq $0x10,%r14
	subq (gcState+0x560)(%rip),%r14
	movq %r14,(gcState+0x20)(%rip)
	movl %r15d,0xE0(%rbp)
	addq $0xD8,%rbp
	leaq (L_233479+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp extract_0
.p2align 0x4
L_475426:
L_233477:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_475427:
L_233475:
	movq 0x98(%rbp),%r15
	movl $0xF,0x0(%r15)
	jmp continue_5
.p2align 0x4
L_475428:
L_233470:
	movq 0x98(%rbp),%r15
	movl $0x1,0x0(%r15)
	movl 0xD4(%rbp),%r15d
	addl $0x2,%r15d
	jo L_475430
L_233472:
	movq (globalObjptr+0x1698)(%rip),%r14
	movl 0x0(%r14),%r13d
	movq (globalObjptr+0x16A0)(%rip),%r14
	subl 0x0(%r14),%r15d
	jo L_475429
L_233474:
	movq 0xB0(%rbp),%r14
	movq 0x8(%r14),%r11
	movq 0x10(%r14),%r10
	movl %r13d,0x0(%r10)
	movl %r15d,0x0(%r11)
	movq (globalObjptr+0x1690)(%rip),%r15
	movl $0x0,0x0(%r15)
	movq 0xA8(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq $0x1,0x0(%r15)
	jmp continue_5
.p2align 0x4
L_475429:
L_233473:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_475430:
L_233471:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_475431:
L_233469:
	movq 0x98(%rbp),%r15
	movl $0xD,0x0(%r15)
	jmp continue_5
.p2align 0x4
L_475432:
L_233457:
	movq 0xC8(%rbp),%r15
	movq 0x0(%r15),%r14
	movl 0xD0(%rbp),%r15d
	subl %r15d,%ecx
	jo L_475433
L_233459:
	movq %r14,0xE8(%rbp)
	movl %ecx,%r14d
	shlq $0x1,%r14
	orq $0x1,%r14
	movq %r14,0xD8(%rbp)
	leaq L_233468(%rip),%r14
	movq %r14,0x8(%rbp)
	movq %rbp,%r14
	addq $0x10,%r14
	subq (gcState+0x560)(%rip),%r14
	movq %r14,(gcState+0x20)(%rip)
	movl %r15d,0xE0(%rbp)
	addq $0xD8,%rbp
	leaq (L_233460+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp extract_0
.p2align 0x4
L_475433:
L_233458:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_475434:
L_233445:
	movq 0xC8(%rbp),%r15
	movq 0x0(%r15),%r14
	movl 0xD0(%rbp),%r15d
	subl %r15d,%ecx
	jo L_475435
L_233447:
	movq %r14,0xE8(%rbp)
	movl %ecx,%r14d
	shlq $0x1,%r14
	orq $0x1,%r14
	movq %r14,0xD8(%rbp)
	leaq L_233456(%rip),%r14
	movq %r14,0x8(%rbp)
	movq %rbp,%r14
	addq $0x10,%r14
	subq (gcState+0x560)(%rip),%r14
	movq %r14,(gcState+0x20)(%rip)
	movl %r15d,0xE0(%rbp)
	addq $0xD8,%rbp
	leaq (L_233448+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp extract_0
.p2align 0x4
L_475435:
L_233446:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_475436:
L_233431:
	movl 0xD4(%rbp),%r15d
	movl %r15d,%r14d
	incl %r14d
	jo L_475439
L_233433:
	movq 0xB0(%rbp),%r13
	movq 0x8(%r13),%r11
	movq 0x10(%r13),%r10
	movq 0x18(%r13),%r9
	subl 0x0(%r11),%r15d
	jo L_475438
L_233435:
	movq 0x0(%r9),%r13
	movl 0x0(%r10),%r8d
	movq $0x389,0x0(%r12)
	movq %r12,%rsp
	addq $0x8,%rsp
	movl %r8d,0x0(%rsp)
	movl %r15d,0x4(%rsp)
	movq %r13,0x8(%rsp)
	addq $0x18,%r12
	subl 0x0(%r11),%r14d
	jo L_475437
L_233437:
	movq 0x0(%r9),%r15
	movl 0x0(%r10),%r13d
	movq $0x389,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movl %r13d,0x0(%r11)
	movl %r14d,0x4(%r11)
	movq %r15,0x8(%r11)
	addq $0x18,%r12
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xD0(%rbp)
	movq %rsp,0x0(%r15)
	movq %r11,0x8(%r15)
	addq $0x18,%r12
	leaq L_233444(%rip),%r15
	movq %r15,0x8(%rbp)
	movq %rbp,%r15
	addq $0x10,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x103E0)(%rip),%r15
	movq %r15,0xE0(%rbp)
	addq $0xE0,%rbp
	leaq (L_233438+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_475437:
L_233436:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_475438:
L_233434:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_475439:
L_233432:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_475440:
L_233428:
	movq 0x98(%rbp),%r15
	movl $0x3,0x0(%r15)
	movq (globalObjptr+0x1690)(%rip),%r15
	movl $0x1,0x0(%r15)
	movq 0xB0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x18(%r15),%r13
	movl 0xD4(%rbp),%r11d
	movq 0x8(%r15),%r10
	subl 0x0(%r10),%r11d
	jo L_475441
L_233430:
	movq 0x0(%r13),%r15
	movl 0x0(%r14),%r13d
	movq $0x389,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %r13d,0x0(%r14)
	movl %r11d,0x4(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x90(%rbp),%r15
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	jmp continue_5
.p2align 0x4
L_475441:
L_233429:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_475442:
L_233425:
	movq 0x98(%rbp),%r15
	movl $0x9,0x0(%r15)
	movq 0xB0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x18(%r15),%r13
	movl 0xD4(%rbp),%r11d
	movq 0x8(%r15),%r10
	subl 0x0(%r10),%r11d
	jo L_475443
L_233427:
	movq 0x0(%r13),%r15
	movl 0x0(%r14),%r13d
	movq $0x389,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %r13d,0x0(%r14)
	movl %r11d,0x4(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x90(%rbp),%r15
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x1690)(%rip),%r15
	movl $0x1,0x0(%r15)
	jmp continue_5
.p2align 0x4
L_475443:
L_233426:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_475444:
L_233422:
	movq 0xA8(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq (globalObjptr+0x7D0)(%rip),%r14
	movq %r14,0x0(%r15)
	movq 0xB0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x18(%r15),%r11
	movl 0xD4(%rbp),%r10d
	movq 0x8(%r15),%r9
	subl 0x0(%r9),%r10d
	jo L_475445
L_233424:
	movq 0x0(%r11),%r15
	movl 0x0(%r14),%r11d
	movq $0x389,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %r11d,0x0(%r14)
	movl %r10d,0x4(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0xA0(%rbp),%r15
	movq %r15,%r11
	shrq $0x8,%r11
	movb $0x1,0x0(%r13,%r11,1)
	movq %r14,0x0(%r15)
	movq 0x98(%rbp),%r15
	movl $0x5,0x0(%r15)
	jmp continue_5
.p2align 0x4
L_475445:
L_233423:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_475446:
L_233406:
	movq 0xC8(%rbp),%r15
	movq 0x0(%r15),%r14
	movl 0xD0(%rbp),%r15d
	subl %r15d,%ecx
	jo L_475447
L_233408:
	movq %r14,0xF0(%rbp)
	movl %ecx,%r14d
	shlq $0x1,%r14
	orq $0x1,%r14
	movq %r14,0xE0(%rbp)
	leaq L_233421(%rip),%r14
	movq %r14,0x8(%rbp)
	movq %rbp,%r14
	addq $0x10,%r14
	subq (gcState+0x560)(%rip),%r14
	movq %r14,(gcState+0x20)(%rip)
	movl %r15d,0xE8(%rbp)
	addq $0xE0,%rbp
	leaq (L_233409+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp extract_0
.p2align 0x4
L_475447:
L_233407:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_475448:
L_233390:
	movq 0xC8(%rbp),%r15
	movq 0x0(%r15),%r14
	movl 0xD0(%rbp),%r15d
	subl %r15d,%ecx
	jo L_475449
L_233392:
	movq %r14,0xF0(%rbp)
	movl %ecx,%r14d
	shlq $0x1,%r14
	orq $0x1,%r14
	movq %r14,0xE0(%rbp)
	leaq L_233405(%rip),%r14
	movq %r14,0x8(%rbp)
	movq %rbp,%r14
	addq $0x10,%r14
	subq (gcState+0x560)(%rip),%r14
	movq %r14,(gcState+0x20)(%rip)
	movl %r15d,0xE8(%rbp)
	addq $0xE0,%rbp
	leaq (L_233393+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp extract_0
.p2align 0x4
L_475449:
L_233391:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_475450:
L_233383:
	movl 0xD4(%rbp),%r15d
	movl %r15d,%r14d
	addl $0x9,%r14d
	jo L_475453
L_233385:
	movq 0xB0(%rbp),%r13
	movq 0x8(%r13),%r11
	movq 0x10(%r13),%r10
	movq 0x18(%r13),%r9
	subl 0x0(%r11),%r15d
	jo L_475452
L_233387:
	movq 0x0(%r9),%r13
	movl 0x0(%r10),%r8d
	movq $0x389,0x0(%r12)
	movq %r12,%rsp
	addq $0x8,%rsp
	movl %r8d,0x0(%rsp)
	movl %r15d,0x4(%rsp)
	movq %r13,0x8(%rsp)
	addq $0x18,%r12
	subl 0x0(%r11),%r14d
	jo L_475451
L_233389:
	movq 0x0(%r9),%r15
	movl 0x0(%r10),%ecx
	movq $0x389,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movl %ecx,0x0(%r13)
	movl %r14d,0x4(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq $0x1015,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %rsp,0x8(%r15)
	addq $0x20,%r12
	movq $0x1,0x10(%r15)
	movl $0xF,%ecx
L_233284:
	movq $0x1017,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x26CD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0xC0,%r12
	movq 0xC8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0xC0(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0xB8(%rbp),%r13
	movq %r13,0x10(%r15)
	movq 0xB0(%rbp),%r13
	movq %r13,0x18(%r15)
	movq 0xA8(%rbp),%r13
	movq %r13,0x20(%r15)
	movq 0xA0(%rbp),%r13
	movq %r13,0x28(%r15)
	movq 0x98(%rbp),%r13
	movq %r13,0x30(%r15)
	movq 0x90(%rbp),%r13
	movq %r13,0x38(%r15)
	movq 0x88(%rbp),%r13
	movq %r13,0x40(%r15)
	movq 0x80(%rbp),%r13
	movq %r13,0x48(%r15)
	movq 0x78(%rbp),%r13
	movq %r13,0x50(%r15)
	movq 0x70(%rbp),%r13
	movq %r13,0x58(%r15)
	movq 0x68(%rbp),%r13
	movq %r13,0x60(%r15)
	movq 0x60(%rbp),%r13
	movq %r13,0x68(%r15)
	movq 0x58(%rbp),%r13
	movq %r13,0x70(%r15)
	movq 0x50(%rbp),%r13
	movq %r13,0x78(%r15)
	movq 0x48(%rbp),%r13
	movq %r13,0x80(%r15)
	movq 0x40(%rbp),%r13
	movq %r13,0x88(%r15)
	movq 0x38(%rbp),%r13
	movq %r13,0x90(%r15)
	movq 0x30(%rbp),%r13
	movq %r13,0x98(%r15)
	movq 0x28(%rbp),%r13
	movq %r13,0xA0(%r15)
	movq 0x20(%rbp),%r13
	movq %r13,0xA8(%r15)
	movq 0x18(%rbp),%r13
	movq %r13,0xB0(%r15)
	movq $0x1019,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x10,%r12
	movq $0x101B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq $0x26CF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq 0x0(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r14,0x0(%r13)
	movq %r15,0x0(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_475451:
L_233388:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_475452:
L_233386:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_475453:
L_233384:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_475454:
L_233376:
	movl 0xD4(%rbp),%r15d
	movl %r15d,%r14d
	addl $0x9,%r14d
	jo L_475457
L_233378:
	movq 0xB0(%rbp),%r13
	movq 0x8(%r13),%r11
	movq 0x10(%r13),%r10
	movq 0x18(%r13),%r9
	subl 0x0(%r11),%r15d
	jo L_475456
L_233380:
	movq 0x0(%r9),%r13
	movl 0x0(%r10),%r8d
	movq $0x389,0x0(%r12)
	movq %r12,%rsp
	addq $0x8,%rsp
	movl %r8d,0x0(%rsp)
	movl %r15d,0x4(%rsp)
	movq %r13,0x8(%rsp)
	addq $0x18,%r12
	subl 0x0(%r11),%r14d
	jo L_475455
L_233382:
	movq 0x0(%r9),%r15
	movl 0x0(%r10),%ecx
	movq $0x389,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movl %ecx,0x0(%r13)
	movl %r14d,0x4(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq $0x1015,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %rsp,0x8(%r15)
	addq $0x20,%r12
	movq $0x1,0x10(%r15)
	movl $0xE,%ecx
	jmp L_233284
.p2align 0x4
L_475455:
L_233381:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_475456:
L_233379:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_475457:
L_233377:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_475458:
L_233369:
	movl 0xD4(%rbp),%r15d
	movl %r15d,%r14d
	addl $0x4,%r14d
	jo L_475461
L_233371:
	movq 0xB0(%rbp),%r13
	movq 0x8(%r13),%r11
	movq 0x10(%r13),%r10
	movq 0x18(%r13),%r9
	subl 0x0(%r11),%r15d
	jo L_475460
L_233373:
	movq 0x0(%r9),%r13
	movl 0x0(%r10),%r8d
	movq $0x389,0x0(%r12)
	movq %r12,%rsp
	addq $0x8,%rsp
	movl %r8d,0x0(%rsp)
	movl %r15d,0x4(%rsp)
	movq %r13,0x8(%rsp)
	addq $0x18,%r12
	subl 0x0(%r11),%r14d
	jo L_475459
L_233375:
	movq 0x0(%r9),%r15
	movl 0x0(%r10),%ecx
	movq $0x389,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movl %ecx,0x0(%r13)
	movl %r14d,0x4(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq $0x1015,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %rsp,0x8(%r15)
	addq $0x20,%r12
	movq $0x1,0x10(%r15)
	movl $0xD,%ecx
	jmp L_233284
.p2align 0x4
L_475459:
L_233374:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_475460:
L_233372:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_475461:
L_233370:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_475462:
L_233362:
	movl 0xD4(%rbp),%r15d
	movl %r15d,%r14d
	addl $0x5,%r14d
	jo L_475465
L_233364:
	movq 0xB0(%rbp),%r13
	movq 0x8(%r13),%r11
	movq 0x10(%r13),%r10
	movq 0x18(%r13),%r9
	subl 0x0(%r11),%r15d
	jo L_475464
L_233366:
	movq 0x0(%r9),%r13
	movl 0x0(%r10),%r8d
	movq $0x389,0x0(%r12)
	movq %r12,%rsp
	addq $0x8,%rsp
	movl %r8d,0x0(%rsp)
	movl %r15d,0x4(%rsp)
	movq %r13,0x8(%rsp)
	addq $0x18,%r12
	subl 0x0(%r11),%r14d
	jo L_475463
L_233368:
	movq 0x0(%r9),%r15
	movl 0x0(%r10),%ecx
	movq $0x389,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movl %ecx,0x0(%r13)
	movl %r14d,0x4(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq $0x1015,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %rsp,0x8(%r15)
	addq $0x20,%r12
	movq $0x1,0x10(%r15)
	movl $0xC,%ecx
	jmp L_233284
.p2align 0x4
L_475463:
L_233367:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_475464:
L_233365:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_475465:
L_233363:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_475466:
L_233355:
	movl 0xD4(%rbp),%r15d
	movl %r15d,%r14d
	addl $0x3,%r14d
	jo L_475469
L_233357:
	movq 0xB0(%rbp),%r13
	movq 0x8(%r13),%r11
	movq 0x10(%r13),%r10
	movq 0x18(%r13),%r9
	subl 0x0(%r11),%r15d
	jo L_475468
L_233359:
	movq 0x0(%r9),%r13
	movl 0x0(%r10),%r8d
	movq $0x389,0x0(%r12)
	movq %r12,%rsp
	addq $0x8,%rsp
	movl %r8d,0x0(%rsp)
	movl %r15d,0x4(%rsp)
	movq %r13,0x8(%rsp)
	addq $0x18,%r12
	subl 0x0(%r11),%r14d
	jo L_475467
L_233361:
	movq 0x0(%r9),%r15
	movl 0x0(%r10),%ecx
	movq $0x389,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movl %ecx,0x0(%r13)
	movl %r14d,0x4(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq $0x1015,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %rsp,0x8(%r15)
	addq $0x20,%r12
	movq $0x1,0x10(%r15)
	movl $0xB,%ecx
	jmp L_233284
.p2align 0x4
L_475467:
L_233360:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_475468:
L_233358:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_475469:
L_233356:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_475470:
L_233348:
	movl 0xD4(%rbp),%r15d
	movl %r15d,%r14d
	addl $0x2,%r14d
	jo L_475473
L_233350:
	movq 0xB0(%rbp),%r13
	movq 0x8(%r13),%r11
	movq 0x10(%r13),%r10
	movq 0x18(%r13),%r9
	subl 0x0(%r11),%r15d
	jo L_475472
L_233352:
	movq 0x0(%r9),%r13
	movl 0x0(%r10),%r8d
	movq $0x389,0x0(%r12)
	movq %r12,%rsp
	addq $0x8,%rsp
	movl %r8d,0x0(%rsp)
	movl %r15d,0x4(%rsp)
	movq %r13,0x8(%rsp)
	addq $0x18,%r12
	subl 0x0(%r11),%r14d
	jo L_475471
L_233354:
	movq 0x0(%r9),%r15
	movl 0x0(%r10),%ecx
	movq $0x389,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movl %ecx,0x0(%r13)
	movl %r14d,0x4(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq $0x1015,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %rsp,0x8(%r15)
	addq $0x20,%r12
	movq $0x1,0x10(%r15)
	movl $0xA,%ecx
	jmp L_233284
.p2align 0x4
L_475471:
L_233353:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_475472:
L_233351:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_475473:
L_233349:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_475474:
L_233341:
	movl 0xD4(%rbp),%r15d
	movl %r15d,%r14d
	addl $0x7,%r14d
	jo L_475477
L_233343:
	movq 0xB0(%rbp),%r13
	movq 0x8(%r13),%r11
	movq 0x10(%r13),%r10
	movq 0x18(%r13),%r9
	subl 0x0(%r11),%r15d
	jo L_475476
L_233345:
	movq 0x0(%r9),%r13
	movl 0x0(%r10),%r8d
	movq $0x389,0x0(%r12)
	movq %r12,%rsp
	addq $0x8,%rsp
	movl %r8d,0x0(%rsp)
	movl %r15d,0x4(%rsp)
	movq %r13,0x8(%rsp)
	addq $0x18,%r12
	subl 0x0(%r11),%r14d
	jo L_475475
L_233347:
	movq 0x0(%r9),%r15
	movl 0x0(%r10),%ecx
	movq $0x389,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movl %ecx,0x0(%r13)
	movl %r14d,0x4(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq $0x1015,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %rsp,0x8(%r15)
	addq $0x20,%r12
	movq $0x1,0x10(%r15)
	movl $0x9,%ecx
	jmp L_233284
.p2align 0x4
L_475475:
L_233346:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_475476:
L_233344:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_475477:
L_233342:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_475478:
L_233334:
	movl 0xD4(%rbp),%r15d
	movl %r15d,%r14d
	addl $0x3,%r14d
	jo L_475481
L_233336:
	movq 0xB0(%rbp),%r13
	movq 0x8(%r13),%r11
	movq 0x10(%r13),%r10
	movq 0x18(%r13),%r9
	subl 0x0(%r11),%r15d
	jo L_475480
L_233338:
	movq 0x0(%r9),%r13
	movl 0x0(%r10),%r8d
	movq $0x389,0x0(%r12)
	movq %r12,%rsp
	addq $0x8,%rsp
	movl %r8d,0x0(%rsp)
	movl %r15d,0x4(%rsp)
	movq %r13,0x8(%rsp)
	addq $0x18,%r12
	subl 0x0(%r11),%r14d
	jo L_475479
L_233340:
	movq 0x0(%r9),%r15
	movl 0x0(%r10),%ecx
	movq $0x389,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movl %ecx,0x0(%r13)
	movl %r14d,0x4(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq $0x1015,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %rsp,0x8(%r15)
	addq $0x20,%r12
	movq $0x1,0x10(%r15)
	movl $0x7,%ecx
	jmp L_233284
.p2align 0x4
L_475479:
L_233339:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_475480:
L_233337:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_475481:
L_233335:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_475482:
L_233327:
	movl 0xD4(%rbp),%r15d
	movl %r15d,%r14d
	addl $0x5,%r14d
	jo L_475485
L_233329:
	movq 0xB0(%rbp),%r13
	movq 0x8(%r13),%r11
	movq 0x10(%r13),%r10
	movq 0x18(%r13),%r9
	subl 0x0(%r11),%r15d
	jo L_475484
L_233331:
	movq 0x0(%r9),%r13
	movl 0x0(%r10),%r8d
	movq $0x389,0x0(%r12)
	movq %r12,%rsp
	addq $0x8,%rsp
	movl %r8d,0x0(%rsp)
	movl %r15d,0x4(%rsp)
	movq %r13,0x8(%rsp)
	addq $0x18,%r12
	subl 0x0(%r11),%r14d
	jo L_475483
L_233333:
	movq 0x0(%r9),%r15
	movl 0x0(%r10),%ecx
	movq $0x389,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movl %ecx,0x0(%r13)
	movl %r14d,0x4(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq $0x1015,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %rsp,0x8(%r15)
	addq $0x20,%r12
	movq $0x1,0x10(%r15)
	movl $0x6,%ecx
	jmp L_233284
.p2align 0x4
L_475483:
L_233332:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_475484:
L_233330:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_475485:
L_233328:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_475486:
L_233320:
	movl 0xD4(%rbp),%r15d
	movl %r15d,%r14d
	addl $0x3,%r14d
	jo L_475489
L_233322:
	movq 0xB0(%rbp),%r13
	movq 0x8(%r13),%r11
	movq 0x10(%r13),%r10
	movq 0x18(%r13),%r9
	subl 0x0(%r11),%r15d
	jo L_475488
L_233324:
	movq 0x0(%r9),%r13
	movl 0x0(%r10),%r8d
	movq $0x389,0x0(%r12)
	movq %r12,%rsp
	addq $0x8,%rsp
	movl %r8d,0x0(%rsp)
	movl %r15d,0x4(%rsp)
	movq %r13,0x8(%rsp)
	addq $0x18,%r12
	subl 0x0(%r11),%r14d
	jo L_475487
L_233326:
	movq 0x0(%r9),%r15
	movl 0x0(%r10),%ecx
	movq $0x389,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movl %ecx,0x0(%r13)
	movl %r14d,0x4(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq $0x1015,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %rsp,0x8(%r15)
	addq $0x20,%r12
	movq $0x1,0x10(%r15)
	movl $0x5,%ecx
	jmp L_233284
.p2align 0x4
L_475487:
L_233325:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_475488:
L_233323:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_475489:
L_233321:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_475490:
L_233313:
	movl 0xD4(%rbp),%r15d
	movl %r15d,%r14d
	addl $0x3,%r14d
	jo L_475493
L_233315:
	movq 0xB0(%rbp),%r13
	movq 0x8(%r13),%r11
	movq 0x10(%r13),%r10
	movq 0x18(%r13),%r9
	subl 0x0(%r11),%r15d
	jo L_475492
L_233317:
	movq 0x0(%r9),%r13
	movl 0x0(%r10),%r8d
	movq $0x389,0x0(%r12)
	movq %r12,%rsp
	addq $0x8,%rsp
	movl %r8d,0x0(%rsp)
	movl %r15d,0x4(%rsp)
	movq %r13,0x8(%rsp)
	addq $0x18,%r12
	subl 0x0(%r11),%r14d
	jo L_475491
L_233319:
	movq 0x0(%r9),%r15
	movl 0x0(%r10),%ecx
	movq $0x389,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movl %ecx,0x0(%r13)
	movl %r14d,0x4(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq $0x1015,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %rsp,0x8(%r15)
	addq $0x20,%r12
	movq $0x1,0x10(%r15)
	movl $0x4,%ecx
	jmp L_233284
.p2align 0x4
L_475491:
L_233318:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_475492:
L_233316:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_475493:
L_233314:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_475494:
L_233306:
	movl 0xD4(%rbp),%r15d
	movl %r15d,%r14d
	addl $0x3,%r14d
	jo L_475497
L_233308:
	movq 0xB0(%rbp),%r13
	movq 0x8(%r13),%r11
	movq 0x10(%r13),%r10
	movq 0x18(%r13),%r9
	subl 0x0(%r11),%r15d
	jo L_475496
L_233310:
	movq 0x0(%r9),%r13
	movl 0x0(%r10),%r8d
	movq $0x389,0x0(%r12)
	movq %r12,%rsp
	addq $0x8,%rsp
	movl %r8d,0x0(%rsp)
	movl %r15d,0x4(%rsp)
	movq %r13,0x8(%rsp)
	addq $0x18,%r12
	subl 0x0(%r11),%r14d
	jo L_475495
L_233312:
	movq 0x0(%r9),%r15
	movl 0x0(%r10),%ecx
	movq $0x389,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movl %ecx,0x0(%r13)
	movl %r14d,0x4(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq $0x1015,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %rsp,0x8(%r15)
	addq $0x20,%r12
	movq $0x1,0x10(%r15)
	movl $0x10,%ecx
	jmp L_233284
.p2align 0x4
L_475495:
L_233311:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_475496:
L_233309:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_475497:
L_233307:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_475498:
L_233299:
	movl 0xD4(%rbp),%r15d
	movl %r15d,%r14d
	incl %r14d
	jo L_475501
L_233301:
	movq 0xB0(%rbp),%r13
	movq 0x8(%r13),%r11
	movq 0x10(%r13),%r10
	movq 0x18(%r13),%r9
	subl 0x0(%r11),%r15d
	jo L_475500
L_233303:
	movq 0x0(%r9),%r13
	movl 0x0(%r10),%r8d
	movq $0x389,0x0(%r12)
	movq %r12,%rsp
	addq $0x8,%rsp
	movl %r8d,0x0(%rsp)
	movl %r15d,0x4(%rsp)
	movq %r13,0x8(%rsp)
	addq $0x18,%r12
	subl 0x0(%r11),%r14d
	jo L_475499
L_233305:
	movq 0x0(%r9),%r15
	movl 0x0(%r10),%ecx
	movq $0x389,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movl %ecx,0x0(%r13)
	movl %r14d,0x4(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq $0x1015,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %rsp,0x8(%r15)
	addq $0x20,%r12
	movq $0x1,0x10(%r15)
	movl $0x8,%ecx
	jmp L_233284
.p2align 0x4
L_475499:
L_233304:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_475500:
L_233302:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_475501:
L_233300:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_475502:
L_233292:
	movl 0xD4(%rbp),%r15d
	movl %r15d,%r14d
	incl %r14d
	jo L_475505
L_233294:
	movq 0xB0(%rbp),%r13
	movq 0x8(%r13),%r11
	movq 0x10(%r13),%r10
	movq 0x18(%r13),%r9
	subl 0x0(%r11),%r15d
	jo L_475504
L_233296:
	movq 0x0(%r9),%r13
	movl 0x0(%r10),%r8d
	movq $0x389,0x0(%r12)
	movq %r12,%rsp
	addq $0x8,%rsp
	movl %r8d,0x0(%rsp)
	movl %r15d,0x4(%rsp)
	movq %r13,0x8(%rsp)
	addq $0x18,%r12
	subl 0x0(%r11),%r14d
	jo L_475503
L_233298:
	movq 0x0(%r9),%r15
	movl 0x0(%r10),%ecx
	movq $0x389,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movl %ecx,0x0(%r13)
	movl %r14d,0x4(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq $0x1015,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %rsp,0x8(%r15)
	addq $0x20,%r12
	movq $0x1,0x10(%r15)
	movl $0x2,%ecx
	jmp L_233284
.p2align 0x4
L_475503:
L_233297:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_475504:
L_233295:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_475505:
L_233293:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_475506:
L_233285:
	movl 0xD4(%rbp),%r15d
	movl %r15d,%r14d
	incl %r14d
	jo L_475509
L_233287:
	movq 0xB0(%rbp),%r13
	movq 0x8(%r13),%r11
	movq 0x10(%r13),%r10
	movq 0x18(%r13),%r9
	subl 0x0(%r11),%r15d
	jo L_475508
L_233289:
	movq 0x0(%r9),%r13
	movl 0x0(%r10),%r8d
	movq $0x389,0x0(%r12)
	movq %r12,%rsp
	addq $0x8,%rsp
	movl %r8d,0x0(%rsp)
	movl %r15d,0x4(%rsp)
	movq %r13,0x8(%rsp)
	addq $0x18,%r12
	subl 0x0(%r11),%r14d
	jo L_475507
L_233291:
	movq 0x0(%r9),%r15
	movl 0x0(%r10),%ecx
	movq $0x389,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movl %ecx,0x0(%r13)
	movl %r14d,0x4(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq $0x1015,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %rsp,0x8(%r15)
	addq $0x20,%r12
	movq $0x1,0x10(%r15)
	movl $0x1,%ecx
	jmp L_233284
.p2align 0x4
L_475507:
L_233290:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_475508:
L_233288:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_475509:
L_233286:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_475510:
L_233277:
	movl 0xD4(%rbp),%r15d
	movl %r15d,%r14d
	addl $0x4,%r14d
	jo L_475513
L_233279:
	movq 0xB0(%rbp),%r13
	movq 0x8(%r13),%r11
	movq 0x10(%r13),%r10
	movq 0x18(%r13),%r9
	subl 0x0(%r11),%r15d
	jo L_475512
L_233281:
	movq 0x0(%r9),%r13
	movl 0x0(%r10),%r8d
	movq $0x389,0x0(%r12)
	movq %r12,%rsp
	addq $0x8,%rsp
	movl %r8d,0x0(%rsp)
	movl %r15d,0x4(%rsp)
	movq %r13,0x8(%rsp)
	addq $0x18,%r12
	subl 0x0(%r11),%r14d
	jo L_475511
L_233283:
	movq 0x0(%r9),%r15
	movl 0x0(%r10),%ecx
	movq $0x389,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movl %ecx,0x0(%r13)
	movl %r14d,0x4(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq $0x1015,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %rsp,0x8(%r15)
	addq $0x20,%r12
	movq $0x1,0x10(%r15)
	movl $0x11,%ecx
	jmp L_233284
.p2align 0x4
L_475511:
L_233282:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_475512:
L_233280:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_475513:
L_233278:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_475514:
L_233274:
	movq 0xB0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x10(%r15),%r13
	movl 0x0(%r13),%r15d
	incl %r15d
	jo L_475515
L_233276:
	movl %r15d,0x0(%r13)
	movl 0xD4(%rbp),%r15d
	movl %r15d,0x0(%r14)
	jmp continue_5
.p2align 0x4
L_475515:
L_233275:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_475516:
L_233271:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_475517:
L_233820:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE8,%rbp
	leaq (L_233821+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_233821
.p2align 0x4
.long 0x3A52
L_233821:
	addq $0xFFFFFFFFFFFFFF18,%rbp
	jmp L_233269
.p2align 0x4
L_475518:
L_233822:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_475519:
L_233264:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_475520:
L_233823:
	movq 0xE8(%rbp),%r15
	shrq $0x1,%r15
	movl %r15d,%ebx
	movl 0xD4(%rbp),%ecx
	jmp L_233270
.p2align 0x4
L_475521:
L_233256:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_475522:
	movq %r10,%r15
	jmp L_233255
.p2align 0x4
L_475523:
L_233252:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_475524:
L_233825:
	cmpq $0x0,%r13
	jna L_475539
L_233827:
	movq 0x48(%rbp),%r9
	movq 0x8(%r9),%r14
	cmpq %r10,%r14
	je action_0
L_233828:
	movq 0xFFFFFFFFFFFFFFF0(%r10),%r13
	cmpq %r13,0xFFFFFFFFFFFFFFF0(%r14)
	jne L_233830
L_233871:
	xorq %r9,%r9
	movq %r10,%r15
	movq %r9,%r11
.p2align 0x4,,0x7
vectorEqualLoop_187:
	cmpq %r13,%r11
	je L_475537
L_233872:
	movb 0x0(%r15,%r11,1),%r10b
	cmpb %r10b,0x0(%r14,%r11,1)
	jne L_475525
L_233874:
	incq %r11
	jmp vectorEqualLoop_187
.p2align 0x4
L_475525:
L_233830:
	movq 0x38(%rbp),%r15
	movl 0x0(%r15),%r14d
	testl %r14d,%r14d
	jz L_475536
L_233870:
	movq (globalObjptr+0xA058)(%rip),%r15
	movq %r15,0xF0(%rbp)
.p2align 0x4,,0x7
L_233833:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_475535
.p2align 0x4,,0x7
L_233834:
	movq 0xF0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_475534
L_233836:
	testl %r13d,%r13d
	jz L_475531
L_233837:
	movl 0xD0(%rbp),%r14d
	cmpl %r14d,0xD4(%rbp)
	jne L_475529
L_233850:
	movq 0xC8(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
.p2align 0x4,,0x7
x_814:
	movq 0xC0(%rbp),%r15
	movl 0x0(%r15),%r14d
	movl 0xD0(%rbp),%r13d
	addl %r13d,%r14d
	jo L_475528
L_233844:
	movl %r14d,0x0(%r15)
	movq 0xC8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r11
	movl %r11d,%r10d
	movslq %r10d,%r9
	cmpq %r9,%r11
	jne L_475527
L_233846:
	movq 0x40(%rbp),%r15
	movl %r10d,0x0(%r15)
	movl 0xD4(%rbp),%r15d
	subl %r13d,%r15d
	jo L_475526
L_233848:
	movl %r15d,0xD4(%rbp)
	movl $0x0,0xD0(%rbp)
	jmp loop_2678
.p2align 0x4
L_475526:
L_233847:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_475527:
L_233845:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_475528:
L_233843:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_475529:
L_233838:
	movq 0xC8(%rbp),%r14
	movq 0x0(%r14),%r13
	movl 0xD4(%rbp),%r14d
	movl 0xD0(%rbp),%r11d
	subl %r11d,%r14d
	jo L_475530
L_233840:
	movq %r13,0x110(%rbp)
	movl %r14d,%r13d
	shlq $0x1,%r13
	orq $0x1,%r13
	movq %r13,0x100(%rbp)
	leaq L_233849(%rip),%r14
	movq %r14,0x8(%rbp)
	movq %rbp,%r14
	addq $0x10,%r14
	subq (gcState+0x560)(%rip),%r14
	movq %r14,(gcState+0x20)(%rip)
	movl %r11d,0x108(%rbp)
	addq $0x100,%rbp
	leaq (L_233841+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp extract_0
.p2align 0x4
L_475530:
L_233839:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_475531:
L_233851:
	movq 0x38(%rbp),%r14
	movl $0x1,0x0(%r14)
	movl 0xD0(%rbp),%r14d
	cmpl %r14d,0xD4(%rbp)
	jne action_0
L_233853:
	movq 0xB0(%rbp),%r14
	movq 0x8(%r14),%r13
	movl 0x0(%r13),%r11d
	movl %r11d,%r10d
	movq 0x10(%r14),%r9
	movq 0x18(%r14),%r8
	subl %r11d,%r10d
	jo L_475533
L_233855:
	movq 0x0(%r8),%r14
	movl 0x0(%r9),%r13d
	movq $0x389,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,0xD0(%rbp)
	movl %r13d,0x0(%r11)
	movl %r10d,0x4(%r11)
	movq %r14,0x8(%r11)
	addq $0x18,%r12
	movq (globalObjptr+0x1690)(%rip),%r14
	cmpl $0x0,0x0(%r14)
	jng L_475532
L_233858:
	movq 0x90(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0xD8(%rbp)
	movq %r13,0x0(%r14)
	addq $0x18,%r12
	movq %r11,0x8(%r14)
	leaq L_233849(%rip),%r14
	movq %r14,0x8(%rbp)
	movq %rbp,%r14
	addq $0x10,%r14
	subq (gcState+0x560)(%rip),%r14
	movq %r14,(gcState+0x20)(%rip)
	movq (globalObjptr+0x10418)(%rip),%r14
	movq %r14,0xE8(%rbp)
	addq $0xE8,%rbp
	leaq (L_233859+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_475532:
L_233857:
	movq $0x1015,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0xD0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r14,0x8(%r15)
	movq $0x1,0x10(%r15)
	movl $0x3,%ecx
	jmp L_233284
.p2align 0x4
L_475533:
L_233854:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_475534:
L_233835:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_475535:
L_233868:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x100,%rbp
	leaq (L_233869+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_233869
.p2align 0x4
.long 0x3A59
L_233869:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	jmp L_233834
.p2align 0x4
L_475536:
L_233831:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x30(%rbp),%r15
	movq %r15,0xF8(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x100(%rbp)
	addq $0xF8,%rbp
	leaq (L_233832+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp inputN_0
.p2align 0x4
L_475537:
L_233875:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb action_0
L_233877:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF8,%rbp
	leaq (L_233878+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_233878
.p2align 0x4
.long 0x3A5A
L_233878:
	addq $0xFFFFFFFFFFFFFF08,%rbp
	jmp action_0
.p2align 0x4
L_475539:
L_233826:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_475540:
L_233249:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_475541:
L_233880:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF0,%rbp
	leaq (L_233881+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_233881
.p2align 0x4
.long 0x3A5B
L_233881:
	addq $0xFFFFFFFFFFFFFF10,%rbp
	jmp L_233248
.p2align 0x4
.long 0x3A50
L_233813:
	addq $0xFFFFFFFFFFFFFF18,%rbp
	movq 0xE8(%rbp),%r15
	movq %r15,0xE0(%rbp)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r14d
	incl %r14d
	jo L_475543
L_233815:
	movl %r14d,0x0(%r15)
	movq 0xD0(%rbp),%r15
	movq %r15,0xE8(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0xF0(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0xF8(%rbp)
	movq (globalObjptr+0x9D0)(%rip),%r15
	movq %r15,0xD8(%rbp)
	addq $0xD8,%rbp
	leaq (L_233816+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_475543:
L_233814:
	movq 0x10(%rbp),%r14
	movq %r14,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r14,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x72E
L_233819:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3A50
L_233797:
	addq $0xFFFFFFFFFFFFFF18,%rbp
	movq 0xE8(%rbp),%r15
	movq %r15,0xE0(%rbp)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r14d
	incl %r14d
	jo L_475544
L_233799:
	movl %r14d,0x0(%r15)
	movq 0xD8(%rbp),%r15
	movq %r15,0xE8(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0xF0(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0xF8(%rbp)
	movq (globalObjptr+0x9D0)(%rip),%r15
	movq %r15,0xD8(%rbp)
	addq $0xD8,%rbp
	leaq (L_233800+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_475544:
L_233798:
	movq 0x10(%rbp),%r14
	movq %r14,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r14,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x72E
L_233803:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3A4B
L_233787:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0xD0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_233788
L_233789:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_233790+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_233790
.p2align 0x4
.long 0x3A4F
L_233790:
	addq $0xFFFFFFFFFFFFFF20,%rbp
L_233788:
	movq 0x50(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x1B53,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0xD0(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x0(%r15)
	jmp continue_5
.p2align 0x4
.long 0x72E
L_233791:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3A50
L_233777:
	addq $0xFFFFFFFFFFFFFF18,%rbp
	movq 0xE8(%rbp),%r15
	movq %r15,0xE0(%rbp)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r14d
	incl %r14d
	jo L_475546
L_233779:
	movl %r14d,0x0(%r15)
	movq 0xD0(%rbp),%r15
	movq %r15,0xE8(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0xF0(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0xF8(%rbp)
	movq (globalObjptr+0x9D0)(%rip),%r15
	movq %r15,0xD8(%rbp)
	addq $0xD8,%rbp
	leaq (L_233780+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_475546:
L_233778:
	movq 0x10(%rbp),%r14
	movq %r14,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r14,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x72E
L_233783:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3A50
L_233765:
	addq $0xFFFFFFFFFFFFFF18,%rbp
	movq 0xE8(%rbp),%r15
	movq %r15,0xE0(%rbp)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r14d
	incl %r14d
	jo L_475547
L_233767:
	movl %r14d,0x0(%r15)
	movq 0xD0(%rbp),%r15
	movq %r15,0xE8(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0xF0(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0xF8(%rbp)
	movq (globalObjptr+0x9D0)(%rip),%r15
	movq %r15,0xD8(%rbp)
	addq $0xD8,%rbp
	leaq (L_233768+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_475547:
L_233766:
	movq 0x10(%rbp),%r14
	movq %r14,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r14,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x72E
L_233771:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3A48
L_233642:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	movq 0xE0(%rbp),%r15
	movq %r15,0xD8(%rbp)
	movq $0x4,%r14
	shlq $0x1,%r14
	orq $0x1,%r14
	movq %r14,0xE0(%rbp)
	leaq L_233521(%rip),%r14
	movq %r14,0x8(%rbp)
	movl $0x2,0xE8(%rbp)
	movq %r15,0xF0(%rbp)
	addq $0xE0,%rbp
	leaq (L_233643+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp extract_0
.p2align 0x4
.long 0x72E
L_233755:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3A48
L_233600:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	movq 0xE0(%rbp),%r15
	movq %r15,0xD8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_233601
L_233636:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE8,%rbp
	leaq (L_233637+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_233637
.p2align 0x4
.long 0x3A49
L_233637:
	addq $0xFFFFFFFFFFFFFF18,%rbp
L_233601:
	movq 0xD8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	cmpq $0x1,%r14
	jna L_475558
L_233603:
	movzbl 0x1(%r15),%r13d
	imull $0x64,%r13d
	jo L_475557
L_233605:
	cmpq $0x2,%r14
	jna L_475556
L_233607:
	movzbl 0x2(%r15),%r11d
	imull $0xA,%r11d
	jo L_475555
L_233609:
	addl %r13d,%r11d
	jo L_475554
L_233611:
	cmpq $0x3,%r14
	jna L_475553
L_233613:
	movzbl 0x3(%r15),%r14d
	addl %r11d,%r14d
	jo L_475552
L_233615:
	subl $0x14D0,%r14d
	jo L_475551
L_233617:
	cmpl $0xFF,%r14d
	jg L_475549
L_233618:
	cmpl $0xFF,%r14d
	ja L_475548
L_233619:
	movb %r14b,%r15b
	movzbq %r15b,%r14
	shlq $0x4,%r14
	orq $0x9,%r14
	movq %r14,0xD8(%rbp)
	leaq L_233624(%rip),%r15
	movq %r15,0x8(%rbp)
	movl $0x1,0xE0(%rbp)
	addq $0xD8,%rbp
	leaq (L_233620+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_0
.p2align 0x4
L_475548:
L_233625:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_475549:
L_233626:
	movq 0x58(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0xD8(%rbp)
	movq 0x8(%r15),%r14
	movq 0x0(%r14),%r13
	movq 0xB0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x18(%r15),%r11
	movl 0xD4(%rbp),%r10d
	movq 0x8(%r15),%r9
	subl 0x0(%r9),%r10d
	jo L_475550
L_233628:
	movq 0x0(%r11),%r15
	movl 0x0(%r14),%r11d
	movq $0x389,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %r11d,0x0(%r14)
	movl %r10d,0x4(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xD0(%rbp)
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	leaq L_233635(%rip),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0x103F0)(%rip),%r15
	movq %r15,0xE8(%rbp)
	addq $0xE8,%rbp
	leaq (L_233629+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_475550:
L_233627:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_475551:
L_233616:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_475552:
L_233614:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_475553:
L_233612:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_475554:
L_233610:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_475555:
L_233608:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_475556:
L_233606:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_475557:
L_233604:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_475558:
L_233602:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x72E
L_233638:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3A4A
L_233590:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	movq 0xE0(%rbp),%r15
	movq %r15,0xD8(%rbp)
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	incl %r13d
	jo L_475560
L_233592:
	movl %r13d,0x0(%r14)
	movq %r15,0xE0(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0xE8(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0xF0(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0xF8(%rbp)
	movq (globalObjptr+0x9D0)(%rip),%r15
	movq %r15,0xD8(%rbp)
	addq $0xD8,%rbp
	leaq (L_233593+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_475560:
L_233591:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x72E
L_233596:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3A4B
L_233570:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0xD0(%rbp)
	cmpq $0x2,0xFFFFFFFFFFFFFFF0(%r15)
	ja L_475561
L_233571:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_475561:
L_233572:
	movq 0xD0(%rbp),%r15
	movzbl 0x2(%r15),%r14d
	subl $0x40,%r14d
	jo L_475563
L_233574:
	cmpl $0xFF,%r14d
	ja L_475562
L_233575:
	movb %r14b,%r15b
	movzbq %r15b,%r14
	shlq $0x4,%r14
	orq $0x9,%r14
	movq %r14,0xD8(%rbp)
	leaq L_233580(%rip),%r15
	movq %r15,0x8(%rbp)
	movl $0x1,0xE0(%rbp)
	addq $0xD8,%rbp
	leaq (L_233576+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_0
.p2align 0x4
L_475562:
L_233581:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_475563:
L_233573:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x72E
L_233582:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3A4B
L_233562:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0xD0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_233563
L_233564:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_233565+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_233565
.p2align 0x4
.long 0x3A4F
L_233565:
	addq $0xFFFFFFFFFFFFFF20,%rbp
L_233563:
	movq 0x70(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x1B53,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0xD0(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x0(%r15)
	jmp continue_5
.p2align 0x4
.long 0x72E
L_233566:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3A4B
L_233556:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0xD0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_233557
L_233558:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_233559+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_233559
.p2align 0x4
.long 0x3A4F
L_233559:
	addq $0xFFFFFFFFFFFFFF20,%rbp
L_233557:
	movq 0x70(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x1B53,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0xD0(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x0(%r15)
	jmp continue_5
.p2align 0x4
.long 0x72E
L_233560:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3A4B
L_233550:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0xD0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_233551
L_233552:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_233553+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_233553
.p2align 0x4
.long 0x3A4F
L_233553:
	addq $0xFFFFFFFFFFFFFF20,%rbp
L_233551:
	movq 0x70(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x1B53,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0xD0(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x0(%r15)
	jmp continue_5
.p2align 0x4
.long 0x72E
L_233554:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3A4B
L_233544:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0xD0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_233545
L_233546:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_233547+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_233547
.p2align 0x4
.long 0x3A4F
L_233547:
	addq $0xFFFFFFFFFFFFFF20,%rbp
L_233545:
	movq 0x70(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x1B53,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0xD0(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x0(%r15)
	jmp continue_5
.p2align 0x4
.long 0x72E
L_233548:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3A4B
L_233538:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0xD0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_233539
L_233540:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_233541+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_233541
.p2align 0x4
.long 0x3A4F
L_233541:
	addq $0xFFFFFFFFFFFFFF20,%rbp
L_233539:
	movq 0x70(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x1B53,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0xD0(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x0(%r15)
	jmp continue_5
.p2align 0x4
.long 0x72E
L_233542:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3A4B
L_233532:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0xD0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_233533
L_233534:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_233535+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_233535
.p2align 0x4
.long 0x3A4F
L_233535:
	addq $0xFFFFFFFFFFFFFF20,%rbp
L_233533:
	movq 0x70(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x1B53,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0xD0(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x0(%r15)
	jmp continue_5
.p2align 0x4
.long 0x72E
L_233536:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3A4B
L_233526:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0xD0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_233527
L_233528:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_233529+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_233529
.p2align 0x4
.long 0x3A4F
L_233529:
	addq $0xFFFFFFFFFFFFFF20,%rbp
L_233527:
	movq 0x70(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x1B53,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0xD0(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x0(%r15)
	jmp continue_5
.p2align 0x4
.long 0x72E
L_233530:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3A48
L_233513:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	movq 0xE0(%rbp),%r15
	movq %r15,0xD8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_233514
L_233519:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE8,%rbp
	leaq (L_233520+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_233520
.p2align 0x4
.long 0x3A49
L_233520:
	addq $0xFFFFFFFFFFFFFF18,%rbp
L_233514:
	movq 0xA8(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq $0x1,0x0(%r15)
	movq 0x98(%rbp),%r15
	movl $0x1,0x0(%r15)
	movq 0xA0(%rbp),%r15
	movq 0x0(%r15),%r14
	movl 0xD4(%rbp),%r15d
	incl %r15d
	jo L_475572
L_233516:
	movq 0xB0(%rbp),%r13
	movq 0x10(%r13),%r11
	movq 0x18(%r13),%r10
	movq 0x8(%r13),%r9
	subl 0x0(%r9),%r15d
	jo L_475571
L_233518:
	movq 0x0(%r10),%r13
	movl 0x0(%r11),%ecx
	movq $0x389,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movl %ecx,0x0(%r11)
	movl %r15d,0x4(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq $0x2075,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xD8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1015,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r11,0x0(%r13)
	movq %r14,0x8(%r13)
	movq %r15,0x10(%r13)
	addq $0x20,%r12
	movl $0x13,%ecx
	movq %r13,%r15
	jmp L_233284
.p2align 0x4
L_475571:
L_233517:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_475572:
L_233515:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x72E
L_233521:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3A4C
L_233486:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
	movq 0x108(%rbp),%r15
	movq %r15,0x100(%rbp)
	movl 0x110(%rbp),%r15d
	movq 0x118(%rbp),%r14
	movq %r14,0x110(%rbp)
	testl %r15d,%r15d
	movl %r15d,0x108(%rbp)
	jnz L_475574
L_233487:
	movq 0xD8(%rbp),%r15
	movq %r15,0x108(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0x110(%rbp)
	addq $0x108,%rbp
	leaq (L_233488+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_1
.p2align 0x4
L_475574:
L_233492:
	movq 0xD8(%rbp),%r15
L_233490:
	movq 0xF8(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	movq 0xF0(%rbp),%r15
	movl 0xD0(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movq 0xE8(%rbp),%r15
	movl 0xD4(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movq (globalObjptr+0x1690)(%rip),%r15
	movl $0x0,0x0(%r15)
	movq 0xA8(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r11,%r14,1)
	movq $0x1,0x0(%r15)
	jmp continue_5
.p2align 0x4
.long 0x72E
L_233491:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3A4B
L_233479:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0xD0(%rbp)
	movq 0x78(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp continue_5
.p2align 0x4
.long 0x72E
L_233480:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3A4B
L_233460:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0xD0(%rbp)
	movq 0x98(%rbp),%r14
	movl $0xD,0x0(%r14)
	leaq L_233463(%rip),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0xD8(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0xE0(%rbp)
	addq $0xD8,%rbp
	leaq (x_813+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1206
.p2align 0x4
.long 0x72E
L_233468:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3A4B
L_233448:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0xD0(%rbp)
	movq 0x98(%rbp),%r14
	movl $0xB,0x0(%r14)
	leaq L_233451(%rip),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0xD8(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0xE0(%rbp)
	addq $0xD8,%rbp
	leaq (x_812+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1206
.p2align 0x4
.long 0x72E
L_233456:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3A4A
L_233438:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	movq 0xE0(%rbp),%r15
	movq %r15,0xD8(%rbp)
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	incl %r13d
	jo L_475575
L_233440:
	movl %r13d,0x0(%r14)
	movq %r15,0xE0(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0xE8(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0xF0(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0xF8(%rbp)
	movq (globalObjptr+0x9D0)(%rip),%r15
	movq %r15,0xD8(%rbp)
	addq $0xD8,%rbp
	leaq (L_233441+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_475575:
L_233439:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x72E
L_233444:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3A48
L_233409:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	movq 0xE0(%rbp),%r15
	movq %r15,0xD8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_233410
L_233419:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE8,%rbp
	leaq (L_233420+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_233420
.p2align 0x4
.long 0x3A49
L_233420:
	addq $0xFFFFFFFFFFFFFF18,%rbp
L_233410:
	movq 0xD8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_475579
L_233412:
	movl 0xD4(%rbp),%r14d
	addl %r14d,%r13d
	jo L_475578
L_233414:
	movq 0xB0(%rbp),%r11
	movq 0x8(%r11),%r10
	movq 0x10(%r11),%r9
	movq 0x18(%r11),%r8
	subl 0x0(%r10),%r14d
	jo L_475577
L_233416:
	movq 0x0(%r8),%r11
	movl 0x0(%r9),%esp
	movq $0x389,0x0(%r12)
	movq %r12,%rsi
	addq $0x8,%rsi
	movl %esp,0x0(%rsi)
	movl %r14d,0x4(%rsi)
	movq %r11,0x8(%rsi)
	addq $0x18,%r12
	subl 0x0(%r10),%r13d
	jo L_475576
L_233418:
	movq 0x0(%r8),%r14
	movl 0x0(%r9),%ecx
	movq $0x389,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movl %ecx,0x0(%r11)
	movl %r13d,0x4(%r11)
	movq %r14,0x8(%r11)
	addq $0x18,%r12
	movq $0x2073,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq $0x1015,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	movq %rsi,0x8(%r15)
	movq %r14,0x10(%r15)
	addq $0x20,%r12
	movl $0x12,%ecx
	jmp L_233284
.p2align 0x4
L_475576:
L_233417:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_475577:
L_233415:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_475578:
L_233413:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_475579:
L_233411:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x72E
L_233421:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3A48
L_233393:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	movq 0xE0(%rbp),%r15
	movq %r15,0xD8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_233394
L_233403:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE8,%rbp
	leaq (L_233404+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_233404
.p2align 0x4
.long 0x3A49
L_233404:
	addq $0xFFFFFFFFFFFFFF18,%rbp
L_233394:
	movq 0xD8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_475584
L_233396:
	movl 0xD4(%rbp),%r14d
	addl %r14d,%r13d
	jo L_475583
L_233398:
	movq 0xB0(%rbp),%r11
	movq 0x8(%r11),%r10
	movq 0x10(%r11),%r9
	movq 0x18(%r11),%r8
	subl 0x0(%r10),%r14d
	jo L_475582
L_233400:
	movq 0x0(%r8),%r11
	movl 0x0(%r9),%esp
	movq $0x389,0x0(%r12)
	movq %r12,%rsi
	addq $0x8,%rsi
	movl %esp,0x0(%rsi)
	movl %r14d,0x4(%rsi)
	movq %r11,0x8(%rsi)
	addq $0x18,%r12
	subl 0x0(%r10),%r13d
	jo L_475581
L_233402:
	movq 0x0(%r8),%r14
	movl 0x0(%r9),%ecx
	movq $0x389,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movl %ecx,0x0(%r11)
	movl %r13d,0x4(%r11)
	movq %r14,0x8(%r11)
	addq $0x18,%r12
	movq $0x2071,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq $0x1015,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	movq %rsi,0x8(%r15)
	movq %r14,0x10(%r15)
	addq $0x20,%r12
	xorl %ecx,%ecx
	jmp L_233284
.p2align 0x4
L_475581:
L_233401:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_475582:
L_233399:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_475583:
L_233397:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_475584:
L_233395:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x72E
L_233405:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3A57
L_233841:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0xE8(%rbp)
	movq %r15,0xF8(%rbp)
	addq $0xF0,%rbp
	leaq (L_233842+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x72E
L_233849:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3A50
L_233859:
	addq $0xFFFFFFFFFFFFFF18,%rbp
	movq 0xE8(%rbp),%r15
	movq %r15,0xE0(%rbp)
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	incl %r13d
	jo L_475586
L_233861:
	movl %r13d,0x0(%r14)
	movq %r15,0xE8(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0xF0(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0xF8(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x100(%rbp)
	movq (globalObjptr+0x9D0)(%rip),%r15
	movq %r15,0xE0(%rbp)
	addq $0xE0,%rbp
	leaq (L_233862+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_475586:
L_233860:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3A56
L_233832:
	addq $0xFFFFFFFFFFFFFF08,%rbp
	movq 0xF8(%rbp),%r15
	movq %r15,0xF0(%rbp)
	jmp L_233833
.p2align 0x4
.long 0x3A4B
L_233816:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq (globalObjptr+0x1608)(%rip),%r15
	movq (globalObjptr+0x1610)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	jne continue_5
L_233818:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3A4B
L_233800:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq (globalObjptr+0x1608)(%rip),%r15
	movq (globalObjptr+0x1610)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	jne continue_5
L_233802:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3A4B
L_233780:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq (globalObjptr+0x1608)(%rip),%r15
	movq (globalObjptr+0x1610)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	jne continue_5
L_233782:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3A4B
L_233768:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq (globalObjptr+0x1608)(%rip),%r15
	movq (globalObjptr+0x1610)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	jne continue_5
L_233770:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3A48
L_233643:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	movq 0xE0(%rbp),%r15
	movq %r15,0xD8(%rbp)
	movq $0x1,0xE0(%rbp)
	movl $0x0,0xD0(%rbp)
.p2align 0x4,,0x7
loop_2679:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_475616
.p2align 0x4,,0x7
L_233644:
	movq 0xD8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq %r14,0xE8(%rbp)
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_475615
L_233646:
	movl 0xD0(%rbp),%r11d
	cmpl %r13d,%r11d
	setl %al
	movzbl %al,%eax
	movl %eax,0xF0(%rbp)
	jnl L_475604
L_233718:
	movslq %r11d,%r13
	cmpq %r14,%r13
	jnb L_475603
L_233720:
	movb 0x0(%r15,%r13,1),%r14b
	incl %r11d
	movzbq %r14b,%r15
	movq 0x68(%rbp),%r13
	cmpq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	jnb L_475602
L_233722:
	movl 0x0(%r13,%r15,4),%r10d
	testl %r10d,%r10d
	jz L_475587
L_233752:
	movl %r11d,0xD0(%rbp)
	movq $0x1B5F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movzbl %r14b,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0xE0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0xE0(%rbp)
	jmp loop_2679
.p2align 0x4
L_475587:
L_233723:
	movq 0xE0(%rbp),%r15
	cmpq $0x1,%r15
	je L_475601
L_233724:
	movb 0x0(%r15),%r14b
	movq 0x8(%r15),%r15
	movq %r15,0xE0(%rbp)
	movb %r14b,0xF4(%rbp)
	movq $0x1,0xF8(%rbp)
.p2align 0x4,,0x7
L_233725:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_475600
.p2align 0x4,,0x7
L_233726:
	movq $0x1B5F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movzbl 0xF4(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0xF8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xE0(%rbp),%r14
	cmpq $0x1,%r14
	je L_475588
L_233727:
	movq %r15,0xF8(%rbp)
	movb 0x0(%r14),%r15b
	movq 0x8(%r14),%r14
	movq %r14,0xE0(%rbp)
	movb %r15b,0xF4(%rbp)
	jmp L_233725
.p2align 0x4
L_475588:
L_233728:
	movq %r15,0xE0(%rbp)
L_233729:
	movq 0xE0(%rbp),%r14
	cmpq $0x1,%r14
	je L_475599
L_233730:
	movq 0x8(%r14),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_233731:
	incl %ecx
	cmpq $0x1,%r15
	je L_475589
L_233732:
	movq 0x8(%r15),%r15
	jmp L_233731
.p2align 0x4
L_475589:
L_233733:
L_233734:
	movslq %ecx,%rdx
	movq %rdx,0xF8(%rbp)
	testq %rdx,%rdx
	jz L_475598
L_233735:
	cmpq $0x7FFFFFFF,%rdx
	ja L_475597
L_233736:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x51,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x108,%rbp
	leaq (L_233737+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_233737
.p2align 0x4
.long 0x3A51
L_233737:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
	movq %rax,%r15
L_233738:
	movq 0xE0(%rbp),%r13
	xorq %r14,%r14
.p2align 0x4,,0x7
loop_2681:
	cmpq 0xF8(%rbp),%r14
	jnl L_475591
L_233743:
	cmpq $0x1,%r13
	je L_475590
L_233744:
	movq 0x8(%r13),%r11
	movb 0x0(%r13),%r10b
	movb %r10b,0x0(%r15,%r14,1)
	incq %r14
	movq %r11,%r13
	jmp loop_2681
.p2align 0x4
L_475590:
L_233745:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_475591:
L_233739:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_233665
L_233741:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x100,%rbp
	leaq (L_233742+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_233742
.p2align 0x4
.long 0x3A53
L_233742:
	addq $0xFFFFFFFFFFFFFF00,%rbp
L_233665:
	movq $0x17D1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xD8(%rbp),%r14
	movq %r14,0x8(%r15)
	movl 0xF0(%rbp),%r13d
	testl %r13d,%r13d
	jz err_5
L_233676:
	movl 0xD0(%rbp),%ecx
	movslq %ecx,%r13
	cmpq 0xE8(%rbp),%r13
	jnb L_475594
L_233678:
	movl %ecx,%r11d
	incl %r11d
	movb 0x0(%r14,%r13,1),%r10b
	cmpb $0x2B,%r10b
	je negate_3
	cmpb $0x2D,%r10b
	je L_475593
	cmpb $0x7E,%r10b
	je L_475592
L_233679:
negate_1:
	movl %ecx,0xE0(%rbp)
	movq %r15,0xE8(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x60(%rbp),%r15
	movq %r15,0xF0(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0xF8(%rbp)
	addq $0xE0,%rbp
	leaq (L_233680+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp num_1
.p2align 0x4
L_475592:
L_233706:
	movl %r11d,0xE0(%rbp)
	movq %r15,0xE8(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x60(%rbp),%r15
	movq %r15,0xF0(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0xF8(%rbp)
	addq $0xE0,%rbp
	leaq (L_233700+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp num_1
.p2align 0x4
L_475593:
L_233699:
	movl %r11d,0xE0(%rbp)
	movq %r15,0xE8(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x60(%rbp),%r15
	movq %r15,0xF0(%rbp)
	movq %r14,0xF8(%rbp)
	addq $0xE0,%rbp
	leaq (L_233700+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp num_1
.p2align 0x4
negate_3:
	xchgl %r11d,%ecx
	jmp negate_1
.p2align 0x4
L_475594:
L_233677:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
err_5:
err_0:
	movq 0x58(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0xD8(%rbp)
	movq 0x8(%r15),%r14
	movq 0x0(%r14),%r13
	movq 0xB0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x18(%r15),%r11
	movl 0xD4(%rbp),%r10d
	movq 0x8(%r15),%r9
	subl 0x0(%r9),%r10d
	jo L_475595
L_233668:
	movq 0x0(%r11),%r15
	movl 0x0(%r14),%r11d
	movq $0x389,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %r11d,0x0(%r14)
	movl %r10d,0x4(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xD0(%rbp)
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	leaq L_233675(%rip),%r15
	movq %r15,0x8(%rbp)
	movq %rbp,%r15
	addq $0x10,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x103F8)(%rip),%r15
	movq %r15,0xE8(%rbp)
	addq $0xE8,%rbp
	leaq (L_233669+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_475595:
L_233667:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_475597:
L_233746:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_475598:
L_233747:
	movq (globalObjptr+0x598)(%rip),%r15
	jmp L_233738
.p2align 0x4
L_475599:
L_233748:
	xorl %ecx,%ecx
	jmp L_233734
.p2align 0x4
L_475600:
L_233749:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x108,%rbp
	leaq (L_233750+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_233750
.p2align 0x4
.long 0x3A54
L_233750:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
	jmp L_233726
.p2align 0x4
L_475601:
L_233751:
	movq $0x1,0xE0(%rbp)
	jmp L_233729
.p2align 0x4
L_475602:
L_233721:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_475603:
L_233719:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_475604:
L_233647:
	movq 0xE0(%rbp),%r13
	cmpq $0x1,%r13
	je L_475614
L_233648:
	movb 0x0(%r13),%r10b
	movq 0x8(%r13),%r13
	movq %r13,0xE0(%rbp)
	movb %r10b,0xF4(%rbp)
	movq $0x1,0xF8(%rbp)
.p2align 0x4,,0x7
L_233649:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_475613
.p2align 0x4,,0x7
L_233650:
	movq $0x1B5F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movzbl 0xF4(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0xF8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xE0(%rbp),%r14
	cmpq $0x1,%r14
	je L_475605
L_233651:
	movq %r15,0xF8(%rbp)
	movb 0x0(%r14),%r15b
	movq 0x8(%r14),%r14
	movq %r14,0xE0(%rbp)
	movb %r15b,0xF4(%rbp)
	jmp L_233649
.p2align 0x4
L_475605:
L_233652:
	movq %r15,0xE0(%rbp)
L_233653:
	movq 0xE0(%rbp),%r14
	cmpq $0x1,%r14
	je L_475612
L_233654:
	movq 0x8(%r14),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_233655:
	incl %ecx
	cmpq $0x1,%r15
	je L_475606
L_233656:
	movq 0x8(%r15),%r15
	jmp L_233655
.p2align 0x4
L_475606:
L_233657:
L_233658:
	movslq %ecx,%rdx
	movq %rdx,0xF8(%rbp)
	testq %rdx,%rdx
	jz L_475611
L_233659:
	cmpq $0x7FFFFFFF,%rdx
	ja L_475610
L_233660:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x51,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x108,%rbp
	leaq (L_233661+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_233661
.p2align 0x4
.long 0x3A51
L_233661:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
	movq %rax,%r15
L_233662:
	movq 0xE0(%rbp),%r13
	xorq %r14,%r14
.p2align 0x4,,0x7
loop_2680:
	cmpq 0xF8(%rbp),%r14
	jnl L_475608
L_233709:
	cmpq $0x1,%r13
	je L_475607
L_233710:
	movq 0x8(%r13),%r11
	movb 0x0(%r13),%r10b
	movb %r10b,0x0(%r15,%r14,1)
	incq %r14
	movq %r11,%r13
	jmp loop_2680
.p2align 0x4
L_475607:
L_233711:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_475608:
L_233663:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_233665
L_233707:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x100,%rbp
	leaq (L_233708+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_233708
.p2align 0x4
.long 0x3A53
L_233708:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	jmp L_233665
.p2align 0x4
L_475610:
L_233712:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_475611:
L_233713:
	movq (globalObjptr+0x598)(%rip),%r15
	jmp L_233662
.p2align 0x4
L_475612:
L_233714:
	xorl %ecx,%ecx
	jmp L_233658
.p2align 0x4
L_475613:
L_233715:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x108,%rbp
	leaq (L_233716+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_233716
.p2align 0x4
.long 0x3A54
L_233716:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
	jmp L_233650
.p2align 0x4
L_475614:
L_233717:
	movq $0x1,0xE0(%rbp)
	jmp L_233653
.p2align 0x4
L_475615:
L_233645:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_475616:
L_233753:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF0,%rbp
	leaq (L_233754+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_233754
.p2align 0x4
.long 0x3A55
L_233754:
	addq $0xFFFFFFFFFFFFFF10,%rbp
	jmp L_233644
.p2align 0x4
.long 0x3A4B
L_233620:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0xD0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_233621
L_233622:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_233623+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_233623
.p2align 0x4
.long 0x3A4F
L_233623:
	addq $0xFFFFFFFFFFFFFF20,%rbp
L_233621:
	movq 0x70(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x1B53,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0xD0(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x0(%r15)
	jmp continue_5
.p2align 0x4
.long 0x72E
L_233624:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3A50
L_233629:
	addq $0xFFFFFFFFFFFFFF18,%rbp
	movq 0xE8(%rbp),%r15
	movq %r15,0xE0(%rbp)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r14d
	incl %r14d
	jo L_475618
L_233631:
	movl %r14d,0x0(%r15)
	movq 0xD0(%rbp),%r15
	movq %r15,0xE8(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0xF0(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0xF8(%rbp)
	movq (globalObjptr+0x9D0)(%rip),%r15
	movq %r15,0xD8(%rbp)
	addq $0xD8,%rbp
	leaq (L_233632+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_475618:
L_233630:
	movq 0x10(%rbp),%r14
	movq %r14,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r14,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x72E
L_233635:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3A4B
L_233593:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq (globalObjptr+0x1610)(%rip),%r15
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	jne continue_5
L_233595:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3A4B
L_233576:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0xD0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_233577
L_233578:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_233579+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_233579
.p2align 0x4
.long 0x3A4F
L_233579:
	addq $0xFFFFFFFFFFFFFF20,%rbp
L_233577:
	movq 0x70(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x1B53,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0xD0(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x0(%r15)
	jmp continue_5
.p2align 0x4
.long 0x72E
L_233580:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3A4D
L_233488:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
	movq 0x108(%rbp),%r15
	movq %r15,0xD8(%rbp)
	movq %r15,0x108(%rbp)
	addq $0x108,%rbp
	leaq (L_233489+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp mkCanonical_0
.p2align 0x4
.long 0x3A4B
x_813:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0xD0(%rbp)
	andq $0x1,%r15
	jnz L_475620
L_233461:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_475620:
L_233462:
	movq 0xD0(%rbp),%r15
	shrq $0x1,%r15
	movl %r15d,%r14d
	movq (globalObjptr+0x16A0)(%rip),%r15
	movl %r14d,0x0(%r15)
	jmp continue_5
.p2align 0x4
.long 0x72E
L_233463:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	cmpq $0x3,%r15
	je L_475622
L_233464:
	andq $0x3,%r15
	jnz L_233465
L_233466:
L_233465:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_475622:
L_233467:
	movq 0x98(%rbp),%r15
	movl $0x3,0x0(%r15)
	jmp continue_5
.p2align 0x4
.long 0x3A4B
x_812:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0xD0(%rbp)
	andq $0x1,%r15
	jnz L_475623
L_233449:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_475623:
L_233450:
	movq 0xD0(%rbp),%r15
	shrq $0x1,%r15
	movl %r15d,%r14d
	movq (globalObjptr+0x1698)(%rip),%r15
	movl %r14d,0x0(%r15)
	movq (globalObjptr+0x16A0)(%rip),%r15
	movl $0x1,0x0(%r15)
	jmp continue_5
.p2align 0x4
.long 0x72E
L_233451:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	cmpq $0x3,%r15
	je L_475625
L_233452:
	andq $0x3,%r15
	jnz L_233453
L_233454:
L_233453:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_475625:
L_233455:
	movq 0x98(%rbp),%r15
	movl $0x3,0x0(%r15)
	jmp continue_5
.p2align 0x4
.long 0x3A4B
L_233441:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq (globalObjptr+0x1608)(%rip),%r15
	movq (globalObjptr+0x1610)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	jne continue_5
L_233443:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3A58
L_233842:
	addq $0xFFFFFFFFFFFFFF10,%rbp
	movq 0xF0(%rbp),%r15
	movq %r15,0xE8(%rbp)
	movq 0xC8(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp x_814
.p2align 0x4
.long 0x3A4A
L_233862:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_233863
L_233866:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_233867+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_233867
.p2align 0x4
.long 0x3A4F
L_233867:
	addq $0xFFFFFFFFFFFFFF20,%rbp
L_233863:
	movq (globalObjptr+0x1610)(%rip),%r15
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	jne L_233857
L_233865:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3A48
L_233680:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	movq 0xE0(%rbp),%r15
	movq %r15,0xD8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_233681
L_233696:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE8,%rbp
	leaq (L_233697+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_233697
.p2align 0x4
.long 0x3A52
L_233697:
	addq $0xFFFFFFFFFFFFFF18,%rbp
L_233681:
	movq 0xD8(%rbp),%r15
	movq %r15,%r14
	andq $0x1,%r14
	jz err_0
L_233683:
	shrq $0x1,%r15
	movl %r15d,%ecx
	negl %ecx
	jo L_475629
L_233685:
L_233686:
	cmpl $0xFF,%ecx
	jg err_0
L_233687:
	cmpl $0xFF,%ecx
	ja L_475628
L_233688:
	movb %cl,%r15b
	movzbq %r15b,%r14
	shlq $0x4,%r14
	orq $0x9,%r14
	movq %r14,0xD8(%rbp)
	leaq L_233693(%rip),%r15
	movq %r15,0x8(%rbp)
	movq %rbp,%r15
	addq $0x10,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movl $0x1,0xE0(%rbp)
	addq $0xD8,%rbp
	leaq (L_233689+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_0
.p2align 0x4
L_475628:
L_233694:
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_475629:
L_233684:
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3A48
L_233700:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	movq 0xE0(%rbp),%r15
	movq %r15,0xD8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_233701
L_233704:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE8,%rbp
	leaq (L_233705+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_233705
.p2align 0x4
.long 0x3A52
L_233705:
	addq $0xFFFFFFFFFFFFFF18,%rbp
L_233701:
	movq 0xD8(%rbp),%r15
	movq %r15,%r14
	andq $0x1,%r14
	jz err_0
L_233703:
	shrq $0x1,%r15
	movl %r15d,%ecx
	jmp L_233686
.p2align 0x4
.long 0x3A50
L_233669:
	addq $0xFFFFFFFFFFFFFF18,%rbp
	movq 0xE8(%rbp),%r15
	movq %r15,0xE0(%rbp)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r14d
	incl %r14d
	jo L_475632
L_233671:
	movl %r14d,0x0(%r15)
	movq 0xD0(%rbp),%r15
	movq %r15,0xE8(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0xF0(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0xF8(%rbp)
	movq (globalObjptr+0x9D0)(%rip),%r15
	movq %r15,0xD8(%rbp)
	addq $0xD8,%rbp
	leaq (L_233672+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_475632:
L_233670:
	movq 0x10(%rbp),%r14
	movq %r14,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r14,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x72E
L_233675:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3A4B
L_233632:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq (globalObjptr+0x1610)(%rip),%r15
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	jne continue_5
L_233634:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3A4D
L_233489:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
	movq 0x108(%rbp),%r15
	movq %r15,0xD8(%rbp)
	jmp L_233490
.p2align 0x4
.long 0x3A4B
L_233689:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0xD0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_233690
L_233691:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_233692+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_233692
.p2align 0x4
.long 0x3A4F
L_233692:
	addq $0xFFFFFFFFFFFFFF20,%rbp
L_233690:
	movq 0x70(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x1B53,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0xD0(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x0(%r15)
	jmp continue_5
.p2align 0x4
.long 0x72E
L_233693:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3A4B
L_233672:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq (globalObjptr+0x1610)(%rip),%r15
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	jne continue_5
L_233674:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
