/* MLton 20130715 (built Mon Jun 13 11:54:01 AEST 2016 on ports.extensibl.com) */
/*   created this file on Mon Jun 13 12:10:44 2016. */
/* Do not edit this file. */
/* Flag settings:  */
/*    align: 8 */
/*    atMLtons: (mlton-compile, @MLton, --) */
/*    chunk: chunk per function */
/*    closureConvertGlobalize: true */
/*    closureConvertShrink: true */
/*    codegen: amd64 */
/*    contifyIntoMain: false */
/*    debug: false */
/*    defaultChar: char8 */
/*    defaultWideChar: widechar32 */
/*    defaultInt: int32 */
/*    defaultReal: real64 */
/*    defaultWord: word32 */
/*    diag passes: [] */
/*    drop passes: [] */
/*    elaborate allowConstant (default): false */
/*    elaborate allowConstant (enabled): true */
/*    elaborate allowFFI (default): false */
/*    elaborate allowFFI (enabled): true */
/*    elaborate allowPrim (default): false */
/*    elaborate allowPrim (enabled): true */
/*    elaborate allowOverload (default): false */
/*    elaborate allowOverload (enabled): true */
/*    elaborate allowRebindEquals (default): false */
/*    elaborate allowRebindEquals (enabled): true */
/*    elaborate deadCode (default): false */
/*    elaborate deadCode (enabled): true */
/*    elaborate forceUsed (default): false */
/*    elaborate forceUsed (enabled): true */
/*    elaborate ffiStr (default):  */
/*    elaborate ffiStr (enabled): true */
/*    elaborate nonexhaustiveExnMatch (default): default */
/*    elaborate nonexhaustiveExnMatch (enabled): true */
/*    elaborate nonexhaustiveMatch (default): warn */
/*    elaborate nonexhaustiveMatch (enabled): true */
/*    elaborate redundantMatch (default): warn */
/*    elaborate redundantMatch (enabled): true */
/*    elaborate resolveScope (default): strdec */
/*    elaborate resolveScope (enabled): true */
/*    elaborate sequenceNonUnit (default): warn */
/*    elaborate sequenceNonUnit (enabled): true */
/*    elaborate warnUnused (default): true */
/*    elaborate warnUnused (enabled): true */
/*    elaborate only: false */
/*    emit main: true */
/*    export header: None */
/*    exn history: false */
/*    generated output format: executable */
/*    gc check: Limit */
/*    indentation: 3 */
/*    inlineIntoMain: true */
/*    inlineLeafA: {loops = true, repeat = true, size = Some 20} */
/*    inlineLeafB: {loops = true, repeat = true, size = Some 40} */
/*    inlineNonRec: {small = 60, product = 320} */
/*    input file: mlton */
/*    keep CoreML: false */
/*    keep def use: true */
/*    keep dot: false */
/*    keep Machine: false */
/*    keep passes: [] */
/*    keep RSSA: false */
/*    keep SSA: false */
/*    keep SSA2: false */
/*    keep SXML: false */
/*    keep XML: false */
/*    extra_: false */
/*    lib dir: /usr/ports/pobj/mlton-20130715/mlton-on-20130715-release/build/lib */
/*    lib target dir: /usr/ports/pobj/mlton-20130715/mlton-on-20130715-release/build/lib/targets/self */
/*    loop passes: 1 */
/*    mark cards: true */
/*    max function size: 10000 */
/*    mlb path vars: [{var = MLTON_ROOT, path = $(LIB_MLTON_DIR)/sml}, {var = SML_LIB, path = $(LIB_MLTON_DIR)/sml}] */
/*    native commented: 0 */
/*    native live stack: false */
/*    native optimize: 1 */
/*    native move hoist: true */
/*    native copy prop: true */
/*    native copy prop cutoff: 1000 */
/*    native cutoff: 100 */
/*    native live transfer: 8 */
/*    native shuffle: true */
/*    native ieee fp: false */
/*    native split: Some 20000 */
/*    optimizationPasses: [<ssa2::default>, <ssa::default>, <sxml::default>, <xml::default>] */
/*    polyvariance: Some {hofo = true, rounds = 2, small = 30, product = 300} */
/*    prefer abs paths: false */
/*    prof passes: [] */
/*    profile: None */
/*    profile branch: false */
/*    profile C: [] */
/*    profile IL: ProfileSource */
/*    profile include/exclude: [(Seq [Star [.], Or [Seq [Seq [[$], [(], [S], [M], [L], [_], [L], [I], [B], [)]]]], Star [.]], false)] */
/*    profile raise: false */
/*    profile stack: false */
/*    profile val: false */
/*    show basis: None */
/*    show def-use: None */
/*    show types: true */
/*    target: self */
/*    target arch: AMD64 */
/*    target OS: OpenBSD */
/*    type check: false */
/*    verbosity: Pass */
/*    warn unrecognized annotation: true */
/*    warn deprecated features: true */
/*    zone cut depth: 100 */
.text
.p2align 0x4
.globl chooseRegister_0
.hidden chooseRegister_0
chooseRegister_0:
L_319077:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x48(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_319078
L_319777:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_319778+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_319778
.p2align 0x4
.long 0x4E67
L_319778:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_319078:
	movq 0x38(%rbp),%r15
	movq 0x20(%r15),%r14
	movq 0x18(%r15),%r13
	movq %r13,0x50(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x58(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x60(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x68(%rbp)
	movq 0x28(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x70(%rbp)
	movq 0x10(%r15),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x78(%rbp)
	movq 0x18(%rbp),%r15
	movq 0x10(%r15),%r13
	movq %r13,0x80(%rbp)
	cmpq $0x1,0x30(%rbp)
	je L_509595
L_319079:
	movq 0x18(%r14),%r15
	movq 0x10(%r14),%r13
	movq 0x8(%r14),%r11
	movq 0x0(%r14),%r10
	movb 0x8(%rbp),%r14b
	cmpb $0x2,%r14b
	je L_509593
	cmpb $0x3,%r14b
	je L_509591
	cmpb $0x4,%r14b
	je L_509589
	cmpb $0x5,%r14b
	je L_509440
L_319080:
	movq (globalObjptr+0x6A48)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_509440:
L_319761:
	cmpq $0x1,%r10
	je L_509588
L_319762:
	movq 0x8(%r10),%r15
	movq %r15,0x28(%rbp)
	movw 0x0(%r10),%r15w
	movw %r15w,0xA(%rbp)
	movq $0x1,0x38(%rbp)
.p2align 0x4,,0x7
L_319084:
	movq 0x30(%rbp),%r13
	movq %r13,%r14
	andq $0x3,%r14
	jnz L_509587
L_319086:
	movq 0x8(%r13),%r14
	movw 0x0(%r13),%r15w
.p2align 0x4,,0x7
L_319087:
	movw 0xA(%rbp),%r13w
	movw %r13w,%r11w
	shrw $0x8,%r11w
	movb %r11b,%r10b
	movw %r15w,%r11w
	shrw $0x8,%r11w
	movb %r11b,%r9b
	cmpb %r9b,%r10b
	jne L_509585
L_319744:
	movb %r13b,%r11b
	movb %r15b,%r13b
	cmpb %r11b,%r13b
	je L_509582
L_319745:
	cmpq $0x1,%r14
	je L_509441
L_319746:
	movw 0x0(%r14),%r15w
	movq 0x8(%r14),%r14
	jmp L_319087
.p2align 0x4
L_509441:
L_319091:
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_509442
L_319092:
	movw 0x0(%r15),%r14w
	movq 0x8(%r15),%r15
	movq %r15,0x28(%rbp)
	movw %r14w,0xA(%rbp)
	jmp L_319084
.p2align 0x4
L_509442:
L_319093:
	movq 0x38(%rbp),%r14
	xchgq %r14,%r15
L_319094:
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_509581
L_319095:
	movq %r15,0x88(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x38(%rbp)
	movq $0x1,0x90(%rbp)
.p2align 0x4,,0x7
L_319096:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_509580
.p2align 0x4,,0x7
L_319097:
	movq 0x38(%rbp),%r15
	movq %r15,%r14
	andq $0x3,%r14
	cmpq $0x2,%r14
	je L_509579
L_319098:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_319099
L_319714:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x115E,%r14
	je L_509570
	cmpq $0x115F,%r14
	je L_509566
L_319099:
	movq $0x1,%r15
L_319100:
	movq $0x22AB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x90(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_509443
L_319101:
	movq %r14,0x90(%rbp)
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x28(%rbp)
	movq %r14,0x38(%rbp)
	jmp L_319096
.p2align 0x4
L_509443:
L_319102:
	movq 0x88(%rbp),%r13
	movq %r13,0x28(%rbp)
	movq %r14,%r15
L_319103:
	cmpq $0x1,%r15
	je L_509565
L_319104:
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%r15),%r15
	movq $0x1,0x88(%rbp)
.p2align 0x4,,0x7
L_319105:
	cmpq $0x1,%r15
	je L_509564
L_319106:
	movq 0x8(%r15),%r14
	movq %r14,0x90(%rbp)
	movw 0x0(%r15),%r14w
	movw %r14w,0xA(%rbp)
	movq $0x1,0x98(%rbp)
L_319107:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_509563
.p2align 0x4,,0x7
L_319108:
	movq $0x22A9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movzwl 0xA(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x98(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x90(%rbp),%r14
	cmpq $0x1,%r14
	je L_509444
L_319109:
	movq %r15,0x98(%rbp)
	movw 0x0(%r14),%r15w
	movq 0x8(%r14),%r14
	movq %r14,0x90(%rbp)
	movw %r15w,0xA(%rbp)
	jmp L_319107
.p2align 0x4
L_509444:
L_319110:
	movq 0x88(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0x88(%rbp)
L_319111:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_509562
.p2align 0x4,,0x7
L_319112:
	movq $0x22A9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movzwl 0xA(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x90(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x88(%rbp),%r14
	cmpq $0x1,%r14
	je L_509445
L_319113:
	movq %r15,0x90(%rbp)
	movw 0x0(%r14),%r15w
	movq 0x8(%r14),%r14
	movq %r14,0x88(%rbp)
	movw %r15w,0xA(%rbp)
	jmp L_319111
.p2align 0x4
L_509445:
L_319115:
	movq 0x38(%rbp),%r14
	cmpq $0x1,%r14
	je L_509446
L_319116:
	movq %r15,0x88(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x38(%rbp)
	jmp L_319105
.p2align 0x4
L_509446:
L_319117:
	movq %r15,0x38(%rbp)
L_319118:
	movq 0x80(%rbp),%r15
	cmpq $0x1,%r15
	je L_509561
L_319119:
	movq 0x8(%r15),%r14
	movq %r14,0x88(%rbp)
	movw 0x0(%r15),%r14w
	movw %r14w,0xA(%rbp)
	movq $0x1,0x90(%rbp)
.p2align 0x4,,0x7
L_319120:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_509560
.p2align 0x4,,0x7
L_319121:
	movq 0x90(%rbp),%r13
	cmpq $0x1,%r13
	je L_319128
L_319122:
	movq 0x8(%r13),%r14
	movw 0x0(%r13),%r15w
.p2align 0x4,,0x7
L_319123:
	movw 0xA(%rbp),%r13w
	movw %r13w,%r11w
	shrw $0x8,%r11w
	movb %r11b,%r10b
	movw %r15w,%r11w
	shrw $0x8,%r11w
	movb %r11b,%r9b
	cmpb %r9b,%r10b
	jne L_509556
L_319694:
	movb %r13b,%r11b
	movb %r15b,%r13b
	cmpb %r13b,%r11b
	je L_509554
L_319695:
	cmpq $0x1,%r14
	je L_509447
L_319696:
	movw 0x0(%r14),%r15w
	movq 0x8(%r14),%r14
	jmp L_319123
.p2align 0x4
L_509447:
L_319697:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_509553
.p2align 0x4,,0x7
L_319128:
	movq $0x22A9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movzwl 0xA(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x90(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x88(%rbp),%r14
	cmpq $0x1,%r14
	je L_509448
L_319129:
	movq %r15,0x90(%rbp)
	movw 0x0(%r14),%r15w
	movq 0x8(%r14),%r14
	movq %r14,0x88(%rbp)
	movw %r15w,0xA(%rbp)
	jmp L_319120
.p2align 0x4
L_509448:
L_319131:
	movq 0x38(%rbp),%r14
	cmpq $0x1,%r14
	je L_509552
L_319132:
	movq %r15,0x88(%rbp)
	movw 0x0(%r14),%r15w
	movq 0x8(%r14),%r14
	movq %r14,0x38(%rbp)
	movw %r15w,0xA(%rbp)
.p2align 0x4,,0x7
L_319133:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_509551
.p2align 0x4,,0x7
L_319134:
	movq 0x88(%rbp),%r13
	cmpq $0x1,%r13
	je L_319141
L_319135:
	movq 0x8(%r13),%r14
	movw 0x0(%r13),%r15w
.p2align 0x4,,0x7
L_319136:
	movw 0xA(%rbp),%r13w
	movw %r13w,%r11w
	shrw $0x8,%r11w
	movb %r11b,%r10b
	movw %r15w,%r11w
	shrw $0x8,%r11w
	movb %r11b,%r9b
	cmpb %r9b,%r10b
	jne L_509547
L_319678:
	movb %r13b,%r11b
	movb %r15b,%r13b
	cmpb %r11b,%r13b
	je L_509545
L_319679:
	cmpq $0x1,%r14
	je L_509449
L_319680:
	movw 0x0(%r14),%r15w
	movq 0x8(%r14),%r14
	jmp L_319136
.p2align 0x4
L_509449:
L_319681:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_509544
.p2align 0x4,,0x7
L_319141:
	movq $0x22A9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movzwl 0xA(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x88(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x38(%rbp),%r14
	cmpq $0x1,%r14
	je L_509450
L_319142:
	movq %r15,0x88(%rbp)
	movw 0x0(%r14),%r15w
	movq 0x8(%r14),%r14
	movq %r14,0x38(%rbp)
	movw %r15w,0xA(%rbp)
	jmp L_319133
.p2align 0x4
L_509450:
L_319143:
	movq %r15,0x38(%rbp)
L_319144:
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_509543
L_319145:
	movw 0x0(%r15),%r14w
	movq 0x8(%r15),%r15
	movq %r15,0x28(%rbp)
	movw %r14w,0xA(%rbp)
	movq $0x1,0x88(%rbp)
.p2align 0x4,,0x7
L_319146:
	cmpq $0x1,0x38(%rbp)
	jne L_509542
.p2align 0x4,,0x7
L_319153:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_509541
.p2align 0x4,,0x7
L_319154:
	movq $0x22A9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movzwl 0xA(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x88(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_509451
L_319155:
	movq %r15,0x88(%rbp)
	movw 0x0(%r14),%r15w
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	movw %r15w,0xA(%rbp)
	jmp L_319146
.p2align 0x4
L_509451:
L_319156:
	movq %r15,0x28(%rbp)
L_319157:
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_509540
L_319158:
	movq 0x8(%r14),%r13
	movq %r13,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq $0x1,0x88(%rbp)
.p2align 0x4,,0x7
L_319159:
L_319160:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_319161
L_319665:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x115E,%r14
	je L_509538
L_319161:
	movq $0x1,0x90(%rbp)
.p2align 0x4,,0x7
L_319162:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_509537
.p2align 0x4,,0x7
L_319163:
	movq $0x22AB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x90(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x88(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x38(%rbp),%r14
	cmpq $0x1,%r14
	je L_509452
L_319164:
	movq %r15,0x88(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x38(%rbp)
	jmp L_319159
.p2align 0x4
L_509452:
L_319165:
	movq 0x88(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x90(%rbp),%r15
	movq $0x1,0x88(%rbp)
.p2align 0x4,,0x7
L_319166:
	cmpq $0x1,%r15
	je L_509536
L_319167:
	movq 0x8(%r15),%r14
	movq %r14,0x90(%rbp)
	movw 0x0(%r15),%r14w
	movw %r14w,0xA(%rbp)
	movq $0x1,0x98(%rbp)
L_319168:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_509535
.p2align 0x4,,0x7
L_319169:
	movq $0x22A9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movzwl 0xA(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x98(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x90(%rbp),%r14
	cmpq $0x1,%r14
	je L_509453
L_319170:
	movq %r15,0x98(%rbp)
	movw 0x0(%r14),%r15w
	movq 0x8(%r14),%r14
	movq %r14,0x90(%rbp)
	movw %r15w,0xA(%rbp)
	jmp L_319168
.p2align 0x4
L_509453:
L_319171:
	movq 0x88(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0x88(%rbp)
L_319172:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_509534
.p2align 0x4,,0x7
L_319173:
	movq $0x22A9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movzwl 0xA(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x90(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x88(%rbp),%r14
	cmpq $0x1,%r14
	je L_509454
L_319174:
	movq %r15,0x90(%rbp)
	movw 0x0(%r14),%r15w
	movq 0x8(%r14),%r14
	movq %r14,0x88(%rbp)
	movw %r15w,0xA(%rbp)
	jmp L_319172
.p2align 0x4
L_509454:
L_319176:
	movq 0x38(%rbp),%r14
	cmpq $0x1,%r14
	je L_509455
L_319177:
	movq %r15,0x88(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x38(%rbp)
	jmp L_319166
.p2align 0x4
L_509455:
L_319178:
	movq %r15,0x38(%rbp)
L_319179:
	movq 0x18(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x88(%rbp)
	cmpq $0x1,%r14
	je L_509533
L_319180:
	movq 0x8(%r14),%r15
	movq %r15,0x90(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x98(%rbp)
	movq $0x1,0xA0(%rbp)
.p2align 0x4,,0x7
L_319181:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_509532
.p2align 0x4,,0x7
L_319182:
	movq $0x2365,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x98(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xA0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x90(%rbp),%r14
	cmpq $0x1,%r14
	je L_509456
L_319183:
	movq %r15,0xA0(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x90(%rbp)
	movq %r15,0x98(%rbp)
	jmp L_319181
.p2align 0x4
L_509456:
L_319184:
	movq 0xA0(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq $0x1,0xA0(%rbp)
.p2align 0x4,,0x7
L_319185:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_509531
.p2align 0x4,,0x7
L_319186:
	movq 0x98(%rbp),%r15
	movq 0x18(%r15),%r14
	movq $0x22B9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0xA0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x90(%rbp),%r14
	cmpq $0x1,%r14
	je L_509457
L_319187:
	movq %r15,0xA0(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x90(%rbp)
	movq %r15,0x98(%rbp)
	jmp L_319185
.p2align 0x4
L_509457:
L_319188:
	movq %r15,0x90(%rbp)
L_319189:
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_319273
L_319190:
	movw 0x0(%r15),%r14w
	movq 0x8(%r15),%r15
	movq %r15,0x28(%rbp)
	movw %r14w,0xA(%rbp)
	movq $0x1,0x98(%rbp)
.p2align 0x4,,0x7
L_319191:
	movq 0x70(%rbp),%r14
	cmpq $0x1,%r14
	je L_509529
L_319192:
	movq 0x8(%r14),%r13
	movq %r13,0xA0(%rbp)
	movq 0x0(%r14),%r15
	movl $0x0,0xC(%rbp)
.p2align 0x4,,0x7
L_319193:
	movq 0x8(%r15),%r13
	movq 0x10(%r15),%r11
	movw 0x0(%r15),%r10w
	movw 0xA(%rbp),%r9w
	movw %r9w,%r8w
	shrw $0x8,%r8w
	movb %r8b,%spl
	movw %r10w,%r8w
	shrw $0x8,%r8w
	movb %r8b,%sil
	cmpb %sil,%spl
	jne L_509528
L_319618:
	movb %r9b,%r8b
	movb %r10b,%r9b
	cmpb %r9b,%r8b
	jne L_509527
L_319620:
	cmpq $0x1,0x20(%rbp)
	je L_509525
L_319621:
	cmpq $0x1,%r11
	je L_319627
L_319622:
	movq 0x8(%r11),%r15
	movq 0x0(%r11),%r11
	movq %r11,%r14
.p2align 0x4,,0x7
L_319623:
	movq 0x20(%rbp),%r11
	movq 0x10(%r11),%r10
	cmpq %r10,0x10(%r14)
	je L_509522
L_319624:
	cmpq $0x1,%r15
	je L_509458
L_319625:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_319623
.p2align 0x4
L_509458:
L_319627:
	cmpq $0x1,%r13
	je L_319634
L_319628:
	movq 0x8(%r13),%r15
	movq 0x0(%r13),%r13
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_319629:
	movq 0x20(%rbp),%r14
	movq 0x10(%r14),%r11
	cmpq %r11,0x10(%r13)
	je L_509518
L_319630:
	cmpq $0x1,%r15
	je L_509459
L_319631:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	jmp L_319629
.p2align 0x4
L_509459:
L_319632:
	testl %ecx,%ecx
	jnz L_509516
L_319634:
	movl 0xC(%rbp),%ecx
	subl $0x5,%ecx
	jo L_509515
.p2align 0x4,,0x7
L_319615:
	movq 0xA0(%rbp),%r14
	cmpq $0x1,%r14
	je L_509460
L_319616:
	movl %ecx,0xC(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0xA0(%rbp)
	jmp L_319193
.p2align 0x4
L_509460:
L_319617:
	movl %ecx,0xC(%rbp)
.p2align 0x4,,0x7
L_319200:
	movw 0xA(%rbp),%r15w
	movb %r15b,0x9(%rbp)
	movq 0x88(%rbp),%r15
	cmpq $0x1,%r15
	je L_509514
L_319201:
	movq 0x8(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xA8(%rbp)
	movq $0x1,0xB0(%rbp)
L_319202:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_509513
.p2align 0x4,,0x7
L_319203:
	movq 0xA8(%rbp),%r15
	movw 0x10(%r15),%r14w
	movb %r14b,%r13b
	cmpb 0x9(%rbp),%r13b
	je L_509511
L_319204:
	movq 0xA0(%rbp),%r15
	cmpq $0x1,%r15
	je L_509461
L_319205:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0xA0(%rbp)
	movq %r14,0xA8(%rbp)
	jmp L_319202
.p2align 0x4
L_509461:
L_319206:
	cmpq $0x1,0xB0(%rbp)
	jne L_509510
L_319606:
	movl $0x0,0xA0(%rbp)
	movl $0x1,0xA4(%rbp)
	movl $0x0,0xA8(%rbp)
	movq $0x0,0xB0(%rbp)
	movl $0x0,0xAC(%rbp)
	movl $0x0,0xB8(%rbp)
.p2align 0x4,,0x7
L_319213:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_509509
.p2align 0x4,,0x7
L_319214:
	movq $0x1177,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x28,%r12
	movq 0xB0(%rbp),%r14
	movq %r14,0x0(%r15)
	movl 0xA0(%rbp),%r14d
	movl %r14d,0x8(%r15)
	movl 0xA4(%rbp),%r14d
	movl %r14d,0xC(%r15)
	movl 0xA8(%rbp),%r14d
	movl %r14d,0x10(%r15)
	movl 0xC(%rbp),%r14d
	movl %r14d,0x14(%r15)
	movl 0xAC(%rbp),%r14d
	movl %r14d,0x18(%r15)
	movl 0xB8(%rbp),%r14d
	movl %r14d,0x1C(%r15)
	movq $0x11A1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movzwl 0xA(%rbp),%r15d
	movl %r15d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x2563,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r14,0x0(%r15)
	movq 0x98(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x28(%rbp),%r13
	cmpq $0x1,%r13
	je L_509462
L_319215:
	movq %r15,0x98(%rbp)
	movw 0x0(%r13),%r15w
	movq 0x8(%r13),%r13
	movq %r13,0x28(%rbp)
	movw %r15w,0xA(%rbp)
	jmp L_319191
.p2align 0x4
L_509462:
L_319216:
	movq %r14,0x28(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq $0x1,0x38(%rbp)
.p2align 0x4,,0x7
L_319217:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_509508
.p2align 0x4,,0x7
L_319218:
	movq 0x38(%rbp),%r15
	cmpq $0x1,%r15
	je L_509507
L_319219:
	movq 0x0(%r15),%r14
	movq %r14,0x70(%rbp)
	movq $0x1,0x78(%rbp)
	movq %r15,0x90(%rbp)
	movq 0x8(%r15),%r15
	movq %r15,0x38(%rbp)
L_319220:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_509506
.p2align 0x4,,0x7
L_319221:
	movq 0x28(%rbp),%r13
	movq 0x8(%r13),%r11
	movl 0x8(%r11),%r10d
	movl 0xC(%r11),%r9d
	movl 0x10(%r11),%r8d
	movl 0x14(%r11),%esp
	movq 0x0(%r11),%r14
	movl 0x18(%r11),%esi
	movl 0x1C(%r11),%ebx
	movq 0x70(%rbp),%r13
	movq 0x8(%r13),%r11
	movl 0x8(%r11),%edi
	movl 0xC(%r11),%edx
	movl 0x10(%r11),%eax
	movl 0x14(%r11),%r15d
	movq 0x0(%r11),%rcx
	movq %r12,(gcState+0x0)(%rip)
	movl 0x18(%r11),%r12d
	movl %r10d,(localWord32+0x0)(%rip)
	movl 0x1C(%r11),%r10d
	testl %ebx,%ebx
	jnz L_509505
L_319506:
	cmpl $0x1,%r10d
	je L_509504
	movq (gcState+0x0)(%rip),%r13
	movl %r12d,(localWord32+0x28)(%rip)
	movq %r13,%r12
	movl %r15d,(localWord32+0x24)(%rip)
	movq %rcx,%r15
	movl %r10d,%ecx
	movl %eax,(localWord32+0x20)(%rip)
	movl %edx,(localWord32+0x1C)(%rip)
	movl %edi,(localWord32+0x18)(%rip)
	movl %r9d,(localWord32+0x4)(%rip)
	movl %r8d,(localWord32+0x8)(%rip)
	movl %esp,(localWord32+0xC)(%rip)
	movl %esi,(localWord32+0x10)(%rip)
L_319222:
	cmpl %ebx,%ecx
	jne L_319224
L_319468:
	movl (localWord32+0x10)(%rip),%ebx
	testl %ebx,%ebx
	jnz L_509502
L_319504:
	movl (localWord32+0x28)(%rip),%ecx
	cmpl $0x1,%ecx
	je L_319491
L_319469:
	cmpl %ebx,%ecx
	jne L_319224
L_319471:
	movq %r14,%r13
	andq $0x1,%r13
	jnz L_509497
L_319472:
	movq %r15,%r13
	andq $0x1,%r13
	cmpq $0x1,%r13
	je L_319491
	movl (localWord32+0x24)(%rip),%ecx
	movl (localWord32+0x20)(%rip),%ebx
L_319473:
	cmpq %r15,%r14
	je L_319479
L_319474:
	movq %r14,%r13
	andq $0x1,%r13
	cmpq $0x1,%r13
	jne L_319224
L_319475:
	shrq $0x1,%r14
	movl %r14d,%r13d
	movq %r15,%r14
	andq $0x1,%r14
	cmpq $0x1,%r14
	jne L_319224
L_319476:
	shrq $0x1,%r15
	movl %r15d,%r14d
	cmpl %r13d,%r14d
	jne L_319224
L_319479:
	movl (localWord32+0xC)(%rip),%r15d
	cmpl %r15d,%ecx
	jl L_319491
L_319480:
	cmpl %r15d,%ecx
	jne L_319224
L_319482:
	movl (localWord32+0x8)(%rip),%r15d
	cmpl %ebx,%r15d
	jl L_319491
L_319483:
	cmpl %r15d,%ebx
	jne L_319224
L_319485:
	movl (localWord32+0x4)(%rip),%ebx
	cmpl $0x1,%ebx
	jne L_509487
L_319494:
	movl (localWord32+0x1C)(%rip),%ecx
	testl %ecx,%ecx
	jz L_319491
L_319486:
	cmpl %ebx,%ecx
	jne L_319224
L_319488:
	movl (localWord32+0x18)(%rip),%r15d
	cmpl %r15d,(localWord32+0x0)(%rip)
	jl L_509483
L_319224:
	movq $0x2563,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x38(%rbp),%r14
	cmpq $0x1,%r14
	je L_509463
L_319225:
	movq %r15,0x78(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x70(%rbp)
	movq %r14,0x90(%rbp)
	movq 0x8(%r14),%r14
	movq %r14,0x38(%rbp)
	jmp L_319220
.p2align 0x4
L_509463:
L_319227:
	movq $0x2563,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	cmpq $0x1,%r15
	je L_509482
L_319228:
	movq %r14,0x70(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
L_319229:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_509481
.p2align 0x4,,0x7
L_319230:
	movq $0x2563,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_509464
L_319231:
	movq %r15,0x70(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x38(%rbp)
	jmp L_319229
.p2align 0x4
L_509464:
L_319233:
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_509465
L_319234:
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x28(%rbp)
	jmp L_319217
.p2align 0x4
L_509465:
L_319235:
	cmpq $0x1,%r15
	je L_509475
L_319236:
	movq 0x8(%r15),%r13
	movq %r13,0x50(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x58(%rbp)
	movq $0x1,0x60(%rbp)
.p2align 0x4,,0x7
L_319237:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_509474
.p2align 0x4,,0x7
L_319238:
	movq 0x58(%rbp),%r15
	movw 0x0(%r15),%r14w
	movq $0x22A9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movzwl %r14w,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x60(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x50(%rbp),%r13
	cmpq $0x1,%r13
	je L_509466
L_319239:
	movq %r15,0x60(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x50(%rbp)
	movq %r15,0x58(%rbp)
	jmp L_319237
.p2align 0x4
L_509466:
L_319240:
	movw %r14w,0x50(%rbp)
	movq 0x60(%rbp),%r15
.p2align 0x4,,0x7
L_319241:
	cmpq $0x1,%r15
	je L_509467
L_319242:
	movw 0x0(%r15),%r14w
	movq 0x8(%r15),%r15
	movw %r14w,0x50(%rbp)
	jmp L_319241
.p2align 0x4
L_509467:
L_319243:
	movw 0x50(%rbp),%r15w
	movb %r15b,0x52(%rbp)
	movq 0x88(%rbp),%r15
	cmpq $0x1,%r15
	je L_319263
L_319244:
	movq 0x8(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x60(%rbp)
	movq $0x1,0x68(%rbp)
.p2align 0x4,,0x7
L_319245:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_509472
.p2align 0x4,,0x7
L_319246:
	movq 0x60(%rbp),%r15
	movw 0x10(%r15),%r14w
	movb %r14b,%r13b
	cmpb %r13b,0x52(%rbp)
	je L_509470
L_319247:
	movq 0x58(%rbp),%r15
	cmpq $0x1,%r15
	je L_509468
L_319248:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x58(%rbp)
	movq %r14,0x60(%rbp)
	jmp L_319245
.p2align 0x4
L_509468:
L_319249:
	movq 0x68(%rbp),%r14
	cmpq $0x1,%r14
	je L_509469
L_319250:
	movq 0x8(%r14),%r15
	movq %r15,0x58(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x60(%rbp)
	movq $0x1,0x68(%rbp)
L_319251:
	movq 0x60(%rbp),%r15
	movw 0x10(%r15),%r14w
	movw %r14w,0x7A(%rbp)
	movw 0x50(%rbp),%r15w
	movw %r15w,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_319252+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp coincide_0
.p2align 0x4
L_509469:
L_319263:
	movw 0x50(%rbp),%r15w
	movw %r15w,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_509470:
L_319264:
	movq $0x2365,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x58(%rbp),%r14
	cmpq $0x1,%r14
	je L_509471
L_319265:
	movq %r15,0x68(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x58(%rbp)
	movq %r15,0x60(%rbp)
	jmp L_319245
.p2align 0x4
L_509471:
L_319266:
	movq 0x68(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq $0x1,0x68(%rbp)
	jmp L_319251
.p2align 0x4
L_509472:
L_319267:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_319268+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_319268
.p2align 0x4
.long 0x4DA
L_319268:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	jmp L_319246
.p2align 0x4
L_509474:
L_319270:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_319271+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_319271
.p2align 0x4
.long 0x4E42
L_319271:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	jmp L_319238
.p2align 0x4
L_509475:
L_319273:
	movb 0x8(%rbp),%r15b
	cmpb $0x1,%r15b
	je L_509480
	cmpb $0x2,%r15b
	je L_509479
	cmpb $0x3,%r15b
	je L_509478
	cmpb $0x4,%r15b
	je L_509477
	cmpb $0x5,%r15b
	je L_509476
L_319274:
	movq (globalObjptr+0xE7B0)(%rip),%r15
	movq %r15,0x90(%rbp)
	addq $0x90,%rbp
	leaq (toString_409+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_509476:
L_319464:
	movq (globalObjptr+0xE808)(%rip),%r15
	movq %r15,0x90(%rbp)
	addq $0x90,%rbp
	leaq (toString_409+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_509477:
L_319463:
	movq (globalObjptr+0xE800)(%rip),%r14
	movq %r14,0x90(%rbp)
	addq $0x90,%rbp
	leaq (toString_409+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_509478:
L_319462:
	movq (globalObjptr+0xE7F8)(%rip),%r14
	movq %r14,0x90(%rbp)
	addq $0x90,%rbp
	leaq (toString_409+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_509479:
L_319461:
	movq (globalObjptr+0xE7F0)(%rip),%r14
	movq %r14,0x90(%rbp)
	addq $0x90,%rbp
	leaq (toString_409+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_509480:
L_319460:
	movq (globalObjptr+0xE7E8)(%rip),%r14
	movq %r14,0x90(%rbp)
	addq $0x90,%rbp
	leaq (toString_409+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_509481:
L_319465:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_319466+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_319466
.p2align 0x4
.long 0x4E5C
L_319466:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	jmp L_319230
.p2align 0x4
L_509482:
L_319467:
	movq %r14,%r15
	jmp L_319233
.p2align 0x4
L_509483:
L_319491:
	movq $0x2563,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x90(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x78(%rbp),%r14
	cmpq $0x1,%r14
	je L_319233
L_319492:
	movq %r15,0x70(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x38(%rbp)
	jmp L_319229
.p2align 0x4
L_509487:
	movl (localWord32+0x1C)(%rip),%ecx
	jmp L_319486
.p2align 0x4
L_509497:
L_319500:
	movq %r14,%r13
	shrq $0x1,%r13
	movl %r13d,%r11d
	movq %r15,%r13
	andq $0x1,%r13
	cmpq $0x1,%r13
	jne L_509499
L_319501:
	movq %r15,%r13
	shrq $0x1,%r13
	movl %r13d,%r10d
	cmpl %r11d,%r10d
	jl L_319491
	movl (localWord32+0x24)(%rip),%ecx
	movl (localWord32+0x20)(%rip),%ebx
	jmp L_319473
.p2align 0x4
L_509499:
	movl (localWord32+0x24)(%rip),%ecx
	movl (localWord32+0x20)(%rip),%ebx
	jmp L_319473
.p2align 0x4
L_509502:
	movl (localWord32+0x28)(%rip),%ecx
	jmp L_319469
.p2align 0x4
L_509504:
	movq (gcState+0x0)(%rip),%r12
	jmp L_319491
.p2align 0x4
L_509505:
	movq (gcState+0x0)(%rip),%r13
	movl %r12d,(localWord32+0x28)(%rip)
	movq %r13,%r12
	movl %r15d,(localWord32+0x24)(%rip)
	movq %rcx,%r15
	movl %r10d,%ecx
	movl %esi,(localWord32+0x10)(%rip)
	movl %esp,(localWord32+0xC)(%rip)
	movl %r8d,(localWord32+0x8)(%rip)
	movl %r9d,(localWord32+0x4)(%rip)
	movl %edi,(localWord32+0x18)(%rip)
	movl %edx,(localWord32+0x1C)(%rip)
	movl %eax,(localWord32+0x20)(%rip)
	jmp L_319222
.p2align 0x4
L_509506:
L_319508:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_319509+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_319509
.p2align 0x4
.long 0x4E5D
L_319509:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	jmp L_319221
.p2align 0x4
L_509507:
L_319510:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_319227
.p2align 0x4
L_509508:
L_319511:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_319512+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_319512
.p2align 0x4
.long 0x4E5E
L_319512:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	jmp L_319218
.p2align 0x4
L_509509:
L_319513:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_319514+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_319514
.p2align 0x4
.long 0x4E5F
L_319514:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	jmp L_319214
.p2align 0x4
L_509510:
L_319207:
	movq 0xB0(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0xA0(%rbp)
	movq 0x0(%r14),%r15
	movl $0x0,0xA8(%rbp)
	movl $0x1,0xAC(%rbp)
	movl $0x0,0xB0(%rbp)
	movq $0x0,0xB8(%rbp)
	movl $0x0,0xB4(%rbp)
	movl $0x0,0xC0(%rbp)
L_319208:
	movl 0x8(%r15),%r14d
	movl %r14d,0xC4(%rbp)
	movl 0xC(%r15),%r14d
	movl %r14d,0xC8(%rbp)
	movw 0x10(%r15),%r14w
	movw %r14w,0xCC(%rbp)
	movq 0x18(%r15),%r13
	movq %r13,0xD0(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0xD8(%rbp)
	movw 0xA(%rbp),%r15w
	movw %r15w,0xE8(%rbp)
	movw %r14w,0xEA(%rbp)
	addq $0xE8,%rbp
	leaq (L_319209+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp coincide_0
.p2align 0x4
L_509511:
L_319607:
	movq $0x2365,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xA8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xB0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xA0(%rbp),%r14
	cmpq $0x1,%r14
	je L_509512
L_319608:
	movq %r15,0xB0(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0xA0(%rbp)
	movq %r15,0xA8(%rbp)
	jmp L_319202
.p2align 0x4
L_509512:
L_319609:
	movq 0xB0(%rbp),%r14
	movq %r14,0xA0(%rbp)
	movq 0xA8(%rbp),%r15
	movl $0x0,0xA8(%rbp)
	movl $0x1,0xAC(%rbp)
	movl $0x0,0xB0(%rbp)
	movq $0x0,0xB8(%rbp)
	movl $0x0,0xB4(%rbp)
	movl $0x0,0xC0(%rbp)
	jmp L_319208
.p2align 0x4
L_509513:
L_319610:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_319611+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_319611
.p2align 0x4
.long 0x4E60
L_319611:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	jmp L_319203
.p2align 0x4
L_509514:
L_319612:
	movl $0x0,0xA0(%rbp)
	movl $0x1,0xA4(%rbp)
	movl $0x0,0xA8(%rbp)
	movq $0x0,0xB0(%rbp)
	movl $0x0,0xAC(%rbp)
	movl $0x0,0xB8(%rbp)
	jmp L_319213
.p2align 0x4
L_509515:
L_319527:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_509516:
L_319637:
	movl 0xC(%rbp),%ecx
	addl $0x5,%ecx
	jo L_319527
	jmp L_319615
.p2align 0x4
L_509518:
L_319639:
	testl %ecx,%ecx
	jnz L_319637
L_319640:
	movq 0xA0(%rbp),%r14
	cmpq $0x1,%r14
	je L_319200
L_319641:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0xA0(%rbp)
	jmp L_319193
.p2align 0x4
L_509522:
L_319645:
	cmpq $0x1,%r13
	je L_319637
L_319646:
	movq 0x8(%r13),%r15
	movq 0x0(%r13),%r13
	movl $0x1,%ecx
	jmp L_319629
.p2align 0x4
L_509525:
L_319649:
	movl 0xC(%rbp),%ecx
	subl $0x5,%ecx
	jo L_319527
	jmp L_319615
.p2align 0x4
L_509527:
	movw %r10w,%r15w
L_319195:
	movw %r15w,0xB0(%rbp)
	movw 0xA(%rbp),%r15w
	movw %r15w,0xB2(%rbp)
	addq $0xB0,%rbp
	leaq (L_319196+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp coincide_0
.p2align 0x4
L_509528:
	movw %r10w,%r15w
	jmp L_319195
.p2align 0x4
L_509529:
L_319651:
	movl $0x0,0xC(%rbp)
	jmp L_319200
.p2align 0x4
L_509531:
L_319653:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_319654+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_319654
.p2align 0x4
.long 0x4E61
L_319654:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	jmp L_319186
.p2align 0x4
L_509532:
L_319655:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_319656+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_319656
.p2align 0x4
.long 0x4E61
L_319656:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	jmp L_319182
.p2align 0x4
L_509533:
L_319657:
	movq $0x1,0x90(%rbp)
	jmp L_319189
.p2align 0x4
L_509534:
L_319658:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_319659+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_319659
.p2align 0x4
.long 0x4E5D
L_319659:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	jmp L_319173
.p2align 0x4
L_509535:
L_319660:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_319661+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_319661
.p2align 0x4
.long 0x4E62
L_319661:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	jmp L_319169
.p2align 0x4
L_509536:
L_319662:
	movq 0x88(%rbp),%r15
	jmp L_319176
.p2align 0x4
L_509537:
L_319663:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_319664+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_319664
.p2align 0x4
.long 0x4E5D
L_319664:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	jmp L_319163
.p2align 0x4
L_509538:
L_319666:
	movq 0x0(%r15),%r14
	movq %r14,0x98(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0xA0(%rbp)
	addq $0x98,%rbp
	leaq (L_319667+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp supportedRegistersP_0
.p2align 0x4
L_509540:
L_319668:
	movq $0x1,0x38(%rbp)
	jmp L_319179
.p2align 0x4
L_509541:
L_319669:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_319670+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_319670
.p2align 0x4
.long 0x4E64
L_319670:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	jmp L_319154
.p2align 0x4
L_509542:
L_319147:
	movq 0x38(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x90(%rbp)
	movw 0x0(%r14),%r15w
L_319148:
	movw %r15w,0xA0(%rbp)
	movw 0xA(%rbp),%r15w
	movw %r15w,0xA2(%rbp)
	addq $0xA0,%rbp
	leaq (L_319149+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp coincide_0
.p2align 0x4
L_509543:
L_319675:
	movq $0x1,0x28(%rbp)
	jmp L_319157
.p2align 0x4
L_509544:
L_319683:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_319684+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_319684
.p2align 0x4
.long 0x4E64
L_319684:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	jmp L_319141
.p2align 0x4
L_509545:
L_319685:
	movq 0x38(%rbp),%r15
	cmpq $0x1,%r15
	je L_509546
L_319686:
	movw 0x0(%r15),%r14w
	movq 0x8(%r15),%r15
	movq %r15,0x38(%rbp)
	movw %r14w,0xA(%rbp)
	jmp L_319133
.p2align 0x4
L_509546:
L_319687:
	movq 0x88(%rbp),%r15
	movq %r15,0x38(%rbp)
	jmp L_319144
.p2align 0x4
L_509547:
L_319137:
	cmpq $0x1,%r14
	je L_509548
L_319138:
	movw 0x0(%r14),%r15w
	movq 0x8(%r14),%r14
	jmp L_319136
.p2align 0x4
L_509548:
L_319139:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_319141
L_319676:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_319677+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_319677
.p2align 0x4
.long 0x4E64
L_319677:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	jmp L_319141
.p2align 0x4
L_509551:
L_319689:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_319690+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_319690
.p2align 0x4
.long 0x4E64
L_319690:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	jmp L_319134
.p2align 0x4
L_509552:
L_319691:
	movq %r15,0x38(%rbp)
	jmp L_319144
.p2align 0x4
L_509553:
L_319699:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_319700+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_319700
.p2align 0x4
.long 0x4E5D
L_319700:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	jmp L_319128
.p2align 0x4
L_509554:
L_319701:
	movq 0x88(%rbp),%r15
	cmpq $0x1,%r15
	je L_509555
L_319702:
	movw 0x0(%r15),%r14w
	movq 0x8(%r15),%r15
	movq %r15,0x88(%rbp)
	movw %r14w,0xA(%rbp)
	jmp L_319120
.p2align 0x4
L_509555:
L_319703:
	movq 0x90(%rbp),%r14
	xchgq %r14,%r15
	jmp L_319131
.p2align 0x4
L_509556:
L_319124:
	cmpq $0x1,%r14
	je L_509557
L_319125:
	movw 0x0(%r14),%r15w
	movq 0x8(%r14),%r14
	jmp L_319123
.p2align 0x4
L_509557:
L_319126:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_319128
L_319692:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_319693+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_319693
.p2align 0x4
.long 0x4E5D
L_319693:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	jmp L_319128
.p2align 0x4
L_509560:
L_319705:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_319706+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_319706
.p2align 0x4
.long 0x4E5D
L_319706:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	jmp L_319121
.p2align 0x4
L_509561:
L_319707:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_319131
.p2align 0x4
L_509562:
L_319708:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_319709+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_319709
.p2align 0x4
.long 0x4E5D
L_319709:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	jmp L_319112
.p2align 0x4
L_509563:
L_319710:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_319711+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_319711
.p2align 0x4
.long 0x4E62
L_319711:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	jmp L_319108
.p2align 0x4
L_509564:
L_319712:
	movq 0x88(%rbp),%r15
	jmp L_319115
.p2align 0x4
L_509565:
L_319713:
	movq $0x1,0x38(%rbp)
	jmp L_319118
.p2align 0x4
L_509566:
L_319733:
	movq 0x38(%rbp),%r14
	movq 0x0(%r14),%r13
	movl 0x0(%r13),%r11d
	movl 0x4(%r13),%r10d
	movl %r10d,%r14d
	andl $0x1,%r14d
	jz L_509568
L_319737:
	shrl $0x1,%r10d
	movw %r10w,%r14w
	movl %r11d,%r13d
	andl $0x1,%r13d
	jz L_509567
L_319739:
	shrl $0x1,%r11d
	movw %r11w,%r13w
	movq $0x22A9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movzwl %r13w,%r11d
	movl %r11d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x1,0x8(%r15)
	movq $0x22A9,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movzwl %r14w,%r11d
	movl %r11d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,%r15
	jmp L_319100
.p2align 0x4
L_509567:
L_319738:
	movq $0x22A9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movzwl %r14w,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x1,0x8(%r15)
	jmp L_319100
.p2align 0x4
L_509568:
L_319734:
	movl %r11d,%r15d
	andl $0x1,%r15d
	jz L_319099
L_319736:
	shrl $0x1,%r11d
	movw %r11w,%r15w
	movq $0x22A9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movzwl %r15w,%r13d
	movl %r13d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x1,0x8(%r14)
	movq %r14,%r15
	jmp L_319100
.p2align 0x4
L_509570:
L_319715:
	movq 0x38(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x98(%rbp)
	movq 0x18(%rbp),%r15
	movq 0x18(%r15),%r14
	cmpq $0x1,%r14
	je L_509577
L_319716:
	movq 0x8(%r14),%r15
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0xA0(%rbp)
	movq $0x1,0xA8(%rbp)
L_319717:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_509576
.p2align 0x4,,0x7
L_319718:
	movq 0xA0(%rbp),%r15
	movq 0x18(%r15),%r14
	movq 0x98(%rbp),%r13
	movq 0x10(%r13),%r11
	cmpq %r11,0x10(%r14)
	je L_509574
L_319719:
	movq 0x38(%rbp),%r15
	cmpq $0x1,%r15
	je L_509571
L_319720:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x38(%rbp)
	movq %r14,0xA0(%rbp)
	jmp L_319717
.p2align 0x4
L_509571:
L_319721:
	movq 0xA8(%rbp),%r13
	cmpq $0x1,%r13
	je L_319099
L_319722:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r14
	xchgq %r11,%r15
L_319723:
	cmpq $0x1,%r15
	jne L_509572
L_319725:
	movw 0x10(%r14),%r15w
	movq $0x22A9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movzwl %r15w,%r13d
	movl %r13d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x1,0x8(%r14)
	movq %r14,%r15
	jmp L_319100
.p2align 0x4
L_509572:
L_319724:
	movq (globalObjptr+0x6A38)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_509574:
L_319727:
	movq $0x2365,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xA0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xA8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x38(%rbp),%r14
	cmpq $0x1,%r14
	je L_509575
L_319728:
	movq %r15,0xA8(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x38(%rbp)
	movq %r15,0xA0(%rbp)
	jmp L_319717
.p2align 0x4
L_509575:
L_319729:
	movq 0xA8(%rbp),%r15
	movq 0xA0(%rbp),%r13
	xchgq %r13,%r14
	jmp L_319723
.p2align 0x4
L_509576:
L_319730:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_319731+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_319731
.p2align 0x4
.long 0x4E65
L_319731:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	jmp L_319718
.p2align 0x4
L_509577:
L_319732:
	movq $0x1,%r15
	jmp L_319100
.p2align 0x4
L_509579:
L_319740:
	shrq $0x2,%r15
	movw %r15w,%r14w
	movq $0x22A9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movzwl %r14w,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x1,0x8(%r15)
	jmp L_319100
.p2align 0x4
L_509580:
L_319741:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_319742+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_319742
.p2align 0x4
.long 0x4E5D
L_319742:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	jmp L_319097
.p2align 0x4
L_509581:
L_319743:
	movq %r15,0x28(%rbp)
	movq $0x1,%r15
	jmp L_319103
.p2align 0x4
L_509582:
L_319748:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_509584
.p2align 0x4,,0x7
L_319749:
	movq $0x22A9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movzwl 0xA(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_319094
L_319750:
	movq %r15,0x38(%rbp)
	movw 0x0(%r14),%r15w
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	movw %r15w,0xA(%rbp)
	jmp L_319084
.p2align 0x4
L_509584:
L_319752:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_319753+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_319753
.p2align 0x4
.long 0x4E66
L_319753:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	jmp L_319749
.p2align 0x4
L_509585:
L_319088:
	cmpq $0x1,%r14
	je L_319091
L_319089:
	movw 0x0(%r14),%r15w
	movq 0x8(%r14),%r14
	jmp L_319087
.p2align 0x4
L_509587:
L_319085:
	movq (c_stackP+0x0)(%rip),%rsp
	movq (globalObjptr+0xC9C8)(%rip),%rdi
	xorq %rax,%rax
	call MLton_bug
.p2align 0x4
L_509588:
L_319763:
	movq $0x1,%r15
	jmp L_319094
.p2align 0x4
L_509589:
L_319758:
	cmpq $0x1,%r15
	je L_509590
L_319759:
	movq 0x8(%r15),%r13
	movq %r13,0x28(%rbp)
	movw 0x0(%r15),%r13w
	movw %r13w,0xA(%rbp)
	movq $0x1,0x38(%rbp)
	jmp L_319084
.p2align 0x4
L_509590:
L_319760:
	movq $0x1,%r15
	jmp L_319094
.p2align 0x4
L_509591:
L_319755:
	cmpq $0x1,%r11
	je L_509592
L_319756:
	movq 0x8(%r11),%r15
	movq %r15,0x28(%rbp)
	movw 0x0(%r11),%r15w
	movw %r15w,0xA(%rbp)
	movq $0x1,0x38(%rbp)
	jmp L_319084
.p2align 0x4
L_509592:
L_319757:
	movq $0x1,%r15
	jmp L_319094
.p2align 0x4
L_509593:
L_319081:
	cmpq $0x1,%r13
	je L_509594
L_319082:
	movq 0x8(%r13),%r15
	movq %r15,0x28(%rbp)
	movw 0x0(%r13),%r15w
	movw %r15w,0xA(%rbp)
	movq $0x1,0x38(%rbp)
	jmp L_319084
.p2align 0x4
L_509594:
L_319754:
	movq $0x1,%r15
	jmp L_319094
.p2align 0x4
L_509595:
L_319764:
	movq 0x18(%r14),%r15
	movq 0x10(%r14),%r13
	movq 0x8(%r14),%r11
	movq 0x0(%r14),%r10
	movb 0x8(%rbp),%r14b
	cmpb $0x2,%r14b
	je L_509602
	cmpb $0x3,%r14b
	je L_509600
	cmpb $0x4,%r14b
	je L_509598
	cmpb $0x5,%r14b
	je L_509596
	jmp L_319080
.p2align 0x4
L_509596:
L_319774:
	movq 0x10(%rbp),%r15
	cmpq $0x1,%r15
	je L_509597
L_319775:
	movq %r10,0x88(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq $0x1,0x90(%rbp)
	jmp L_319096
.p2align 0x4
L_509597:
L_319776:
	movq %r10,0x28(%rbp)
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_319103
.p2align 0x4
L_509598:
L_319771:
	movq 0x10(%rbp),%r13
	cmpq $0x1,%r13
	je L_509599
L_319772:
	movq %r15,0x88(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x28(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x38(%rbp)
	movq $0x1,0x90(%rbp)
	jmp L_319096
.p2align 0x4
L_509599:
L_319773:
	movq %r15,0x28(%rbp)
	movq $0x1,%r15
	jmp L_319103
.p2align 0x4
L_509600:
L_319768:
	movq 0x10(%rbp),%r15
	cmpq $0x1,%r15
	je L_509601
L_319769:
	movq %r11,0x88(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x28(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x38(%rbp)
	movq $0x1,0x90(%rbp)
	jmp L_319096
.p2align 0x4
L_509601:
L_319770:
	movq %r11,0x28(%rbp)
	movq $0x1,%r13
	xchgq %r13,%r15
	jmp L_319103
.p2align 0x4
L_509602:
L_319765:
	movq 0x10(%rbp),%r15
	cmpq $0x1,%r15
	je L_509603
L_319766:
	movq %r13,0x88(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x28(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x38(%rbp)
	movq $0x1,0x90(%rbp)
	jmp L_319096
.p2align 0x4
L_509603:
L_319767:
	movq %r13,0x28(%rbp)
	movq $0x1,%r13
	xchgq %r13,%r15
	jmp L_319103
.p2align 0x4
.long 0x10E7
L_319252:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movl 0x78(%rbp),%r15d
	movl %r15d,0x54(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_319253
L_319260:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_319261+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_319261
.p2align 0x4
.long 0x4DA
L_319261:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_319253:
	movl 0x54(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_509606
L_319254:
	movq 0x58(%rbp),%r15
	cmpq $0x1,%r15
	je L_509605
L_319255:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x58(%rbp)
	movq %r14,0x60(%rbp)
	jmp L_319251
.p2align 0x4
L_509605:
L_319256:
	movw 0x50(%rbp),%r14w
	movw %r14w,0x0(%rbp)
	movq 0x68(%rbp),%r14
	movq %r14,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_509606:
L_319257:
	movq $0x2365,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x58(%rbp),%r14
	cmpq $0x1,%r14
	je L_509607
L_319258:
	movq %r15,0x68(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x58(%rbp)
	movq %r15,0x60(%rbp)
	jmp L_319251
.p2align 0x4
L_509607:
L_319259:
	movq %r15,0x8(%rbp)
	movw 0x50(%rbp),%r15w
	movw %r15w,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4E43
toString_409:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq $0x1,0x90(%rbp)
	movq %r15,0x98(%rbp)
	addq $0x90,%rbp
	leaq (rev_411+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x4E41
L_319209:
	addq $0xFFFFFFFFFFFFFF18,%rbp
	movl 0xE8(%rbp),%r14d
	movl %r14d,0xE0(%rbp)
	testl %r14d,%r14d
	jnz L_509610
L_319210:
	movq 0xA0(%rbp),%r14
	cmpq $0x1,%r14
	je L_509609
L_319211:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0xA0(%rbp)
	jmp L_319208
.p2align 0x4
L_509609:
L_319212:
	movl 0xA8(%rbp),%r15d
	movl %r15d,0xA0(%rbp)
	movl 0xAC(%rbp),%r15d
	movl %r15d,0xA4(%rbp)
	movl 0xB0(%rbp),%r15d
	movl %r15d,0xA8(%rbp)
	movl 0xB4(%rbp),%r15d
	movl %r15d,0xAC(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0xB0(%rbp)
	movl 0xC0(%rbp),%r15d
	movl %r15d,0xB8(%rbp)
	jmp L_319213
.p2align 0x4
L_509610:
L_319515:
	movq 0x38(%rbp),%r13
	cmpq $0x1,%r13
	je L_319521
L_319516:
	movq 0x8(%r13),%r14
	movw 0x0(%r13),%r15w
.p2align 0x4,,0x7
L_319517:
	movw 0xCC(%rbp),%r13w
	movw %r13w,%r11w
	shrw $0x8,%r11w
	movb %r11b,%r10b
	movw %r15w,%r11w
	shrw $0x8,%r11w
	movb %r11b,%r9b
	cmpb %r10b,%r9b
	jne L_509648
L_319597:
	movb %r13b,%r11b
	movb %r15b,%r13b
	cmpb %r13b,%r11b
	je L_509645
L_319598:
	cmpq $0x1,%r14
	je L_509611
L_319599:
	movw 0x0(%r14),%r15w
	movq 0x8(%r14),%r14
	jmp L_319517
.p2align 0x4
L_509611:
L_319521:
	movq 0xD8(%rbp),%r15
	andq $0x7,%r15
	cmpq $0x1,%r15
	je L_509643
	cmpq $0x3,%r15
	je L_509641
L_319522:
	xorl %ecx,%ecx
L_319523:
	movq 0x78(%rbp),%r13
	cmpq $0x1,%r13
	je L_509640
L_319524:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
	movl $0x1,%r13d
	xorl %ebx,%ebx
	xchgl %r13d,%ecx
	movl %r13d,(localWord32+0x0)(%rip)
.p2align 0x4,,0x7
L_319525:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0x11AE,%r13
	jne L_319526
L_319579:
	movq 0xD0(%rbp),%r13
	movq 0x8(%r15),%r11
	movq 0x10(%r11),%r10
	cmpq %r10,0x10(%r13)
	sete %al
	movzbl %al,%eax
	movb 0x0(%r15),%r13b
	cmpb $0x1,%r13b
	je L_509638
	cmpb $0x2,%r13b
	je L_509637
	cmpb $0x6,%r13b
	je L_509634
L_319526:
	incl %ebx
	jo L_319527
L_319528:
	cmpq $0x1,%r14
	je L_509612
L_319529:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_319525
.p2align 0x4
L_509612:
	movl %ecx,%ebx
	movl (localWord32+0x0)(%rip),%ecx
L_319531:
	movq 0x90(%rbp),%r11
	cmpq $0x1,%r11
	je L_509632
L_319532:
	movq 0x8(%r11),%r14
	movq 0x0(%r11),%r15
	xorq %r13,%r13
	xorl %r11d,%r11d
	xchgl %r11d,%ecx
	movl %r11d,(localWord32+0x0)(%rip)
.p2align 0x4,,0x7
L_319533:
	movq 0x8(%r15),%r10
	cmpq $0x1,%r10
	je L_509631
L_319534:
	movq 0x8(%r10),%r11
	movq 0x0(%r10),%r10
	xorl %r9d,%r9d
	movq %r10,%r15
	xchgl %r9d,%ebx
	movl %r9d,(localWord32+0x4)(%rip)
.p2align 0x4,,0x7
L_319535:
	movq 0xD0(%rbp),%r10
	movq 0x10(%r10),%r9
	cmpq %r9,0x10(%r15)
	je L_509628
L_319536:
	cmpq $0x1,%r11
	je L_509613
L_319537:
	movq 0x0(%r11),%r15
	movq 0x8(%r11),%r11
	jmp L_319535
.p2align 0x4
L_509613:
L_319539:
	addl %ebx,%ecx
	jo L_319527
L_319540:
	cmpq $0x1,%r14
	je L_509614
L_319541:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movl (localWord32+0x4)(%rip),%ebx
	jmp L_319533
.p2align 0x4
L_509614:
L_319542:
	movq %r13,%r15
	movl (localWord32+0x4)(%rip),%ebx
L_319543:
	movl 0xC0(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_509625
L_319544:
	movl 0xB4(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_509623
	movl (localWord32+0x0)(%rip),%r14d
	xchgl %r14d,%ebx
	movl %r14d,(localWord32+0x4)(%rip)
L_319546:
	movq 0xB8(%rbp),%r14
	movq %r14,%r13
	andq $0x1,%r13
	jz L_509621
L_319559:
	shrq $0x1,%r14
	movl %r14d,%r13d
	movl (localWord32+0x4)(%rip),%r14d
	movl %r13d,(localWord32+0x0)(%rip)
	xchgl %r14d,%ecx
	movl %r14d,(localWord32+0x8)(%rip)
L_319560:
	movq %r15,%r14
	andq $0x1,%r14
	jz L_509620
L_319562:
	shrq $0x1,%r15
	movl %r15d,%r14d
	movl (localWord32+0x0)(%rip),%r15d
	cmpl %r14d,%r15d
	jl L_509619
L_319563:
	xchgl %r14d,%ebx
	movl %r14d,(localWord32+0x4)(%rip)
L_319564:
	movl %ebx,%r15d
	movl (localWord32+0x4)(%rip),%r14d
	movl %r14d,(localWord32+0x0)(%rip)
	shlq $0x1,%r15
	orq $0x1,%r15
	movl %ecx,%ebx
	movl (localWord32+0x8)(%rip),%ecx
L_319550:
	addl 0xB0(%rbp),%ecx
	jo L_319527
L_319551:
	movl 0xAC(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_509617
L_319552:
	xorl %r14d,%r14d
	xchgl %r14d,%ebx
	movl %r14d,(localWord32+0x4)(%rip)
L_319553:
	movl 0xA8(%rbp),%r14d
	addl 0xC4(%rbp),%r14d
	jo L_319527
L_319554:
	movq 0xA0(%rbp),%r13
	cmpq $0x1,%r13
	je L_509615
L_319555:
	movl %r14d,0xA8(%rbp)
	movl %ebx,0xAC(%rbp)
	movl %ecx,0xB0(%rbp)
	movq %r15,0xB8(%rbp)
	movl (localWord32+0x4)(%rip),%r14d
	movl %r14d,0xB4(%rbp)
	movl (localWord32+0x0)(%rip),%r14d
	movl %r14d,0xC0(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0xA0(%rbp)
	jmp L_319208
.p2align 0x4
L_509615:
L_319556:
	movl %r14d,0xA0(%rbp)
	movl %ebx,0xA4(%rbp)
	movl %ecx,0xA8(%rbp)
	movq %r15,0xB0(%rbp)
	movl (localWord32+0x4)(%rip),%r15d
	movl %r15d,0xAC(%rbp)
	movl (localWord32+0x0)(%rip),%r15d
	movl %r15d,0xB8(%rbp)
	jmp L_319213
.p2align 0x4
L_509617:
L_319557:
	movl 0xC8(%rbp),%r14d
	xchgl %r14d,%ebx
	movl %r14d,(localWord32+0x4)(%rip)
	jmp L_319553
.p2align 0x4
L_509619:
	xchgl %r15d,%ebx
	movl %r15d,(localWord32+0x4)(%rip)
	jmp L_319564
.p2align 0x4
L_509620:
L_319561:
	movl %ebx,(localWord32+0x0)(%rip)
	movq 0xB8(%rbp),%r15
	movl %ecx,%ebx
	movl (localWord32+0x8)(%rip),%ecx
	jmp L_319550
.p2align 0x4
L_509621:
	movl (localWord32+0x4)(%rip),%r13d
	xchgl %r13d,%ebx
	movl %r13d,(localWord32+0x0)(%rip)
L_319548:
	movq %r15,%r14
	andq $0x1,%r14
	jnz L_319550
L_319558:
	movq 0xB8(%rbp),%r15
	jmp L_319550
.p2align 0x4
L_509623:
	movl (localWord32+0x0)(%rip),%ebx
L_319567:
	movq 0xB8(%rbp),%r14
	andq $0x1,%r14
	jnz L_509624
L_319568:
	movl $0x1,%r14d
	xchgl %r14d,%ebx
	movl %r14d,(localWord32+0x0)(%rip)
	jmp L_319548
.p2align 0x4
L_509624:
L_319569:
	movq 0xB8(%rbp),%r14
	shrq $0x1,%r14
	movl %r14d,%r13d
	movl %r13d,(localWord32+0x0)(%rip)
	movl $0x1,%r14d
	xchgl %r14d,%ecx
	movl %r14d,(localWord32+0x8)(%rip)
	jmp L_319560
.p2align 0x4
L_509625:
L_319570:
	movl 0xB4(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_509626
L_319571:
	movl $0x1,%r14d
	xchgl %r14d,%ebx
	movl %r14d,(localWord32+0x4)(%rip)
	jmp L_319546
.p2align 0x4
L_509626:
L_319572:
	movl $0x1,%ebx
	jmp L_319567
.p2align 0x4
L_509628:
L_319573:
	incl %ebx
	jo L_319527
L_319574:
	cmpq $0x1,%r11
	je L_319539
L_319575:
	movq 0x0(%r11),%r15
	movq 0x8(%r11),%r11
	jmp L_319535
.p2align 0x4
L_509631:
L_319577:
	xorl %r15d,%r15d
	xchgl %r15d,%ebx
	movl %r15d,(localWord32+0x4)(%rip)
	jmp L_319539
.p2align 0x4
L_509632:
L_319578:
	xorq %r15,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	movl %r14d,(localWord32+0x0)(%rip)
	jmp L_319543
.p2align 0x4
L_509634:
	xchgl %eax,%ecx
	movl %eax,(localWord32+0x4)(%rip)
L_319581:
	testl %ecx,%ecx
	jz L_509636
L_319583:
	movl %ebx,%r13d
	shlq $0x1,%r13
	orq $0x1,%r13
	movq 0x90(%rbp),%r11
	cmpq $0x1,%r11
	je L_509635
L_319584:
	movq 0x8(%r11),%r14
	movq 0x0(%r11),%r15
	xorl %ecx,%ecx
	movl (localWord32+0x4)(%rip),%ebx
	jmp L_319533
.p2align 0x4
L_509635:
L_319585:
	xorl %ecx,%ecx
	movq %r13,%r15
	movl (localWord32+0x4)(%rip),%ebx
	jmp L_319543
.p2align 0x4
L_509636:
	movl (localWord32+0x4)(%rip),%ecx
	jmp L_319526
.p2align 0x4
L_509637:
	xchgl %eax,%ecx
	movl %eax,(localWord32+0x4)(%rip)
	jmp L_319581
.p2align 0x4
L_509638:
	xchgl %eax,%ecx
	movl %eax,(localWord32+0x4)(%rip)
	jmp L_319581
.p2align 0x4
L_509640:
L_319588:
	movl $0x1,%ebx
	jmp L_319531
.p2align 0x4
L_509641:
L_319593:
	xorl %ecx,%ecx
L_319594:
	movq 0x78(%rbp),%r13
	cmpq $0x1,%r13
	je L_509642
L_319595:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
	xorl %r13d,%r13d
	xorl %ebx,%ebx
	xchgl %r13d,%ecx
	movl %r13d,(localWord32+0x0)(%rip)
	jmp L_319525
.p2align 0x4
L_509642:
L_319596:
	xorl %ebx,%ebx
	jmp L_319531
.p2align 0x4
L_509643:
L_319589:
	xorl %ecx,%ecx
L_319590:
	movq 0x78(%rbp),%r13
	cmpq $0x1,%r13
	je L_509644
L_319591:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
	xorl %r13d,%r13d
	xorl %ebx,%ebx
	xchgl %r13d,%ecx
	movl %r13d,(localWord32+0x0)(%rip)
	jmp L_319525
.p2align 0x4
L_509644:
L_319592:
	xorl %ebx,%ebx
	jmp L_319531
.p2align 0x4
L_509645:
L_319601:
	movq 0xD8(%rbp),%r15
	andq $0x7,%r15
	cmpq $0x1,%r15
	je L_509647
	cmpq $0x3,%r15
	je L_509646
L_319602:
	movl $0x1,%ecx
	jmp L_319523
.p2align 0x4
L_509646:
L_319604:
	movl $0x1,%ecx
	jmp L_319594
.p2align 0x4
L_509647:
L_319603:
	movl $0x1,%ecx
	jmp L_319590
.p2align 0x4
L_509648:
L_319518:
	cmpq $0x1,%r14
	je L_319521
L_319519:
	movw 0x0(%r14),%r15w
	movq 0x8(%r14),%r14
	jmp L_319517
.p2align 0x4
.long 0x4E40
L_319196:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movl 0xB0(%rbp),%r14d
	movl %r14d,0xA8(%rbp)
	testl %r14d,%r14d
	jnz L_509652
L_319197:
	movq 0xA0(%rbp),%r14
	cmpq $0x1,%r14
	je L_319200
L_319198:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0xA0(%rbp)
	jmp L_319193
.p2align 0x4
L_509652:
L_319613:
	movl 0xC(%rbp),%ecx
	subl $0x5,%ecx
	jo L_319527
	jmp L_319615
.p2align 0x4
.long 0x4E63
L_319667:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x90(%rbp)
	jmp L_319162
.p2align 0x4
.long 0x4E3F
L_319149:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movl 0xA0(%rbp),%r14d
	movl %r14d,0xC(%rbp)
	testl %r14d,%r14d
	jnz L_509655
L_319150:
	movq 0x90(%rbp),%r14
	cmpq $0x1,%r14
	je L_319153
L_319151:
	movw 0x0(%r14),%r15w
	movq 0x8(%r14),%r14
	movq %r14,0x90(%rbp)
	jmp L_319148
.p2align 0x4
L_509655:
L_319671:
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_509656
L_319672:
	movw 0x0(%r15),%r14w
	movq 0x8(%r15),%r15
	movq %r15,0x28(%rbp)
	movw %r14w,0xA(%rbp)
	jmp L_319146
.p2align 0x4
L_509656:
L_319673:
	movq 0x88(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_319157
.p2align 0x4
.long 0x4E43
rev_411:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq $0x1,%r15
	je L_509659
L_319275:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r14,0x20(%rbp)
	movq $0x1,0x28(%rbp)
.p2align 0x4,,0x7
L_319276:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_509658
.p2align 0x4,,0x7
L_319277:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_509657
L_319278:
	movq %r15,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_319276
.p2align 0x4
L_509657:
L_319280:
	movq %r15,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_319281+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_509658:
L_319457:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_319458+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_319458
.p2align 0x4
.long 0x4E5B
L_319458:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	jmp L_319277
.p2align 0x4
L_509659:
L_319459:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_319280
.p2align 0x4
.long 0x4E43
L_319281:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r14
	movq %r14,0x8(%rbp)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_509660
L_319282:
	movq 0x8(%r14),%r13
	movq %r13,0x20(%rbp)
	movq 0x0(%r14),%r15
	movq $0x1,0x28(%rbp)
L_319283:
	movq %r15,0x90(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x90,%rbp
	leaq (toString_410+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_25
.p2align 0x4
L_509660:
L_319456:
	movq $0x1,%r15
L_319300:
	movq %r15,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_319301+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x4E44
toString_410:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq $0x1,0x90(%rbp)
	movq %r15,0x98(%rbp)
	addq $0x90,%rbp
	leaq (rev_412+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x4E46
L_319301:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq %r15,0x90(%rbp)
	movq (globalObjptr+0xDD28)(%rip),%r15
	movq %r15,0x98(%rbp)
	addq $0x90,%rbp
	leaq (L_319302+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x4E44
rev_412:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq $0x1,%r15
	je L_509663
L_319284:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x38(%rbp)
	movq %r14,0x70(%rbp)
	movq $0x1,0x78(%rbp)
.p2align 0x4,,0x7
L_319285:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_509662
.p2align 0x4,,0x7
L_319286:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x38(%rbp),%r14
	cmpq $0x1,%r14
	je L_509661
L_319287:
	movq %r15,0x78(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x38(%rbp)
	movq %r15,0x70(%rbp)
	jmp L_319285
.p2align 0x4
L_509661:
L_319289:
	movq %r15,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_319290+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_509662:
L_319453:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_319454+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_319454
.p2align 0x4
.long 0x4E59
L_319454:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	jmp L_319286
.p2align 0x4
L_509663:
L_319455:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_319289
.p2align 0x4
.long 0x4E46
L_319302:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0x9F40)(%rip),%r14
	movq %r14,0x90(%rbp)
	movq %r15,0x98(%rbp)
	addq $0x90,%rbp
	leaq (L_319303+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x4E44
L_319290:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_319291
L_319451:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_319452+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_319452
.p2align 0x4
.long 0x4E58
L_319452:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_319291:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_509664
L_319292:
	movq %r15,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	jmp L_319283
.p2align 0x4
L_509664:
L_319293:
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq $0x1,0x38(%rbp)
.p2align 0x4,,0x7
L_319294:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_509666
.p2align 0x4,,0x7
L_319295:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_509665
L_319296:
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x28(%rbp)
	jmp L_319294
.p2align 0x4
L_509665:
L_319297:
	movq 0x38(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq (globalObjptr+0xE1E8)(%rip),%r15
	movq %r15,0x98(%rbp)
	addq $0x90,%rbp
	leaq (L_319298+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3781
.p2align 0x4
L_509666:
L_319449:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_319450+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_319450
.p2align 0x4
.long 0x4E58
L_319450:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	jmp L_319295
.p2align 0x4
.long 0x4E46
L_319303:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r14
	movq %r14,0x20(%rbp)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_509668
L_319304:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq $0x1,0x28(%rbp)
L_319305:
	movq %r15,0x90(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x90,%rbp
	leaq (toString_411+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_25
.p2align 0x4
L_509668:
L_319446:
	movq $0x1,%r15
L_319322:
	movq %r15,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_319323+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x4E45
L_319298:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_319299
L_319447:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_319448+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_319448
.p2align 0x4
.long 0x4E5A
L_319448:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_319299:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_319300
.p2align 0x4
.long 0x4E44
toString_411:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq $0x1,0x90(%rbp)
	movq %r15,0x98(%rbp)
	addq $0x90,%rbp
	leaq (rev_413+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x4E48
L_319323:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq %r15,0x90(%rbp)
	movq (globalObjptr+0xDD28)(%rip),%r15
	movq %r15,0x98(%rbp)
	addq $0x90,%rbp
	leaq (L_319324+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x4E44
rev_413:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq $0x1,%r15
	je L_509672
L_319306:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x38(%rbp)
	movq %r14,0x70(%rbp)
	movq $0x1,0x78(%rbp)
.p2align 0x4,,0x7
L_319307:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_509671
.p2align 0x4,,0x7
L_319308:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x38(%rbp),%r14
	cmpq $0x1,%r14
	je L_509670
L_319309:
	movq %r15,0x78(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x38(%rbp)
	movq %r15,0x70(%rbp)
	jmp L_319307
.p2align 0x4
L_509670:
L_319311:
	movq %r15,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_319312+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_509671:
L_319443:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_319444+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_319444
.p2align 0x4
.long 0x4E59
L_319444:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	jmp L_319308
.p2align 0x4
L_509672:
L_319445:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_319311
.p2align 0x4
.long 0x4E48
L_319324:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0x9F40)(%rip),%r14
	movq %r14,0x90(%rbp)
	movq %r15,0x98(%rbp)
	addq $0x90,%rbp
	leaq (L_319325+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x4E44
L_319312:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_319313
L_319441:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_319442+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_319442
.p2align 0x4
.long 0x4E58
L_319442:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_319313:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_509673
L_319314:
	movq %r15,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	jmp L_319305
.p2align 0x4
L_509673:
L_319315:
	movq 0x28(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq $0x1,0x38(%rbp)
.p2align 0x4,,0x7
L_319316:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_509675
.p2align 0x4,,0x7
L_319317:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_509674
L_319318:
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x28(%rbp)
	jmp L_319316
.p2align 0x4
L_509674:
L_319319:
	movq 0x38(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq (globalObjptr+0xE1E8)(%rip),%r15
	movq %r15,0x98(%rbp)
	addq $0x90,%rbp
	leaq (L_319320+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3781
.p2align 0x4
L_509675:
L_319439:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_319440+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_319440
.p2align 0x4
.long 0x4E56
L_319440:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	jmp L_319317
.p2align 0x4
.long 0x4E48
L_319325:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r14
	movq %r14,0x10(%rbp)
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_509677
L_319326:
	movq 0x8(%r14),%r13
	movq %r13,0x28(%rbp)
	movw 0x0(%r14),%r15w
	movq $0x1,0x30(%rbp)
L_319327:
	movw %r15w,0x90(%rbp)
	addq $0x90,%rbp
	leaq (toString_412+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_37
.p2align 0x4
L_509677:
L_319436:
	movq $0x1,%r15
L_319344:
	movq %r15,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_319345+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x4E47
L_319320:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_319321
L_319437:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_319438+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_319438
.p2align 0x4
.long 0x4E55
L_319438:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_319321:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_319322
.p2align 0x4
.long 0x4E49
toString_412:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq $0x1,0x90(%rbp)
	movq %r15,0x98(%rbp)
	addq $0x90,%rbp
	leaq (rev_414+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x4E4B
L_319345:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq %r15,0x90(%rbp)
	movq (globalObjptr+0xDD28)(%rip),%r15
	movq %r15,0x98(%rbp)
	addq $0x90,%rbp
	leaq (L_319346+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x4E49
rev_414:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq $0x1,%r15
	je L_509681
L_319328:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x38(%rbp)
	movq %r14,0x50(%rbp)
	movq $0x1,0x70(%rbp)
.p2align 0x4,,0x7
L_319329:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_509680
.p2align 0x4,,0x7
L_319330:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x38(%rbp),%r14
	cmpq $0x1,%r14
	je L_509679
L_319331:
	movq %r15,0x70(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x38(%rbp)
	movq %r15,0x50(%rbp)
	jmp L_319329
.p2align 0x4
L_509679:
L_319333:
	movq %r15,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_319334+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_509680:
L_319433:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_319434+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_319434
.p2align 0x4
.long 0x4E57
L_319434:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	jmp L_319330
.p2align 0x4
L_509681:
L_319435:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_319333
.p2align 0x4
.long 0x4E4B
L_319346:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq (globalObjptr+0x9F40)(%rip),%r14
	movq %r14,0x90(%rbp)
	movq %r15,0x98(%rbp)
	addq $0x90,%rbp
	leaq (L_319347+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x4E49
L_319334:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_319335
L_319431:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_319432+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_319432
.p2align 0x4
.long 0x4E56
L_319432:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_319335:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x30(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x28(%rbp),%r13
	cmpq $0x1,%r13
	je L_509682
L_319336:
	movq %r14,0x30(%rbp)
	movw 0x0(%r13),%r15w
	movq 0x8(%r13),%r13
	movq %r13,0x28(%rbp)
	jmp L_319327
.p2align 0x4
L_509682:
L_319337:
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq $0x1,0x38(%rbp)
.p2align 0x4,,0x7
L_319338:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_509684
.p2align 0x4,,0x7
L_319339:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_509683
L_319340:
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x30(%rbp)
	jmp L_319338
.p2align 0x4
L_509683:
L_319341:
	movq 0x38(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq (globalObjptr+0xE1E8)(%rip),%r15
	movq %r15,0x98(%rbp)
	addq $0x90,%rbp
	leaq (L_319342+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3781
.p2align 0x4
L_509684:
L_319429:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_319430+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_319430
.p2align 0x4
.long 0x4E56
L_319430:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	jmp L_319339
.p2align 0x4
.long 0x4E4B
L_319347:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r14
	movq %r14,0x28(%rbp)
	movq 0x80(%rbp),%r14
	cmpq $0x1,%r14
	je L_509686
L_319348:
	movq 0x8(%r14),%r13
	movq %r13,0x30(%rbp)
	movw 0x0(%r14),%r15w
	movq $0x1,0x38(%rbp)
L_319349:
	movw %r15w,0x78(%rbp)
	addq $0x78,%rbp
	leaq (toString_413+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_37
.p2align 0x4
L_509686:
L_319426:
	movq $0x1,%r15
L_319366:
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_319367+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x4E4A
L_319342:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_319343
L_319427:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_319428+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_319428
.p2align 0x4
.long 0x4E55
L_319428:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_319343:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_319344
.p2align 0x4
.long 0x4E4C
toString_413:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq $0x1,0x78(%rbp)
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (rev_415+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x4E4E
L_319367:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq %r15,0x78(%rbp)
	movq (globalObjptr+0xDD28)(%rip),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_319368+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x4E4C
rev_415:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq $0x1,%r15
	je L_509690
L_319350:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x50(%rbp)
	movq %r14,0x70(%rbp)
	movq $0x1,0x78(%rbp)
.p2align 0x4,,0x7
L_319351:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_509689
.p2align 0x4,,0x7
L_319352:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x50(%rbp),%r14
	cmpq $0x1,%r14
	je L_509688
L_319353:
	movq %r15,0x78(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x50(%rbp)
	movq %r15,0x70(%rbp)
	jmp L_319351
.p2align 0x4
L_509688:
L_319355:
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_319356+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_509689:
L_319423:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_319424+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_319424
.p2align 0x4
.long 0xC12
L_319424:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	jmp L_319352
.p2align 0x4
L_509690:
L_319425:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_319355
.p2align 0x4
.long 0x4E4E
L_319368:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq (globalObjptr+0x9F40)(%rip),%r14
	movq %r14,0x78(%rbp)
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_319369+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x4E4C
L_319356:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_319357
L_319421:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_319422+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_319422
.p2align 0x4
.long 0x4E54
L_319422:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_319357:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x38(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x30(%rbp),%r13
	cmpq $0x1,%r13
	je L_509691
L_319358:
	movq %r14,0x38(%rbp)
	movw 0x0(%r13),%r15w
	movq 0x8(%r13),%r13
	movq %r13,0x30(%rbp)
	jmp L_319349
.p2align 0x4
L_509691:
L_319359:
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq $0x1,0x50(%rbp)
.p2align 0x4,,0x7
L_319360:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_509693
.p2align 0x4,,0x7
L_319361:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_509692
L_319362:
	movq %r15,0x50(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	movq %r15,0x38(%rbp)
	jmp L_319360
.p2align 0x4
L_509692:
L_319363:
	movq 0x50(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq (globalObjptr+0xE1E8)(%rip),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_319364+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3781
.p2align 0x4
L_509693:
L_319419:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_319420+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_319420
.p2align 0x4
.long 0x4E54
L_319420:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	jmp L_319361
.p2align 0x4
.long 0x4E4E
L_319369:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_319370+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_548
.p2align 0x4
.long 0x4E4D
L_319364:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_319365
L_319417:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_319418+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_319418
.p2align 0x4
.long 0x4E53
L_319418:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_319365:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_319366
.p2align 0x4
.long 0x4E4F
L_319370:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_319371
L_319415:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_319416+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_319416
.p2align 0x4
.long 0x4E52
L_319416:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_319371:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x5D18)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x11120)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq (globalObjptr+0x112E8)(%rip),%r14
	movq %r14,0x0(%r13)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x8(%r14)
	addq $0x18,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq %r15,0x0(%r13)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x112F0)(%rip),%r13
	movq %r13,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r13)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x8(%r14)
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq (globalObjptr+0x112F8)(%rip),%r14
	movq %r14,0x0(%r13)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x8(%r14)
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq %r15,0x0(%r13)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x11300)(%rip),%r13
	movq %r13,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r13)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x8(%r14)
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x38(%rbp)
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0x11308)(%rip),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x6A58)(%rip),%r15
	movl 0x0(%r15),%r14d
	movl %r14d,0x78(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_319372+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0x4E50
L_319372:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_319373
L_319413:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_319414+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_319414
.p2align 0x4
.long 0x4E51
L_319414:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_319373:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x50(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x58(%rbp)
	movq $0x1,0x60(%rbp)
.p2align 0x4,,0x7
L_319374:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_509698
.p2align 0x4,,0x7
L_319375:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x50(%rbp),%r14
	cmpq $0x1,%r14
	je L_509697
L_319376:
	movq %r15,0x60(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x50(%rbp)
	movq %r15,0x58(%rbp)
	jmp L_319374
.p2align 0x4
L_509697:
L_319377:
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_319378+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_509698:
L_319411:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_319412+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_319412
.p2align 0x4
.long 0xEF6
L_319412:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	jmp L_319375
.p2align 0x4
.long 0x907
L_319378:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq %r15,0x78(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_319379+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x907
L_319379:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_319380
L_319409:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_319410+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_319410
.p2align 0x4
.long 0x365D
L_319410:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_319380:
	movq 0x68(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x10(%r14),%r15
	movq 0x18(%r14),%r13
	movq 0x8(%r14),%r11
	cmpb $0x1,0x0(%r11)
	jne L_319381
L_319398:
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_509701
L_319399:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x14AE,%r15
	je L_509700
L_319406:
	movq %r13,0x80(%rbp)
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq $0x16FB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r13,0x8(%r14)
	movq %r14,0x78(%rbp)
	addq $0x18,%r12
	addq $0x78,%rbp
	leaq (L_319407+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp flushBuf_0
.p2align 0x4
L_509700:
L_319400:
	movq %r13,0x80(%rbp)
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq $0x16FB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r13,0x8(%r14)
	movq %r14,0x78(%rbp)
	addq $0x18,%r12
	leaq L_319402(%rip),%r15
	movq %r15,0x40(%rbp)
	movq %rbp,%r15
	addq $0x48,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x78,%rbp
	leaq (L_319401+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp flushBuf_0
.p2align 0x4
L_509701:
L_319381:
	movq 0x48(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x11310)(%rip),%r15
	movq %r15,0x78(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_319382+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x907
L_319407:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	jmp L_319381
.p2align 0x4
.long 0x16E4
L_319401:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	jmp L_319381
.p2align 0x4
.long 0x904
L_319402:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_319403
L_319404:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_319405+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_319405
.p2align 0x4
.long 0x61C
L_319405:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_319403:
	movq 0x50(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x20(%r14),%r13
	movq $0x1419,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x20,%r12
	movq (globalObjptr+0xF590)(%rip),%r14
	movq %r14,0x8(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x10(%r15)
	movq $0x1933,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	addq $0x10,%r12
	movq 0x48(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x907
L_319382:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_319383
L_319396:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_319397+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_319397
.p2align 0x4
.long 0x365D
L_319397:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_319383:
	movq 0x68(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x10(%r14),%r15
	movq 0x18(%r14),%r13
	movq 0x8(%r14),%r11
	cmpb $0x1,0x0(%r11)
	jne L_319384
L_319385:
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_509706
L_319386:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x14AE,%r15
	je L_509705
L_319393:
	movq %r13,0x60(%rbp)
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq $0x16FB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r13,0x8(%r14)
	movq %r14,0x58(%rbp)
	addq $0x18,%r12
	addq $0x58,%rbp
	leaq (L_319394+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp flushBuf_0
.p2align 0x4
L_509705:
L_319387:
	movq %r13,0x68(%rbp)
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq $0x16FB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r13,0x8(%r14)
	movq %r14,0x60(%rbp)
	addq $0x18,%r12
	leaq L_319389(%rip),%r15
	movq %r15,0x40(%rbp)
	movq %rbp,%r15
	addq $0x48,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x60,%rbp
	leaq (L_319388+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp flushBuf_0
.p2align 0x4
L_509706:
L_319384:
	movq 0x48(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x1E,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x279E
L_319394:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	jmp L_319384
.p2align 0x4
.long 0x61B
L_319388:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	jmp L_319384
.p2align 0x4
.long 0x904
L_319389:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_319390
L_319391:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_319392+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_319392
.p2align 0x4
.long 0x61C
L_319392:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_319390:
	movq 0x50(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x20(%r14),%r13
	movq $0x1419,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x20,%r12
	movq (globalObjptr+0xF590)(%rip),%r14
	movq %r14,0x8(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x10(%r15)
	movq $0x1933,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	addq $0x10,%r12
	movq 0x48(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl toString_548
.hidden toString_548
toString_548:
L_319779:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_319780
L_319996:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_319997+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_319997
.p2align 0x4
.long 0x45F
L_319997:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_319780:
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x38(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x48(%rbp)
	movq (globalObjptr+0xB6D8)(%rip),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_319781+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x4A8
L_319781:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r14
	movq %r14,0x40(%rbp)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_509727
L_319782:
	movw 0x0(%r14),%r15w
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	movq (globalObjptr+0xA058)(%rip),%r14
	movq %r14,0x48(%rbp)
L_319783:
	movb %r15b,%r14b
	movzbq %r14b,%rax
	subq $0x1,%rax
	cmpq $0xE,%rax
	ja L_509711
	leaq jumpTable_824(%rip),%rbx
	jmp *(%rbx,%rax,8)
.data
.p2align 0x4
jumpTable_824:
.quad L_509726,L_509725,L_509724,L_509723,L_509722,L_509721,L_509720,L_509719,L_509718,L_509717,L_509716,L_509715,L_509714,L_509713,L_509712
.text
.p2align 0x4
L_509711:
L_319784:
	movq (globalObjptr+0xE728)(%rip),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (toString_414+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_509712:
L_319994:
	movq (globalObjptr+0xE7A0)(%rip),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (toString_414+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_509713:
L_319993:
	movq (globalObjptr+0xE798)(%rip),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (toString_414+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_509714:
L_319992:
	movq (globalObjptr+0xE790)(%rip),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (toString_414+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_509715:
L_319991:
	movq (globalObjptr+0xE788)(%rip),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (toString_414+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_509716:
L_319990:
	movq (globalObjptr+0xE780)(%rip),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (toString_414+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_509717:
L_319989:
	movq (globalObjptr+0xE778)(%rip),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (toString_414+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_509718:
L_319988:
	movq (globalObjptr+0xE770)(%rip),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (toString_414+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_509719:
L_319987:
	movq (globalObjptr+0xE768)(%rip),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (toString_414+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_509720:
L_319986:
	movq (globalObjptr+0xE760)(%rip),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (toString_414+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_509721:
L_319985:
	movq (globalObjptr+0xE758)(%rip),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (toString_414+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_509722:
L_319984:
	movq (globalObjptr+0xE750)(%rip),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (toString_414+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_509723:
L_319983:
	movq (globalObjptr+0xE748)(%rip),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (toString_414+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_509724:
L_319982:
	movq (globalObjptr+0xE740)(%rip),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (toString_414+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_509725:
L_319981:
	movq (globalObjptr+0xE738)(%rip),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (toString_414+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_509726:
L_319980:
	movq (globalObjptr+0xE730)(%rip),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (toString_414+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_509727:
L_319995:
	movq (globalObjptr+0xA058)(%rip),%r15
L_319796:
	movq %r15,0x48(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_319797+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x98A
toString_414:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq $0x1,0x58(%rbp)
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (rev_416+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0xAA1
L_319797:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x48(%rbp)
	movq (globalObjptr+0xB6E0)(%rip),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_319798+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x98A
rev_416:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq $0x1,%r15
	je L_509730
L_319785:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x50(%rbp)
	movq %r14,0x58(%rbp)
	movq $0x1,0x60(%rbp)
.p2align 0x4,,0x7
L_319786:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_509729
.p2align 0x4,,0x7
L_319787:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x50(%rbp),%r14
	cmpq $0x1,%r14
	je L_509728
L_319788:
	movq %r15,0x60(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x50(%rbp)
	movq %r15,0x58(%rbp)
	jmp L_319786
.p2align 0x4
L_509728:
L_319790:
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_319791+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_509729:
L_319977:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_319978+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_319978
.p2align 0x4
.long 0xBAA
L_319978:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_319787
.p2align 0x4
L_509730:
L_319979:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_319790
.p2align 0x4
.long 0x4A8
L_319798:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r14
	movq %r14,0x40(%rbp)
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_509747
L_319799:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq 0x20(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq %r14,0x20(%rbp)
	movq %r13,%r15
L_319800:
	movq 0x10(%rbp),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x48(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x50(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x58(%rbp)
	movl 0x8(%r15),%r14d
	movl %r14d,0x60(%rbp)
	movl 0xC(%r15),%r14d
	movl %r14d,0x64(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x70(%rbp)
	movw 0x10(%r15),%r14w
	movb %r14b,%r13b
	movzbq %r13b,%rax
	subq $0x1,%rax
	cmpq $0xE,%rax
	ja L_509731
	leaq jumpTable_825(%rip),%rbx
	jmp *(%rbx,%rax,8)
.data
.p2align 0x4
jumpTable_825:
.quad L_509746,L_509745,L_509744,L_509743,L_509742,L_509741,L_509740,L_509739,L_509738,L_509737,L_509736,L_509735,L_509734,L_509733,L_509732
.text
.p2align 0x4
L_509731:
L_319801:
	movq (globalObjptr+0xE728)(%rip),%r15
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (toString_415+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_509732:
L_319975:
	movq (globalObjptr+0xE7A0)(%rip),%r15
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (toString_415+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_509733:
L_319974:
	movq (globalObjptr+0xE798)(%rip),%r15
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (toString_415+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_509734:
L_319973:
	movq (globalObjptr+0xE790)(%rip),%r15
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (toString_415+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_509735:
L_319972:
	movq (globalObjptr+0xE788)(%rip),%r15
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (toString_415+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_509736:
L_319971:
	movq (globalObjptr+0xE780)(%rip),%r15
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (toString_415+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_509737:
L_319970:
	movq (globalObjptr+0xE778)(%rip),%r15
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (toString_415+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_509738:
L_319969:
	movq (globalObjptr+0xE770)(%rip),%r15
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (toString_415+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_509739:
L_319968:
	movq (globalObjptr+0xE768)(%rip),%r15
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (toString_415+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_509740:
L_319967:
	movq (globalObjptr+0xE760)(%rip),%r15
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (toString_415+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_509741:
L_319966:
	movq (globalObjptr+0xE758)(%rip),%r15
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (toString_415+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_509742:
L_319965:
	movq (globalObjptr+0xE750)(%rip),%r15
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (toString_415+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_509743:
L_319964:
	movq (globalObjptr+0xE748)(%rip),%r15
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (toString_415+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_509744:
L_319963:
	movq (globalObjptr+0xE740)(%rip),%r15
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (toString_415+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_509745:
L_319962:
	movq (globalObjptr+0xE738)(%rip),%r15
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (toString_415+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_509746:
L_319961:
	movq (globalObjptr+0xE730)(%rip),%r15
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (toString_415+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_509747:
L_319976:
	movq 0x20(%rbp),%r14
	xchgq %r14,%r15
L_319826:
	movq %r15,0x48(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_319827+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x98A
L_319791:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r14
	movq %r14,0x58(%rbp)
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_319792+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x4E68
toString_415:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq $0x1,0x80(%rbp)
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (rev_417+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x604
L_319827:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x48(%rbp)
	movq (globalObjptr+0xB260)(%rip),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_319828+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x98A
L_319792:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_319793+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x4E68
rev_417:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x78(%rbp)
	cmpq $0x1,%r15
	je L_509750
L_319802:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x78(%rbp)
	movq %r14,0x80(%rbp)
	movq $0x1,0x88(%rbp)
.p2align 0x4,,0x7
L_319803:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_509749
.p2align 0x4,,0x7
L_319804:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x80(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x88(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x78(%rbp),%r14
	cmpq $0x1,%r14
	je L_509748
L_319805:
	movq %r15,0x88(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x78(%rbp)
	movq %r15,0x80(%rbp)
	jmp L_319803
.p2align 0x4
L_509748:
L_319807:
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_319808+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_509749:
L_319958:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_319959+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_319959
.p2align 0x4
.long 0x4E76
L_319959:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	jmp L_319804
.p2align 0x4
L_509750:
L_319960:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_319807
.p2align 0x4
.long 0xB21
L_319828:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r14
	movq %r14,0x28(%rbp)
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_509751
L_319829:
	movq 0x8(%r14),%r13
	movw 0x0(%r14),%r15w
	movq 0x20(%rbp),%r14
	movq %r14,0x30(%rbp)
	movq %r13,0x20(%rbp)
L_319830:
	movw %r15w,0x48(%rbp)
	addq $0x48,%rbp
	leaq (toString_417+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_37
.p2align 0x4
L_509751:
L_319918:
	movq 0x20(%rbp),%r15
L_319842:
	movq %r15,0x48(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_319843+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x8BA
L_319793:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r14
	movq %r14,0x48(%rbp)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_509752
L_319794:
	movw 0x0(%r14),%r15w
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	jmp L_319783
.p2align 0x4
L_509752:
L_319795:
	movq 0x48(%rbp),%r15
	jmp L_319796
.p2align 0x4
.long 0x4E68
L_319808:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x88,%rbp
	leaq (toString_416+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_35
.p2align 0x4
.long 0x5F0
toString_417:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq $0x1,0x48(%rbp)
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (rev_419+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x603
L_319843:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x48(%rbp)
	movq (globalObjptr+0xB268)(%rip),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_319844+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x4E69
toString_416:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq $0x1,0x88(%rbp)
	movq %r15,0x90(%rbp)
	addq $0x88,%rbp
	leaq (rev_418+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x5F0
rev_419:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq $0x1,%r15
	je L_509755
L_319831:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x40(%rbp)
	movq %r14,0x48(%rbp)
	movq $0x1,0x50(%rbp)
.p2align 0x4,,0x7
L_319832:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_509754
.p2align 0x4,,0x7
L_319833:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_509753
L_319834:
	movq %r15,0x50(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x40(%rbp)
	movq %r15,0x48(%rbp)
	jmp L_319832
.p2align 0x4
L_509753:
L_319836:
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_319837+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_509754:
L_319915:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_319916+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_319916
.p2align 0x4
.long 0x9A6
L_319916:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	jmp L_319833
.p2align 0x4
L_509755:
L_319917:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_319836
.p2align 0x4
.long 0x5E3
L_319844:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r14
	movq %r14,0x28(%rbp)
	movq 0x38(%rbp),%r14
	cmpq $0x1,%r14
	je L_509756
L_319845:
	movq 0x20(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x20(%rbp)
	movq 0x0(%r14),%r15
L_319846:
	movq 0x18(%rbp),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x38(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x40(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x48(%rbp)
	movl 0x8(%r15),%r14d
	movl %r14d,0x50(%rbp)
	movl 0xC(%r15),%r14d
	movl %r14d,0x54(%rbp)
	movw 0x10(%r15),%r14w
	movw %r14w,0x70(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x60(%rbp)
	addq $0x70,%rbp
	leaq (toString_418+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_37
.p2align 0x4
L_509756:
L_319914:
	movq 0x20(%rbp),%r15
L_319871:
	movq %r15,0x0(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x4E69
rev_418:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq $0x1,%r15
	je L_509759
L_319809:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x48(%rbp)
	movq %r14,0x68(%rbp)
	movq $0x1,0x80(%rbp)
.p2align 0x4,,0x7
L_319810:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_509758
.p2align 0x4,,0x7
L_319811:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x80(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_509757
L_319812:
	movq %r15,0x80(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	movq %r15,0x68(%rbp)
	jmp L_319810
.p2align 0x4
L_509757:
L_319814:
	movq %r15,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_319815+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_509758:
L_319955:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_319956+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_319956
.p2align 0x4
.long 0x4E75
L_319956:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	jmp L_319811
.p2align 0x4
L_509759:
L_319957:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_319814
.p2align 0x4
.long 0x5F0
L_319837:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r14
	movq %r14,0x48(%rbp)
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_319838+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x4E6B
toString_418:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq $0x1,0x70(%rbp)
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (rev_420+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x4E69
L_319815:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x48(%rbp)
	movl 0x60(%rbp),%r15d
	movl %r15d,0x88(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x88,%rbp
	leaq (L_319816+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0x5F0
L_319838:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x30(%rbp),%r14
	movq %r14,0x48(%rbp)
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_319839+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x4E6B
rev_420:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq $0x1,%r15
	je L_509762
L_319847:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x68(%rbp)
	movq %r14,0x70(%rbp)
	movq $0x1,0x78(%rbp)
.p2align 0x4,,0x7
L_319848:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_509761
.p2align 0x4,,0x7
L_319849:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x68(%rbp),%r14
	cmpq $0x1,%r14
	je L_509760
L_319850:
	movq %r15,0x78(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x68(%rbp)
	movq %r15,0x70(%rbp)
	jmp L_319848
.p2align 0x4
L_509760:
L_319852:
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_319853+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_509761:
L_319911:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_319912+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_319912
.p2align 0x4
.long 0x4E71
L_319912:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	jmp L_319849
.p2align 0x4
L_509762:
L_319913:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_319852
.p2align 0x4
.long 0x4E6A
L_319816:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_319817
L_319953:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_319954+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_319954
.p2align 0x4
.long 0x4E74
L_319954:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_319817:
	movl 0x64(%rbp),%r13d
	testl %r13d,%r13d
	jnz L_509767
L_319818:
	movq 0x70(%rbp),%r15
	andq $0x7,%r15
	cmpq $0x1,%r15
	je L_509766
	cmpq $0x2,%r15
	je L_509765
	cmpq $0x3,%r15
	je L_509764
	cmpq $0x4,%r15
	je L_509763
L_319819:
	movq (globalObjptr+0x11318)(%rip),%r15
	movq (globalObjptr+0xCDB0)(%rip),%r14
L_319820:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x18,%r12
	movq $0x1,0x8(%r13)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0xA188)(%rip),%r13
	movq %r13,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r15,0x8(%r11)
	addq $0x18,%r12
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x8(%r15)
	addq $0x18,%r12
	movq %r13,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x50(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq %r13,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x48(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq %r13,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x78(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_319821+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_509763:
L_319940:
	movq 0x70(%rbp),%r15
	shrq $0x3,%r15
	movl %r15d,%ecx
	movq (globalObjptr+0xCDB0)(%rip),%r15
	movq %r15,0x60(%rbp)
L_319941:
	movl %ecx,0x88(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x88,%rbp
	leaq (L_319942+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_509764:
L_319933:
	movq 0x70(%rbp),%r15
	shrq $0x3,%r15
	movl %r15d,%ecx
	movq (globalObjptr+0xCDB0)(%rip),%r15
	movq %r15,0x60(%rbp)
L_319934:
	movl %ecx,0x88(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x88,%rbp
	leaq (L_319935+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_509765:
L_319926:
	movq 0x70(%rbp),%r15
	shrq $0x3,%r15
	movl %r15d,%ecx
	movq (globalObjptr+0xCDB0)(%rip),%r15
	movq %r15,0x60(%rbp)
L_319927:
	movl %ecx,0x88(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x88,%rbp
	leaq (L_319928+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_509766:
L_319919:
	movq 0x70(%rbp),%r15
	shrq $0x3,%r15
	movl %r15d,%ecx
	movq (globalObjptr+0xCDB0)(%rip),%r15
	movq %r15,0x60(%rbp)
L_319920:
	movl %ecx,0x88(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x88,%rbp
	leaq (L_319921+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_509767:
L_319947:
	movq 0x70(%rbp),%r15
	andq $0x7,%r15
	cmpq $0x1,%r15
	je L_509771
	cmpq $0x2,%r15
	je L_509770
	cmpq $0x3,%r15
	je L_509769
	cmpq $0x4,%r15
	je L_509768
L_319948:
	movq (globalObjptr+0x11318)(%rip),%r15
	movq (globalObjptr+0xCDC0)(%rip),%r14
	jmp L_319820
.p2align 0x4
L_509768:
L_319952:
	movq 0x70(%rbp),%r15
	shrq $0x3,%r15
	movl %r15d,%ecx
	movq (globalObjptr+0xCDC0)(%rip),%r15
	movq %r15,0x60(%rbp)
	jmp L_319941
.p2align 0x4
L_509769:
L_319951:
	movq 0x70(%rbp),%r15
	shrq $0x3,%r15
	movl %r15d,%ecx
	movq (globalObjptr+0xCDC0)(%rip),%r15
	movq %r15,0x60(%rbp)
	jmp L_319934
.p2align 0x4
L_509770:
L_319950:
	movq 0x70(%rbp),%r15
	shrq $0x3,%r15
	movl %r15d,%ecx
	movq (globalObjptr+0xCDC0)(%rip),%r15
	movq %r15,0x60(%rbp)
	jmp L_319927
.p2align 0x4
L_509771:
L_319949:
	movq 0x70(%rbp),%r15
	shrq $0x3,%r15
	movl %r15d,%ecx
	movq (globalObjptr+0xCDC0)(%rip),%r15
	movq %r15,0x60(%rbp)
	jmp L_319920
.p2align 0x4
.long 0x8E8
L_319839:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r14
	movq %r14,0x30(%rbp)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_509773
L_319840:
	movw 0x0(%r14),%r15w
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	jmp L_319830
.p2align 0x4
L_509773:
L_319841:
	movq 0x30(%rbp),%r15
	jmp L_319842
.p2align 0x4
.long 0x4E6B
L_319853:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (toString_419+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_35
.p2align 0x4
.long 0x8BA
L_319821:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r14
	movq %r14,0x50(%rbp)
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_319822+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x4E72
L_319942:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq %r15,0x88(%rbp)
	movq (globalObjptr+0x11338)(%rip),%r15
	movq %r15,0x90(%rbp)
	addq $0x88,%rbp
	leaq (L_319943+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x4E72
L_319935:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq %r15,0x88(%rbp)
	movq (globalObjptr+0x11330)(%rip),%r15
	movq %r15,0x90(%rbp)
	addq $0x88,%rbp
	leaq (L_319936+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x4E72
L_319928:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq %r15,0x88(%rbp)
	movq (globalObjptr+0x11328)(%rip),%r15
	movq %r15,0x90(%rbp)
	addq $0x88,%rbp
	leaq (L_319929+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x4E72
L_319921:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq %r15,0x88(%rbp)
	movq (globalObjptr+0x11320)(%rip),%r15
	movq %r15,0x90(%rbp)
	addq $0x88,%rbp
	leaq (L_319922+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x4E6C
toString_419:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq $0x1,0x78(%rbp)
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (rev_421+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x8BA
L_319822:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x28(%rbp),%r14
	movq %r14,0x50(%rbp)
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_319823+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x4E72
L_319943:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_319944
L_319945:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_319946+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_319946
.p2align 0x4
.long 0x4E73
L_319946:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_319944:
	movq 0x58(%rbp),%r15
	movq 0x60(%rbp),%r14
	jmp L_319820
.p2align 0x4
.long 0x4E72
L_319936:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_319937
L_319938:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_319939+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_319939
.p2align 0x4
.long 0x4E73
L_319939:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_319937:
	movq 0x58(%rbp),%r15
	movq 0x60(%rbp),%r14
	jmp L_319820
.p2align 0x4
.long 0x4E72
L_319929:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_319930
L_319931:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_319932+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_319932
.p2align 0x4
.long 0x4E73
L_319932:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_319930:
	movq 0x58(%rbp),%r15
	movq 0x60(%rbp),%r14
	jmp L_319820
.p2align 0x4
.long 0x4E72
L_319922:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_319923
L_319924:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_319925+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_319925
.p2align 0x4
.long 0x4E73
L_319925:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_319923:
	movq 0x58(%rbp),%r15
	movq 0x60(%rbp),%r14
	jmp L_319820
.p2align 0x4
.long 0x4E6C
rev_421:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq $0x1,%r15
	je L_509780
L_319854:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x38(%rbp)
	movq %r14,0x58(%rbp)
	movq $0x1,0x70(%rbp)
.p2align 0x4,,0x7
L_319855:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_509779
.p2align 0x4,,0x7
L_319856:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x38(%rbp),%r14
	cmpq $0x1,%r14
	je L_509778
L_319857:
	movq %r15,0x70(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x38(%rbp)
	movq %r15,0x58(%rbp)
	jmp L_319855
.p2align 0x4
L_509778:
L_319859:
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_319860+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_509779:
L_319908:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_319909+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_319909
.p2align 0x4
.long 0x4E70
L_319909:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	jmp L_319856
.p2align 0x4
L_509780:
L_319910:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_319859
.p2align 0x4
.long 0x70B
L_319823:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r14
	movq %r14,0x28(%rbp)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_509781
L_319824:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	jmp L_319800
.p2align 0x4
L_509781:
L_319825:
	movq 0x28(%rbp),%r15
	jmp L_319826
.p2align 0x4
.long 0x4E6C
L_319860:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x38(%rbp)
	movl 0x50(%rbp),%r15d
	movl %r15d,0x78(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_319861+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0x4E6D
L_319861:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_319862
L_319906:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_319907+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_319907
.p2align 0x4
.long 0x4E6F
L_319907:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_319862:
	movl 0x54(%rbp),%r13d
	testl %r13d,%r13d
	jnz L_509786
L_319863:
	movq 0x60(%rbp),%r15
	andq $0x7,%r15
	cmpq $0x1,%r15
	je L_509785
	cmpq $0x2,%r15
	je L_509784
	cmpq $0x3,%r15
	je L_509783
	cmpq $0x4,%r15
	je L_509782
L_319864:
	movq (globalObjptr+0x11318)(%rip),%r15
	movq (globalObjptr+0xCDB0)(%rip),%r14
L_319865:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x18,%r12
	movq $0x1,0x8(%r13)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0xA188)(%rip),%r13
	movq %r13,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r15,0x8(%r11)
	addq $0x18,%r12
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x8(%r15)
	addq $0x18,%r12
	movq %r13,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x40(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq %r13,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x38(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq %r13,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x68(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_319866+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_509782:
L_319893:
	movq 0x60(%rbp),%r15
	shrq $0x3,%r15
	movl %r15d,%ecx
	movq (globalObjptr+0xCDB0)(%rip),%r15
	movq %r15,0x50(%rbp)
L_319894:
	movl %ecx,0x78(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_319895+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_509783:
L_319886:
	movq 0x60(%rbp),%r15
	shrq $0x3,%r15
	movl %r15d,%ecx
	movq (globalObjptr+0xCDB0)(%rip),%r15
	movq %r15,0x50(%rbp)
L_319887:
	movl %ecx,0x78(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_319888+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_509784:
L_319879:
	movq 0x60(%rbp),%r15
	shrq $0x3,%r15
	movl %r15d,%ecx
	movq (globalObjptr+0xCDB0)(%rip),%r15
	movq %r15,0x50(%rbp)
L_319880:
	movl %ecx,0x78(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_319881+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_509785:
L_319872:
	movq 0x60(%rbp),%r15
	shrq $0x3,%r15
	movl %r15d,%ecx
	movq (globalObjptr+0xCDB0)(%rip),%r15
	movq %r15,0x50(%rbp)
L_319873:
	movl %ecx,0x78(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_319874+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_509786:
L_319900:
	movq 0x60(%rbp),%r15
	andq $0x7,%r15
	cmpq $0x1,%r15
	je L_509790
	cmpq $0x2,%r15
	je L_509789
	cmpq $0x3,%r15
	je L_509788
	cmpq $0x4,%r15
	je L_509787
L_319901:
	movq (globalObjptr+0x11318)(%rip),%r15
	movq (globalObjptr+0xCDC0)(%rip),%r14
	jmp L_319865
.p2align 0x4
L_509787:
L_319905:
	movq 0x60(%rbp),%r15
	shrq $0x3,%r15
	movl %r15d,%ecx
	movq (globalObjptr+0xCDC0)(%rip),%r15
	movq %r15,0x50(%rbp)
	jmp L_319894
.p2align 0x4
L_509788:
L_319904:
	movq 0x60(%rbp),%r15
	shrq $0x3,%r15
	movl %r15d,%ecx
	movq (globalObjptr+0xCDC0)(%rip),%r15
	movq %r15,0x50(%rbp)
	jmp L_319887
.p2align 0x4
L_509789:
L_319903:
	movq 0x60(%rbp),%r15
	shrq $0x3,%r15
	movl %r15d,%ecx
	movq (globalObjptr+0xCDC0)(%rip),%r15
	movq %r15,0x50(%rbp)
	jmp L_319880
.p2align 0x4
L_509790:
L_319902:
	movq 0x60(%rbp),%r15
	shrq $0x3,%r15
	movl %r15d,%ecx
	movq (globalObjptr+0xCDC0)(%rip),%r15
	movq %r15,0x50(%rbp)
	jmp L_319873
.p2align 0x4
.long 0x510
L_319866:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r14
	movq %r14,0x40(%rbp)
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_319867+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x4E6E
L_319895:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq %r15,0x78(%rbp)
	movq (globalObjptr+0x11338)(%rip),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_319896+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x4E6E
L_319888:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq %r15,0x78(%rbp)
	movq (globalObjptr+0x11330)(%rip),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_319889+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x4E6E
L_319881:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq %r15,0x78(%rbp)
	movq (globalObjptr+0x11328)(%rip),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_319882+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x4E6E
L_319874:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq %r15,0x78(%rbp)
	movq (globalObjptr+0x11320)(%rip),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_319875+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x510
L_319867:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_319868+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x4E6E
L_319896:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_319897
L_319898:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_319899+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_319899
.p2align 0x4
.long 0x2E10
L_319899:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_319897:
	movq 0x48(%rbp),%r15
	movq 0x50(%rbp),%r14
	jmp L_319865
.p2align 0x4
.long 0x4E6E
L_319889:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_319890
L_319891:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_319892+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_319892
.p2align 0x4
.long 0x2E10
L_319892:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_319890:
	movq 0x48(%rbp),%r15
	movq 0x50(%rbp),%r14
	jmp L_319865
.p2align 0x4
.long 0x4E6E
L_319882:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_319883
L_319884:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_319885+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_319885
.p2align 0x4
.long 0x2E10
L_319885:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_319883:
	movq 0x48(%rbp),%r15
	movq 0x50(%rbp),%r14
	jmp L_319865
.p2align 0x4
.long 0x4E6E
L_319875:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_319876
L_319877:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_319878+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_319878
.p2align 0x4
.long 0x2E10
L_319878:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_319876:
	movq 0x48(%rbp),%r15
	movq 0x50(%rbp),%r14
	jmp L_319865
.p2align 0x4
.long 0x71D
L_319868:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r14
	movq %r14,0x30(%rbp)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_509796
L_319869:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	jmp L_319846
.p2align 0x4
L_509796:
L_319870:
	movq 0x30(%rbp),%r15
	jmp L_319871
.text
.p2align 0x4
.globl supportedRegistersP_0
.hidden supportedRegistersP_0
supportedRegistersP_0:
L_319998:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_320069
L_319999:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_509814
L_320000:
	movq 0x8(%rbp),%r15
	movq 0x18(%r15),%r14
	cmpq $0x1,%r14
	je L_509813
L_320001:
	movq 0x8(%r14),%r15
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x18(%rbp)
	movq $0x1,0x20(%rbp)
.p2align 0x4,,0x7
L_320002:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_509812
.p2align 0x4,,0x7
L_320003:
	movq 0x0(%rbp),%r15
	movq 0x18(%rbp),%r14
	movq 0x18(%r14),%r13
	movq 0x10(%r13),%r11
	cmpq %r11,0x10(%r15)
	je L_509810
L_320004:
	movq 0x10(%rbp),%r15
	cmpq $0x1,%r15
	je L_509797
L_320005:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x10(%rbp)
	movq %r14,0x18(%rbp)
	jmp L_320002
.p2align 0x4
L_509797:
L_320006:
	movq 0x20(%rbp),%r13
	cmpq $0x1,%r13
	je L_509809
L_320007:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r14
	xchgq %r11,%r15
L_320008:
	cmpq $0x1,%r15
	jne L_509808
L_320010:
	movq %r14,0x10(%rbp)
L_320011:
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	cmpq $0x1,%r14
	je L_320026
L_320012:
	movq 0x8(%r14),%r15
	movq %r15,0x18(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x20(%rbp)
	movq $0x1,0x28(%rbp)
.p2align 0x4,,0x7
L_320013:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_509806
.p2align 0x4,,0x7
L_320014:
	movq 0x20(%rbp),%r15
	movq 0x18(%r15),%r14
	movq 0x0(%rbp),%r13
	movq 0x10(%r13),%r11
	cmpq %r11,0x10(%r14)
	je L_509804
L_320015:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_509798
L_320016:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x18(%rbp)
	movq %r14,0x20(%rbp)
	jmp L_320013
.p2align 0x4
L_509798:
L_320017:
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_509801
L_320018:
	movq 0x8(%r14),%r13
	xchgq %r13,%r15
L_320019:
	cmpq $0x1,%r15
	je L_509799
L_320020:
	movq (globalObjptr+0x6A40)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_509799:
L_320021:
	movq 0x10(%rbp),%r15
	cmpq $0x1,%r15
	je L_509800
L_320022:
L_320023:
	movw 0x10(%r15),%r14w
	movq $0x22A9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movzwl %r14w,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x1,0x8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_509800:
L_320024:
	movq $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_509801:
L_320026:
	movq 0x10(%rbp),%r15
	cmpq $0x1,%r15
	je L_509802
L_320027:
	jmp L_320023
.p2align 0x4
L_509802:
L_320028:
	movq 0x0(%rbp),%r14
	movq 0x8(%r14),%r13
	cmpq $0x1,%r13
	je L_509803
L_320029:
	movq 0x8(%r13),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%r13),%r13
	movq $0x1,0x18(%rbp)
	movq %r13,%r15
L_320030:
	movq %r15,0x28(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_320031+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp supportedRegistersP_0
.p2align 0x4
L_509803:
L_320055:
	movq $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_509804:
L_320056:
	movq $0x2367,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_509805
L_320057:
	movq %r15,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_320013
.p2align 0x4
L_509805:
L_320058:
	movq 0x28(%rbp),%r15
	jmp L_320019
.p2align 0x4
L_509806:
L_320059:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_320060+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_320060
.p2align 0x4
.long 0x4DE
L_320060:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_320014
.p2align 0x4
L_509808:
L_320009:
	movq (globalObjptr+0x6A38)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_509809:
L_320062:
	movq $0x1,0x10(%rbp)
	jmp L_320011
.p2align 0x4
L_509810:
L_320063:
	movq $0x2365,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_509811
L_320064:
	movq %r15,0x20(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x18(%rbp)
	jmp L_320002
.p2align 0x4
L_509811:
L_320065:
	movq 0x20(%rbp),%r15
	movq 0x18(%rbp),%r13
	xchgq %r13,%r14
	jmp L_320008
.p2align 0x4
L_509812:
L_320066:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_320067+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_320067
.p2align 0x4
.long 0x63C
L_320067:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	jmp L_320003
.p2align 0x4
L_509813:
L_320068:
	movq $0x1,0x10(%rbp)
	jmp L_320011
.p2align 0x4
L_509814:
L_320069:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_320070+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_320070
.p2align 0x4
.long 0x45F
L_320070:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_320000
.p2align 0x4
.long 0x5EF
L_320031:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_320032
L_320053:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_320054+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_320054
.p2align 0x4
.long 0x4E9
L_320054:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_320032:
	movq $0x22AB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_509816
L_320033:
	movq %r15,0x18(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	jmp L_320030
.p2align 0x4
L_509816:
L_320034:
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%rbp)
	movq 0x20(%rbp),%r15
	movq $0x1,0x8(%rbp)
.p2align 0x4,,0x7
L_320035:
	cmpq $0x1,%r15
	je L_509822
L_320036:
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	movw 0x0(%r15),%r14w
	movw %r14w,0x18(%rbp)
	movq $0x1,0x20(%rbp)
L_320037:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_509821
.p2align 0x4,,0x7
L_320038:
	movq $0x22A9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movzwl 0x18(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_509817
L_320039:
	movq %r15,0x20(%rbp)
	movw 0x0(%r14),%r15w
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movw %r15w,0x18(%rbp)
	jmp L_320037
.p2align 0x4
L_509817:
L_320040:
	movw 0x18(%rbp),%r15w
	movw %r15w,0x10(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x8(%rbp)
L_320041:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_509820
.p2align 0x4,,0x7
L_320042:
	movq $0x22A9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movzwl 0x10(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_509818
L_320043:
	movq %r15,0x18(%rbp)
	movw 0x0(%r14),%r15w
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	movw %r15w,0x10(%rbp)
	jmp L_320041
.p2align 0x4
L_509818:
L_320045:
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_509819
L_320046:
	movq %r15,0x8(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_320035
.p2align 0x4
L_509819:
L_320047:
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_509820:
L_320048:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_320049+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_320049
.p2align 0x4
.long 0x524
L_320049:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	jmp L_320042
.p2align 0x4
L_509821:
L_320050:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_320051+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_320051
.p2align 0x4
.long 0xFED
L_320051:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	jmp L_320038
.p2align 0x4
L_509822:
L_320052:
	movq 0x8(%rbp),%r15
	jmp L_320045
.text
.p2align 0x4
.globl freeRegister_0
.hidden freeRegister_0
freeRegister_0:
L_320071:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x48(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_320072
L_320302:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_320303+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_320303
.p2align 0x4
.long 0x4E67
L_320303:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_320072:
	movq 0x38(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq %r13,0x50(%rbp)
	movq (globalObjptr+0x6A58)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_509824
L_320074:
	movl %r13d,0x0(%r15)
	movq %r14,0x98(%rbp)
	leaq L_320156(%rip),%r15
	movq %r15,0x40(%rbp)
	movq %rbp,%r15
	addq $0x48,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x0(%rbp),%r15
	movq %r15,0x60(%rbp)
	movb 0x8(%rbp),%r15b
	movb %r15b,0x68(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x60,%rbp
	leaq (L_320075+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp chooseRegister_0
.p2align 0x4
L_509824:
L_320073:
	movq 0x48(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4508
L_320075:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movw 0x60(%rbp),%r15w
	movw %r15w,0xA(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_320076
L_320300:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_320301+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_320301
.p2align 0x4
.long 0x4E84
L_320301:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_320076:
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_509859
L_320077:
	movq 0x8(%r14),%r13
	movq %r13,0x60(%rbp)
	movq 0x0(%r14),%r15
	movq $0x1,0x68(%rbp)
.p2align 0x4,,0x7
L_320078:
L_320079:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_320080
L_320296:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x115E,%r14
	je L_509857
L_320080:
	movq $0x1,0x70(%rbp)
.p2align 0x4,,0x7
L_320081:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_509856
.p2align 0x4,,0x7
L_320082:
	movq $0x22BB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x60(%rbp),%r14
	cmpq $0x1,%r14
	je L_509826
L_320083:
	movq %r15,0x68(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x60(%rbp)
	jmp L_320078
.p2align 0x4
L_509826:
L_320084:
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x70(%rbp),%r15
	movq $0x1,0x68(%rbp)
.p2align 0x4,,0x7
L_320085:
	cmpq $0x1,%r15
	je L_320095
L_320086:
	movq 0x8(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x78(%rbp)
	movq $0x1,0x80(%rbp)
L_320087:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_509854
.p2align 0x4,,0x7
L_320088:
	movq $0x22B9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x80(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x70(%rbp),%r14
	cmpq $0x1,%r14
	je L_509827
L_320089:
	movq %r15,0x80(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x70(%rbp)
	movq %r15,0x78(%rbp)
	jmp L_320087
.p2align 0x4
L_509827:
L_320090:
	movq 0x78(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x68(%rbp)
L_320091:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_509853
.p2align 0x4,,0x7
L_320092:
	movq $0x22B9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x68(%rbp),%r14
	cmpq $0x1,%r14
	je L_509828
L_320093:
	movq %r15,0x78(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x68(%rbp)
	movq %r15,0x70(%rbp)
	jmp L_320091
.p2align 0x4
L_509828:
L_320094:
	movq %r15,0x68(%rbp)
L_320095:
	movq 0x60(%rbp),%r14
	cmpq $0x1,%r14
	je L_509829
L_320096:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x60(%rbp)
	jmp L_320085
.p2align 0x4
L_509829:
L_320097:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_320098
L_320287:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_320288+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_320288
.p2align 0x4
.long 0x4E81
L_320288:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_320098:
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
L_320099:
	movq 0x58(%rbp),%r14
	cmpq $0x1,%r14
	je L_509851
L_320100:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x58(%rbp)
	movq 0x18(%rbp),%r14
	movq %r14,0x68(%rbp)
	movq $0x1,0x70(%rbp)
.p2align 0x4,,0x7
L_320101:
	movq 0x18(%r15),%r13
	movq %r13,0x78(%rbp)
	movq 0x60(%rbp),%r13
	cmpq $0x1,%r13
	je L_320107
L_320102:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
.p2align 0x4,,0x7
L_320103:
	movq 0x78(%rbp),%r13
	movq 0x10(%r15),%r11
	cmpq %r11,0x10(%r13)
	je L_509834
L_320104:
	cmpq $0x1,%r14
	je L_509830
L_320105:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_320103
.p2align 0x4
L_509830:
L_320107:
	movq 0x58(%rbp),%r14
	cmpq $0x1,%r14
	je L_509831
L_320108:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x58(%rbp)
	jmp L_320101
.p2align 0x4
L_509831:
L_320109:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_320110
L_320192:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_320193+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_320193
.p2align 0x4
.long 0x4E7A
L_320193:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_320110:
	movq 0x68(%rbp),%r15
	movq 0x70(%rbp),%r14
	movq %r14,0x50(%rbp)
L_320111:
	movq 0x0(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x18(%r15),%r14
	cmpq $0x1,%r14
	je L_509832
L_320112:
	movq 0x8(%r14),%r15
	movq %r15,0x70(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x78(%rbp)
	movq $0x1,0x80(%rbp)
L_320113:
	movq 0x78(%rbp),%r15
	movl 0x8(%r15),%r14d
	movl %r14d,0xC(%rbp)
	movl 0xC(%r15),%r14d
	movl %r14d,0x88(%rbp)
	movw 0x10(%r15),%r14w
	movw %r14w,0x8C(%rbp)
	movq 0x18(%r15),%r13
	movq %r13,0x90(%rbp)
	movw 0xA(%rbp),%r15w
	movw %r15w,0xA0(%rbp)
	movw %r14w,0xA2(%rbp)
	addq $0xA0,%rbp
	leaq (L_320114+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp coincide_0
.p2align 0x4
L_509832:
L_320191:
	movq $0x1,%r15
L_320120:
	movq $0x1319,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x18(%r14)
	addq $0x28,%r12
	movq 0x58(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x60(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x68(%rbp),%r15
	movq %r15,0x10(%r14)
	movq %r14,0x70(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x60,%rbp
	leaq (L_320121+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp commitRegisters_0
.p2align 0x4
L_509834:
L_320194:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_320195
L_320283:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_320284+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_320284
.p2align 0x4
.long 0x4E7C
L_320284:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_320195:
	movq 0x0(%rbp),%r15
	cmpq $0x1,%r15
	je L_509848
L_320196:
	movq 0x8(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x88(%rbp)
	movq $0x1,0x90(%rbp)
.p2align 0x4,,0x7
L_320197:
L_320198:
	movq 0x88(%rbp),%r15
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_320199
L_320247:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x115E,%r14
	je L_509845
L_320199:
	movq 0x80(%rbp),%r15
	cmpq $0x1,%r15
	je L_509835
L_320200:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x80(%rbp)
	movq %r14,0x88(%rbp)
	jmp L_320197
.p2align 0x4
L_509835:
L_320201:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_320202
L_320245:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r14d
	movl %r14d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r14
	movq %r14,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_320246+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_320246
.p2align 0x4
.long 0x4E7E
L_320246:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_320202:
	movq 0x90(%rbp),%r15
	movq %r15,0x80(%rbp)
L_320203:
	movq 0x78(%rbp),%r15
	movq 0x18(%r15),%r14
	movb 0x0(%r14),%r13b
	movb %r13b,0x9(%rbp)
	movq 0x50(%rbp),%r15
	movq 0x18(%r15),%r14
	movq 0x10(%r15),%r11
	movq 0x8(%r15),%r10
	movq 0x0(%r15),%r9
	cmpb $0x2,%r13b
	je L_509842
	cmpb $0x3,%r13b
	je L_509840
	cmpb $0x4,%r13b
	je L_509838
	cmpb $0x5,%r13b
	je L_509836
L_320204:
	movq 0x48(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x6A48)(%rip),%r13
	movq %r13,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_509836:
L_320242:
	cmpq $0x1,%r9
	je L_509837
L_320243:
	movq 0x8(%r9),%r15
	movq %r15,0x88(%rbp)
	movw 0x0(%r9),%r15w
	movw %r15w,0xC(%rbp)
	movq $0x1,0x90(%rbp)
L_320207:
	movw 0xC(%rbp),%r15w
	movw %r15w,0xA0(%rbp)
	movw 0xA(%rbp),%r15w
	movw %r15w,0xA2(%rbp)
	addq $0xA0,%rbp
	leaq (L_320208+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp coincide_0
.p2align 0x4
L_509837:
L_320244:
	movq $0x1,%r15
L_320213:
	movq %r15,0xB8(%rbp)
	movzwq 0xA(%rbp),%r15
	shlq $0x2,%r15
	orq $0x2,%r15
	movq $0x22F9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%r14)
	movq %r14,0x90(%rbp)
	movb 0x9(%rbp),%r15b
	movb %r15b,0x88(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x98(%rbp)
	movl $0x1,0xA0(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0xA8(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0xB0(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0x80,%rbp
	leaq (L_320214+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toRegisterMemLoc_0
.p2align 0x4
L_509838:
L_320239:
	cmpq $0x1,%r14
	je L_509839
L_320240:
	movq 0x8(%r14),%r15
	movq %r15,0x88(%rbp)
	movw 0x0(%r14),%r15w
	movw %r15w,0xC(%rbp)
	movq $0x1,0x90(%rbp)
	jmp L_320207
.p2align 0x4
L_509839:
L_320241:
	movq $0x1,%r15
	jmp L_320213
.p2align 0x4
L_509840:
L_320236:
	cmpq $0x1,%r10
	je L_509841
L_320237:
	movq 0x8(%r10),%r15
	movq %r15,0x88(%rbp)
	movw 0x0(%r10),%r15w
	movw %r15w,0xC(%rbp)
	movq $0x1,0x90(%rbp)
	jmp L_320207
.p2align 0x4
L_509841:
L_320238:
	movq $0x1,%r15
	jmp L_320213
.p2align 0x4
L_509842:
L_320205:
	cmpq $0x1,%r11
	je L_509843
L_320206:
	movq 0x8(%r11),%r15
	movq %r15,0x88(%rbp)
	movw 0x0(%r11),%r15w
	movw %r15w,0xC(%rbp)
	movq $0x1,0x90(%rbp)
	jmp L_320207
.p2align 0x4
L_509843:
L_320235:
	movq $0x1,%r15
	jmp L_320213
.p2align 0x4
L_509845:
L_320248:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_320249
L_320280:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_320281+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_320281
.p2align 0x4
.long 0x4E5D
L_320281:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_320249:
	movq 0x88(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x255B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x98(%rbp)
	addq $0x18,%r12
	movq 0x90(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x22B9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq %r15,0xA8(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0xB0(%rbp)
	addq $0xA8,%rbp
	leaq (L_320250+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp supportRemoveP_0
.p2align 0x4
L_509848:
L_320282:
	movq $0x1,0x80(%rbp)
	jmp L_320203
.p2align 0x4
L_509851:
L_320286:
	movq 0x18(%rbp),%r15
	movq $0x1,0x50(%rbp)
	jmp L_320111
.p2align 0x4
L_509853:
L_320289:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_320290+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_320290
.p2align 0x4
.long 0x4E7C
L_320290:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	jmp L_320092
.p2align 0x4
L_509854:
L_320291:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_320292+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_320292
.p2align 0x4
.long 0x4E66
L_320292:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	jmp L_320088
.p2align 0x4
L_509856:
L_320294:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_320295+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_320295
.p2align 0x4
.long 0x4E82
L_320295:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	jmp L_320082
.p2align 0x4
L_509857:
L_320297:
	movq 0x0(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_320298+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp supportedMemLocsP_0
.p2align 0x4
L_509859:
L_320299:
	movq $0x1,0x60(%rbp)
	jmp L_320099
.p2align 0x4
.long 0x904
L_320156:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	cmpq $0x1E,%r15
	je L_509862
L_320157:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_320158
L_320159:
L_320158:
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq 0x48(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_509862:
L_320160:
	movq (globalObjptr+0x6A58)(%rip),%r15
	movl 0x0(%r15),%r14d
	decl %r14d
	jo L_320161
L_320162:
	movl %r14d,0x0(%r15)
	testl %r14d,%r14d
	jz L_509863
L_320163:
	movq 0x48(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x1E,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_509863:
L_320164:
	movq (globalObjptr+0x6A58)(%rip),%r15
	movl 0x0(%r15),%r14d
	incl %r14d
	jo L_509864
L_320165:
	movl %r14d,0x0(%r15)
	movq 0x48(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x0(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x58,%rbp
	leaq (L_320166+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp spillRegisters_0
.p2align 0x4
L_509864:
L_320161:
	movq 0x48(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4E77
L_320114:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movl 0xA0(%rbp),%r15d
	movl %r15d,0x98(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_320115
L_320189:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_320190+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_320190
.p2align 0x4
.long 0x4E79
L_320190:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_320115:
	movl 0x98(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_509867
L_320116:
	movq 0x78(%rbp),%r15
L_320117:
	movq $0x2365,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x80(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x70(%rbp),%r15
	cmpq $0x1,%r15
	je L_509866
L_320118:
	movq %r14,0x80(%rbp)
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x70(%rbp)
	movq %r14,0x78(%rbp)
	jmp L_320113
.p2align 0x4
L_509866:
L_320119:
	xchgq %r14,%r15
	jmp L_320120
.p2align 0x4
L_509867:
L_320188:
	movq $0x11A7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x28,%r12
	movq (globalWord64+0x1150)(%rip),%r14
	movq %r14,0x0(%r15)
	movl 0xC(%rbp),%r14d
	movl %r14d,0x8(%r15)
	movl 0x88(%rbp),%r14d
	movl %r14d,0xC(%r15)
	movzwl 0x8C(%rbp),%r14d
	movl %r14d,0x10(%r15)
	movl $0x0,0x14(%r15)
	movq 0x90(%rbp),%r14
	movq %r14,0x18(%r15)
	jmp L_320117
.p2align 0x4
.long 0x4508
L_320121:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_320122
L_320154:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_320155+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_320155
.p2align 0x4
.long 0xEF5
L_320155:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_320122:
	movq (globalObjptr+0x6A58)(%rip),%r15
	movl 0x0(%r15),%r14d
	decl %r14d
	jo L_320073
L_320123:
	movl %r14d,0x0(%r15)
	movq $0x2551,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq 0x50(%rbp),%r14
	cmpq $0x1,%r14
	je L_509878
L_320124:
	movq %r15,0x10(%rbp)
L_320125:
	movq %r14,0x18(%rbp)
	movq $0x1,0x20(%rbp)
.p2align 0x4,,0x7
L_320126:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_509877
.p2align 0x4,,0x7
L_320127:
	movq $0x2551,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x18(%rbp),%r11
	movq %r11,0x0(%r14)
	movq 0x20(%rbp),%r11
	movq %r11,0x8(%r14)
	movq 0x10(%rbp),%r11
	cmpq $0x1,%r11
	je L_509876
L_320128:
	movq 0x8(%r11),%r13
	movq 0x0(%r11),%r15
L_320129:
	cmpq $0x1,%r15
	je L_509869
L_320130:
	movq %r13,0x10(%rbp)
	movq %r14,0x20(%rbp)
	movq %r15,0x18(%rbp)
L_320131:
	jmp L_320126
.p2align 0x4
L_509869:
L_320132:
	movq %r13,0x10(%rbp)
	movq %r14,0x18(%rbp)
.p2align 0x4,,0x7
L_320133:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_509875
.p2align 0x4,,0x7
L_320134:
	movq 0x10(%rbp),%r11
	cmpq $0x1,%r11
	je L_509870
L_320135:
	movq 0x8(%r11),%r13
	movq 0x0(%r11),%r15
	movq 0x18(%rbp),%r14
	jmp L_320129
.p2align 0x4
L_509870:
L_320136:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_509874
L_320137:
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%r15),%r15
	movq %r15,0x18(%rbp)
	movq $0x1,0x20(%rbp)
.p2align 0x4,,0x7
L_320138:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_509873
.p2align 0x4,,0x7
L_320139:
	movq $0x2551,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_509871
L_320140:
	movq %r15,0x20(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x18(%rbp)
	jmp L_320138
.p2align 0x4
L_509871:
L_320142:
	cmpq $0x1,%r15
	je L_509872
L_320143:
	movq $0x2371,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x10(%rbp)
	addq $0x10,%r12
	movq 0x48(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x58(%rbp),%r15
	movq %r15,0x0(%rbp)
	movw 0xA(%rbp),%r15w
	movw %r15w,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_509872:
L_320144:
	movq 0x48(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x58(%rbp),%r15
	movq %r15,0x0(%rbp)
	movw 0xA(%rbp),%r15w
	movw %r15w,0x8(%rbp)
	movq $0x1,0x10(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_509873:
L_320145:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_320146+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_320146
.p2align 0x4
.long 0x4E32
L_320146:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	jmp L_320139
.p2align 0x4
L_509874:
L_320147:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_320142
.p2align 0x4
L_509875:
L_320148:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_320149+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_320149
.p2align 0x4
.long 0x4E33
L_320149:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	jmp L_320134
.p2align 0x4
L_509876:
L_320150:
	movq 0x20(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq $0x1,0x20(%rbp)
	jmp L_320138
.p2align 0x4
L_509877:
L_320151:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_320152+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_320152
.p2align 0x4
.long 0x4E32
L_320152:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	jmp L_320127
.p2align 0x4
L_509878:
L_320153:
	movq %r15,0x10(%rbp)
	movq $0x1,0x18(%rbp)
	jmp L_320133
.p2align 0x4
.long 0x4E3F
L_320208:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movl 0xA0(%rbp),%r15d
	movl %r15d,0x98(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_320209
L_320233:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_320234+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_320234
.p2align 0x4
.long 0x4E7D
L_320234:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_320209:
	movl 0x98(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_509882
L_320210:
	movq $0x22A9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movzwl 0xC(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x90(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x88(%rbp),%r14
	cmpq $0x1,%r14
	je L_320213
L_320211:
	movq %r15,0x90(%rbp)
	movw 0x0(%r14),%r15w
	movq 0x8(%r14),%r14
	movq %r14,0x88(%rbp)
	movw %r15w,0xC(%rbp)
	jmp L_320207
.p2align 0x4
L_509882:
L_320230:
	movq 0x88(%rbp),%r15
	cmpq $0x1,%r15
	je L_509883
L_320231:
	movw 0x0(%r15),%r14w
	movq 0x8(%r15),%r15
	movq %r15,0x88(%rbp)
	movw %r14w,0xC(%rbp)
	jmp L_320207
.p2align 0x4
L_509883:
L_320232:
	movq 0x90(%rbp),%r14
	xchgq %r14,%r15
	jmp L_320213
.p2align 0x4
.long 0x4E7B
L_320214:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x68(%rbp)
	movw 0x88(%rbp),%r15w
	movw %r15w,0xC(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0x78(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_320215
L_320228:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_320229+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_320229
.p2align 0x4
.long 0x4E7C
L_320229:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_320215:
	movq 0x70(%rbp),%r14
	cmpq $0x1,%r14
	je L_509888
L_320216:
L_320217:
	movq 0x78(%rbp),%r13
	cmpq $0x1,%r13
	je L_509886
L_320218:
L_320219:
	movq $0x2373,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	movq 0x58(%rbp),%r14
	cmpq $0x1,%r14
	je L_509885
L_320220:
	movq %r15,0x70(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x58(%rbp)
	jmp L_320101
.p2align 0x4
L_509885:
L_320221:
	movq %r15,0x50(%rbp)
	movq 0x68(%rbp),%r15
	jmp L_320111
.p2align 0x4
L_509886:
L_320222:
	movq 0x58(%rbp),%r11
	cmpq $0x1,%r11
	je L_509887
L_320223:
	movq 0x0(%r11),%r15
	movq 0x8(%r11),%r11
	movq %r11,0x58(%rbp)
	jmp L_320101
.p2align 0x4
L_509887:
L_320224:
	movq 0x68(%rbp),%r15
	movq %r14,0x50(%rbp)
	jmp L_320111
.p2align 0x4
L_509888:
L_320225:
	movq 0x58(%rbp),%r13
	cmpq $0x1,%r13
	je L_509889
L_320226:
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x58(%rbp)
	movq 0x78(%rbp),%r14
	movq %r14,0x70(%rbp)
	jmp L_320101
.p2align 0x4
L_509889:
L_320227:
	movq 0x68(%rbp),%r15
	movq 0x78(%rbp),%r11
	movq %r11,0x50(%rbp)
	jmp L_320111
.p2align 0x4
.long 0x4E7F
L_320250:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq $0x1,0x98(%rbp)
.p2align 0x4,,0x7
L_320251:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_509900
.p2align 0x4,,0x7
L_320252:
	movq $0x255B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x90(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x98(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x88(%rbp),%r14
	cmpq $0x1,%r14
	je L_509891
L_320253:
	movq %r15,0x98(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x88(%rbp)
	movq %r15,0x90(%rbp)
	jmp L_320251
.p2align 0x4
L_509891:
L_320254:
	movq 0x98(%rbp),%r14
	movq %r14,0x88(%rbp)
	movq 0x90(%rbp),%r15
	movq $0x1,0x90(%rbp)
.p2align 0x4,,0x7
L_320255:
	cmpq $0x1,%r15
	je L_320265
L_320256:
	movq 0x8(%r15),%r14
	movq %r14,0x98(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq $0x1,0xA8(%rbp)
L_320257:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_509898
.p2align 0x4,,0x7
L_320258:
	movq $0x22F9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xA0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xA8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x98(%rbp),%r14
	cmpq $0x1,%r14
	je L_509892
L_320259:
	movq %r15,0xA8(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x98(%rbp)
	movq %r15,0xA0(%rbp)
	jmp L_320257
.p2align 0x4
L_509892:
L_320260:
	movq 0xA0(%rbp),%r15
	movq %r15,0x98(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0xA0(%rbp)
	movq 0xA8(%rbp),%r15
	movq %r15,0x90(%rbp)
L_320261:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_509897
.p2align 0x4,,0x7
L_320262:
	movq $0x22F9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x98(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xA0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x90(%rbp),%r14
	cmpq $0x1,%r14
	je L_509893
L_320263:
	movq %r15,0xA0(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x90(%rbp)
	movq %r15,0x98(%rbp)
	jmp L_320261
.p2align 0x4
L_509893:
L_320264:
	movq %r15,0x90(%rbp)
L_320265:
	movq 0x88(%rbp),%r14
	cmpq $0x1,%r14
	je L_509894
L_320266:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x88(%rbp)
	jmp L_320255
.p2align 0x4
L_509894:
L_320267:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_320268
L_320271:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_320272+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_320272
.p2align 0x4
.long 0x4E80
L_320272:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_320268:
	movq 0x80(%rbp),%r15
	cmpq $0x1,%r15
	je L_509895
L_320269:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x80(%rbp)
	movq %r14,0x88(%rbp)
	jmp L_320197
.p2align 0x4
L_509895:
L_320270:
	movq 0x90(%rbp),%r15
	movq %r15,0x80(%rbp)
	jmp L_320203
.p2align 0x4
L_509897:
L_320273:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_320274+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_320274
.p2align 0x4
.long 0x4E61
L_320274:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	jmp L_320262
.p2align 0x4
L_509898:
L_320275:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_320276+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_320276
.p2align 0x4
.long 0x4E65
L_320276:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	jmp L_320258
.p2align 0x4
L_509900:
L_320278:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_320279+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_320279
.p2align 0x4
.long 0x4E62
L_320279:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	jmp L_320252
.p2align 0x4
.long 0x4E83
L_320298:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x70(%rbp)
	jmp L_320081
.p2align 0x4
.long 0x4502
L_320166:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x60(%rbp),%r14
	movq %r14,0x50(%rbp)
	leaq L_320179(%rip),%r14
	movq %r14,0x40(%rbp)
	movq %rbp,%r14
	addq $0x48,%r14
	subq (gcState+0x560)(%rip),%r14
	movq %r14,(gcState+0x20)(%rip)
	movq 0x0(%rbp),%r14
	movq %r14,0x60(%rbp)
	movb 0x8(%rbp),%r14b
	movb %r14b,0x68(%rbp)
	movq 0x10(%rbp),%r14
	movq %r14,0x70(%rbp)
	movq %r15,0x78(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x60,%rbp
	leaq (L_320167+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp freeRegister_0
.p2align 0x4
.long 0x61B
L_320167:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	movw 0x68(%rbp),%r15w
	movw %r15w,0x60(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_320168
L_320177:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_320178+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_320178
.p2align 0x4
.long 0x16E5
L_320178:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_320168:
	movq 0x50(%rbp),%r14
	cmpq $0x1,%r14
	je L_509903
L_320169:
L_320170:
	movq 0x68(%rbp),%r13
	cmpq $0x1,%r13
	je L_509902
L_320171:
L_320172:
	movq $0x2373,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
L_320173:
	movq (globalObjptr+0x6A58)(%rip),%r14
	movl 0x0(%r14),%r13d
	decl %r13d
	jo L_320161
L_320174:
	movl %r13d,0x0(%r14)
	movq %r15,0x10(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x58(%rbp),%r15
	movq %r15,0x0(%rbp)
	movw 0x60(%rbp),%r15w
	movw %r15w,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_509902:
L_320175:
	movq %r14,%r15
	jmp L_320173
.p2align 0x4
L_509903:
L_320176:
	movq 0x68(%rbp),%r15
	jmp L_320173
.p2align 0x4
.long 0x904
L_320179:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	cmpq $0x1E,%r15
	je L_509906
L_320180:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_320181
L_320182:
L_320181:
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq 0x48(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_509906:
L_320183:
	movq 0x48(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x5D30)(%rip),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_320184+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x279E
L_320184:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_320185
L_320186:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_320187+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_320187
.p2align 0x4
.long 0x4E78
L_320187:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_320185:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl supportRemoveP_0
.hidden supportRemoveP_0
supportRemoveP_0:
L_320304:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_320305
L_320336:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_320337+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_320337
.p2align 0x4
.long 0x45F
L_320337:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_320305:
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_509917
L_320306:
	movq 0x8(%r14),%r13
	movq %r13,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq $0x1,0x18(%rbp)
.p2align 0x4,,0x7
L_320307:
	movq 0x8(%rbp),%r14
	movq 0x10(%r15),%r13
	cmpq %r13,0x10(%r14)
	jne L_509916
L_320334:
	movq $0x1,0x20(%rbp)
.p2align 0x4,,0x7
L_320310:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_509915
.p2align 0x4,,0x7
L_320311:
	movq $0x255B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_509908
L_320312:
	movq %r15,0x18(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	jmp L_320307
.p2align 0x4
L_509908:
L_320313:
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%rbp)
	movq 0x20(%rbp),%r15
	movq $0x1,0x8(%rbp)
.p2align 0x4,,0x7
L_320314:
	cmpq $0x1,%r15
	je L_509914
L_320315:
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	movq $0x1,0x20(%rbp)
L_320316:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_509913
.p2align 0x4,,0x7
L_320317:
	movq $0x22F9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_509909
L_320318:
	movq %r15,0x20(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x18(%rbp)
	jmp L_320316
.p2align 0x4
L_509909:
L_320319:
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x8(%rbp)
L_320320:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_509912
.p2align 0x4,,0x7
L_320321:
	movq $0x22F9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_509910
L_320322:
	movq %r15,0x18(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x10(%rbp)
	jmp L_320320
.p2align 0x4
L_509910:
L_320324:
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_509911
L_320325:
	movq %r15,0x8(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_320314
.p2align 0x4
L_509911:
L_320326:
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_509912:
L_320327:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_320328+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_320328
.p2align 0x4
.long 0x4AE
L_320328:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	jmp L_320321
.p2align 0x4
L_509913:
L_320329:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_320330+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_320330
.p2align 0x4
.long 0x63C
L_320330:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	jmp L_320317
.p2align 0x4
L_509914:
L_320331:
	movq 0x8(%rbp),%r15
	jmp L_320324
.p2align 0x4
L_509915:
L_320332:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_320333+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_320333
.p2align 0x4
.long 0x4E9
L_320333:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	jmp L_320311
.p2align 0x4
L_509916:
L_320308:
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_320309+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp supportRemoveP_0
.p2align 0x4
L_509917:
L_320335:
	movq $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x5EF
L_320309:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	jmp L_320310
.text
.p2align 0x4
.globl supportedMemLocsP_0
.hidden supportedMemLocsP_0
supportedMemLocsP_0:
L_320338:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_320409
L_320339:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_509936
L_320340:
	movq 0x8(%rbp),%r15
	movq 0x18(%r15),%r14
	cmpq $0x1,%r14
	je L_509935
L_320341:
	movq 0x8(%r14),%r15
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x18(%rbp)
	movq $0x1,0x20(%rbp)
.p2align 0x4,,0x7
L_320342:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_509934
.p2align 0x4,,0x7
L_320343:
	movq 0x18(%rbp),%r15
	movq 0x18(%r15),%r14
	movq 0x0(%rbp),%r13
	movq 0x10(%r13),%r11
	cmpq %r11,0x10(%r14)
	je L_509932
L_320344:
	movq 0x10(%rbp),%r15
	cmpq $0x1,%r15
	je L_509919
L_320345:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x10(%rbp)
	movq %r14,0x18(%rbp)
	jmp L_320342
.p2align 0x4
L_509919:
L_320346:
	movq 0x20(%rbp),%r13
	cmpq $0x1,%r13
	je L_509931
L_320347:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r14
	xchgq %r11,%r15
L_320348:
	cmpq $0x1,%r15
	jne L_509930
L_320350:
	movq %r14,0x10(%rbp)
L_320351:
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	cmpq $0x1,%r14
	je L_320366
L_320352:
	movq 0x8(%r14),%r15
	movq %r15,0x18(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x20(%rbp)
	movq $0x1,0x28(%rbp)
.p2align 0x4,,0x7
L_320353:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_509928
.p2align 0x4,,0x7
L_320354:
	movq 0x0(%rbp),%r15
	movq 0x20(%rbp),%r14
	movq 0x18(%r14),%r13
	movq 0x10(%r13),%r11
	cmpq %r11,0x10(%r15)
	je L_509926
L_320355:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_509920
L_320356:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x18(%rbp)
	movq %r14,0x20(%rbp)
	jmp L_320353
.p2align 0x4
L_509920:
L_320357:
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_509923
L_320358:
	movq 0x8(%r14),%r13
	xchgq %r13,%r15
L_320359:
	cmpq $0x1,%r15
	je L_509921
L_320360:
	movq (globalObjptr+0x6A40)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_509921:
L_320361:
	cmpq $0x1,0x10(%rbp)
	jne L_509922
L_320364:
	movq $0x22B9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_509922:
L_320363:
	movq $0x22B9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_509923:
L_320366:
	cmpq $0x1,0x10(%rbp)
	jne L_320363
L_320368:
	movq 0x0(%rbp),%r14
	movq 0x8(%r14),%r13
	cmpq $0x1,%r13
	je L_509924
L_320369:
	movq 0x8(%r13),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%r13),%r13
	movq $0x1,0x18(%rbp)
	movq %r13,%r15
L_320370:
	movq %r15,0x28(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_320371+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp supportedMemLocsP_0
.p2align 0x4
L_509924:
L_320395:
	movq $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_509926:
L_320396:
	movq $0x2367,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_509927
L_320397:
	movq %r15,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_320353
.p2align 0x4
L_509927:
L_320398:
	movq 0x28(%rbp),%r15
	jmp L_320359
.p2align 0x4
L_509928:
L_320399:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_320400+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_320400
.p2align 0x4
.long 0x4DE
L_320400:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_320354
.p2align 0x4
L_509930:
L_320349:
	movq (globalObjptr+0x6A38)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_509931:
L_320402:
	movq $0x1,0x10(%rbp)
	jmp L_320351
.p2align 0x4
L_509932:
L_320403:
	movq $0x2365,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_509933
L_320404:
	movq %r15,0x20(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x18(%rbp)
	jmp L_320342
.p2align 0x4
L_509933:
L_320405:
	movq 0x20(%rbp),%r15
	movq 0x18(%rbp),%r13
	xchgq %r13,%r14
	jmp L_320348
.p2align 0x4
L_509934:
L_320406:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_320407+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_320407
.p2align 0x4
.long 0x63C
L_320407:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	jmp L_320343
.p2align 0x4
L_509935:
L_320408:
	movq $0x1,0x10(%rbp)
	jmp L_320351
.p2align 0x4
L_509936:
L_320409:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_320410+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_320410
.p2align 0x4
.long 0x45F
L_320410:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_320340
.p2align 0x4
.long 0x5EF
L_320371:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_320372
L_320393:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_320394+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_320394
.p2align 0x4
.long 0x4E9
L_320394:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_320372:
	movq $0x22BB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_509938
L_320373:
	movq %r15,0x18(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	jmp L_320370
.p2align 0x4
L_509938:
L_320374:
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%rbp)
	movq 0x20(%rbp),%r15
	movq $0x1,0x8(%rbp)
.p2align 0x4,,0x7
L_320375:
	cmpq $0x1,%r15
	je L_509944
L_320376:
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	movq $0x1,0x20(%rbp)
L_320377:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_509943
.p2align 0x4,,0x7
L_320378:
	movq $0x22B9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_509939
L_320379:
	movq %r15,0x20(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x18(%rbp)
	jmp L_320377
.p2align 0x4
L_509939:
L_320380:
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x8(%rbp)
L_320381:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_509942
.p2align 0x4,,0x7
L_320382:
	movq $0x22B9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_509940
L_320383:
	movq %r15,0x18(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x10(%rbp)
	jmp L_320381
.p2align 0x4
L_509940:
L_320385:
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_509941
L_320386:
	movq %r15,0x8(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_320375
.p2align 0x4
L_509941:
L_320387:
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_509942:
L_320388:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_320389+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_320389
.p2align 0x4
.long 0x4AE
L_320389:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	jmp L_320382
.p2align 0x4
L_509943:
L_320390:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_320391+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_320391
.p2align 0x4
.long 0x63C
L_320391:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	jmp L_320378
.p2align 0x4
L_509944:
L_320392:
	movq 0x8(%rbp),%r15
	jmp L_320385
.text
.p2align 0x4
.globl x_2202
.hidden x_2202
x_2202:
L_320411:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_320412
L_320437:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_320438+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_320438
.p2align 0x4
.long 0x45B
L_320438:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_320412:
	movq 0x8(%rbp),%r13
	movq 0x8(%r13),%r11
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x0(%r13),%r10
	cmpq 0x10(%r10),%r14
	je L_509947
L_320413:
L_320414:
	cmpq 0x10(%r15),%r14
	je L_509946
L_320415:
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_509946:
L_320416:
	movq 0x0(%rbp),%r14
	movq 0x18(%r14),%r13
	movb 0x0(%r13),%r15b
	movb %r15b,0x18(%rbp)
	movb 0x1(%r13),%r15b
	movb %r15b,0x19(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x20(%rbp)
	movq 0x10(%r13),%r15
	movq %r15,0x28(%rbp)
	movq 0x18(%r13),%r11
	movq %r11,0x30(%rbp)
	movq 0x20(%r13),%r11
	movq %r11,0x38(%rbp)
	movq 0x28(%r13),%r11
	movq %r11,0x40(%rbp)
	movq %r15,0x50(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x50,%rbp
	leaq (L_320417+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2205
.p2align 0x4
L_509947:
	xchgq %r11,%r15
	jmp L_320414
.p2align 0x4
.long 0x10B7
L_320417:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x58,%rbp
	leaq (L_320418+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2205
.p2align 0x4
.long 0x49C8
L_320418:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_509955
L_320420:
	movq 0x48(%rbp),%r14
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_320421
L_320422:
	movq 0x10(%r15),%r13
	cmpq %r13,0x10(%r14)
	je L_509949
L_320421:
	movb 0x18(%rbp),%r15b
	movb %r15b,0x0(%rbp)
	movb 0x19(%rbp),%r15b
	movb %r15b,0x1(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x10(%rbp)
	jmp construct_3
.p2align 0x4
L_509949:
L_320425:
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je L_509952
L_320427:
	movq 0x8(%rbp),%r14
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_320421
L_320428:
	movq 0x10(%r14),%r13
	cmpq %r13,0x10(%r15)
	jne L_320421
L_320431:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_509952:
L_320432:
	cmpq $0x1,0x8(%rbp)
	je L_320431
	jmp L_320421
.p2align 0x4
L_509955:
L_320434:
	cmpq $0x1,0x48(%rbp)
	je L_320425
	jmp L_320421
.text
.p2align 0x4
.globl x_2205
.hidden x_2205
x_2205:
L_320439:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_320440
L_320444:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_320445+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_320445
.p2align 0x4
.long 0x45B
L_320445:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_320440:
	movq 0x0(%rbp),%r15
	cmpq $0x1,%r15
	je L_509957
L_320441:
	movq 0x8(%rbp),%r14
	movq %r14,0x18(%rbp)
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_320442+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2202
.p2align 0x4
L_509957:
L_320443:
	movq $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_320442:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl x_2200
.hidden x_2200
x_2200:
L_320446:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_320447
L_320478:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_320479+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_320479
.p2align 0x4
.long 0x45B
L_320479:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_320447:
	movq 0x8(%rbp),%r13
	cmpq $0x1,%r13
	je L_320453
L_320448:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
.p2align 0x4,,0x7
L_320449:
	movq 0x8(%r15),%r13
	movq 0x18(%r13),%r11
	movq 0x0(%rbp),%r10
	movq 0x10(%r10),%r9
	cmpq %r9,0x10(%r11)
	je L_509961
L_320450:
	cmpq $0x1,%r14
	je L_509959
L_320451:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq %r13,%r15
	jmp L_320449
.p2align 0x4
L_509959:
L_320453:
	movq 0x0(%rbp),%r15
L_320454:
	movq 0x0(%rbp),%r14
	movq 0x10(%r14),%r13
	cmpq %r13,0x10(%r15)
	je L_509960
L_320455:
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_509960:
L_320456:
	movq 0x0(%rbp),%r14
	movq 0x18(%r14),%r13
	movb 0x0(%r13),%r15b
	movb %r15b,0x18(%rbp)
	movb 0x1(%r13),%r15b
	movb %r15b,0x19(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x20(%rbp)
	movq 0x10(%r13),%r15
	movq %r15,0x28(%rbp)
	movq 0x18(%r13),%r11
	movq %r11,0x30(%rbp)
	movq 0x20(%r13),%r11
	movq %r11,0x38(%rbp)
	movq 0x28(%r13),%r11
	movq %r11,0x40(%rbp)
	movq %r15,0x50(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x50,%rbp
	leaq (L_320457+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2206
.p2align 0x4
L_509961:
L_320476:
	movq 0x0(%r15),%r14
	movq %r14,%r15
	jmp L_320454
.p2align 0x4
.long 0x10B7
L_320457:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x58,%rbp
	leaq (L_320458+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2206
.p2align 0x4
.long 0x49C8
L_320458:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_509970
L_320460:
	movq 0x48(%rbp),%r14
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_320461
L_320462:
	movq 0x10(%r14),%r13
	cmpq %r13,0x10(%r15)
	je L_509964
L_320461:
	movb 0x18(%rbp),%r15b
	movb %r15b,0x0(%rbp)
	movb 0x19(%rbp),%r15b
	movb %r15b,0x1(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x10(%rbp)
	jmp construct_3
.p2align 0x4
L_509964:
L_320465:
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je L_509967
L_320467:
	movq 0x8(%rbp),%r14
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_320461
L_320468:
	movq 0x10(%r14),%r13
	cmpq %r13,0x10(%r15)
	jne L_320461
L_320471:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_509967:
L_320472:
	cmpq $0x1,0x8(%rbp)
	je L_320471
	jmp L_320461
.p2align 0x4
L_509970:
L_320474:
	cmpq $0x1,0x48(%rbp)
	je L_320465
	jmp L_320461
.text
.p2align 0x4
.globl x_2206
.hidden x_2206
x_2206:
L_320480:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_320481
L_320485:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_320486+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_320486
.p2align 0x4
.long 0x45B
L_320486:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_320481:
	movq 0x0(%rbp),%r15
	cmpq $0x1,%r15
	je L_509972
L_320482:
	movq 0x8(%rbp),%r14
	movq %r14,0x18(%rbp)
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_320483+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_2200
.p2align 0x4
L_509972:
L_320484:
	movq $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_320483:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl toRegisterImmediate_0
.hidden toRegisterImmediate_0
toRegisterImmediate_0:
L_320487:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x48(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_320488
L_320590:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_320591+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_320591
.p2align 0x4
.long 0x4E67
L_320591:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_320488:
	movq 0x38(%rbp),%r15
	movq 0xB0(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0xA8(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0xA0(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x98(%r15),%r14
	movq %r14,0x68(%rbp)
	movq (globalObjptr+0x6A58)(%rip),%r14
	movl 0x0(%r14),%r13d
	incl %r13d
	jo L_509974
L_320490:
	movl %r13d,0x0(%r14)
	leaq L_320550(%rip),%r14
	movq %r14,0x40(%rbp)
	movq %rbp,%r14
	addq $0x48,%r14
	subq (gcState+0x560)(%rip),%r14
	movq %r14,(gcState+0x20)(%rip)
	movq 0x0(%rbp),%r14
	movq %r14,0x78(%rbp)
	movb 0x8(%rbp),%r14b
	movb %r14b,0x80(%rbp)
	movq 0x10(%rbp),%r14
	movq %r14,0x88(%rbp)
	movq 0x18(%rbp),%r14
	movq %r14,0x90(%rbp)
	movq $0x1,0x98(%rbp)
	movq 0x20(%rbp),%r14
	movq %r14,0xA0(%rbp)
	movq 0x30(%rbp),%r14
	movq %r14,0xA8(%rbp)
	movq %r15,0xB0(%rbp)
	addq $0x78,%rbp
	leaq (L_320491+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp freeRegister_0
.p2align 0x4
L_509974:
L_320489:
	movq 0x48(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4E83
L_320491:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x70(%rbp)
	movw 0x80(%rbp),%r15w
	movw %r15w,0xA(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x78(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_320492
L_320588:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_320589+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_320589
.p2align 0x4
.long 0x4E7C
L_320589:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_320492:
	movq (globalObjptr+0x6A58)(%rip),%r15
	movl 0x0(%r15),%r14d
	decl %r14d
	jo L_320489
L_320493:
	movl %r14d,0x0(%r15)
	movq 0x28(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x115A,%r15
	jne L_509987
L_320525:
	movq 0x0(%r14),%r15
	movq %r15,0x80(%rbp)
	cmpb $0x2,0x8(%rbp)
	jne L_509976
L_320528:
	movq 0x0(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x58(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x90(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x98(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0xA8(%rbp)
	addq $0xA8,%rbp
	leaq (L_320529+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_509976:
L_320527:
	movzwq 0xA(%rbp),%r15
	shlq $0x2,%r15
	orq $0x2,%r15
	movq $0x22C3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x22DF,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x20,%r12
	movzbl 0x8(%rbp),%r14d
	movl %r14d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq $0x2327,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x10,%r12
x_1049:
	movq $0x236B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x2551,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq 0x78(%rbp),%r14
	cmpq $0x1,%r14
	je L_509986
L_320495:
	movq %r15,0x10(%rbp)
L_320496:
	movq %r14,0x18(%rbp)
	movq $0x1,0x20(%rbp)
.p2align 0x4,,0x7
L_320497:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_509985
.p2align 0x4,,0x7
L_320498:
	movq $0x2551,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x18(%rbp),%r11
	movq %r11,0x0(%r14)
	movq 0x20(%rbp),%r11
	movq %r11,0x8(%r14)
	movq 0x10(%rbp),%r11
	cmpq $0x1,%r11
	je L_509984
L_320499:
	movq 0x8(%r11),%r13
	movq 0x0(%r11),%r15
L_320500:
	cmpq $0x1,%r15
	je L_509977
L_320501:
	movq %r13,0x10(%rbp)
	movq %r14,0x20(%rbp)
	movq %r15,0x18(%rbp)
L_320502:
	jmp L_320497
.p2align 0x4
L_509977:
L_320503:
	movq %r13,0x10(%rbp)
	movq %r14,0x18(%rbp)
.p2align 0x4,,0x7
L_320504:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_509983
.p2align 0x4,,0x7
L_320505:
	movq 0x10(%rbp),%r11
	cmpq $0x1,%r11
	je L_509978
L_320506:
	movq 0x8(%r11),%r13
	movq 0x0(%r11),%r15
	movq 0x18(%rbp),%r14
	jmp L_320500
.p2align 0x4
L_509978:
L_320507:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_509982
L_320508:
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%r15),%r15
	movq %r15,0x18(%rbp)
	movq $0x1,0x20(%rbp)
.p2align 0x4,,0x7
L_320509:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_509981
.p2align 0x4,,0x7
L_320510:
	movq $0x2551,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_509979
L_320511:
	movq %r15,0x20(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x18(%rbp)
	jmp L_320509
.p2align 0x4
L_509979:
L_320513:
	cmpq $0x1,%r15
	je L_509980
L_320514:
	movq $0x2371,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x10(%rbp)
	addq $0x10,%r12
	movq 0x48(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x70(%rbp),%r15
	movq %r15,0x0(%rbp)
	movw 0xA(%rbp),%r15w
	movw %r15w,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_509980:
L_320515:
	movq 0x48(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x70(%rbp),%r15
	movq %r15,0x0(%rbp)
	movw 0xA(%rbp),%r15w
	movw %r15w,0x8(%rbp)
	movq $0x1,0x10(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_509981:
L_320516:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_320517+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_320517
.p2align 0x4
.long 0x8C7
L_320517:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	jmp L_320510
.p2align 0x4
L_509982:
L_320518:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_320513
.p2align 0x4
L_509983:
L_320519:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_320520+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_320520
.p2align 0x4
.long 0x8D8
L_320520:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	jmp L_320505
.p2align 0x4
L_509984:
L_320521:
	movq 0x20(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq $0x1,0x20(%rbp)
	jmp L_320509
.p2align 0x4
L_509985:
L_320522:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_320523+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_320523
.p2align 0x4
.long 0x8C7
L_320523:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	jmp L_320498
.p2align 0x4
L_509986:
L_320524:
	movq %r15,0x10(%rbp)
	movq $0x1,0x18(%rbp)
	jmp L_320504
.p2align 0x4
L_509987:
L_320494:
	movzwq 0xA(%rbp),%r15
	shlq $0x2,%r15
	orq $0x2,%r15
	movq $0x124D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x20,%r12
	movl $0x0,0x0(%r14)
	movl (globalWord32+0x610)(%rip),%r13d
	movl %r13d,0x4(%r14)
	movw $0x0,%r13w
	movzwl %r13w,%r11d
	movl %r11d,0x8(%r14)
	movl $0x0,0xC(%r14)
	movq 0x28(%rbp),%r13
	movq %r13,0x10(%r14)
	movq $0x22BF,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x10,%r12
	movq $0x22D7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	movq %r13,0x10(%r14)
	addq $0x20,%r12
	movzbl 0x8(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x2327,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	jmp x_1049
.p2align 0x4
.long 0x904
L_320550:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	cmpq $0x1E,%r15
	je L_509991
L_320551:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_320552
L_320553:
L_320552:
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq 0x48(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_509991:
L_320554:
	movq (globalObjptr+0x6A58)(%rip),%r15
	movl 0x0(%r15),%r14d
	decl %r14d
	jo L_320555
L_320556:
	movl %r14d,0x0(%r15)
	testl %r14d,%r14d
	jz L_509992
L_320557:
	movq 0x48(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x1E,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_509992:
L_320558:
	movq (globalObjptr+0x6A58)(%rip),%r15
	movl 0x0(%r15),%r14d
	incl %r14d
	jo L_509993
L_320559:
	movl %r14d,0x0(%r15)
	movq 0x48(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x0(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x58,%rbp
	leaq (L_320560+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp spillRegisters_0
.p2align 0x4
L_509993:
L_320555:
	movq 0x48(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4E85
L_320529:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movl 0xA8(%rbp),%r15d
	movl %r15d,0xC(%rbp)
	movl %r15d,0xA8(%rbp)
	movq $0x3,0xB0(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0xB8(%rbp)
	addq $0xA8,%rbp
	leaq (L_320530+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x4502
L_320560:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x60(%rbp),%r14
	movq %r14,0x50(%rbp)
	leaq L_320573(%rip),%r14
	movq %r14,0x40(%rbp)
	movq %rbp,%r14
	addq $0x48,%r14
	subq (gcState+0x560)(%rip),%r14
	movq %r14,(gcState+0x20)(%rip)
	movq 0x0(%rbp),%r14
	movq %r14,0x60(%rbp)
	movb 0x8(%rbp),%r14b
	movb %r14b,0x68(%rbp)
	movq 0x10(%rbp),%r14
	movq %r14,0x70(%rbp)
	movq %r15,0x78(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x60,%rbp
	leaq (L_320561+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toRegisterImmediate_0
.p2align 0x4
.long 0x4E85
L_320530:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq %r15,0xA8(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0xB0(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0xB8(%rbp)
	addq $0xA8,%rbp
	leaq (L_320531+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x61B
L_320561:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	movw 0x68(%rbp),%r15w
	movw %r15w,0x60(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_320562
L_320571:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_320572+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_320572
.p2align 0x4
.long 0x16E5
L_320572:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_320562:
	movq 0x50(%rbp),%r14
	cmpq $0x1,%r14
	je L_509997
L_320563:
L_320564:
	movq 0x68(%rbp),%r13
	cmpq $0x1,%r13
	je L_509996
L_320565:
L_320566:
	movq $0x2373,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
L_320567:
	movq (globalObjptr+0x6A58)(%rip),%r14
	movl 0x0(%r14),%r13d
	decl %r13d
	jo L_320555
L_320568:
	movl %r13d,0x0(%r14)
	movq %r15,0x10(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x58(%rbp),%r15
	movq %r15,0x0(%rbp)
	movw 0x60(%rbp),%r15w
	movw %r15w,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_509996:
L_320569:
	movq %r14,%r15
	jmp L_320567
.p2align 0x4
L_509997:
L_320570:
	movq 0x68(%rbp),%r15
	jmp L_320567
.p2align 0x4
.long 0x904
L_320573:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	cmpq $0x1E,%r15
	je L_510000
L_320574:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_320575
L_320576:
L_320575:
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq 0x48(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_510000:
L_320577:
	movq 0x48(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x5DC8)(%rip),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_320578+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x4E85
L_320531:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0xA8(%rbp)
	addq $0xA8,%rbp
	leaq (L_320532+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x279E
L_320578:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_320579
L_320580:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_320581+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_320581
.p2align 0x4
.long 0x4E78
L_320581:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_320579:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4E86
L_320532:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movl 0xA8(%rbp),%r15d
	movl %r15d,0xC(%rbp)
	movl %r15d,0xA8(%rbp)
	movq $0x3,0xB0(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0xB8(%rbp)
	addq $0xA8,%rbp
	leaq (L_320533+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x4E86
L_320533:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0xA0(%rbp)
	movq %r15,0xA8(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0xB0(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0xB8(%rbp)
	addq $0xA8,%rbp
	leaq (L_320534+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x4E85
L_320534:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x80(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0xB0(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0xA8(%rbp)
	addq $0xA8,%rbp
	leaq (L_320535+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_0
.p2align 0x4
.long 0x4E87
L_320535:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movl 0xA8(%rbp),%r15d
	movl %r15d,0xC(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_320536
L_320586:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_320587+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_320587
.p2align 0x4
.long 0x4E8E
L_320587:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_320536:
	movl 0xC(%rbp),%r15d
	testl %r15d,%r15d
	jz L_320527
L_320538:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_320539
L_320584:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_320585+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_320585
.p2align 0x4
.long 0x4E8E
L_320585:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_320539:
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0x88(%rbp),%rsi
	movq 0x58(%rbp),%rdi
	xorq %rax,%rax
	call IntInf_equal
L_320540:
	testl %eax,%eax
	jz L_320527
L_320542:
	movw 0xA(%rbp),%r15w
	movb %r15b,%r14b
	movzbw %r14b,%r15w
	movb $0x2,%r14b
	movzbw %r14b,%r13w
	shlw $0x8,%r13w
	orw %r13w,%r15w
	movzwq %r15w,%r14
	shlq $0x2,%r14
	orq $0x2,%r14
	movq %r14,0x58(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0xA8(%rbp)
	addq $0xA8,%rbp
	leaq (L_320543+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x4E88
L_320543:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movl 0xA8(%rbp),%r15d
	movl %r15d,0xC(%rbp)
	movl %r15d,0xA8(%rbp)
	movq $0x3,0xB0(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0xB8(%rbp)
	addq $0xA8,%rbp
	leaq (L_320544+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x4E89
L_320544:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x88(%rbp),%r14
	movq %r14,0x90(%rbp)
	movq %r15,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_320545+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x4E8A
L_320545:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_320546
L_320582:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_320583+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_320583
.p2align 0x4
.long 0x4E8D
L_320583:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_320546:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x22B5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x88(%rbp)
	addq $0x10,%r12
	movq 0x68(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x88,%rbp
	leaq (immediate_81+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_2
.p2align 0x4
.long 0x4E8B
immediate_81:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_320547
L_320548:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_320549+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_320549
.p2align 0x4
.long 0x4E8C
L_320549:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_320547:
	movq $0x22C3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x22DF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movb $0x3,%r13b
	movzbl %r13b,%r11d
	movl %r11d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x58(%rbp),%r13
	movq %r13,0x8(%r14)
	movq $0x2327,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	jmp x_1049
.text
.p2align 0x4
.globl xmmremove_0
.hidden xmmremove_0
xmmremove_0:
L_320592:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_320593
L_320628:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_320629+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_320629
.p2align 0x4
.long 0x45F
L_320629:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_320593:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	cmpq $0x1,%r14
	je L_320621
L_320594:
	movq 0x8(%r14),%r15
	movq %r15,0x18(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x20(%rbp)
	movq $0x1,0x28(%rbp)
.p2align 0x4,,0x7
L_320595:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_510019
.p2align 0x4,,0x7
L_320596:
	movq 0x20(%rbp),%r15
	movq 0x18(%r15),%r14
	movq 0x8(%rbp),%r13
	movq 0x10(%r13),%r11
	cmpq %r11,0x10(%r14)
	je L_510017
L_320597:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_510008
L_320598:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x18(%rbp)
	movq %r14,0x20(%rbp)
	jmp L_320595
.p2align 0x4
L_510008:
L_320599:
	movq 0x28(%rbp),%r13
	cmpq $0x1,%r13
	je L_510016
L_320600:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r14
	xchgq %r11,%r15
L_320601:
	cmpq $0x1,%r15
	jne L_510015
L_320603:
	movw 0x10(%r14),%r15w
	movw %r15w,0x8(%rbp)
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x10(%rbp),%r15
	cmpq $0x1,%r15
	je L_510014
L_320604:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x10(%rbp)
	movq %r14,0x30(%rbp)
	movq $0x1,0x38(%rbp)
.p2align 0x4,,0x7
L_320605:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_510013
.p2align 0x4,,0x7
L_320606:
	movq 0x30(%rbp),%r15
	movw 0x10(%r15),%r14w
	movw 0x8(%rbp),%r15w
	movw %r15w,%r13w
	shrw $0x8,%r13w
	movb %r13b,%r11b
	movw %r14w,%r13w
	shrw $0x8,%r13w
	movb %r13b,%r10b
	cmpb %r11b,%r10b
	jne L_320608
L_320612:
	movb %r15b,%r13b
	movb %r14b,%r15b
	cmpb %r13b,%r15b
	jne L_510010
L_320614:
	movq 0x10(%rbp),%r15
	cmpq $0x1,%r15
	je L_510009
L_320615:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x10(%rbp)
	movq %r14,0x30(%rbp)
	jmp L_320605
.p2align 0x4
L_510009:
L_320616:
	movq 0x38(%rbp),%r14
	xchgq %r14,%r15
L_320611:
	movq $0x1319,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x28,%r12
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x20(%rbp),%r15
	movq %r15,0x10(%r14)
	movq 0x28(%rbp),%r15
	movq %r15,0x18(%r14)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_510010:
L_320608:
	movq $0x2367,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_320611
L_320609:
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x30(%rbp)
	jmp L_320605
.p2align 0x4
L_510013:
L_320617:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_320618+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_320618
.p2align 0x4
.long 0x4B0
L_320618:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_320606
.p2align 0x4
L_510014:
L_320619:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_320611
.p2align 0x4
L_510015:
L_320602:
	movq (globalObjptr+0x6A40)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_510016:
L_320621:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_510017:
L_320622:
	movq $0x2367,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_510018
L_320623:
	movq %r15,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_320595
.p2align 0x4
L_510018:
L_320624:
	movq 0x28(%rbp),%r15
	movq 0x20(%rbp),%r13
	xchgq %r13,%r14
	jmp L_320601
.p2align 0x4
L_510019:
L_320625:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_320626+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_320626
.p2align 0x4
.long 0x4DE
L_320626:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_320596
.text
.p2align 0x4
.globl toComments_1
.hidden toComments_1
toComments_1:
L_320630:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_320841
L_320631:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_510058
L_320632:
	movq 0x8(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x10(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r11
	movq %r11,0x20(%rbp)
	movq 0x10(%r14),%r11
	movq %r11,0x28(%rbp)
	movq 0x18(%r14),%r11
	movq %r11,0x30(%rbp)
	cmpq $0x1,%r13
	je L_510038
L_320633:
	movq 0x8(%r13),%r14
	movq %r14,0x38(%rbp)
	movw 0x0(%r13),%r15w
	movq $0x1,0x40(%rbp)
L_320634:
	movb %r15b,%r14b
	movzbq %r14b,%rax
	subq $0x1,%rax
	cmpq $0xE,%rax
	ja L_510022
	leaq jumpTable_826(%rip),%rbx
	jmp *(%rbx,%rax,8)
.data
.p2align 0x4
jumpTable_826:
.quad L_510037,L_510036,L_510035,L_510034,L_510033,L_510032,L_510031,L_510030,L_510029,L_510028,L_510027,L_510026,L_510025,L_510024,L_510023
.text
.p2align 0x4
L_510022:
L_320635:
	movq (globalObjptr+0xE728)(%rip),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (toString_420+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_510023:
L_320839:
	movq (globalObjptr+0xE7A0)(%rip),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (toString_420+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_510024:
L_320838:
	movq (globalObjptr+0xE798)(%rip),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (toString_420+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_510025:
L_320837:
	movq (globalObjptr+0xE790)(%rip),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (toString_420+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_510026:
L_320836:
	movq (globalObjptr+0xE788)(%rip),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (toString_420+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_510027:
L_320835:
	movq (globalObjptr+0xE780)(%rip),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (toString_420+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_510028:
L_320834:
	movq (globalObjptr+0xE778)(%rip),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (toString_420+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_510029:
L_320833:
	movq (globalObjptr+0xE770)(%rip),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (toString_420+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_510030:
L_320832:
	movq (globalObjptr+0xE768)(%rip),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (toString_420+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_510031:
L_320831:
	movq (globalObjptr+0xE760)(%rip),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (toString_420+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_510032:
L_320830:
	movq (globalObjptr+0xE758)(%rip),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (toString_420+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_510033:
L_320829:
	movq (globalObjptr+0xE750)(%rip),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (toString_420+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_510034:
L_320828:
	movq (globalObjptr+0xE748)(%rip),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (toString_420+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_510035:
L_320827:
	movq (globalObjptr+0xE740)(%rip),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (toString_420+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_510036:
L_320826:
	movq (globalObjptr+0xE738)(%rip),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (toString_420+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_510037:
L_320825:
	movq (globalObjptr+0xE730)(%rip),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (toString_420+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_510038:
L_320840:
	movq $0x1,%r15
L_320645:
	movq $0x234D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x6A18)(%rip),%r13
	movq %r13,0x0(%r14)
	movq 0x20(%rbp),%r13
	cmpq $0x1,%r13
	je L_510055
L_320646:
	movq %r14,0x38(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x20(%rbp)
L_320647:
	movq 0x10(%rbp),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x40(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x48(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x50(%rbp)
	movl 0x8(%r15),%r14d
	movl %r14d,0x58(%rbp)
	movl 0xC(%r15),%r14d
	movl %r14d,0x5C(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x68(%rbp)
	movw 0x10(%r15),%r14w
	movb %r14b,%r13b
	movzbq %r13b,%rax
	subq $0x1,%rax
	cmpq $0xE,%rax
	ja L_510039
	leaq jumpTable_827(%rip),%rbx
	jmp *(%rbx,%rax,8)
.data
.p2align 0x4
jumpTable_827:
.quad L_510054,L_510053,L_510052,L_510051,L_510050,L_510049,L_510048,L_510047,L_510046,L_510045,L_510044,L_510043,L_510042,L_510041,L_510040
.text
.p2align 0x4
L_510039:
L_320648:
	movq (globalObjptr+0xE728)(%rip),%r15
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (toString_421+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_510040:
L_320818:
	movq (globalObjptr+0xE7A0)(%rip),%r15
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (toString_421+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_510041:
L_320817:
	movq (globalObjptr+0xE798)(%rip),%r15
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (toString_421+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_510042:
L_320816:
	movq (globalObjptr+0xE790)(%rip),%r15
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (toString_421+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_510043:
L_320815:
	movq (globalObjptr+0xE788)(%rip),%r15
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (toString_421+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_510044:
L_320814:
	movq (globalObjptr+0xE780)(%rip),%r15
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (toString_421+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_510045:
L_320813:
	movq (globalObjptr+0xE778)(%rip),%r15
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (toString_421+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_510046:
L_320812:
	movq (globalObjptr+0xE770)(%rip),%r15
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (toString_421+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_510047:
L_320811:
	movq (globalObjptr+0xE768)(%rip),%r15
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (toString_421+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_510048:
L_320810:
	movq (globalObjptr+0xE760)(%rip),%r15
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (toString_421+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_510049:
L_320809:
	movq (globalObjptr+0xE758)(%rip),%r15
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (toString_421+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_510050:
L_320808:
	movq (globalObjptr+0xE750)(%rip),%r15
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (toString_421+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_510051:
L_320807:
	movq (globalObjptr+0xE748)(%rip),%r15
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (toString_421+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_510052:
L_320806:
	movq (globalObjptr+0xE740)(%rip),%r15
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (toString_421+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_510053:
L_320805:
	movq (globalObjptr+0xE738)(%rip),%r15
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (toString_421+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_510054:
L_320804:
	movq (globalObjptr+0xE730)(%rip),%r15
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (toString_421+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_510055:
L_320819:
	movq %r14,%r15
L_320671:
	movq $0x234D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x6A20)(%rip),%r13
	movq %r13,0x0(%r14)
	movq 0x28(%rbp),%r13
	cmpq $0x1,%r13
	je L_510056
L_320672:
	movq 0x8(%r13),%r11
	movq %r11,0x20(%rbp)
	movw 0x0(%r13),%r15w
	movq %r14,0x28(%rbp)
L_320673:
	movw %r15w,0x40(%rbp)
	addq $0x40,%rbp
	leaq (toString_423+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_37
.p2align 0x4
L_510056:
L_320759:
	movq %r14,%r15
L_320683:
	movq $0x234D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x6A28)(%rip),%r13
	movq %r13,0x0(%r14)
	movq 0x30(%rbp),%r13
	cmpq $0x1,%r13
	je L_510057
L_320684:
	movq %r14,0x28(%rbp)
	movq 0x8(%r13),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r13),%r15
L_320685:
	movq 0x18(%rbp),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x30(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x38(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x40(%rbp)
	movl 0x8(%r15),%r14d
	movl %r14d,0x48(%rbp)
	movl 0xC(%r15),%r14d
	movl %r14d,0x4C(%rbp)
	movw 0x10(%r15),%r14w
	movw %r14w,0x68(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x58(%rbp)
	addq $0x68,%rbp
	leaq (toString_424+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_37
.p2align 0x4
L_510057:
L_320753:
	movq %r14,%r15
L_320708:
	movq $0x234D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x6A30)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x236D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_510058:
L_320841:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_320842+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_320842
.p2align 0x4
.long 0x45F
L_320842:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_320632
.p2align 0x4
.long 0x8BA
toString_420:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq $0x1,0x50(%rbp)
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (rev_422+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x4E8F
toString_421:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq $0x1,0x78(%rbp)
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (rev_423+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x510
toString_423:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq $0x1,0x40(%rbp)
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (rev_425+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x4E91
toString_424:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq $0x1,0x68(%rbp)
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (rev_426+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x8BA
rev_422:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq $0x1,%r15
	je L_510062
L_320636:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x48(%rbp)
	movq %r14,0x50(%rbp)
	movq $0x1,0x58(%rbp)
.p2align 0x4,,0x7
L_320637:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_510061
.p2align 0x4,,0x7
L_320638:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_510060
L_320639:
	movq %r15,0x58(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	movq %r15,0x50(%rbp)
	jmp L_320637
.p2align 0x4
L_510060:
L_320641:
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (comment_25+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_510061:
L_320822:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_320823+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_320823
.p2align 0x4
.long 0x8C1
L_320823:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	jmp L_320638
.p2align 0x4
L_510062:
L_320824:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_320641
.p2align 0x4
.long 0x4E8F
rev_423:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x70(%rbp)
	cmpq $0x1,%r15
	je L_510065
L_320649:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x70(%rbp)
	movq %r14,0x78(%rbp)
	movq $0x1,0x80(%rbp)
.p2align 0x4,,0x7
L_320650:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_510064
.p2align 0x4,,0x7
L_320651:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x80(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x70(%rbp),%r14
	cmpq $0x1,%r14
	je L_510063
L_320652:
	movq %r15,0x80(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x70(%rbp)
	movq %r15,0x78(%rbp)
	jmp L_320650
.p2align 0x4
L_510063:
L_320654:
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_320655+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_510064:
L_320801:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_320802+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_320802
.p2align 0x4
.long 0x4E99
L_320802:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	jmp L_320651
.p2align 0x4
L_510065:
L_320803:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_320654
.p2align 0x4
.long 0x510
rev_425:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq $0x1,%r15
	je L_510068
L_320674:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x38(%rbp)
	movq %r14,0x40(%rbp)
	movq $0x1,0x48(%rbp)
.p2align 0x4,,0x7
L_320675:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_510067
.p2align 0x4,,0x7
L_320676:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x38(%rbp),%r14
	cmpq $0x1,%r14
	je L_510066
L_320677:
	movq %r15,0x48(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x38(%rbp)
	movq %r15,0x40(%rbp)
	jmp L_320675
.p2align 0x4
L_510066:
L_320679:
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (comment_27+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_510067:
L_320756:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_320757+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_320757
.p2align 0x4
.long 0x4AD
L_320757:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	jmp L_320676
.p2align 0x4
L_510068:
L_320758:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_320679
.p2align 0x4
.long 0x4E91
rev_426:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq $0x1,%r15
	je L_510071
L_320686:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x60(%rbp)
	movq %r14,0x68(%rbp)
	movq $0x1,0x70(%rbp)
.p2align 0x4,,0x7
L_320687:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_510070
.p2align 0x4,,0x7
L_320688:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x60(%rbp),%r14
	cmpq $0x1,%r14
	je L_510069
L_320689:
	movq %r15,0x70(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x60(%rbp)
	movq %r15,0x68(%rbp)
	jmp L_320687
.p2align 0x4
L_510069:
L_320691:
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_320692+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_510070:
L_320750:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_320751+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_320751
.p2align 0x4
.long 0x4E96
L_320751:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	jmp L_320688
.p2align 0x4
L_510071:
L_320752:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_320691
.p2align 0x4
.long 0x8BA
comment_25:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_320642
L_320820:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_320821+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_320821
.p2align 0x4
.long 0x859
L_320821:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_320642:
	movq $0x232F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x234D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r13)
	movq 0x38(%rbp),%r14
	cmpq $0x1,%r14
	je L_510072
L_320643:
	movq %r13,0x40(%rbp)
	movw 0x0(%r14),%r15w
	movq 0x8(%r14),%r14
	movq %r14,0x38(%rbp)
	jmp L_320634
.p2align 0x4
L_510072:
L_320644:
	movq %r13,%r15
	jmp L_320645
.p2align 0x4
.long 0x4E8F
L_320655:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (toString_422+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_35
.p2align 0x4
.long 0x510
comment_27:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_320680
L_320754:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_320755+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_320755
.p2align 0x4
.long 0x5E7
L_320755:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_320680:
	movq $0x232F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x234D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r13)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_510074
L_320681:
	movq %r13,0x28(%rbp)
	movw 0x0(%r14),%r15w
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	jmp L_320673
.p2align 0x4
L_510074:
L_320682:
	movq %r13,%r15
	jmp L_320683
.p2align 0x4
.long 0x4E91
L_320692:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (toString_425+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_35
.p2align 0x4
.long 0x4E90
toString_422:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq $0x1,0x80(%rbp)
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (rev_424+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x4E92
toString_425:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq $0x1,0x70(%rbp)
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (rev_427+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x4E90
rev_424:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq $0x1,%r15
	je L_510078
L_320656:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x40(%rbp)
	movq %r14,0x60(%rbp)
	movq $0x1,0x78(%rbp)
.p2align 0x4,,0x7
L_320657:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_510077
.p2align 0x4,,0x7
L_320658:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_510076
L_320659:
	movq %r15,0x78(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x40(%rbp)
	movq %r15,0x60(%rbp)
	jmp L_320657
.p2align 0x4
L_510076:
L_320661:
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_320662+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_510077:
L_320798:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_320799+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_320799
.p2align 0x4
.long 0x4E98
L_320799:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	jmp L_320658
.p2align 0x4
L_510078:
L_320800:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_320661
.p2align 0x4
.long 0x4E92
rev_427:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq $0x1,%r15
	je L_510081
L_320693:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x30(%rbp)
	movq %r14,0x50(%rbp)
	movq $0x1,0x68(%rbp)
.p2align 0x4,,0x7
L_320694:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_510080
.p2align 0x4,,0x7
L_320695:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_510079
L_320696:
	movq %r15,0x68(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	movq %r15,0x50(%rbp)
	jmp L_320694
.p2align 0x4
L_510079:
L_320698:
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_320699+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_510080:
L_320747:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_320748+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_320748
.p2align 0x4
.long 0x4E95
L_320748:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	jmp L_320695
.p2align 0x4
L_510081:
L_320749:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_320698
.p2align 0x4
.long 0x4E90
L_320662:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x40(%rbp)
	movl 0x58(%rbp),%r15d
	movl %r15d,0x80(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_320663+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0x4E92
L_320699:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x30(%rbp)
	movl 0x48(%rbp),%r15d
	movl %r15d,0x70(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_320700+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0x21AF
L_320663:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_320664
L_320796:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_320797+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_320797
.p2align 0x4
.long 0xF41
L_320797:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_320664:
	movl 0x5C(%rbp),%r13d
	testl %r13d,%r13d
	jnz L_510086
L_320665:
	movq 0x68(%rbp),%r15
	andq $0x7,%r15
	cmpq $0x1,%r15
	je L_510085
	cmpq $0x2,%r15
	je L_510084
	cmpq $0x3,%r15
	je L_510083
	cmpq $0x4,%r15
	je L_510082
L_320666:
	movq (globalObjptr+0x11318)(%rip),%r15
	movq (globalObjptr+0xCDB0)(%rip),%r14
L_320667:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x18,%r12
	movq $0x1,0x8(%r13)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0xA188)(%rip),%r13
	movq %r13,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r15,0x8(%r11)
	addq $0x18,%r12
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x8(%r15)
	addq $0x18,%r12
	movq %r13,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x48(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq %r13,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x40(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq %r13,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x70(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x48(%rbp)
	addq $0x48,%rbp
	leaq (comment_26+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_510082:
L_320783:
	movq 0x68(%rbp),%r15
	shrq $0x3,%r15
	movl %r15d,%ecx
	movq (globalObjptr+0xCDB0)(%rip),%r15
	movq %r15,0x58(%rbp)
L_320784:
	movl %ecx,0x80(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_320785+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_510083:
L_320776:
	movq 0x68(%rbp),%r15
	shrq $0x3,%r15
	movl %r15d,%ecx
	movq (globalObjptr+0xCDB0)(%rip),%r15
	movq %r15,0x58(%rbp)
L_320777:
	movl %ecx,0x80(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_320778+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_510084:
L_320769:
	movq 0x68(%rbp),%r15
	shrq $0x3,%r15
	movl %r15d,%ecx
	movq (globalObjptr+0xCDB0)(%rip),%r15
	movq %r15,0x58(%rbp)
L_320770:
	movl %ecx,0x80(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_320771+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_510085:
L_320762:
	movq 0x68(%rbp),%r15
	shrq $0x3,%r15
	movl %r15d,%ecx
	movq (globalObjptr+0xCDB0)(%rip),%r15
	movq %r15,0x58(%rbp)
L_320763:
	movl %ecx,0x80(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_320764+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_510086:
L_320790:
	movq 0x68(%rbp),%r15
	andq $0x7,%r15
	cmpq $0x1,%r15
	je L_510090
	cmpq $0x2,%r15
	je L_510089
	cmpq $0x3,%r15
	je L_510088
	cmpq $0x4,%r15
	je L_510087
L_320791:
	movq (globalObjptr+0x11318)(%rip),%r15
	movq (globalObjptr+0xCDC0)(%rip),%r14
	jmp L_320667
.p2align 0x4
L_510087:
L_320795:
	movq 0x68(%rbp),%r15
	shrq $0x3,%r15
	movl %r15d,%ecx
	movq (globalObjptr+0xCDC0)(%rip),%r15
	movq %r15,0x58(%rbp)
	jmp L_320784
.p2align 0x4
L_510088:
L_320794:
	movq 0x68(%rbp),%r15
	shrq $0x3,%r15
	movl %r15d,%ecx
	movq (globalObjptr+0xCDC0)(%rip),%r15
	movq %r15,0x58(%rbp)
	jmp L_320777
.p2align 0x4
L_510089:
L_320793:
	movq 0x68(%rbp),%r15
	shrq $0x3,%r15
	movl %r15d,%ecx
	movq (globalObjptr+0xCDC0)(%rip),%r15
	movq %r15,0x58(%rbp)
	jmp L_320770
.p2align 0x4
L_510090:
L_320792:
	movq 0x68(%rbp),%r15
	shrq $0x3,%r15
	movl %r15d,%ecx
	movq (globalObjptr+0xCDC0)(%rip),%r15
	movq %r15,0x58(%rbp)
	jmp L_320763
.p2align 0x4
.long 0x4E93
L_320700:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_320701
L_320745:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_320746+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_320746
.p2align 0x4
.long 0x4E94
L_320746:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_320701:
	movl 0x4C(%rbp),%r13d
	testl %r13d,%r13d
	jnz L_510096
L_320702:
	movq 0x58(%rbp),%r15
	andq $0x7,%r15
	cmpq $0x1,%r15
	je L_510095
	cmpq $0x2,%r15
	je L_510094
	cmpq $0x3,%r15
	je L_510093
	cmpq $0x4,%r15
	je L_510092
L_320703:
	movq (globalObjptr+0x11318)(%rip),%r15
	movq (globalObjptr+0xCDB0)(%rip),%r14
L_320704:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x18,%r12
	movq $0x1,0x8(%r13)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0xA188)(%rip),%r13
	movq %r13,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r15,0x8(%r11)
	addq $0x18,%r12
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x8(%r15)
	addq $0x18,%r12
	movq %r13,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x38(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq %r13,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq %r13,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x60(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x38(%rbp)
	addq $0x38,%rbp
	leaq (comment_28+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_510092:
L_320732:
	movq 0x58(%rbp),%r15
	shrq $0x3,%r15
	movl %r15d,%ecx
	movq (globalObjptr+0xCDB0)(%rip),%r15
	movq %r15,0x48(%rbp)
L_320733:
	movl %ecx,0x70(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_320734+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_510093:
L_320725:
	movq 0x58(%rbp),%r15
	shrq $0x3,%r15
	movl %r15d,%ecx
	movq (globalObjptr+0xCDB0)(%rip),%r15
	movq %r15,0x48(%rbp)
L_320726:
	movl %ecx,0x70(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_320727+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_510094:
L_320718:
	movq 0x58(%rbp),%r15
	shrq $0x3,%r15
	movl %r15d,%ecx
	movq (globalObjptr+0xCDB0)(%rip),%r15
	movq %r15,0x48(%rbp)
L_320719:
	movl %ecx,0x70(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_320720+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_510095:
L_320711:
	movq 0x58(%rbp),%r15
	shrq $0x3,%r15
	movl %r15d,%ecx
	movq (globalObjptr+0xCDB0)(%rip),%r15
	movq %r15,0x48(%rbp)
L_320712:
	movl %ecx,0x70(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_320713+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_510096:
L_320739:
	movq 0x58(%rbp),%r15
	andq $0x7,%r15
	cmpq $0x1,%r15
	je L_510100
	cmpq $0x2,%r15
	je L_510099
	cmpq $0x3,%r15
	je L_510098
	cmpq $0x4,%r15
	je L_510097
L_320740:
	movq (globalObjptr+0x11318)(%rip),%r15
	movq (globalObjptr+0xCDC0)(%rip),%r14
	jmp L_320704
.p2align 0x4
L_510097:
L_320744:
	movq 0x58(%rbp),%r15
	shrq $0x3,%r15
	movl %r15d,%ecx
	movq (globalObjptr+0xCDC0)(%rip),%r15
	movq %r15,0x48(%rbp)
	jmp L_320733
.p2align 0x4
L_510098:
L_320743:
	movq 0x58(%rbp),%r15
	shrq $0x3,%r15
	movl %r15d,%ecx
	movq (globalObjptr+0xCDC0)(%rip),%r15
	movq %r15,0x48(%rbp)
	jmp L_320726
.p2align 0x4
L_510099:
L_320742:
	movq 0x58(%rbp),%r15
	shrq $0x3,%r15
	movl %r15d,%ecx
	movq (globalObjptr+0xCDC0)(%rip),%r15
	movq %r15,0x48(%rbp)
	jmp L_320719
.p2align 0x4
L_510100:
L_320741:
	movq 0x58(%rbp),%r15
	shrq $0x3,%r15
	movl %r15d,%ecx
	movq (globalObjptr+0xCDC0)(%rip),%r15
	movq %r15,0x48(%rbp)
	jmp L_320712
.p2align 0x4
.long 0x4A8
comment_26:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_320668
L_320760:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_320761+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_320761
.p2align 0x4
.long 0x86E
L_320761:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_320668:
	movq $0x232F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x234D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x20(%rbp),%r13
	cmpq $0x1,%r13
	je L_510102
L_320669:
	movq %r14,0x38(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x20(%rbp)
	jmp L_320647
.p2align 0x4
L_510102:
L_320670:
	movq %r14,%r15
	jmp L_320671
.p2align 0x4
.long 0x4E97
L_320785:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq %r15,0x80(%rbp)
	movq (globalObjptr+0x11338)(%rip),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_320786+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x4E97
L_320778:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq %r15,0x80(%rbp)
	movq (globalObjptr+0x11330)(%rip),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_320779+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x4E97
L_320771:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq %r15,0x80(%rbp)
	movq (globalObjptr+0x11328)(%rip),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_320772+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x4E97
L_320764:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq %r15,0x80(%rbp)
	movq (globalObjptr+0x11320)(%rip),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_320765+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x71D
comment_28:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_320705
L_320709:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_320710+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_320710
.p2align 0x4
.long 0x71F
L_320710:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_320705:
	movq $0x232F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x234D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x20(%rbp),%r13
	cmpq $0x1,%r13
	je L_510104
L_320706:
	movq %r14,0x28(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x20(%rbp)
	jmp L_320685
.p2align 0x4
L_510104:
L_320707:
	movq %r14,%r15
	jmp L_320708
.p2align 0x4
.long 0x4434
L_320734:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq %r15,0x70(%rbp)
	movq (globalObjptr+0x11338)(%rip),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_320735+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x4434
L_320727:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq %r15,0x70(%rbp)
	movq (globalObjptr+0x11330)(%rip),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_320728+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x4434
L_320720:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq %r15,0x70(%rbp)
	movq (globalObjptr+0x11328)(%rip),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_320721+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x4434
L_320713:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq %r15,0x70(%rbp)
	movq (globalObjptr+0x11320)(%rip),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_320714+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x4E97
L_320786:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_320787
L_320788:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_320789+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_320789
.p2align 0x4
.long 0xF43
L_320789:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_320787:
	movq 0x50(%rbp),%r15
	movq 0x58(%rbp),%r14
	jmp L_320667
.p2align 0x4
.long 0x4E97
L_320779:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_320780
L_320781:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_320782+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_320782
.p2align 0x4
.long 0xF43
L_320782:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_320780:
	movq 0x50(%rbp),%r15
	movq 0x58(%rbp),%r14
	jmp L_320667
.p2align 0x4
.long 0x4E97
L_320772:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_320773
L_320774:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_320775+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_320775
.p2align 0x4
.long 0xF43
L_320775:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_320773:
	movq 0x50(%rbp),%r15
	movq 0x58(%rbp),%r14
	jmp L_320667
.p2align 0x4
.long 0x4E97
L_320765:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_320766
L_320767:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_320768+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_320768
.p2align 0x4
.long 0xF43
L_320768:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_320766:
	movq 0x50(%rbp),%r15
	movq 0x58(%rbp),%r14
	jmp L_320667
.p2align 0x4
.long 0x4434
L_320735:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_320736
L_320737:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_320738+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_320738
.p2align 0x4
.long 0x4494
L_320738:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_320736:
	movq 0x40(%rbp),%r15
	movq 0x48(%rbp),%r14
	jmp L_320704
.p2align 0x4
.long 0x4434
L_320728:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_320729
L_320730:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_320731+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_320731
.p2align 0x4
.long 0x4494
L_320731:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_320729:
	movq 0x40(%rbp),%r15
	movq 0x48(%rbp),%r14
	jmp L_320704
.p2align 0x4
.long 0x4434
L_320721:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_320722
L_320723:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_320724+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_320724
.p2align 0x4
.long 0x4494
L_320724:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_320722:
	movq 0x40(%rbp),%r15
	movq 0x48(%rbp),%r14
	jmp L_320704
.p2align 0x4
.long 0x4434
L_320714:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_320715
L_320716:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_320717+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_320717
.p2align 0x4
.long 0x4494
L_320717:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_320715:
	movq 0x40(%rbp),%r15
	movq 0x48(%rbp),%r14
	jmp L_320704
.text
.p2align 0x4
.globl x_2197
.hidden x_2197
x_2197:
L_320843:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x50(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_320844
L_320957:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_320958+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_320958
.p2align 0x4
.long 0x4EA6
L_320958:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_320844:
	movq 0x40(%rbp),%r15
	movq 0x38(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x88(%rbp)
	movq 0x0(%r15),%r11
	movb 0x0(%r11),%r13b
	testb %r13b,%r13b
	jz L_510126
L_320845:
	movq 0x8(%r14),%r15
	movq %r15,0x40(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x58(%rbp)
	movq 0x38(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x20(%rbp),%r15
	movl 0x4(%r15),%r14d
L_320846:
	movq 0x28(%rbp),%r15
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_320847
L_320848:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0x115E,%r13
	jne L_510124
L_320849:
	movq 0x0(%r15),%r13
	movq %r13,0x20(%rbp)
	testl %r14d,%r14d
	jz toXmmRegisterMemLocP_8
L_320852:
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%r14
	cmpq $0x1,%r14
	je L_320864
L_320853:
	movq 0x8(%r14),%r15
	movq %r15,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x70(%rbp)
	movq $0x1,0x78(%rbp)
.p2align 0x4,,0x7
L_320854:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_510122
.p2align 0x4,,0x7
L_320855:
	movq 0x70(%rbp),%r15
	movq 0x18(%r15),%r14
	movq 0x20(%rbp),%r13
	movq 0x10(%r13),%r11
	cmpq %r11,0x10(%r14)
	je L_510120
L_320856:
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_510114
L_320857:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x28(%rbp)
	movq %r14,0x70(%rbp)
	jmp L_320854
.p2align 0x4
L_510114:
L_320858:
	movq 0x78(%rbp),%r14
	cmpq $0x1,%r14
	je L_510115
L_320859:
	movq 0x8(%r14),%r13
	xchgq %r13,%r15
L_320860:
	cmpq $0x1,%r15
	je toXmmRegisterMemLocP_0
L_320861:
	movq (globalObjptr+0x6A40)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
toXmmRegisterMemLocP_0:
toXmmRegisterMemLocP_8:
	movq 0x0(%rbp),%r15
	movq %r15,0x60(%rbp)
	movb 0x8(%rbp),%r15b
	movb %r15b,0x68(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x78(%rbp)
	movl 0x30(%rbp),%r15d
	movl %r15d,0x80(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq $0x1,0x98(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0xA0(%rbp)
	addq $0x60,%rbp
	leaq (L_320851+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toXmmRegisterMemLoc_0
.p2align 0x4
L_510115:
L_320864:
	movq 0x68(%rbp),%r13
	cmpq $0x1,%r13
	je L_320870
L_320865:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
.p2align 0x4,,0x7
L_320866:
	movq 0x20(%rbp),%r13
	movq 0x10(%r15),%r11
	cmpq %r11,0x10(%r13)
	je L_320877
L_320867:
	cmpq $0x1,%r14
	je L_510116
L_320868:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_320866
.p2align 0x4
L_510116:
L_320870:
	movq 0x60(%rbp),%r13
	cmpq $0x1,%r13
	je toXmmRegisterMemLocP_8
L_320871:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
.p2align 0x4,,0x7
L_320872:
	movq 0x20(%rbp),%r13
	movq 0x10(%r15),%r11
	cmpq %r11,0x10(%r13)
	je L_510117
L_320873:
	cmpq $0x1,%r14
	je toXmmRegisterMemLocP_8
L_320874:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_320872
.p2align 0x4
L_510117:
L_320877:
	movq 0x0(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x60,%rbp
	leaq (L_320878+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toAddressMemLoc_0
.p2align 0x4
L_510120:
L_320885:
	movq $0x2367,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_510121
L_320886:
	movq %r15,0x78(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x70(%rbp)
	jmp L_320854
.p2align 0x4
L_510121:
L_320887:
	movq 0x78(%rbp),%r15
	jmp L_320860
.p2align 0x4
L_510122:
L_320888:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_320889+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_320889
.p2align 0x4
.long 0x4E9A
L_320889:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	jmp L_320855
.p2align 0x4
L_510124:
L_320847:
	movq (globalObjptr+0x6BA0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_510126:
L_320891:
	movq 0x88(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_320892+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp time_0
.p2align 0x4
.long 0x4E1B
L_320851:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	movw 0x68(%rbp),%r14w
	movw %r14w,0x60(%rbp)
	movq 0x70(%rbp),%r13
	movq %r13,0x68(%rbp)
	movzwq %r14w,%r11
	shlq $0x2,%r11
	orq $0x1,%r11
	movq %r11,0x8(%rbp)
	movq %r15,0x0(%rbp)
	movq %r13,0x10(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4E1B
L_320878:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_320879
L_320880:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_320881+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_320881
.p2align 0x4
.long 0x4DA
L_320881:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_320879:
	movq $0x22BF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x8(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x10(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4E9B
L_320892:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq 0x80(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x98(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq 0x38(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0xA8(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0xB0(%rbp)
	movq 0x20(%rbp),%r15
	movl 0x4(%r15),%r14d
L_320893:
	movq 0x28(%rbp),%r15
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_320894
L_320901:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0x115E,%r13
	jne L_510139
L_320902:
	movq 0x0(%r15),%r13
	movq %r13,0x20(%rbp)
	testl %r14d,%r14d
	jz toXmmRegisterMemLocP_9
L_320918:
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%r14
	cmpq $0x1,%r14
	je L_320930
L_320919:
	movq 0x8(%r14),%r15
	movq %r15,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x80(%rbp)
	movq $0x1,0xB8(%rbp)
.p2align 0x4,,0x7
L_320920:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_510137
.p2align 0x4,,0x7
L_320921:
	movq 0x20(%rbp),%r15
	movq 0x80(%rbp),%r14
	movq 0x18(%r14),%r13
	movq 0x10(%r13),%r11
	cmpq %r11,0x10(%r15)
	je L_510135
L_320922:
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_510129
L_320923:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x28(%rbp)
	movq %r14,0x80(%rbp)
	jmp L_320920
.p2align 0x4
L_510129:
L_320924:
	movq 0xB8(%rbp),%r14
	cmpq $0x1,%r14
	je L_510130
L_320925:
	movq 0x8(%r14),%r13
	xchgq %r13,%r15
L_320926:
	cmpq $0x1,%r15
	je toXmmRegisterMemLocP_4
L_320927:
	movq (globalObjptr+0x6A40)(%rip),%r15
	movq %r15,0x60(%rbp)
L_320895:
	movq 0x50(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x6BA8)(%rip),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_320896+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
toXmmRegisterMemLocP_4:
toXmmRegisterMemLocP_9:
	leaq L_320913(%rip),%r15
	movq %r15,0x48(%rbp)
	movq %rbp,%r15
	addq $0x50,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x0(%rbp),%r15
	movq %r15,0xA0(%rbp)
	movb 0x8(%rbp),%r15b
	movb %r15b,0xA8(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0xB0(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movl 0x30(%rbp),%r15d
	movl %r15d,0xC0(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0xD0(%rbp)
	movq $0x1,0xD8(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0xE0(%rbp)
	addq $0xA0,%rbp
	leaq (L_320904+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toXmmRegisterMemLoc_0
.p2align 0x4
L_510130:
L_320930:
	movq 0xB0(%rbp),%r13
	cmpq $0x1,%r13
	je L_320936
L_320931:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
.p2align 0x4,,0x7
L_320932:
	movq 0x20(%rbp),%r13
	movq 0x10(%r15),%r11
	cmpq %r11,0x10(%r13)
	je L_320943
L_320933:
	cmpq $0x1,%r14
	je L_510131
L_320934:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_320932
.p2align 0x4
L_510131:
L_320936:
	movq 0xA8(%rbp),%r13
	cmpq $0x1,%r13
	je toXmmRegisterMemLocP_9
L_320937:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
.p2align 0x4,,0x7
L_320938:
	movq 0x20(%rbp),%r13
	movq 0x10(%r13),%r11
	cmpq %r11,0x10(%r15)
	je L_510132
L_320939:
	cmpq $0x1,%r14
	je toXmmRegisterMemLocP_9
L_320940:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_320938
.p2align 0x4
L_510132:
L_320943:
	leaq L_320913(%rip),%r15
	movq %r15,0x48(%rbp)
	movq %rbp,%r15
	addq $0x50,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x10(%rbp),%r15
	movq %r15,0xA8(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0xB0(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0xA0(%rbp)
	addq $0xA0,%rbp
	leaq (L_320944+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toAddressMemLoc_0
.p2align 0x4
L_510135:
L_320951:
	movq $0x2367,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x80(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xB8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_510136
L_320952:
	movq %r15,0xB8(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x80(%rbp)
	jmp L_320920
.p2align 0x4
L_510136:
L_320953:
	movq 0xB8(%rbp),%r15
	jmp L_320926
.p2align 0x4
L_510137:
L_320954:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_320955+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_320955
.p2align 0x4
.long 0x4EA5
L_320955:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	jmp L_320921
.p2align 0x4
L_510139:
L_320894:
	movq (globalObjptr+0x6BA0)(%rip),%r15
	movq %r15,0x60(%rbp)
	jmp L_320895
.p2align 0x4
.long 0x4D9
L_320896:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_320897
L_320899:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_320900+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_320900
.p2align 0x4
.long 0x4DA
L_320900:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_320897:
	movq $0x3117,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x70(%rbp)
	movb $0x0,0x78(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x70,%rbp
	leaq (L_320898+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp message_0
.p2align 0x4
.long 0x4E9C
L_320904:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r15
	movq %r15,0x80(%rbp)
	movw 0xA8(%rbp),%r15w
	movq 0xB0(%rbp),%r14
	movq %r14,0xA0(%rbp)
	movzwq %r15w,%r14
	movw %r15w,0x98(%rbp)
	shlq $0x2,%r14
	orq $0x1,%r14
	movq %r14,0x98(%rbp)
L_320905:
	movq 0x88(%rbp),%r15
	movq %r15,0xB0(%rbp)
	addq $0xB0,%rbp
	leaq (L_320906+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp time_0
.p2align 0x4
.long 0x281B
L_320913:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	movq %r15,0x60(%rbp)
	jmp L_320895
.p2align 0x4
.long 0x4E9C
L_320944:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0xA8(%rbp),%r15
	movq %r15,0x98(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0xA0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_320945
L_320946:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_320947+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_320947
.p2align 0x4
.long 0x4EA4
L_320947:
	addq $0xFFFFFFFFFFFFFF50,%rbp
L_320945:
	movq $0x22BF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xA0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x98(%rbp),%r14
	movq %r14,0xA0(%rbp)
	movq %r15,0x98(%rbp)
	jmp L_320905
.p2align 0x4
.long 0x79A
L_320898:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4E9D
L_320906:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movq 0xB0(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0xA8(%rbp)
	movq 0x78(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0xB0(%rbp)
	movq 0x90(%rbp),%r14
	movq %r14,0xC0(%rbp)
	movq %r15,0xC8(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (L_320907+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x4E9E
L_320907:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x90(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_320908
L_320916:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_320917+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_320917
.p2align 0x4
.long 0x4EA3
L_320917:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_320908:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x90(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xB0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0xB0(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0xB8(%rbp)
	addq $0xB0,%rbp
	leaq (L_320909+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1183
.p2align 0x4
.long 0x4E9F
L_320909:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movq 0xB0(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq 0x78(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	movq 0x60(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0xA8(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xB8,%rbp
	leaq (L_320910+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x4EA0
L_320910:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0x70(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_320911
L_320914:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_320915+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_320915
.p2align 0x4
.long 0x4EA2
L_320915:
	addq $0xFFFFFFFFFFFFFF48,%rbp
L_320911:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xA8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0xB0(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0xB8(%rbp)
	addq $0xB0,%rbp
	leaq (L_320912+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1183
.p2align 0x4
.long 0x4EA1
L_320912:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movq 0xB0(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x60(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	movq 0x50(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x80(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0x10(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl toXmmRegisterMemLoc_0
.hidden toXmmRegisterMemLoc_0
toXmmRegisterMemLoc_0:
L_320959:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x50(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_320960
L_321329:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_321330+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_321330
.p2align 0x4
.long 0x4E3E
L_321330:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_320960:
	movq 0x40(%rbp),%r15
	movq 0x40(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x90(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x98(%rbp)
	movq (globalObjptr+0x6A58)(%rip),%r15
	movl 0x0(%r15),%r14d
	incl %r14d
	jo L_320961
L_320962:
	movl %r14d,0x0(%r15)
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0xA0(%rbp)
	cmpq $0x1,%r14
	je L_321233
L_320963:
	movq 0x8(%r14),%r15
	movq %r15,0xA8(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0xB0(%rbp)
	movq $0x1,0xB8(%rbp)
.p2align 0x4,,0x7
L_320964:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_510178
.p2align 0x4,,0x7
L_320965:
	movq 0xB0(%rbp),%r15
	movq 0x18(%r15),%r14
	movq 0x28(%rbp),%r13
	movq 0x10(%r13),%r11
	cmpq %r11,0x10(%r14)
	je L_510176
L_320966:
	movq 0xA8(%rbp),%r15
	cmpq $0x1,%r15
	je L_510145
L_320967:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0xA8(%rbp)
	movq %r14,0xB0(%rbp)
	jmp L_320964
.p2align 0x4
L_510145:
L_320968:
	movq 0xB8(%rbp),%r13
	cmpq $0x1,%r13
	je L_510174
L_320969:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r14
	xchgq %r11,%r15
L_320970:
	cmpq $0x1,%r15
	jne L_510173
L_320972:
	movl 0x8(%r14),%r15d
	movl %r15d,0xC(%rbp)
	movl 0xC(%r14),%r15d
	movl %r15d,0x24(%rbp)
	movw 0x10(%r14),%r15w
	movw %r15w,0xA(%rbp)
	movq 0x18(%r14),%r15
	movq %r15,0x90(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0xA8(%rbp)
	cmpq $0x1,0x38(%rbp)
	je L_510168
L_320973:
	movq 0x58(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movb 0x8(%rbp),%r15b
	cmpb $0x0,%r15b
	je L_510166
	cmpb $0x1,%r15b
	je L_510146
L_320974:
	movq (globalObjptr+0x6A50)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_510146:
L_321221:
	cmpq $0x1,%r13
	je L_320995
L_321222:
	movq 0x8(%r13),%r15
	movq %r15,0x58(%rbp)
	movw 0x0(%r13),%r15w
	movw %r15w,0xB0(%rbp)
	movq $0x1,0xB8(%rbp)
.p2align 0x4,,0x7
L_320978:
	movq 0x38(%rbp),%r13
	movq %r13,%r14
	andq $0x3,%r14
	jnz L_510164
L_320980:
	movq 0x8(%r13),%r14
	movw 0x0(%r13),%r15w
.p2align 0x4,,0x7
L_320981:
	movw 0xB0(%rbp),%r13w
	movw %r13w,%r11w
	shrw $0x8,%r11w
	movb %r11b,%r10b
	movw %r15w,%r11w
	shrw $0x8,%r11w
	movb %r11b,%r9b
	cmpb %r10b,%r9b
	jne L_510161
L_321207:
	movb %r13b,%r11b
	movb %r15b,%r13b
	cmpb %r11b,%r13b
	je L_510158
L_321208:
	cmpq $0x1,%r14
	je L_510147
L_321209:
	movw 0x0(%r14),%r15w
	movq 0x8(%r14),%r14
	jmp L_320981
.p2align 0x4
L_510147:
L_321210:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_510157
.p2align 0x4,,0x7
L_320986:
	movq 0x58(%rbp),%r15
	cmpq $0x1,%r15
	je L_510148
L_320987:
	movw 0x0(%r15),%r14w
	movq 0x8(%r15),%r15
	movq %r15,0x58(%rbp)
	movw %r14w,0xB0(%rbp)
	jmp L_320978
.p2align 0x4
L_510148:
L_320988:
	movq 0xB8(%rbp),%r13
	cmpq $0x1,%r13
	je L_320995
L_320989:
	movq 0x8(%r13),%r14
	movw 0x0(%r13),%r11w
	movw %r11w,%r15w
.p2align 0x4,,0x7
L_320990:
	movw 0xA(%rbp),%r13w
	movw %r13w,%r11w
	shrw $0x8,%r11w
	movb %r11b,%r10b
	movw %r15w,%r11w
	shrw $0x8,%r11w
	movb %r11b,%r9b
	cmpb %r9b,%r10b
	jne L_510153
L_321196:
	movb %r13b,%r11b
	movb %r15b,%r13b
	cmpb %r13b,%r11b
	je L_510151
L_321197:
	cmpq $0x1,%r14
	je L_510149
L_321198:
	movw 0x0(%r14),%r15w
	movq 0x8(%r14),%r14
	jmp L_320990
.p2align 0x4
L_510149:
L_321199:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_320995
L_321201:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_321202+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_321202
.p2align 0x4
.long 0x4EB9
L_321202:
	addq $0xFFFFFFFFFFFFFF48,%rbp
L_320995:
	movzwq 0xA(%rbp),%r15
	shlq $0x2,%r15
	orq $0x1,%r15
	movq %r15,0x58(%rbp)
	movq $0x22F9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0xB0(%rbp)
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%r14)
	leaq L_321095(%rip),%r15
	movq %r15,0x48(%rbp)
	movq %rbp,%r15
	addq $0x50,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x0(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movb 0x8(%rbp),%r15b
	movb %r15b,0xC8(%rbp)
	movq %r14,0xD0(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0xD8(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0xE0(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0xE8(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0xF0(%rbp)
	addq $0xC0,%rbp
	leaq (L_320996+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp chooseXmmRegister_0
.p2align 0x4
L_510151:
L_321203:
	movq 0x18(%rbp),%r14
	movw 0xA(%rbp),%r15w
	movq $0x1,%r13
L_321036:
	movq (globalObjptr+0x6A58)(%rip),%r11
	movl 0x0(%r11),%r10d
	decl %r10d
	jo L_510152
L_321037:
	movl %r10d,0x0(%r11)
	movq %r14,0x0(%rbp)
	movw %r15w,0x8(%rbp)
	movq %r13,0x10(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_510152:
L_320961:
	movq 0x50(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_510153:
L_320991:
	cmpq $0x1,%r14
	je L_510154
L_320992:
	movw 0x0(%r14),%r15w
	movq 0x8(%r14),%r14
	jmp L_320990
.p2align 0x4
L_510154:
L_320993:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_320995
L_321194:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_321195+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_321195
.p2align 0x4
.long 0x4EB9
L_321195:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	jmp L_320995
.p2align 0x4
L_510157:
L_321212:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_321213+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_321213
.p2align 0x4
.long 0x4EBA
L_321213:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	jmp L_320986
.p2align 0x4
L_510158:
L_321214:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_510160
.p2align 0x4,,0x7
L_321215:
	movq $0x22AD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movzwl 0xB0(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0xB8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x58(%rbp),%r14
	cmpq $0x1,%r14
	je L_510159
L_321216:
	movq %r15,0xB8(%rbp)
	movw 0x0(%r14),%r15w
	movq 0x8(%r14),%r14
	movq %r14,0x58(%rbp)
	movw %r15w,0xB0(%rbp)
	jmp L_320978
.p2align 0x4
L_510159:
L_321217:
	movq 0xB8(%rbp),%r13
	movw 0xB0(%rbp),%r15w
	xchgq %r13,%r14
	jmp L_320990
.p2align 0x4
L_510160:
L_321218:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_321219+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_321219
.p2align 0x4
.long 0x4EBA
L_321219:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	jmp L_321215
.p2align 0x4
L_510161:
L_320982:
	cmpq $0x1,%r14
	je L_510162
L_320983:
	movw 0x0(%r14),%r15w
	movq 0x8(%r14),%r14
	jmp L_320981
.p2align 0x4
L_510162:
L_320984:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_320986
L_321205:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_321206+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_321206
.p2align 0x4
.long 0x4EBA
L_321206:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	jmp L_320986
.p2align 0x4
L_510164:
L_320979:
	movq (c_stackP+0x0)(%rip),%rsp
	movq (globalObjptr+0xC9C8)(%rip),%rdi
	xorq %rax,%rax
	call MLton_bug
.p2align 0x4
L_510166:
L_320975:
	cmpq $0x1,%r14
	je L_320995
L_320976:
	movq 0x8(%r14),%r13
	movq %r13,0x58(%rbp)
	movw 0x0(%r14),%r13w
	movw %r13w,0xB0(%rbp)
	movq $0x1,0xB8(%rbp)
	jmp L_320978
.p2align 0x4
L_510168:
L_321224:
	movq 0x58(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movb 0x8(%rbp),%r15b
	cmpb $0x0,%r15b
	je L_510171
	cmpb $0x1,%r15b
	je L_510169
L_321225:
	movq (globalObjptr+0x6A50)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_510169:
L_321229:
	cmpq $0x1,%r13
	je L_320995
L_321230:
	movq 0x8(%r13),%r14
	movw 0x0(%r13),%r15w
	jmp L_320990
.p2align 0x4
L_510171:
L_321226:
	cmpq $0x1,%r14
	je L_320995
L_321227:
	movw 0x0(%r14),%r13w
	movq 0x8(%r14),%r14
	movw %r13w,%r15w
	jmp L_320990
.p2align 0x4
L_510173:
L_320971:
	movq (globalObjptr+0x6A40)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_510174:
L_321233:
	movl 0x20(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_510175
L_321234:
	leaq L_321095(%rip),%r15
	movq %r15,0x48(%rbp)
	movq %rbp,%r15
	addq $0x50,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x0(%rbp),%r15
	movq %r15,0xA8(%rbp)
	movb 0x8(%rbp),%r15b
	movb %r15b,0xB0(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0xD0(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0xD8(%rbp)
	addq $0xA8,%rbp
	leaq (L_321235+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp freeXmmRegister_0
.p2align 0x4
L_510175:
L_321256:
	leaq L_321095(%rip),%r15
	movq %r15,0x48(%rbp)
	movq %rbp,%r15
	addq $0x50,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x0(%rbp),%r15
	movq %r15,0xA8(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0xB0(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xA8,%rbp
	leaq (L_321257+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toAddressMemLoc_0
.p2align 0x4
L_510176:
L_321323:
	movq $0x2367,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xB0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xB8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xA8(%rbp),%r14
	cmpq $0x1,%r14
	je L_510177
L_321324:
	movq %r15,0xB8(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0xA8(%rbp)
	movq %r15,0xB0(%rbp)
	jmp L_320964
.p2align 0x4
L_510177:
L_321325:
	movq 0xB8(%rbp),%r15
	movq 0xB0(%rbp),%r13
	xchgq %r13,%r14
	jmp L_320970
.p2align 0x4
L_510178:
L_321326:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_321327+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_321327
.p2align 0x4
.long 0x4EC1
L_321327:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	jmp L_320965
.p2align 0x4
.long 0x4EA7
L_320996:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movw 0xC0(%rbp),%r15w
	movw %r15w,0x60(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0xB8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_320997
L_321192:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_321193+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_321193
.p2align 0x4
.long 0x4EB8
L_321193:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_320997:
	movzwq 0x60(%rbp),%r15
	shlq $0x2,%r15
	orq $0x1,%r15
	movq %r15,0xC0(%rbp)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_510182
L_320998:
	movq 0x8(%r14),%r13
	movq %r13,0xC8(%rbp)
	movq 0x0(%r14),%r15
L_320999:
	movq %r15,0xD8(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0xE0(%rbp)
	addq $0xD8,%rbp
	leaq (L_321000+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp eq_11
.p2align 0x4
L_510182:
L_321005:
	movq $0x22BD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0xC8(%rbp)
	addq $0x10,%r12
	movq 0x90(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_510183
L_321006:
	movq 0x8(%r14),%r13
	movq %r13,0xD0(%rbp)
	movq 0x0(%r14),%r15
L_321007:
	movq %r15,0xE0(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0xE8(%rbp)
	addq $0xE0,%rbp
	leaq (L_321008+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp eq_11
.p2align 0x4
L_510183:
L_321013:
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0xA0(%rbp),%r15
	cmpq $0x1,%r15
	je L_510203
L_321014:
	movq 0x8(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x88(%rbp)
	movq $0x1,0xA0(%rbp)
.p2align 0x4,,0x7
L_321015:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_510202
.p2align 0x4,,0x7
L_321016:
	movq 0x88(%rbp),%r15
	movw 0x10(%r15),%r14w
	movw 0xA(%rbp),%r15w
	movw %r15w,%r13w
	shrw $0x8,%r13w
	movb %r13b,%r11b
	movw %r14w,%r13w
	shrw $0x8,%r13w
	movb %r13b,%r10b
	cmpb %r10b,%r11b
	jne L_321018
L_321163:
	movb %r15b,%r13b
	movb %r14b,%r15b
	cmpb %r15b,%r13b
	jne L_510199
L_321165:
	movq 0x80(%rbp),%r15
	cmpq $0x1,%r15
	je L_510184
L_321166:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x80(%rbp)
	movq %r14,0x88(%rbp)
	jmp L_321015
.p2align 0x4
L_510184:
L_321167:
	movq 0xA0(%rbp),%r14
	xchgq %r14,%r15
L_321021:
	movq $0x1319,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x28,%r12
	movq 0x68(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x70(%rbp),%r13
	movq %r13,0x10(%r14)
	movq 0x78(%rbp),%r13
	movq %r13,0x18(%r14)
	cmpq $0x1,0xB8(%rbp)
	je L_510185
L_321022:
	movq 0x90(%rbp),%r13
	movq %r13,0x60(%rbp)
	movq %r14,%r15
L_321023:
	movq %r15,0xD0(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movb 0x8(%rbp),%r15b
	movb %r15b,0xC0(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0xD8(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0xE0(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0xE8(%rbp)
	addq $0xB8,%rbp
	leaq (L_321024+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp freeXmmRegister_0
.p2align 0x4
L_510185:
L_321127:
	movl 0x24(%rbp),%ecx
	movq 0x90(%rbp),%r15
L_321128:
	movl 0x20(%rbp),%r13d
	testl %r13d,%r13d
	jz L_510192
L_321146:
	movq $0x11AB,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x10(%rbp)
	movl %ecx,0xC(%r13)
	movq %r15,0x18(%r13)
	addq $0x28,%r12
	movq 0xA8(%rbp),%r15
	movq %r15,0x0(%r13)
	movl 0xC(%rbp),%r15d
	movl %r15d,0x8(%r13)
	movzwl 0x60(%rbp),%r15d
	movl %r15d,0x10(%r13)
	movl $0x0,0x14(%r13)
	movq 0x0(%r14),%r15
	movq %r15,0x18(%rbp)
	movq 0x8(%r14),%r15
	movq 0x10(%r14),%r13
	movq %r13,0x20(%rbp)
	movq 0x18(%r14),%r13
	movq %r13,0x28(%rbp)
	cmpq $0x1,%r15
	je L_510191
L_321147:
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq $0x1,0x40(%rbp)
.p2align 0x4,,0x7
L_321148:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_510190
.p2align 0x4,,0x7
L_321149:
	movq 0x38(%rbp),%r15
	movw 0x10(%r15),%r14w
	movw 0x60(%rbp),%r15w
	movw %r15w,%r13w
	shrw $0x8,%r13w
	movb %r13b,%r11b
	movw %r14w,%r13w
	shrw $0x8,%r13w
	movb %r13b,%r10b
	cmpb %r10b,%r11b
	jne L_321151
L_321155:
	movb %r15b,%r13b
	movb %r14b,%r15b
	cmpb %r15b,%r13b
	jne L_510187
L_321157:
	movq 0x30(%rbp),%r15
	cmpq $0x1,%r15
	je L_510186
L_321158:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x30(%rbp)
	movq %r14,0x38(%rbp)
	jmp L_321148
.p2align 0x4
L_510186:
L_321159:
	movq 0x40(%rbp),%r14
	xchgq %r14,%r15
L_321154:
	movq $0x2367,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1319,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x28,%r12
	movq 0x18(%rbp),%r11
	movq %r11,0x0(%r13)
	movq 0x20(%rbp),%r11
	movq %r11,0x10(%r13)
	movq 0x28(%rbp),%r11
	movq %r11,0x18(%r13)
	movq $0x22CF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x20,%r12
	movzbl 0x8(%rbp),%r11d
	movl %r11d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0xC0(%rbp),%r11
	movq %r11,0x8(%r14)
	movq 0x58(%rbp),%r11
	movq %r11,0x10(%r14)
	movq $0x2327,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	addq $0x10,%r12
	movq $0x236B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r11,0x0(%r14)
	addq $0x10,%r12
	movw 0x60(%rbp),%r15w
	xchgq %r13,%r14
	jmp L_321036
.p2align 0x4
L_510187:
L_321151:
	movq $0x2367,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_321154
L_321152:
	movq %r15,0x40(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	movq %r15,0x38(%rbp)
	jmp L_321148
.p2align 0x4
L_510190:
L_321160:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_321161+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_321161
.p2align 0x4
.long 0x4EAE
L_321161:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	jmp L_321149
.p2align 0x4
L_510191:
L_321162:
	movq $0x1,%r15
	jmp L_321154
.p2align 0x4
L_510192:
L_321129:
	movq $0x11AB,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x10(%rbp)
	movq %r15,0x18(%r13)
	addq $0x28,%r12
	movq 0xA8(%rbp),%r15
	movq %r15,0x0(%r13)
	movl 0xC(%rbp),%r15d
	movl %r15d,0x8(%r13)
	movl $0x1,0xC(%r13)
	movzwl 0x60(%rbp),%r15d
	movl %r15d,0x10(%r13)
	movl $0x0,0x14(%r13)
	movq 0x0(%r14),%r15
	movq %r15,0x18(%rbp)
	movq 0x8(%r14),%r15
	movq 0x10(%r14),%r13
	movq %r13,0x20(%rbp)
	movq 0x18(%r14),%r13
	movq %r13,0x28(%rbp)
	cmpq $0x1,%r15
	je L_510198
L_321130:
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq $0x1,0x40(%rbp)
.p2align 0x4,,0x7
L_321131:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_510197
.p2align 0x4,,0x7
L_321132:
	movq 0x38(%rbp),%r15
	movw 0x10(%r15),%r14w
	movw 0x60(%rbp),%r15w
	movw %r15w,%r13w
	shrw $0x8,%r13w
	movb %r13b,%r11b
	movw %r14w,%r13w
	shrw $0x8,%r13w
	movb %r13b,%r10b
	cmpb %r10b,%r11b
	jne L_321134
L_321138:
	movb %r15b,%r13b
	movb %r14b,%r15b
	cmpb %r13b,%r15b
	jne L_510194
L_321140:
	movq 0x30(%rbp),%r15
	cmpq $0x1,%r15
	je L_510193
L_321141:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x30(%rbp)
	movq %r14,0x38(%rbp)
	jmp L_321131
.p2align 0x4
L_510193:
L_321142:
	movq 0x40(%rbp),%r14
	xchgq %r14,%r15
L_321137:
	movq $0x2367,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r13)
	movq $0x1319,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x8(%r14)
	addq $0x28,%r12
	movq 0x18(%rbp),%r11
	movq %r11,0x0(%r14)
	movq 0x20(%rbp),%r11
	movq %r11,0x10(%r14)
	movq 0x28(%rbp),%r11
	movq %r11,0x18(%r14)
	movw 0x60(%rbp),%r15w
	movq $0x1,%r13
	jmp L_321036
.p2align 0x4
L_510194:
L_321134:
	movq $0x2367,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_321137
L_321135:
	movq %r15,0x40(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	movq %r15,0x38(%rbp)
	jmp L_321131
.p2align 0x4
L_510197:
L_321143:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_321144+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_321144
.p2align 0x4
.long 0x4EAD
L_321144:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_321132
.p2align 0x4
L_510198:
L_321145:
	movq $0x1,%r15
	jmp L_321137
.p2align 0x4
L_510199:
L_321018:
	movq $0x2367,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x88(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xA0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x80(%rbp),%r14
	cmpq $0x1,%r14
	je L_321021
L_321019:
	movq %r15,0xA0(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x80(%rbp)
	movq %r15,0x88(%rbp)
	jmp L_321015
.p2align 0x4
L_510202:
L_321168:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_321169+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_321169
.p2align 0x4
.long 0x4EAF
L_321169:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	jmp L_321016
.p2align 0x4
L_510203:
L_321170:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_321021
.p2align 0x4
.long 0x281B
L_321095:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	cmpq $0x1E,%r15
	je L_510206
L_321096:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_321097
L_321098:
L_321097:
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq 0x50(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_510206:
L_321099:
	movq (globalObjptr+0x6A58)(%rip),%r15
	movl 0x0(%r15),%r14d
	decl %r14d
	jo L_321100
L_321101:
	movl %r14d,0x0(%r15)
	testl %r14d,%r14d
	jz L_510207
L_321102:
	movq 0x50(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x1E,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_510207:
L_321103:
	movq (globalObjptr+0x6A58)(%rip),%r15
	movl 0x0(%r15),%r14d
	incl %r14d
	jo L_510208
L_321104:
	movl %r14d,0x0(%r15)
	movq 0x50(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x0(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x60,%rbp
	leaq (L_321105+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp spillRegisters_0
.p2align 0x4
L_510208:
L_321100:
	movq 0x50(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4EBB
L_321235:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x58(%rbp)
	movw 0xB0(%rbp),%r14w
	movw %r14w,0xA(%rbp)
	movq 0xB8(%rbp),%r14
	movq %r14,0x60(%rbp)
	movq %r15,0xA8(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0xB0(%rbp)
	addq $0xA8,%rbp
	leaq (L_321236+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp xmmremove_0
.p2align 0x4
.long 0x4EBB
L_321257:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_321258
L_321321:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_321322+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_321322
.p2align 0x4
.long 0x4EC0
L_321322:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_321258:
	movq 0x68(%rbp),%r15
	movl 0x0(%r15),%r14d
	movl 0x4(%r15),%r13d
	movl %r13d,%r15d
	andl $0x1,%r15d
	cmpl $0x1,%r15d
	jne L_510211
L_321318:
	shrl $0x1,%r13d
	movw %r13w,%r15w
	movl %r14d,%r13d
	andl $0x1,%r13d
	cmpl $0x1,%r13d
	jne L_510210
L_321320:
	shrl $0x1,%r14d
	movw %r14w,%r13w
	movzwq %r15w,%r14
	shlq $0x2,%r14
	orq $0x2,%r14
	movzwq %r13w,%r15
	shlq $0x2,%r15
	orq $0x2,%r15
	movq $0x22F9,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x18,%r12
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%r13)
	movq $0x22F9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
L_321261:
	movq %r15,0xB8(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0xA8(%rbp)
	movb 0x8(%rbp),%r15b
	movb %r15b,0xB0(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq $0x1,0xD0(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0xD8(%rbp)
	addq $0xA8,%rbp
	leaq (L_321262+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp freeXmmRegister_0
.p2align 0x4
L_510210:
L_321319:
	movzwq %r15w,%r14
	shlq $0x2,%r14
	orq $0x2,%r14
	movq $0x22F9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_321261
.p2align 0x4
L_510211:
L_321259:
	movl %r14d,%r15d
	andl $0x1,%r15d
	cmpl $0x1,%r15d
	jne L_510212
L_321317:
	shrl $0x1,%r14d
	movw %r14w,%r15w
	movzwq %r15w,%r14
	shlq $0x2,%r14
	orq $0x2,%r14
	movq $0x22F9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_321261
.p2align 0x4
L_510212:
L_321260:
	movq 0x10(%rbp),%r15
	jmp L_321261
.p2align 0x4
.long 0x4EA8
L_321000:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movl 0xD8(%rbp),%r15d
	movl %r15d,0x64(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_321001
L_321189:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_321190+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_321190
.p2align 0x4
.long 0x4EB7
L_321190:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_321001:
	movl 0x64(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_510215
L_321002:
	movq 0xC8(%rbp),%r14
	cmpq $0x1,%r14
	je L_321005
L_321003:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0xC8(%rbp)
	jmp L_320999
.p2align 0x4
L_510215:
L_321172:
	movq 0x68(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xD0,%rbp
	leaq (L_321173+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x4EA9
L_321008:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	movl 0xE0(%rbp),%r15d
	movl %r15d,0x64(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_321009
L_321185:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_321186+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_321186
.p2align 0x4
.long 0x4EB6
L_321186:
	addq $0xFFFFFFFFFFFFFF20,%rbp
L_321009:
	movl 0x64(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_321172
L_321010:
	movq 0xD0(%rbp),%r14
	cmpq $0x1,%r14
	je L_321013
L_321011:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0xD0(%rbp)
	jmp L_321007
.p2align 0x4
.long 0x4EAA
L_321024:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0x68(%rbp)
	movw 0xC0(%rbp),%r14w
	movw %r14w,0xA(%rbp)
	movq 0xC8(%rbp),%r14
	movq %r14,0x70(%rbp)
	movq %r15,0xB8(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xB8,%rbp
	leaq (L_321025+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp xmmremove_0
.p2align 0x4
.long 0x4E19
L_321105:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x68(%rbp),%r14
	movq %r14,0x58(%rbp)
	leaq L_321118(%rip),%r14
	movq %r14,0x48(%rbp)
	movq %rbp,%r14
	addq $0x50,%r14
	subq (gcState+0x560)(%rip),%r14
	movq %r14,(gcState+0x20)(%rip)
	movq 0x0(%rbp),%r14
	movq %r14,0x68(%rbp)
	movb 0x8(%rbp),%r14b
	movb %r14b,0x70(%rbp)
	movq 0x10(%rbp),%r14
	movq %r14,0x78(%rbp)
	movq %r15,0x80(%rbp)
	movl 0x20(%rbp),%r15d
	movl %r15d,0x88(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x98(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0xA0(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0xA8(%rbp)
	addq $0x68,%rbp
	leaq (L_321106+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toXmmRegisterMemLoc_0
.p2align 0x4
.long 0x4EBC
L_321236:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_321237
L_321254:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_321255+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_321255
.p2align 0x4
.long 0x6D8
L_321255:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_321237:
	movq $0x11AB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x10(%rbp)
	addq $0x28,%r12
	movq $0x0,0x0(%r15)
	movl $0x400,0x8(%r15)
	movl $0x1,0xC(%r15)
	movzwl 0xA(%rbp),%r14d
	movl %r14d,0x10(%r15)
	movl $0x0,0x14(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x58(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x8(%r15),%r14
	movq 0x10(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x18(%r15),%r13
	movq %r13,0x30(%rbp)
	cmpq $0x1,%r14
	je L_510225
L_321238:
	movq 0x8(%r14),%r15
	movq %r15,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x38(%rbp)
	movq $0x1,0x40(%rbp)
.p2align 0x4,,0x7
L_321239:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_510224
.p2align 0x4,,0x7
L_321240:
	movq 0x38(%rbp),%r15
	movw 0x10(%r15),%r14w
	movw 0xA(%rbp),%r15w
	movw %r15w,%r13w
	shrw $0x8,%r13w
	movb %r13b,%r11b
	movw %r14w,%r13w
	shrw $0x8,%r13w
	movb %r13b,%r10b
	cmpb %r10b,%r11b
	jne L_321242
L_321246:
	movb %r15b,%r13b
	movb %r14b,%r15b
	cmpb %r13b,%r15b
	jne L_510221
L_321248:
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_510220
L_321249:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x28(%rbp)
	movq %r14,0x38(%rbp)
	jmp L_321239
.p2align 0x4
L_510220:
L_321250:
	movq 0x40(%rbp),%r14
	xchgq %r14,%r15
L_321245:
	movq $0x2367,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r11
	movq %r11,0x0(%r14)
	movq $0x1319,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x28,%r12
	movq 0x18(%rbp),%r11
	movq %r11,0x0(%r13)
	movq 0x20(%rbp),%r11
	movq %r11,0x10(%r13)
	movq 0x30(%rbp),%r11
	movq %r11,0x18(%r13)
	movw 0xA(%rbp),%r15w
	movq 0x60(%rbp),%r11
	movq %r13,%r14
	movq %r11,%r13
	jmp L_321036
.p2align 0x4
L_510221:
L_321242:
	movq $0x2367,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_321245
L_321243:
	movq %r15,0x40(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x38(%rbp)
	jmp L_321239
.p2align 0x4
L_510224:
L_321251:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_321252+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_321252
.p2align 0x4
.long 0x4E2F
L_321252:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_321240
.p2align 0x4
L_510225:
L_321253:
	movq $0x1,%r15
	jmp L_321245
.p2align 0x4
.long 0x4EBD
L_321262:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x58(%rbp)
	movw 0xB0(%rbp),%r14w
	movw %r14w,0xA(%rbp)
	movq 0xB8(%rbp),%r14
	movq %r14,0x70(%rbp)
	movq %r15,0xA8(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0xB0(%rbp)
	addq $0xA8,%rbp
	leaq (L_321263+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp xmmremove_0
.p2align 0x4
.long 0x4EB0
L_321173:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movl 0xD0(%rbp),%r15d
	movl %r15d,0x24(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_321174
L_321183:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_321184+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_321184
.p2align 0x4
.long 0x4EB5
L_321184:
	addq $0xFFFFFFFFFFFFFF30,%rbp
L_321174:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq (globalObjptr+0x112E0)(%rip),%r14
	movq %r14,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0x17,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x8(%r11)
	movq %r13,0x10(%r11)
	addq $0x28,%r12
	movl 0x24(%rbp),%r15d
	movl %r15d,0x0(%r11)
	movl $0x0,0x4(%r11)
	movq %r14,0x18(%r11)
	movq $0x22B3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	movq %r15,0xD0(%rbp)
	addq $0x10,%r12
	movq 0x70(%rbp),%r15
	movq %r15,0xD8(%rbp)
	addq $0xD0,%rbp
	leaq (L_321175+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_2
.p2align 0x4
.long 0x4EAB
L_321025:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_321026
L_321093:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_321094+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_321094
.p2align 0x4
.long 0x4EAC
L_321094:
	addq $0xFFFFFFFFFFFFFF48,%rbp
L_321026:
	movl 0x20(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_510234
L_321027:
	movq $0x11AB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x10(%rbp)
	addq $0x28,%r12
	movq 0xA8(%rbp),%r14
	movq %r14,0x0(%r15)
	movl 0xC(%rbp),%r14d
	movl %r14d,0x8(%r15)
	movl $0x1,0xC(%r15)
	movzwl 0xA(%rbp),%r14d
	movl %r14d,0x10(%r15)
	movl $0x0,0x14(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x68(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x8(%r15),%r14
	movq 0x10(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x18(%r15),%r13
	movq %r13,0x28(%rbp)
	cmpq $0x1,%r14
	je L_510233
L_321028:
	movq 0x8(%r14),%r15
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x38(%rbp)
	movq $0x1,0x40(%rbp)
.p2align 0x4,,0x7
L_321029:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_510232
.p2align 0x4,,0x7
L_321030:
	movq 0x38(%rbp),%r15
	movw 0x10(%r15),%r14w
	movw 0xA(%rbp),%r15w
	movw %r15w,%r13w
	shrw $0x8,%r13w
	movb %r13b,%r11b
	movw %r14w,%r13w
	shrw $0x8,%r13w
	movb %r13b,%r10b
	cmpb %r11b,%r10b
	jne L_321032
L_321038:
	movb %r15b,%r13b
	movb %r14b,%r15b
	cmpb %r15b,%r13b
	jne L_510229
L_321040:
	movq 0x30(%rbp),%r15
	cmpq $0x1,%r15
	je L_510228
L_321041:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x30(%rbp)
	movq %r14,0x38(%rbp)
	jmp L_321029
.p2align 0x4
L_510228:
L_321042:
	movq 0x40(%rbp),%r14
	xchgq %r14,%r15
L_321035:
	movq $0x2367,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r11
	movq %r11,0x0(%r14)
	movq $0x1319,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x28,%r12
	movq 0x18(%rbp),%r11
	movq %r11,0x0(%r13)
	movq 0x20(%rbp),%r11
	movq %r11,0x10(%r13)
	movq 0x28(%rbp),%r11
	movq %r11,0x18(%r13)
	movw 0xA(%rbp),%r15w
	movq 0x70(%rbp),%r11
	movq %r13,%r14
	movq %r11,%r13
	jmp L_321036
.p2align 0x4
L_510229:
L_321032:
	movq $0x2367,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_321035
L_321033:
	movq %r15,0x40(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	movq %r15,0x38(%rbp)
	jmp L_321029
.p2align 0x4
L_510232:
L_321043:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_321044+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_321044
.p2align 0x4
.long 0x8D6
L_321044:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	jmp L_321030
.p2align 0x4
L_510233:
L_321045:
	movq $0x1,%r15
	jmp L_321035
.p2align 0x4
L_510234:
L_321046:
	movq $0x11AB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x10(%rbp)
	addq $0x28,%r12
	movq 0xA8(%rbp),%r14
	movq %r14,0x0(%r15)
	movl 0xC(%rbp),%r14d
	movl %r14d,0x8(%r15)
	movl 0x24(%rbp),%r14d
	movl %r14d,0xC(%r15)
	movzwl 0xA(%rbp),%r14d
	movl %r14d,0x10(%r15)
	movl $0x0,0x14(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x68(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x8(%r15),%r14
	movq 0x10(%r15),%r13
	movq %r13,0x28(%rbp)
	movq 0x18(%r15),%r13
	movq %r13,0x30(%rbp)
	cmpq $0x1,%r14
	je L_510250
L_321047:
	movq 0x8(%r14),%r15
	movq %r15,0x20(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x38(%rbp)
	movq $0x1,0x40(%rbp)
.p2align 0x4,,0x7
L_321048:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_510249
.p2align 0x4,,0x7
L_321049:
	movq 0x38(%rbp),%r15
	movw 0x10(%r15),%r14w
	movw 0xA(%rbp),%r15w
	movw %r15w,%r13w
	shrw $0x8,%r13w
	movb %r13b,%r11b
	movw %r14w,%r13w
	shrw $0x8,%r13w
	movb %r13b,%r10b
	cmpb %r11b,%r10b
	jne L_321051
L_321085:
	movb %r15b,%r13b
	movb %r14b,%r15b
	cmpb %r15b,%r13b
	jne L_510246
L_321087:
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je L_510235
L_321088:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x20(%rbp)
	movq %r14,0x38(%rbp)
	jmp L_321048
.p2align 0x4
L_510235:
L_321089:
	movq 0x40(%rbp),%r14
	xchgq %r14,%r15
L_321054:
	movq $0x2367,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x1319,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x20(%rbp)
	movq %r14,0x8(%r15)
	addq $0x28,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x18(%r15)
	movzwq 0xA(%rbp),%r15
	shlq $0x2,%r15
	orq $0x1,%r15
	movq $0x22CF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x20,%r12
	movzbl 0x8(%rbp),%r15d
	movl %r15d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x58(%rbp),%r15
	movq %r15,0x10(%r14)
	movq $0x2327,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x236B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x2551,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq 0x70(%rbp),%r14
	cmpq $0x1,%r14
	je L_510245
L_321055:
	movq %r15,0x10(%rbp)
L_321056:
	movq %r14,0x18(%rbp)
	movq $0x1,0x28(%rbp)
.p2align 0x4,,0x7
L_321057:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_510244
.p2align 0x4,,0x7
L_321058:
	movq $0x2551,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x18(%rbp),%r11
	movq %r11,0x0(%r14)
	movq 0x28(%rbp),%r11
	movq %r11,0x8(%r14)
	movq 0x10(%rbp),%r11
	cmpq $0x1,%r11
	je L_510243
L_321059:
	movq 0x8(%r11),%r13
	movq 0x0(%r11),%r15
L_321060:
	cmpq $0x1,%r15
	je L_510236
L_321061:
	movq %r13,0x10(%rbp)
	movq %r14,0x28(%rbp)
	movq %r15,0x18(%rbp)
L_321062:
	jmp L_321057
.p2align 0x4
L_510236:
L_321063:
	movq %r13,0x10(%rbp)
	movq %r14,0x18(%rbp)
.p2align 0x4,,0x7
L_321064:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_510242
.p2align 0x4,,0x7
L_321065:
	movq 0x10(%rbp),%r11
	cmpq $0x1,%r11
	je L_510237
L_321066:
	movq 0x8(%r11),%r13
	movq 0x0(%r11),%r15
	movq 0x18(%rbp),%r14
	jmp L_321060
.p2align 0x4
L_510237:
L_321067:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_510241
L_321068:
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%r15),%r15
	movq %r15,0x18(%rbp)
	movq $0x1,0x28(%rbp)
.p2align 0x4,,0x7
L_321069:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_510240
.p2align 0x4,,0x7
L_321070:
	movq $0x2551,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_510238
L_321071:
	movq %r15,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x18(%rbp)
	jmp L_321069
.p2align 0x4
L_510238:
L_321073:
	cmpq $0x1,%r15
	je L_510239
L_321074:
	movq $0x2371,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movw 0xA(%rbp),%r15w
	jmp L_321036
.p2align 0x4
L_510239:
L_321075:
	movq 0x20(%rbp),%r14
	movw 0xA(%rbp),%r15w
	movq $0x1,%r13
	jmp L_321036
.p2align 0x4
L_510240:
L_321076:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_321077+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_321077
.p2align 0x4
.long 0x4E16
L_321077:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	jmp L_321070
.p2align 0x4
L_510241:
L_321078:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_321073
.p2align 0x4
L_510242:
L_321079:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_321080+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_321080
.p2align 0x4
.long 0x4E17
L_321080:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	jmp L_321065
.p2align 0x4
L_510243:
L_321081:
	movq 0x28(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq $0x1,0x28(%rbp)
	jmp L_321069
.p2align 0x4
L_510244:
L_321082:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_321083+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_321083
.p2align 0x4
.long 0x4E16
L_321083:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	jmp L_321058
.p2align 0x4
L_510245:
L_321084:
	movq %r15,0x10(%rbp)
	movq $0x1,0x18(%rbp)
	jmp L_321064
.p2align 0x4
L_510246:
L_321051:
	movq $0x2367,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_321054
L_321052:
	movq %r15,0x40(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x38(%rbp)
	jmp L_321048
.p2align 0x4
L_510249:
L_321090:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_321091+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_321091
.p2align 0x4
.long 0x8D6
L_321091:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	jmp L_321049
.p2align 0x4
L_510250:
L_321092:
	movq $0x1,%r15
	jmp L_321054
.p2align 0x4
.long 0xA96
L_321106:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	movw 0x70(%rbp),%r15w
	movw %r15w,0x68(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x70(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_321107
L_321116:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_321117+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_321117
.p2align 0x4
.long 0x4E1A
L_321117:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_321107:
	movq 0x58(%rbp),%r14
	cmpq $0x1,%r14
	je L_510254
L_321108:
L_321109:
	movq 0x70(%rbp),%r13
	cmpq $0x1,%r13
	je L_510253
L_321110:
L_321111:
	movq $0x2373,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
L_321112:
	movq (globalObjptr+0x6A58)(%rip),%r14
	movl 0x0(%r14),%r13d
	decl %r13d
	jo L_321100
L_321113:
	movl %r13d,0x0(%r14)
	movq %r15,0x10(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x60(%rbp),%r15
	movq %r15,0x0(%rbp)
	movw 0x68(%rbp),%r15w
	movw %r15w,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_510253:
L_321114:
	movq %r14,%r15
	jmp L_321112
.p2align 0x4
L_510254:
L_321115:
	movq 0x70(%rbp),%r15
	jmp L_321112
.p2align 0x4
.long 0x281B
L_321118:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	cmpq $0x1E,%r15
	je L_510257
L_321119:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_321120
L_321121:
L_321120:
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq 0x50(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_510257:
L_321122:
	movq 0x50(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x6B30)(%rip),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_321123+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x4EBE
L_321263:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_321264
L_321315:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_321316+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_321316
.p2align 0x4
.long 0x4EBF
L_321316:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_321264:
	movq $0x11AB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x78(%rbp)
	addq $0x28,%r12
	movq $0x0,0x0(%r15)
	movl $0x400,0x8(%r15)
	movl $0x1,0xC(%r15)
	movzwl 0xA(%rbp),%r14d
	movl %r14d,0x10(%r15)
	movl $0x0,0x14(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x58(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x8(%r15),%r14
	movq 0x10(%r15),%r13
	movq %r13,0x88(%rbp)
	movq 0x18(%r15),%r13
	movq %r13,0x90(%rbp)
	cmpq $0x1,%r14
	je L_510263
L_321265:
	movq 0x8(%r14),%r15
	movq %r15,0x58(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0xA0(%rbp)
	movq $0x1,0xA8(%rbp)
.p2align 0x4,,0x7
L_321266:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_510262
.p2align 0x4,,0x7
L_321267:
	movq 0xA0(%rbp),%r15
	movw 0x10(%r15),%r14w
	movw 0xA(%rbp),%r15w
	movw %r15w,%r13w
	shrw $0x8,%r13w
	movb %r13b,%r11b
	movw %r14w,%r13w
	shrw $0x8,%r13w
	movb %r13b,%r10b
	cmpb %r11b,%r10b
	jne L_321269
L_321307:
	movb %r15b,%r13b
	movb %r14b,%r15b
	cmpb %r13b,%r15b
	jne L_510259
L_321309:
	movq 0x58(%rbp),%r15
	cmpq $0x1,%r15
	je L_510258
L_321310:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x58(%rbp)
	movq %r14,0xA0(%rbp)
	jmp L_321266
.p2align 0x4
L_510258:
L_321311:
	movq 0xA8(%rbp),%r14
	xchgq %r14,%r15
L_321272:
	movq $0x2367,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x78(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x1319,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x28,%r12
	movq 0x80(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x88(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x90(%rbp),%r14
	movq %r14,0x18(%r15)
	movq %r15,0xC0(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0xA8(%rbp)
	movb 0x8(%rbp),%r15b
	movb %r15b,0xB0(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movl 0x20(%rbp),%r15d
	movl %r15d,0xC8(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0xD0(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0xD8(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0xE0(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0xE8(%rbp)
	addq $0xA8,%rbp
	leaq (L_321273+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toXmmRegisterMemLoc_0
.p2align 0x4
L_510259:
L_321269:
	movq $0x2367,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xA0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xA8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x58(%rbp),%r14
	cmpq $0x1,%r14
	je L_321272
L_321270:
	movq %r15,0xA8(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x58(%rbp)
	movq %r15,0xA0(%rbp)
	jmp L_321266
.p2align 0x4
L_510262:
L_321312:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_321313+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_321313
.p2align 0x4
.long 0x4E3D
L_321313:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	jmp L_321267
.p2align 0x4
L_510263:
L_321314:
	movq $0x1,%r15
	jmp L_321272
.p2align 0x4
.long 0x4EB1
L_321175:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movq 0xD0(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x90(%rbp),%r14
	movq 0x18(%r14),%r13
	movb 0x0(%r13),%r15b
	movb %r15b,0x9(%rbp)
	movq 0x88(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xE0(%rbp)
	movb $0x3,0xD0(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0xD8(%rbp)
	addq $0xD0,%rbp
	leaq (L_321176+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp scaleImmediate_1
.p2align 0x4
.long 0x4E1B
L_321123:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_321124
L_321125:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_321126+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_321126
.p2align 0x4
.long 0x4E1C
L_321126:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_321124:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4EBE
L_321273:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x58(%rbp)
	movw 0xB0(%rbp),%r15w
	movw %r15w,0xC(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0x78(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_321274
L_321305:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_321306+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_321306
.p2align 0x4
.long 0x2CB7
L_321306:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_321274:
	movq $0x2551,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movzwq 0xA(%rbp),%r14
	shlq $0x2,%r14
	orq $0x1,%r14
	movq $0x22BF,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq 0x68(%rbp),%r11
	movq %r11,0x0(%r13)
	movq $0x22CF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x8(%r11)
	movq %r13,0x10(%r11)
	addq $0x20,%r12
	movzbl 0x8(%rbp),%r14d
	movl %r14d,0x0(%r11)
	movl $0x0,0x4(%r11)
	movq $0x2327,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r11,0x0(%r14)
	addq $0x10,%r12
	movq $0x236B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x10,%r12
	movq $0x2551,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq $0x2551,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r14
	cmpq $0x1,%r14
	je L_510275
L_321275:
	movq %r15,0x10(%rbp)
L_321276:
	movq %r14,0x18(%rbp)
	movq $0x1,0x20(%rbp)
.p2align 0x4,,0x7
L_321277:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_510274
.p2align 0x4,,0x7
L_321278:
	movq $0x2551,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x18(%rbp),%r11
	movq %r11,0x0(%r14)
	movq 0x20(%rbp),%r11
	movq %r11,0x8(%r14)
	movq 0x10(%rbp),%r11
	cmpq $0x1,%r11
	je L_510273
L_321279:
	movq 0x8(%r11),%r13
	movq 0x0(%r11),%r15
L_321280:
	cmpq $0x1,%r15
	je L_510266
L_321281:
	movq %r13,0x10(%rbp)
	movq %r14,0x20(%rbp)
	movq %r15,0x18(%rbp)
L_321282:
	jmp L_321277
.p2align 0x4
L_510266:
L_321283:
	movq %r13,0x10(%rbp)
	movq %r14,0x18(%rbp)
.p2align 0x4,,0x7
L_321284:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_510272
.p2align 0x4,,0x7
L_321285:
	movq 0x10(%rbp),%r11
	cmpq $0x1,%r11
	je L_510267
L_321286:
	movq 0x8(%r11),%r13
	movq 0x0(%r11),%r15
	movq 0x18(%rbp),%r14
	jmp L_321280
.p2align 0x4
L_510267:
L_321287:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_510271
L_321288:
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%r15),%r15
	movq %r15,0x18(%rbp)
	movq $0x1,0x20(%rbp)
.p2align 0x4,,0x7
L_321289:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_510270
.p2align 0x4,,0x7
L_321290:
	movq $0x2551,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_510268
L_321291:
	movq %r15,0x20(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x18(%rbp)
	jmp L_321289
.p2align 0x4
L_510268:
L_321293:
	cmpq $0x1,%r15
	je L_510269
L_321294:
	movq $0x2371,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x10,%r12
	movq 0x58(%rbp),%r14
	movw 0xC(%rbp),%r15w
	jmp L_321036
.p2align 0x4
L_510269:
L_321295:
	movq 0x58(%rbp),%r14
	movw 0xC(%rbp),%r15w
	movq $0x1,%r13
	jmp L_321036
.p2align 0x4
L_510270:
L_321296:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_321297+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_321297
.p2align 0x4
.long 0x4E32
L_321297:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	jmp L_321290
.p2align 0x4
L_510271:
L_321298:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_321293
.p2align 0x4
L_510272:
L_321299:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_321300+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_321300
.p2align 0x4
.long 0x4E33
L_321300:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	jmp L_321285
.p2align 0x4
L_510273:
L_321301:
	movq 0x20(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq $0x1,0x20(%rbp)
	jmp L_321289
.p2align 0x4
L_510274:
L_321302:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_321303+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_321303
.p2align 0x4
.long 0x4E32
L_321303:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	jmp L_321278
.p2align 0x4
L_510275:
L_321304:
	movq %r15,0x10(%rbp)
	movq $0x1,0x18(%rbp)
	jmp L_321284
.p2align 0x4
.long 0x4EB2
L_321176:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movq 0xD0(%rbp),%r15
	movq %r15,0x80(%rbp)
	movb 0x9(%rbp),%r14b
	movb %r14b,0xD0(%rbp)
	movb $0x3,0xD1(%rbp)
	movq $0x1,0xD8(%rbp)
	movq $0x1,0xE0(%rbp)
	movq %r15,0xE8(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0xF0(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0xF8(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x100(%rbp)
	addq $0xD0,%rbp
	leaq (L_321177+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp construct_3
.p2align 0x4
.long 0x4EB3
L_321177:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movq 0xD0(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_321178
L_321181:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_321182+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_321182
.p2align 0x4
.long 0x4EB4
L_321182:
	addq $0xFFFFFFFFFFFFFF30,%rbp
L_321178:
	cmpq $0x1,0xB8(%rbp)
	je L_510277
L_321179:
	movl $0x1,0x24(%rbp)
	movq 0x18(%rbp),%r15
	movq 0x68(%rbp),%r14
	movq %r14,0x60(%rbp)
	jmp L_321023
.p2align 0x4
L_510277:
L_321180:
	movl $0x1,%ecx
	movq 0x18(%rbp),%r14
	movq 0x68(%rbp),%r15
	jmp L_321128
.text
.p2align 0x4
.globl chooseXmmRegister_0
.hidden chooseXmmRegister_0
chooseXmmRegister_0:
L_321331:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x40(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_321332
L_322000:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_322001+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_322001
.p2align 0x4
.long 0x3CFE
L_322001:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_321332:
	movq 0x30(%rbp),%r15
	movq 0x20(%r15),%r14
	movq 0x18(%r15),%r13
	movq %r13,0x48(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x50(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x58(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x60(%rbp)
	movq 0x20(%rbp),%r15
	movq 0x10(%r15),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x68(%rbp)
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x70(%rbp)
	cmpq $0x1,0x28(%rbp)
	je L_510460
L_321333:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movb 0x8(%rbp),%r14b
	cmpb $0x0,%r14b
	je L_510458
	cmpb $0x1,%r14b
	je L_510279
L_321334:
	movq (globalObjptr+0x6A50)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_510279:
L_321990:
	cmpq $0x1,%r13
	je L_510457
L_321991:
	movq 0x8(%r13),%r15
	movq %r15,0x20(%rbp)
	movw 0x0(%r13),%r15w
	movw %r15w,0xA(%rbp)
	movq $0x1,0x30(%rbp)
.p2align 0x4,,0x7
L_321338:
	movq 0x28(%rbp),%r13
	movq %r13,%r14
	andq $0x3,%r14
	jnz L_510456
L_321340:
	movq 0x8(%r13),%r14
	movw 0x0(%r13),%r15w
.p2align 0x4,,0x7
L_321341:
	movw 0xA(%rbp),%r13w
	movw %r13w,%r11w
	shrw $0x8,%r11w
	movb %r11b,%r10b
	movw %r15w,%r11w
	shrw $0x8,%r11w
	movb %r11b,%r9b
	cmpb %r9b,%r10b
	jne L_510454
L_321979:
	movb %r13b,%r11b
	movb %r15b,%r13b
	cmpb %r13b,%r11b
	je L_510451
L_321980:
	cmpq $0x1,%r14
	je L_510280
L_321981:
	movw 0x0(%r14),%r15w
	movq 0x8(%r14),%r14
	jmp L_321341
.p2align 0x4
L_510280:
L_321345:
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je L_510281
L_321346:
	movw 0x0(%r15),%r14w
	movq 0x8(%r15),%r15
	movq %r15,0x20(%rbp)
	movw %r14w,0xA(%rbp)
	jmp L_321338
.p2align 0x4
L_510281:
L_321347:
	movq 0x30(%rbp),%r14
	xchgq %r14,%r15
L_321348:
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_510450
L_321349:
	movq %r15,0x78(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x20(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x30(%rbp)
	movq $0x1,0x80(%rbp)
.p2align 0x4,,0x7
L_321350:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_510449
.p2align 0x4,,0x7
L_321351:
	movq 0x30(%rbp),%r15
	movq %r15,%r14
	andq $0x3,%r14
	cmpq $0x1,%r14
	je L_510448
L_321352:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_321353
L_321956:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x115E,%r14
	jne L_321353
L_321957:
	movq 0x0(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%r14
	cmpq $0x1,%r14
	je L_510445
L_321958:
	movq 0x8(%r14),%r15
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x90(%rbp)
	movq $0x1,0x98(%rbp)
L_321959:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_510444
.p2align 0x4,,0x7
L_321960:
	movq 0x88(%rbp),%r15
	movq 0x90(%rbp),%r14
	movq 0x18(%r14),%r13
	movq 0x10(%r13),%r11
	cmpq %r11,0x10(%r15)
	je L_510442
L_321961:
	movq 0x30(%rbp),%r15
	cmpq $0x1,%r15
	je L_510282
L_321962:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x30(%rbp)
	movq %r14,0x90(%rbp)
	jmp L_321959
.p2align 0x4
L_510282:
L_321963:
	movq 0x98(%rbp),%r13
	cmpq $0x1,%r13
	je L_510441
L_321964:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r14
	xchgq %r11,%r15
L_321965:
	cmpq $0x1,%r15
	jne L_510440
L_321967:
	movw 0x10(%r14),%r15w
	movq $0x22AD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movzwl %r15w,%r13d
	movl %r13d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x1,0x8(%r14)
	movq %r14,%r15
L_321354:
	movq $0x22AF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x80(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je L_510283
L_321355:
	movq %r14,0x80(%rbp)
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x20(%rbp)
	movq %r14,0x30(%rbp)
	jmp L_321350
.p2align 0x4
L_510283:
L_321356:
	movq 0x78(%rbp),%r13
	movq %r13,0x20(%rbp)
	movq %r14,%r15
L_321357:
	cmpq $0x1,%r15
	je L_510439
L_321358:
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r15
	movq $0x1,0x78(%rbp)
.p2align 0x4,,0x7
L_321359:
	cmpq $0x1,%r15
	je L_510438
L_321360:
	movq 0x8(%r15),%r14
	movq %r14,0x80(%rbp)
	movw 0x0(%r15),%r14w
	movw %r14w,0xA(%rbp)
	movq $0x1,0x88(%rbp)
L_321361:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_510437
.p2align 0x4,,0x7
L_321362:
	movq $0x22AD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movzwl 0xA(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x88(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x80(%rbp),%r14
	cmpq $0x1,%r14
	je L_510284
L_321363:
	movq %r15,0x88(%rbp)
	movw 0x0(%r14),%r15w
	movq 0x8(%r14),%r14
	movq %r14,0x80(%rbp)
	movw %r15w,0xA(%rbp)
	jmp L_321361
.p2align 0x4
L_510284:
L_321364:
	movq 0x78(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x78(%rbp)
L_321365:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_510436
.p2align 0x4,,0x7
L_321366:
	movq $0x22AD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movzwl 0xA(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x80(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x78(%rbp),%r14
	cmpq $0x1,%r14
	je L_510285
L_321367:
	movq %r15,0x80(%rbp)
	movw 0x0(%r14),%r15w
	movq 0x8(%r14),%r14
	movq %r14,0x78(%rbp)
	movw %r15w,0xA(%rbp)
	jmp L_321365
.p2align 0x4
L_510285:
L_321369:
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_510286
L_321370:
	movq %r15,0x78(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	jmp L_321359
.p2align 0x4
L_510286:
L_321371:
	movq %r15,0x30(%rbp)
L_321372:
	movq 0x70(%rbp),%r15
	cmpq $0x1,%r15
	je L_510435
L_321373:
	movq 0x8(%r15),%r14
	movq %r14,0x78(%rbp)
	movw 0x0(%r15),%r14w
	movw %r14w,0xA(%rbp)
	movq $0x1,0x80(%rbp)
.p2align 0x4,,0x7
L_321374:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_510434
.p2align 0x4,,0x7
L_321375:
	movq 0x80(%rbp),%r13
	cmpq $0x1,%r13
	je L_321382
L_321376:
	movq 0x8(%r13),%r14
	movw 0x0(%r13),%r15w
.p2align 0x4,,0x7
L_321377:
	movw 0xA(%rbp),%r13w
	movw %r13w,%r11w
	shrw $0x8,%r11w
	movb %r11b,%r10b
	movw %r15w,%r11w
	shrw $0x8,%r11w
	movb %r11b,%r9b
	cmpb %r9b,%r10b
	jne L_510430
L_321936:
	movb %r13b,%r11b
	movb %r15b,%r13b
	cmpb %r13b,%r11b
	je L_510428
L_321937:
	cmpq $0x1,%r14
	je L_510287
L_321938:
	movw 0x0(%r14),%r15w
	movq 0x8(%r14),%r14
	jmp L_321377
.p2align 0x4
L_510287:
L_321939:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_510427
.p2align 0x4,,0x7
L_321382:
	movq $0x22AD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movzwl 0xA(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x80(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x78(%rbp),%r14
	cmpq $0x1,%r14
	je L_510288
L_321383:
	movq %r15,0x80(%rbp)
	movw 0x0(%r14),%r15w
	movq 0x8(%r14),%r14
	movq %r14,0x78(%rbp)
	movw %r15w,0xA(%rbp)
	jmp L_321374
.p2align 0x4
L_510288:
L_321385:
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_510426
L_321386:
	movq %r15,0x78(%rbp)
	movw 0x0(%r14),%r15w
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	movw %r15w,0xA(%rbp)
.p2align 0x4,,0x7
L_321387:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_510425
.p2align 0x4,,0x7
L_321388:
	movq 0x78(%rbp),%r13
	cmpq $0x1,%r13
	je L_321395
L_321389:
	movq 0x8(%r13),%r14
	movw 0x0(%r13),%r15w
.p2align 0x4,,0x7
L_321390:
	movw 0xA(%rbp),%r13w
	movw %r13w,%r11w
	shrw $0x8,%r11w
	movb %r11b,%r10b
	movw %r15w,%r11w
	shrw $0x8,%r11w
	movb %r11b,%r9b
	cmpb %r9b,%r10b
	jne L_510421
L_321920:
	movb %r13b,%r11b
	movb %r15b,%r13b
	cmpb %r13b,%r11b
	je L_510419
L_321921:
	cmpq $0x1,%r14
	je L_510289
L_321922:
	movw 0x0(%r14),%r15w
	movq 0x8(%r14),%r14
	jmp L_321390
.p2align 0x4
L_510289:
L_321923:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_510418
.p2align 0x4,,0x7
L_321395:
	movq $0x22AD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movzwl 0xA(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_510290
L_321396:
	movq %r15,0x78(%rbp)
	movw 0x0(%r14),%r15w
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	movw %r15w,0xA(%rbp)
	jmp L_321387
.p2align 0x4
L_510290:
L_321397:
	movq %r15,0x30(%rbp)
L_321398:
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je L_510417
L_321399:
	movw 0x0(%r15),%r14w
	movq 0x8(%r15),%r15
	movq %r15,0x20(%rbp)
	movw %r14w,0xA(%rbp)
	movq $0x1,0x78(%rbp)
.p2align 0x4,,0x7
L_321400:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_510416
.p2align 0x4,,0x7
L_321401:
	movq 0x30(%rbp),%r13
	cmpq $0x1,%r13
	je L_321408
L_321402:
	movq 0x8(%r13),%r14
	movw 0x0(%r13),%r15w
.p2align 0x4,,0x7
L_321403:
	movw 0xA(%rbp),%r13w
	movb %r13b,%r11b
	shrw $0x8,%r13w
	movb %r13b,%r10b
	movb %r15b,%r13b
	shrw $0x8,%r15w
	movb %r15b,%r9b
	cmpb %r11b,%r13b
	je L_510410
L_321404:
	cmpq $0x1,%r14
	je L_510291
L_321405:
	movw 0x0(%r14),%r15w
	movq 0x8(%r14),%r14
	jmp L_321403
.p2align 0x4
L_510291:
L_321406:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_510409
.p2align 0x4,,0x7
L_321408:
	movq $0x22AD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movzwl 0xA(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_510292
L_321409:
	movq %r15,0x78(%rbp)
	movw 0x0(%r14),%r15w
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	movw %r15w,0xA(%rbp)
	jmp L_321400
.p2align 0x4
L_510292:
L_321410:
	movq %r15,0x20(%rbp)
L_321411:
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_510408
L_321412:
	movq 0x8(%r14),%r13
	movq %r13,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq $0x1,0x78(%rbp)
.p2align 0x4,,0x7
L_321413:
L_321414:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_321415
L_321898:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x115E,%r14
	je L_510406
L_321415:
	movq $0x1,0x80(%rbp)
.p2align 0x4,,0x7
L_321416:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_510405
.p2align 0x4,,0x7
L_321417:
	movq $0x22AF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x80(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_510293
L_321418:
	movq %r15,0x78(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	jmp L_321413
.p2align 0x4
L_510293:
L_321419:
	movq 0x78(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x80(%rbp),%r15
	movq $0x1,0x78(%rbp)
.p2align 0x4,,0x7
L_321420:
	cmpq $0x1,%r15
	je L_510404
L_321421:
	movq 0x8(%r15),%r14
	movq %r14,0x80(%rbp)
	movw 0x0(%r15),%r14w
	movw %r14w,0xA(%rbp)
	movq $0x1,0x88(%rbp)
L_321422:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_510403
.p2align 0x4,,0x7
L_321423:
	movq $0x22AD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movzwl 0xA(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x88(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x80(%rbp),%r14
	cmpq $0x1,%r14
	je L_510294
L_321424:
	movq %r15,0x88(%rbp)
	movw 0x0(%r14),%r15w
	movq 0x8(%r14),%r14
	movq %r14,0x80(%rbp)
	movw %r15w,0xA(%rbp)
	jmp L_321422
.p2align 0x4
L_510294:
L_321425:
	movq 0x78(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x78(%rbp)
L_321426:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_510402
.p2align 0x4,,0x7
L_321427:
	movq $0x22AD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movzwl 0xA(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x80(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x78(%rbp),%r14
	cmpq $0x1,%r14
	je L_510295
L_321428:
	movq %r15,0x80(%rbp)
	movw 0x0(%r14),%r15w
	movq 0x8(%r14),%r14
	movq %r14,0x78(%rbp)
	movw %r15w,0xA(%rbp)
	jmp L_321426
.p2align 0x4
L_510295:
L_321430:
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_510296
L_321431:
	movq %r15,0x78(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	jmp L_321420
.p2align 0x4
L_510296:
L_321432:
	movq %r15,0x30(%rbp)
L_321433:
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x78(%rbp)
	cmpq $0x1,%r14
	je L_510401
L_321434:
	movq 0x8(%r14),%r15
	movq %r15,0x80(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x88(%rbp)
	movq $0x1,0x90(%rbp)
.p2align 0x4,,0x7
L_321435:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_510400
.p2align 0x4,,0x7
L_321436:
	movq $0x2367,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x88(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x90(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x80(%rbp),%r14
	cmpq $0x1,%r14
	je L_510297
L_321437:
	movq %r15,0x90(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x80(%rbp)
	movq %r15,0x88(%rbp)
	jmp L_321435
.p2align 0x4
L_510297:
L_321438:
	movq 0x90(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq $0x1,0x90(%rbp)
.p2align 0x4,,0x7
L_321439:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_510399
.p2align 0x4,,0x7
L_321440:
	movq 0x88(%rbp),%r15
	movq 0x18(%r15),%r14
	movq $0x22B9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x90(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x80(%rbp),%r14
	cmpq $0x1,%r14
	je L_510298
L_321441:
	movq %r15,0x90(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x80(%rbp)
	movq %r15,0x88(%rbp)
	jmp L_321439
.p2align 0x4
L_510298:
L_321442:
	movq %r15,0x80(%rbp)
L_321443:
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je L_321609
L_321444:
	movw 0x0(%r15),%r14w
	movq 0x8(%r15),%r15
	movq %r15,0x20(%rbp)
	movw %r14w,0xA(%rbp)
	movq $0x1,0x88(%rbp)
.p2align 0x4,,0x7
L_321445:
	movw 0xA(%rbp),%r15w
	movb %r15b,0x9(%rbp)
	movq 0x78(%rbp),%r15
	cmpq $0x1,%r15
	je L_510397
L_321446:
	movq 0x8(%r15),%r14
	movq %r14,0x90(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x98(%rbp)
	movq $0x1,0xA0(%rbp)
L_321447:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_510396
.p2align 0x4,,0x7
L_321448:
	movq 0x98(%rbp),%r15
	movw 0x10(%r15),%r14w
	movb %r14b,%r13b
	cmpb %r13b,0x9(%rbp)
	je L_510394
L_321449:
	movq 0x90(%rbp),%r15
	cmpq $0x1,%r15
	je L_510299
L_321450:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x90(%rbp)
	movq %r14,0x98(%rbp)
	jmp L_321447
.p2align 0x4
L_510299:
L_321451:
	movl $0x0,0xC(%rbp)
	movl $0x1,0x90(%rbp)
	movl $0x0,0x94(%rbp)
	movq $0x0,0x98(%rbp)
	movq 0xA0(%rbp),%r14
	movq %r14,0xA8(%rbp)
	movl $0x0,0xA4(%rbp)
	movl $0x0,0xA0(%rbp)
loop_3598:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_510393
.p2align 0x4,,0x7
L_321452:
	movq $0x11A3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x28,%r12
	movq 0x98(%rbp),%r14
	movq %r14,0x0(%r15)
	movl 0xC(%rbp),%r14d
	movl %r14d,0x8(%r15)
	movl 0x90(%rbp),%r14d
	movl %r14d,0xC(%r15)
	movl 0x94(%rbp),%r14d
	movl %r14d,0x10(%r15)
	movl 0xA0(%rbp),%r14d
	movl %r14d,0x14(%r15)
	movl 0xA4(%rbp),%r14d
	movl %r14d,0x18(%r15)
	movl $0x0,0x1C(%r15)
	cmpq $0x1,0xA8(%rbp)
	jne L_510349
L_321551:
	movq $0x11A5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movzwl 0xA(%rbp),%r15d
	movl %r15d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x2561,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r14,0x0(%r15)
	movq 0x88(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x20(%rbp),%r13
	cmpq $0x1,%r13
	je L_510300
L_321552:
	movq %r15,0x88(%rbp)
	movw 0x0(%r13),%r15w
	movq 0x8(%r13),%r13
	movq %r13,0x20(%rbp)
	movw %r15w,0xA(%rbp)
	jmp L_321445
.p2align 0x4
L_510300:
L_321553:
	movq %r14,0x30(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq $0x1,0x68(%rbp)
.p2align 0x4,,0x7
L_321554:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_510348
.p2align 0x4,,0x7
L_321555:
	movq 0x68(%rbp),%r15
	cmpq $0x1,%r15
	je L_510347
L_321556:
	movq 0x0(%r15),%r14
	movq %r14,0x80(%rbp)
	movq $0x1,0x88(%rbp)
	movq %r15,0x90(%rbp)
	movq 0x8(%r15),%r15
	movq %r15,0x68(%rbp)
L_321557:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_510346
.p2align 0x4,,0x7
L_321558:
	movq 0x30(%rbp),%r13
	movq 0x8(%r13),%r11
	movl 0x8(%r11),%r10d
	movl 0xC(%r11),%r9d
	movl 0x10(%r11),%r8d
	movq 0x0(%r11),%r14
	movl 0x14(%r11),%esp
	movl 0x18(%r11),%ebx
	movq 0x80(%rbp),%r13
	movq 0x8(%r13),%r11
	movl 0x8(%r11),%esi
	movl 0xC(%r11),%edi
	movl 0x10(%r11),%edx
	movq 0x0(%r11),%r15
	movl 0x14(%r11),%eax
	movl 0x18(%r11),%ecx
	testl %ebx,%ebx
	jnz L_510345
L_321870:
	cmpl $0x1,%ecx
	je L_321856
	movl %eax,(localWord32+0x20)(%rip)
	movl %edx,(localWord32+0x1C)(%rip)
	movl %edi,(localWord32+0x18)(%rip)
	movl %esi,(localWord32+0x14)(%rip)
	movl %r10d,(localWord32+0x0)(%rip)
	movl %r9d,(localWord32+0x4)(%rip)
	movl %r8d,(localWord32+0x8)(%rip)
	movl %esp,(localWord32+0xC)(%rip)
L_321559:
	cmpl %ebx,%ecx
	jne L_321561
L_321836:
	movl (localWord32+0xC)(%rip),%ebx
	testl %ebx,%ebx
	jnz L_510342
L_321868:
	movl (localWord32+0x20)(%rip),%ecx
	cmpl $0x1,%ecx
	je L_321856
L_321837:
	cmpl %ecx,%ebx
	jne L_321561
L_321839:
	movq %r14,%r13
	andq $0x1,%r13
	jnz L_510337
L_321840:
	movq %r15,%r13
	andq $0x1,%r13
	cmpq $0x1,%r13
	je L_321856
	movl (localWord32+0x1C)(%rip),%ecx
	movl (localWord32+0x8)(%rip),%ebx
L_321841:
	cmpq %r14,%r15
	je L_321847
L_321842:
	movq %r14,%r13
	andq $0x1,%r13
	cmpq $0x1,%r13
	jne L_321561
L_321843:
	shrq $0x1,%r14
	movl %r14d,%r13d
	movq %r15,%r14
	andq $0x1,%r14
	cmpq $0x1,%r14
	jne L_321561
L_321844:
	shrq $0x1,%r15
	movl %r15d,%r14d
	cmpl %r13d,%r14d
	jne L_321561
L_321847:
	cmpl %ecx,%ebx
	jl L_321856
L_321848:
	cmpl %ecx,%ebx
	jne L_321561
L_321850:
	movl (localWord32+0x4)(%rip),%ebx
	cmpl $0x1,%ebx
	jne L_510329
L_321859:
	movl (localWord32+0x18)(%rip),%ecx
	testl %ecx,%ecx
	jz L_321856
L_321851:
	cmpl %ebx,%ecx
	jne L_321561
L_321853:
	movl (localWord32+0x14)(%rip),%r15d
	cmpl %r15d,(localWord32+0x0)(%rip)
	jl L_510325
L_321561:
	movq $0x2561,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x80(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x88(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x68(%rbp),%r14
	cmpq $0x1,%r14
	je L_510301
L_321562:
	movq %r15,0x88(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x80(%rbp)
	movq %r14,0x90(%rbp)
	movq 0x8(%r14),%r14
	movq %r14,0x68(%rbp)
	jmp L_321557
.p2align 0x4
L_510301:
L_321564:
	movq $0x2561,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	cmpq $0x1,%r15
	je L_510324
L_321565:
	movq %r14,0x80(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x68(%rbp)
L_321566:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_510323
.p2align 0x4,,0x7
L_321567:
	movq $0x2561,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x80(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_510302
L_321568:
	movq %r15,0x80(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	movq %r15,0x68(%rbp)
	jmp L_321566
.p2align 0x4
L_510302:
L_321570:
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_510303
L_321571:
	movq %r15,0x68(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x30(%rbp)
	jmp L_321554
.p2align 0x4
L_510303:
L_321572:
	cmpq $0x1,%r15
	je L_510317
L_321573:
	movq 0x8(%r15),%r13
	movq %r13,0x48(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x50(%rbp)
	movq $0x1,0x58(%rbp)
.p2align 0x4,,0x7
L_321574:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_510316
.p2align 0x4,,0x7
L_321575:
	movq 0x50(%rbp),%r15
	movw 0x0(%r15),%r14w
	movq $0x22AD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movzwl %r14w,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x58(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x48(%rbp),%r13
	cmpq $0x1,%r13
	je L_510304
L_321576:
	movq %r15,0x58(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x48(%rbp)
	movq %r15,0x50(%rbp)
	jmp L_321574
.p2align 0x4
L_510304:
L_321577:
	movw %r14w,0x48(%rbp)
	movq 0x58(%rbp),%r15
.p2align 0x4,,0x7
L_321578:
	cmpq $0x1,%r15
	je L_510305
L_321579:
	movw 0x0(%r15),%r14w
	movq 0x8(%r15),%r15
	movw %r14w,0x48(%rbp)
	jmp L_321578
.p2align 0x4
L_510305:
L_321580:
	movw 0x48(%rbp),%r15w
	movb %r15b,0x4A(%rbp)
	movq 0x78(%rbp),%r15
	cmpq $0x1,%r15
	je L_321599
L_321581:
	movq 0x8(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x58(%rbp)
	movq $0x1,0x60(%rbp)
.p2align 0x4,,0x7
L_321582:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_510314
.p2align 0x4,,0x7
L_321583:
	movq 0x58(%rbp),%r15
	movw 0x10(%r15),%r14w
	movb %r14b,%r13b
	cmpb 0x4A(%rbp),%r13b
	je L_510312
L_321584:
	movq 0x50(%rbp),%r15
	cmpq $0x1,%r15
	je L_510306
L_321585:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x50(%rbp)
	movq %r14,0x58(%rbp)
	jmp L_321582
.p2align 0x4
L_510306:
L_321586:
	movq 0x60(%rbp),%r14
	cmpq $0x1,%r14
	je L_510311
L_321587:
	movq 0x8(%r14),%r15
	movq %r15,0x50(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x58(%rbp)
	movq $0x1,0x60(%rbp)
.p2align 0x4,,0x7
L_321588:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_510310
.p2align 0x4,,0x7
L_321589:
	movq 0x58(%rbp),%r15
	movw 0x10(%r15),%r14w
	movb %r14b,%r13b
	cmpb %r13b,0x4A(%rbp)
	je L_510308
L_321590:
	movq 0x50(%rbp),%r15
	cmpq $0x1,%r15
	je L_510307
L_321591:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x50(%rbp)
	movq %r14,0x58(%rbp)
	jmp L_321588
.p2align 0x4
L_510307:
L_321592:
	movw 0x48(%rbp),%r14w
	movw %r14w,0x0(%rbp)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_510308:
L_321593:
	movq $0x2367,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x50(%rbp),%r14
	cmpq $0x1,%r14
	je L_510309
L_321594:
	movq %r15,0x60(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x50(%rbp)
	movq %r15,0x58(%rbp)
	jmp L_321588
.p2align 0x4
L_510309:
L_321595:
	movq %r15,0x8(%rbp)
	movw 0x48(%rbp),%r15w
	movw %r15w,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_510310:
L_321596:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_321597+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_321597
.p2align 0x4
.long 0xEF5
L_321597:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_321589
.p2align 0x4
L_510311:
L_321599:
	movw 0x48(%rbp),%r15w
	movw %r15w,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_510312:
L_321600:
	movq $0x2367,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x50(%rbp),%r14
	cmpq $0x1,%r14
	je L_510313
L_321601:
	movq %r15,0x60(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x50(%rbp)
	movq %r15,0x58(%rbp)
	jmp L_321582
.p2align 0x4
L_510313:
L_321602:
	movq 0x60(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq $0x1,0x60(%rbp)
	jmp L_321588
.p2align 0x4
L_510314:
L_321603:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_321604+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_321604
.p2align 0x4
.long 0xEF5
L_321604:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_321583
.p2align 0x4
L_510316:
L_321606:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_321607+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_321607
.p2align 0x4
.long 0x4EC2
L_321607:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	jmp L_321575
.p2align 0x4
L_510317:
L_321609:
	movb 0x8(%rbp),%r15b
	cmpb $0x1,%r15b
	je L_510322
	cmpb $0x2,%r15b
	je L_510321
	cmpb $0x3,%r15b
	je L_510320
	cmpb $0x4,%r15b
	je L_510319
	cmpb $0x5,%r15b
	je L_510318
L_321610:
	movq (globalObjptr+0xE7B0)(%rip),%r15
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (toString_426+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_510318:
L_321832:
	movq (globalObjptr+0xE808)(%rip),%r15
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (toString_426+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_510319:
L_321831:
	movq (globalObjptr+0xE800)(%rip),%r14
	movq %r14,0x80(%rbp)
	addq $0x80,%rbp
	leaq (toString_426+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_510320:
L_321830:
	movq (globalObjptr+0xE7F8)(%rip),%r14
	movq %r14,0x80(%rbp)
	addq $0x80,%rbp
	leaq (toString_426+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_510321:
L_321829:
	movq (globalObjptr+0xE7F0)(%rip),%r14
	movq %r14,0x80(%rbp)
	addq $0x80,%rbp
	leaq (toString_426+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_510322:
L_321828:
	movq (globalObjptr+0xE7E8)(%rip),%r14
	movq %r14,0x80(%rbp)
	addq $0x80,%rbp
	leaq (toString_426+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_510323:
L_321833:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_321834+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_321834
.p2align 0x4
.long 0x4ED6
L_321834:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	jmp L_321567
.p2align 0x4
L_510324:
L_321835:
	movq %r14,%r15
	jmp L_321570
.p2align 0x4
L_510325:
L_321856:
	movq $0x2561,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x90(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x88(%rbp),%r14
	cmpq $0x1,%r14
	je L_321570
L_321857:
	movq %r15,0x80(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x68(%rbp)
	jmp L_321566
.p2align 0x4
L_510329:
	movl (localWord32+0x18)(%rip),%ecx
	jmp L_321851
.p2align 0x4
L_510337:
L_321864:
	movq %r14,%r13
	shrq $0x1,%r13
	movl %r13d,%r11d
	movq %r15,%r13
	andq $0x1,%r13
	cmpq $0x1,%r13
	jne L_510339
L_321865:
	movq %r15,%r13
	shrq $0x1,%r13
	movl %r13d,%r10d
	cmpl %r11d,%r10d
	jl L_321856
	movl (localWord32+0x1C)(%rip),%ecx
	movl (localWord32+0x8)(%rip),%ebx
	jmp L_321841
.p2align 0x4
L_510339:
	movl (localWord32+0x1C)(%rip),%ecx
	movl (localWord32+0x8)(%rip),%ebx
	jmp L_321841
.p2align 0x4
L_510342:
	movl (localWord32+0x20)(%rip),%ecx
	jmp L_321837
.p2align 0x4
L_510345:
	movl %esp,(localWord32+0xC)(%rip)
	movl %r8d,(localWord32+0x8)(%rip)
	movl %r9d,(localWord32+0x4)(%rip)
	movl %r10d,(localWord32+0x0)(%rip)
	movl %esi,(localWord32+0x14)(%rip)
	movl %edi,(localWord32+0x18)(%rip)
	movl %edx,(localWord32+0x1C)(%rip)
	movl %eax,(localWord32+0x20)(%rip)
	jmp L_321559
.p2align 0x4
L_510346:
L_321872:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_321873+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_321873
.p2align 0x4
.long 0x4ED7
L_321873:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	jmp L_321558
.p2align 0x4
L_510347:
L_321874:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_321564
.p2align 0x4
L_510348:
L_321875:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_321876+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_321876
.p2align 0x4
.long 0x4ED8
L_321876:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	jmp L_321555
.p2align 0x4
L_510349:
L_321453:
	movq 0xA8(%rbp),%r9
	movq 0x8(%r9),%r14
	movq 0x0(%r9),%r8
	movl 0x8(%r8),%ebx
	movl 0xC(%r8),%esp
	movq 0x18(%r8),%r13
	movq 0x0(%r8),%r10
	movw 0x10(%r8),%si
	movb %sil,%dl
	shrw $0x8,%si
	movb %sil,%cl
	movw 0xA(%rbp),%r15w
	shrw $0x8,%r15w
	movb %r15b,%r9b
	cmpb 0x9(%rbp),%dl
	jne L_510392
L_321455:
	testb %cl,%cl
	jnz L_510391
L_321456:
	testb %r9b,%r9b
	jz L_510389
L_321547:
	movq 0x30(%rbp),%r9
	cmpq $0x1,%r9
	je L_510388
L_321548:
	movq 0x8(%r9),%r11
	movw 0x0(%r9),%r15w
	movl %esp,(localWord32+0x4)(%rip)
.p2align 0x4,,0x7
L_321460:
	movw %r15w,%r9w
	shrw $0x8,%r9w
	movb %r9b,%r8b
	cmpb %r8b,%cl
	jne L_510386
L_321538:
	movb %r15b,%r9b
	cmpb %r9b,%dl
	je L_510383
L_321539:
	cmpq $0x1,%r11
	je L_510350
L_321540:
	movw 0x0(%r11),%r15w
	movq 0x8(%r11),%r11
	jmp L_321460
.p2align 0x4
L_510350:
	movq %r10,%r15
	movl (localWord32+0x4)(%rip),%ecx
L_321464:
	andq $0x7,%r15
	cmpq $0x1,%r15
	je L_510381
	cmpq $0x3,%r15
	je L_510379
L_321465:
	xorl %r15d,%r15d
	xchgl %r15d,%ecx
	movl %r15d,(localWord32+0x4)(%rip)
L_321466:
	movq 0x68(%rbp),%r10
	cmpq $0x1,%r10
	je L_510378
L_321467:
	movq 0x8(%r10),%r11
	movq 0x0(%r10),%r15
	movl $0x1,%r10d
	xorl %r9d,%r9d
	xchgl %r10d,%ecx
	xchgl %r9d,%ebx
	movl %r10d,(localWord32+0x8)(%rip)
	movl %r9d,(localWord32+0x0)(%rip)
.p2align 0x4,,0x7
L_321468:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r10
	shrq $0x1,%r10
	cmpq $0x11AE,%r10
	jne L_321469
L_321520:
	movq 0x8(%r15),%r10
	movq 0x10(%r10),%r9
	cmpq %r9,0x10(%r13)
	sete %al
	movzbl %al,%eax
	movb 0x0(%r15),%r10b
	cmpb $0x1,%r10b
	je L_510376
	cmpb $0x2,%r10b
	je L_510375
	cmpb $0x6,%r10b
	je L_510372
L_321469:
	incl %ebx
	jo L_321470
L_321471:
	cmpq $0x1,%r11
	je L_510351
L_321472:
	movq 0x0(%r11),%r15
	movq 0x8(%r11),%r11
	jmp L_321468
.p2align 0x4
L_510351:
	movl %ecx,%ebx
	movl (localWord32+0x8)(%rip),%ecx
L_321474:
	movq 0x80(%rbp),%r10
	cmpq $0x1,%r10
	je L_510370
L_321475:
	movq 0x8(%r10),%r9
	movq 0x0(%r10),%r15
	xorq %r11,%r11
	xorl %r10d,%r10d
	xchgq %r9,%r14
	xchgl %r10d,%ecx
	movq %r9,(localObjptr+0x0)(%rip)
	movl %r10d,(localWord32+0x8)(%rip)
.p2align 0x4,,0x7
L_321476:
	movq 0x8(%r15),%r9
	cmpq $0x1,%r9
	je L_510369
L_321477:
	movq 0x8(%r9),%r10
	movq 0x0(%r9),%r9
	xorl %r8d,%r8d
	movq %r9,%r15
	xchgl %r8d,%ebx
	movl %r8d,(localWord32+0xC)(%rip)
.p2align 0x4,,0x7
L_321478:
	movq 0x10(%r15),%r9
	cmpq %r9,0x10(%r13)
	je L_510366
L_321479:
	cmpq $0x1,%r10
	je L_510352
L_321480:
	movq 0x0(%r10),%r15
	movq 0x8(%r10),%r10
	jmp L_321478
.p2align 0x4
L_510352:
	movq %r13,(localObjptr+0x10)(%rip)
L_321482:
	addl %ebx,%ecx
	jo L_321470
L_321483:
	cmpq $0x1,%r14
	je L_510353
L_321484:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq (localObjptr+0x10)(%rip),%r13
	movl (localWord32+0xC)(%rip),%ebx
	jmp L_321476
.p2align 0x4
L_510353:
L_321485:
	movq %r11,%r15
	movq (localObjptr+0x0)(%rip),%r14
	movl (localWord32+0xC)(%rip),%ebx
L_321486:
	movl 0xA4(%rbp),%r13d
	testl %r13d,%r13d
	jnz L_510363
L_321487:
	movl 0xA0(%rbp),%r13d
	testl %r13d,%r13d
	jnz L_510361
	movl (localWord32+0x8)(%rip),%r13d
	xchgl %r13d,%ebx
	movl %r13d,(localWord32+0xC)(%rip)
L_321489:
	movq 0x98(%rbp),%r13
	movq %r13,%r11
	andq $0x1,%r11
	jz L_510359
L_321500:
	shrq $0x1,%r13
	movl %r13d,%r11d
	movl (localWord32+0xC)(%rip),%r13d
	movl %r11d,(localWord32+0x8)(%rip)
	xchgl %r13d,%ecx
	movl %r13d,(localWord32+0x10)(%rip)
L_321501:
	movq %r15,%r13
	andq $0x1,%r13
	jz L_510358
L_321503:
	shrq $0x1,%r15
	movl %r15d,%r13d
	movl (localWord32+0x8)(%rip),%r15d
	cmpl %r13d,%r15d
	jl L_510357
L_321504:
	xchgl %r13d,%ebx
	movl %r13d,(localWord32+0xC)(%rip)
L_321505:
	movl %ebx,%r15d
	movl (localWord32+0xC)(%rip),%r13d
	movl %r13d,(localWord32+0x8)(%rip)
	shlq $0x1,%r15
	orq $0x1,%r15
	movl %ecx,%ebx
	movl (localWord32+0x10)(%rip),%ecx
L_321493:
	addl 0x94(%rbp),%ecx
	jo L_321470
L_321494:
	movl 0x90(%rbp),%r13d
	testl %r13d,%r13d
	jnz L_510355
L_321495:
	xorl %r13d,%r13d
	xchgl %r13d,%ebx
	movl %r13d,(localWord32+0xC)(%rip)
L_321496:
	movl (localWord32+0x0)(%rip),%r13d
	addl 0xC(%rbp),%r13d
	jo L_510354
L_321497:
	movl %r13d,0xC(%rbp)
	movl %ebx,0x90(%rbp)
	movl %ecx,0x94(%rbp)
	movq %r15,0x98(%rbp)
	movl (localWord32+0xC)(%rip),%r15d
	movl %r15d,0xA0(%rbp)
	movl (localWord32+0x8)(%rip),%r15d
	movl %r15d,0xA4(%rbp)
	movq %r14,0xA8(%rbp)
	jmp loop_3598
.p2align 0x4
L_510354:
L_321470:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_510355:
	movl (localWord32+0x4)(%rip),%r13d
	xchgl %r13d,%ebx
	movl %r13d,(localWord32+0xC)(%rip)
	jmp L_321496
.p2align 0x4
L_510357:
	xchgl %r15d,%ebx
	movl %r15d,(localWord32+0xC)(%rip)
	jmp L_321505
.p2align 0x4
L_510358:
L_321502:
	movl %ebx,(localWord32+0x8)(%rip)
	movq 0x98(%rbp),%r15
	movl %ecx,%ebx
	movl (localWord32+0x10)(%rip),%ecx
	jmp L_321493
.p2align 0x4
L_510359:
	movl (localWord32+0xC)(%rip),%r11d
	xchgl %r11d,%ebx
	movl %r11d,(localWord32+0x8)(%rip)
L_321491:
	movq %r15,%r13
	andq $0x1,%r13
	jnz L_321493
L_321499:
	movq 0x98(%rbp),%r15
	jmp L_321493
.p2align 0x4
L_510361:
	movl (localWord32+0x8)(%rip),%ebx
L_321508:
	movq 0x98(%rbp),%r13
	andq $0x1,%r13
	jnz L_510362
L_321509:
	movl $0x1,%r13d
	xchgl %r13d,%ebx
	movl %r13d,(localWord32+0x8)(%rip)
	jmp L_321491
.p2align 0x4
L_510362:
L_321510:
	movq 0x98(%rbp),%r13
	shrq $0x1,%r13
	movl %r13d,%r11d
	movl %r11d,(localWord32+0x8)(%rip)
	movl $0x1,%r13d
	xchgl %r13d,%ecx
	movl %r13d,(localWord32+0x10)(%rip)
	jmp L_321501
.p2align 0x4
L_510363:
L_321511:
	movl 0xA0(%rbp),%r13d
	testl %r13d,%r13d
	jnz L_510364
L_321512:
	movl $0x1,%r13d
	xchgl %r13d,%ebx
	movl %r13d,(localWord32+0xC)(%rip)
	jmp L_321489
.p2align 0x4
L_510364:
L_321513:
	movl $0x1,%ebx
	jmp L_321508
.p2align 0x4
L_510366:
L_321514:
	incl %ebx
	jo L_321470
L_321515:
	cmpq $0x1,%r10
	je L_510367
L_321516:
	movq 0x0(%r10),%r15
	movq 0x8(%r10),%r10
	jmp L_321478
.p2align 0x4
L_510367:
L_321517:
	movq %r13,(localObjptr+0x10)(%rip)
	jmp L_321482
.p2align 0x4
L_510369:
L_321518:
	xorl %r15d,%r15d
	xchgl %r15d,%ebx
	movq %r13,(localObjptr+0x10)(%rip)
	movl %r15d,(localWord32+0xC)(%rip)
	jmp L_321482
.p2align 0x4
L_510370:
L_321519:
	xorq %r15,%r15
	xorl %r13d,%r13d
	xchgl %r13d,%ecx
	movl %r13d,(localWord32+0x8)(%rip)
	jmp L_321486
.p2align 0x4
L_510372:
	xchgl %eax,%ecx
	movl %eax,(localWord32+0xC)(%rip)
L_321522:
	testl %ecx,%ecx
	jz L_510374
L_321524:
	movl %ebx,%r15d
	shlq $0x1,%r15
	orq $0x1,%r15
	movq 0x80(%rbp),%r10
	cmpq $0x1,%r10
	je L_510373
L_321525:
	movq 0x8(%r10),%r11
	movq 0x0(%r10),%r9
	xorl %ecx,%ecx
	xchgq %r11,%r14
	xchgq %r15,%r11
	xchgq %r9,%r15
	movl (localWord32+0xC)(%rip),%ebx
	movq %r9,(localObjptr+0x0)(%rip)
	jmp L_321476
.p2align 0x4
L_510373:
L_321526:
	xorl %ecx,%ecx
	movl (localWord32+0xC)(%rip),%ebx
	jmp L_321486
.p2align 0x4
L_510374:
	movl (localWord32+0xC)(%rip),%ecx
	jmp L_321469
.p2align 0x4
L_510375:
	xchgl %eax,%ecx
	movl %eax,(localWord32+0xC)(%rip)
	jmp L_321522
.p2align 0x4
L_510376:
	xchgl %eax,%ecx
	movl %eax,(localWord32+0xC)(%rip)
	jmp L_321522
.p2align 0x4
L_510378:
L_321529:
	movl $0x1,%r15d
	xchgl %r15d,%ebx
	movl %r15d,(localWord32+0x0)(%rip)
	jmp L_321474
.p2align 0x4
L_510379:
L_321534:
	xorl %r15d,%r15d
	xchgl %r15d,%ecx
	movl %r15d,(localWord32+0x4)(%rip)
L_321535:
	movq 0x68(%rbp),%r10
	cmpq $0x1,%r10
	je L_510380
L_321536:
	movq 0x8(%r10),%r11
	movq 0x0(%r10),%r15
	xorl %r10d,%r10d
	xorl %r9d,%r9d
	xchgl %r10d,%ecx
	xchgl %r9d,%ebx
	movl %r10d,(localWord32+0x8)(%rip)
	movl %r9d,(localWord32+0x0)(%rip)
	jmp L_321468
.p2align 0x4
L_510380:
L_321537:
	xorl %r15d,%r15d
	xchgl %r15d,%ebx
	movl %r15d,(localWord32+0x0)(%rip)
	jmp L_321474
.p2align 0x4
L_510381:
L_321530:
	xorl %r15d,%r15d
	xchgl %r15d,%ecx
	movl %r15d,(localWord32+0x4)(%rip)
L_321531:
	movq 0x68(%rbp),%r10
	cmpq $0x1,%r10
	je L_510382
L_321532:
	movq 0x8(%r10),%r11
	movq 0x0(%r10),%r15
	xorl %r10d,%r10d
	xorl %r9d,%r9d
	xchgl %r10d,%ecx
	xchgl %r9d,%ebx
	movl %r10d,(localWord32+0x8)(%rip)
	movl %r9d,(localWord32+0x0)(%rip)
	jmp L_321468
.p2align 0x4
L_510382:
L_321533:
	xorl %r15d,%r15d
	xchgl %r15d,%ebx
	movl %r15d,(localWord32+0x0)(%rip)
	jmp L_321474
.p2align 0x4
L_510383:
L_321542:
	andq $0x7,%r10
	cmpq $0x1,%r10
	je L_510385
	cmpq $0x3,%r10
	je L_510384
L_321543:
	movl $0x1,%ecx
	jmp L_321466
.p2align 0x4
L_510384:
L_321545:
	movl $0x1,%ecx
	jmp L_321535
.p2align 0x4
L_510385:
L_321544:
	movl $0x1,%ecx
	jmp L_321531
.p2align 0x4
L_510386:
L_321461:
	cmpq $0x1,%r11
	je L_510387
L_321462:
	movw 0x0(%r11),%r15w
	movq 0x8(%r11),%r11
	jmp L_321460
.p2align 0x4
L_510387:
	movq %r10,%r15
	movl (localWord32+0x4)(%rip),%ecx
	jmp L_321464
.p2align 0x4
L_510388:
	movq %r10,%r15
	movl %esp,%ecx
	jmp L_321464
.p2align 0x4
L_510389:
	movq %r10,%r15
	movl %esp,(localWord32+0x4)(%rip)
L_321458:
	movq 0x30(%rbp),%r9
	cmpq $0x1,%r9
	je L_510390
L_321459:
	movq 0x8(%r9),%r11
	movw 0x0(%r9),%r8w
	movq %r15,%r10
	movw %r8w,%r15w
	jmp L_321460
.p2align 0x4
L_510390:
	movl (localWord32+0x4)(%rip),%ecx
	jmp L_321464
.p2align 0x4
L_510391:
	movq %r10,%r15
	movl %esp,(localWord32+0x4)(%rip)
	jmp L_321458
.p2align 0x4
L_510392:
L_321454:
	movq %r14,0xA8(%rbp)
	jmp loop_3598
.p2align 0x4
L_510393:
L_321877:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_321878+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_321878
.p2align 0x4
.long 0x4ED9
L_321878:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	jmp L_321452
.p2align 0x4
L_510394:
L_321879:
	movq $0x2367,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x98(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xA0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x90(%rbp),%r14
	cmpq $0x1,%r14
	je L_510395
L_321880:
	movq %r15,0xA0(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x90(%rbp)
	movq %r15,0x98(%rbp)
	jmp L_321447
.p2align 0x4
L_510395:
L_321881:
	movq %r15,0xA8(%rbp)
	movl $0x0,0xC(%rbp)
	movl $0x1,0x90(%rbp)
	movl $0x0,0x94(%rbp)
	movq $0x0,0x98(%rbp)
	movl $0x0,0xA0(%rbp)
	movl $0x0,0xA4(%rbp)
	jmp loop_3598
.p2align 0x4
L_510396:
L_321882:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_321883+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_321883
.p2align 0x4
.long 0x4EDA
L_321883:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	jmp L_321448
.p2align 0x4
L_510397:
L_321884:
	movl $0x0,0xC(%rbp)
	movl $0x1,0x90(%rbp)
	movl $0x0,0x94(%rbp)
	movq $0x0,0x98(%rbp)
	movl $0x0,0xA0(%rbp)
	movl $0x0,0xA4(%rbp)
	movq $0x1,0xA8(%rbp)
	jmp loop_3598
.p2align 0x4
L_510399:
L_321886:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_321887+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_321887
.p2align 0x4
.long 0x4ED7
L_321887:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	jmp L_321440
.p2align 0x4
L_510400:
L_321888:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_321889+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_321889
.p2align 0x4
.long 0x4ED7
L_321889:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	jmp L_321436
.p2align 0x4
L_510401:
L_321890:
	movq $0x1,0x80(%rbp)
	jmp L_321443
.p2align 0x4
L_510402:
L_321891:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_321892+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_321892
.p2align 0x4
.long 0x4ED6
L_321892:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	jmp L_321427
.p2align 0x4
L_510403:
L_321893:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_321894+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_321894
.p2align 0x4
.long 0x4EDB
L_321894:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	jmp L_321423
.p2align 0x4
L_510404:
L_321895:
	movq 0x78(%rbp),%r15
	jmp L_321430
.p2align 0x4
L_510405:
L_321896:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_321897+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_321897
.p2align 0x4
.long 0x4ED6
L_321897:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	jmp L_321417
.p2align 0x4
L_510406:
L_321899:
	movq 0x0(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x88,%rbp
	leaq (L_321900+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp supportedXmmRegistersP_0
.p2align 0x4
L_510408:
L_321901:
	movq $0x1,0x30(%rbp)
	jmp L_321433
.p2align 0x4
L_510409:
L_321902:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_321903+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_321903
.p2align 0x4
.long 0x4ED8
L_321903:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	jmp L_321408
.p2align 0x4
L_510410:
L_321904:
	testb %r10b,%r10b
	jnz L_321907
L_321905:
	testb %r9b,%r9b
	jz L_510412
L_321910:
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je L_510411
L_321911:
	movw 0x0(%r15),%r14w
	movq 0x8(%r15),%r15
	movq %r15,0x20(%rbp)
	movw %r14w,0xA(%rbp)
	jmp L_321400
.p2align 0x4
L_510411:
L_321912:
	movq 0x78(%rbp),%r15
	movq %r15,0x20(%rbp)
	jmp L_321411
.p2align 0x4
L_510412:
L_321907:
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je L_510413
L_321908:
	movw 0x0(%r15),%r14w
	movq 0x8(%r15),%r15
	movq %r15,0x20(%rbp)
	movw %r14w,0xA(%rbp)
	jmp L_321400
.p2align 0x4
L_510413:
L_321909:
	movq 0x78(%rbp),%r15
	movq %r15,0x20(%rbp)
	jmp L_321411
.p2align 0x4
L_510416:
L_321915:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_321916+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_321916
.p2align 0x4
.long 0x4ED8
L_321916:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	jmp L_321401
.p2align 0x4
L_510417:
L_321917:
	movq $0x1,0x20(%rbp)
	jmp L_321411
.p2align 0x4
L_510418:
L_321925:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_321926+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_321926
.p2align 0x4
.long 0x4ED8
L_321926:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	jmp L_321395
.p2align 0x4
L_510419:
L_321927:
	movq 0x30(%rbp),%r15
	cmpq $0x1,%r15
	je L_510420
L_321928:
	movw 0x0(%r15),%r14w
	movq 0x8(%r15),%r15
	movq %r15,0x30(%rbp)
	movw %r14w,0xA(%rbp)
	jmp L_321387
.p2align 0x4
L_510420:
L_321929:
	movq 0x78(%rbp),%r15
	movq %r15,0x30(%rbp)
	jmp L_321398
.p2align 0x4
L_510421:
L_321391:
	cmpq $0x1,%r14
	je L_510422
L_321392:
	movw 0x0(%r14),%r15w
	movq 0x8(%r14),%r14
	jmp L_321390
.p2align 0x4
L_510422:
L_321393:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_321395
L_321918:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_321919+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_321919
.p2align 0x4
.long 0x4ED8
L_321919:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	jmp L_321395
.p2align 0x4
L_510425:
L_321931:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_321932+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_321932
.p2align 0x4
.long 0x4ED8
L_321932:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	jmp L_321388
.p2align 0x4
L_510426:
L_321933:
	movq %r15,0x30(%rbp)
	jmp L_321398
.p2align 0x4
L_510427:
L_321941:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_321942+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_321942
.p2align 0x4
.long 0x4ED6
L_321942:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	jmp L_321382
.p2align 0x4
L_510428:
L_321943:
	movq 0x78(%rbp),%r15
	cmpq $0x1,%r15
	je L_510429
L_321944:
	movw 0x0(%r15),%r14w
	movq 0x8(%r15),%r15
	movq %r15,0x78(%rbp)
	movw %r14w,0xA(%rbp)
	jmp L_321374
.p2align 0x4
L_510429:
L_321945:
	movq 0x80(%rbp),%r14
	xchgq %r14,%r15
	jmp L_321385
.p2align 0x4
L_510430:
L_321378:
	cmpq $0x1,%r14
	je L_510431
L_321379:
	movw 0x0(%r14),%r15w
	movq 0x8(%r14),%r14
	jmp L_321377
.p2align 0x4
L_510431:
L_321380:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_321382
L_321934:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_321935+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_321935
.p2align 0x4
.long 0x4ED6
L_321935:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	jmp L_321382
.p2align 0x4
L_510434:
L_321947:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_321948+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_321948
.p2align 0x4
.long 0x4ED6
L_321948:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	jmp L_321375
.p2align 0x4
L_510435:
L_321949:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_321385
.p2align 0x4
L_510436:
L_321950:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_321951+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_321951
.p2align 0x4
.long 0x4ED6
L_321951:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	jmp L_321366
.p2align 0x4
L_510437:
L_321952:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_321953+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_321953
.p2align 0x4
.long 0x4EDB
L_321953:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	jmp L_321362
.p2align 0x4
L_510438:
L_321954:
	movq 0x78(%rbp),%r15
	jmp L_321369
.p2align 0x4
L_510439:
L_321955:
	movq $0x1,0x30(%rbp)
	jmp L_321372
.p2align 0x4
L_510440:
L_321966:
	movq (globalObjptr+0x6A40)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_510441:
L_321353:
	movq $0x1,%r15
	jmp L_321354
.p2align 0x4
L_510442:
L_321969:
	movq $0x2367,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x90(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x98(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_510443
L_321970:
	movq %r15,0x98(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	movq %r15,0x90(%rbp)
	jmp L_321959
.p2align 0x4
L_510443:
L_321971:
	movq 0x98(%rbp),%r15
	movq 0x90(%rbp),%r13
	xchgq %r13,%r14
	jmp L_321965
.p2align 0x4
L_510444:
L_321972:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_321973+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_321973
.p2align 0x4
.long 0x4EDD
L_321973:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	jmp L_321960
.p2align 0x4
L_510445:
L_321974:
	movq $0x1,%r15
	jmp L_321354
.p2align 0x4
L_510448:
L_321975:
	shrq $0x2,%r15
	movw %r15w,%r14w
	movq $0x22AD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movzwl %r14w,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x1,0x8(%r15)
	jmp L_321354
.p2align 0x4
L_510449:
L_321976:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_321977+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_321977
.p2align 0x4
.long 0x4ED6
L_321977:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	jmp L_321351
.p2align 0x4
L_510450:
L_321978:
	movq %r15,0x20(%rbp)
	movq $0x1,%r15
	jmp L_321357
.p2align 0x4
L_510451:
L_321983:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_510453
.p2align 0x4,,0x7
L_321984:
	movq $0x22AD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movzwl 0xA(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_321348
L_321985:
	movq %r15,0x30(%rbp)
	movw 0x0(%r14),%r15w
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	movw %r15w,0xA(%rbp)
	jmp L_321338
.p2align 0x4
L_510453:
L_321987:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_321988+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_321988
.p2align 0x4
.long 0x4EDE
L_321988:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	jmp L_321984
.p2align 0x4
L_510454:
L_321342:
	cmpq $0x1,%r14
	je L_321345
L_321343:
	movw 0x0(%r14),%r15w
	movq 0x8(%r14),%r14
	jmp L_321341
.p2align 0x4
L_510456:
L_321339:
	movq (c_stackP+0x0)(%rip),%rsp
	movq (globalObjptr+0xC9C8)(%rip),%rdi
	xorq %rax,%rax
	call MLton_bug
.p2align 0x4
L_510457:
L_321992:
	movq $0x1,%r15
	jmp L_321348
.p2align 0x4
L_510458:
L_321335:
	cmpq $0x1,%r15
	je L_510459
L_321336:
	movq 0x8(%r15),%r13
	movq %r13,0x20(%rbp)
	movw 0x0(%r15),%r13w
	movw %r13w,0xA(%rbp)
	movq $0x1,0x30(%rbp)
	jmp L_321338
.p2align 0x4
L_510459:
L_321989:
	movq $0x1,%r15
	jmp L_321348
.p2align 0x4
L_510460:
L_321993:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movb 0x8(%rbp),%r14b
	cmpb $0x0,%r14b
	je L_510463
	cmpb $0x1,%r14b
	je L_510461
	jmp L_321334
.p2align 0x4
L_510461:
L_321997:
	movq 0x10(%rbp),%r15
	cmpq $0x1,%r15
	je L_510462
L_321998:
	movq %r13,0x78(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq $0x1,0x80(%rbp)
	jmp L_321350
.p2align 0x4
L_510462:
L_321999:
	movq %r13,0x20(%rbp)
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_321357
.p2align 0x4
L_510463:
L_321994:
	movq 0x10(%rbp),%r13
	cmpq $0x1,%r13
	je L_510464
L_321995:
	movq %r15,0x78(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x20(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x30(%rbp)
	movq $0x1,0x80(%rbp)
	jmp L_321350
.p2align 0x4
L_510464:
L_321996:
	movq %r15,0x20(%rbp)
	movq $0x1,%r15
	jmp L_321357
.p2align 0x4
.long 0x4EC3
toString_426:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq $0x1,0x80(%rbp)
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (rev_428+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x4EDC
L_321900:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x80(%rbp)
	jmp L_321416
.p2align 0x4
.long 0x4EC3
rev_428:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq $0x1,%r15
	je L_510468
L_321611:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r14,0x20(%rbp)
	movq $0x1,0x30(%rbp)
.p2align 0x4,,0x7
L_321612:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_510467
.p2align 0x4,,0x7
L_321613:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_510466
L_321614:
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_321612
.p2align 0x4
L_510466:
L_321616:
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_321617+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_510467:
L_321825:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_321826+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_321826
.p2align 0x4
.long 0x2528
L_321826:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	jmp L_321613
.p2align 0x4
L_510468:
L_321827:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_321616
.p2align 0x4
.long 0x4EC3
L_321617:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r14
	movq %r14,0x8(%rbp)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_510469
L_321618:
	movq 0x8(%r14),%r13
	movq %r13,0x20(%rbp)
	movq 0x0(%r14),%r15
	movq $0x1,0x30(%rbp)
L_321619:
	movq %r15,0x80(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (toString_427+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_25
.p2align 0x4
L_510469:
L_321824:
	movq $0x1,%r15
L_321636:
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_321637+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x4EC4
toString_427:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq $0x1,0x80(%rbp)
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (rev_429+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x4EC6
L_321637:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq %r15,0x80(%rbp)
	movq (globalObjptr+0xDD28)(%rip),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_321638+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x4EC4
rev_429:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq $0x1,%r15
	je L_510472
L_321620:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x68(%rbp)
	movq %r14,0x78(%rbp)
	movq $0x1,0x80(%rbp)
.p2align 0x4,,0x7
L_321621:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_510471
.p2align 0x4,,0x7
L_321622:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x80(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x68(%rbp),%r14
	cmpq $0x1,%r14
	je L_510470
L_321623:
	movq %r15,0x80(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x68(%rbp)
	movq %r15,0x78(%rbp)
	jmp L_321621
.p2align 0x4
L_510470:
L_321625:
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_321626+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_510471:
L_321821:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_321822+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_321822
.p2align 0x4
.long 0x4ED5
L_321822:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	jmp L_321622
.p2align 0x4
L_510472:
L_321823:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_321625
.p2align 0x4
.long 0x4EC6
L_321638:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0x9F40)(%rip),%r14
	movq %r14,0x80(%rbp)
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_321639+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x4EC4
L_321626:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_321627
L_321819:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_321820+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_321820
.p2align 0x4
.long 0x1FD8
L_321820:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_321627:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_510473
L_321628:
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	jmp L_321619
.p2align 0x4
L_510473:
L_321629:
	movq 0x30(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq $0x1,0x68(%rbp)
.p2align 0x4,,0x7
L_321630:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_510475
.p2align 0x4,,0x7
L_321631:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_510474
L_321632:
	movq %r15,0x68(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x30(%rbp)
	jmp L_321630
.p2align 0x4
L_510474:
L_321633:
	movq 0x68(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq (globalObjptr+0xE1E8)(%rip),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_321634+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3781
.p2align 0x4
L_510475:
L_321817:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_321818+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_321818
.p2align 0x4
.long 0x1FD8
L_321818:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	jmp L_321631
.p2align 0x4
.long 0x4EC6
L_321639:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r14
	movq %r14,0x20(%rbp)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_510477
L_321640:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq $0x1,0x30(%rbp)
L_321641:
	movq %r15,0x80(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (toString_428+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_25
.p2align 0x4
L_510477:
L_321814:
	movq $0x1,%r15
L_321658:
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_321659+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x4EC5
L_321634:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_321635
L_321815:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_321816+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_321816
.p2align 0x4
.long 0x4ED4
L_321816:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_321635:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_321636
.p2align 0x4
.long 0x4EC4
toString_428:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq $0x1,0x80(%rbp)
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (rev_430+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x4EC8
L_321659:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq %r15,0x80(%rbp)
	movq (globalObjptr+0xDD28)(%rip),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_321660+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x4EC4
rev_430:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq $0x1,%r15
	je L_510481
L_321642:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x68(%rbp)
	movq %r14,0x78(%rbp)
	movq $0x1,0x80(%rbp)
.p2align 0x4,,0x7
L_321643:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_510480
.p2align 0x4,,0x7
L_321644:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x80(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x68(%rbp),%r14
	cmpq $0x1,%r14
	je L_510479
L_321645:
	movq %r15,0x80(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x68(%rbp)
	movq %r15,0x78(%rbp)
	jmp L_321643
.p2align 0x4
L_510479:
L_321647:
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_321648+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_510480:
L_321811:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_321812+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_321812
.p2align 0x4
.long 0x4ED5
L_321812:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	jmp L_321644
.p2align 0x4
L_510481:
L_321813:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_321647
.p2align 0x4
.long 0x4EC8
L_321660:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0x9F40)(%rip),%r14
	movq %r14,0x80(%rbp)
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_321661+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x4EC4
L_321648:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_321649
L_321809:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_321810+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_321810
.p2align 0x4
.long 0x1FD8
L_321810:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_321649:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_510482
L_321650:
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	jmp L_321641
.p2align 0x4
L_510482:
L_321651:
	movq 0x30(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq $0x1,0x48(%rbp)
.p2align 0x4,,0x7
L_321652:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_510484
.p2align 0x4,,0x7
L_321653:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_510483
L_321654:
	movq %r15,0x48(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x30(%rbp)
	jmp L_321652
.p2align 0x4
L_510483:
L_321655:
	movq 0x48(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq (globalObjptr+0xE1E8)(%rip),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_321656+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3781
.p2align 0x4
L_510484:
L_321807:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_321808+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_321808
.p2align 0x4
.long 0x4ED4
L_321808:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	jmp L_321653
.p2align 0x4
.long 0x4EC8
L_321661:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r14
	movq %r14,0x10(%rbp)
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_510502
L_321662:
	movw 0x0(%r14),%r15w
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	movq $0x1,0x30(%rbp)
L_321663:
	movb %r15b,%r14b
	movzbq %r14b,%rax
	subq $0x1,%rax
	cmpq $0xE,%rax
	ja L_510486
	leaq jumpTable_828(%rip),%rbx
	jmp *(%rbx,%rax,8)
.data
.p2align 0x4
jumpTable_828:
.quad L_510501,L_510500,L_510499,L_510498,L_510497,L_510496,L_510495,L_510494,L_510493,L_510492,L_510491,L_510490,L_510489,L_510488,L_510487
.text
.p2align 0x4
L_510486:
L_321664:
	movq (globalObjptr+0xE728)(%rip),%r15
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (toString_429+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_510487:
L_321803:
	movq (globalObjptr+0xE7A0)(%rip),%r15
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (toString_429+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_510488:
L_321802:
	movq (globalObjptr+0xE798)(%rip),%r15
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (toString_429+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_510489:
L_321801:
	movq (globalObjptr+0xE790)(%rip),%r15
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (toString_429+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_510490:
L_321800:
	movq (globalObjptr+0xE788)(%rip),%r15
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (toString_429+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_510491:
L_321799:
	movq (globalObjptr+0xE780)(%rip),%r15
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (toString_429+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_510492:
L_321798:
	movq (globalObjptr+0xE778)(%rip),%r15
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (toString_429+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_510493:
L_321797:
	movq (globalObjptr+0xE770)(%rip),%r15
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (toString_429+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_510494:
L_321796:
	movq (globalObjptr+0xE768)(%rip),%r15
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (toString_429+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_510495:
L_321795:
	movq (globalObjptr+0xE760)(%rip),%r15
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (toString_429+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_510496:
L_321794:
	movq (globalObjptr+0xE758)(%rip),%r15
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (toString_429+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_510497:
L_321793:
	movq (globalObjptr+0xE750)(%rip),%r15
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (toString_429+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_510498:
L_321792:
	movq (globalObjptr+0xE748)(%rip),%r15
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (toString_429+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_510499:
L_321791:
	movq (globalObjptr+0xE740)(%rip),%r15
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (toString_429+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_510500:
L_321790:
	movq (globalObjptr+0xE738)(%rip),%r15
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (toString_429+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_510501:
L_321789:
	movq (globalObjptr+0xE730)(%rip),%r15
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (toString_429+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_510502:
L_321804:
	movq $0x1,%r15
L_321681:
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_321682+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x4EC7
L_321656:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_321657
L_321805:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_321806+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_321806
.p2align 0x4
.long 0x4ED3
L_321806:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_321657:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_321658
.p2align 0x4
.long 0x4EC9
toString_429:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq $0x1,0x80(%rbp)
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (rev_431+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x4ECB
L_321682:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq %r15,0x80(%rbp)
	movq (globalObjptr+0xDD28)(%rip),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_321683+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x4EC9
rev_431:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq $0x1,%r15
	je L_510506
L_321665:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x48(%rbp)
	movq %r14,0x68(%rbp)
	movq $0x1,0x78(%rbp)
.p2align 0x4,,0x7
L_321666:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_510505
.p2align 0x4,,0x7
L_321667:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_510504
L_321668:
	movq %r15,0x78(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	movq %r15,0x68(%rbp)
	jmp L_321666
.p2align 0x4
L_510504:
L_321670:
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_321671+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_510505:
L_321786:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_321787+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_321787
.p2align 0x4
.long 0x4ED2
L_321787:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	jmp L_321667
.p2align 0x4
L_510506:
L_321788:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_321670
.p2align 0x4
.long 0x4ECB
L_321683:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq (globalObjptr+0x9F40)(%rip),%r14
	movq %r14,0x80(%rbp)
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_321684+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x4EC9
L_321671:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_321672
L_321784:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_321785+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_321785
.p2align 0x4
.long 0x4ED4
L_321785:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_321672:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x30(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x28(%rbp),%r13
	cmpq $0x1,%r13
	je L_510507
L_321673:
	movq %r14,0x30(%rbp)
	movw 0x0(%r13),%r15w
	movq 0x8(%r13),%r13
	movq %r13,0x28(%rbp)
	jmp L_321663
.p2align 0x4
L_510507:
L_321674:
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq $0x1,0x48(%rbp)
.p2align 0x4,,0x7
L_321675:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_510509
.p2align 0x4,,0x7
L_321676:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_510508
L_321677:
	movq %r15,0x48(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x30(%rbp)
	jmp L_321675
.p2align 0x4
L_510508:
L_321678:
	movq 0x48(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq (globalObjptr+0xE1E8)(%rip),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_321679+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3781
.p2align 0x4
L_510509:
L_321782:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_321783+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_321783
.p2align 0x4
.long 0x4ED4
L_321783:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	jmp L_321676
.p2align 0x4
.long 0x4ECB
L_321684:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r14
	movq %r14,0x28(%rbp)
	movq 0x70(%rbp),%r14
	cmpq $0x1,%r14
	je L_510527
L_321685:
	movq 0x8(%r14),%r13
	movq %r13,0x30(%rbp)
	movw 0x0(%r14),%r15w
	movq $0x1,0x48(%rbp)
L_321686:
	movb %r15b,%r14b
	movzbq %r14b,%rax
	subq $0x1,%rax
	cmpq $0xE,%rax
	ja L_510511
	leaq jumpTable_829(%rip),%rbx
	jmp *(%rbx,%rax,8)
.data
.p2align 0x4
jumpTable_829:
.quad L_510526,L_510525,L_510524,L_510523,L_510522,L_510521,L_510520,L_510519,L_510518,L_510517,L_510516,L_510515,L_510514,L_510513,L_510512
.text
.p2align 0x4
L_510511:
L_321687:
	movq (globalObjptr+0xE728)(%rip),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (toString_430+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_510512:
L_321778:
	movq (globalObjptr+0xE7A0)(%rip),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (toString_430+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_510513:
L_321777:
	movq (globalObjptr+0xE798)(%rip),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (toString_430+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_510514:
L_321776:
	movq (globalObjptr+0xE790)(%rip),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (toString_430+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_510515:
L_321775:
	movq (globalObjptr+0xE788)(%rip),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (toString_430+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_510516:
L_321774:
	movq (globalObjptr+0xE780)(%rip),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (toString_430+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_510517:
L_321773:
	movq (globalObjptr+0xE778)(%rip),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (toString_430+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_510518:
L_321772:
	movq (globalObjptr+0xE770)(%rip),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (toString_430+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_510519:
L_321771:
	movq (globalObjptr+0xE768)(%rip),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (toString_430+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_510520:
L_321770:
	movq (globalObjptr+0xE760)(%rip),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (toString_430+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_510521:
L_321769:
	movq (globalObjptr+0xE758)(%rip),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (toString_430+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_510522:
L_321768:
	movq (globalObjptr+0xE750)(%rip),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (toString_430+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_510523:
L_321767:
	movq (globalObjptr+0xE748)(%rip),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (toString_430+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_510524:
L_321766:
	movq (globalObjptr+0xE740)(%rip),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (toString_430+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_510525:
L_321765:
	movq (globalObjptr+0xE738)(%rip),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (toString_430+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_510526:
L_321764:
	movq (globalObjptr+0xE730)(%rip),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (toString_430+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_510527:
L_321779:
	movq $0x1,%r15
L_321704:
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_321705+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x4ECA
L_321679:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_321680
L_321780:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_321781+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_321781
.p2align 0x4
.long 0x4ED3
L_321781:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_321680:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_321681
.p2align 0x4
.long 0x1FD7
toString_430:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq $0x1,0x70(%rbp)
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (rev_432+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x4ECD
L_321705:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq %r15,0x70(%rbp)
	movq (globalObjptr+0xDD28)(%rip),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_321706+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x1FD7
rev_432:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq $0x1,%r15
	je L_510531
L_321688:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x68(%rbp)
	movq %r14,0x70(%rbp)
	movq $0x1,0x78(%rbp)
.p2align 0x4,,0x7
L_321689:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_510530
.p2align 0x4,,0x7
L_321690:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x68(%rbp),%r14
	cmpq $0x1,%r14
	je L_510529
L_321691:
	movq %r15,0x78(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x68(%rbp)
	movq %r15,0x70(%rbp)
	jmp L_321689
.p2align 0x4
L_510529:
L_321693:
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_321694+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_510530:
L_321761:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_321762+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_321762
.p2align 0x4
.long 0x4ED2
L_321762:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	jmp L_321690
.p2align 0x4
L_510531:
L_321763:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_321693
.p2align 0x4
.long 0x4ECD
L_321706:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq (globalObjptr+0x9F40)(%rip),%r14
	movq %r14,0x70(%rbp)
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_321707+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x1FD7
L_321694:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_321695
L_321759:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_321760+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_321760
.p2align 0x4
.long 0x4ED1
L_321760:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_321695:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x68(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x48(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x30(%rbp),%r13
	cmpq $0x1,%r13
	je L_510532
L_321696:
	movq %r14,0x48(%rbp)
	movw 0x0(%r13),%r15w
	movq 0x8(%r13),%r13
	movq %r13,0x30(%rbp)
	jmp L_321686
.p2align 0x4
L_510532:
L_321697:
	movq 0x48(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq $0x1,0x68(%rbp)
.p2align 0x4,,0x7
L_321698:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_510534
.p2align 0x4,,0x7
L_321699:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_510533
L_321700:
	movq %r15,0x68(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	movq %r15,0x48(%rbp)
	jmp L_321698
.p2align 0x4
L_510533:
L_321701:
	movq 0x68(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq (globalObjptr+0xE1E8)(%rip),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_321702+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3781
.p2align 0x4
L_510534:
L_321757:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_321758+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_321758
.p2align 0x4
.long 0x4ED1
L_321758:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	jmp L_321699
.p2align 0x4
.long 0x4ECD
L_321707:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_321708+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_548
.p2align 0x4
.long 0x4ECC
L_321702:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_321703
L_321755:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_321756+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_321756
.p2align 0x4
.long 0x4ED0
L_321756:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_321703:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_321704
.p2align 0x4
.long 0x4ECE
L_321708:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_321709
L_321753:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_321754+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_321754
.p2align 0x4
.long 0x4D4
L_321754:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_321709:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x6A60)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x11120)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq (globalObjptr+0x112E8)(%rip),%r14
	movq %r14,0x0(%r13)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x8(%r14)
	addq $0x18,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq %r15,0x0(%r13)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x112F0)(%rip),%r13
	movq %r13,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r13)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x8(%r14)
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq (globalObjptr+0x112F8)(%rip),%r14
	movq %r14,0x0(%r13)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x8(%r14)
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq %r15,0x0(%r13)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x11340)(%rip),%r13
	movq %r13,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r13)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x8(%r14)
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x48(%rbp)
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0x11308)(%rip),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x6A58)(%rip),%r15
	movl 0x0(%r15),%r14d
	movl %r14d,0x70(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_321710+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0x127B
L_321710:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_321711
L_321751:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_321752+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_321752
.p2align 0x4
.long 0x4ECF
L_321752:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_321711:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x48(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x50(%rbp)
	movq $0x1,0x58(%rbp)
.p2align 0x4,,0x7
L_321712:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_510539
.p2align 0x4,,0x7
L_321713:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_510538
L_321714:
	movq %r15,0x58(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	movq %r15,0x50(%rbp)
	jmp L_321712
.p2align 0x4
L_510538:
L_321715:
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_321716+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_510539:
L_321749:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_321750+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_321750
.p2align 0x4
.long 0x77F
L_321750:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_321713
.p2align 0x4
.long 0x79A
L_321716:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq %r15,0x70(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_321717+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x79A
L_321717:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_321718
L_321747:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_321748+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_321748
.p2align 0x4
.long 0x49FB
L_321748:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_321718:
	movq 0x60(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x10(%r14),%r15
	movq 0x18(%r14),%r13
	movq 0x8(%r14),%r11
	cmpb $0x1,0x0(%r11)
	jne L_321719
L_321736:
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_510542
L_321737:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x14AE,%r15
	je L_510541
L_321744:
	movq %r13,0x78(%rbp)
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq $0x16FB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r13,0x8(%r14)
	movq %r14,0x70(%rbp)
	addq $0x18,%r12
	addq $0x70,%rbp
	leaq (L_321745+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp flushBuf_0
.p2align 0x4
L_510541:
L_321738:
	movq %r13,0x78(%rbp)
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq $0x16FB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r13,0x8(%r14)
	movq %r14,0x70(%rbp)
	addq $0x18,%r12
	leaq L_321740(%rip),%r15
	movq %r15,0x38(%rbp)
	movq %rbp,%r15
	addq $0x40,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x70,%rbp
	leaq (L_321739+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp flushBuf_0
.p2align 0x4
L_510542:
L_321719:
	movq 0x40(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x11348)(%rip),%r15
	movq %r15,0x70(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_321720+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x79A
L_321745:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_321719
.p2align 0x4
.long 0x127B
L_321739:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_321719
.p2align 0x4
.long 0xA1C
L_321740:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_321741
L_321742:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_321743+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_321743
.p2align 0x4
.long 0x9BB
L_321743:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_321741:
	movq 0x48(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x20(%r14),%r13
	movq $0x1419,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x20,%r12
	movq (globalObjptr+0xF590)(%rip),%r14
	movq %r14,0x8(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x10(%r15)
	movq $0x1933,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	addq $0x10,%r12
	movq 0x40(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x79A
L_321720:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_321721
L_321734:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_321735+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_321735
.p2align 0x4
.long 0x49FB
L_321735:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_321721:
	movq 0x60(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x10(%r14),%r15
	movq 0x18(%r14),%r13
	movq 0x8(%r14),%r11
	cmpb $0x1,0x0(%r11)
	jne L_321722
L_321723:
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_510547
L_321724:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x14AE,%r15
	je L_510546
L_321731:
	movq %r13,0x58(%rbp)
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq $0x16FB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r13,0x8(%r14)
	movq %r14,0x50(%rbp)
	addq $0x18,%r12
	addq $0x50,%rbp
	leaq (L_321732+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp flushBuf_0
.p2align 0x4
L_510546:
L_321725:
	movq %r13,0x60(%rbp)
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq $0x16FB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r13,0x8(%r14)
	movq %r14,0x58(%rbp)
	addq $0x18,%r12
	leaq L_321727(%rip),%r15
	movq %r15,0x38(%rbp)
	movq %rbp,%r15
	addq $0x40,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x58,%rbp
	leaq (L_321726+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp flushBuf_0
.p2align 0x4
L_510547:
L_321722:
	movq 0x40(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x1E,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x281B
L_321732:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_321722
.p2align 0x4
.long 0x90C
L_321726:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	jmp L_321722
.p2align 0x4
.long 0xA1C
L_321727:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_321728
L_321729:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_321730+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_321730
.p2align 0x4
.long 0x9BB
L_321730:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_321728:
	movq 0x48(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x20(%r14),%r13
	movq $0x1419,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x20,%r12
	movq (globalObjptr+0xF590)(%rip),%r14
	movq %r14,0x8(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x10(%r15)
	movq $0x1933,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	addq $0x10,%r12
	movq 0x40(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
