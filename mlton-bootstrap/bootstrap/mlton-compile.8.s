/* MLton 20130715 (built Mon Jun 13 11:54:01 AEST 2016 on ports.extensibl.com) */
/*   created this file on Mon Jun 13 12:08:46 2016. */
/* Do not edit this file. */
/* Flag settings:  */
/*    align: 8 */
/*    atMLtons: (mlton-compile, @MLton, --) */
/*    chunk: chunk per function */
/*    closureConvertGlobalize: true */
/*    closureConvertShrink: true */
/*    codegen: amd64 */
/*    contifyIntoMain: false */
/*    debug: false */
/*    defaultChar: char8 */
/*    defaultWideChar: widechar32 */
/*    defaultInt: int32 */
/*    defaultReal: real64 */
/*    defaultWord: word32 */
/*    diag passes: [] */
/*    drop passes: [] */
/*    elaborate allowConstant (default): false */
/*    elaborate allowConstant (enabled): true */
/*    elaborate allowFFI (default): false */
/*    elaborate allowFFI (enabled): true */
/*    elaborate allowPrim (default): false */
/*    elaborate allowPrim (enabled): true */
/*    elaborate allowOverload (default): false */
/*    elaborate allowOverload (enabled): true */
/*    elaborate allowRebindEquals (default): false */
/*    elaborate allowRebindEquals (enabled): true */
/*    elaborate deadCode (default): false */
/*    elaborate deadCode (enabled): true */
/*    elaborate forceUsed (default): false */
/*    elaborate forceUsed (enabled): true */
/*    elaborate ffiStr (default):  */
/*    elaborate ffiStr (enabled): true */
/*    elaborate nonexhaustiveExnMatch (default): default */
/*    elaborate nonexhaustiveExnMatch (enabled): true */
/*    elaborate nonexhaustiveMatch (default): warn */
/*    elaborate nonexhaustiveMatch (enabled): true */
/*    elaborate redundantMatch (default): warn */
/*    elaborate redundantMatch (enabled): true */
/*    elaborate resolveScope (default): strdec */
/*    elaborate resolveScope (enabled): true */
/*    elaborate sequenceNonUnit (default): warn */
/*    elaborate sequenceNonUnit (enabled): true */
/*    elaborate warnUnused (default): true */
/*    elaborate warnUnused (enabled): true */
/*    elaborate only: false */
/*    emit main: true */
/*    export header: None */
/*    exn history: false */
/*    generated output format: executable */
/*    gc check: Limit */
/*    indentation: 3 */
/*    inlineIntoMain: true */
/*    inlineLeafA: {loops = true, repeat = true, size = Some 20} */
/*    inlineLeafB: {loops = true, repeat = true, size = Some 40} */
/*    inlineNonRec: {small = 60, product = 320} */
/*    input file: mlton */
/*    keep CoreML: false */
/*    keep def use: true */
/*    keep dot: false */
/*    keep Machine: false */
/*    keep passes: [] */
/*    keep RSSA: false */
/*    keep SSA: false */
/*    keep SSA2: false */
/*    keep SXML: false */
/*    keep XML: false */
/*    extra_: false */
/*    lib dir: /usr/ports/pobj/mlton-20130715/mlton-on-20130715-release/build/lib */
/*    lib target dir: /usr/ports/pobj/mlton-20130715/mlton-on-20130715-release/build/lib/targets/self */
/*    loop passes: 1 */
/*    mark cards: true */
/*    max function size: 10000 */
/*    mlb path vars: [{var = MLTON_ROOT, path = $(LIB_MLTON_DIR)/sml}, {var = SML_LIB, path = $(LIB_MLTON_DIR)/sml}] */
/*    native commented: 0 */
/*    native live stack: false */
/*    native optimize: 1 */
/*    native move hoist: true */
/*    native copy prop: true */
/*    native copy prop cutoff: 1000 */
/*    native cutoff: 100 */
/*    native live transfer: 8 */
/*    native shuffle: true */
/*    native ieee fp: false */
/*    native split: Some 20000 */
/*    optimizationPasses: [<ssa2::default>, <ssa::default>, <sxml::default>, <xml::default>] */
/*    polyvariance: Some {hofo = true, rounds = 2, small = 30, product = 300} */
/*    prefer abs paths: false */
/*    prof passes: [] */
/*    profile: None */
/*    profile branch: false */
/*    profile C: [] */
/*    profile IL: ProfileSource */
/*    profile include/exclude: [(Seq [Star [.], Or [Seq [Seq [[$], [(], [S], [M], [L], [_], [L], [I], [B], [)]]]], Star [.]], false)] */
/*    profile raise: false */
/*    profile stack: false */
/*    profile val: false */
/*    show basis: None */
/*    show def-use: None */
/*    show types: true */
/*    target: self */
/*    target arch: AMD64 */
/*    target OS: OpenBSD */
/*    type check: false */
/*    verbosity: Pass */
/*    warn unrecognized annotation: true */
/*    warn deprecated features: true */
/*    zone cut depth: 100 */
.text
.p2align 0x4
.globl def_0
.hidden def_0
def_0:
L_29225:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_29274
L_29226:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_384906
L_29227:
	movq 0x8(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xE7F,%r15
	je L_384905
L_29267:
	movq 0x8(%r14),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x23DD,%r15
	je L_384904
L_29273:
	movq 0x0(%r13),%r13
	movq %r13,%r15
L_29270:
	movq 0x8(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xE7F,%r13
	je L_384903
L_29272:
	movq %r15,0x10(%rbp)
	movq 0x18(%r14),%r15
L_29229:
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_29230+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_0
.p2align 0x4
L_384903:
L_29271:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	jmp L_29229
.p2align 0x4
L_384904:
L_29268:
	movq 0x8(%r13),%r15
	movq 0x0(%r13),%r14
	movq $0x443,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	movq %r13,0x18(%rbp)
	addq $0x18,%r12
	addq $0x18,%rbp
	leaq (L_29269+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bound_0
.p2align 0x4
L_384905:
L_29228:
	movq 0x0(%r14),%r15
	movq (globalObjptr+0xEF8)(%rip),%r14
	movq $0x59,0xFFFFFFFFFFFFFFF8(%r14)
	movq %r14,0x10(%rbp)
	jmp L_29229
.p2align 0x4
L_384906:
L_29274:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_29275+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_29275
.p2align 0x4
.long 0x494
L_29275:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_29227
.p2align 0x4
.long 0x4E5
L_29230:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_29231
L_29265:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_29266+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_29266
.p2align 0x4
.long 0x4E7
L_29266:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_29231:
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1448,%r15
	jne L_384915
L_29233:
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r13
L_29234:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_29235
L_29237:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE7B,%r15
	jne L_29235
L_29238:
	movq 0x8(%r13),%r15
	movq %r15,0x18(%rbp)
	movq 0x0(%r13),%r14
	movq %r14,0x20(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq %r14,0x28(%rbp)
	movl %r14d,%r15d
	movl %r15d,0x30(%rbp)
	movslq %r15d,%r13
	cmpq %r14,%r13
	jne L_29240
L_29241:
	movq 0x10(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movq %r13,0x38(%rbp)
	movl %r13d,%r14d
	movslq %r14d,%r11
	cmpq %r11,%r13
	jne L_384911
L_29243:
	cmpl %r14d,%r15d
	jne L_384910
L_29245:
	movl $0x0,0x34(%rbp)
loop_416:
	movl 0x34(%rbp),%r15d
	cmpl %r15d,0x30(%rbp)
	je L_384909
L_29246:
	movslq %r15d,%r14
	movq %r14,0x40(%rbp)
	cmpq 0x28(%rbp),%r14
	jnb L_384908
L_29249:
	movq 0x18(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	movq %r13,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_29250+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_0
.p2align 0x4
L_384908:
L_29248:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_384909:
L_29264:
	movq $0x20A1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r14,%r15
L_29236:
	movq $0x6D7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x0(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_384910:
L_29235:
	movq $0x20A3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_29236
.p2align 0x4
L_384911:
L_29240:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_384915:
L_29232:
	movq (globalObjptr+0x1500)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x521
L_29269:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	jmp L_29270
.p2align 0x4
.long 0x834
L_29250:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_29251
L_29262:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_29263+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_29263
.p2align 0x4
.long 0x835
L_29263:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_29251:
	movq 0x48(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1448,%r15
	jne L_29232
L_29252:
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r13
L_29253:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_29235
L_29254:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE76,%r15
	jne L_29235
L_29255:
	movq 0x0(%r13),%r15
	movq 0x40(%rbp),%r14
	cmpq 0x38(%rbp),%r14
	jnb L_29248
L_29257:
	movq 0x8(%r15),%r13
	movq 0x10(%rbp),%r11
	movq 0x0(%r11,%r14,8),%r10
	movq 0x8(%r10),%r9
	movq 0x8(%r9),%r8
	cmpq %r8,0x8(%r13)
	jne L_29235
L_29259:
	movl 0x34(%rbp),%r15d
	incl %r15d
	jo L_384917
L_29261:
	movl %r15d,0x34(%rbp)
	jmp loop_416
.p2align 0x4
L_384917:
L_29260:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl bound_0
.hidden bound_0
bound_0:
L_29276:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_29277
L_29354:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_29355+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_29355
.p2align 0x4
.long 0x451
L_29355:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_29277:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r14
	cmpq $0x1,%r13
	je L_384924
L_29278:
	movq %r14,0x8(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x0(%rbp)
	movq 0x0(%r13),%r13
	movq %r13,%r14
L_29279:
	movq 0x0(%r14),%r15
	movq %r15,0x10(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x18(%rbp)
	movq 0x10(%r14),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_29280+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp extra_0
.p2align 0x4
L_384924:
L_29353:
	movq %r14,0x0(%rbp)
L_29312:
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_384931
L_29313:
	movq 0x8(%r14),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_29314:
	incl %ecx
	jo L_384930
L_29316:
	cmpq $0x1,%r15
	je L_384925
L_29317:
	movq 0x8(%r15),%r15
	jmp L_29314
.p2align 0x4
L_384925:
L_29318:
L_29319:
	movslq %ecx,%rdx
	movq %rdx,0x8(%rbp)
	testq %rdx,%rdx
	jz L_384929
L_29320:
	cmpq $0x7FFFFFFF,%rdx
	ja L_384928
L_29321:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1497,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_29322+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_29322
.p2align 0x4
.long 0x457
L_29322:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq %rax,%r15
L_29323:
	movq 0x0(%rbp),%r13
	xorq %r14,%r14
.p2align 0x4,,0x7
loop_417:
	cmpq 0x8(%rbp),%r14
	jnl L_384927
L_29325:
	cmpq $0x1,%r13
	je L_384926
L_29326:
	movq 0x0(%r13),%r11
	movq 0x8(%r13),%r13
	movq %r15,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r11,0x0(%r15,%r14,8)
	incq %r14
	jmp loop_417
.p2align 0x4
L_384926:
L_29327:
	movq (globalObjptr+0x4B0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_384927:
L_29324:
	movq $0x59,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_384928:
L_29328:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_384929:
L_29329:
	movq (globalObjptr+0xD20)(%rip),%r15
	jmp L_29323
.p2align 0x4
L_384930:
L_29315:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_384931:
L_29330:
	xorl %ecx,%ecx
	jmp L_29319
.p2align 0x4
.long 0x65B
L_29280:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_29281+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_1
.p2align 0x4
.long 0x556
L_29281:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r14
	movq 0x8(%r14),%r15
	movq %r14,0x10(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1446,%r14
	jne L_384953
L_29283:
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r13
	cmpq $0x1,%r13
	je L_384952
L_29284:
	movq 0x8(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x8(%r13),%r14
	movq %r14,0x8(%rbp)
	movq 0x0(%r13),%r15
.p2align 0x4,,0x7
L_29285:
	movq 0x18(%rbp),%r11
	cmpq $0x1,%r11
	je L_29293
L_29286:
	movq 0x8(%r11),%r13
	movq 0x0(%r11),%r14
.p2align 0x4,,0x7
L_29287:
	movq 0x8(%r14),%r11
	movq %r15,%r14
	andq $0x1,%r14
	cmpq $0x1,%r14
	je L_384948
L_29288:
L_29289:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_29290
L_29341:
	movq 0x8(%r15),%r14
	cmpq %r14,0x8(%r11)
	je L_384945
L_29290:
	cmpq $0x1,%r13
	je L_384933
L_29291:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	jmp L_29287
.p2align 0x4
L_384933:
L_29293:
	movq 0x20(%rbp),%r13
	cmpq $0x1,%r13
	je L_29301
L_29294:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r11
	movq %r11,0x28(%rbp)
.p2align 0x4,,0x7
L_29295:
	movq 0x28(%rbp),%r13
	movq 0x8(%r13),%r11
	movq %r15,%r13
	andq $0x1,%r13
	cmpq $0x1,%r13
	je L_384940
L_29296:
L_29297:
	movq %r11,%r13
	andq $0x3,%r13
	jnz L_29298
L_29302:
	movq 0x8(%r15),%r13
	cmpq %r13,0x8(%r11)
	je L_384935
L_29298:
	cmpq $0x1,%r14
	je L_384934
L_29299:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq %r13,0x28(%rbp)
	jmp L_29295
.p2align 0x4
L_384934:
L_29301:
	movq (globalObjptr+0x1BB0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_384935:
L_29304:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_384938
.p2align 0x4,,0x7
L_29306:
	movq 0x28(%rbp),%r14
	movq 0x0(%r14),%r15
	movq $0x20ED,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x8(%rbp),%r13
	cmpq $0x1,%r13
	je L_384936
L_29307:
	movq %r14,0x10(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x8(%rbp)
	jmp L_29285
.p2align 0x4
L_384936:
L_29308:
	movq %r14,%r15
L_29309:
	movq 0x0(%rbp),%r13
	cmpq $0x1,%r13
	je L_384937
L_29310:
	movq %r15,0x8(%rbp)
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movq %r13,0x0(%rbp)
	jmp L_29279
.p2align 0x4
L_384937:
L_29311:
	movq %r15,0x0(%rbp)
	jmp L_29312
.p2align 0x4
L_384938:
L_29331:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_29332+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_29332
.p2align 0x4
.long 0x4DE
L_29332:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_29306
.p2align 0x4
L_384940:
L_29333:
	movq %r15,%r13
	shrq $0x1,%r13
	movl %r13d,%r10d
	movq %r11,%r13
	andq $0x1,%r13
	cmpq $0x1,%r13
	jne L_29298
L_29334:
	shrq $0x1,%r11
	movl %r11d,%r13d
	cmpl %r13d,%r10d
	jne L_29298
L_29336:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_29306
L_29338:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r13d
	movl %r13d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r13
	movq %r13,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_29339+0x0)(%rip),%r13
	movq %r13,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_29339
.p2align 0x4
.long 0x4DE
L_29339:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_29306
.p2align 0x4
L_384945:
L_29344:
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_384946
L_29345:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_29285
.p2align 0x4
L_384946:
L_29346:
	movq 0x10(%rbp),%r15
	jmp L_29309
.p2align 0x4
L_384948:
L_29347:
	movq %r15,%r14
	shrq $0x1,%r14
	movl %r14d,%r10d
	movq %r11,%r14
	andq $0x1,%r14
	cmpq $0x1,%r14
	jne L_29290
L_29348:
	shrq $0x1,%r11
	movl %r11d,%r14d
	cmpl %r14d,%r10d
	je L_29344
	jmp L_29290
.p2align 0x4
L_384952:
L_29352:
	movq 0x8(%rbp),%r15
	jmp L_29309
.p2align 0x4
L_384953:
L_29282:
	movq (globalObjptr+0x1500)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl layout_14
.hidden layout_14
layout_14:
L_29356:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_29357
L_29720:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_29721+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_29721
.p2align 0x4
.long 0x45F
L_29721:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_29357:
	movq 0x8(%rbp),%r15
	movq 0x20(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_29358+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_0
.p2align 0x4
.long 0x4EC
L_29358:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r15,0x38(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1448,%r15
	jne L_384955
L_29360:
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x38(%rbp)
	movq 0x8(%r15),%r13
	movq 0x0(%r13),%r11
	movl 0x0(%r11),%r10d
	movl %r10d,0x48(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_29361+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_384955:
L_29359:
	movq (globalObjptr+0x1500)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x836
L_29361:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_29362+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x836
L_29362:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_29363
L_29718:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_29719+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_29719
.p2align 0x4
.long 0x4EB
L_29719:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_29363:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x40(%rbp)
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xD788)(%rip),%r14
	movq %r14,0x8(%r15)
	movq 0x38(%rbp),%r15
	movq %r15,%r14
	andq $0x1,%r14
	cmpq $0x1,%r14
	je L_384963
L_29364:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xE77,%r14
	je L_384962
	cmpq $0xE78,%r14
	je L_384959
	cmpq $0xE79,%r14
	je L_384958
	cmpq $0xE7A,%r14
	je L_384957
	cmpq $0xE7B,%r14
	je L_384956
L_29365:
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	movq (globalObjptr+0xE3D8)(%rip),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_29366+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_384956:
L_29665:
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq (globalObjptr+0xE428)(%rip),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_29666+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_384957:
L_29581:
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	movq (globalObjptr+0xE420)(%rip),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_29582+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_384958:
L_29462:
	movq 0x10(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq (globalObjptr+0xE3E8)(%rip),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_29463+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_384959:
L_29422:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x127F,%r15
	je L_384961
L_29454:
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_384960
L_29456:
	movl %r13d,0x58(%rbp)
	movq $0x3BC1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_29457+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
L_384960:
L_29427:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_384961:
L_29423:
	movq 0x0(%r14),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDD60)(%rip),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_29424+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_384962:
L_29396:
	movl 0x4(%r15),%r14d
	movl %r14d,0x48(%rbp)
	movl 0x0(%r15),%r14d
	movl %r14d,0x4C(%rbp)
	movq (globalObjptr+0xE3E0)(%rip),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_29397+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_384963:
L_29712:
	shrq $0x1,%r15
	movb %r15b,%r14b
	cmpb $0x1,%r14b
	je L_384966
	cmpb $0x2,%r14b
	je L_384965
	cmpb $0x3,%r14b
	je L_384964
L_29713:
	movq (globalObjptr+0xCE28)(%rip),%r15
L_29714:
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_29458+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_384964:
L_29717:
	movq (globalObjptr+0xE438)(%rip),%r15
	jmp L_29714
.p2align 0x4
L_384965:
L_29716:
	movq (globalObjptr+0xE430)(%rip),%r15
	jmp L_29714
.p2align 0x4
L_384966:
L_29715:
	movq (globalObjptr+0xD1F8)(%rip),%r15
	jmp L_29714
.p2align 0x4
.long 0x77D
L_29366:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x48(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_29367+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x870
L_29666:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x20(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x30(%rbp)
	movq 0x18(%r15),%r11
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	jne L_384968
L_29710:
	movq %r11,0x50(%rbp)
	movq %r14,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_29711+0x0)(%rip),%r14
	movq %r14,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unique_0
.p2align 0x4
L_384968:
L_29667:
L_29668:
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_29669+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x860
L_29582:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r14
	movq %r14,0x30(%rbp)
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_384971
L_29583:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	movl $0x0,0x38(%rbp)
	movq $0x1,0x48(%rbp)
L_29584:
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	je L_384969
L_29585:
	movq 0x10(%r14),%r15
L_29586:
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_29587+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_384969:
L_29661:
	shrq $0x1,%r14
	movl %r14d,%r15d
	incl %r15d
	jo L_384970
L_29662:
	movl %r15d,0x60(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_29663+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_384970:
L_29370:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_384971:
L_29664:
	movq $0x1,%r15
L_29599:
	movq %r15,0x50(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x58(%rbp)
	movq (globalObjptr+0x9F40)(%rip),%r15
	movq %r15,0x60(%rbp)
	movq (globalObjptr+0xDD28)(%rip),%r15
	movq %r15,0x68(%rbp)
	addq $0x50,%rbp
	leaq (L_29600+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
.long 0x67C
L_29463:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_29464+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp extra_0
.p2align 0x4
.long 0x847
L_29457:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq %r15,0x50(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x58(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0x60(%rbp)
	movq (globalObjptr+0xD0F8)(%rip),%r15
	movq %r15,0x68(%rbp)
	addq $0x50,%rbp
	leaq (L_29458+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
.long 0x840
L_29424:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_29425
L_29452:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_29453+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_29453
.p2align 0x4
.long 0x4EA
L_29453:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_29425:
	movq 0x10(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_29427
L_29428:
	movl %r13d,0x58(%rbp)
	movq $0x3C13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x20,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x20(%rbp),%r13
	movq %r13,0x8(%r14)
	movq %r15,0x10(%r14)
	movq %r14,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_29429+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
.long 0x83A
L_29397:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r14
	movq %r14,0x38(%rbp)
	movl 0x4C(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_384974
L_29398:
	movq (globalObjptr+0xCDB0)(%rip),%r15
L_29399:
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_29400+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_384974:
L_29421:
	movq (globalObjptr+0xCDC0)(%rip),%r15
	jmp L_29399
.p2align 0x4
.long 0x847
L_29458:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_29459
L_29460:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_29461+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_29461
.p2align 0x4
.long 0x848
L_29461:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_29459:
	movq 0x48(%rbp),%r15
L_29385:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xDE68)(%rip),%r15
	movq %r15,0x8(%r14)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x40(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	jmp record_3
.p2align 0x4
.long 0x837
L_29367:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_29368
L_29394:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_29395+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_29395
.p2align 0x4
.long 0x780
L_29395:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_29368:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x58(%rbp)
	addq $0x18,%r12
	movq 0x50(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_29369:
	addl 0x0(%r15),%ecx
	movl %ecx,0x48(%rbp)
	jo L_29370
L_29371:
	cmpq $0x1,%r14
	je L_384976
L_29372:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_29369
.p2align 0x4
L_384976:
L_29373:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_29374
L_29392:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_29393+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_29393
.p2align 0x4
.long 0x781
L_29393:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_29374:
	movl 0x48(%rbp),%ecx
	testl %ecx,%ecx
	jz L_384977
L_29375:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
paren_9:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x48(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0xD0F8)(%rip),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_29376+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_384977:
L_29391:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp paren_9
.p2align 0x4
.long 0x874
L_29711:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x30(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp L_29668
.p2align 0x4
.long 0x871
L_29669:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_29670
L_29708:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_29709+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_29709
.p2align 0x4
.long 0x765
L_29709:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_29670:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	addq $0x18,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_29671:
	addl 0x0(%r15),%ecx
	movl %ecx,0x18(%rbp)
	jo L_29370
L_29672:
	cmpq $0x1,%r14
	je L_384981
L_29673:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_29671
.p2align 0x4
L_384981:
L_29674:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_29675
L_29706:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_29707+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_29707
.p2align 0x4
.long 0x873
L_29707:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_29675:
	movl 0x18(%rbp),%ecx
	testl %ecx,%ecx
	jz L_384983
L_29676:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
L_29677:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x18(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq 0x10(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_29427
L_29679:
	movl %r13d,0x58(%rbp)
	movq $0x3C11,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_29680+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
L_384983:
L_29705:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_29677
.p2align 0x4
.long 0x861
L_29587:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_29588+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_14
.p2align 0x4
.long 0x861
L_29663:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	jmp L_29586
.p2align 0x4
.long 0x863
L_29600:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_29601
L_29653:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_29654+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_29654
.p2align 0x4
.long 0x86D
L_29654:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_29601:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x20(%rbp)
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xE408)(%rip),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_29602+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_1
.p2align 0x4
.long 0x849
L_29464:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r14
	movq %r14,0x30(%rbp)
	cmpq $0x1,%r14
	je L_384990
L_29465:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	movl $0x0,0x48(%rbp)
	movq $0x1,0x50(%rbp)
L_29466:
	movq 0x0(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	je L_384988
L_29467:
	movq 0x10(%r14),%r15
L_29468:
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_29469+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_384988:
L_29577:
	shrq $0x1,%r14
	movl %r14d,%r15d
	incl %r15d
	jo L_29370
L_29578:
	movl %r15d,0x68(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_29579+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_384990:
L_29580:
	movq $0x1,%r15
L_29482:
	movq %r15,0x50(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x58(%rbp)
	movq (globalObjptr+0x9F40)(%rip),%r15
	movq %r15,0x60(%rbp)
	movq (globalObjptr+0xDD28)(%rip),%r15
	movq %r15,0x68(%rbp)
	addq $0x50,%rbp
	leaq (L_29483+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
.long 0x841
L_29429:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r14
	movq %r14,0x50(%rbp)
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_29430+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp separateRight_0
.p2align 0x4
.long 0x83B
L_29400:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_29401
L_29419:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_29420+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_29420
.p2align 0x4
.long 0x83F
L_29420:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_29401:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x58(%rbp)
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xE3C8)(%rip),%r14
	movq %r14,0x8(%r15)
	movl 0x48(%rbp),%r15d
	movl %r15d,0x68(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_29402+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0x77D
L_29376:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_29377+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x841
L_29680:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq %r15,0x50(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x58(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0x60(%rbp)
	movq (globalObjptr+0xD0F8)(%rip),%r15
	movq %r15,0x68(%rbp)
	addq $0x50,%rbp
	leaq (L_29681+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
.long 0x862
L_29588:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_29589
L_29659:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_29660+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_29660
.p2align 0x4
.long 0x618
L_29660:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_29589:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x58(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x58(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x60(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0x68(%rbp)
	movq (globalObjptr+0xD0F8)(%rip),%r15
	movq %r15,0x70(%rbp)
	addq $0x58,%rbp
	leaq (L_29590+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
.long 0x864
L_29602:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r14
	movq 0x8(%r14),%r15
	movq %r14,0x38(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1446,%r14
	jne L_29359
L_29603:
	movq 0x8(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x38(%rbp)
	movq 0x8(%r14),%r13
	cmpq $0x1,%r13
	je L_384995
L_29604:
	movq 0x8(%r13),%r14
	movq %r14,0x48(%rbp)
	movq 0x0(%r13),%r15
	movl $0x0,0x50(%rbp)
	movq $0x1,0x58(%rbp)
L_29605:
	movq %r15,%r14
	andq $0x1,%r14
	cmpq $0x1,%r14
	je L_384993
L_29606:
	movq 0x10(%r15),%r15
L_29607:
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_29608+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_384993:
L_29649:
	shrq $0x1,%r15
	movl %r15d,%r14d
	incl %r14d
	jo L_29370
L_29650:
	movl %r14d,0x68(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_29651+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_384995:
L_29652:
	movq $0x1,%r15
L_29617:
	movq %r15,0x50(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x58(%rbp)
	movq (globalObjptr+0x9F40)(%rip),%r15
	movq %r15,0x60(%rbp)
	movq (globalObjptr+0xDD28)(%rip),%r15
	movq %r15,0x68(%rbp)
	addq $0x50,%rbp
	leaq (L_29618+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
.long 0x84A
L_29469:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_29470
L_29575:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_29576+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_29576
.p2align 0x4
.long 0x85F
L_29576:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_29470:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x68(%rbp)
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xE3F0)(%rip),%r14
	movq %r14,0x8(%r15)
	movq 0x58(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_29471+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x84A
L_29579:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	jmp L_29468
.p2align 0x4
.long 0x849
L_29483:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_29484
L_29567:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_29568+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_29568
.p2align 0x4
.long 0x4EF
L_29568:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_29484:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x48(%rbp)
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq (globalObjptr+0xE400)(%rip),%r13
	movq %r13,0x8(%r14)
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_385000
L_29485:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	movl $0x0,0x30(%rbp)
	movq $0x1,0x50(%rbp)
L_29486:
	movq 0x0(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	je L_384998
L_29487:
	movq 0x10(%r14),%r15
L_29488:
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_29489+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_384998:
L_29563:
	shrq $0x1,%r14
	movl %r14d,%r15d
	incl %r15d
	jo L_29370
L_29564:
	movl %r15d,0x68(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_29565+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_385000:
L_29566:
	movq $0x1,%r15
L_29501:
	movq %r15,0x58(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x60(%rbp)
	movq (globalObjptr+0x9F40)(%rip),%r15
	movq %r15,0x68(%rbp)
	movq (globalObjptr+0xDD28)(%rip),%r15
	movq %r15,0x70(%rbp)
	addq $0x58,%rbp
	leaq (L_29502+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
.long 0x841
L_29430:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_29431+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3782
.p2align 0x4
.long 0x83C
L_29402:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_29403+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x76F
L_29377:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_29378
L_29389:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_29390+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_29390
.p2align 0x4
.long 0x839
L_29390:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_29378:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x60(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x50(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_29379:
	addl 0x0(%r15),%ecx
	movl %ecx,0x48(%rbp)
	jo L_29370
L_29380:
	cmpq $0x1,%r14
	je L_385002
L_29381:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_29379
.p2align 0x4
L_385002:
L_29382:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_29383
L_29387:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_29388+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_29388
.p2align 0x4
.long 0x838
L_29388:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_29383:
	movl 0x48(%rbp),%r15d
	testl %r15d,%r15d
	jz L_385003
L_29384:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x60(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,%r15
	jmp L_29385
.p2align 0x4
L_385003:
L_29386:
	movq (globalObjptr+0x9D0)(%rip),%r15
	jmp L_29385
.p2align 0x4
.long 0x841
L_29681:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_29682
L_29703:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_29704+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_29704
.p2align 0x4
.long 0x872
L_29704:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_29682:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_29683+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3782
.p2align 0x4
.long 0x67B
L_29590:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_29591
L_29657:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_29658+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_29658
.p2align 0x4
.long 0x86F
L_29658:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_29591:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movl 0x38(%rbp),%r14d
	incl %r14d
	jo L_29370
L_29592:
	movq 0x18(%rbp),%r13
	cmpq $0x1,%r13
	je L_385008
L_29593:
	movl %r14d,0x38(%rbp)
	movq %r15,0x48(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x18(%rbp)
	jmp L_29584
.p2align 0x4
L_385008:
L_29594:
	movq 0x48(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq $0x1,0x38(%rbp)
.p2align 0x4,,0x7
L_29595:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_385010
.p2align 0x4,,0x7
L_29596:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_29599
L_29597:
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_29595
.p2align 0x4
L_385010:
L_29655:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_29656+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_29656
.p2align 0x4
.long 0x86E
L_29656:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_29596
.p2align 0x4
.long 0x865
L_29608:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_29609
L_29647:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_29648+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_29648
.p2align 0x4
.long 0x86C
L_29648:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_29609:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movl 0x50(%rbp),%r14d
	incl %r14d
	jo L_29370
L_29610:
	movq 0x48(%rbp),%r13
	cmpq $0x1,%r13
	je L_385013
L_29611:
	movl %r14d,0x50(%rbp)
	movq %r15,0x58(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x48(%rbp)
	jmp L_29605
.p2align 0x4
L_385013:
L_29612:
	movq 0x58(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq $0x1,0x50(%rbp)
.p2align 0x4,,0x7
L_29613:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_385015
.p2align 0x4,,0x7
L_29614:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_29617
L_29615:
	movq %r15,0x50(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x48(%rbp)
	jmp L_29613
.p2align 0x4
L_385015:
L_29645:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_29646+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_29646
.p2align 0x4
.long 0x7AC
L_29646:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	jmp L_29614
.p2align 0x4
.long 0x865
L_29651:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	jmp L_29607
.p2align 0x4
.long 0x7A9
L_29618:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_29619
L_29643:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_29644+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_29644
.p2align 0x4
.long 0x4B7
L_29644:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_29619:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x48(%rbp)
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq (globalObjptr+0xE408)(%rip),%r13
	movq %r13,0x8(%r14)
	movq 0x38(%rbp),%r14
	movl 0x0(%r14),%r13d
	testl %r13d,%r13d
	jnz L_385018
L_29620:
	movq (globalObjptr+0xCDB0)(%rip),%r15
L_29621:
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_29622+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_385018:
L_29642:
	movq (globalObjptr+0xCDC0)(%rip),%r15
	jmp L_29621
.p2align 0x4
.long 0x84B
L_29471:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_29472
L_29573:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_29574+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_29574
.p2align 0x4
.long 0x85E
L_29574:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_29472:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xE3F8)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_29473+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp record_3
.p2align 0x4
.long 0x84D
L_29489:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_29490+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_14
.p2align 0x4
.long 0x84D
L_29565:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	jmp L_29488
.p2align 0x4
.long 0x850
L_29502:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_29503
L_29555:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_29556+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_29556
.p2align 0x4
.long 0x858
L_29556:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_29503:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x20(%rbp)
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xE408)(%rip),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_29504+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_1
.p2align 0x4
.long 0x841
L_29431:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movl 0x50(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_29432
L_29450:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_29451+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_29451
.p2align 0x4
.long 0x846
L_29451:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_29432:
	movl 0x20(%rbp),%ecx
	testl %ecx,%ecx
	jz L_385023
L_29433:
	decl %ecx
	jo L_29370
L_29434:
	movq $0x1B67,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
L_29435:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x20(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0xA058)(%rip),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_29436+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_385023:
L_29449:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_29435
.p2align 0x4
.long 0x83C
L_29403:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_29404
L_29417:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_29418+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_29418
.p2align 0x4
.long 0x83E
L_29418:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_29404:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xE218)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_29405+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp record_3
.p2align 0x4
.long 0x847
L_29683:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movl 0x50(%rbp),%r15d
	movl %r15d,0x48(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_29684
L_29701:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_29702+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_29702
.p2align 0x4
.long 0x83D
L_29702:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_29684:
	movl 0x48(%rbp),%ecx
	testl %ecx,%ecx
	jz L_385027
L_29685:
	decl %ecx
	jo L_29370
L_29686:
	movq $0x1B67,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl $0x1,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
paren_10:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x48(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0xD0F8)(%rip),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_29687+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_385027:
L_29700:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp paren_10
.p2align 0x4
.long 0x866
L_29622:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_29623
L_29640:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_29641+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_29641
.p2align 0x4
.long 0x86B
L_29641:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_29623:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xE410)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_29624+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp record_3
.p2align 0x4
.long 0x84C
L_29473:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_29474
L_29571:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_29572+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_29572
.p2align 0x4
.long 0x85D
L_29572:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_29474:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movl 0x48(%rbp),%r14d
	incl %r14d
	jo L_29370
L_29475:
	movq 0x30(%rbp),%r13
	cmpq $0x1,%r13
	je L_385030
L_29476:
	movl %r14d,0x48(%rbp)
	movq %r15,0x50(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x30(%rbp)
	jmp L_29466
.p2align 0x4
L_385030:
L_29477:
	movq 0x50(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq $0x1,0x50(%rbp)
.p2align 0x4,,0x7
L_29478:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_385032
.p2align 0x4,,0x7
L_29479:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_29482
L_29480:
	movq %r15,0x50(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	movq %r15,0x48(%rbp)
	jmp L_29478
.p2align 0x4
L_385032:
L_29569:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_29570+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_29570
.p2align 0x4
.long 0x85C
L_29570:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	jmp L_29479
.p2align 0x4
.long 0x84E
L_29490:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_29491
L_29561:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_29562+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_29562
.p2align 0x4
.long 0x85B
L_29562:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_29491:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x60(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x60(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x68(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0x70(%rbp)
	movq (globalObjptr+0xD0F8)(%rip),%r15
	movq %r15,0x78(%rbp)
	addq $0x60,%rbp
	leaq (L_29492+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
.long 0x81C
L_29504:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r14
	movq 0x8(%r14),%r15
	movq %r14,0x30(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1446,%r14
	jne L_29359
L_29505:
	movq 0x8(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x30(%rbp)
	movq 0x8(%r14),%r13
	cmpq $0x1,%r13
	je L_385038
L_29506:
	movq 0x8(%r13),%r14
	movq %r14,0x50(%rbp)
	movq 0x0(%r13),%r15
	movl $0x0,0x58(%rbp)
	movq $0x1,0x60(%rbp)
L_29507:
	movq %r15,%r14
	andq $0x1,%r14
	cmpq $0x1,%r14
	je L_385036
L_29508:
	movq 0x10(%r15),%r15
L_29509:
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_29510+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_385036:
L_29551:
	shrq $0x1,%r15
	movl %r15d,%r14d
	incl %r14d
	jo L_29370
L_29552:
	movl %r14d,0x70(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_29553+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_385038:
L_29554:
	movq $0x1,%r15
L_29519:
	movq %r15,0x58(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x60(%rbp)
	movq (globalObjptr+0x9F40)(%rip),%r15
	movq %r15,0x68(%rbp)
	movq (globalObjptr+0xDD28)(%rip),%r15
	movq %r15,0x70(%rbp)
	addq $0x58,%rbp
	leaq (L_29520+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
.long 0x842
L_29436:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq (globalObjptr+0xA2F0)(%rip),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_29437+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x78D
L_29405:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_29406
L_29415:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_29416+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_29416
.p2align 0x4
.long 0x78E
L_29416:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_29406:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x50(%rbp)
	addq $0x18,%r12
	movq 0x38(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_29407:
	addl 0x0(%r15),%ecx
	movl %ecx,0x48(%rbp)
	jo L_29370
L_29408:
	cmpq $0x1,%r14
	je L_385040
L_29409:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_29407
.p2align 0x4
L_385040:
L_29410:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_29411
L_29413:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_29414+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_29414
.p2align 0x4
.long 0x83D
L_29414:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_29411:
	movl 0x48(%rbp),%r15d
	testl %r15d,%r15d
	jz L_29386
L_29412:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,%r15
	jmp L_29385
.p2align 0x4
.long 0x77D
L_29687:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_29688+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x867
L_29624:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_29625
L_29638:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_29639+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_29639
.p2align 0x4
.long 0x7A3
L_29639:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_29625:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xE418)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_29626+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp record_3
.p2align 0x4
.long 0x84F
L_29492:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_29493
L_29559:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_29560+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_29560
.p2align 0x4
.long 0x85A
L_29560:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_29493:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movl 0x30(%rbp),%r14d
	incl %r14d
	jo L_29370
L_29494:
	movq 0x18(%rbp),%r13
	cmpq $0x1,%r13
	je L_385046
L_29495:
	movl %r14d,0x30(%rbp)
	movq %r15,0x50(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x18(%rbp)
	jmp L_29486
.p2align 0x4
L_385046:
L_29496:
	movq 0x50(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq $0x1,0x30(%rbp)
.p2align 0x4,,0x7
L_29497:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_385048
.p2align 0x4,,0x7
L_29498:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_29501
L_29499:
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_29497
.p2align 0x4
L_385048:
L_29557:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_29558+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_29558
.p2align 0x4
.long 0x859
L_29558:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	jmp L_29498
.p2align 0x4
.long 0x851
L_29510:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_29511
L_29549:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_29550+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_29550
.p2align 0x4
.long 0x857
L_29550:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_29511:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movl 0x58(%rbp),%r14d
	incl %r14d
	jo L_29370
L_29512:
	movq 0x50(%rbp),%r13
	cmpq $0x1,%r13
	je L_385051
L_29513:
	movl %r14d,0x58(%rbp)
	movq %r15,0x60(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x50(%rbp)
	jmp L_29507
.p2align 0x4
L_385051:
L_29514:
	movq 0x60(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq $0x1,0x58(%rbp)
.p2align 0x4,,0x7
L_29515:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_385053
.p2align 0x4,,0x7
L_29516:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_29519
L_29517:
	movq %r15,0x58(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x50(%rbp)
	jmp L_29515
.p2align 0x4
L_385053:
L_29547:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_29548+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_29548
.p2align 0x4
.long 0x4B6
L_29548:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	jmp L_29516
.p2align 0x4
.long 0x851
L_29553:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	jmp L_29509
.p2align 0x4
.long 0x852
L_29520:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_29521
L_29545:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_29546+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_29546
.p2align 0x4
.long 0x4B5
L_29546:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_29521:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x50(%rbp)
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq (globalObjptr+0xE408)(%rip),%r13
	movq %r13,0x8(%r14)
	movq 0x30(%rbp),%r14
	movl 0x0(%r14),%r13d
	testl %r13d,%r13d
	jnz L_385056
L_29522:
	movq (globalObjptr+0xCDB0)(%rip),%r15
L_29523:
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_29524+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_385056:
L_29544:
	movq (globalObjptr+0xCDC0)(%rip),%r15
	jmp L_29523
.p2align 0x4
.long 0x843
L_29437:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_29438
L_29447:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_29448+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_29448
.p2align 0x4
.long 0x845
L_29448:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_29438:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x38(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x18(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_29439:
	addl 0x0(%r15),%ecx
	movl %ecx,0x48(%rbp)
	jo L_29370
L_29440:
	cmpq $0x1,%r14
	je L_385058
L_29441:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_29439
.p2align 0x4
L_385058:
L_29442:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_29443
L_29445:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_29446+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_29446
.p2align 0x4
.long 0x844
L_29446:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_29443:
	movl 0x48(%rbp),%r15d
	testl %r15d,%r15d
	jz L_29386
L_29444:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,%r15
	jmp L_29385
.p2align 0x4
.long 0x76F
L_29688:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_29689
L_29698:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_29699+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_29699
.p2align 0x4
.long 0x839
L_29699:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_29689:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x60(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x50(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_29690:
	addl 0x0(%r15),%ecx
	movl %ecx,0x48(%rbp)
	jo L_29370
L_29691:
	cmpq $0x1,%r14
	je L_385063
L_29692:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_29690
.p2align 0x4
L_385063:
L_29693:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_29694
L_29696:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_29697+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_29697
.p2align 0x4
.long 0x838
L_29697:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_29694:
	movl 0x48(%rbp),%r15d
	testl %r15d,%r15d
	jz L_29386
L_29695:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x60(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,%r15
	jmp L_29385
.p2align 0x4
.long 0x868
L_29626:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_29627
L_29636:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_29637+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_29637
.p2align 0x4
.long 0x86A
L_29637:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_29627:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x48(%rbp)
	addq $0x18,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_29628:
	addl 0x0(%r15),%ecx
	movl %ecx,0x50(%rbp)
	jo L_29370
L_29629:
	cmpq $0x1,%r14
	je L_385068
L_29630:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_29628
.p2align 0x4
L_385068:
L_29631:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_29632
L_29634:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_29635+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_29635
.p2align 0x4
.long 0x869
L_29635:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_29632:
	movl 0x50(%rbp),%r15d
	testl %r15d,%r15d
	jz L_29386
L_29633:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,%r15
	jmp L_29385
.p2align 0x4
.long 0x853
L_29524:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_29525
L_29542:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_29543+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_29543
.p2align 0x4
.long 0x856
L_29543:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_29525:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xE410)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_29526+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp record_3
.p2align 0x4
.long 0x854
L_29526:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_29527
L_29540:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_29541+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_29541
.p2align 0x4
.long 0x855
L_29541:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_29527:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xE418)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x48(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_29528+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp record_3
.p2align 0x4
.long 0x78D
L_29528:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_29529
L_29538:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_29539+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_29539
.p2align 0x4
.long 0x78E
L_29539:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_29529:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x50(%rbp)
	addq $0x18,%r12
	movq 0x38(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_29530:
	addl 0x0(%r15),%ecx
	movl %ecx,0x48(%rbp)
	jo L_29370
L_29531:
	cmpq $0x1,%r14
	je L_385075
L_29532:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_29530
.p2align 0x4
L_385075:
L_29533:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_29534
L_29536:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_29537+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_29537
.p2align 0x4
.long 0x83D
L_29537:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_29534:
	movl 0x48(%rbp),%r15d
	testl %r15d,%r15d
	jz L_29386
L_29535:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,%r15
	jmp L_29385
.text
.p2align 0x4
.globl get_24
.hidden get_24
get_24:
L_29722:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_29723
L_30006:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_30007+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_30007
.p2align 0x4
.long 0x45F
L_30007:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_29723:
	movq 0x8(%rbp),%r15
	movq 0x80(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x78(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x70(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x68(%r15),%r14
	movq %r14,0x28(%rbp)
	movl 0x0(%r15),%r14d
	movl %r14d,0x30(%rbp)
	movq 0x58(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x50(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x48(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x40(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_29724+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_0
.p2align 0x4
.long 0x875
L_29724:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r13
	movq 0x0(%r13),%r15
	movq %r13,0x90(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1448,%r14
	jne L_385091
L_29726:
	movq 0x8(%r15),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x90(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_385090
L_29728:
	movq %r15,0x0(%r13)
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_385089
L_29729:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_29731:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_29732
L_29998:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xCD5,%r13
	jne L_29732
L_29999:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	cmpq %r11,0x10(%rbp)
	je L_385084
L_29732:
	incl %ecx
	jo L_385083
L_29734:
	cmpq $0x1,%r15
	je L_385081
L_29735:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_29731
.p2align 0x4
L_385081:
L_29736:
L_29737:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_385082
L_29739:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl x_57
L_29997:
	movl %ecx,0x0(%r15)
x_57:
	movq 0x0(%rbp),%r15
	movq %r15,0xA0(%rbp)
	addq $0xA0,%rbp
	leaq (L_29741+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_0
.p2align 0x4
L_385082:
L_29738:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_385083:
L_29733:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_385084:
L_30001:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_29738
L_30002:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_385085
L_30004:
	movl %ecx,0x0(%r15)
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_385085:
L_30003:
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_385089:
L_30005:
	xorl %ecx,%ecx
	jmp L_29737
.p2align 0x4
L_385090:
L_29727:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_385091:
L_29725:
	movq (globalObjptr+0x1500)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x876
L_29741:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r15
	movq %r15,0x98(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_29742
L_29995:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_29996+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_29996
.p2align 0x4
.long 0x896
L_29996:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_29742:
	movq 0x98(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1448,%r15
	jne L_29725
L_29743:
	movq 0x8(%r14),%r15
	movq 0x10(%r15),%r13
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x28DD,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r14,0x8(%r11)
	addq $0x18,%r12
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq %r11,0x0(%r15)
	movq 0x0(%rbp),%r15
	movq %r15,0xA0(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0xA8(%rbp)
	addq $0xA0,%rbp
	leaq (L_29744+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_12
.p2align 0x4
.long 0x877
L_29744:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r15
	movq %r15,0x18(%rbp)
	movb 0x0(%r15),%r14b
	cmpb $0x1,%r14b
	je L_385095
	cmpb $0x2,%r14b
	je L_385094
L_29745:
	movb $0x2,0x0(%r15)
	movq 0x0(%rbp),%r15
	movq %r15,0xA0(%rbp)
	addq $0xA0,%rbp
	leaq (L_29746+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_0
.p2align 0x4
L_385094:
L_29994:
	movq (globalObjptr+0x1BC0)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_385095:
L_29993:
	movq (globalObjptr+0x1AE0)(%rip),%r13
	movq %r13,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x878
L_29746:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_29747
L_29991:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_29992+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_29992
.p2align 0x4
.long 0x895
L_29992:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_29747:
	movq 0x20(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1448,%r15
	jne L_29725
L_29748:
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r13
	movq %r13,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	je L_385122
L_29749:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE77,%r15
	je L_385121
	cmpq $0xE78,%r15
	je L_385117
	cmpq $0xE79,%r15
	je L_385115
	cmpq $0xE7A,%r15
	je L_385113
	cmpq $0xE7B,%r15
	je L_385097
L_29750:
	movq 0x0(%r13),%r14
	movq $0x1CED,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r14,0x0(%r15)
	movq 0x8(%r14),%r13
	movl 0x4(%r13),%r11d
	testl %r11d,%r11d
	jnz L_385096
L_29751:
	movq $0x2,%r14
L_29752:
	movq $0x13,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq 0x38(%rbp),%r11
	movq 0x0(%r11),%r10
	movq $0x1F7,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r10,0x0(%r11)
	addq $0x10,%r12
	movq $0xFFF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	movq %r11,0x8(%r10)
	movq %r13,0x10(%r10)
	movq %r14,0x18(%r10)
	addq $0x28,%r12
	movq $0x2891,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r10,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x16B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
L_29753:
	movq 0x18(%rbp),%r14
	movb $0x1,0x0(%r14)
	movq $0x19AB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	movq %r15,0x0(%rbp)
	addq $0x18,%r12
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x90(%rbp),%r15
	movq 0x0(%r15),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq %r11,0x0(%r15)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_385096:
L_29754:
	movq $0x1,%r14
	jmp L_29752
.p2align 0x4
L_385097:
L_29906:
	movq 0x8(%r13),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r13),%r14
	movq %r14,0x38(%rbp)
	movl 0x30(%rbp),%r13d
	testl %r13d,%r13d
	jz no_1
L_29911:
	movq 0x10(%r14),%r13
	movq %r13,0x30(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r14
	movq 0x0(%r14),%r15
	incq %r15
	jo L_29727
L_29912:
	movq %r15,0x0(%r14)
	movq 0x0(%r13),%r14
	cmpq $0x1,%r14
	je L_385111
L_29913:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r15,0x40(%rbp)
	movl $0x0,0x48(%rbp)
	movq %r14,%r15
.p2align 0x4,,0x7
L_29915:
	movq 0x40(%rbp),%r14
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_29916
L_29937:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xCD0,%r13
	je L_385106
L_29916:
	movl 0x48(%rbp),%r14d
	incl %r14d
	movl %r14d,0x40(%rbp)
	jo L_29733
L_29917:
	cmpq $0x1,%r15
	je L_385098
L_29918:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movl %r14d,0x48(%rbp)
	movq %r13,0x40(%rbp)
	jmp L_29915
.p2align 0x4
L_385098:
L_29919:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_29920
L_29935:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_29936+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_29936
.p2align 0x4
.long 0x88D
L_29936:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_29920:
	movl 0x40(%rbp),%ecx
L_29921:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_29738
L_29922:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_29924
L_29934:
	movl %ecx,0x0(%r15)
L_29924:
	movq $0x13F9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x19A1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq 0x30(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r10,0x0(%r13)
L_29925:
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je no_5
L_29926:
	movq 0x0(%r14),%r15
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq 0x8(%r14),%r15
	movq 0x8(%r15),%r10
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r15
	shrq $0x1,%r15
	cmpq $0x1051,%r15
	je L_385100
	cmpq $0x1052,%r15
	je L_385099
L_29927:
	movq %r13,0xB0(%rbp)
	movq 0x0(%r10),%r15
	movq %r15,0xA8(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0xA0(%rbp)
	addq $0xA0,%rbp
	leaq (L_29928+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp con_2
.p2align 0x4
L_385099:
L_29932:
	movq %r13,0xB0(%rbp)
	movq 0x8(%r10),%r15
	movq %r15,0xA8(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0xA0(%rbp)
	addq $0xA0,%rbp
	leaq (L_29928+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp con_2
.p2align 0x4
L_385100:
L_29930:
	movq %r11,0xB0(%rbp)
	movq 0x0(%r10),%r15
	movq %r15,0xA8(%rbp)
	movq $0x3EE1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0xA0(%rbp)
	addq $0xA0,%rbp
	leaq (L_29931+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp instantiateP_0
.p2align 0x4
no_5:
no_1:
	movq 0x20(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_385101
L_29909:
	movl %r13d,0xA8(%rbp)
	movq $0x3EB9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0xA0(%rbp)
	addq $0xA0,%rbp
	leaq (L_29910+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_1
.p2align 0x4
L_385101:
L_29759:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_385106:
L_29938:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_29939
L_29943:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_29944+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_29944
.p2align 0x4
.long 0x88E
L_29944:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_29939:
	movq 0x40(%rbp),%r14
	movq 0x0(%r14),%r15
	movl 0x48(%rbp),%r14d
	movslq %r14d,%r13
	movq (globalObjptr+0x1070)(%rip),%r11
	addq 0x0(%r11),%r13
	jo L_29738
L_29940:
	movq %r13,0x0(%r11)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %r14d,0x0(%r13)
	jnl L_29925
L_29942:
	movl %r14d,0x0(%r13)
	jmp L_29925
.p2align 0x4
L_385111:
L_29945:
	xorl %ecx,%ecx
	jmp L_29921
.p2align 0x4
L_385113:
L_29856:
	movq 0x8(%r13),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r13),%r14
	cmpq $0x1,%r14
	je L_385114
L_29857:
	movq 0x8(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0x0(%r14),%r14
	movq $0x1,0x30(%rbp)
	movq %r14,%r15
L_29858:
	movq 0x0(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0xA8(%rbp)
	addq $0xA0,%rbp
	leaq (L_29859+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_24
.p2align 0x4
L_385114:
L_29905:
	movq $0x1,0x28(%rbp)
L_29863:
	movq 0x20(%rbp),%r15
	movq %r15,0xA0(%rbp)
	addq $0xA0,%rbp
	leaq (L_29864+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_1
.p2align 0x4
L_385115:
L_29776:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r11
	movq %r11,0x20(%rbp)
	cmpq $0x1,%r14
	je L_385116
L_29777:
	movq 0x8(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0x0(%r14),%r14
	movq $0x1,0x30(%rbp)
	movq %r14,%r15
L_29778:
	movq 0x0(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0xA8(%rbp)
	addq $0xA0,%rbp
	leaq (L_29779+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_24
.p2align 0x4
L_385116:
L_29855:
	movq $0x1,0x28(%rbp)
L_29783:
	movq 0x20(%rbp),%r15
	movq %r15,0xA0(%rbp)
	addq $0xA0,%rbp
	leaq (L_29784+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp extra_0
.p2align 0x4
L_385117:
L_29756:
	movq 0x0(%r13),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x127F,%r14
	je L_385119
L_29767:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_29759
L_29769:
	movl %r13d,0xA8(%rbp)
	movq $0x3ECD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0xA0(%rbp)
	addq $0xA0,%rbp
	leaq (L_29770+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_1
.p2align 0x4
L_385119:
L_29757:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_29759
L_29760:
	movl %r13d,0xA8(%rbp)
	movq $0x3AB9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0xA0(%rbp)
	addq $0xA0,%rbp
	leaq (L_29761+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_14
.p2align 0x4
L_385121:
L_29755:
	movq 0x50(%rbp),%r15
	jmp L_29753
.p2align 0x4
L_385122:
L_29946:
	shrq $0x1,%r13
	movb %r13b,%r15b
	movb %r15b,0x8(%rbp)
	cmpb $0x1,%r15b
	je L_385129
	cmpb $0x2,%r15b
	je L_385128
	cmpb $0x3,%r15b
	je L_385123
L_29947:
	movq 0x70(%rbp),%r15
	movq %r15,0xA0(%rbp)
	addq $0xA0,%rbp
	leaq (L_29948+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp defaultWord_0
.p2align 0x4
L_385123:
L_29979:
	movq 0x58(%rbp),%r10
	movq 0x8(%r10),%r14
	movq 0x0(%r10),%r9
	movq 0x0(%r9),%r15
	cmpq %r15,(globalObjptr+0xCA68)(%rip)
	je L_385127
L_29980:
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r13
	cmpq $0x5,%r13
	jne L_29982
L_29983:
	xorq %r11,%r11
.p2align 0x4,,0x7
vectorEqualLoop_108:
	cmpq %r13,%r11
	je L_385125
L_29984:
	movq (globalObjptr+0xCA68)(%rip),%r9
	movb 0x0(%r9,%r11,1),%r10b
	cmpb %r10b,0x0(%r15,%r11,1)
	jne L_385124
L_29986:
	incq %r11
	jmp vectorEqualLoop_108
.p2align 0x4
L_385124:
L_29982:
	movq (globalObjptr+0x18C8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_385125:
	movq %r14,%r15
L_29988:
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq $0x1,0xA0(%rbp)
	movl $0x0,0xA8(%rbp)
	addq $0xA0,%rbp
	leaq (L_29989+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_1
.p2align 0x4
L_385127:
	movq %r14,%r15
	jmp L_29988
.p2align 0x4
L_385128:
L_29976:
	movq 0x78(%rbp),%r14
	movq %r14,0xA0(%rbp)
	addq $0xA0,%rbp
	leaq (L_29977+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp defaultInt_0
.p2align 0x4
L_385129:
L_29954:
	movq 0x68(%rbp),%r10
	movq 0x8(%r10),%r14
	movq 0x0(%r10),%r9
	movq 0x0(%r9),%r8
	cmpq %r8,(globalObjptr+0xCA98)(%rip)
	je L_385135
L_29955:
	movq 0xFFFFFFFFFFFFFFF0(%r8),%r13
	cmpq $0x6,%r13
	sete %cl
	movzbl %cl,%ecx
	jne vectorEqual_213
L_29969:
	xorq %r11,%r11
	movq %r8,%r15
.p2align 0x4,,0x7
vectorEqualLoop_107:
	cmpq %r11,%r13
	je L_385134
L_29970:
	movq (globalObjptr+0xCA98)(%rip),%r10
	movb 0x0(%r15,%r11,1),%r9b
	cmpb %r9b,0x0(%r10,%r11,1)
	jne vectorEqual_212
L_29972:
	incq %r11
	jmp vectorEqualLoop_107
.p2align 0x4
vectorEqual_212:
vectorEqual_57:
	cmpq (globalObjptr+0xD6E8)(%rip),%r15
	je L_29965
L_29957:
	testl %ecx,%ecx
	jz L_29959
L_29960:
	xorq %r11,%r11
.p2align 0x4,,0x7
vectorEqualLoop_106:
	cmpq %r11,%r13
	je L_385131
L_29961:
	movq (globalObjptr+0xD6E8)(%rip),%r9
	movb 0x0(%r9,%r11,1),%r10b
	cmpb %r10b,0x0(%r15,%r11,1)
	jne L_385130
L_29963:
	incq %r11
	jmp vectorEqualLoop_106
.p2align 0x4
L_385130:
L_29959:
	movq (globalObjptr+0x1AD0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_385131:
L_29965:
	movq 0x0(%r14),%r15
	movq %r15,0x20(%rbp)
L_29966:
	movq $0x1,0xA0(%rbp)
	movl $0x0,0xA8(%rbp)
	addq $0xA0,%rbp
	leaq (L_29967+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_1
.p2align 0x4
L_385134:
	movq %r14,%r15
L_29974:
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	jmp L_29966
.p2align 0x4
vectorEqual_213:
	movq %r8,%r15
	jmp vectorEqual_57
.p2align 0x4
L_385135:
	movq %r14,%r15
	jmp L_29974
.p2align 0x4
.long 0x88C
L_29928:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r15
	movq %r15,0x20(%rbp)
L_29929:
	movq %r15,0xA0(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0xA8(%rbp)
	addq $0xA0,%rbp
	leaq (L_29763+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_24
.p2align 0x4
.long 0x88C
L_29931:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0xA8(%rbp),%r14
	movq %r14,0x28(%rbp)
	jmp L_29929
.p2align 0x4
.long 0x88B
L_29910:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq %r15,0xA0(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0xA8(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0xB0(%rbp)
	addq $0xA0,%rbp
	leaq (L_29763+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1265
.p2align 0x4
.long 0x887
L_29859:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_29860
L_29903:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_29904+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_29904
.p2align 0x4
.long 0x886
L_29904:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_29860:
	movq $0x11B5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x2543,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x28(%rbp),%r13
	cmpq $0x1,%r13
	je L_385138
L_29861:
	movq %r14,0x30(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x28(%rbp)
	jmp L_29858
.p2align 0x4
L_385138:
L_29862:
	movq %r14,0x28(%rbp)
	jmp L_29863
.p2align 0x4
.long 0x888
L_29864:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x8(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1446,%r15
	jne L_29725
L_29865:
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r13
	movl 0x0(%r13),%r11d
	testl %r11d,%r11d
	jnz L_385140
L_29866:
	movq 0x20(%rbp),%r15
	movq %r15,0xA0(%rbp)
	addq $0xA0,%rbp
	leaq (L_29867+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_1
.p2align 0x4
L_385140:
L_29902:
	movq (globalObjptr+0x1BC8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x87E
L_29779:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_29780
L_29853:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_29854+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_29854
.p2align 0x4
.long 0x886
L_29854:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_29780:
	movq $0x11B5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x2543,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x28(%rbp),%r13
	cmpq $0x1,%r13
	je L_385142
L_29781:
	movq %r14,0x30(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x28(%rbp)
	jmp L_29778
.p2align 0x4
L_385142:
L_29782:
	movq %r14,0x28(%rbp)
	jmp L_29783
.p2align 0x4
.long 0x87F
L_29784:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq $0x1,%r15
	je L_385166
L_29785:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x20(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq %r14,0x28(%rbp)
.p2align 0x4,,0x7
L_29786:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_385165
.p2align 0x4,,0x7
L_29787:
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r14
	movq $0x1CED,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r13,0x0(%r15)
	movq 0x8(%r13),%r11
	movl 0x4(%r11),%r10d
	testl %r10d,%r10d
	jnz L_385164
L_29788:
	movq $0x2,%r13
L_29789:
	movq $0x13,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq $0x1,0x0(%r11)
	movq 0x38(%rbp),%r10
	movq 0x0(%r10),%r9
	movq $0x1F7,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r9,0x0(%r10)
	addq $0x10,%r12
	movq $0xFFF,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r15,0x0(%r9)
	movq %r10,0x8(%r9)
	movq %r11,0x10(%r9)
	movq %r13,0x18(%r9)
	addq $0x28,%r12
	movq $0x2891,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r9,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x16B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x10,%r12
	movq $0x11B5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq $0x2543,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je L_385144
L_29790:
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x20(%rbp)
	movq %r14,0x28(%rbp)
	jmp L_29786
.p2align 0x4
L_385144:
L_29791:
	xchgq %r14,%r15
L_29792:
	cmpq $0x1,%r15
	je L_385163
L_29793:
	movq %r15,%r14
	movq 0x8(%r15),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_29794:
	incl %ecx
	jo L_29733
L_29795:
	cmpq $0x1,%r15
	je L_385145
L_29796:
	movq 0x8(%r15),%r15
	jmp L_29794
.p2align 0x4
L_385145:
L_29797:
	movq %r14,0x20(%rbp)
L_29798:
	movslq %ecx,%rdx
	movq %rdx,0x28(%rbp)
	cmpq $0x7FFFFFFF,%rdx
	ja L_385161
L_29799:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xAB9,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_29800+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_29800
.p2align 0x4
.long 0x880
L_29800:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq %rax,0x30(%rbp)
	movq 0x20(%rbp),%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_418:
	cmpq 0x28(%rbp),%r15
	jnl L_385147
L_29844:
	cmpq $0x1,%r14
	je L_385146
L_29845:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq 0x30(%rbp),%r11
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r13,0x0(%r11,%r15,8)
	incq %r15
	jmp loop_418
.p2align 0x4
L_385146:
L_29846:
	movq (globalObjptr+0x4B0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_385147:
L_29801:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_29802
L_29842:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_29843+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_29843
.p2align 0x4
.long 0x883
L_29843:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_29802:
	movq 0x28(%rbp),%r15
	movl %r15d,%r14d
	movl %r14d,0x20(%rbp)
	movslq %r14d,%r13
	cmpq %r15,%r13
	jne L_29759
L_29804:
	testl %r14d,%r14d
	jz L_385158
L_29805:
	movq $0x16F3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x38(%rbp)
	addq $0x18,%r12
	movq 0x30(%rbp),%r11
	movq %r11,0x0(%r13)
	movq %r11,0x8(%r13)
	cmpq $0x0,%r15
	jna L_29807
L_29808:
	movq 0x0(%r11),%r15
	cmpl $0x0,%r14d
	jl L_385156
L_29809:
	movq %r15,0x48(%rbp)
	movl $0x0,0x24(%rbp)
	movl $0x0,0x50(%rbp)
.p2align 0x4,,0x7
loop_419:
	movl 0x50(%rbp),%ecx
	cmpl 0x20(%rbp),%ecx
	jnl L_385152
L_29826:
	movslq %ecx,%r15
	movq 0x30(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x58(%rbp)
	movq 0x8(%r13),%r14
	movq 0x48(%rbp),%r11
	movq 0x8(%r11),%r10
	movq %r14,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	je L_385149
L_29827:
	movq %r10,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	jne L_385148
L_29834:
	movq %r13,%r15
.p2align 0x4,,0x7
L_29832:
	movq %r15,0x48(%rbp)
	movl %ecx,0x24(%rbp)
	incl 0x50(%rbp)
	jmp loop_419
.p2align 0x4
L_385148:
L_29828:
	movq %r10,0xA0(%rbp)
	movq %r14,0xA8(%rbp)
	addq $0xA0,%rbp
	leaq (L_29829+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1216
.p2align 0x4
L_385149:
L_29835:
	shrq $0x1,%r14
	movl %r14d,%r11d
	movq %r10,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	jne L_385151
L_29837:
	shrq $0x1,%r10
	movl %r10d,%r14d
	cmpl %r11d,%r14d
	jl L_385150
L_29838:
	movq 0x48(%rbp),%r15
	movl 0x24(%rbp),%r14d
	xchgl %r14d,%ecx
	jmp L_29832
.p2align 0x4
L_385150:
.p2align 0x4,,0x7
L_29831:
	movq 0x58(%rbp),%r15
	movl 0x50(%rbp),%ecx
	jmp L_29832
.p2align 0x4
L_385151:
L_29836:
	movq 0x48(%rbp),%r15
	movl 0x24(%rbp),%r14d
	xchgl %r14d,%ecx
	jmp L_29832
.p2align 0x4
L_385152:
L_29810:
	movl 0x20(%rbp),%r15d
	decl %r15d
	movslq 0x24(%rbp),%r14
	movq 0x28(%rbp),%r13
	cmpq %r13,%r14
	jnb L_29807
L_29812:
	movq 0x30(%rbp),%r11
	movq 0x0(%r11,%r14,8),%r10
	movslq %r15d,%r9
	cmpq %r13,%r9
	jnb L_385154
L_29814:
	movq 0x0(%r11,%r9,8),%r13
	movq %r11,%r8
	shrq $0x8,%r8
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r8,1)
	movq %r13,0x0(%r11,%r14,8)
	movq %r11,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%rsp,%r14,1)
	movq %r10,0x0(%r11,%r9,8)
	decl %r15d
	jo L_29733
L_29815:
	movl %r15d,0xA0(%rbp)
	movl $0x0,0xA4(%rbp)
	movb $0x0,0xA8(%rbp)
	movq %r11,0xB0(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0xB8(%rbp)
	addq $0xA0,%rbp
	leaq (L_29816+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp qsort_8
.p2align 0x4
L_385154:
L_29807:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_385156:
L_29840:
	movq (globalObjptr+0x4F8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_385158:
L_29820:
	movq $0x3ABD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0xA0(%rbp)
	movl 0x20(%rbp),%r15d
	movl %r15d,0xA8(%rbp)
	addq $0xA0,%rbp
	leaq (L_29821+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_14
.p2align 0x4
L_385161:
L_29847:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_385163:
L_29848:
	movq %r15,0x20(%rbp)
	xorl %ecx,%ecx
	jmp L_29798
.p2align 0x4
L_385164:
L_29849:
	movq $0x1,%r13
	jmp L_29789
.p2align 0x4
L_385165:
L_29850:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_29851+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_29851
.p2align 0x4
.long 0x885
L_29851:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	jmp L_29787
.p2align 0x4
L_385166:
L_29852:
	movq 0x28(%rbp),%r14
	xchgq %r14,%r15
	jmp L_29792
.p2align 0x4
.long 0x879
L_29770:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_29771
L_29774:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_29775+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_29775
.p2align 0x4
.long 0x87D
L_29775:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_29771:
	movq 0x20(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_29759
L_29773:
	movl %r13d,0xA8(%rbp)
	movq $0x3ABF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq %r14,0xA0(%rbp)
	addq $0xA0,%rbp
	leaq (L_29761+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_14
.p2align 0x4
.long 0x879
L_29761:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r14
	movq %r14,0x20(%rbp)
	movq 0x48(%rbp),%r15
x_58:
	movq %r14,0xA0(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	addq $0xA0,%rbp
	leaq (L_29762+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromVector_0
.p2align 0x4
.long 0x88F
L_29948:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq $0x1,0xA0(%rbp)
	movl $0x0,0xA8(%rbp)
	addq $0xA0,%rbp
	leaq (L_29949+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_1
.p2align 0x4
.long 0x890
L_29989:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq %r15,0xA0(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0xA8(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0xB0(%rbp)
	addq $0xA0,%rbp
	leaq (L_29950+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp con_2
.p2align 0x4
.long 0x88F
L_29977:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq $0x1,0xA0(%rbp)
	movl $0x0,0xA8(%rbp)
	addq $0xA0,%rbp
	leaq (L_29978+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_1
.p2align 0x4
.long 0x890
L_29967:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq %r15,0xA0(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0xA8(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0xB0(%rbp)
	addq $0xA0,%rbp
	leaq (L_29950+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp con_2
.p2align 0x4
.long 0x87B
L_29763:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_29764
L_29765:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_29766+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_29766
.p2align 0x4
.long 0x87C
L_29766:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_29764:
	movq 0x20(%rbp),%r15
	jmp L_29753
.p2align 0x4
.long 0x889
L_29867:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r15,0x20(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1446,%r15
	jne L_29725
L_29868:
	movq 0x8(%r14),%r15
	movq 0x8(%r15),%r13
	cmpq $0x1,%r13
	je L_385182
L_29869:
	movq 0x8(%r13),%r15
	movq %r15,0x20(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x30(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x38(%rbp)
.p2align 0x4,,0x7
L_29870:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_385181
.p2align 0x4,,0x7
L_29871:
	movq 0x28(%rbp),%r13
	cmpq $0x1,%r13
	je L_29880
L_29872:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
.p2align 0x4,,0x7
L_29873:
	movq 0x8(%r15),%r13
	movq 0x30(%rbp),%r15
	movq %r15,%r11
	andq $0x1,%r11
	cmpq $0x1,%r11
	je L_385177
L_29874:
L_29875:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_29876
L_29888:
	movq 0x8(%r13),%r11
	cmpq %r11,0x8(%r15)
	je L_385174
L_29876:
	cmpq $0x1,%r14
	je L_385170
L_29877:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_29873
.p2align 0x4
L_385170:
L_29878:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_385173
.p2align 0x4,,0x7
L_29880:
	movq $0x11B5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x2543,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x38(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je L_385171
L_29881:
	movq %r14,0x38(%rbp)
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x20(%rbp)
	movq %r14,0x30(%rbp)
	jmp L_29870
.p2align 0x4
L_385171:
L_29882:
	xchgq %r14,%r15
L_29883:
	cmpq $0x1,%r15
	je L_385172
L_29884:
	movq %r15,%r14
	movq 0x8(%r15),%r15
	xorl %ecx,%ecx
	jmp L_29794
.p2align 0x4
L_385172:
L_29885:
	movq %r15,0x20(%rbp)
	xorl %ecx,%ecx
	jmp L_29798
.p2align 0x4
L_385173:
L_29886:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_29887+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_29887
.p2align 0x4
.long 0x88A
L_29887:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	jmp L_29880
.p2align 0x4
L_385174:
L_29891:
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je L_385175
L_29892:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x20(%rbp)
	movq %r14,0x30(%rbp)
	jmp L_29870
.p2align 0x4
L_385175:
L_29893:
	movq 0x38(%rbp),%r14
	xchgq %r14,%r15
	jmp L_29883
.p2align 0x4
L_385177:
L_29894:
	shrq $0x1,%r15
	movl %r15d,%r11d
	movq %r13,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	jne L_29876
L_29895:
	shrq $0x1,%r13
	movl %r13d,%r15d
	cmpl %r15d,%r11d
	je L_29891
	jmp L_29876
.p2align 0x4
L_385181:
L_29899:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_29900+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_29900
.p2align 0x4
.long 0x88A
L_29900:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	jmp L_29871
.p2align 0x4
L_385182:
L_29901:
	movq 0x28(%rbp),%r15
	jmp L_29883
.p2align 0x4
.long 0x884
L_29829:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movl 0xA0(%rbp),%r14d
	movl %r14d,0x54(%rbp)
	testl %r14d,%r14d
	jz L_29831
L_29833:
	movq 0x48(%rbp),%r15
	movl 0x24(%rbp),%ecx
	jmp L_29832
.p2align 0x4
.long 0x881
L_29816:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_29817
L_29824:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_29825+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_29825
.p2align 0x4
.long 0x883
L_29825:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_29817:
	movq $0x3D03,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movb $0x0,%r14b
	movzbl %r14b,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r14,0x10(%r15)
	movq %r15,0xA0(%rbp)
	movl 0x20(%rbp),%r15d
	movl %r15d,0xA8(%rbp)
	movl $0x1,0xAC(%rbp)
	addq $0xA0,%rbp
	leaq (L_29818+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fold_0
.p2align 0x4
.long 0x882
L_29821:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r14
	movq %r14,0x20(%rbp)
	movq 0x40(%rbp),%r15
	jmp x_58
.p2align 0x4
.long 0x87A
L_29762:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq %r15,0xA0(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0xA8(%rbp)
	addq $0xA0,%rbp
	leaq (L_29763+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp record_4
.p2align 0x4
.long 0x890
L_29949:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq %r15,0xA0(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0xA8(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0xB0(%rbp)
	addq $0xA0,%rbp
	leaq (L_29950+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp con_2
.p2align 0x4
.long 0x891
L_29950:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq $0x7,0xA0(%rbp)
	movq 0x0(%rbp),%r14
	movq %r14,0xA8(%rbp)
	movq %r15,0xB0(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0xB8(%rbp)
	addq $0xA0,%rbp
	leaq (L_29951+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unify_1
.p2align 0x4
.long 0x890
L_29978:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq %r15,0xA0(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0xA8(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0xB0(%rbp)
	addq $0xA0,%rbp
	leaq (L_29950+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp con_2
.p2align 0x4
.long 0x881
L_29818:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_29820
L_29822:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_29823+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_29823
.p2align 0x4
.long 0x883
L_29823:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	jmp L_29820
.p2align 0x4
.long 0x892
L_29951:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r15
	movq %r15,0x20(%rbp)
	movb 0x8(%rbp),%r15b
	movb %r15b,0xA0(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0xA8(%rbp)
	addq $0xA0,%rbp
	leaq (L_29952+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp defaultTycon_0
.p2align 0x4
.long 0x893
L_29952:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq $0x1,0xA0(%rbp)
	movl $0x0,0xA8(%rbp)
	addq $0xA0,%rbp
	leaq (L_29953+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_1
.p2align 0x4
.long 0x894
L_29953:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq %r15,0xA0(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0xA8(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0xB0(%rbp)
	addq $0xA0,%rbp
	leaq (L_29763+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1265
.text
.p2align 0x4
.globl fromVector_0
.hidden fromVector_0
fromVector_0:
L_30008:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_30009
L_30084:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_30085+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_30085
.p2align 0x4
.long 0x451
L_30085:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_30009:
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r15d
	movslq %r15d,%rdx
	movq %rdx,0x10(%rbp)
	cmpq %rdx,%r14
	movq %r14,0x8(%rbp)
	jne L_30011
L_30012:
	cmpq $0x7FFFFFFF,%rdx
	ja L_385202
L_30013:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xAB9,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_30014+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_30014
.p2align 0x4
.long 0x452
L_30014:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq %rax,0x18(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_420:
	cmpq 0x10(%rbp),%r15
	jnl L_385188
L_30080:
	movl %r15d,%r14d
	movslq %r14d,%r13
	cmpq 0x8(%rbp),%r13
	jnb L_385187
L_30082:
	movq 0x0(%rbp),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq 0x18(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r11,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_420
.p2align 0x4
L_385187:
L_30021:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_385188:
L_30015:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_30016
L_30078:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_30079+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_30079
.p2align 0x4
.long 0x27
L_30079:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_30016:
	movq 0x10(%rbp),%r15
	movl %r15d,%r14d
	movl %r14d,0x20(%rbp)
	movslq %r14d,%r13
	cmpq %r15,%r13
	jne L_385200
L_30018:
	testl %r14d,%r14d
	jz L_385199
L_30019:
	movq $0x16F3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x28(%rbp)
	addq $0x18,%r12
	movq 0x18(%rbp),%r11
	movq %r11,0x0(%r13)
	movq %r11,0x8(%r13)
	cmpq $0x0,%r15
	jna L_30021
L_30022:
	movq 0x0(%r11),%r15
	cmpl $0x0,%r14d
	jl L_385197
L_30023:
	movq %r15,0x30(%rbp)
	movl $0x0,0x24(%rbp)
	movl $0x0,0x38(%rbp)
.p2align 0x4,,0x7
loop_421:
	movl 0x38(%rbp),%ecx
	cmpl 0x20(%rbp),%ecx
	jnl L_385193
L_30062:
	movslq %ecx,%r15
	movq 0x18(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x40(%rbp)
	movq 0x8(%r13),%r14
	movq 0x30(%rbp),%r11
	movq 0x8(%r11),%r10
	movq %r14,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	je L_385190
L_30063:
	movq %r10,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	jne L_385189
L_30070:
	movq %r13,%r15
.p2align 0x4,,0x7
L_30068:
	movq %r15,0x30(%rbp)
	movl %ecx,0x24(%rbp)
	incl 0x38(%rbp)
	jmp loop_421
.p2align 0x4
L_385189:
L_30064:
	movq %r10,0x50(%rbp)
	movq %r14,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_30065+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1216
.p2align 0x4
L_385190:
L_30071:
	shrq $0x1,%r14
	movl %r14d,%r11d
	movq %r10,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	jne L_385192
L_30073:
	shrq $0x1,%r10
	movl %r10d,%r14d
	cmpl %r11d,%r14d
	jl L_385191
L_30074:
	movq 0x30(%rbp),%r15
	movl 0x24(%rbp),%r14d
	xchgl %r14d,%ecx
	jmp L_30068
.p2align 0x4
L_385191:
.p2align 0x4,,0x7
L_30067:
	movq 0x40(%rbp),%r15
	movl 0x38(%rbp),%ecx
	jmp L_30068
.p2align 0x4
L_385192:
L_30072:
	movq 0x30(%rbp),%r15
	movl 0x24(%rbp),%r14d
	xchgl %r14d,%ecx
	jmp L_30068
.p2align 0x4
L_385193:
L_30024:
	movl 0x20(%rbp),%r15d
	decl %r15d
	movslq 0x24(%rbp),%r14
	movq 0x10(%rbp),%r13
	cmpq %r13,%r14
	jnb L_30021
L_30026:
	movq 0x18(%rbp),%r11
	movq 0x0(%r11,%r14,8),%r10
	movslq %r15d,%r9
	cmpq %r13,%r9
	jnb L_30021
L_30028:
	movq 0x0(%r11,%r9,8),%r13
	movq %r11,%r8
	shrq $0x8,%r8
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r8,1)
	movq %r13,0x0(%r11,%r14,8)
	movq %r11,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%rsp,%r14,1)
	movq %r10,0x0(%r11,%r9,8)
	decl %r15d
	jo L_385194
L_30030:
	movl %r15d,0x30(%rbp)
	movl $0x0,0x34(%rbp)
	movb $0x1,0x38(%rbp)
	movq %r11,0x40(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x30,%rbp
	leaq (L_30031+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp qsort_8
.p2align 0x4
L_385194:
L_30029:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_385197:
L_30076:
	movq (globalObjptr+0x4F8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_385199:
L_30035:
	movq $0x3ABD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x8(%rbp)
	movl 0x20(%rbp),%r15d
	movl %r15d,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_30036+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_14
.p2align 0x4
L_385200:
L_30011:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_385202:
L_30083:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x898
L_30065:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movl 0x50(%rbp),%r14d
	movl %r14d,0x3C(%rbp)
	testl %r14d,%r14d
	jz L_30067
L_30069:
	movq 0x30(%rbp),%r15
	movl 0x24(%rbp),%ecx
	jmp L_30068
.p2align 0x4
.long 0x897
L_30031:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_30032
L_30060:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_30061+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_30061
.p2align 0x4
.long 0x49C
L_30061:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_30032:
	movq $0x3D03,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movb $0x1,%r14b
	movzbl %r14b,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r14,0x10(%r15)
	movq %r15,0x30(%rbp)
	movl 0x20(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	movl $0x1,0x3C(%rbp)
	addq $0x30,%rbp
	leaq (L_30033+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fold_0
.p2align 0x4
.long 0x1
L_30036:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r14d
	movl %r14d,0x8(%rbp)
	movslq %r14d,%r13
	cmpq %r15,%r13
	jne L_30011
L_30038:
	xorl %ecx,%ecx
.p2align 0x4,,0x7
loop_422:
	cmpl 0x8(%rbp),%ecx
	je L_385212
L_30039:
	movslq %ecx,%r14
	cmpq %r15,%r14
	jnb L_30021
L_30041:
	movq 0x0(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r11
	movq 0x8(%r11),%r10
	movq %r10,%r14
	andq $0x1,%r14
	cmpq $0x1,%r14
	jne L_30042
L_30046:
	shrq $0x1,%r10
	movl %r10d,%r14d
	cmpl %r14d,%ecx
	jne L_385208
L_30048:
	incl %ecx
	jo L_30029
L_30049:
	jmp loop_422
.p2align 0x4
L_385208:
L_30042:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_30043
L_30044:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_30045+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_30045
.p2align 0x4
.long 0x451
L_30045:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_30043:
	movq $0x24FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_385212:
L_30050:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_30051
L_30056:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_30057+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_30057
.p2align 0x4
.long 0x457
L_30057:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_30051:
	movq $0x3EC5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movl 0x8(%rbp),%r14d
	movl %r14d,0x10(%rbp)
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_30052+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_1
.p2align 0x4
.long 0x897
L_30033:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_30035
L_30058:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_30059+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_30059
.p2align 0x4
.long 0x49C
L_30059:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	jmp L_30035
.p2align 0x4
.long 0x1
L_30052:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_30053
L_30054:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_30055+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_30055
.p2align 0x4
.long 0x451
L_30055:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_30053:
	movq $0x2501,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl qsort_8
.hidden qsort_8
qsort_8:
L_30086:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb loop_423
L_30176:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_30177+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_30177
.p2align 0x4
.long 0x2C
L_30177:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
loop_423:
	movl 0x0(%rbp),%r15d
	subl 0x4(%rbp),%r15d
	jo L_30088
L_30089:
	cmpl $0x14,%r15d
	jng L_385218
L_30091:
	movq (globalObjptr+0x550)(%rip),%r14
	movl 0x0(%r14),%r13d
	imull $0x19660D,%r13d
	addl $0x3C6EF35F,%r13d
	movl %r13d,0xC(%rbp)
	movl %r13d,0x0(%r14)
	incl %r15d
	movl %r15d,0x20(%rbp)
	jo L_385217
L_30092:
	movl %r15d,0x30(%rbp)
	movl %r13d,0x34(%rbp)
	addq $0x30,%rbp
	leaq (L_30093+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp div_0
.p2align 0x4
L_385217:
L_30088:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_385218:
L_30090:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x609
L_30093:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movl 0x30(%rbp),%r15d
	movl %r15d,0x24(%rbp)
	movl 0x20(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	movl 0xC(%rbp),%r15d
	movl %r15d,0x2C(%rbp)
	addq $0x28,%rbp
	leaq (L_30094+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp mod_0
.p2align 0x4
.long 0x490
L_30094:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl 0x28(%rbp),%r15d
	movl 0x4(%rbp),%ecx
	movl %ecx,%r14d
	addl %r15d,%r14d
	movl %r15d,0xC(%rbp)
	jo L_30088
L_30095:
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x0(%r15),%r11
	movq %r11,0x28(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movq %r15,0x30(%rbp)
	movslq %ecx,%r10
	movq %r10,0x38(%rbp)
	cmpq %r15,%r10
	jnb L_30097
L_30098:
	movq 0x0(%r13,%r10,8),%r9
	movslq %r14d,%r8
	cmpq %r15,%r8
	jnb L_30097
L_30100:
	movq 0x0(%r13,%r8,8),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r14
	movq %r14,0x40(%rbp)
	cmpq %r14,%r10
	jnb L_30097
L_30102:
	movq %r11,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r13,1)
	movq %r15,0x0(%r11,%r10,8)
	cmpq %r14,%r8
	jnb L_30097
L_30104:
	movq %r11,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%rsp,%r15,1)
	movq %r9,0x0(%r11,%r8,8)
	movq 0x10(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq %r14,0x48(%rbp)
	cmpq %r14,%r10
	jnb L_30097
L_30106:
	movq 0x0(%r15,%r10,8),%r14
	movq %r14,0x50(%rbp)
	movl 0x0(%rbp),%r15d
	incl %r15d
	jo L_30088
L_30107:
	movl %r15d,0xC(%rbp)
.p2align 0x4,,0x7
loop_425:
	incl %ecx
	movl %ecx,0x58(%rbp)
	jo L_30088
L_30108:
	movslq %ecx,%r15
	movq %r15,0x60(%rbp)
	cmpq 0x48(%rbp),%r15
	jnb L_30097
L_30110:
	movq 0x10(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movb 0x8(%rbp),%r15b
	testb %r15b,%r15b
	jnz L_385243
L_30111:
	movq 0x50(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x8(%r13),%r15
	movq %r14,%r13
	andq $0x1,%r13
	cmpq $0x1,%r13
	je L_385221
L_30112:
	movq %r15,%r13
	andq $0x1,%r13
	cmpq $0x1,%r13
	jne L_385220
L_30161:
	jmp loop_425
.p2align 0x4
L_385220:
L_30113:
	movq %r15,0x70(%rbp)
	movq %r14,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_30114+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1216
.p2align 0x4
L_385221:
L_30162:
	shrq $0x1,%r14
	movl %r14d,%r13d
	movq %r15,%r14
	andq $0x1,%r14
	cmpq $0x1,%r14
	jne L_385242
L_30164:
	shrq $0x1,%r15
	movl %r15d,%r14d
	cmpl %r13d,%r14d
	jl L_385241
.p2align 0x4,,0x7
L_30118:
	movl 0xC(%rbp),%ecx
.p2align 0x4,,0x7
loop_426:
	decl %ecx
	movl %ecx,0xC(%rbp)
	jo L_30088
L_30119:
	movslq %ecx,%r15
	movq %r15,0x68(%rbp)
	cmpq 0x48(%rbp),%r15
	jnb L_30097
L_30121:
	movq 0x10(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movb 0x8(%rbp),%r15b
	testb %r15b,%r15b
	jnz L_385234
L_30122:
	movq 0x8(%r13),%r15
	movq 0x50(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r15,%r14
	andq $0x1,%r14
	cmpq $0x1,%r14
	je L_385223
L_30123:
	movq %r13,%r14
	andq $0x1,%r14
	cmpq $0x1,%r14
	jne L_385222
L_30146:
	jmp loop_426
.p2align 0x4
L_385222:
L_30124:
	movq %r13,0x78(%rbp)
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_30125+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1216
.p2align 0x4
L_385223:
L_30147:
	shrq $0x1,%r15
	movl %r15d,%r14d
	movq %r13,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	jne L_30129
L_30149:
	shrq $0x1,%r13
	movl %r13d,%r15d
	cmpl %r14d,%r15d
	jl L_385232
.p2align 0x4,,0x7
L_30129:
	movl 0x58(%rbp),%ecx
	cmpl %ecx,0xC(%rbp)
	jl L_385228
L_30130:
	movq 0x60(%rbp),%r15
	movq 0x30(%rbp),%r14
	cmpq %r14,%r15
	jnb L_30097
L_30132:
	movq 0x20(%rbp),%r13
	movq 0x0(%r13,%r15,8),%r11
	movq 0x68(%rbp),%r10
	cmpq %r14,%r10
	jnb L_30097
L_30134:
	movq 0x0(%r13,%r10,8),%r14
	movq 0x40(%rbp),%r13
	cmpq %r13,%r15
	jnb L_30097
L_30136:
	movq 0x28(%rbp),%r9
	movq %r9,%r8
	shrq $0x8,%r8
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r8,1)
	movq %r14,0x0(%r9,%r15,8)
	cmpq %r13,%r10
	jnb L_385224
L_30138:
	movq %r9,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%rsp,%r15,1)
	movq %r11,0x0(%r9,%r10,8)
	jmp loop_425
.p2align 0x4
L_385224:
L_30097:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_385228:
L_30139:
	movq 0x20(%rbp),%r15
	movq 0x38(%rbp),%r14
	movq 0x0(%r15,%r14,8),%r13
	movq 0x68(%rbp),%r11
	cmpq 0x30(%rbp),%r11
	jnb L_30097
L_30141:
	movq 0x0(%r15,%r11,8),%r10
	movq 0x28(%rbp),%r15
	movq %r15,%r9
	shrq $0x8,%r9
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r9,1)
	movq %r10,0x0(%r15,%r14,8)
	cmpq 0x40(%rbp),%r11
	jnb L_30097
L_30143:
	movq %r15,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r8,%r14,1)
	movq %r13,0x0(%r15,%r11,8)
	movl 0xC(%rbp),%r15d
	decl %r15d
	jo L_30088
L_30144:
	movl %r15d,0x68(%rbp)
	movl 0x4(%rbp),%r15d
	movl %r15d,0x6C(%rbp)
	movb 0x8(%rbp),%r15b
	movb %r15b,0x70(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x68,%rbp
	leaq (L_30145+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp qsort_8
.p2align 0x4
L_385232:
.p2align 0x4,,0x7
L_30127:
	movl 0xC(%rbp),%ecx
	jmp loop_426
.p2align 0x4
L_385234:
L_30152:
	movq 0x8(%r13),%r15
	movq 0x50(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r15,%r14
	andq $0x1,%r14
	cmpq $0x1,%r14
	je L_385236
L_30153:
	movq %r13,%r14
	andq $0x1,%r14
	cmpq $0x1,%r14
	jne L_385235
L_30155:
	jmp loop_426
.p2align 0x4
L_385235:
L_30154:
	movq %r13,0x78(%rbp)
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_30125+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1216
.p2align 0x4
L_385236:
L_30156:
	shrq $0x1,%r15
	movl %r15d,%r14d
	movq %r13,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	jne L_30129
L_30158:
	shrq $0x1,%r13
	movl %r13d,%r15d
	cmpl %r14d,%r15d
	jnl L_30129
L_30160:
	jmp loop_426
.p2align 0x4
L_385241:
.p2align 0x4,,0x7
L_30116:
	movl 0x58(%rbp),%ecx
	jmp loop_425
.p2align 0x4
L_385242:
L_30163:
	movl 0xC(%rbp),%r15d
	xchgl %r15d,%ecx
	jmp loop_426
.p2align 0x4
L_385243:
L_30167:
	movq 0x50(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x8(%r13),%r15
	movq %r14,%r13
	andq $0x1,%r13
	cmpq $0x1,%r13
	je L_385245
L_30168:
	movq %r15,%r13
	andq $0x1,%r13
	cmpq $0x1,%r13
	jne L_385244
L_30170:
	jmp loop_425
.p2align 0x4
L_385244:
L_30169:
	movq %r15,0x70(%rbp)
	movq %r14,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_30114+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1216
.p2align 0x4
L_385245:
L_30171:
	shrq $0x1,%r14
	movl %r14d,%r13d
	movq %r15,%r14
	andq $0x1,%r14
	cmpq $0x1,%r14
	jne L_385247
L_30173:
	shrq $0x1,%r15
	movl %r15d,%r14d
	cmpl %r13d,%r14d
	jl loop_425
L_30174:
	movl 0xC(%rbp),%r15d
	xchgl %r15d,%ecx
	jmp loop_426
.p2align 0x4
L_385247:
L_30172:
	movl 0xC(%rbp),%r15d
	xchgl %r15d,%ecx
	jmp loop_426
.p2align 0x4
.long 0x60A
L_30114:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movl 0x70(%rbp),%r15d
	movl %r15d,0x5C(%rbp)
	testl %r15d,%r15d
	jnz L_30118
	jmp L_30116
.p2align 0x4
.long 0x60B
L_30125:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movl 0x78(%rbp),%r15d
	movl %r15d,0x5C(%rbp)
	testl %r15d,%r15d
	jnz L_30129
	jmp L_30127
.p2align 0x4
.long 0x60C
L_30145:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movl 0x58(%rbp),%r15d
	movl %r15d,0x4(%rbp)
	jmp loop_423
.text
.p2align 0x4
.globl x_1265
.hidden x_1265
x_1265:
L_30178:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_30220
L_30179:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_385276
L_30180:
	movq 0x10(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1F72,%r14
	je L_385259
L_30219:
	movq 0x0(%r15),%r15
	movq %r15,0x10(%rbp)
	jmp con_2
.p2align 0x4
L_385259:
L_30181:
	movq 0x10(%r15),%r11
	movq %r11,0x18(%rbp)
	movq 0x8(%r15),%r11
	movq %r11,0x20(%rbp)
	movq 0x0(%r15),%r11
	movq 0x10(%r11),%r10
	movq %r10,0x28(%rbp)
	movq 0x8(%r11),%r10
	movq %r10,0x30(%rbp)
	movq 0x0(%r11),%r14
	movq 0x8(%rbp),%r11
	movq 0x10(%r11),%r10
	movq %r10,0x38(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_385275
L_30183:
	movq %r15,0x0(%r11)
	movq 0x0(%r10),%r11
	cmpq $0x1,%r11
	je L_385274
L_30184:
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r11
	movl $0x0,0x10(%rbp)
	movq %r11,%r15
.p2align 0x4,,0x7
L_30186:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_385273
L_30208:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xD8B,%r11
	jne L_385272
L_30209:
	movq 0x8(%r13),%r11
	movq %r11,0x40(%rbp)
	cmpq 0x0(%r13),%r14
	movq %r14,(localObjptr+0x8)(%rip)
	je L_385268
L_30187:
	movl 0x10(%rbp),%r11d
	incl %r11d
	movl %r11d,0x14(%rbp)
	jo L_385267
L_30189:
	cmpq $0x1,%r15
	je L_385260
L_30190:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movl %r11d,0x10(%rbp)
	movq (localObjptr+0x8)(%rip),%r14
	jmp L_30186
.p2align 0x4
L_385260:
L_30191:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_30192
L_30206:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_30207+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_30207
.p2align 0x4
.long 0x563
L_30207:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_30192:
	movl 0x14(%rbp),%ecx
L_30193:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_385265
L_30195:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_30197
L_30205:
	movl %ecx,0x0(%r15)
L_30197:
	movq 0x30(%rbp),%r14
	movq 0x0(%r14),%r15
	movq $0x28DD,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x38(%rbp),%r11
	movq %r11,0x0(%r13)
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r15,1)
	movq %r13,0x0(%r14)
	movq $0x1313,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x1B17,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x0(%r11),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r14,0x0(%r9)
	movq %r13,0x8(%r9)
	addq $0x18,%r12
	movq %r11,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r10,%r14,1)
	movq %r9,0x0(%r11)
L_30198:
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_385263
L_30199:
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq 0x8(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1051,%r14
	je L_385262
	cmpq $0x1052,%r14
	je L_385261
L_30200:
	movq %r13,0x10(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x8(%rbp)
	jmp con_2
.p2align 0x4
L_385261:
L_30203:
	movq %r13,0x10(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x8(%rbp)
	jmp con_2
.p2align 0x4
L_385262:
L_30201:
	movq %r11,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	movq $0x3EE1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_30202+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp instantiateP_0
.p2align 0x4
L_385263:
L_30204:
	movq 0x20(%rbp),%r15
	movq %r15,0x10(%rbp)
	jmp con_2
.p2align 0x4
L_385265:
L_30194:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_385267:
L_30188:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_385268:
L_30211:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_30212
L_30216:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_30217+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_30217
.p2align 0x4
.long 0x59D
L_30217:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_30212:
	movl 0x10(%rbp),%r14d
	movslq %r14d,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_30194
L_30213:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %r14d,0x0(%r13)
	jl L_385269
L_30214:
	movq 0x40(%rbp),%r15
	jmp L_30198
.p2align 0x4
L_385269:
L_30215:
	movq (globalObjptr+0x1078)(%rip),%r14
	movl 0x10(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movq 0x40(%rbp),%r15
	jmp L_30198
.p2align 0x4
L_385272:
	movq %r14,(localObjptr+0x8)(%rip)
	jmp L_30187
.p2align 0x4
L_385273:
	movq %r14,(localObjptr+0x8)(%rip)
	jmp L_30187
.p2align 0x4
L_385274:
L_30218:
	xorl %ecx,%ecx
	jmp L_30193
.p2align 0x4
L_385275:
L_30182:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_385276:
L_30220:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_30221+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_30221
.p2align 0x4
.long 0x45B
L_30221:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_30180
.p2align 0x4
.long 0x1
L_30202:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl defaultTycon_0
.hidden defaultTycon_0
defaultTycon_0:
L_30222:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_30223
L_30257:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_30258+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_30258
.p2align 0x4
.long 0x494
L_30258:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_30223:
	movq 0x8(%rbp),%r15
	movq 0x18(%r15),%r14
	movq 0x10(%r15),%r13
	movq 0x8(%r15),%r11
	movq 0x0(%r15),%r10
	movb 0x0(%rbp),%r15b
	cmpb $0x1,%r15b
	je L_385284
	cmpb $0x2,%r15b
	je L_385283
	cmpb $0x3,%r15b
	je L_385278
L_30224:
	movq %r13,0x0(%rbp)
	jmp defaultWord_0
.p2align 0x4
L_385278:
L_30246:
	movq 0x8(%r10),%r14
	movq 0x0(%r10),%r9
	movq 0x0(%r9),%r15
	cmpq %r15,(globalObjptr+0xCA68)(%rip)
	je L_385282
L_30247:
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r13
	cmpq $0x5,%r13
	jne L_30249
L_30250:
	xorq %r11,%r11
.p2align 0x4,,0x7
vectorEqualLoop_111:
	cmpq %r13,%r11
	je L_385280
L_30251:
	movq (globalObjptr+0xCA68)(%rip),%r9
	movb 0x0(%r9,%r11,1),%r10b
	cmpb %r10b,0x0(%r15,%r11,1)
	jne L_385279
L_30253:
	incq %r11
	jmp vectorEqualLoop_111
.p2align 0x4
L_385279:
L_30249:
	movq (globalObjptr+0x18C8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_385280:
	movq %r14,%r15
L_30255:
	movq 0x0(%r15),%r14
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_385282:
	movq %r14,%r15
	jmp L_30255
.p2align 0x4
L_385283:
L_30245:
	movq %r14,0x0(%rbp)
	jmp defaultInt_0
.p2align 0x4
L_385284:
L_30225:
	movq 0x8(%r11),%r14
	movq 0x0(%r11),%r10
	movq 0x0(%r10),%r9
	cmpq %r9,(globalObjptr+0xCA98)(%rip)
	je L_385290
L_30226:
	movq 0xFFFFFFFFFFFFFFF0(%r9),%r13
	cmpq $0x6,%r13
	sete %cl
	movzbl %cl,%ecx
	jne vectorEqual_215
L_30238:
	xorq %r11,%r11
	movq %r9,%r15
.p2align 0x4,,0x7
vectorEqualLoop_110:
	cmpq %r13,%r11
	je L_385289
L_30239:
	movq (globalObjptr+0xCA98)(%rip),%r10
	movb 0x0(%r15,%r11,1),%r9b
	cmpb %r9b,0x0(%r10,%r11,1)
	jne vectorEqual_214
L_30241:
	incq %r11
	jmp vectorEqualLoop_110
.p2align 0x4
vectorEqual_214:
vectorEqual_58:
	cmpq (globalObjptr+0xD6E8)(%rip),%r15
	je L_30236
L_30228:
	testl %ecx,%ecx
	jz L_30230
L_30231:
	xorq %r11,%r11
.p2align 0x4,,0x7
vectorEqualLoop_109:
	cmpq %r13,%r11
	je L_385286
L_30232:
	movq (globalObjptr+0xD6E8)(%rip),%r10
	movb 0x0(%r15,%r11,1),%r9b
	cmpb %r9b,0x0(%r10,%r11,1)
	jne L_385285
L_30234:
	incq %r11
	jmp vectorEqualLoop_109
.p2align 0x4
L_385285:
L_30230:
	movq (globalObjptr+0x1AD0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_385286:
L_30236:
	movq 0x0(%r14),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_385289:
	movq %r14,%r15
L_30243:
	movq 0x8(%r15),%r14
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
vectorEqual_215:
	movq %r9,%r15
	jmp vectorEqual_58
.p2align 0x4
L_385290:
	movq %r14,%r15
	jmp L_30243
.text
.p2align 0x4
.globl defaultInt_0
.hidden defaultInt_0
defaultInt_0:
L_30259:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x10(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_30260
L_30397:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_30398+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_30398
.p2align 0x4
.long 0x452
L_30398:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_30260:
	movq 0x0(%rbp),%r9
	movq 0x18(%r9),%r13
	movq 0x10(%r9),%r8
	movq %r8,0x18(%rbp)
	movq 0x8(%r9),%r14
	movq 0x0(%r9),%r8
	movq 0x0(%r8),%r15
	cmpq %r15,(globalObjptr+0xD6F8)(%rip)
	je fromBits_13
L_30261:
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r11
	cmpq $0x5,%r11
	sete %cl
	movzbl %cl,%ecx
	jne vectorEqual_59
L_30368:
	xorq %r10,%r10
.p2align 0x4,,0x7
vectorEqualLoop_116:
	cmpq %r11,%r10
	je fromBits_12
L_30369:
	movq (globalObjptr+0xD6F8)(%rip),%r8
	movb 0x0(%r8,%r10,1),%r9b
	cmpb %r9b,0x0(%r15,%r10,1)
	jne vectorEqual_216
L_30371:
	incq %r10
	jmp vectorEqualLoop_116
.p2align 0x4
vectorEqual_216:
vectorEqual_59:
	cmpq %r15,(globalObjptr+0xD6F0)(%rip)
	je fromBits_3
L_30263:
	testl %ecx,%ecx
	jz vectorEqual_60
L_30339:
	xorq %r10,%r10
.p2align 0x4,,0x7
vectorEqualLoop_115:
	cmpq %r11,%r10
	je fromBits_10
L_30340:
	movq (globalObjptr+0xD6F0)(%rip),%r9
	movb 0x0(%r15,%r10,1),%r8b
	cmpb %r8b,0x0(%r9,%r10,1)
	jne vectorEqual_217
L_30342:
	incq %r10
	jmp vectorEqualLoop_115
.p2align 0x4
vectorEqual_217:
vectorEqual_60:
	cmpq (globalObjptr+0xD6C0)(%rip),%r15
	je L_30337
L_30265:
	cmpq $0x6,%r11
	jne vectorEqual_61
L_30332:
	xorq %r10,%r10
.p2align 0x4,,0x7
vectorEqualLoop_114:
	cmpq %r11,%r10
	je L_385294
L_30333:
	movq (globalObjptr+0xD6C0)(%rip),%r9
	movb 0x0(%r15,%r10,1),%r8b
	cmpb %r8b,0x0(%r9,%r10,1)
	jne vectorEqual_218
L_30335:
	incq %r10
	jmp vectorEqualLoop_114
.p2align 0x4
vectorEqual_218:
vectorEqual_61:
	cmpq %r15,(globalObjptr+0xCA88)(%rip)
	je fromBits_2
L_30267:
	testl %ecx,%ecx
	jz vectorEqual_62
L_30303:
	xorq %r13,%r13
.p2align 0x4,,0x7
vectorEqualLoop_113:
	cmpq %r11,%r13
	je fromBits_8
L_30304:
	movq (globalObjptr+0xCA88)(%rip),%r9
	movb 0x0(%r9,%r13,1),%r10b
	cmpb %r10b,0x0(%r15,%r13,1)
	jne vectorEqual_219
L_30306:
	incq %r13
	jmp vectorEqualLoop_113
.p2align 0x4
vectorEqual_219:
vectorEqual_62:
	cmpq %r15,(globalObjptr+0xD6B8)(%rip)
	je fromBits_1
L_30269:
	cmpq $0x4,%r11
	jne L_30271
L_30272:
	xorq %r13,%r13
.p2align 0x4,,0x7
vectorEqualLoop_112:
	cmpq %r11,%r13
	je fromBits_6
L_30273:
	movq (globalObjptr+0xD6B8)(%rip),%r9
	movb 0x0(%r9,%r13,1),%r10b
	cmpb %r10b,0x0(%r15,%r13,1)
	jne L_385292
L_30275:
	incq %r13
	jmp vectorEqualLoop_112
.p2align 0x4
L_385292:
L_30271:
	movq (globalObjptr+0x18B8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
fromBits_6:
fromBits_1:
	movq 0x8(%r14),%r15
	movq %r15,0x20(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x28(%rbp)
	leaq L_30297(%rip),%r15
	movq %r15,0x8(%rbp)
	movq %rbp,%r15
	addq $0x10,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x11,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_30277+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
fromBits_8:
fromBits_2:
	movq 0x8(%r14),%r15
	movq %r15,0x20(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x28(%rbp)
	leaq L_30326(%rip),%r15
	movq %r15,0x8(%rbp)
	movq %rbp,%r15
	addq $0x10,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x41,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_30308+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_385294:
L_30337:
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
fromBits_10:
fromBits_3:
	movq 0x8(%r14),%r15
	movq %r15,0x20(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x28(%rbp)
	leaq L_30362(%rip),%r15
	movq %r15,0x8(%rbp)
	movq %rbp,%r15
	addq $0x10,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x81,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_30344+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
fromBits_12:
	movq %r14,%r15
fromBits_4:
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	leaq L_30391(%rip),%r15
	movq %r15,0x8(%rbp)
	movq %rbp,%r15
	addq $0x10,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x21,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_30373+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
fromBits_13:
	movq %r14,%r15
	jmp fromBits_4
.p2align 0x4
.long 0x71D
L_30277:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movl 0x38(%rbp),%r15d
	movl %r15d,0x30(%rbp)
	movslq %r15d,%r14
	cmpq $0x41,%r14
	jnb L_30279
L_30287:
	movq 0x20(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	cmpq $0x1,%r13
	je L_385297
L_30288:
	movq 0x0(%r13),%r15
	movq %r15,0x28(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x28,%rbp
	leaq (L_30289+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_385297:
L_30279:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x11,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_30280+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1197
.p2align 0x4
.long 0x72E
L_30297:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	cmpq $0x6,%r15
	je L_30279
L_30298:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_30299
L_30300:
L_30299:
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x71D
L_30308:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movl 0x38(%rbp),%r15d
	movl %r15d,0x30(%rbp)
	movslq %r15d,%r14
	cmpq $0x41,%r14
	jnb L_30310
L_30318:
	movq 0x20(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	cmpq $0x1,%r13
	je L_385301
L_30319:
	movq 0x0(%r13),%r15
	movq %r15,0x28(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x28,%rbp
	leaq (L_30320+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_385301:
L_30310:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x41,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_30311+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1197
.p2align 0x4
.long 0x72E
L_30326:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	cmpq $0x6,%r15
	je L_30310
L_30327:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_30328
L_30329:
L_30328:
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x71D
L_30344:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movl 0x38(%rbp),%r15d
	movl %r15d,0x30(%rbp)
	movslq %r15d,%r14
	cmpq $0x41,%r14
	jnb L_30346
L_30354:
	movq 0x20(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	cmpq $0x1,%r13
	je L_385305
L_30355:
	movq 0x0(%r13),%r15
	movq %r15,0x28(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x28,%rbp
	leaq (L_30356+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_385305:
L_30346:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x81,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_30347+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1197
.p2align 0x4
.long 0x72E
L_30362:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	cmpq $0x6,%r15
	je L_30346
L_30363:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_30364
L_30365:
L_30364:
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x71D
L_30373:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movl 0x38(%rbp),%r15d
	movl %r15d,0x30(%rbp)
	movslq %r15d,%r14
	cmpq $0x41,%r14
	jnb L_30375
L_30383:
	movq 0x20(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	cmpq $0x1,%r13
	je L_385309
L_30384:
	movq 0x0(%r13),%r15
	movq %r15,0x28(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x28,%rbp
	leaq (L_30385+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_385309:
L_30375:
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x21,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_30376+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1197
.p2align 0x4
.long 0x72E
L_30391:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	cmpq $0x6,%r15
	je L_30375
L_30392:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_30393
L_30394:
L_30393:
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq 0x10(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x48F
L_30289:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl 0x28(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	movslq %r15d,%r14
	movq 0x18(%rbp),%r15
	cmpq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	jnb L_385314
L_30292:
	movq 0x0(%r15,%r14,8),%r13
	cmpq $0x1,%r13
	je L_385313
L_30293:
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_385313:
L_30295:
	movq $0x9,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_385314:
L_30291:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x48A
L_30280:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_30281
L_30285:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_30286+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_30286
.p2align 0x4
.long 0x27
L_30286:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_30281:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xCD58)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x20(%rbp)
	addq $0x20,%rbp
	leaq (bug_30+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x48F
L_30320:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl 0x28(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	movslq %r15d,%r14
	movq 0x18(%rbp),%r15
	cmpq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	jnb L_30291
L_30322:
	movq 0x0(%r15,%r14,8),%r13
	cmpq $0x1,%r13
	je L_30295
L_30323:
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x48A
L_30311:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_30312
L_30316:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_30317+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_30317
.p2align 0x4
.long 0x27
L_30317:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_30312:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xCD58)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x20(%rbp)
	addq $0x20,%rbp
	leaq (bug_31+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x48F
L_30356:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl 0x28(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	movslq %r15d,%r14
	movq 0x18(%rbp),%r15
	cmpq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	jnb L_30291
L_30358:
	movq 0x0(%r15,%r14,8),%r13
	cmpq $0x1,%r13
	je L_30295
L_30359:
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x48A
L_30347:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_30348
L_30352:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_30353+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_30353
.p2align 0x4
.long 0x27
L_30353:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_30348:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xCD58)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x20(%rbp)
	addq $0x20,%rbp
	leaq (bug_32+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x48F
L_30385:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl 0x28(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	movslq %r15d,%r14
	movq 0x18(%rbp),%r15
	cmpq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	jnb L_30291
L_30387:
	movq 0x0(%r15,%r14,8),%r13
	cmpq $0x1,%r13
	je L_30295
L_30388:
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x48A
L_30376:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_30377
L_30381:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_30382+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_30382
.p2align 0x4
.long 0x27
L_30382:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_30377:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xCD58)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x20(%rbp)
	addq $0x20,%rbp
	leaq (bug_33+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x48A
bug_30:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_30282
L_30283:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_30284+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_30284
.p2align 0x4
.long 0x27
L_30284:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_30282:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x48A
bug_31:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_30313
L_30314:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_30315+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_30315
.p2align 0x4
.long 0x27
L_30315:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_30313:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x48A
bug_32:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_30349
L_30350:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_30351+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_30351
.p2align 0x4
.long 0x27
L_30351:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_30349:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x48A
bug_33:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_30378
L_30379:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_30380+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_30380
.p2align 0x4
.long 0x27
L_30380:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_30378:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl loop_3797
.hidden loop_3797
loop_3797:
L_30399:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_30495
L_30400:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_385336
L_30401:
	movq 0x8(%rbp),%r15
	movq 0x48(%r15),%r14
	movq 0x40(%r15),%r11
	movq %r11,0x10(%rbp)
	movq 0x38(%r15),%r11
	movq %r11,0x18(%rbp)
	movq 0x30(%r15),%r11
	movq %r11,0x20(%rbp)
	movq 0x28(%r15),%r11
	movq %r11,0x28(%rbp)
	movq 0x20(%r15),%r11
	movq %r11,0x30(%rbp)
	movq 0x18(%r15),%r11
	movq %r11,0x38(%rbp)
	movq 0x10(%r15),%r11
	movq %r11,0x40(%rbp)
	movq 0x8(%r15),%r11
	movq %r11,0x48(%rbp)
	movq 0x0(%r15),%r11
	movq %r11,0x50(%rbp)
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xDEB,%r15
	je L_385332
	cmpq $0xDEC,%r15
	je L_385330
L_30402:
	movq 0x0(%r13),%r15
	movq $0x1CED,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq %r15,0x0(%r11)
	movq 0x8(%r15),%r10
	movl 0x4(%r10),%r9d
	testl %r9d,%r9d
	jnz L_385329
L_30403:
	movq $0x2,%r13
	movq %r11,%r15
L_30404:
	movq $0x13,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq $0x1,0x0(%r11)
	movq 0x0(%r14),%r10
	movq $0x1F7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r10,0x0(%r14)
	addq $0x10,%r12
	movq $0xFFF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	movq %r14,0x8(%r10)
	movq %r11,0x10(%r10)
	movq %r13,0x18(%r10)
	addq $0x28,%r12
	movq $0x2891,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r10,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x16B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_385329:
L_30405:
	movq $0x1,%r13
	movq %r11,%r15
	jmp L_30404
.p2align 0x4
L_385330:
L_30423:
	movq 0x8(%r13),%r15
	movq 0x0(%r13),%r14
	movq %r14,0x10(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_385331
L_30425:
	movl %r13d,0x68(%rbp)
	movq $0x3ED5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_30426+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_1
.p2align 0x4
L_385331:
L_30409:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_385332:
L_30406:
	movq 0x0(%r13),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xDED,%r14
	je L_385334
L_30416:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_30409
L_30418:
	movl %r13d,0x28(%rbp)
	movq $0x3EB1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_30419+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_1
.p2align 0x4
L_385334:
L_30407:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_30409
L_30410:
	movl %r13d,0x28(%rbp)
	movq $0x3AC5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_30411+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_14
.p2align 0x4
L_385336:
L_30495:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_30496+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_30496
.p2align 0x4
.long 0x45F
L_30496:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_30401
.p2align 0x4
.long 0x60D
L_30426:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_30427
L_30493:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_30494+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_30494
.p2align 0x4
.long 0x61D
L_30494:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_30427:
	movq 0x10(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r11
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r10d
	movl %r10d,0x58(%rbp)
	movslq %r10d,%r9
	cmpq %r14,%r9
	jne L_30409
L_30429:
	cmpq $0x1,%r13
	jne normal_2
L_30483:
	cmpl $0x2,%r10d
	jne normal_2
L_30484:
	movq 0x48(%rbp),%r13
	movq 0x8(%r13),%r10
	movq 0x8(%r11),%r9
	movq 0x8(%r9),%r8
	cmpq %r8,0x8(%r10)
	jne normal_13
L_30486:
	cmpq $0x0,%r14
	jna L_30488
L_30489:
	movq 0x0(%r15),%r13
	cmpq $0x1,%r14
	jna L_385338
L_30491:
	movq 0x8(%r15),%r14
	movq 0x50(%rbp),%r15
	movq 0x10(%r15),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x10(%rbp)
	movq 0x0(%r11),%r10
	movq %r10,0x18(%rbp)
	movq $0x3EC1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	movq %r15,0x28(%rbp)
	addq $0x18,%r12
	movl $0x2,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_30492+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_1
.p2align 0x4
L_385338:
L_30488:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
normal_13:
normal_2:
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_30430+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1224
.p2align 0x4
.long 0x2B
L_30419:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_30420
L_30421:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_30422+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_30422
.p2align 0x4
.long 0x2C
L_30422:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_30420:
	movq $0x2501,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
L_30413:
	movq %r15,0x0(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp record_4
.p2align 0x4
.long 0x2B
L_30411:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_30412
L_30414:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_30415+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_30415
.p2align 0x4
.long 0x2C
L_30415:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_30412:
	movq $0x24FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_30413
.p2align 0x4
.long 0x490
L_30492:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq %r15,0x0(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp con_2
.p2align 0x4
.long 0x899
L_30430:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_30431
L_30481:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_30482+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_30482
.p2align 0x4
.long 0x8A2
L_30482:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_30431:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_385348
L_30432:
	movq 0x0(%r15),%r14
	movq %r14,%r15
	andq $0x1,%r15
	jz L_30434
L_30439:
	shrq $0x1,%r14
	movl %r14d,%r15d
	movl %r15d,0x48(%rbp)
	cmpl 0x58(%rbp),%r15d
	je L_385344
L_30440:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x8(%rbp)
	movq (globalObjptr+0xE440)(%rip),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_30441+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_385344:
L_30434:
	movq 0x28(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%r11
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0x1051,%r15
	je L_385346
	cmpq $0x1052,%r15
	je L_385345
L_30435:
	movq %r14,0x10(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq 0x0(%r11),%r15
	movq %r15,0x8(%rbp)
	jmp con_2
.p2align 0x4
L_385345:
L_30438:
	movq %r14,0x10(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq 0x8(%r11),%r15
	movq %r15,0x8(%rbp)
	jmp con_2
.p2align 0x4
L_385346:
L_30436:
	movq %r13,0x18(%rbp)
	movq 0x0(%r11),%r15
	movq %r15,0x10(%rbp)
	movq $0x3EE1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_30437+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp instantiateP_0
.p2align 0x4
L_385348:
L_30479:
	movq 0x20(%rbp),%r14
	movq 0x10(%r14),%r13
	movq $0x2847,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x12C9,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	addq $0x10,%r12
	movq $0x1CE7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r11,0x0(%r14)
	addq $0x10,%r12
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
	movq (globalObjptr+0x1AE8)(%rip),%r13
	movl 0x0(%r13),%r9d
	incl %r9d
	jo L_385349
L_30480:
	movl %r9d,0x0(%r13)
	movq $0x1CEF,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movl %r9d,0x4(%r13)
	addq $0x10,%r12
	movl $0x1,0x0(%r13)
	movq $0x13,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	addq $0x10,%r12
	movq $0x1,0x0(%r9)
	movq 0x0(%r11),%r8
	movq $0x1F7,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r8,0x0(%r11)
	addq $0x10,%r12
	movq $0xFFF,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r13,0x0(%r8)
	movq %r11,0x8(%r8)
	movq %r9,0x10(%r8)
	movq %r14,0x18(%r8)
	addq $0x28,%r12
	movq $0x2891,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r8,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x16B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x10,%r12
	movq 0x0(%r10),%r14
	movq $0x1CEB,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r14,0x8(%r11)
	movq %r13,0x0(%rbp)
	addq $0x18,%r12
	movq %r10,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq %r11,0x0(%r10)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_385349:
L_30455:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x89A
L_30441:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_30442+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_26
.p2align 0x4
.long 0x1
L_30437:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x89B
L_30442:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x10(%rbp)
	movl 0x70(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_30443
L_30476:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_30477+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_30477
.p2align 0x4
.long 0x8A1
L_30477:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_30443:
	movq $0xC3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x50(%rbp)
	addq $0x18,%r12
	movl 0x28(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq (globalObjptr+0xE238)(%rip),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_30444+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x89C
L_30444:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x10(%rbp)
	movl 0x58(%rbp),%r15d
	movl %r15d,0x68(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_30445+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0x89D
L_30445:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_30446+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x89D
L_30446:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r14
	movq %r14,0x28(%rbp)
	cmpl $0x1,0x58(%rbp)
	je L_385352
L_30447:
	movq (globalObjptr+0xE240)(%rip),%r15
L_30448:
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_30449+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_385352:
L_30475:
	movq (globalObjptr+0xE258)(%rip),%r15
	jmp L_30448
.p2align 0x4
.long 0x89E
L_30449:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq (globalObjptr+0xE248)(%rip),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_30450+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x84C
L_30450:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	movl 0x48(%rbp),%r15d
	movl %r15d,0x68(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_30451+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0x89F
L_30451:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_30452+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x89F
L_30452:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_30453
L_30473:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_30474+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_30474
.p2align 0x4
.long 0x85D
L_30474:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_30453:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x58(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x48(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_30454:
	addl 0x0(%r15),%ecx
	movl %ecx,0x10(%rbp)
	jo L_30455
L_30456:
	cmpq $0x1,%r14
	je L_385353
L_30457:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_30454
.p2align 0x4
L_385353:
L_30458:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_30459
L_30471:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_30472+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_30472
.p2align 0x4
.long 0x8A0
L_30472:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_30459:
	movl 0x10(%rbp),%ecx
	testl %ecx,%ecx
	jz L_385355
L_30460:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
L_30461:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_30455
L_30462:
	movl %r13d,0x0(%r15)
	movq %r14,0x38(%rbp)
	movq (globalObjptr+0x9D0)(%rip),%r15
	movq %r15,0x30(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x48(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x30,%rbp
	leaq (L_30463+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_385355:
L_30470:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_30461
.p2align 0x4
.long 0x459
L_30463:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_30464
L_30468:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_30469+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_30469
.p2align 0x4
.long 0x49D
L_30469:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_30464:
	movq (globalObjptr+0x1608)(%rip),%r15
	movq (globalObjptr+0x1610)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_385360
L_30465:
	movq 0x20(%rbp),%r15
	movq 0x10(%r15),%r14
	movq $0x2847,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x12C9,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x10,%r12
	movq $0x1CE7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x10,%r12
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq (globalObjptr+0x1AE8)(%rip),%r14
	movl 0x0(%r14),%r10d
	incl %r10d
	jo L_30455
L_30466:
	movl %r10d,0x0(%r14)
	movq $0x1CEF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %r10d,0x4(%r14)
	addq $0x10,%r12
	movl $0x1,0x0(%r14)
	movq $0x13,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	addq $0x10,%r12
	movq $0x1,0x0(%r10)
	movq 0x0(%r13),%r9
	movq $0x1F7,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r9,0x0(%r13)
	addq $0x10,%r12
	movq $0xFFF,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r14,0x0(%r9)
	movq %r13,0x8(%r9)
	movq %r10,0x10(%r9)
	movq %r15,0x18(%r9)
	addq $0x28,%r12
	movq $0x2891,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r9,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x16B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq 0x0(%r11),%r15
	movq $0x1CEB,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r14,0x0(%rbp)
	addq $0x18,%r12
	movq %r11,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r14
	movb $0x1,0x0(%r14,%r15,1)
	movq %r13,0x0(%r11)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_385360:
L_30467:
	movq (globalObjptr+0x1618)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl canUnify_0
.hidden canUnify_0
canUnify_0:
L_30497:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_30498
L_30650:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_30651+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_30651
.p2align 0x4
.long 0x45B
L_30651:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_30498:
	movq 0x8(%rbp),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_30499+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_0
.p2align 0x4
.long 0x788
L_30499:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r15,0x8(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1448,%r15
	jne L_385363
L_30501:
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x8(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_30502+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_0
.p2align 0x4
L_385363:
L_30500:
	movq (globalObjptr+0x1500)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4E5
L_30502:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_30503
L_30648:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_30649+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_30649
.p2align 0x4
.long 0x4E7
L_30649:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_30503:
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1448,%r15
	jne L_30500
L_30504:
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r13
	movq 0x8(%rbp),%r15
	movq %r15,%r14
	andq $0x1,%r14
	cmpq $0x1,%r14
	je L_385432
L_30505:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xE76,%r14
	je L_385427
	cmpq $0xE77,%r14
	je L_30511
	cmpq $0xE78,%r14
	je L_385406
	cmpq $0xE7B,%r14
	je L_385402
L_30506:
L_30507:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_30508
L_30509:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE77,%r15
	je L_30511
	cmpq $0xE7B,%r15
	je L_385364
L_30508:
	movl $0x0,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_385364:
L_30512:
	movq 0x8(%r13),%r11
	movq %r11,0x18(%rbp)
	movq 0x0(%r13),%r14
	movq 0x8(%rbp),%r15
conAnd_0:
	movq 0x10(%rbp),%r11
	movq 0x8(%r11),%r13
	movq %r15,%r11
	andq $0x1,%r11
	cmpq $0x1,%r11
	jne L_385391
L_30536:
	shrq $0x1,%r15
	movb %r15b,%r11b
	movq 0x18(%rbp),%r10
	movq 0xFFFFFFFFFFFFFFF0(%r10),%r9
	movl %r9d,%ecx
	movslq %ecx,%r15
	cmpq %r15,%r9
	jne L_30518
L_30538:
	testl %ecx,%ecx
	jnz L_30508
L_30540:
	movq 0x18(%r13),%r10
	movq 0x10(%r13),%r15
	movq 0x8(%r13),%r9
	movq 0x0(%r13),%r8
	cmpb $0x1,%r11b
	je L_385383
	cmpb $0x2,%r11b
	je L_385376
	cmpb $0x3,%r11b
	je L_385370
L_30541:
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r13
	movl %r13d,%ecx
	movslq %ecx,%r11
	cmpq %r11,%r13
	jne L_385369
L_30543:
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_428:
	cmpl %ebx,%ecx
	je L_30508
L_30544:
	movslq %ebx,%r11
	cmpq %r13,%r11
	jnb L_385367
L_30546:
	imulq $0x18,%r11
	movq 0x0(%r15,%r11,1),%r10
	movq 0x10(%r14),%r9
	cmpq %r9,0x10(%r10)
	je L_385366
L_30547:
	incl %ebx
	jo L_385365
L_30548:
	jmp loop_428
.p2align 0x4
L_385365:
L_30533:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_385366:
L_30511:
	movl $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_385367:
L_30526:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_385369:
L_30518:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_385370:
L_30573:
	movq 0xFFFFFFFFFFFFFFF0(%r8),%r13
	movl %r13d,%ecx
	movslq %ecx,%r15
	cmpq %r13,%r15
	jne L_30518
L_30575:
	xorl %ebx,%ebx
	movq %r8,%r15
.p2align 0x4,,0x7
loop_431:
	cmpl %ecx,%ebx
	je L_30508
L_30576:
	movslq %ebx,%r11
	cmpq %r13,%r11
	jnb L_30526
L_30578:
	imulq $0x18,%r11
	movq 0x8(%r15,%r11,1),%r10
	movq 0x10(%r14),%r9
	cmpq %r9,0x10(%r10)
	je L_30511
L_30579:
	incl %ebx
	jo L_30533
L_30580:
	jmp loop_431
.p2align 0x4
L_385376:
L_30561:
	movq 0x8(%r10),%r15
	movq 0x10(%r14),%r11
	movq 0x0(%r10),%r9
	cmpq %r11,0x10(%r9)
	je L_30511
L_30562:
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r13
	movl %r13d,%ecx
	movslq %ecx,%r14
	cmpq %r14,%r13
	jne L_30518
L_30564:
	xorl %ebx,%ebx
	movq %r11,%r14
.p2align 0x4,,0x7
loop_430:
	cmpl %ecx,%ebx
	je L_30508
L_30565:
	movslq %ebx,%r11
	cmpq %r13,%r11
	jnb L_30526
L_30567:
	imulq $0x18,%r11
	movq 0x0(%r15,%r11,1),%r10
	cmpq %r14,0x10(%r10)
	je L_30511
L_30568:
	incl %ebx
	jo L_30533
L_30569:
	jmp loop_430
.p2align 0x4
L_385383:
L_30551:
	movq 0xFFFFFFFFFFFFFFF0(%r9),%r13
	movl %r13d,%ecx
	movslq %ecx,%r15
	cmpq %r13,%r15
	jne L_30518
L_30553:
	xorl %ebx,%ebx
	movq %r9,%r15
.p2align 0x4,,0x7
loop_429:
	cmpl %ecx,%ebx
	je L_30508
L_30554:
	movslq %ebx,%r11
	cmpq %r13,%r11
	jnb L_30526
L_30556:
	imulq $0x18,%r11
	movq 0x8(%r15,%r11,1),%r10
	movq 0x10(%r14),%r9
	cmpq %r9,0x10(%r10)
	je L_30511
L_30557:
	incl %ebx
	jo L_30533
L_30558:
	jmp loop_429
.p2align 0x4
L_385391:
L_30513:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0xE7B,%r13
	jne L_30508
L_30514:
	movq 0x8(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x0(%r15),%r11
	movq 0x10(%r11),%r10
	cmpq %r10,0x10(%r14)
	jne L_30508
L_30516:
	movq 0x18(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq %r14,0x28(%rbp)
	movl %r14d,%r15d
	movl %r15d,0x30(%rbp)
	movslq %r15d,%r11
	cmpq %r14,%r11
	jne L_30518
L_30519:
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r14
	movq %r14,0x38(%rbp)
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_30518
L_30521:
	cmpl %r13d,%r15d
	je L_385392
L_30522:
	movq (globalObjptr+0x1B28)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_385392:
L_30523:
	movl $0x0,0x34(%rbp)
loop_427:
	movl 0x34(%rbp),%r15d
	cmpl %r15d,0x30(%rbp)
	je L_30511
L_30524:
	movslq %r15d,%r14
	cmpq 0x28(%rbp),%r14
	jnb L_30526
L_30527:
	movq 0x18(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	cmpq 0x38(%rbp),%r14
	jnb L_30526
L_30529:
	movq %r13,0x50(%rbp)
	movq 0x20(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	movq %r13,0x48(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x48,%rbp
	leaq (L_30530+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp canUnify_0
.p2align 0x4
L_385402:
L_30637:
	movq 0x8(%rbp),%r11
	movq 0x8(%r11),%r14
	movq 0x0(%r11),%r10
L_30638:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_385405
L_30640:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE77,%r15
	je L_30511
	cmpq $0xE7B,%r15
	je L_385403
	movq %r13,%r15
	movq %r10,%r13
L_30639:
	movq %r14,0x18(%rbp)
	movq %r13,%r14
	jmp conAnd_0
.p2align 0x4
L_385403:
L_30642:
	movq %r14,0x18(%rbp)
	movq %r13,%r15
	movq %r10,%r14
	jmp conAnd_0
.p2align 0x4
L_385405:
	movq %r13,%r15
	movq %r10,%r13
	jmp L_30639
.p2align 0x4
L_385406:
L_30590:
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
L_30591:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_30508
L_30592:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE77,%r15
	je L_30511
	cmpq $0xE78,%r15
	je L_385408
	cmpq $0xE7B,%r15
	je L_385407
	jmp L_30508
.p2align 0x4
L_385407:
L_30636:
	movq 0x8(%r13),%r11
	movq %r11,0x18(%rbp)
	movq 0x0(%r13),%r14
	movq 0x8(%rbp),%r15
	jmp conAnd_0
.p2align 0x4
L_385408:
L_30594:
	movq 0x0(%r13),%r15
	movq %r15,0x18(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x127F,%r15
	je L_385410
L_30629:
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_30518
L_30631:
	movl %r13d,0x30(%rbp)
	movq $0x3ABF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x28(%rbp)
	addq $0x10,%r12
	addq $0x28,%rbp
	leaq (L_30632+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_14
.p2align 0x4
L_385410:
L_30595:
	movq 0x0(%r14),%r15
	movq %r15,0x20(%rbp)
L_30596:
	movq 0x18(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x127F,%r14
	je L_385412
L_30625:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_30518
L_30627:
	movl %r13d,0x38(%rbp)
	movq $0x3ABF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x30(%rbp)
	addq $0x10,%r12
	addq $0x30,%rbp
	leaq (L_30628+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_14
.p2align 0x4
L_385412:
L_30597:
	movq 0x0(%r15),%r15
	movq %r15,0x18(%rbp)
L_30598:
	movq 0x20(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq %r14,0x28(%rbp)
	movl %r14d,%r15d
	movl %r15d,0x30(%rbp)
	movslq %r15d,%r13
	cmpq %r13,%r14
	jne L_30518
L_30600:
	movq 0x18(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movq %r13,0x38(%rbp)
	movl %r13d,%r14d
	movslq %r14d,%r11
	cmpq %r11,%r13
	jne L_30518
L_30602:
	cmpl %r15d,%r14d
	jne L_30508
L_30604:
	movl $0x0,0x34(%rbp)
loop_432:
	movl 0x34(%rbp),%r15d
	cmpl 0x30(%rbp),%r15d
	je L_30511
L_30605:
	movslq %r15d,%r14
	cmpq 0x28(%rbp),%r14
	jnb L_30526
L_30607:
	movq 0x20(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	cmpq 0x38(%rbp),%r14
	jnb L_30526
L_30609:
	movq 0x0(%r13),%r11
	movq 0x8(%r13),%r15
	movq 0x18(%rbp),%r10
	movq 0x0(%r10,%r14,8),%r9
	movq 0x0(%r9),%r13
	movq 0x8(%r9),%r8
	movq %r15,%r14
	andq $0x1,%r14
	cmpq $0x1,%r14
	je L_385415
L_30610:
L_30611:
	movq %r8,%r14
	andq $0x3,%r14
	jnz L_30508
L_30612:
	movq 0x8(%r15),%r14
	cmpq %r14,0x8(%r8)
	jne L_30508
L_30615:
	movq %r13,0x48(%rbp)
	movq %r11,0x50(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x48,%rbp
	leaq (L_30616+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp canUnify_0
.p2align 0x4
L_385415:
L_30620:
	shrq $0x1,%r15
	movl %r15d,%r14d
	movq %r8,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	jne L_30508
L_30621:
	shrq $0x1,%r8
	movl %r8d,%r15d
	cmpl %r15d,%r14d
	jne L_30508
	jmp L_30615
.p2align 0x4
L_385427:
L_30583:
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
L_30584:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_30508
L_30585:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE76,%r15
	je L_385430
	cmpq $0xE77,%r15
	je L_30511
	cmpq $0xE7B,%r15
	je L_385428
	jmp L_30508
.p2align 0x4
L_385428:
L_30588:
	movq 0x8(%r13),%r11
	movq %r11,0x18(%rbp)
	movq 0x0(%r13),%r14
	movq 0x8(%rbp),%r15
	jmp conAnd_0
.p2align 0x4
L_385430:
L_30586:
	movq 0x8(%r14),%r15
	movq 0x0(%r13),%r11
	movq 0x8(%r11),%r10
	movq 0x8(%r10),%r9
	cmpq %r9,0x8(%r15)
	sete %al
	movzbl %al,%eax
	movl %eax,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_385432:
L_30643:
	shrq $0x1,%r15
	movb %r15b,%r14b
	movq %r13,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	jne L_385433
L_30647:
	shrq $0x1,%r13
	movb %r13b,%r15b
	cmpb %r15b,%r14b
	sete %al
	movzbl %al,%eax
	movl %eax,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_385433:
L_30644:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE77,%r15
	je L_30511
	cmpq $0xE7B,%r15
	je L_385434
	jmp L_30508
.p2align 0x4
L_385434:
L_30646:
	movq 0x8(%r13),%r11
	movq %r11,0x18(%rbp)
	movq 0x0(%r13),%r14
	movq 0x8(%rbp),%r15
	jmp conAnd_0
.p2align 0x4
.long 0x8A3
L_30530:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movl 0x48(%rbp),%r15d
	movl %r15d,0x40(%rbp)
	testl %r15d,%r15d
	jz L_30508
L_30532:
	movl 0x34(%rbp),%r15d
	incl %r15d
	jo L_30533
L_30534:
	movl %r15d,0x34(%rbp)
	jmp loop_427
.p2align 0x4
.long 0x490
L_30632:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_30596
L_30634:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_30635+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_30635
.p2align 0x4
.long 0x4B1
L_30635:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	jmp L_30596
.p2align 0x4
.long 0x2
L_30628:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x18(%rbp)
	jmp L_30598
.p2align 0x4
.long 0x8A3
L_30616:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movl 0x48(%rbp),%r15d
	movl %r15d,0x40(%rbp)
	testl %r15d,%r15d
	jz L_30508
L_30618:
	movl 0x34(%rbp),%r15d
	incl %r15d
	jo L_30533
L_30619:
	movl %r15d,0x34(%rbp)
	jmp loop_432
.text
.p2align 0x4
.globl args_0
.hidden args_0
args_0:
L_30652:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_30653
L_30882:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_30883+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_30883
.p2align 0x4
.long 0x63C
L_30883:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_30653:
	movq 0x20(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_385454
L_30656:
	decl %r13d
	jo L_30657
L_30658:
	movl %r13d,0x30(%rbp)
	movq $0x1,0x28(%rbp)
.p2align 0x4,,0x7
loop_433:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_385452
.p2align 0x4,,0x7
L_30659:
	movl 0x30(%rbp),%r15d
	cmpl $0x0,%r15d
	jl L_385443
L_30660:
	movl %r15d,%r14d
	decl %r14d
	movslq %r15d,%r13
	movl %r14d,0x30(%rbp)
	movq 0x20(%rbp),%r15
	movq 0x0(%r15,%r13,8),%r14
	movq $0x1CEB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x28(%rbp)
	jmp loop_433
.p2align 0x4
L_385443:
L_30661:
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_385447
L_30662:
	movq 0x8(%r14),%r13
	movq %r13,0x20(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,%r15
L_30663:
	movq 0x0(%r15),%r13
	movq %r13,0x30(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x38(%rbp)
	movq 0x18(%rbp),%r13
	cmpq $0x1,%r13
	je L_30669
L_30664:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
.p2align 0x4,,0x7
L_30665:
	movq 0x0(%r15),%r13
	movq 0x30(%rbp),%r11
	movl 0x0(%r11),%r10d
	cmpl %r10d,0x0(%r13)
	je L_385445
L_30666:
	cmpq $0x1,%r14
	je L_385444
L_30667:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq %r13,%r15
	jmp L_30665
.p2align 0x4
L_385444:
L_30669:
	movq 0x30(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_30670+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_1
.p2align 0x4
L_385445:
L_30726:
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_30727+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_0
.p2align 0x4
L_385447:
L_30879:
	movq 0x28(%rbp),%r13
	movq %r13,%r15
L_30691:
	movq $0x5E1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	cmpq $0x1,%r15
	je L_385451
L_30692:
	movq 0x8(%r15),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_30693:
	incl %ecx
	movl %ecx,0x8(%rbp)
	jo L_385450
L_30694:
	cmpq $0x1,%r15
	je L_385448
L_30695:
	movq 0x8(%r15),%r15
	jmp L_30693
.p2align 0x4
L_385448:
L_30696:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_30697
L_30699:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_30700+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_30700
.p2align 0x4
.long 0x457
L_30700:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_30697:
	movl 0x8(%rbp),%ecx
L_30698:
	movl %ecx,0x8(%rbp)
	movq $0x3EBB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	jmp unfoldi_1
.p2align 0x4
L_385450:
L_30657:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_385451:
L_30701:
	xorl %ecx,%ecx
	jmp L_30698
.p2align 0x4
L_385452:
L_30880:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_30881+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_30881
.p2align 0x4
.long 0x5F6
L_30881:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_30659
.p2align 0x4
L_385454:
L_30655:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x8A4
L_30670:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_30671
L_30724:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_30725+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_30725
.p2align 0x4
.long 0x4EB
L_30725:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_30671:
	movq 0x30(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1446,%r15
	jne L_385471
L_30673:
	movq 0x8(%r14),%r15
	movq 0x8(%r15),%r13
	cmpq $0x1,%r13
	je L_385470
L_30674:
	movq 0x0(%r13),%r15
	movq %r15,0x30(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x28(%rbp)
.p2align 0x4,,0x7
L_30675:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_385469
.p2align 0x4,,0x7
L_30676:
	movq 0x38(%rbp),%r13
	cmpq $0x1,%r13
	je L_30685
L_30677:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
.p2align 0x4,,0x7
L_30678:
	movq 0x8(%r15),%r13
	movq 0x30(%rbp),%r15
	movq %r15,%r11
	andq $0x1,%r11
	cmpq $0x1,%r11
	je L_385464
L_30679:
L_30680:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_30681
L_30704:
	movq 0x8(%r15),%r11
	cmpq %r11,0x8(%r13)
	je L_385460
L_30681:
	cmpq $0x1,%r14
	je L_385456
L_30682:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_30678
.p2align 0x4
L_385456:
L_30683:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_385459
.p2align 0x4,,0x7
L_30685:
	movq $0x1CEB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_385457
L_30686:
	movq %r15,0x40(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x30(%rbp)
	jmp L_30675
.p2align 0x4
L_385457:
L_30688:
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_30691
L_30689:
	movq %r15,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	jmp L_30663
.p2align 0x4
L_385459:
L_30702:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_30703+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_30703
.p2align 0x4
.long 0x8A5
L_30703:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_30685
.p2align 0x4
L_385460:
L_30706:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_385462
.p2align 0x4,,0x7
L_30708:
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_385461
L_30709:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x28(%rbp)
	movq %r14,0x30(%rbp)
	jmp L_30675
.p2align 0x4
L_385461:
L_30710:
	movq 0x40(%rbp),%r14
	xchgq %r14,%r15
	jmp L_30688
.p2align 0x4
L_385462:
L_30711:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_30712+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_30712
.p2align 0x4
.long 0x8A5
L_30712:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_30708
.p2align 0x4
L_385464:
L_30713:
	shrq $0x1,%r15
	movl %r15d,%r11d
	movq %r13,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	jne L_30681
L_30714:
	shrq $0x1,%r13
	movl %r13d,%r15d
	cmpl %r11d,%r15d
	jne L_30681
L_30716:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_30708
L_30718:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_30719+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_30719
.p2align 0x4
.long 0x8A5
L_30719:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_30708
.p2align 0x4
L_385469:
L_30721:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_30722+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_30722
.p2align 0x4
.long 0x4EF
L_30722:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_30676
.p2align 0x4
L_385470:
L_30723:
	movq 0x28(%rbp),%r15
	jmp L_30688
.p2align 0x4
L_385471:
L_30672:
	movq (globalObjptr+0x1500)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4ED
L_30727:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_30728
L_30876:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_30877+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_30877
.p2align 0x4
.long 0x4EF
L_30877:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_30728:
	movq 0x40(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1448,%r15
	jne L_30672
L_30729:
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r13
L_30730:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_30731
L_30732:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE78,%r15
	je L_385475
	cmpq $0xE79,%r15
	je L_385474
	cmpq $0xE7A,%r15
	je L_385473
L_30731:
	movq (globalObjptr+0x1BA8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_385473:
L_30875:
	movq 0x0(%r13),%r15
	movq $0x3031,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x40(%rbp)
	addq $0x10,%r12
L_30734:
	movq 0x30(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_30735+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_1
.p2align 0x4
L_385474:
L_30874:
	movq 0x8(%r13),%r15
	movq 0x0(%r13),%r14
	movq $0x302F,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	movq %r15,0x10(%r13)
	addq $0x20,%r12
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r13,0x40(%rbp)
	jmp L_30734
.p2align 0x4
L_385475:
L_30733:
	movq 0x0(%r13),%r15
	movq $0x3033,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x40(%rbp)
	addq $0x10,%r12
	jmp L_30734
.p2align 0x4
.long 0x849
L_30735:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_30736
L_30872:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_30873+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_30873
.p2align 0x4
.long 0x4EF
L_30873:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_30736:
	movq 0x30(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1446,%r15
	jne L_30672
L_30737:
	movq 0x8(%r14),%r15
	movq 0x8(%r15),%r13
	cmpq $0x1,%r13
	je L_385524
L_30738:
	movq 0x0(%r13),%r15
	movq %r15,0x30(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x28(%rbp)
.p2align 0x4,,0x7
L_30739:
	movq 0x38(%rbp),%r13
	cmpq $0x1,%r13
	je L_30747
L_30740:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
.p2align 0x4,,0x7
L_30741:
	movq 0x8(%r15),%r13
	movq 0x30(%rbp),%r15
	movq %r15,%r11
	andq $0x1,%r11
	cmpq $0x1,%r11
	je L_385519
L_30742:
L_30743:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_30744
L_30854:
	movq 0x8(%r13),%r11
	cmpq %r11,0x8(%r15)
	je L_385515
L_30744:
	cmpq $0x1,%r14
	je L_385479
L_30745:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_30741
.p2align 0x4
L_385479:
L_30747:
	movq 0x40(%rbp),%r11
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0x1818,%r15
	je L_385507
	cmpq $0x1819,%r15
	je L_385490
L_30748:
	movq 0x10(%r11),%r10
	movq 0x8(%r11),%r14
	movq 0x0(%r11),%r9
	movq %r9,0x50(%rbp)
	cmpq $0x1,%r10
	je L_385489
L_30749:
	movq 0x0(%r10),%r13
	movq 0x8(%r10),%r10
	movq %r10,%r15
.p2align 0x4,,0x7
L_30750:
	movq 0x8(%r13),%r11
	movq 0x30(%rbp),%r10
	movq %r10,%r9
	andq $0x1,%r9
	cmpq $0x1,%r9
	je L_385486
L_30751:
L_30752:
	movq %r11,%r9
	andq $0x3,%r9
	jnz L_30753
L_30792:
	movq 0x8(%r11),%r9
	cmpq %r9,0x8(%r10)
	je L_385481
L_30753:
	cmpq $0x1,%r15
	je L_385480
L_30754:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	jmp L_30750
.p2align 0x4
L_385480:
	movq %r14,%r15
L_30756:
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (loop_434+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp extra_0
.p2align 0x4
L_385481:
L_30795:
	movq 0x0(%r13),%r15
	movq %r15,0x30(%rbp)
.p2align 0x4,,0x7
L_30765:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_385484
.p2align 0x4,,0x7
L_30766:
	movq $0x1CEB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_385482
L_30767:
	movq %r15,0x48(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x30(%rbp)
	jmp L_30739
.p2align 0x4
L_385482:
L_30769:
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_30691
L_30770:
	movq %r15,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	jmp L_30663
.p2align 0x4
L_385484:
L_30772:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_30773+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_30773
.p2align 0x4
.long 0x8A7
L_30773:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	jmp L_30766
.p2align 0x4
L_385486:
L_30796:
	shrq $0x1,%r10
	movl %r10d,%r9d
	movq %r11,%r10
	andq $0x1,%r10
	cmpq $0x1,%r10
	jne L_30753
L_30797:
	shrq $0x1,%r11
	movl %r11d,%r10d
	cmpl %r10d,%r9d
	je L_30795
	jmp L_30753
.p2align 0x4
L_385489:
	movq %r14,%r15
	jmp L_30756
.p2align 0x4
L_385490:
L_30819:
	movq 0x0(%r11),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x127F,%r14
	je L_385497
L_30840:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_30655
L_30842:
	testl %r13d,%r13d
	jz L_385495
L_30843:
	movq 0x30(%rbp),%r11
	movq %r11,%r10
	andq $0x1,%r10
	cmpq $0x1,%r10
	jne L_385494
L_30845:
	shrq $0x1,%r11
	movl %r11d,%r10d
	cmpl $0x0,%r10d
	jl L_30848
L_30846:
	cmpl %r13d,%r10d
	jnl L_385492
L_30849:
	movslq %r10d,%r13
	cmpq %r15,%r13
	jnb L_385491
L_30851:
	movq 0x0(%r14,%r13,8),%r15
	movq %r15,0x30(%rbp)
	jmp L_30765
.p2align 0x4
L_385491:
L_30825:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_385492:
L_30848:
	movq 0x10(%rbp),%r15
	movq %r15,0x30(%rbp)
	jmp L_30765
.p2align 0x4
L_385494:
L_30844:
	movq 0x10(%rbp),%r15
	movq %r15,0x30(%rbp)
	jmp L_30765
.p2align 0x4
L_385495:
L_30853:
	movq 0x10(%rbp),%r15
	movq %r15,0x30(%rbp)
	jmp L_30765
.p2align 0x4
L_385497:
L_30820:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%ecx
	movslq %ecx,%r13
	cmpq %r13,%r15
	jne L_30655
L_30822:
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_435:
	cmpl %ecx,%ebx
	je L_385505
L_30823:
	movslq %ebx,%r13
	cmpq %r15,%r13
	jnb L_30825
L_30826:
	movq 0x0(%r14,%r13,8),%r11
	movq 0x8(%r11),%r13
	movq 0x30(%rbp),%r10
	movq %r10,%r9
	andq $0x1,%r9
	cmpq $0x1,%r9
	je L_385501
L_30827:
L_30828:
	movq %r13,%r9
	andq $0x3,%r9
	jnz L_30829
L_30831:
	movq 0x8(%r13),%r9
	cmpq %r9,0x8(%r10)
	je L_385499
L_30829:
	incl %ebx
	jo L_30657
L_30830:
	jmp loop_435
.p2align 0x4
L_385499:
L_30834:
	movq 0x0(%r11),%r15
	movq %r15,0x30(%rbp)
	jmp L_30765
.p2align 0x4
L_385501:
L_30835:
	shrq $0x1,%r10
	movl %r10d,%r9d
	movq %r13,%r10
	andq $0x1,%r10
	cmpq $0x1,%r10
	jne L_30829
L_30836:
	shrq $0x1,%r13
	movl %r13d,%r10d
	cmpl %r10d,%r9d
	je L_30834
	jmp L_30829
.p2align 0x4
L_385505:
L_30839:
	movq 0x10(%rbp),%r15
	movq %r15,0x30(%rbp)
	jmp L_30765
.p2align 0x4
L_385507:
L_30801:
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_30809
L_30802:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movq %r13,%r15
.p2align 0x4,,0x7
L_30803:
	movq 0x8(%r14),%r13
	movq 0x30(%rbp),%r11
	movq %r11,%r10
	andq $0x1,%r10
	cmpq $0x1,%r10
	je L_385511
L_30804:
L_30805:
	movq %r13,%r10
	andq $0x3,%r10
	jnz L_30806
L_30810:
	movq 0x8(%r11),%r10
	cmpq %r10,0x8(%r13)
	je L_385509
L_30806:
	cmpq $0x1,%r15
	je L_385508
L_30807:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_30803
.p2align 0x4
L_385508:
L_30809:
	movq 0x10(%rbp),%r15
	movq %r15,0x30(%rbp)
	jmp L_30765
.p2align 0x4
L_385509:
L_30813:
	movq 0x0(%r14),%r15
	movq %r15,0x30(%rbp)
	jmp L_30765
.p2align 0x4
L_385511:
L_30814:
	shrq $0x1,%r11
	movl %r11d,%r10d
	movq %r13,%r11
	andq $0x1,%r11
	cmpq $0x1,%r11
	jne L_30806
L_30815:
	shrq $0x1,%r13
	movl %r13d,%r11d
	cmpl %r11d,%r10d
	je L_30813
	jmp L_30806
.p2align 0x4
L_385515:
L_30856:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_385517
.p2align 0x4,,0x7
L_30858:
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_385516
L_30859:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x28(%rbp)
	movq %r14,0x30(%rbp)
	jmp L_30739
.p2align 0x4
L_385516:
L_30860:
	movq 0x48(%rbp),%r14
	xchgq %r14,%r15
	jmp L_30769
.p2align 0x4
L_385517:
L_30861:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_30862+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_30862
.p2align 0x4
.long 0x8A8
L_30862:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	jmp L_30858
.p2align 0x4
L_385519:
L_30863:
	shrq $0x1,%r15
	movl %r15d,%r11d
	movq %r13,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	jne L_30744
L_30864:
	shrq $0x1,%r13
	movl %r13d,%r15d
	cmpl %r15d,%r11d
	jne L_30744
L_30866:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_30858
L_30868:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_30869+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_30869
.p2align 0x4
.long 0x8A8
L_30869:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	jmp L_30858
.p2align 0x4
L_385524:
L_30871:
	movq 0x28(%rbp),%r15
	jmp L_30769
.p2align 0x4
.long 0x8A6
loop_434:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r14
	movq %r14,0x58(%rbp)
	cmpq $0x1,%r14
	je L_30764
L_30757:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r14
	movq %r14,0x58(%rbp)
.p2align 0x4,,0x7
L_30758:
	movq 0x58(%rbp),%r14
	movq 0x8(%r14),%r13
	movq 0x30(%rbp),%r14
	movq %r14,%r11
	andq $0x1,%r11
	cmpq $0x1,%r11
	je L_385532
L_30759:
L_30760:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_30761
L_30774:
	movq 0x8(%r14),%r11
	cmpq %r11,0x8(%r13)
	je L_385528
L_30761:
	cmpq $0x1,%r15
	je L_385527
L_30762:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r14,0x58(%rbp)
	jmp L_30758
.p2align 0x4
L_385527:
L_30764:
	movq 0x10(%rbp),%r15
	movq %r15,0x30(%rbp)
	jmp L_30765
.p2align 0x4
L_385528:
L_30776:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_30778
L_30782:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_30783+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_30783
.p2align 0x4
.long 0x85A
L_30783:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_30778:
	movq 0x58(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x1CED,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r14,0x0(%r15)
	movq 0x8(%r14),%r13
	movl 0x4(%r13),%r11d
	testl %r11d,%r11d
	jnz L_385529
L_30779:
	movq $0x2,%r14
L_30780:
	movq $0x13,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq 0x50(%rbp),%r11
	movq 0x0(%r11),%r10
	movq $0x1F7,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r10,0x0(%r11)
	addq $0x10,%r12
	movq $0xFFF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	movq %r11,0x8(%r10)
	movq %r13,0x10(%r10)
	movq %r14,0x18(%r10)
	addq $0x28,%r12
	movq $0x2891,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r10,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x16B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x30(%rbp)
	addq $0x10,%r12
	jmp L_30765
.p2align 0x4
L_385529:
L_30781:
	movq $0x1,%r14
	jmp L_30780
.p2align 0x4
L_385532:
L_30784:
	shrq $0x1,%r14
	movl %r14d,%r11d
	movq %r13,%r14
	andq $0x1,%r14
	cmpq $0x1,%r14
	jne L_30761
L_30785:
	shrq $0x1,%r13
	movl %r13d,%r14d
	cmpl %r11d,%r14d
	jne L_30761
L_30787:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_30778
L_30789:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r14d
	movl %r14d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r14
	movq %r14,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_30790+0x0)(%rip),%r14
	movq %r14,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_30790
.p2align 0x4
.long 0x85A
L_30790:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	jmp L_30778
.text
.p2align 0x4
.globl maybeConstrain_0
.hidden maybeConstrain_0
maybeConstrain_0:
L_30884:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_30885
L_30906:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_30907+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_30907
.p2align 0x4
.long 0x45B
L_30907:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_30885:
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x8(%r15),%r14
	movl 0x0(%r14),%r13d
	testl %r13d,%r13d
	jnz L_385537
L_30886:
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_385537:
L_30887:
	movq (globalObjptr+0xA160)(%rip),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_30888+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x555
L_30888:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_30889
L_30904:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_30905+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_30905
.p2align 0x4
.long 0x4AE
L_30905:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_30889:
	movq 0x18(%rbp),%r15
	movq 0x28(%r15),%r14
	movq 0x20(%r15),%r13
	movq 0x18(%r15),%r11
	movq 0x10(%r15),%r10
	movq $0xAF1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r10,0x8(%r15)
	movq %r11,0x18(%r15)
	movq %r13,0x20(%r15)
	movq %r14,0x28(%r15)
	addq $0x38,%r12
	movl $0x1,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x1,0x10(%r15)
	movq %r15,0x28(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_30890+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lay_0
.p2align 0x4
.long 0x4E5
L_30890:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_30891
L_30902:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_30903+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_30903
.p2align 0x4
.long 0x4E7
L_30903:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_30891:
	movq 0x18(%rbp),%r13
	movq 0x8(%r13),%r15
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x8(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_30892:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_385543
L_30894:
	cmpq $0x1,%r14
	je L_385540
L_30895:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_30892
.p2align 0x4
L_385540:
L_30896:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_30897
L_30900:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_30901+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_30901
.p2align 0x4
.long 0x4E6
L_30901:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_30897:
	movl 0x28(%rbp),%r15d
	testl %r15d,%r15d
	jz L_385541
L_30898:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_385541:
L_30899:
	movq (globalObjptr+0x9D0)(%rip),%r14
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_385543:
L_30893:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl x_1262
.hidden x_1262
x_1262:
L_30908:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_30951
L_30909:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_385549
L_30910:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xE40,%r15
	je L_385545
L_30950:
	movq 0x0(%r14),%r15
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x1590)(%rip),%r15
	movq %r15,0x8(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0xE2A0)(%rip),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_30930+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_385545:
L_30911:
	movq 0x8(%r14),%r15
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	cmpq $0x1,%r15
	je L_385548
L_30912:
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq $0x1,0x28(%rbp)
.p2align 0x4,,0x7
L_30913:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_385547
.p2align 0x4,,0x7
L_30914:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_385546
L_30915:
	movq %r15,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_30913
.p2align 0x4
L_385546:
L_30916:
	movq 0x28(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq (globalObjptr+0xA050)(%rip),%r15
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_30917+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3781
.p2align 0x4
L_385547:
L_30947:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_30948+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_30948
.p2align 0x4
.long 0x637
L_30948:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_30914
.p2align 0x4
L_385548:
L_30949:
	movq $0x1,%r15
L_30919:
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_30920+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_385549:
L_30951:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_30952+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_30952
.p2align 0x4
.long 0x45F
L_30952:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_30910
.p2align 0x4
.long 0x1
L_30930:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp str_3
.p2align 0x4
.long 0x517
L_30917:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_30918
L_30945:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_30946+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_30946
.p2align 0x4
.long 0x4E9
L_30946:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_30918:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_30919
.p2align 0x4
.long 0x4E5
L_30920:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_30921
L_30943:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_30944+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_30944
.p2align 0x4
.long 0x4E7
L_30944:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_30921:
	movq 0x8(%rbp),%r15
	movq 0x18(%r15),%r14
	movq 0x10(%r15),%r13
	movq 0x8(%r15),%r11
	movq 0x0(%r15),%r10
	movq %r10,0x20(%rbp)
	movq 0x10(%rbp),%r15
	cmpq $0x1,%r15
	je L_385553
L_30922:
	cmpb $0x5,0x0(%r14)
	je L_385552
L_30923:
	movq %r11,0x38(%rbp)
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_30924+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp file_0
.p2align 0x4
L_385552:
L_30935:
	movq 0x8(%r13),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r13),%r14
	movq %r14,0x20(%rbp)
	movl 0x0(%r15),%r14d
	movl %r14d,0x28(%rbp)
	movl 0x4(%r15),%r14d
	movl %r14d,0x2C(%rbp)
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_30936+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp file_0
.p2align 0x4
L_385553:
L_30942:
	movq (globalObjptr+0xE448)(%rip),%r14
	xchgq %r14,%r15
L_30929:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0xA188)(%rip),%r14
	movq %r14,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_30930+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x8A9
L_30924:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x10(%rbp),%r15
	movl 0x0(%r15),%r14d
	movl %r14d,0x38(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_30925+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0x8AA
L_30936:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movl 0x28(%rbp),%r15d
	movl %r15d,0x40(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_30937+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0x71E
L_30925:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_30926
L_30933:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_30934+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_30934
.p2align 0x4
.long 0x51C
L_30934:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_30926:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xA160)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_30927+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x80C
L_30937:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movl 0x2C(%rbp),%r15d
	movl %r15d,0x48(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_30938+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0x48F
L_30927:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_30928
L_30931:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_30932+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_30932
.p2align 0x4
.long 0x5E5
L_30932:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_30928:
	movq 0x20(%rbp),%r15
	jmp L_30929
.p2align 0x4
.long 0x604
L_30938:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_30939
L_30940:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_30941+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_30941
.p2align 0x4
.long 0x8AB
L_30941:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_30939:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xA050)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_30927+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.text
.p2align 0x4
.globl layout_32
.hidden layout_32
layout_32:
L_30953:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_30986
L_30954:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_385562
L_30955:
	movq 0x8(%rbp),%r15
	movq 0x18(%r15),%r14
	movq 0x10(%r15),%r13
	movq 0x8(%r15),%r11
	movq 0x0(%r15),%r10
	movq 0x0(%rbp),%r15
	cmpq $0x1,%r15
	je L_385561
L_30956:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r9
	shrq $0x1,%r9
	cmpq $0xE4A,%r9
	je L_385560
	cmpq $0xE4B,%r9
	je L_385559
	cmpq $0xE4C,%r9
	je L_385558
L_30957:
	movq %r13,0x10(%rbp)
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r11
	movq $0xECB,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r11,0x8(%r10)
	movq %r10,0x8(%rbp)
	addq $0x18,%r12
	addq $0x8,%rbp
	leaq (L_30958+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_540
.p2align 0x4
L_385558:
L_30983:
	movq %r10,0x10(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_30984+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1197
.p2align 0x4
L_385559:
L_30981:
	movq %r11,0x10(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_30982+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_541
.p2align 0x4
L_385560:
L_30975:
	movq 0x0(%r15),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x8(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_30976+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1197
.p2align 0x4
L_385561:
L_30985:
	movq (globalObjptr+0xE450)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp str_3
.p2align 0x4
L_385562:
L_30986:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_30987+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_30987
.p2align 0x4
.long 0x45F
L_30987:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_30955
.p2align 0x4
.long 0x1
L_30958:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xA2E0)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_30959+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1
L_30984:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1
L_30982:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1
L_30976:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_30977
L_30979:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_30980+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_30980
.p2align 0x4
.long 0x451
L_30980:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_30977:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xDEA0)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_30978+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x4AF
L_30959:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_30960+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1
L_30978:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp str_3
.p2align 0x4
.long 0x521
L_30960:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xA2E0)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_30961+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4E5
L_30961:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_30962
L_30973:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_30974+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_30974
.p2align 0x4
.long 0x4E7
L_30974:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_30962:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_30963:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_385568
L_30965:
	cmpq $0x1,%r14
	je L_385565
L_30966:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_30963
.p2align 0x4
L_385565:
L_30967:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_30968
L_30971:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_30972+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_30972
.p2align 0x4
.long 0x4E6
L_30972:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_30968:
	movl 0x28(%rbp),%r15d
	testl %r15d,%r15d
	jz L_385566
L_30969:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_385566:
L_30970:
	movq (globalObjptr+0x9D0)(%rip),%r14
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_385568:
L_30964:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl toString_540
.hidden toString_540
toString_540:
L_30988:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_30989
L_31097:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_31098+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_31098
.p2align 0x4
.long 0x45F
L_31098:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_30989:
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_30990+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
.long 0x8A9
L_30990:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movl 0x30(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	movq 0x20(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x2C(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r14
	je L_385571
L_30991:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_385571:
L_30992:
	cmpl $0x0,0x2C(%rbp)
	jl L_385602
L_30993:
	movq $0x1,0x30(%rbp)
	movl $0x0,0x38(%rbp)
.p2align 0x4,,0x7
loop_436:
	movl 0x38(%rbp),%r15d
	cmpl 0x2C(%rbp),%r15d
	jnl L_385592
L_31020:
	movslq %r15d,%r14
	movq 0x20(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	movl 0x28(%rbp),%r15d
	cmpl $0x8,%r15d
	jng L_385591
L_31052:
	movq 0x18(%rbp),%r14
	movq 0x0(%r14),%r11
	movq %r11,%r14
	andq $0x1,%r14
	jz L_385590
L_31058:
	shrq $0x1,%r11
	movl %r11d,%r14d
	testl %r14d,%r14d
	jz L_385582
L_31060:
	movq 0x0(%r13),%r14
	movq %r14,0x48(%rbp)
	movq $0x1,0x40(%rbp)
	movl %r15d,0x3C(%rbp)
.p2align 0x4,,0x7
loop_439:
	movl 0x3C(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_385581
L_31070:
	movq 0x40(%rbp),%r15
	cmpq $0x1,%r15
	je L_385580
L_31071:
	movb 0x0(%r15),%r14b
	movq 0x8(%r15),%r15
	movq %r15,0x40(%rbp)
	movb %r14b,0x3C(%rbp)
	movq $0x1,0x48(%rbp)
L_31072:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_385579
.p2align 0x4,,0x7
L_31073:
	movq $0x1B5F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movzbl 0x3C(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_385572
L_31074:
	movq %r15,0x48(%rbp)
	movb 0x0(%r14),%r15b
	movq 0x8(%r14),%r14
	movq %r14,0x40(%rbp)
	movb %r15b,0x3C(%rbp)
	jmp L_31072
.p2align 0x4
L_385572:
L_31076:
	cmpq $0x1,0x30(%rbp)
	je L_31045
L_31077:
	cmpq $0x1,%r15
	je L_385577
L_31078:
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movb 0x0(%r15),%r14b
	movb %r14b,0x3C(%rbp)
	movq $0x1,0x48(%rbp)
L_31079:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_385576
.p2align 0x4,,0x7
L_31080:
	movq $0x1B5F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movzbl 0x3C(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_385573
L_31081:
	movq %r15,0x48(%rbp)
	movb 0x0(%r14),%r15b
	movq 0x8(%r14),%r14
	movq %r14,0x40(%rbp)
	movb %r15b,0x3C(%rbp)
	jmp L_31079
.p2align 0x4
L_385573:
L_31082:
	movq 0x30(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x30(%rbp)
L_31083:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_385575
.p2align 0x4,,0x7
L_31084:
	movq $0x1B5F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movzbl 0x3C(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_385574
L_31085:
	movq %r15,0x40(%rbp)
	movb 0x0(%r14),%r15b
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	movb %r15b,0x3C(%rbp)
	jmp L_31083
.p2align 0x4
L_385574:
L_31045:
	movq %r15,0x30(%rbp)
	incl 0x38(%rbp)
	jmp loop_436
.p2align 0x4
L_385575:
L_31087:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_31088+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_31088
.p2align 0x4
.long 0x80F
L_31088:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_31084
.p2align 0x4
L_385576:
L_31089:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_31090+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_31090
.p2align 0x4
.long 0x8AF
L_31090:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	jmp L_31080
.p2align 0x4
L_385577:
L_31091:
	movq 0x30(%rbp),%r15
	jmp L_31045
.p2align 0x4
L_385579:
L_31093:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_31094+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_31094
.p2align 0x4
.long 0x8AF
L_31094:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	jmp L_31073
.p2align 0x4
L_385580:
L_31095:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_31076
.p2align 0x4
L_385581:
L_31061:
	movq 0x10(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movq $0x201,0x60(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_31062+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigQuot_0
.p2align 0x4
L_385582:
	movq %r13,%r15
L_31022:
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	movq $0x1,0x40(%rbp)
	movl 0x28(%rbp),%r15d
	movl %r15d,0x3C(%rbp)
.p2align 0x4,,0x7
loop_438:
	movl 0x3C(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_385589
L_31034:
	cmpq $0x1,0x30(%rbp)
	je L_385588
L_31035:
	movq 0x40(%rbp),%r15
	cmpq $0x1,%r15
	je L_385587
L_31036:
	movb 0x0(%r15),%r14b
	movq 0x8(%r15),%r15
	movq %r15,0x40(%rbp)
	movb %r14b,0x3C(%rbp)
	movq $0x1,0x48(%rbp)
L_31037:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_385586
.p2align 0x4,,0x7
L_31038:
	movq $0x1B5F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movzbl 0x3C(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_385583
L_31039:
	movq %r15,0x48(%rbp)
	movb 0x0(%r14),%r15b
	movq 0x8(%r14),%r14
	movq %r14,0x40(%rbp)
	movb %r15b,0x3C(%rbp)
	jmp L_31037
.p2align 0x4
L_385583:
L_31040:
	movq 0x30(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x30(%rbp)
L_31041:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_385585
.p2align 0x4,,0x7
L_31042:
	movq $0x1B5F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movzbl 0x3C(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_31045
L_31043:
	movq %r15,0x40(%rbp)
	movb 0x0(%r14),%r15b
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	movb %r15b,0x3C(%rbp)
	jmp L_31041
.p2align 0x4
L_385585:
L_31046:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_31047+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_31047
.p2align 0x4
.long 0x80F
L_31047:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_31042
.p2align 0x4
L_385586:
L_31048:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_31049+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_31049
.p2align 0x4
.long 0x8AF
L_31049:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	jmp L_31038
.p2align 0x4
L_385587:
L_31050:
	movq 0x30(%rbp),%r14
	xchgq %r14,%r15
	jmp L_31045
.p2align 0x4
L_385588:
L_31051:
	movq 0x40(%rbp),%r15
	jmp L_31045
.p2align 0x4
L_385589:
L_31023:
	movq 0x10(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movq $0x201,0x60(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_31024+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigQuot_0
.p2align 0x4
L_385590:
L_31053:
	movq (globalObjptr+0xE458)(%rip),%r14
	movq %r14,0x8(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r14
	movq %r14,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_31054+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_385591:
	movq %r13,%r15
	jmp L_31022
.p2align 0x4
L_385592:
L_30994:
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_385601
L_30995:
	movq 0x8(%r14),%r13
	movq %r13,0x0(%rbp)
	movb 0x0(%r14),%r13b
	movb %r13b,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_30996:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_385600
.p2align 0x4,,0x7
L_30997:
	movq $0x1B5F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movzbl 0x8(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_385593
L_30998:
	movq %r15,0x10(%rbp)
	movb 0x0(%r14),%r15b
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movb %r15b,0x8(%rbp)
	jmp L_30996
.p2align 0x4
L_385593:
L_30999:
	movq %r15,0x0(%rbp)
L_31000:
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_385599
L_31001:
	movq 0x8(%r14),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_31002:
	incl %ecx
	cmpq $0x1,%r15
	je L_385594
L_31003:
	movq 0x8(%r15),%r15
	jmp L_31002
.p2align 0x4
L_385594:
L_31004:
L_31005:
	movslq %ecx,%rdx
	movq %rdx,0x8(%rbp)
	testq %rdx,%rdx
	jz L_385598
L_31006:
	cmpq $0x7FFFFFFF,%rdx
	ja L_385597
L_31007:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x51,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_31008+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_31008
.p2align 0x4
.long 0x457
L_31008:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq %rax,%r15
L_31009:
	movq 0x0(%rbp),%r13
	xorq %r14,%r14
.p2align 0x4,,0x7
loop_437:
	cmpq 0x8(%rbp),%r14
	jnl L_385596
L_31011:
	cmpq $0x1,%r13
	je L_385595
L_31012:
	movq 0x8(%r13),%r11
	movb 0x0(%r13),%r10b
	movb %r10b,0x0(%r15,%r14,1)
	incq %r14
	movq %r11,%r13
	jmp loop_437
.p2align 0x4
L_385595:
L_31013:
	movq (globalObjptr+0x5A0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_385596:
L_31010:
	movq $0x7,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_385597:
L_31014:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_385598:
L_31015:
	movq (globalObjptr+0x598)(%rip),%r15
	jmp L_31009
.p2align 0x4
L_385599:
L_31016:
	xorl %ecx,%ecx
	jmp L_31005
.p2align 0x4
L_385600:
L_31017:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_31018+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_31018
.p2align 0x4
.long 0x65A
L_31018:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_30997
.p2align 0x4
L_385601:
L_31019:
	movq $0x1,0x0(%rbp)
	jmp L_31000
.p2align 0x4
L_385602:
L_31096:
	movq (globalObjptr+0x4F8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x8AC
L_31062:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq $0x201,0x68(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x68,%rbp
	leaq (L_31063+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigRem_0
.p2align 0x4
.long 0x8AC
L_31024:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq $0x201,0x68(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x68,%rbp
	leaq (L_31025+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigRem_0
.p2align 0x4
.long 0x1
L_31054:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (bug_34+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x8AD
L_31063:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x48(%rbp)
	movl 0x3C(%rbp),%r14d
	subl $0x8,%r14d
	movl %r14d,0x50(%rbp)
	jo L_385603
L_31064:
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (x_60+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_385603:
L_31026:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x8AD
L_31025:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x48(%rbp)
	movl 0x3C(%rbp),%r14d
	subl $0x8,%r14d
	movl %r14d,0x50(%rbp)
	jo L_31026
L_31027:
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (x_59+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
.long 0x1
bug_34:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_31055
L_31056:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_31057+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_31057
.p2align 0x4
.long 0x451
L_31057:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_31055:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x8AD
x_60:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movl 0x68(%rbp),%r15d
	movl %r15d,0x3C(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_31065
L_31068:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_31069+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_31069
.p2align 0x4
.long 0x8AE
L_31069:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_31065:
	movl 0x3C(%rbp),%r15d
	cmpl $0xFF,%r15d
	ja L_385606
L_31066:
	movb %r15b,%r14b
	movq $0x1B5F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movzbl %r14b,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x40(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x48(%rbp)
	movl 0x50(%rbp),%r15d
	movl %r15d,0x3C(%rbp)
	jmp loop_439
.p2align 0x4
L_385606:
L_31031:
	movq $0x7,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x8AD
x_59:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movl 0x68(%rbp),%r15d
	movl %r15d,0x3C(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_31028
L_31032:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_31033+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_31033
.p2align 0x4
.long 0x8AE
L_31033:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_31028:
	movl 0x3C(%rbp),%r15d
	cmpl $0xFF,%r15d
	ja L_31031
L_31029:
	movb %r15b,%r14b
	movq $0x1B5F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movzbl %r14b,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x40(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x48(%rbp)
	movl 0x50(%rbp),%r15d
	movl %r15d,0x3C(%rbp)
	jmp loop_438
.text
.p2align 0x4
.globl toString_541
.hidden toString_541
toString_541:
L_31099:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_31188
L_31100:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_385638
L_31101:
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq 0x0(%rbp),%r15
	movq %r15,%r11
	andq $0x1,%r11
	cmpq $0x1,%r11
	je L_385610
L_31102:
	movsd 0x0(%r15),%xmm15
	movsd %xmm15,0x0(%rbp)
	movq 0x30(%r13),%r14
	movq 0x28(%r13),%r15
	movq 0x20(%r13),%r11
	movq 0x18(%r13),%r10
	movq $0x5333,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r11,0x10(%r13)
	movq %r10,0x18(%r13)
	movq %r10,0x8(%rbp)
	movq %r13,0x10(%rbp)
	addq $0x28,%r12
	jmp x_1185
.p2align 0x4
L_385610:
L_31103:
	shrq $0x1,%r15
	movl %r15d,%r13d
	movd %r13d,%xmm15
	movss %xmm15,0x8(%rbp)
	movq 0x30(%r14),%r15
	movq %r15,0x10(%rbp)
	movq 0x28(%r14),%r15
	movq 0x20(%r14),%r13
	movq %r13,0x18(%rbp)
	movq 0x18(%r14),%r13
	movl 0x4(%r13),%r11d
	movd %xmm15,%r10d
	movl 0x0(%r13),%r9d
	movl %r9d,%r8d
	andl %r10d,%r8d
	cmpl %r9d,%r8d
	je L_385635
L_31104:
	testl %r8d,%r8d
	jnz L_385634
L_31178:
	andl %r10d,%r11d
	jnz L_385612
L_31180:
	movl 0xC(%r15),%r14d
	andl %r14d,%r10d
	cmpl %r10d,%r14d
	je L_385611
L_31181:
	movq (globalObjptr+0xE470)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_385611:
L_31182:
	movq (globalObjptr+0xE470)(%rip),%r15
L_31152:
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xE468)(%rip),%r15
	movq %r15,0x8(%rbp)
	jmp append_0
.p2align 0x4
L_385612:
L_31179:
	movb $0x1,0xC(%rbp)
L_31106:
	movl (gcState+0x44)(%rip),%r15d
	incl %r15d
	movl %r15d,(gcState+0x44)(%rip)
	movq 0x18(%rbp),%r14
	movl 0x0(%r14),%r13d
	movl %r13d,0x20(%rbp)
	testl %r13d,%r13d
	jnz L_385632
L_31107:
	movl $0x1,0x0(%r14)
	testl %r15d,%r15d
	jz L_385631
L_31108:
	decl %r15d
	movl %r15d,(gcState+0x44)(%rip)
	movq (globalObjptr+0x768)(%rip),%r15
	movq %r15,0x28(%rbp)
L_31109:
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0x28(%rbp),%rcx
	movl $0x1,%r15d
	movl %r15d,%edx
	movl $0x0,%r15d
	movl %r15d,%esi
	movl $0x0,%r15d
	movl %r15d,%edi
	movss 0x8(%rbp),%xmm15
	movss %xmm15,%xmm0
	movq $0x1,%rax
	addq $0x38,%rbp
	leaq (L_31110+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Real32_gdtoa
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_31110
.p2align 0x4
.long 0x4F2
L_31110:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x28(%rbp),%r14
	movl 0x0(%r14),%r13d
	movl %r13d,0x24(%rbp)
	movl 0x20(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_385630
L_31111:
	movq 0x18(%rbp),%r14
	movl $0x0,0x0(%r14)
	movq %rax,%r15
L_31112:
	xorl %ecx,%ecx
.p2align 0x4,,0x7
loop_440:
	movq %r15,%r14
	movq %r14,0x18(%rbp)
	movslq %ecx,%r13
	movb 0x0(%r14,%r13,1),%r11b
	testb %r11b,%r11b
	jz L_385613
L_31113:
	incl %ecx
	jmp loop_440
.p2align 0x4
L_385613:
L_31114:
	decl %ecx
	jo L_31115
L_31116:
	movl %ecx,0x20(%rbp)
	movq $0x1,0x28(%rbp)
.p2align 0x4,,0x7
loop_441:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_385628
.p2align 0x4,,0x7
L_31117:
	movl 0x20(%rbp),%r15d
	cmpl $0x0,%r15d
	jl L_385615
L_31118:
	movl %r15d,%r14d
	decl %r14d
	movslq %r15d,%r13
	movq 0x18(%rbp),%r15
	movzbl 0x0(%r15,%r13,1),%r11d
	subl $0x30,%r11d
	jo L_385614
L_31119:
	movl %r14d,0x20(%rbp)
	movq $0x1B59,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r11d,0x0(%r15)
	addq $0x18,%r12
	movl $0x0,0x4(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x28(%rbp)
	jmp loop_441
.p2align 0x4
L_385614:
L_31115:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_385615:
L_31120:
	movss 0x8(%rbp),%xmm15
	ucomiss (globalReal32+0x8)(%rip),%xmm15
	setnp %bl
	movzbl %bl,%ebx
	setc %cl
	movzbl %cl,%ecx
	andl %ebx,%ecx
	movl %ecx,0x18(%rbp)
	movb 0xC(%rbp),%r14b
	cmpb $0x1,%r14b
	je norm_0
	cmpb $0x2,%r14b
	je norm_2
L_31121:
	movq (c_stackP+0x0)(%rip),%rsp
	movq (globalObjptr+0xC9C8)(%rip),%rdi
	xorq %rax,%rax
	call MLton_bug
.p2align 0x4
norm_2:
norm_0:
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_385627
L_31123:
	movl 0x0(%r15),%r14d
	movq 0x8(%r15),%r15
	movq %r15,0x28(%rbp)
	movl %r14d,0x1C(%rbp)
	movq $0x1,0x30(%rbp)
.p2align 0x4,,0x7
L_31124:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_385626
.p2align 0x4,,0x7
L_31125:
	movslq 0x1C(%rbp),%r15
	cmpq $0x10,%r15
	jnb L_385625
L_31127:
	movq (globalObjptr+0xDCD8)(%rip),%r14
	movb 0x0(%r14,%r15,1),%r13b
	movq $0x1B5F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movzbl %r13b,%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_385616
L_31128:
	movq %r15,0x30(%rbp)
	movl 0x0(%r14),%r15d
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	movl %r15d,0x1C(%rbp)
	jmp L_31124
.p2align 0x4
L_385616:
L_31129:
	movb %r13b,0x1C(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq $0x1,0x30(%rbp)
.p2align 0x4,,0x7
L_31130:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_385624
.p2align 0x4,,0x7
L_31131:
	movq $0x1B5F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movzbl 0x1C(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_385617
L_31132:
	movq %r15,0x30(%rbp)
	movb 0x0(%r14),%r15b
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	movb %r15b,0x1C(%rbp)
	jmp L_31130
.p2align 0x4
L_385617:
L_31133:
	movq %r15,0x28(%rbp)
L_31134:
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_385623
L_31135:
	movq 0x8(%r14),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_31136:
	incl %ecx
	cmpq $0x1,%r15
	je L_385618
L_31137:
	movq 0x8(%r15),%r15
	jmp L_31136
.p2align 0x4
L_385618:
L_31138:
L_31139:
	movslq %ecx,%rdx
	movq %rdx,0x30(%rbp)
	testq %rdx,%rdx
	jz L_385622
L_31140:
	cmpq $0x7FFFFFFF,%rdx
	ja L_385621
L_31141:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x51,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_31142+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_31142
.p2align 0x4
.long 0x50C
L_31142:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq %rax,%r15
L_31143:
	movq 0x28(%rbp),%r13
	xorq %r14,%r14
.p2align 0x4,,0x7
loop_442:
	cmpq 0x30(%rbp),%r14
	jnl L_385620
L_31158:
	cmpq $0x1,%r13
	je L_385619
L_31159:
	movq 0x8(%r13),%r11
	movb 0x0(%r13),%r10b
	movb %r10b,0x0(%r15,%r14,1)
	incq %r14
	movq %r11,%r13
	jmp loop_442
.p2align 0x4
L_385619:
L_31160:
	movq (globalObjptr+0x5A0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_385620:
L_31144:
	movq $0x7,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x30(%rbp)
	movq (globalObjptr+0xE460)(%rip),%r15
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_31145+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_385621:
L_31161:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_385622:
L_31162:
	movq (globalObjptr+0x598)(%rip),%r15
	jmp L_31143
.p2align 0x4
L_385623:
L_31163:
	xorl %ecx,%ecx
	jmp L_31139
.p2align 0x4
L_385624:
L_31164:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_31165+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_31165
.p2align 0x4
.long 0x73C
L_31165:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_31131
.p2align 0x4
L_385625:
L_31126:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_385626:
L_31166:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_31167+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_31167
.p2align 0x4
.long 0x73C
L_31167:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_31125
.p2align 0x4
L_385627:
L_31168:
	movq $0x1,0x28(%rbp)
	jmp L_31134
.p2align 0x4
L_385628:
L_31170:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_31171+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_31171
.p2align 0x4
.long 0x8B1
L_31171:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_31117
.p2align 0x4
L_385630:
	movq %rax,%r15
	jmp L_31112
.p2align 0x4
L_385631:
L_31174:
	movq (globalObjptr+0x740)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_385632:
L_31175:
	testl %r15d,%r15d
	jz L_31174
L_31176:
	decl %r15d
	movl %r15d,(gcState+0x44)(%rip)
	movq $0x4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq %r15,0x28(%rbp)
	jmp L_31109
.p2align 0x4
L_385634:
L_31105:
	movb $0x2,0xC(%rbp)
	jmp L_31106
.p2align 0x4
L_385635:
L_31183:
	andl %r10d,%r11d
	jz L_385636
L_31184:
	movq (globalObjptr+0xE478)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_385636:
L_31185:
	movss (globalReal32+0x8)(%rip),%xmm15
	ucomiss 0x8(%rbp),%xmm15
	setnp %al
	movzbl %al,%eax
	setc %bl
	movzbl %bl,%ebx
	andl %eax,%ebx
	jnz L_385637
L_31186:
	movq (globalObjptr+0xE480)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_385637:
L_31187:
	movq (globalObjptr+0xD5F8)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_385638:
L_31188:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_31189+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_31189
.p2align 0x4
.long 0x45F
L_31189:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_31101
.p2align 0x4
.long 0x8B0
L_31145:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movl 0x24(%rbp),%r15d
	testl %r15d,%r15d
	jz L_385640
L_31146:
	movl %r15d,0x38(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_31147+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_385640:
L_31155:
	movl 0x18(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_385641
L_31156:
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_385641:
L_31157:
	movq 0x28(%rbp),%r14
	movq %r14,%r15
	jmp L_31152
.p2align 0x4
.long 0x51A
L_31147:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_31148
L_31153:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_31154+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_31154
.p2align 0x4
.long 0x508
L_31154:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_31148:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xDC20)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_31149+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x473
L_31149:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movl 0x18(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_31152
L_31150:
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl x_1185
.hidden x_1185
x_1185:
L_31190:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_31355
L_31191:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_385695
L_31192:
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	movsd 0x0(%rbp),%xmm15
	movd %xmm15,%r13
	movq %r13,%r11
	movq 0x0(%r15),%r10
	andq %r10,%r11
	cmpq %r11,%r10
	jne L_385646
L_31350:
	andq %r14,%r13
	jz L_385644
L_31351:
	movq (globalObjptr+0xE478)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_385644:
L_31352:
	movsd (globalReal64+0x0)(%rip),%xmm15
	ucomisd 0x0(%rbp),%xmm15
	setnp %al
	movzbl %al,%eax
	setc %bl
	movzbl %bl,%ebx
	andl %eax,%ebx
	jnz L_385645
L_31353:
	movq (globalObjptr+0xE480)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_385645:
L_31354:
	movq (globalObjptr+0xD5F8)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_385646:
L_31193:
	movq 0x10(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x2998,%r14
	je L_385675
L_31265:
	movq 0x10(%r15),%r14
	movq %r14,0x8(%rbp)
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r11
	movq %r11,0x18(%rbp)
	movq 0x18(%r15),%r11
	movq 0x8(%r11),%r10
	movq %r13,%r9
	movq 0x0(%r11),%r8
	andq %r8,%r9
	cmpq %r9,%r8
	je L_385671
L_31266:
	testq %r9,%r9
	jnz L_385670
L_31338:
	andq %r13,%r10
	jnz L_385648
L_31340:
	movq 0x10(%r14),%r15
	andq %r15,%r13
	cmpq %r15,%r13
	je L_385647
L_31341:
	movq (globalObjptr+0xE470)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_385647:
L_31342:
	movq (globalObjptr+0xE470)(%rip),%r15
L_31313:
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xE468)(%rip),%r15
	movq %r15,0x8(%rbp)
	jmp append_0
.p2align 0x4
L_385648:
L_31339:
	movb $0x1,0x10(%rbp)
L_31268:
	movl (gcState+0x44)(%rip),%r15d
	incl %r15d
	movl %r15d,(gcState+0x44)(%rip)
	movq 0x8(%rbp),%r14
	movl 0x0(%r14),%r13d
	movl %r13d,0x14(%rbp)
	testl %r13d,%r13d
	jnz L_385668
L_31269:
	movl $0x1,0x0(%r14)
	testl %r15d,%r15d
	jz L_385667
L_31270:
	decl %r15d
	movl %r15d,(gcState+0x44)(%rip)
	movq (globalObjptr+0x770)(%rip),%r15
	movq %r15,0x20(%rbp)
L_31271:
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0x20(%rbp),%rcx
	movl $0x1,%r15d
	movl %r15d,%edx
	movl $0x0,%r15d
	movl %r15d,%esi
	movl $0x0,%r15d
	movl %r15d,%edi
	movsd 0x0(%rbp),%xmm15
	movsd %xmm15,%xmm0
	movq $0x1,%rax
	addq $0x30,%rbp
	leaq (L_31272+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Real64_gdtoa
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_31272
.p2align 0x4
.long 0x72F
L_31272:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x20(%rbp),%r14
	movl 0x0(%r14),%r13d
	movl %r13d,0x28(%rbp)
	movl 0x14(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_385666
L_31273:
	movq 0x8(%rbp),%r14
	movl $0x0,0x0(%r14)
	movq %rax,%r15
L_31274:
	xorl %ecx,%ecx
.p2align 0x4,,0x7
loop_446:
	movq %r15,%r14
	movq %r14,0x8(%rbp)
	movslq %ecx,%r13
	movb 0x0(%r14,%r13,1),%r11b
	testb %r11b,%r11b
	jz L_385649
L_31275:
	incl %ecx
	jmp loop_446
.p2align 0x4
L_385649:
L_31276:
	decl %ecx
	jo L_31231
L_31277:
	movl %ecx,0x14(%rbp)
	movq $0x1,0x20(%rbp)
.p2align 0x4,,0x7
loop_447:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_385664
.p2align 0x4,,0x7
L_31278:
	movl 0x14(%rbp),%r15d
	cmpl $0x0,%r15d
	jl L_385651
L_31279:
	movl %r15d,%r14d
	decl %r14d
	movslq %r15d,%r13
	movq 0x8(%rbp),%r15
	movzbl 0x0(%r15,%r13,1),%r11d
	subl $0x30,%r11d
	jo L_385650
L_31280:
	movl %r14d,0x14(%rbp)
	movq $0x1B59,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r11d,0x0(%r15)
	addq $0x18,%r12
	movl $0x0,0x4(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x20(%rbp)
	jmp loop_447
.p2align 0x4
L_385650:
L_31231:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_385651:
L_31281:
	movsd 0x0(%rbp),%xmm15
	ucomisd (globalReal64+0x0)(%rip),%xmm15
	setnp %bl
	movzbl %bl,%ebx
	setc %cl
	movzbl %cl,%ecx
	andl %ebx,%ecx
	movl %ecx,0x8(%rbp)
	movb 0x10(%rbp),%r14b
	cmpb $0x1,%r14b
	je norm_1
	cmpb $0x2,%r14b
	je norm_4
L_31282:
	movq (c_stackP+0x0)(%rip),%rsp
	movq (globalObjptr+0xC9C8)(%rip),%rdi
	xorq %rax,%rax
	call MLton_bug
.p2align 0x4
norm_4:
norm_1:
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je L_385663
L_31284:
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	movl 0x0(%r15),%r14d
	movl %r14d,0xC(%rbp)
	movq $0x1,0x20(%rbp)
.p2align 0x4,,0x7
L_31285:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_385662
.p2align 0x4,,0x7
L_31286:
	movslq 0xC(%rbp),%r15
	cmpq $0x10,%r15
	jnb L_385661
L_31288:
	movq (globalObjptr+0xDCD8)(%rip),%r14
	movb 0x0(%r14,%r15,1),%r13b
	movq $0x1B5F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movzbl %r13b,%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_385652
L_31289:
	movq %r15,0x20(%rbp)
	movl 0x0(%r14),%r15d
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movl %r15d,0xC(%rbp)
	jmp L_31285
.p2align 0x4
L_385652:
L_31290:
	movb %r13b,0xC(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq $0x1,0x20(%rbp)
.p2align 0x4,,0x7
L_31291:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_385660
.p2align 0x4,,0x7
L_31292:
	movq $0x1B5F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movzbl 0xC(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_385653
L_31293:
	movq %r15,0x20(%rbp)
	movb 0x0(%r14),%r15b
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movb %r15b,0xC(%rbp)
	jmp L_31291
.p2align 0x4
L_385653:
L_31294:
	movq %r15,0x10(%rbp)
L_31295:
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_385659
L_31296:
	movq 0x8(%r14),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_31297:
	incl %ecx
	cmpq $0x1,%r15
	je L_385654
L_31298:
	movq 0x8(%r15),%r15
	jmp L_31297
.p2align 0x4
L_385654:
L_31299:
L_31300:
	movslq %ecx,%rdx
	movq %rdx,0x20(%rbp)
	testq %rdx,%rdx
	jz L_385658
L_31301:
	cmpq $0x7FFFFFFF,%rdx
	ja L_385657
L_31302:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x51,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_31303+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_31303
.p2align 0x4
.long 0x8B8
L_31303:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq %rax,%r15
L_31304:
	movq 0x10(%rbp),%r13
	xorq %r14,%r14
.p2align 0x4,,0x7
loop_448:
	cmpq 0x20(%rbp),%r14
	jnl L_385656
L_31319:
	cmpq $0x1,%r13
	je L_385655
L_31320:
	movq 0x8(%r13),%r11
	movb 0x0(%r13),%r10b
	movb %r10b,0x0(%r15,%r14,1)
	incq %r14
	movq %r11,%r13
	jmp loop_448
.p2align 0x4
L_385655:
L_31321:
	movq (globalObjptr+0x5A0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_385656:
L_31305:
	movq $0x7,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x38(%rbp)
	movq (globalObjptr+0xE460)(%rip),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_31306+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_385657:
L_31247:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_385658:
L_31323:
	movq (globalObjptr+0x598)(%rip),%r15
	jmp L_31304
.p2align 0x4
L_385659:
L_31324:
	xorl %ecx,%ecx
	jmp L_31300
.p2align 0x4
L_385660:
L_31325:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_31326+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_31326
.p2align 0x4
.long 0x650
L_31326:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_31292
.p2align 0x4
L_385661:
L_31287:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_385662:
L_31327:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_31328+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_31328
.p2align 0x4
.long 0x650
L_31328:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_31286
.p2align 0x4
L_385663:
L_31329:
	movq $0x1,0x10(%rbp)
	jmp L_31295
.p2align 0x4
L_385664:
L_31331:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_31332+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_31332
.p2align 0x4
.long 0x8B9
L_31332:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_31278
.p2align 0x4
L_385666:
	movq %rax,%r15
	jmp L_31274
.p2align 0x4
L_385667:
L_31252:
	movq (globalObjptr+0x740)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_385668:
L_31335:
	testl %r15d,%r15d
	jz L_31252
L_31336:
	decl %r15d
	movl %r15d,(gcState+0x44)(%rip)
	movq $0x4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq %r15,0x20(%rbp)
	jmp L_31271
.p2align 0x4
L_385670:
L_31267:
	movb $0x2,0x10(%rbp)
	jmp L_31268
.p2align 0x4
L_385671:
L_31343:
	andq %r13,%r10
	jz L_385673
L_31344:
	movq 0x10(%r14),%r15
	andq %r15,%r13
	cmpq %r15,%r13
	je L_385672
L_31345:
	movq (globalObjptr+0xE478)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_385672:
L_31346:
	movq (globalObjptr+0xE478)(%rip),%r15
	jmp L_31313
.p2align 0x4
L_385673:
L_31347:
	movsd 0x0(%rbp),%xmm15
	ucomisd (globalReal64+0x0)(%rip),%xmm15
	setnp %al
	movzbl %al,%eax
	setc %bl
	movzbl %bl,%ebx
	andl %eax,%ebx
	jnz L_385674
L_31348:
	movq (globalObjptr+0xD5F8)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_385674:
L_31349:
	movq (globalObjptr+0xD5F8)(%rip),%r15
	jmp L_31313
.p2align 0x4
L_385675:
L_31194:
	movl 0x0(%r15),%r14d
	movl %r14d,0x8(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movsd 0x0(%rbp),%xmm15
	ucomisd (globalReal64+0x0)(%rip),%xmm15
	setnp %al
	movzbl %al,%eax
	setc %bl
	movzbl %bl,%ebx
	andl %eax,%ebx
	jnz L_385694
L_31195:
	movq (globalObjptr+0xA058)(%rip),%r15
	movq %r15,0x10(%rbp)
L_31196:
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_31197+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call IEEEReal_getRoundingMode
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_31197
.p2align 0x4
.long 0x2C
L_31197:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl %eax,0xC(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_31198
L_31262:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_31263+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_31263
.p2align 0x4
.long 0x2C
L_31263:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_31198:
	movl 0xC(%rbp),%r15d
	testl %r15d,%r15d
	jz L_385692
L_31199:
	cmpl $0x1,%r15d
	je L_385691
L_31200:
	cmpl $0x2,%r15d
	je L_385690
L_31201:
	cmpl $0x3,%r15d
	je L_385676
L_31202:
	movq (globalObjptr+0x778)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_385676:
L_31203:
	xorb %dl,%dl
L_31204:
	cmpb $0x1,%dl
	je L_385689
	cmpb $0x2,%dl
	je L_385688
	cmpb $0x3,%dl
	je L_385687
L_31205:
	xorl %ecx,%ecx
L_31206:
	movl (gcState+0x44)(%rip),%r15d
	incl %r15d
	movl %r15d,(gcState+0x44)(%rip)
	movq 0x18(%rbp),%r14
	movl 0x0(%r14),%r13d
	movl %r13d,0xC(%rbp)
	testl %r13d,%r13d
	jnz L_385685
L_31207:
	movl $0x1,0x0(%r14)
	testl %r15d,%r15d
	jz L_31252
L_31208:
	decl %r15d
	movl %r15d,(gcState+0x44)(%rip)
	movq (globalObjptr+0x770)(%rip),%r15
	movq %r15,0x20(%rbp)
L_31209:
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0x20(%rbp),%r15
	movl %ecx,(localWord32+0x0)(%rip)
	movq %r15,%rcx
	movl (localWord32+0x0)(%rip),%edx
	movl 0x8(%rbp),%esi
	movl $0x3,%r15d
	movl %r15d,%edi
	movsd 0x0(%rbp),%xmm15
	movsd %xmm15,%xmm0
	movq $0x1,%rax
	addq $0x30,%rbp
	leaq (L_31210+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call Real64_gdtoa
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_31210
.p2align 0x4
.long 0x4B1
L_31210:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq %rax,0x28(%rbp)
	movq 0x20(%rbp),%r15
	movl 0x0(%r15),%r14d
	movl %r14d,0x30(%rbp)
	movl 0xC(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_31212
L_31211:
	movq 0x18(%rbp),%r15
	movl $0x0,0x0(%r15)
L_31212:
	movl $0x0,0xC(%rbp)
.p2align 0x4,,0x7
loop_443:
	movq 0x28(%rbp),%r15
	movq %r15,0x18(%rbp)
	movl 0xC(%rbp),%r14d
	movslq %r14d,%r13
	movb 0x0(%r15,%r13,1),%r11b
	testb %r11b,%r11b
	jz L_385677
L_31213:
	incl %r14d
	movl %r14d,0xC(%rbp)
	jmp loop_443
.p2align 0x4
L_385677:
L_31214:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_31215
L_31248:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_31249+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_31249
.p2align 0x4
.long 0x8B7
L_31249:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_31215:
	movl 0x30(%rbp),%r15d
	cmpl $0x0,%r15d
	jl L_385680
L_31216:
	testl %r15d,%r15d
	jz L_385678
L_31217:
	movq $0x3F17,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movl 0xC(%rbp),%r13d
	movl %r13d,0x8(%r14)
	movl $0x0,0xC(%r14)
	movq %r14,0x40(%rbp)
	movl %r15d,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_31218+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_0
.p2align 0x4
L_385678:
L_31229:
	movq (globalObjptr+0xD808)(%rip),%r14
	movq %r14,0x18(%rbp)
L_31220:
	movl 0x8(%rbp),%r15d
	testl %r15d,%r15d
	jz L_385679
L_31221:
	movq $0x3F19,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movl 0xC(%rbp),%r13d
	movl %r13d,0x8(%r14)
	movl 0x30(%rbp),%r13d
	movl %r13d,0xC(%r14)
	movq %r14,0x28(%rbp)
	movl %r15d,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_31222+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_0
.p2align 0x4
L_385679:
L_31226:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r13,0x0(%rbp)
	jmp concat_0
.p2align 0x4
L_385680:
L_31230:
	negl %r15d
	jo L_31231
L_31232:
	movl %r15d,0x48(%rbp)
	movq $0x30,%r15
	shlq $0x4,%r15
	orq $0x9,%r15
	movq %r15,0x20(%rbp)
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_31233+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_0
.p2align 0x4
L_385685:
L_31253:
	testl %r15d,%r15d
	jz L_31252
L_31254:
	decl %r15d
	movl %r15d,(gcState+0x44)(%rip)
	movq $0x4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq %r15,0x20(%rbp)
	jmp L_31209
.p2align 0x4
L_385687:
L_31258:
	movl $0x1,%ecx
	jmp L_31206
.p2align 0x4
L_385688:
L_31257:
	movl $0x3,%ecx
	jmp L_31206
.p2align 0x4
L_385689:
L_31256:
	movl $0x2,%ecx
	jmp L_31206
.p2align 0x4
L_385690:
L_31259:
	movb $0x1,%dl
	jmp L_31204
.p2align 0x4
L_385691:
L_31260:
	movb $0x2,%dl
	jmp L_31204
.p2align 0x4
L_385692:
L_31261:
	movb $0x3,%dl
	jmp L_31204
.p2align 0x4
L_385694:
L_31264:
	movq (globalObjptr+0xE468)(%rip),%r15
	movq %r15,0x10(%rbp)
	jmp L_31196
.p2align 0x4
L_385695:
L_31355:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_31356+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_31356
.p2align 0x4
.long 0x4E8
L_31356:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_31192
.p2align 0x4
.long 0x602
L_31306:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x10(%rbp)
	movl 0x28(%rbp),%r15d
	testl %r15d,%r15d
	jz L_385697
L_31307:
	movl %r15d,0x20(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_31308+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_385697:
L_31316:
	movl 0x8(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_385698
L_31317:
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_385698:
L_31318:
	movq 0x10(%rbp),%r14
	movq %r14,%r15
	jmp L_31313
.p2align 0x4
.long 0x8B2
L_31218:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_31220
L_31227:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_31228+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_31228
.p2align 0x4
.long 0x8B3
L_31228:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_31220
.p2align 0x4
.long 0x490
L_31222:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_31223
L_31224:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_31225+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_31225
.p2align 0x4
.long 0x4B1
L_31225:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_31223:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xA050)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x8B2
L_31233:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x28(%rbp)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
loop_444:
	movslq %ecx,%r15
	movq %r15,0x38(%rbp)
	movq 0x18(%rbp),%r13
	movb 0x0(%r13,%r15,1),%r14b
	testb %r14b,%r14b
	jz L_385701
L_31234:
	incl %ecx
	jmp loop_444
.p2align 0x4
L_385701:
L_31235:
	movq 0x38(%rbp),%rdx
	cmpq $0x7FFFFFFF,%rdx
	ja L_31247
L_31236:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x51,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_31237+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_31237
.p2align 0x4
.long 0x8B4
L_31237:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq %rax,0x40(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_445:
	cmpq 0x38(%rbp),%r15
	jnl L_385702
L_31245:
	movl %r15d,%r14d
	movslq %r14d,%r13
	movq 0x40(%rbp),%r14
	movq 0x18(%rbp),%r10
	movb 0x0(%r10,%r13,1),%r11b
	movb %r11b,0x0(%r14,%r15,1)
	incq %r15
	jmp loop_445
.p2align 0x4
L_385702:
L_31238:
	movq 0x40(%rbp),%r15
	movq $0x7,0xFFFFFFFFFFFFFFF8(%r15)
	movl 0x8(%rbp),%r15d
	subl 0xC(%rbp),%r15d
	jo L_31231
L_31239:
	addl 0x30(%rbp),%r15d
	jo L_31231
L_31240:
	movl %r15d,0x58(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_31241+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_0
.p2align 0x4
.long 0x2B
L_31308:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_31309
L_31314:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_31315+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_31315
.p2align 0x4
.long 0x2C
L_31315:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_31309:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xDC20)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_31310+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x8B5
L_31241:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_31242
L_31243:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_31244+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_31244
.p2align 0x4
.long 0x8B6
L_31244:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_31242:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x40(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xE460)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x25
L_31310:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movl 0x8(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_31313
L_31311:
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl x_1247
.hidden x_1247
x_1247:
L_31357:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_31358
L_31429:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_31430+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_31430
.p2align 0x4
.long 0x657
L_31430:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_31358:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x58(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_31359+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_28
.p2align 0x4
.long 0x8BA
L_31359:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq $0x1,%r15
	je L_385710
L_31360:
	movq (globalObjptr+0x4FA0)(%rip),%r15
	movq %r15,0x40(%rbp)
	movl $0x8,%ecx
	movq $0x1,0x50(%rbp)
L_31361:
	movslq %ecx,%r15
	shlq $0x1,%r15
	orq $0x1,%r15
	movq %r15,0x60(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_31362+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_385710:
L_31428:
	movl $0x8,%ecx
	movq 0x40(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq $0x1,0x50(%rbp)
	movq (globalObjptr+0x4FA0)(%rip),%r15
	movq %r15,0x40(%rbp)
	jmp L_31361
.p2align 0x4
.long 0x8BB
L_31362:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_31363
L_31426:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_31427+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_31427
.p2align 0x4
.long 0x8C1
L_31427:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_31363:
	movq $0x1BCD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_385711
L_31364:
	movq %r15,0x50(%rbp)
	movl 0x0(%r14),%ecx
	movq 0x8(%r14),%r14
	movq %r14,0x40(%rbp)
	jmp L_31361
.p2align 0x4
L_385711:
L_31365:
	movq 0x50(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq $0x1,0x58(%rbp)
.p2align 0x4,,0x7
L_31366:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_385713
.p2align 0x4,,0x7
L_31367:
	movq $0x1BCD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_385712
L_31368:
	movq %r15,0x58(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x40(%rbp)
	movq %r15,0x50(%rbp)
	jmp L_31366
.p2align 0x4
L_385712:
L_31369:
	movq 0x58(%rbp),%r15
	movq %r15,0x40(%rbp)
L_31370:
	movq 0x50(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_31371+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_385713:
L_31424:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_31425+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_31425
.p2align 0x4
.long 0x8C0
L_31425:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	jmp L_31367
.p2align 0x4
.long 0x8BC
L_31371:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movl 0x60(%rbp),%r15d
	movl %r15d,0x58(%rbp)
	movslq %r15d,%r14
	movq 0x18(%rbp),%r15
	cmpq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	jnb L_385718
L_31373:
	movq 0x0(%r15,%r14,8),%r13
	cmpq $0x1,%r13
	je L_385717
L_31374:
	movq 0x48(%rbp),%r15
	movq 0x10(%r15),%r14
	cmpq %r14,0x10(%r13)
	je L_385716
L_31375:
	movq 0x40(%rbp),%r15
	cmpq $0x1,%r15
	je L_385715
L_31376:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x40(%rbp)
	movq %r14,0x50(%rbp)
	jmp L_31370
.p2align 0x4
L_385715:
L_31377:
	movq (globalObjptr+0xBDB0)(%rip),%r14
	movq %r14,0x0(%rbp)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%rbp)
	jmp x_1266
.p2align 0x4
L_385716:
L_31378:
	movq 0x50(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_31379+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_385717:
L_31423:
	movq $0x9,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_385718:
L_31372:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x7C4
L_31379:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movl 0x60(%rbp),%r15d
	movl %r15d,0x40(%rbp)
	cmpl $0x8,%r15d
	je L_385729
	cmpl $0x10,%r15d
	je L_385728
	cmpl $0x20,%r15d
	je L_385719
L_31380:
	movq (globalObjptr+0x16E8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_385719:
L_31422:
	xorb %dl,%dl
L_31382:
	movq 0x30(%rbp),%r11
	movq 0x18(%r11),%r13
	movq 0x10(%r11),%r14
	movq 0x8(%r11),%r15
	movq 0x0(%r11),%r10
	movq %r10,0x40(%rbp)
	movq 0x28(%rbp),%r11
	movq %r11,%r10
	andq $0x1,%r10
	andq $0x1,%r10
	jz L_385726
L_31383:
	cmpq $0x1,%r11
	jl L_31390
L_31385:
	movq 0x10(%r13),%r11
	movq 0x8(%r13),%r10
	movq 0x0(%r13),%r9
	cmpb $0x1,%dl
	je L_385724
	cmpb $0x2,%dl
	je L_385723
L_31386:
	movq %r10,%r13
L_31387:
	movq %r13,%r11
	movq 0x28(%rbp),%r10
	andq %r10,%r11
	andq $0x1,%r11
	jz L_385721
L_31388:
	cmpq %r13,%r10
	jl L_385720
L_31390:
	movq %r15,0x68(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x30(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_31391+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp ordToString_0
.p2align 0x4
L_385720:
L_31399:
	movq 0x38(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_31400+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_385721:
L_31410:
	movq (c_stackP+0x0)(%rip),%rsp
	movq %r13,%rsi
	movq %r10,%rdi
	xorq %rax,%rax
	call IntInf_compare
L_31411:
	cmpl $0x0,%eax
	jl L_31399
	jmp L_31390
.p2align 0x4
L_385723:
L_31415:
	movq %r9,%r13
	jmp L_31387
.p2align 0x4
L_385724:
L_31414:
	movq %r11,%r13
	jmp L_31387
.p2align 0x4
L_385726:
L_31417:
	movq (c_stackP+0x0)(%rip),%rsp
	movq %r11,%rsi
	movq $0x1,%rdi
	xorq %rax,%rax
	movb %dl,%bl
	call IntInf_compare
L_31418:
	cmpl $0x0,%eax
	jg L_31390
	movb %bl,%dl
	jmp L_31385
.p2align 0x4
L_385728:
L_31421:
	movb $0x1,%dl
	jmp L_31382
.p2align 0x4
L_385729:
L_31381:
	movb $0x2,%dl
	jmp L_31382
.p2align 0x4
.long 0x8BD
L_31391:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_31392
L_31407:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_31408+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_31408
.p2align 0x4
.long 0x77A
L_31408:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_31392:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x13B8)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xE488)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0xE490)(%rip),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_31393+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x8BE
L_31400:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movl 0x60(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	movl %r15d,0x60(%rbp)
	movq $0x3,0x68(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x60,%rbp
	leaq (L_31401+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x8BD
L_31393:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_31394+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x8BF
L_31401:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq %r15,0x60(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x60,%rbp
	leaq (L_31402+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x8BD
L_31394:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	incl %r13d
	jo L_385731
L_31396:
	movl %r13d,0x0(%r14)
	movq (globalObjptr+0x9D0)(%rip),%r14
	movq %r14,0x60(%rbp)
	movq %r15,0x68(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x78(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x60,%rbp
	leaq (L_31397+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_385731:
L_31395:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x61B
L_31402:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_31403
L_31404:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_31405+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_31405
.p2align 0x4
.long 0x61C
L_31405:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_31403:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x7C5
L_31397:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq (globalObjptr+0x1608)(%rip),%r15
	movq (globalObjptr+0x1610)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	jne L_31399
L_31406:
	movq (globalObjptr+0x1618)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl get_28
.hidden get_28
get_28:
L_31431:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_31432
L_31737:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_31738+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_31738
.p2align 0x4
.long 0x45F
L_31738:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_31432:
	movq 0x8(%rbp),%r15
	movq 0x68(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x60(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x50(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x48(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x40(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_31433+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_0
.p2align 0x4
.long 0x65F
L_31433:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r13
	movq 0x0(%r13),%r15
	movq %r13,0x70(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1448,%r14
	jne L_385744
L_31435:
	movq 0x8(%r15),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x70(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_385743
L_31437:
	movq %r15,0x0(%r13)
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_385742
L_31438:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_31440:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_31441
L_31731:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xD64,%r13
	je L_385738
L_31441:
	incl %ecx
	jo L_385737
L_31443:
	cmpq $0x1,%r15
	je L_385735
L_31444:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_31440
.p2align 0x4
L_385735:
L_31445:
L_31446:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_385736
L_31448:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl x_61
L_31730:
	movl %ecx,0x0(%r15)
x_61:
	movq 0x0(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_31450+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_0
.p2align 0x4
L_385736:
L_31447:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_385737:
L_31442:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_385738:
L_31732:
	movq 0x0(%r14),%r15
	movslq %ecx,%r14
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r14
	jo L_31447
L_31733:
	movq %r14,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_385739
L_31735:
	movl %ecx,0x0(%r14)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_385739:
L_31734:
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_385742:
L_31736:
	xorl %ecx,%ecx
	jmp L_31446
.p2align 0x4
L_385743:
L_31436:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_385744:
L_31434:
	movq (globalObjptr+0x1500)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x8C2
L_31450:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x78(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_31451
L_31728:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_31729+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_31729
.p2align 0x4
.long 0x8DF
L_31729:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_31451:
	movq 0x78(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1448,%r15
	jne L_31434
L_31452:
	movq 0x8(%r14),%r15
	movq 0x10(%r15),%r13
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x28DD,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r14,0x8(%r11)
	addq $0x18,%r12
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq %r11,0x0(%r15)
	movq 0x0(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_31453+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_12
.p2align 0x4
.long 0x8C3
L_31453:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x10(%rbp)
	movb 0x0(%r15),%r14b
	cmpb $0x1,%r14b
	je L_385748
	cmpb $0x2,%r14b
	je L_385747
L_31454:
	movb $0x2,0x0(%r15)
	movq 0x0(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_31455+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_0
.p2align 0x4
L_385747:
L_31727:
	movq (globalObjptr+0x1BC0)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_385748:
L_31726:
	movq (globalObjptr+0x1AE0)(%rip),%r13
	movq %r13,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x8C4
L_31455:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_31456
L_31724:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_31725+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_31725
.p2align 0x4
.long 0x678
L_31725:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_31456:
	movq 0x18(%rbp),%r14
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1448,%r14
	jne L_31434
L_31457:
	movq 0x8(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	je L_385765
L_31458:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE77,%r15
	je L_385764
	cmpq $0xE78,%r15
	je L_385755
	cmpq $0xE79,%r15
	je L_385753
	cmpq $0xE7A,%r15
	je L_385751
	cmpq $0xE7B,%r15
	je L_385749
L_31459:
	movq $0x1,%r15
L_31460:
	movq 0x10(%rbp),%r14
	movb $0x1,0x0(%r14)
	movq $0x1AC9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r15,0x0(%rbp)
	addq $0x10,%r12
	movq 0x70(%rbp),%r15
	movq 0x0(%r15),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq %r11,0x0(%r15)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_385749:
L_31644:
	movq 0x8(%r13),%r15
	movq 0x0(%r13),%r14
	movq %r14,0x18(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_385750
L_31646:
	movl %r13d,0x88(%rbp)
	movq $0x39A9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_31647+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_4
.p2align 0x4
L_385750:
L_31465:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_385751:
L_31597:
	movq 0x8(%r13),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r13),%r14
	cmpq $0x1,%r14
	je L_385752
L_31598:
	movq 0x8(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0x0(%r14),%r14
	movq $0x1,0x38(%rbp)
	movq %r14,%r15
L_31599:
	movq 0x0(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_31600+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_28
.p2align 0x4
L_385752:
L_31643:
	movq $0x1,0x28(%rbp)
L_31604:
	movq 0x18(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_31605+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_1
.p2align 0x4
L_385753:
L_31513:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r11
	movq %r11,0x18(%rbp)
	cmpq $0x1,%r14
	je L_385754
L_31514:
	movq 0x8(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0x0(%r14),%r14
	movq $0x1,0x30(%rbp)
	movq %r14,%r15
L_31515:
	movq 0x0(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_31516+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_28
.p2align 0x4
L_385754:
L_31596:
	movq $0x1,0x28(%rbp)
L_31520:
	movq 0x18(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_31521+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp extra_0
.p2align 0x4
L_385755:
L_31462:
	movq 0x0(%r13),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x127F,%r14
	je L_385757
L_31496:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_31465
L_31498:
	movl %r13d,0x88(%rbp)
	movq $0x39A1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_31499+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_4
.p2align 0x4
L_385757:
L_31463:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	movq %r11,0x20(%rbp)
	cmpq %r11,%r15
	movq %r14,0x18(%rbp)
	jne L_31465
L_31466:
	testq %r11,%r11
	jz L_385762
L_31467:
	cmpq $0x7FFFFFFF,%r11
	ja L_385761
L_31468:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_31469
L_31491:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_31492+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_31492
.p2align 0x4
.long 0x8C5
L_31492:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_31469:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x15DF,%rcx
	movq 0x20(%rbp),%rdx
	movq $0x10,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_31470+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_31470
.p2align 0x4
.long 0x8C5
L_31470:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq %rax,0x30(%rbp)
L_31471:
	movq $0x0,0x38(%rbp)
loop_449:
	movq 0x20(%rbp),%r14
	cmpq %r14,0x38(%rbp)
	jl L_385759
L_31472:
	movq 0x30(%rbp),%r15
	movq $0xBA3,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x18(%rbp)
x_62:
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_31465
L_31474:
	movl %r13d,0x88(%rbp)
	movq $0x39A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x80(%rbp)
	addq $0x10,%r12
	addq $0x80,%rbp
	leaq (L_31475+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_4
.p2align 0x4
L_385759:
L_31486:
	movq 0x38(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x18(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x80(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_31487+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_28
.p2align 0x4
L_385761:
L_31494:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_385762:
L_31495:
	movq (globalObjptr+0x4F78)(%rip),%r15
	movq %r15,0x30(%rbp)
	jmp L_31471
.p2align 0x4
L_385764:
L_31461:
	movq 0x30(%rbp),%r15
	jmp L_31460
.p2align 0x4
L_385765:
L_31676:
	shrq $0x1,%r13
	movb %r13b,%r15b
	movb %r15b,0x8(%rbp)
	cmpb $0x1,%r15b
	je L_385772
	cmpb $0x2,%r15b
	je L_385771
	cmpb $0x3,%r15b
	je L_385766
L_31677:
	movq 0x50(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_31678+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp defaultWord_0
.p2align 0x4
L_385766:
L_31712:
	movq 0x38(%rbp),%r10
	movq 0x8(%r10),%r14
	movq 0x0(%r10),%r9
	movq 0x0(%r9),%r15
	cmpq %r15,(globalObjptr+0xCA68)(%rip)
	je L_385770
L_31713:
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r13
	cmpq $0x5,%r13
	jne L_31715
L_31716:
	xorq %r11,%r11
.p2align 0x4,,0x7
vectorEqualLoop_119:
	cmpq %r13,%r11
	je L_385768
L_31717:
	movq (globalObjptr+0xCA68)(%rip),%r10
	movb 0x0(%r15,%r11,1),%r9b
	cmpb %r9b,0x0(%r10,%r11,1)
	jne L_385767
L_31719:
	incq %r11
	jmp vectorEqualLoop_119
.p2align 0x4
L_385767:
L_31715:
	movq (globalObjptr+0x18C8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_385768:
	movq %r14,%r15
L_31721:
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	movq $0x1,0x80(%rbp)
	movl $0x0,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_31722+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_1
.p2align 0x4
L_385770:
	movq %r14,%r15
	jmp L_31721
.p2align 0x4
L_385771:
L_31709:
	movq 0x58(%rbp),%r14
	movq %r14,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_31710+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp defaultInt_0
.p2align 0x4
L_385772:
L_31687:
	movq 0x48(%rbp),%r10
	movq 0x8(%r10),%r14
	movq 0x0(%r10),%r9
	movq 0x0(%r9),%r8
	cmpq %r8,(globalObjptr+0xCA98)(%rip)
	je L_385778
L_31688:
	movq 0xFFFFFFFFFFFFFFF0(%r8),%r13
	cmpq $0x6,%r13
	sete %cl
	movzbl %cl,%ecx
	jne vectorEqual_225
L_31702:
	xorq %r11,%r11
	movq %r8,%r15
.p2align 0x4,,0x7
vectorEqualLoop_118:
	cmpq %r13,%r11
	je L_385777
L_31703:
	movq (globalObjptr+0xCA98)(%rip),%r10
	movb 0x0(%r15,%r11,1),%r9b
	cmpb %r9b,0x0(%r10,%r11,1)
	jne vectorEqual_224
L_31705:
	incq %r11
	jmp vectorEqualLoop_118
.p2align 0x4
vectorEqual_224:
vectorEqual_63:
	cmpq (globalObjptr+0xD6E8)(%rip),%r15
	je L_31698
L_31690:
	testl %ecx,%ecx
	jz L_31692
L_31693:
	xorq %r11,%r11
.p2align 0x4,,0x7
vectorEqualLoop_117:
	cmpq %r13,%r11
	je L_385774
L_31694:
	movq (globalObjptr+0xD6E8)(%rip),%r9
	movb 0x0(%r9,%r11,1),%r10b
	cmpb %r10b,0x0(%r15,%r11,1)
	jne L_385773
L_31696:
	incq %r11
	jmp vectorEqualLoop_117
.p2align 0x4
L_385773:
L_31692:
	movq (globalObjptr+0x1AD0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_385774:
L_31698:
	movq 0x0(%r14),%r15
	movq %r15,0x18(%rbp)
L_31699:
	movq $0x1,0x80(%rbp)
	movl $0x0,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_31700+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_1
.p2align 0x4
L_385777:
	movq %r14,%r15
L_31707:
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	jmp L_31699
.p2align 0x4
vectorEqual_225:
	movq %r8,%r15
	jmp vectorEqual_63
.p2align 0x4
L_385778:
	movq %r14,%r15
	jmp L_31707
.p2align 0x4
.long 0x8C6
L_31647:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb x_63
L_31674:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_31675+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_31675
.p2align 0x4
.long 0x8D8
L_31675:
	addq $0xFFFFFFFFFFFFFF80,%rbp
x_63:
	movq 0x18(%rbp),%r14
	movq 0x10(%r14),%r15
	movq (globalObjptr+0x1068)(%rip),%r14
	movq 0x0(%r14),%r13
	incq %r13
	jo L_31436
L_31649:
	movq %r13,0x0(%r14)
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_385791
L_31650:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq %r13,0x20(%rbp)
	movl $0x0,0x28(%rbp)
.p2align 0x4,,0x7
L_31652:
	movq 0x20(%rbp),%r14
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_31653
L_31665:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xCD1,%r13
	je L_385786
L_31653:
	movl 0x28(%rbp),%r14d
	incl %r14d
	movl %r14d,0x20(%rbp)
	jo L_31442
L_31654:
	cmpq $0x1,%r15
	je L_385781
L_31655:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movl %r14d,0x28(%rbp)
	movq %r13,0x20(%rbp)
	jmp L_31652
.p2align 0x4
L_385781:
L_31656:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_31657
L_31663:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_31664+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_31664
.p2align 0x4
.long 0x8D8
L_31664:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_31657:
	movl 0x20(%rbp),%ecx
L_31658:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_31447
L_31659:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_385782
L_31662:
	movl %ecx,0x0(%r14)
	movq 0x18(%rbp),%r15
	jmp L_31460
.p2align 0x4
L_385782:
L_31660:
	movq 0x18(%rbp),%r15
	jmp L_31460
.p2align 0x4
L_385786:
L_31666:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_31667
L_31671:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_31672+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_31672
.p2align 0x4
.long 0x8D9
L_31672:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_31667:
	movq 0x20(%rbp),%r14
	movq 0x0(%r14),%r13
	movl 0x28(%rbp),%r14d
	movslq %r14d,%r15
	movq (globalObjptr+0x1070)(%rip),%r11
	addq 0x0(%r11),%r15
	jo L_31447
L_31668:
	movq %r15,0x0(%r11)
	movq (globalObjptr+0x1078)(%rip),%r11
	cmpl %r14d,0x0(%r11)
	jl L_385787
L_31669:
	movq 0x8(%r13),%r13
	movq %r13,%r15
	jmp L_31460
.p2align 0x4
L_385787:
L_31670:
	movq (globalObjptr+0x1078)(%rip),%r14
	movl 0x28(%rbp),%r11d
	movl %r11d,0x0(%r14)
	movq 0x8(%r13),%r13
	movq %r13,%r15
	jmp L_31460
.p2align 0x4
L_385791:
L_31673:
	xorl %ecx,%ecx
	jmp L_31658
.p2align 0x4
.long 0x8D3
L_31600:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_31601
L_31641:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_31642+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_31642
.p2align 0x4
.long 0x8D7
L_31642:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_31601:
	movq $0x1043,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x2837,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x28(%rbp),%r13
	cmpq $0x1,%r13
	je L_385793
L_31602:
	movq %r14,0x38(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x28(%rbp)
	jmp L_31599
.p2align 0x4
L_385793:
L_31603:
	movq %r14,0x28(%rbp)
	jmp L_31604
.p2align 0x4
.long 0x8D4
L_31605:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x8(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1446,%r15
	jne L_31434
L_31606:
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r13
	movl 0x0(%r13),%r11d
	testl %r11d,%r11d
	jnz L_385795
L_31607:
	movq 0x18(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_31608+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_1
.p2align 0x4
L_385795:
L_31640:
	movq (globalObjptr+0x1BC8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x8CD
L_31516:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_31517
L_31594:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_31595+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_31595
.p2align 0x4
.long 0x8D2
L_31595:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_31517:
	movq $0x1043,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x2837,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x28(%rbp),%r13
	cmpq $0x1,%r13
	je L_385797
L_31518:
	movq %r14,0x30(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x28(%rbp)
	jmp L_31515
.p2align 0x4
L_385797:
L_31519:
	movq %r14,0x28(%rbp)
	jmp L_31520
.p2align 0x4
.long 0x8CE
L_31521:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq $0x1,%r15
	je L_385825
L_31522:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x18(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq %r14,0x28(%rbp)
.p2align 0x4,,0x7
L_31523:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_385824
.p2align 0x4,,0x7
L_31524:
	movq 0x28(%rbp),%r15
	movq 0x8(%r15),%r14
	movq $0x1043,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq $0x1,0x0(%r15)
	movq $0x2837,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_385799
L_31525:
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x18(%rbp)
	movq %r14,0x28(%rbp)
	jmp L_31523
.p2align 0x4
L_385799:
L_31526:
	movq %r14,0x18(%rbp)
unsorted_0:
	movq 0x20(%rbp),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_385823
L_31527:
	movq 0x8(%r14),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_31528:
	incl %ecx
	jo L_31442
L_31529:
	cmpq $0x1,%r15
	je L_385800
L_31530:
	movq 0x8(%r15),%r15
	jmp L_31528
.p2align 0x4
L_385800:
L_31531:
L_31532:
	movslq %ecx,%rdx
	movq %rdx,0x20(%rbp)
	cmpq $0x7FFFFFFF,%rdx
	ja L_31494
L_31533:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xAD7,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_31534+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_31534
.p2align 0x4
.long 0x8CB
L_31534:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq %rax,0x30(%rbp)
	movq 0x18(%rbp),%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_451:
	cmpq 0x20(%rbp),%r15
	jnl L_385802
L_31586:
	cmpq $0x1,%r14
	je L_385801
L_31587:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq 0x30(%rbp),%r11
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r13,0x0(%r11,%r15,8)
	incq %r15
	jmp loop_451
.p2align 0x4
L_385801:
L_31588:
	movq (globalObjptr+0x4B0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_385802:
L_31535:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_31536
L_31584:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_31585+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_31585
.p2align 0x4
.long 0x8CC
L_31585:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_31536:
	movq 0x20(%rbp),%r15
	movl %r15d,%r14d
	movl %r14d,0x18(%rbp)
	movslq %r14d,%r13
	movq %r13,0x38(%rbp)
	cmpq %r15,%r13
	jne L_31465
L_31538:
	testl %r14d,%r14d
	jz L_385813
L_31539:
	movq $0x1715,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x40(%rbp)
	addq $0x18,%r12
	movq 0x30(%rbp),%r11
	movq %r11,0x0(%r13)
	movq %r11,0x8(%r13)
	cmpq $0x0,%r15
	jna L_31482
L_31541:
	movq 0x0(%r11),%r15
	cmpl $0x0,%r14d
	jl L_385811
L_31542:
	movq %r15,0x48(%rbp)
	movl $0x0,0x1C(%rbp)
	movl $0x0,0x50(%rbp)
.p2align 0x4,,0x7
loop_452:
	movl 0x50(%rbp),%ecx
	cmpl 0x18(%rbp),%ecx
	jnl L_385807
L_31568:
	movslq %ecx,%r15
	movq 0x30(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x58(%rbp)
	movq 0x8(%r13),%r14
	movq 0x48(%rbp),%r11
	movq 0x8(%r11),%r10
	movq %r14,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	je L_385804
L_31569:
	movq %r10,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	jne L_385803
L_31576:
	movq %r13,%r15
.p2align 0x4,,0x7
L_31574:
	movq %r15,0x48(%rbp)
	movl %ecx,0x1C(%rbp)
	incl 0x50(%rbp)
	jmp loop_452
.p2align 0x4
L_385803:
L_31570:
	movq %r10,0x80(%rbp)
	movq %r14,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_31571+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1216
.p2align 0x4
L_385804:
L_31577:
	shrq $0x1,%r14
	movl %r14d,%r11d
	movq %r10,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	jne L_385806
L_31579:
	shrq $0x1,%r10
	movl %r10d,%r14d
	cmpl %r11d,%r14d
	jl L_385805
L_31580:
	movq 0x48(%rbp),%r15
	movl 0x1C(%rbp),%r14d
	xchgl %r14d,%ecx
	jmp L_31574
.p2align 0x4
L_385805:
.p2align 0x4,,0x7
L_31573:
	movq 0x58(%rbp),%r15
	movl 0x50(%rbp),%ecx
	jmp L_31574
.p2align 0x4
L_385806:
L_31578:
	movq 0x48(%rbp),%r15
	movl 0x1C(%rbp),%r14d
	xchgl %r14d,%ecx
	jmp L_31574
.p2align 0x4
L_385807:
L_31543:
	movl 0x18(%rbp),%r15d
	decl %r15d
	movslq 0x1C(%rbp),%r14
	movq 0x20(%rbp),%r13
	cmpq %r13,%r14
	jnb L_31482
L_31545:
	movq 0x30(%rbp),%r11
	movq 0x0(%r11,%r14,8),%r10
	movslq %r15d,%r9
	cmpq %r13,%r9
	jnb L_385809
L_31547:
	movq 0x0(%r11,%r9,8),%r13
	movq %r11,%r8
	shrq $0x8,%r8
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r8,1)
	movq %r13,0x0(%r11,%r14,8)
	movq %r11,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%rsp,%r14,1)
	movq %r10,0x0(%r11,%r9,8)
	decl %r15d
	jo L_31442
L_31548:
	movl %r15d,0x80(%rbp)
	movl $0x0,0x84(%rbp)
	movq %r11,0x88(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x80,%rbp
	leaq (L_31549+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp qsort_9
.p2align 0x4
L_385809:
L_31482:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_385811:
L_31582:
	movq (globalObjptr+0x4F8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_385813:
L_31552:
	movq 0x38(%rbp),%rdx
	testq %rdx,%rdx
	jz L_385818
L_31553:
	cmpq $0x7FFFFFFF,%rdx
	ja L_31494
L_31554:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x15DF,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_31555+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_31555
.p2align 0x4
.long 0x8CC
L_31555:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq %rax,0x18(%rbp)
L_31556:
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_453:
	cmpq 0x38(%rbp),%r15
	jnl L_385815
L_31561:
	movl %r15d,%r14d
	movslq %r14d,%r13
	cmpq 0x20(%rbp),%r13
	jnb L_31482
L_31563:
	movq %r15,%r14
	movq %r15,%r11
	movq 0x30(%rbp),%r10
	movq 0x0(%r10,%r13,8),%r9
	movq 0x0(%r9),%r8
	movq 0x8(%r9),%rsp
	movq 0x18(%rbp),%r13
	movq %r13,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	salq $0x4,%r14
	movq %r8,0x0(%r13,%r14,1)
	movq %r13,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r9,%r14,1)
	salq $0x4,%r11
	movq %rsp,0x8(%r13,%r11,1)
	incq %r15
	jmp loop_453
.p2align 0x4
L_385815:
L_31557:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_31558
L_31559:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_31560+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_31560
.p2align 0x4
.long 0x8CB
L_31560:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_31558:
	movq 0x18(%rbp),%r15
	movq $0xBA3,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x18(%rbp)
	jmp x_62
.p2align 0x4
L_385818:
L_31565:
	movq (globalObjptr+0x4F88)(%rip),%r15
	movq %r15,0x18(%rbp)
	jmp L_31556
.p2align 0x4
L_385823:
L_31590:
	xorl %ecx,%ecx
	jmp L_31532
.p2align 0x4
L_385824:
L_31591:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_31592+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_31592
.p2align 0x4
.long 0x8D1
L_31592:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	jmp L_31524
.p2align 0x4
L_385825:
L_31593:
	movq 0x28(%rbp),%r15
	movq %r15,0x18(%rbp)
	jmp unsorted_0
.p2align 0x4
.long 0x8CA
L_31499:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x20(%rbp)
	cmpq %rdx,%r14
	movq %r15,0x18(%rbp)
	jne L_31465
L_31501:
	testq %rdx,%rdx
	jz L_385829
L_31502:
	cmpq $0x7FFFFFFF,%rdx
	ja L_31494
L_31503:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x15DF,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_31504+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_31504
.p2align 0x4
.long 0x8CB
L_31504:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq %rax,0x30(%rbp)
L_31505:
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_450:
	cmpq 0x20(%rbp),%r15
	jnl L_385826
L_31510:
	movl %r15d,%r14d
	movq %r15,%r13
	movq %r15,%r11
	movslq %r14d,%r10
	movq 0x18(%rbp),%r14
	movq 0x0(%r14,%r10,8),%r9
	movq 0x30(%rbp),%r14
	movq %r14,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r10,1)
	salq $0x4,%r13
	movq %r9,0x0(%r14,%r13,1)
	movq %r14,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%r8,%r13,1)
	salq $0x4,%r11
	movq $0x1,0x8(%r14,%r11,1)
	incq %r15
	jmp loop_450
.p2align 0x4
L_385826:
L_31506:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_31507
L_31508:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_31509+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_31509
.p2align 0x4
.long 0x8CC
L_31509:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_31507:
	movq 0x30(%rbp),%r15
	movq $0xBA3,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x18(%rbp)
	jmp x_62
.p2align 0x4
L_385829:
L_31512:
	movq (globalObjptr+0x4F80)(%rip),%r15
	movq %r15,0x30(%rbp)
	jmp L_31505
.p2align 0x4
.long 0x8C6
L_31475:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_31476
L_31484:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_31485+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_31485
.p2align 0x4
.long 0x8C7
L_31485:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_31476:
	movq 0x20(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_31465
L_31478:
	cmpl $0x1,%r13d
	jne L_385832
L_31480:
	cmpq $0x0,%r15
	jna L_31482
L_31483:
	movq 0x0(%r14),%r15
	jmp L_31460
.p2align 0x4
L_385832:
L_31479:
	movq 0x18(%rbp),%r15
	jmp L_31460
.p2align 0x4
.long 0x8C8
L_31487:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_31488
L_31489:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_31490+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_31490
.p2align 0x4
.long 0x8C9
L_31490:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_31488:
	movq 0x30(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x38(%rbp),%r14
	movq %r14,%r11
	salq $0x4,%r11
	movq 0x40(%rbp),%r10
	movq %r10,0x0(%r15,%r11,1)
	movq %r15,%r11
	shrq $0x8,%r11
	movb $0x1,0x0(%r13,%r11,1)
	movq %r14,%r13
	salq $0x4,%r13
	movq $0x1,0x8(%r15,%r13,1)
	incq %r14
	movq %r14,0x38(%rbp)
	jmp loop_449
.p2align 0x4
.long 0x8DA
L_31678:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq $0x1,0x80(%rbp)
	movl $0x0,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_31679+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_1
.p2align 0x4
.long 0x8DB
L_31722:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq %r15,0x80(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x80,%rbp
	leaq (L_31680+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp con_2
.p2align 0x4
.long 0x8DA
L_31710:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq $0x1,0x80(%rbp)
	movl $0x0,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_31711+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_1
.p2align 0x4
.long 0x8DB
L_31700:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq %r15,0x80(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x80,%rbp
	leaq (L_31680+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp con_2
.p2align 0x4
.long 0x8D5
L_31608:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r15,0x18(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1446,%r15
	jne L_31434
L_31609:
	movq 0x8(%r14),%r15
	movq 0x8(%r15),%r13
	cmpq $0x1,%r13
	je L_385847
L_31610:
	movq 0x8(%r13),%r15
	movq %r15,0x18(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x38(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x40(%rbp)
.p2align 0x4,,0x7
L_31611:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_385846
.p2align 0x4,,0x7
L_31612:
	movq 0x28(%rbp),%r13
	cmpq $0x1,%r13
	je L_31621
L_31613:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
.p2align 0x4,,0x7
L_31614:
	movq 0x8(%r15),%r13
	movq 0x38(%rbp),%r15
	movq %r15,%r11
	andq $0x1,%r11
	cmpq $0x1,%r11
	je L_385842
L_31615:
L_31616:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_31617
L_31626:
	movq 0x8(%r15),%r11
	cmpq %r11,0x8(%r13)
	je L_385839
L_31617:
	cmpq $0x1,%r14
	je L_385836
L_31618:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_31614
.p2align 0x4
L_385836:
L_31619:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_385838
.p2align 0x4,,0x7
L_31621:
	movq $0x1043,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x2837,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x40(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_385837
L_31622:
	movq %r14,0x40(%rbp)
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x18(%rbp)
	movq %r14,0x38(%rbp)
	jmp L_31611
.p2align 0x4
L_385837:
L_31623:
	movq %r14,0x18(%rbp)
	jmp unsorted_0
.p2align 0x4
L_385838:
L_31624:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_31625+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_31625
.p2align 0x4
.long 0x8D6
L_31625:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	jmp L_31621
.p2align 0x4
L_385839:
L_31629:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_385840
L_31630:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x18(%rbp)
	movq %r14,0x38(%rbp)
	jmp L_31611
.p2align 0x4
L_385840:
L_31631:
	movq 0x40(%rbp),%r15
	movq %r15,0x18(%rbp)
	jmp unsorted_0
.p2align 0x4
L_385842:
L_31632:
	shrq $0x1,%r15
	movl %r15d,%r11d
	movq %r13,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	jne L_31617
L_31633:
	shrq $0x1,%r13
	movl %r13d,%r15d
	cmpl %r11d,%r15d
	je L_31629
	jmp L_31617
.p2align 0x4
L_385846:
L_31637:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_31638+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_31638
.p2align 0x4
.long 0x8D6
L_31638:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	jmp L_31612
.p2align 0x4
L_385847:
L_31639:
	movq 0x28(%rbp),%r15
	movq %r15,0x18(%rbp)
	jmp unsorted_0
.p2align 0x4
.long 0x8D0
L_31571:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movl 0x80(%rbp),%r14d
	movl %r14d,0x54(%rbp)
	testl %r14d,%r14d
	jz L_31573
L_31575:
	movq 0x48(%rbp),%r15
	movl 0x1C(%rbp),%ecx
	jmp L_31574
.p2align 0x4
.long 0x8CF
L_31549:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_31550
L_31566:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_31567+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_31567
.p2align 0x4
.long 0x8CC
L_31567:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_31550:
	movq $0x3CDB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r15,0x80(%rbp)
	movl 0x18(%rbp),%r15d
	movl %r15d,0x88(%rbp)
	movl $0x1,0x8C(%rbp)
	addq $0x80,%rbp
	leaq (L_31551+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fold_0
.p2align 0x4
.long 0x8DB
L_31679:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq %r15,0x80(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x80,%rbp
	leaq (L_31680+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp con_2
.p2align 0x4
.long 0x8DC
L_31680:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq $0x1,0x80(%rbp)
	movq 0x0(%rbp),%r14
	movq %r14,0x88(%rbp)
	movq %r15,0x90(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x80,%rbp
	leaq (L_31681+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unify_1
.p2align 0x4
.long 0x8DB
L_31711:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq %r15,0x80(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x80,%rbp
	leaq (L_31680+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp con_2
.p2align 0x4
.long 0x8CF
L_31551:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	jmp L_31552
.p2align 0x4
.long 0x8DD
L_31681:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x18(%rbp)
	movb 0x8(%rbp),%r15b
	movb %r15b,0x80(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_31682+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp defaultTycon_0
.p2align 0x4
.long 0x8DE
L_31682:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq $0x1,0x80(%rbp)
	movl $0x0,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_31683+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_4
.p2align 0x4
.long 0x8C6
L_31683:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb x_63
L_31685:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_31686+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_31686
.p2align 0x4
.long 0x8D8
L_31686:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	jmp x_63
.text
.p2align 0x4
.globl tabulate_4
.hidden tabulate_4
tabulate_4:
L_31739:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_31740
L_31797:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_31798+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_31798
.p2align 0x4
.long 0x457
L_31798:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_31740:
	movslq 0x8(%rbp),%rdx
	movq %rdx,0x10(%rbp)
	testq %rdx,%rdx
	jz L_385872
L_31741:
	cmpq $0x7FFFFFFF,%rdx
	ja L_385871
L_31742:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1459,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_31743+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_31743
.p2align 0x4
.long 0x452
L_31743:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq %rax,0x8(%rbp)
L_31744:
	movq $0x0,0x18(%rbp)
.p2align 0x4,,0x7
loop_454:
	movq 0x18(%rbp),%r15
	cmpq 0x10(%rbp),%r15
	jnl L_385870
L_31746:
	movl %r15d,%r14d
	movq 0x0(%rbp),%r15
	cmpq $0x1,%r15
	je L_385869
L_31747:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0x1CD1,%r13
	je L_385868
	cmpq $0x1CD2,%r13
	je L_385857
	cmpq $0x1CD3,%r13
	je L_385852
	cmpq $0x1CD4,%r13
	je L_385851
L_31748:
	movq 0x0(%r15),%r13
	movq %r13,0x30(%rbp)
	movslq %r14d,%r13
	movq 0x8(%r15),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq %r11,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_31749+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_28
.p2align 0x4
L_385851:
L_31793:
	movq 0x0(%r15),%r13
	movq %r13,0x30(%rbp)
	movslq %r14d,%r13
	movq 0x8(%r15),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq %r11,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_31749+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_28
.p2align 0x4
L_385852:
L_31780:
	movq 0x0(%r15),%r13
	movq %r13,0x20(%rbp)
	movslq %r14d,%r13
	movq 0x8(%r15),%r14
	movq 0x0(%r14,%r13,8),%r11
	cmpq $0x1,%r11
	jne L_385853
L_31779:
	movq $0x1,%r15
.p2align 0x4,,0x7
L_31750:
	movq 0x8(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x18(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x18(%rbp)
	jmp loop_454
.p2align 0x4
L_385853:
L_31781:
	movq 0x0(%r11),%r15
	movq %r15,0x28(%rbp)
	movq 0x20(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq %r14,0x30(%rbp)
	movl %r14d,%r15d
	movl %r15d,0x38(%rbp)
	movslq %r15d,%r13
	cmpq %r14,%r13
	jne L_385856
L_31783:
	movl $0x0,0x3C(%rbp)
loop_456:
	movl 0x3C(%rbp),%r15d
	cmpl 0x38(%rbp),%r15d
	je L_385855
L_31784:
	movslq %r15d,%r14
	cmpq 0x30(%rbp),%r14
	jnb L_385854
L_31786:
	movq %r14,%r15
	imulq $0x18,%r15
	movq 0x20(%rbp),%r13
	movq 0x0(%r13,%r15,1),%r11
	movq %r11,0x40(%rbp)
	imulq $0x18,%r14
	movq 0x8(%r13,%r14,1),%r15
	movq %r15,0x50(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_31787+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_0
.p2align 0x4
L_385854:
L_31759:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_385855:
L_31777:
	movq (globalObjptr+0xB88)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_385856:
L_31755:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_385857:
L_31752:
	movq 0x0(%r15),%r11
	movslq %r14d,%r13
	movq 0x8(%r15),%r10
	movq 0x0(%r10,%r13,8),%r14
	cmpq $0x1,%r14
	je L_31779
L_31753:
	movq 0x0(%r14),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r15
	movl %r15d,%ecx
	movslq %ecx,%r14
	cmpq %r15,%r14
	jne L_31755
L_31756:
	xorl %ebx,%ebx
	movq %r11,%r14
.p2align 0x4,,0x7
loop_455:
	cmpl %ebx,%ecx
	je L_31777
L_31757:
	movslq %ebx,%r11
	cmpq %r15,%r11
	jnb L_31759
L_31760:
	movq %r11,%r10
	imulq $0x18,%r10
	movq 0x0(%r14,%r10,1),%r9
	imulq $0x18,%r11
	movq 0x8(%r14,%r11,1),%r10
	movq %r10,%r11
	andq %r13,%r11
	andq $0x1,%r11
	jz L_385861
L_31761:
	cmpq %r10,%r13
	jl L_31766
L_31762:
	cmpq %r13,%r10
	jnl L_385859
L_31766:
	incl %ebx
	jo L_385858
L_31768:
	jmp loop_455
.p2align 0x4
L_385858:
L_31767:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_385859:
	movq %r9,%r10
L_31764:
	movq %r10,%r15
	jmp L_31750
.p2align 0x4
L_385861:
L_31770:
	movq (c_stackP+0x0)(%rip),%rsp
	movq %r10,%rsi
	movq %r13,%rdi
	xorq %rax,%rax
	xchgq %r9,%r12
	movq %r12,(localObjptr+0x10)(%rip)
	movl %ecx,%r12d
	movq %r9,(gcState+0x0)(%rip)
	call IntInf_compare
L_31771:
	cmpl $0x0,%eax
	jl L_385863
L_31772:
	cmpl $0x0,%eax
	jng L_385862
	movq (gcState+0x0)(%rip),%r11
	movl %r12d,(localWord32+0x0)(%rip)
	movq %r11,%r12
	movl (localWord32+0x0)(%rip),%ecx
	jmp L_31766
.p2align 0x4
L_385862:
	movq (gcState+0x0)(%rip),%r12
	movq (localObjptr+0x10)(%rip),%r10
	jmp L_31764
.p2align 0x4
L_385863:
	movq (gcState+0x0)(%rip),%r11
	movl %r12d,(localWord32+0x0)(%rip)
	movq %r11,%r12
	movl (localWord32+0x0)(%rip),%ecx
	jmp L_31766
.p2align 0x4
L_385868:
L_31751:
	movq 0x0(%r15),%r13
	movslq %r14d,%r15
	salq $0x4,%r15
	movq 0x0(%r13,%r15,1),%r13
	movq %r13,%r15
	jmp L_31750
.p2align 0x4
L_385869:
L_31794:
	movq (globalObjptr+0x4A0)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_385870:
L_31745:
	movq 0x8(%rbp),%r14
	movq $0x171,0xFFFFFFFFFFFFFFF8(%r14)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_385871:
L_31795:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_385872:
L_31796:
	movq (globalObjptr+0xB80)(%rip),%r15
	movq %r15,0x8(%rbp)
	jmp L_31744
.p2align 0x4
.long 0x5F8
L_31749:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	jmp L_31750
.p2align 0x4
.long 0x8E0
L_31787:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movl 0x50(%rbp),%r15d
	movl %r15d,0x48(%rbp)
	testl %r15d,%r15d
	jnz L_385875
L_31788:
	movl 0x3C(%rbp),%r15d
	incl %r15d
	jo L_31767
L_31789:
	movl %r15d,0x3C(%rbp)
	jmp loop_456
.p2align 0x4
L_385875:
L_31790:
	movq 0x40(%rbp),%r15
	jmp L_31750
.text
.p2align 0x4
.globl equals_0
.hidden equals_0
equals_0:
L_31799:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_31800
L_31814:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_31815+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_31815
.p2align 0x4
.long 0x45F
L_31815:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_31800:
	movq 0x0(%rbp),%r15
	movq %r15,%r14
	movq 0x8(%rbp),%r13
	andq %r13,%r14
	andq $0x1,%r14
	jz L_385878
L_31801:
	cmpq %r15,%r13
	jl L_31806
L_31802:
	cmpq %r13,%r15
	jl L_385876
L_31804:
	movl $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_385876:
L_31806:
	movl $0x0,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_385878:
L_31808:
	movq (c_stackP+0x0)(%rip),%rsp
	movq %r15,%rsi
	movq %r13,%rdi
	xorq %rax,%rax
	call IntInf_compare
L_31809:
	cmpl $0x0,%eax
	jl L_31806
L_31810:
	cmpl $0x0,%eax
	jg L_31806
	jmp L_31804
.text
.p2align 0x4
.globl qsort_9
.hidden qsort_9
qsort_9:
L_31816:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb loop_457
L_31883:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_31884+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_31884
.p2align 0x4
.long 0x4E8
L_31884:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
loop_457:
	movl 0x0(%rbp),%r15d
	subl 0x4(%rbp),%r15d
	jo L_31818
L_31819:
	cmpl $0x14,%r15d
	jng L_385883
L_31821:
	movq (globalObjptr+0x550)(%rip),%r14
	movl 0x0(%r14),%r13d
	imull $0x19660D,%r13d
	addl $0x3C6EF35F,%r13d
	movl %r13d,0x18(%rbp)
	movl %r13d,0x0(%r14)
	incl %r15d
	movl %r15d,0x1C(%rbp)
	jo L_385882
L_31822:
	movl %r15d,0x28(%rbp)
	movl %r13d,0x2C(%rbp)
	addq $0x28,%rbp
	leaq (L_31823+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp div_0
.p2align 0x4
L_385882:
L_31818:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_385883:
L_31820:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4F4
L_31823:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl 0x28(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	movl 0x1C(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	movl 0x18(%rbp),%r15d
	movl %r15d,0x24(%rbp)
	addq $0x20,%rbp
	leaq (L_31824+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp mod_0
.p2align 0x4
.long 0x4E5
L_31824:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movl 0x20(%rbp),%r15d
	movl 0x4(%rbp),%ecx
	movl %ecx,%r14d
	addl %r15d,%r14d
	movl %r15d,0x18(%rbp)
	jo L_31818
L_31825:
	movq 0x10(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r15),%r11
	movq %r11,0x20(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movq %r15,0x28(%rbp)
	movslq %ecx,%r10
	movq %r10,0x30(%rbp)
	cmpq %r15,%r10
	jnb L_31827
L_31828:
	movq 0x0(%r13,%r10,8),%r9
	movslq %r14d,%r8
	cmpq %r15,%r8
	jnb L_31827
L_31830:
	movq 0x0(%r13,%r8,8),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r14
	movq %r14,0x38(%rbp)
	cmpq %r14,%r10
	jnb L_31827
L_31832:
	movq %r11,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r13,1)
	movq %r15,0x0(%r11,%r10,8)
	cmpq %r14,%r8
	jnb L_31827
L_31834:
	movq %r11,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%rsp,%r15,1)
	movq %r9,0x0(%r11,%r8,8)
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq %r14,0x40(%rbp)
	cmpq %r14,%r10
	jnb L_31827
L_31836:
	movq 0x0(%r15,%r10,8),%r14
	movq %r14,0x48(%rbp)
	movl 0x0(%rbp),%r15d
	incl %r15d
	jo L_31818
L_31837:
	movl %r15d,0x50(%rbp)
.p2align 0x4,,0x7
loop_459:
	incl %ecx
	movl %ecx,0x54(%rbp)
	jo L_31818
L_31838:
	movslq %ecx,%r15
	movq %r15,0x58(%rbp)
	cmpq 0x40(%rbp),%r15
	jnb L_31827
L_31840:
	movq 0x48(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x60(%rbp)
	movq 0x8(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r11
	movq 0x8(%r11),%r10
	andq $0x1,%r13
	cmpq $0x1,%r13
	je L_385886
L_31841:
	movq %r10,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	jne L_385885
L_31877:
	jmp loop_459
.p2align 0x4
L_385885:
L_31842:
	movq %r10,0x70(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_31843+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1216
.p2align 0x4
L_385886:
L_31878:
	movq 0x60(%rbp),%r15
	shrq $0x1,%r15
	movl %r15d,%r14d
	movq %r10,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	jne L_385902
L_31880:
	shrq $0x1,%r10
	movl %r10d,%r15d
	cmpl %r14d,%r15d
	jl loop_459
L_31881:
	movl 0x50(%rbp),%r15d
	xchgl %r15d,%ecx
.p2align 0x4,,0x7
loop_460:
	decl %ecx
	movl %ecx,0x50(%rbp)
	jo L_31818
L_31846:
	movslq %ecx,%r15
	movq %r15,0x68(%rbp)
	cmpq 0x40(%rbp),%r15
	jnb L_31827
L_31848:
	movq 0x8(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x8(%r13),%r11
	movq %r11,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	je L_385888
L_31849:
	movq 0x60(%rbp),%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	jne L_385887
L_31871:
	jmp loop_460
.p2align 0x4
L_385887:
L_31850:
	movq %r11,0x80(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_31851+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1216
.p2align 0x4
L_385888:
L_31872:
	shrq $0x1,%r11
	movl %r11d,%r15d
	movq 0x60(%rbp),%r14
	movq %r14,%r13
	andq $0x1,%r13
	cmpq $0x1,%r13
	jne L_31854
L_31874:
	shrq $0x1,%r14
	movl %r14d,%r13d
	cmpl %r15d,%r13d
	jnl L_385889
L_31876:
	jmp loop_460
.p2align 0x4
L_385889:
.p2align 0x4,,0x7
L_31854:
	movl 0x54(%rbp),%ecx
	cmpl %ecx,0x50(%rbp)
	jl L_385894
L_31855:
	movq 0x58(%rbp),%r15
	movq 0x28(%rbp),%r14
	cmpq %r14,%r15
	jnb L_31827
L_31857:
	movq 0x18(%rbp),%r13
	movq 0x0(%r13,%r15,8),%r11
	movq 0x68(%rbp),%r10
	cmpq %r14,%r10
	jnb L_31827
L_31859:
	movq 0x0(%r13,%r10,8),%r14
	movq 0x38(%rbp),%r13
	cmpq %r13,%r15
	jnb L_31827
L_31861:
	movq 0x20(%rbp),%r9
	movq %r9,%r8
	shrq $0x8,%r8
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r8,1)
	movq %r14,0x0(%r9,%r15,8)
	cmpq %r13,%r10
	jnb L_385890
L_31863:
	movq %r9,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%rsp,%r15,1)
	movq %r11,0x0(%r9,%r10,8)
	jmp loop_459
.p2align 0x4
L_385890:
L_31827:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_385894:
L_31864:
	movq 0x18(%rbp),%r15
	movq 0x30(%rbp),%r14
	movq 0x0(%r15,%r14,8),%r13
	movq 0x68(%rbp),%r11
	cmpq 0x28(%rbp),%r11
	jnb L_31827
L_31866:
	movq 0x0(%r15,%r11,8),%r10
	movq 0x20(%rbp),%r15
	movq %r15,%r9
	shrq $0x8,%r9
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r9,1)
	movq %r10,0x0(%r15,%r14,8)
	cmpq 0x38(%rbp),%r11
	jnb L_31827
L_31868:
	movq %r15,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r8,%r14,1)
	movq %r13,0x0(%r15,%r11,8)
	movl 0x50(%rbp),%r15d
	decl %r15d
	jo L_31818
L_31869:
	movl %r15d,0x60(%rbp)
	movl 0x4(%rbp),%r15d
	movl %r15d,0x64(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x60,%rbp
	leaq (L_31870+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp qsort_9
.p2align 0x4
L_385902:
L_31879:
	movl 0x50(%rbp),%r15d
	xchgl %r15d,%ecx
	jmp loop_460
.p2align 0x4
.long 0x4F5
L_31843:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movl 0x70(%rbp),%r15d
	movl %r15d,0x68(%rbp)
	testl %r15d,%r15d
	jnz L_385912
L_31844:
	movl 0x54(%rbp),%ecx
	jmp loop_459
.p2align 0x4
L_385912:
L_31845:
	movl 0x50(%rbp),%ecx
	jmp loop_460
.p2align 0x4
.long 0x4F6
L_31851:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movl 0x78(%rbp),%r15d
	movl %r15d,0x70(%rbp)
	testl %r15d,%r15d
	jnz L_31854
L_31852:
	movl 0x50(%rbp),%ecx
	jmp loop_460
.p2align 0x4
.long 0x4F7
L_31870:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movl 0x54(%rbp),%r15d
	movl %r15d,0x4(%rbp)
	jmp loop_457
.text
.p2align 0x4
.globl x_1266
.hidden x_1266
x_1266:
L_31885:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_31909
L_31886:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_385920
L_31887:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq %r14,0x20(%rbp)
	movl %r14d,%r15d
	movslq %r15d,%r13
	movq %r13,0x28(%rbp)
	cmpq %r13,%r14
	je L_385914
L_31888:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_385914:
L_31889:
	movq 0x28(%rbp),%r15
	testq %r15,%r15
	jz L_385919
L_31890:
	cmpq $0x7FFFFFFF,%r15
	ja L_385918
L_31891:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_31892
L_31905:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_31906+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_31906
.p2align 0x4
.long 0x8E1
L_31906:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_31892:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xA8F,%rcx
	movq 0x28(%rbp),%rdx
	movq $0x18,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_31893+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_31893
.p2align 0x4
.long 0x8E1
L_31893:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq %rax,0x8(%rbp)
L_31894:
	movq $0x0,0x30(%rbp)
loop_461:
	movq 0x28(%rbp),%r15
	cmpq %r15,0x30(%rbp)
	jl L_385915
L_31895:
	movq 0x8(%rbp),%r15
	movq $0xEC9,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x1C93,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_385915:
L_31896:
	movq 0x30(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	cmpq 0x20(%rbp),%r15
	jnb L_385916
L_31898:
	movq 0x0(%rbp),%r14
	movzbq 0x0(%r14,%r15,1),%r13
	shlq $0x1,%r13
	orq $0x1,%r13
	movq %r13,0x38(%rbp)
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_31899+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_385916:
L_31897:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_385918:
L_31907:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_385919:
L_31908:
	movq (globalObjptr+0x19F0)(%rip),%r14
	movq %r14,0x8(%rbp)
	jmp L_31894
.p2align 0x4
L_385920:
L_31909:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_31910+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_31910
.p2align 0x4
.long 0x45F
L_31910:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_31887
.p2align 0x4
.long 0x8E2
L_31899:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movl 0x58(%rbp),%r15d
	movl %r15d,0x50(%rbp)
	movl %r15d,0x58(%rbp)
	movq $0x3,0x60(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x58,%rbp
	leaq (L_31900+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x8E3
L_31900:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_31901+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x8E4
L_31901:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_31902
L_31903:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_31904+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_31904
.p2align 0x4
.long 0x8E5
L_31904:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_31902:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x8(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x30(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x30(%rbp)
	jmp loop_461
.text
.p2align 0x4
.globl sextdToWord32_0
.hidden sextdToWord32_0
sextdToWord32_0:
L_31911:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_31912
L_31920:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_31921+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_31921
.p2align 0x4
.long 0x451
L_31921:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_31912:
	movq 0x0(%rbp),%r15
	movq %r15,%r14
	andq $0x1,%r14
	jz L_385923
L_31913:
	sarq $0x1,%r15
	movl %r15d,%r14d
	movl %r14d,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_385923:
L_31914:
	movq 0x0(%r15),%r14
	testq %r14,%r14
	jz L_385925
L_31915:
	movl $0x1,%ecx
L_31916:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movl %r14d,%r13d
	testl %ecx,%ecx
	jnz L_385924
L_31917:
	movl %r13d,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_385924:
L_31918:
	negl %r13d
	movl %r13d,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_385925:
L_31919:
	xorl %ecx,%ecx
	jmp L_31916
.text
.p2align 0x4
.globl x_1199
.hidden x_1199
x_1199:
L_31922:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_31923
L_31980:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_31981+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_31981
.p2align 0x4
.long 0x4E8
L_31981:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_31923:
	movq 0x10(%rbp),%r14
	movl 0x4(%r14),%r13d
	movl %r13d,0x4(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x18(%rbp)
	movl 0x0(%r14),%r13d
	movl %r13d,0x20(%rbp)
	movl 0x0(%rbp),%r14d
	cmpl %r14d,%r13d
	jb L_385933
L_31924:
	testl %r14d,%r14d
	jz L_385932
L_31925:
	movq 0x8(%rbp),%r15
	andq $0x1,%r15
	jz L_385930
L_31926:
	movq $0x1,%r15
L_31927:
	movl 0x0(%rbp),%r14d
	shrl $0x6,%r14d
	movslq %r14d,%r13
	addq %r15,%r13
	jo L_385929
L_31929:
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%rsi
	movq %rsi,%r14
	movq %rsi,%r11
	movq 0x0(%r15),%r10
	imulq %r13,%r14
	addq $0x7,%r10
	addq %r10,%r11
	addq %r11,%rsi
	addq %r14,%rsi
	movq %rsi,%r15
	movq %rsi,0x10(%rbp)
	addq $0x0,%r15
	jc L_385928
L_31931:
	movq (gcState+0x458)(%rip),%r14
	subq %r12,%r14
	cmpq %r15,%r14
	jnb L_31932
L_31934:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r14d
	movl %r14d,%edx
	movq %r15,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_31935+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_31935
.p2align 0x4
.long 0x8E6
L_31935:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_31932:
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0x10(%rbp),%rdx
	movl 0x0(%rbp),%esi
	movq 0x8(%rbp),%rdi
	xorq %rax,%rax
	movq %r12,(gcState+0x0)(%rip)
	call IntInf_lshift
L_31933:
	movq %rax,0x0(%rbp)
	movq (gcState+0x0)(%rip),%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_385928:
L_31930:
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %rax,%rax
	call MLton_heapCheckTooLarge
.p2align 0x4
L_385929:
L_31928:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_385930:
L_31936:
	movq 0x8(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	decq %r15
	jo L_31928
L_31937:
	jmp L_31927
.p2align 0x4
L_385932:
L_31938:
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_385933:
L_31939:
	cmpl $0x0,0x4(%rbp)
	sete %al
	movzbl %al,%eax
	movl %eax,0x10(%rbp)
	je L_385952
L_31940:
	movq 0x8(%rbp),%r15
	andq $0x1,%r15
	jz L_385950
L_31941:
	movq $0x1,%r15
L_31942:
	movl 0x4(%rbp),%r14d
	shrl $0x6,%r14d
	movslq %r14d,%rsi
	addq %r15,%rsi
	jo L_31928
L_31943:
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	imulq %r13,%rsi
	addq $0x7,%r14
	addq %r13,%r14
	addq %r13,%r14
	addq %r14,%rsi
	movq %rsi,%r15
	movq %rsi,0x28(%rbp)
	addq $0x0,%r15
	jc L_31930
L_31944:
	movq (gcState+0x458)(%rip),%r14
	subq %r12,%r14
	cmpq %r15,%r14
	jnb L_31945
L_31975:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r14d
	movl %r14d,%edx
	movq %r15,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_31976+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_31976
.p2align 0x4
.long 0x493
L_31976:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_31945:
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0x28(%rbp),%rdx
	movl 0x4(%rbp),%esi
	movq 0x8(%rbp),%rdi
	xorq %rax,%rax
	movq %r12,(gcState+0x0)(%rip)
	call IntInf_lshift
L_31946:
	movq (gcState+0x0)(%rip),%r12
	movq %rax,%r15
L_31947:
	movq %r15,0x28(%rbp)
	movl 0x0(%rbp),%r15d
	subl 0x20(%rbp),%r15d
	movl %r15d,0x8(%rbp)
.p2align 0x4,,0x7
loop_462:
	movl 0x8(%rbp),%r14d
	cmpl %r14d,0x20(%rbp)
	jnb L_385940
L_31961:
	movl 0x10(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_385939
L_31962:
	movq 0x28(%rbp),%r15
	andq $0x1,%r15
	jz L_385937
L_31963:
	movq $0x1,%r15
L_31964:
	movl 0x4(%rbp),%r14d
	shrl $0x6,%r14d
	movslq %r14d,%r13
	addq %r15,%r13
	jo L_31928
L_31965:
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r11
	imulq %r11,%r13
	addq $0x7,%r14
	addq %r11,%r14
	addq %r11,%r14
	addq %r13,%r14
	movq %r14,0x30(%rbp)
	addq $0x0,%r14
	jc L_31930
L_31966:
	movq (gcState+0x458)(%rip),%r15
	subq %r12,%r15
	cmpq %r14,%r15
	jb L_385934
.p2align 0x4,,0x7
L_31967:
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0x30(%rbp),%rdx
	movl 0x4(%rbp),%esi
	movq 0x28(%rbp),%rdi
	xorq %rax,%rax
	movq %r12,(gcState+0x0)(%rip)
	call IntInf_lshift
L_31968:
	movq (gcState+0x0)(%rip),%r12
	movq %rax,%r15
L_31969:
	movq %r15,0x28(%rbp)
	movl 0x20(%rbp),%r15d
	subl %r15d,0x8(%rbp)
	jmp loop_462
.p2align 0x4
L_385934:
L_31970:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	movq %r14,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_31971+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_31971
.p2align 0x4
.long 0x8E7
L_31971:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_31967
.p2align 0x4
L_385937:
L_31972:
	movq 0x28(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	decq %r15
	jo L_31928
L_31973:
	jmp L_31964
.p2align 0x4
L_385939:
L_31974:
	movq 0x28(%rbp),%r15
	jmp L_31969
.p2align 0x4
L_385940:
L_31948:
	movl 0x8(%rbp),%r14d
	testl %r14d,%r14d
	jz L_385946
L_31949:
	movq 0x28(%rbp),%r15
	andq $0x1,%r15
	jz L_385944
L_31950:
	movq $0x1,%r15
L_31951:
	movl 0x8(%rbp),%r14d
	shrl $0x6,%r14d
	movslq %r14d,%rsi
	addq %r15,%rsi
	jo L_31928
L_31952:
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	imulq %r13,%rsi
	addq $0x7,%r14
	addq %r13,%r14
	addq %r13,%r14
	addq %r14,%rsi
	movq %rsi,%r15
	movq %rsi,0x10(%rbp)
	addq $0x0,%r15
	jc L_31930
L_31953:
	movq (gcState+0x458)(%rip),%r14
	subq %r12,%r14
	cmpq %r15,%r14
	jnb L_31954
L_31956:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r14d
	movl %r14d,%edx
	movq %r15,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_31957+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_31957
.p2align 0x4
.long 0x504
L_31957:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_31954:
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0x10(%rbp),%rdx
	movl 0x8(%rbp),%esi
	movq 0x28(%rbp),%rdi
	xorq %rax,%rax
	movq %r12,(gcState+0x0)(%rip)
	call IntInf_lshift
L_31955:
	movq %rax,0x0(%rbp)
	movq (gcState+0x0)(%rip),%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_385944:
L_31958:
	movq 0x28(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	decq %r15
	jo L_31928
L_31959:
	jmp L_31951
.p2align 0x4
L_385946:
L_31960:
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_385950:
L_31977:
	movq 0x8(%rbp),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	decq %r15
	jo L_31928
L_31978:
	jmp L_31942
.p2align 0x4
L_385952:
L_31979:
	movq 0x8(%rbp),%r15
	jmp L_31947
.text
.p2align 0x4
.globl ordToString_0
.hidden ordToString_0
ordToString_0:
L_31982:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_31983
L_32097:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_32098+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_32098
.p2align 0x4
.long 0x45F
L_32098:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_31983:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,%r14
	andq $0x1FF,%r14
	andq $0x1,%r14
	jz L_385973
L_31984:
	cmpq $0x1FF,%r15
	jg L_385961
x_64:
	movq 0x18(%rbp),%r14
	movq 0x18(%r14),%r13
	movq %r13,0x8(%rbp)
	movq 0x8(%r14),%r15
	movq 0x0(%rbp),%r14
	movq %r14,%r13
	andq $0x1,%r13
	andq $0x1,%r13
	jz L_385959
L_31986:
	cmpq $0x1,%r14
	jnl L_385954
L_32011:
	movq %r15,0x38(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_32012+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigNeg_0
.p2align 0x4
L_385954:
L_31988:
	movb $0x0,0x10(%rbp)
	movq 0x0(%rbp),%r15
L_31989:
	movq 0x8(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x18(%rbp)
	cmpq $0x1,%r15
	je L_385955
L_31990:
	movq %r15,0x28(%rbp)
	movl $0x1,0x14(%rbp)
	movl $0x0,0x30(%rbp)
next_9:
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq $0x5,0x48(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_31991+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigDiv_0
.p2align 0x4
L_385955:
L_32007:
	movb 0x10(%rbp),%r15b
	testb %r15b,%r15b
	jnz L_385957
L_32008:
	xorl %ecx,%ecx
x_65:
	cmpl $0xFF,%ecx
	ja L_385956
L_32001:
	movb %cl,%r15b
	movb %r15b,0x0(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp toString_539
.p2align 0x4
L_385956:
L_32002:
	movq $0x7,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_385957:
L_32009:
	xorl %ecx,%ecx
L_32004:
	negl %ecx
	jo L_385958
L_32005:
	jmp x_65
.p2align 0x4
L_385958:
L_31994:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_385959:
L_32013:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1,%rsi
	movq %r14,%rdi
	xorq %rax,%rax
	call IntInf_compare
L_32014:
	cmpl $0x0,%eax
	jnl L_31988
	jmp L_32011
.p2align 0x4
L_385961:
L_32018:
	movq 0x0(%rbp),%r15
	movq %r15,%r14
	andq $0x1FFFF,%r14
	andq $0x1,%r14
	jz L_385971
L_32019:
	cmpq $0x1FFFF,%r15
	jg L_385970
L_32020:
	movq (globalObjptr+0xE498)(%rip),%r15
	movq %r15,0x8(%rbp)
	movl $0x4,%ecx
doit_1:
	movl %ecx,0x30(%rbp)
	movq $0x1,0x20(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x28(%rbp)
loop_463:
	movl 0x30(%rbp),%r15d
	testl %r15d,%r15d
	jz L_385962
L_32021:
	movq 0x10(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq $0x21,0x48(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_32022+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigQuot_0
.p2align 0x4
L_385962:
L_32068:
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_385969
L_32069:
	movq 0x8(%r14),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_32070:
	incl %ecx
	cmpq $0x1,%r15
	je L_385963
L_32071:
	movq 0x8(%r15),%r15
	jmp L_32070
.p2align 0x4
L_385963:
L_32072:
L_32073:
	movslq %ecx,%rdx
	movq %rdx,0x10(%rbp)
	testq %rdx,%rdx
	jz L_385968
L_32074:
	cmpq $0x7FFFFFFF,%rdx
	ja L_385967
L_32075:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x51,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_32076+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_32076
.p2align 0x4
.long 0x499
L_32076:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq %rax,0x18(%rbp)
L_32077:
	movq 0x20(%rbp),%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_464:
	cmpq 0x10(%rbp),%r15
	jnl L_385965
L_32082:
	cmpq $0x1,%r14
	je L_385964
L_32083:
	movq 0x8(%r14),%r13
	movq 0x18(%rbp),%r11
	movb 0x0(%r14),%r10b
	movb %r10b,0x0(%r11,%r15,1)
	incq %r15
	movq %r13,%r14
	jmp loop_464
.p2align 0x4
L_385964:
L_32084:
	movq (globalObjptr+0x5A0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_385965:
L_32078:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_32079
L_32080:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_32081+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_32081
.p2align 0x4
.long 0x522
L_32081:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_32079:
	movq 0x18(%rbp),%r15
	movq $0x7,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xE0B0)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	jmp concat_0
.p2align 0x4
L_385967:
L_32085:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_385968:
L_32086:
	movq (globalObjptr+0x598)(%rip),%r15
	movq %r15,0x18(%rbp)
	jmp L_32077
.p2align 0x4
L_385969:
L_32087:
	xorl %ecx,%ecx
	jmp L_32073
.p2align 0x4
L_385970:
L_32088:
	movq (globalObjptr+0xDC38)(%rip),%r15
	movq %r15,0x8(%rbp)
	movl $0x8,%ecx
	jmp doit_1
.p2align 0x4
L_385971:
L_32089:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1FFFF,%rsi
	movq %r15,%rdi
	xorq %rax,%rax
	call IntInf_compare
L_32090:
	cmpl $0x0,%eax
	jg L_385972
L_32091:
	movq (globalObjptr+0xE498)(%rip),%r15
	movq %r15,0x8(%rbp)
	movl $0x4,%ecx
	jmp doit_1
.p2align 0x4
L_385972:
L_32092:
	movq (globalObjptr+0xDC38)(%rip),%r15
	movq %r15,0x8(%rbp)
	movl $0x8,%ecx
	jmp doit_1
.p2align 0x4
L_385973:
L_32093:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1FF,%rsi
	movq %r15,%rdi
	xorq %rax,%rax
	call IntInf_compare
L_32094:
	cmpl $0x0,%eax
	jg L_32018
	jmp x_64
.p2align 0x4
.long 0x496
L_32012:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,%r14
	movq %r15,0x10(%rbp)
	movb $0x1,0x10(%rbp)
	movq %r14,%r15
	jmp L_31989
.p2align 0x4
.long 0x8E8
L_31991:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq $0x5,0x50(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x50,%rbp
	leaq (L_31992+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x8A4
L_32022:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq $0x21,0x50(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x50,%rbp
	leaq (L_32023+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigRem_0
.p2align 0x4
.long 0x842
L_31992:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq $0x1,%r15
	je L_385980
L_31993:
	movl 0x30(%rbp),%ecx
	addl 0x14(%rbp),%ecx
	jo L_31994
L_31996:
	movq 0x40(%rbp),%r15
	cmpq $0x1,%r15
	je L_385977
L_31997:
	movl 0x14(%rbp),%r14d
	addl %r14d,%r14d
	jo L_31994
L_31998:
	movl %r14d,0x14(%rbp)
	movl %ecx,0x30(%rbp)
	movq %r15,0x28(%rbp)
	jmp next_9
.p2align 0x4
L_385977:
L_31999:
	movb 0x10(%rbp),%r14b
	testb %r14b,%r14b
	jnz L_32004
	jmp x_65
.p2align 0x4
L_385980:
L_32006:
	movl 0x30(%rbp),%ecx
	jmp L_31996
.p2align 0x4
.long 0x870
L_32023:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_32024
L_32066:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_32067+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_32067
.p2align 0x4
.long 0x8ED
L_32067:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_32024:
	movl 0x30(%rbp),%r15d
	decl %r15d
	movl %r15d,0x34(%rbp)
	jo L_31994
L_32025:
	movq 0x18(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,%r14
	andq $0x1,%r14
	andq $0x1,%r14
	jz L_385986
L_32026:
	cmpq $0x1,%r15
	jl L_385985
L_32028:
	movq 0x28(%rbp),%r15
	movb $0x0,0x28(%rbp)
L_32029:
	movq 0x38(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x48(%rbp)
	cmpq $0x1,%r15
	je L_385981
L_32030:
	movq %r15,0x38(%rbp)
	movl $0x1,0x2C(%rbp)
	movl $0x0,0x30(%rbp)
next_10:
	movq 0x48(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movq $0x5,0x60(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_32031+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigDiv_0
.p2align 0x4
L_385981:
L_32050:
	movb 0x28(%rbp),%r15b
	testb %r15b,%r15b
	jnz L_385983
L_32051:
	xorl %ecx,%ecx
L_32041:
	movslq %ecx,%r15
	cmpq $0x10,%r15
	jnb L_385982
L_32043:
	movq (globalObjptr+0xDCD8)(%rip),%r14
	movb 0x0(%r14,%r15,1),%r13b
	movq $0x1B5F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movzbl %r13b,%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x20(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x28(%rbp)
	movl 0x34(%rbp),%r15d
	movl %r15d,0x30(%rbp)
	jmp loop_463
.p2align 0x4
L_385982:
L_32042:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_385983:
L_32052:
	xorl %ecx,%ecx
L_32045:
	negl %ecx
	jo L_31994
L_32046:
	jmp L_32041
.p2align 0x4
L_385985:
L_32054:
	movq 0x28(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_32055+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigNeg_0
.p2align 0x4
L_385986:
L_32059:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_32060
L_32064:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r14d
	movl %r14d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r14
	movq %r14,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_32065+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_32065
.p2align 0x4
.long 0x8A8
L_32065:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_32060:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1,%rsi
	movq 0x28(%rbp),%rdi
	xorq %rax,%rax
	call IntInf_compare
L_32061:
	cmpl $0x0,%eax
	jl L_32054
	jmp L_32028
.p2align 0x4
.long 0x8E9
L_32031:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq $0x5,0x68(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x68,%rbp
	leaq (L_32032+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x8EC
L_32055:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_32056
L_32057:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_32058+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_32058
.p2align 0x4
.long 0x8A5
L_32058:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_32056:
	movq 0x28(%rbp),%r15
	movb $0x1,0x28(%rbp)
	jmp L_32029
.p2align 0x4
.long 0x8EA
L_32032:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_32033
L_32048:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_32049+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_32049
.p2align 0x4
.long 0x8EB
L_32049:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_32033:
	cmpq $0x1,0x38(%rbp)
	je L_385996
L_32034:
	movl 0x30(%rbp),%ecx
	addl 0x2C(%rbp),%ecx
	jo L_31994
L_32036:
	movq 0x58(%rbp),%r15
	cmpq $0x1,%r15
	je L_385993
L_32037:
	movl 0x2C(%rbp),%r14d
	addl %r14d,%r14d
	jo L_31994
L_32038:
	movl %r14d,0x2C(%rbp)
	movl %ecx,0x30(%rbp)
	movq %r15,0x38(%rbp)
	jmp next_10
.p2align 0x4
L_385993:
L_32039:
	movb 0x28(%rbp),%r14b
	testb %r14b,%r14b
	jnz L_32045
	jmp L_32041
.p2align 0x4
L_385996:
L_32047:
	movl 0x30(%rbp),%ecx
	jmp L_32036
