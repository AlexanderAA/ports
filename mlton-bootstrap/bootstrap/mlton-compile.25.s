/* MLton 20130715 (built Mon Jun 13 11:54:01 AEST 2016 on ports.extensibl.com) */
/*   created this file on Mon Jun 13 12:08:57 2016. */
/* Do not edit this file. */
/* Flag settings:  */
/*    align: 8 */
/*    atMLtons: (mlton-compile, @MLton, --) */
/*    chunk: chunk per function */
/*    closureConvertGlobalize: true */
/*    closureConvertShrink: true */
/*    codegen: amd64 */
/*    contifyIntoMain: false */
/*    debug: false */
/*    defaultChar: char8 */
/*    defaultWideChar: widechar32 */
/*    defaultInt: int32 */
/*    defaultReal: real64 */
/*    defaultWord: word32 */
/*    diag passes: [] */
/*    drop passes: [] */
/*    elaborate allowConstant (default): false */
/*    elaborate allowConstant (enabled): true */
/*    elaborate allowFFI (default): false */
/*    elaborate allowFFI (enabled): true */
/*    elaborate allowPrim (default): false */
/*    elaborate allowPrim (enabled): true */
/*    elaborate allowOverload (default): false */
/*    elaborate allowOverload (enabled): true */
/*    elaborate allowRebindEquals (default): false */
/*    elaborate allowRebindEquals (enabled): true */
/*    elaborate deadCode (default): false */
/*    elaborate deadCode (enabled): true */
/*    elaborate forceUsed (default): false */
/*    elaborate forceUsed (enabled): true */
/*    elaborate ffiStr (default):  */
/*    elaborate ffiStr (enabled): true */
/*    elaborate nonexhaustiveExnMatch (default): default */
/*    elaborate nonexhaustiveExnMatch (enabled): true */
/*    elaborate nonexhaustiveMatch (default): warn */
/*    elaborate nonexhaustiveMatch (enabled): true */
/*    elaborate redundantMatch (default): warn */
/*    elaborate redundantMatch (enabled): true */
/*    elaborate resolveScope (default): strdec */
/*    elaborate resolveScope (enabled): true */
/*    elaborate sequenceNonUnit (default): warn */
/*    elaborate sequenceNonUnit (enabled): true */
/*    elaborate warnUnused (default): true */
/*    elaborate warnUnused (enabled): true */
/*    elaborate only: false */
/*    emit main: true */
/*    export header: None */
/*    exn history: false */
/*    generated output format: executable */
/*    gc check: Limit */
/*    indentation: 3 */
/*    inlineIntoMain: true */
/*    inlineLeafA: {loops = true, repeat = true, size = Some 20} */
/*    inlineLeafB: {loops = true, repeat = true, size = Some 40} */
/*    inlineNonRec: {small = 60, product = 320} */
/*    input file: mlton */
/*    keep CoreML: false */
/*    keep def use: true */
/*    keep dot: false */
/*    keep Machine: false */
/*    keep passes: [] */
/*    keep RSSA: false */
/*    keep SSA: false */
/*    keep SSA2: false */
/*    keep SXML: false */
/*    keep XML: false */
/*    extra_: false */
/*    lib dir: /usr/ports/pobj/mlton-20130715/mlton-on-20130715-release/build/lib */
/*    lib target dir: /usr/ports/pobj/mlton-20130715/mlton-on-20130715-release/build/lib/targets/self */
/*    loop passes: 1 */
/*    mark cards: true */
/*    max function size: 10000 */
/*    mlb path vars: [{var = MLTON_ROOT, path = $(LIB_MLTON_DIR)/sml}, {var = SML_LIB, path = $(LIB_MLTON_DIR)/sml}] */
/*    native commented: 0 */
/*    native live stack: false */
/*    native optimize: 1 */
/*    native move hoist: true */
/*    native copy prop: true */
/*    native copy prop cutoff: 1000 */
/*    native cutoff: 100 */
/*    native live transfer: 8 */
/*    native shuffle: true */
/*    native ieee fp: false */
/*    native split: Some 20000 */
/*    optimizationPasses: [<ssa2::default>, <ssa::default>, <sxml::default>, <xml::default>] */
/*    polyvariance: Some {hofo = true, rounds = 2, small = 30, product = 300} */
/*    prefer abs paths: false */
/*    prof passes: [] */
/*    profile: None */
/*    profile branch: false */
/*    profile C: [] */
/*    profile IL: ProfileSource */
/*    profile include/exclude: [(Seq [Star [.], Or [Seq [Seq [[$], [(], [S], [M], [L], [_], [L], [I], [B], [)]]]], Star [.]], false)] */
/*    profile raise: false */
/*    profile stack: false */
/*    profile val: false */
/*    show basis: None */
/*    show def-use: None */
/*    show types: true */
/*    target: self */
/*    target arch: AMD64 */
/*    target OS: OpenBSD */
/*    type check: false */
/*    verbosity: Pass */
/*    warn unrecognized annotation: true */
/*    warn deprecated features: true */
/*    zone cut depth: 100 */
.text
.p2align 0x4
.globl coerces_1
.hidden coerces_1
coerces_1:
L_79654:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_79692
L_79655:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_406901
L_79656:
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%ecx
	movslq %ecx,%r13
	cmpq %r14,%r13
	jne L_79658
L_79659:
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%ebx
	movslq %ebx,%r13
	cmpq %r14,%r13
	jne L_406899
L_79661:
	cmpl %ecx,%ebx
	jne L_406898
L_79666:
	cmpl $0x0,%ecx
	jl L_406897
L_79667:
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_924:
	cmpl %ecx,%ebx
	jnl L_406896
L_79669:
	movl %ebx,%r15d
	incl %r15d
	movslq %ebx,%r14
	movq 0x8(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r11
	movq 0x0(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r10
	movq %r10,0x10(%rbp)
	movq 0x18(%rbp),%r14
	movq 0x8(%r14),%r13
	movq 0x8(%r13),%r9
	movq %r9,0x20(%rbp)
	movq 0x0(%r13),%r9
	movq %r9,0x28(%rbp)
	movq 0x10(%r11),%r14
	cmpq %r14,0x10(%r10)
	jne L_406895
L_79690:
	movl %r15d,%ebx
	jmp loop_924
.p2align 0x4
L_406895:
L_79670:
	movq %r11,0x38(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_79671+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_14
.p2align 0x4
L_406896:
L_79668:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_406897:
L_79691:
	movq (globalObjptr+0xCF8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_406898:
L_79662:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xF0C0)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_172+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_406899:
L_79658:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_406901:
L_79692:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_79693+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79693
.p2align 0x4
.long 0x4AE
L_79693:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	jmp L_79656
.p2align 0x4
.long 0x796
L_79671:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_79672
L_79688:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_79689+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79689
.p2align 0x4
.long 0x51F
L_79689:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_79672:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x30(%rbp)
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xF018)(%rip),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_79673+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_14
.p2align 0x4
.long 0x1
bug_172:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_79663
L_79664:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_79665+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79665
.p2align 0x4
.long 0x451
L_79665:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_79663:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x5F1
L_79673:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_79674
L_79686:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_79687+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79687
.p2align 0x4
.long 0x489
L_79687:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_79674:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xF020)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_79675+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp record_3
.p2align 0x4
.long 0x51A
L_79675:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_79676
L_79684:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_79685+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79685
.p2align 0x4
.long 0x488
L_79685:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_79676:
	movq 0x28(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq (globalObjptr+0xF028)(%rip),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x858)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xA808)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_79677+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x512
L_79677:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq %r15,0x50(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_79678+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x512
L_79678:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_79679
L_79682:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_79683+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79683
.p2align 0x4
.long 0x86A
L_79683:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_79679:
	movq $0x3E37,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x58(%rbp)
	movq (globalObjptr+0x9D8)(%rip),%r15
	movq %r15,0x48(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_79680+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3780
.p2align 0x4
.long 0x78B
L_79680:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x8(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_79681+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x1
L_79681:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq $0x15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl x_1340
.hidden x_1340
x_1340:
L_79694:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_79695
L_79750:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_79751+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79751
.p2align 0x4
.long 0x45F
L_79751:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_79695:
	movq 0x8(%rbp),%r10
	movq 0x8(%r10),%r11
	movq 0x0(%r10),%r13
	movq 0x0(%rbp),%r10
	movq 0x10(%r10),%r15
	movq (globalObjptr+0x1068)(%rip),%r10
	movq 0x0(%r10),%r14
	incq %r14
	jo L_406917
L_79697:
	movq %r14,0x0(%r10)
	movq 0x0(%r15),%r10
	cmpq $0x1,%r10
	je L_406916
L_79698:
	movq 0x8(%r10),%r14
	movq 0x0(%r10),%r10
	xorl %ecx,%ecx
	movq %r10,%r15
.p2align 0x4,,0x7
L_79700:
	movq %r15,%r10
	andq $0x3,%r10
	jnz L_406915
L_79741:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r10
	shrq $0x1,%r10
	cmpq $0xCEE,%r10
	jne L_406914
L_79742:
	movq 0x8(%r15),%r10
	cmpq 0x0(%r15),%r11
	movq %r11,(localObjptr+0x0)(%rip)
	je L_406911
L_79701:
	incl %ecx
	jo L_406910
L_79703:
	cmpq $0x1,%r14
	je L_406908
L_79704:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq (localObjptr+0x0)(%rip),%r11
	jmp L_79700
.p2align 0x4
L_406908:
L_79705:
L_79706:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_406909
L_79708:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl x_231
L_79740:
	movl %ecx,0x0(%r15)
x_231:
	movq %r13,0x10(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_79710+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_406909:
L_79707:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_406910:
L_79702:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_406911:
L_79744:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_79707
L_79745:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_406912
L_79748:
	movl %ecx,0x0(%r14)
	movq %r10,%r15
L_79747:
	movq 0x8(%r15),%r14
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_406912:
L_79746:
	movq %r10,%r15
	jmp L_79747
.p2align 0x4
L_406914:
	movq %r11,(localObjptr+0x0)(%rip)
	jmp L_79701
.p2align 0x4
L_406915:
	movq %r11,(localObjptr+0x0)(%rip)
	jmp L_79701
.p2align 0x4
L_406916:
L_79749:
	xorl %ecx,%ecx
	jmp L_79706
.p2align 0x4
L_406917:
L_79696:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_79710:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_79711+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1
L_79711:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_79712+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4AF
L_79712:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xF078)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_79713+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5AF
L_79713:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_79714+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x51E
L_79714:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_79715
L_79738:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_79739+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79739
.p2align 0x4
.long 0x4AE
L_79739:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_79715:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_79716:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_79702
L_79717:
	cmpq $0x1,%r14
	je L_406919
L_79718:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_79716
.p2align 0x4
L_406919:
L_79719:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_79720
L_79736:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_79737+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79737
.p2align 0x4
.long 0x4E6
L_79737:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_79720:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_406920
L_79721:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
toString_92:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	addq $0x8,%rbp
	leaq (rev_92+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_406920:
L_79735:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_92
.p2align 0x4
.long 0x1
rev_92:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_406926
L_79722:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_79723:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_406925
.p2align 0x4,,0x7
L_79724:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_406924
L_79725:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_79723
.p2align 0x4
L_406924:
L_79727:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_79728+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_406925:
L_79732:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_79733+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79733
.p2align 0x4
.long 0x45B
L_79733:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_79724
.p2align 0x4
L_406926:
L_79734:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_79727
.p2align 0x4
.long 0x1
L_79728:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_79729
L_79730:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_79731+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79731
.p2align 0x4
.long 0x451
L_79731:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_79729:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl foldP_1
.hidden foldP_1
foldP_1:
L_79752:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_79753
L_80413:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_80414+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_80414
.p2align 0x4
.long 0x4E8
L_80414:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_79753:
	movq 0x10(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x4(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_79755
L_79756:
	cmpl $0x0,%r13d
	jl L_79875
L_79757:
	movl $0x0,0x18(%rbp)
.p2align 0x4,,0x7
loop_925:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_407044
.p2align 0x4,,0x7
L_79758:
	movl 0x18(%rbp),%r15d
	cmpl 0x4(%rbp),%r15d
	jnl L_407018
L_79785:
	movslq %r15d,%r14
	movq 0x10(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%rax
	shrq $0x1,%rax
	subq $0x1B02,%rax
	cmpq $0x17,%rax
	ja L_406928
	leaq jumpTable_198(%rip),%rbx
	jmp *(%rbx,%rax,8)
.data
.p2align 0x4
jumpTable_198:
.quad L_407017,L_407016,L_407015,L_406990,L_406974,L_406973,L_406972,L_406971,L_406970,L_406969,L_406968,L_406967,L_406965,L_406940,L_406939,L_406938,L_406937,L_406936,L_406935,L_406934,L_406932,L_406931,L_406930,L_406929
.text
.p2align 0x4
L_406928:
L_79786:
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x28(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_79787+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_17
.p2align 0x4
L_406929:
L_80403:
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_80404+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1337
.p2align 0x4
L_406930:
L_80394:
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x38(%rbp)
	movq 0x30(%r14),%r15
	movq 0x8(%r15),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x28(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_80395+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_33
.p2align 0x4
L_406931:
L_80328:
	movq 0x8(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x48(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x38(%rbp)
	addq $0x48,%rbp
	leaq (L_80329+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1338
.p2align 0x4
L_406932:
L_80323:
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r13),%r14
	movq %r14,0x28(%rbp)
	movq 0x8(%r15),%r14
	movq 0x0(%r14),%r11
	movq 0x8(%r13),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x18(%r15),%r10
	movq 0x0(%r14),%r15
	cmpq $0x1,%r15
	jne L_406933
L_80326:
	movq %r10,0x40(%rbp)
	movq %r11,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_80327+0x0)(%rip),%r14
	movq %r14,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unique_0
.p2align 0x4
L_406933:
L_80324:
L_80325:
	movq %r15,0x30(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x40(%rbp)
	movb $0x0,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_79799+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp edge_0
.p2align 0x4
L_406934:
L_80294:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x40(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x30(%rbp)
	addq $0x40,%rbp
	leaq (L_80295+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1339
.p2align 0x4
L_406935:
L_80283:
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_80284+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_79
.p2align 0x4
L_406936:
L_80245:
	movq 0x8(%rbp),%r15
	movq 0x28(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x48(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x50(%rbp)
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_80246+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_15
.p2align 0x4
L_406937:
L_80240:
	movq 0x0(%r13),%r15
	movq %r15,0x38(%rbp)
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x40(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x20(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x28(%rbp)
	addq $0x38,%rbp
	leaq (L_80241+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1335
.p2align 0x4
L_406938:
L_80231:
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x38(%rbp)
	movq 0x30(%r14),%r15
	movq 0x8(%r15),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x28(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_80232+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_33
.p2align 0x4
L_406939:
L_80230:
	movq 0x8(%rbp),%r15
	movq 0x50(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x48(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x40(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_79799+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp incLabel_0
.p2align 0x4
L_406940:
L_80179:
	movq 0x8(%rbp),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x20(%rbp)
	movq 0x0(%r11),%r9
	movq %r9,0x28(%rbp)
	movq 0x8(%r13),%r9
	movq %r9,0x30(%rbp)
	movl 0x0(%r9),%r13d
	movq 0x10(%r11),%r15
	movq (globalObjptr+0xAE0)(%rip),%r11
	movq 0x0(%r11),%r14
	incq %r14
	jo L_406964
L_80180:
	movq %r14,0x0(%r11)
	andl 0x0(%r10),%r13d
	cmpl $0x0,%r13d
	jl L_79843
L_80181:
	movslq %r13d,%r11
	movq %r11,0x38(%rbp)
	cmpq 0xFFFFFFFFFFFFFFF0(%r15),%r11
	jnb L_79815
L_80183:
	movq 0x0(%r15,%r11,8),%r13
	movq %r13,0x40(%rbp)
	cmpq $0x1,%r13
	je L_80191
L_80184:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
.p2align 0x4,,0x7
L_80185:
	movq (globalObjptr+0xAE8)(%rip),%r13
	movq 0x0(%r13),%r11
	incq %r11
	jo L_406960
L_80186:
	movq %r11,0x0(%r13)
	movq 0x30(%rbp),%r13
	movq 0x10(%r15),%r11
	cmpq %r11,0x10(%r13)
	je L_406959
L_80187:
	cmpq $0x1,%r14
	je L_406941
L_80188:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_80185
.p2align 0x4
L_406941:
L_80189:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_406958
.p2align 0x4,,0x7
L_80191:
	movq 0x28(%rbp),%r15
	movl 0x0(%r15),%r14d
	incl %r14d
	jo L_79843
L_80192:
	movl %r14d,0x0(%r15)
	movq 0x8(%rbp),%r14
	movq 0x10(%r14),%r13
	movq $0x2377,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x18,%r12
	movq 0x30(%rbp),%r10
	movq %r10,0x0(%r11)
	movq 0x40(%rbp),%r10
	movq %r10,0x8(%r11)
	movq 0x38(%rbp),%r10
	cmpq 0xFFFFFFFFFFFFFFF0(%r13),%r10
	jnb L_79815
L_80194:
	movq %r13,%r9
	shrq $0x8,%r9
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r9,1)
	movq %r11,0x0(%r13,%r10,8)
	movq 0x10(%r14),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r11
	movl %r11d,%r10d
	movslq %r10d,%r9
	cmpq %r11,%r9
	jne L_79755
L_80196:
	movl 0x0(%r15),%r14d
	imull $0x4,%r14d
	jo L_79843
L_80197:
	cmpl %r14d,%r10d
	jl L_406942
.p2align 0x4,,0x7
L_79795:
	incl 0x18(%rbp)
	jmp loop_925
.p2align 0x4
L_406942:
L_80199:
	addl %r10d,%r10d
	jo L_79843
L_80200:
	movq 0x20(%rbp),%r15
	movl 0x0(%r15),%r14d
	shll $0x1,%r14d
	orl $0x1,%r14d
	movl %r14d,0x1C(%rbp)
	movslq %r10d,%rdx
	movq %rdx,0x28(%rbp)
	cmpq $0x7FFFFFFF,%rdx
	ja L_406952
L_80201:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xD09,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_80202+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_80202
.p2align 0x4
.long 0x10DF
L_80202:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq %rax,0x30(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_933:
	cmpq 0x28(%rbp),%r15
	jnl L_406943
L_80223:
	movq 0x30(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_933
.p2align 0x4
L_406943:
L_80203:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movl %r13d,0x40(%rbp)
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_406951
L_80205:
	cmpl $0x0,%r13d
	jl L_406950
L_80206:
	movl $0x0,0x44(%rbp)
.p2align 0x4,,0x7
loop_934:
	movl 0x44(%rbp),%r15d
	cmpl 0x40(%rbp),%r15d
	jnl L_406949
L_80208:
	movslq %r15d,%r14
	movq 0x38(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	cmpq $0x1,%r13
	je L_80217
L_80209:
	movq 0x8(%r13),%r15
	movq %r15,0x48(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x50(%rbp)
L_80210:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_406947
.p2align 0x4,,0x7
L_80211:
	movq 0x50(%rbp),%r15
	movl 0x0(%r15),%r14d
	andl 0x1C(%rbp),%r14d
	cmpl $0x0,%r14d
	jl L_406946
L_80212:
	movslq %r14d,%r13
	cmpq 0x28(%rbp),%r13
	jnb L_406945
L_80214:
	movq 0x30(%rbp),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq $0x2377,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r15,0x0(%r10)
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r10,0x0(%r14,%r13,8)
	movq 0x48(%rbp),%r15
	cmpq $0x1,%r15
	je L_406944
L_80215:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x48(%rbp)
	movq %r14,0x50(%rbp)
	jmp L_80210
.p2align 0x4
L_406944:
L_80217:
	incl 0x44(%rbp)
	jmp loop_934
.p2align 0x4
L_406945:
L_79815:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_406946:
L_79843:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_406947:
L_80219:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_80220+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_80220
.p2align 0x4
.long 0x10E0
L_80220:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	jmp L_80211
.p2align 0x4
L_406949:
L_80207:
	movq 0x8(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x30(%rbp),%r13
	movq %r13,0x10(%r14)
	movq 0x20(%rbp),%r14
	movl 0x1C(%rbp),%r13d
	movl %r13d,0x0(%r14)
	jmp L_79795
.p2align 0x4
L_406950:
L_79875:
	movq (globalObjptr+0x4F8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_406951:
L_79755:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_406952:
L_79878:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_406958:
L_80225:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_80226+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_80226
.p2align 0x4
.long 0x10E1
L_80226:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_80191
.p2align 0x4
L_406959:
L_79882:
	movq (globalObjptr+0xCE8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_406960:
L_79836:
	movq (globalObjptr+0xAF0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_406964:
L_79829:
	movq (globalObjptr+0xAF8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_406965:
L_80174:
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r13),%r14
	movq %r14,0x28(%rbp)
	movq 0x8(%r15),%r14
	movq 0x0(%r14),%r11
	movq 0x8(%r13),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x18(%r15),%r10
	movq 0x0(%r14),%r15
	cmpq $0x1,%r15
	jne L_406966
L_80177:
	movq %r10,0x40(%rbp)
	movq %r11,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_80178+0x0)(%rip),%r14
	movq %r14,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unique_0
.p2align 0x4
L_406966:
L_80175:
L_80176:
	movq %r15,0x30(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x40(%rbp)
	movb $0x0,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_79799+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp edge_1
.p2align 0x4
L_406967:
L_80173:
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_79799+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1334
.p2align 0x4
L_406968:
L_80136:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x40(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x30(%rbp)
	addq $0x40,%rbp
	leaq (L_80137+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1341
.p2align 0x4
L_406969:
L_80027:
	movq 0x8(%rbp),%r15
	movq 0x20(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x50(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x40(%rbp)
	addq $0x50,%rbp
	leaq (L_80028+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1340
.p2align 0x4
L_406970:
L_80017:
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x38(%rbp)
	movq 0x30(%r14),%r15
	movq 0x8(%r15),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x28(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_80018+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_33
.p2align 0x4
L_406971:
L_79969:
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x28(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_79970+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1399
.p2align 0x4
L_406972:
L_79957:
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_79958+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_40
.p2align 0x4
L_406973:
L_79938:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x30(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_79939+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_18
.p2align 0x4
L_406974:
L_79885:
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x0(%r13),%r15
	cmpq $0x1,%r14
	je L_79795
	cmpq $0x2,%r14
	je L_79795
	cmpq $0x3,%r14
	je L_79795
L_79886:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%rax
	shrq $0x1,%rax
	subq $0x1B35,%rax
	cmpq $0xA,%rax
	ja L_406975
	leaq jumpTable_199(%rip),%rbx
	jmp *(%rbx,%rax,8)
.data
.p2align 0x4
jumpTable_199:
.quad L_406986,L_406985,L_406984,L_406983,L_406982,L_406981,L_406980,L_406979,L_406978,L_406977,L_406976
.text
.p2align 0x4
L_406975:
L_79887:
	movq %r15,0x28(%rbp)
	movq 0x30(%r14),%r15
	movq %r15,0x30(%rbp)
	movq 0x28(%r14),%r15
	movq %r15,0x38(%rbp)
	movq 0x20(%r14),%r15
	movq %r15,0x40(%rbp)
	movq 0x18(%r14),%r15
	movq %r15,0x48(%rbp)
	movq 0x10(%r14),%r15
	movq %r15,0x50(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x58(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x60(%rbp)
	addq $0x28,%rbp
	leaq (L_79799+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp visit_1
.p2align 0x4
L_406976:
L_79934:
	movq %r15,0x28(%rbp)
	movq 0x20(%r14),%r15
	movq %r15,0x30(%rbp)
	movq 0x18(%r14),%r15
	movq %r15,0x38(%rbp)
	movq 0x10(%r14),%r15
	movq %r15,0x40(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x48(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x50(%rbp)
	addq $0x28,%rbp
	leaq (L_79799+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp visit_2
.p2align 0x4
L_406977:
L_79933:
	movq %r15,0x28(%rbp)
	movq 0x20(%r14),%r15
	movq %r15,0x30(%rbp)
	movq 0x18(%r14),%r15
	movq %r15,0x38(%rbp)
	movq 0x10(%r14),%r15
	movq %r15,0x40(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x48(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x50(%rbp)
	addq $0x28,%rbp
	leaq (L_79799+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp visit_3
.p2align 0x4
L_406978:
L_79932:
	movq %r15,0x28(%rbp)
	movq 0x20(%r14),%r15
	movq %r15,0x30(%rbp)
	movq 0x18(%r14),%r15
	movq %r15,0x38(%rbp)
	movq 0x10(%r14),%r15
	movq %r15,0x40(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x48(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x50(%rbp)
	addq $0x28,%rbp
	leaq (L_79799+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp visit_4
.p2align 0x4
L_406979:
L_79923:
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x20(%rbp)
	movq 0x30(%r15),%r14
	movq 0x8(%r14),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x28(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_79924+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_33
.p2align 0x4
L_406980:
L_79911:
	movq %r15,0x48(%rbp)
	movq 0x18(%r14),%r15
	movq %r15,0x20(%rbp)
	movq 0x10(%r14),%r15
	movq %r15,0x28(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x38(%rbp)
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_79912+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_33
.p2align 0x4
L_406981:
L_79900:
	movq %r15,0x48(%rbp)
	movq 0x18(%r14),%r15
	movq %r15,0x20(%rbp)
	movq 0x10(%r14),%r15
	movq %r15,0x28(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x38(%rbp)
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_79901+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_33
.p2align 0x4
L_406982:
L_79899:
	movq %r15,0x30(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x38(%rbp)
	addq $0x28,%rbp
	leaq (L_79799+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp goto_1
.p2align 0x4
L_406983:
L_79891:
	movq 0x0(%r14),%r13
	movq %r13,0x20(%rbp)
	movq 0x8(%r14),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x50(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x28(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x30(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x38(%rbp)
	movq %r14,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_79892+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_4
.p2align 0x4
L_406984:
L_79890:
	movq %r15,0x28(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x38(%rbp)
	addq $0x28,%rbp
	leaq (L_79799+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1336
.p2align 0x4
L_406985:
L_79889:
	movq %r15,0x28(%rbp)
	movq 0x20(%r14),%r15
	movq %r15,0x30(%rbp)
	movq 0x18(%r14),%r15
	movq %r15,0x38(%rbp)
	movq 0x10(%r14),%r15
	movq %r15,0x40(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x48(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x50(%rbp)
	addq $0x28,%rbp
	leaq (L_79799+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp visit_5
.p2align 0x4
L_406986:
L_79888:
	movq %r15,0x28(%rbp)
	movq 0x20(%r14),%r15
	movq %r15,0x30(%rbp)
	movq 0x18(%r14),%r15
	movq %r15,0x38(%rbp)
	movq 0x10(%r14),%r15
	movq %r15,0x40(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x48(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x50(%rbp)
	addq $0x28,%rbp
	leaq (L_79799+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp visit_6
.p2align 0x4
L_406990:
L_79828:
	movq 0x8(%rbp),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x20(%rbp)
	movq 0x0(%r11),%r9
	movq %r9,0x28(%rbp)
	movq 0x8(%r13),%r9
	movq %r9,0x30(%rbp)
	movl 0x0(%r9),%r13d
	movq 0x10(%r11),%r15
	movq (globalObjptr+0xAE0)(%rip),%r11
	movq 0x0(%r11),%r14
	incq %r14
	jo L_79829
L_79830:
	movq %r14,0x0(%r11)
	andl 0x0(%r10),%r13d
	cmpl $0x0,%r13d
	jl L_79843
L_79831:
	movslq %r13d,%r11
	movq %r11,0x38(%rbp)
	cmpq 0xFFFFFFFFFFFFFFF0(%r15),%r11
	jnb L_79815
L_79833:
	movq 0x0(%r15,%r11,8),%r13
	movq %r13,0x40(%rbp)
	cmpq $0x1,%r13
	je L_79842
L_79834:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
.p2align 0x4,,0x7
L_79835:
	movq (globalObjptr+0xAE8)(%rip),%r13
	movq 0x0(%r13),%r11
	incq %r11
	jo L_79836
L_79837:
	movq %r11,0x0(%r13)
	movq 0x30(%rbp),%r13
	movq 0x10(%r15),%r11
	cmpq %r11,0x10(%r13)
	je L_79882
L_79838:
	cmpq $0x1,%r14
	je L_406991
L_79839:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_79835
.p2align 0x4
L_406991:
L_79840:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_407008
.p2align 0x4,,0x7
L_79842:
	movq 0x28(%rbp),%rdx
	movl 0x0(%rdx),%r15d
	incl %r15d
	jo L_79843
L_79844:
	movl %r15d,0x0(%rdx)
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq $0x2377,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq 0x30(%rbp),%r11
	movq %r11,0x0(%r13)
	movq 0x40(%rbp),%r11
	movq %r11,0x8(%r13)
	movq 0x38(%rbp),%r11
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r11
	jnb L_79815
L_79846:
	movq %r14,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r13,0x0(%r14,%r11,8)
	movq 0x10(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r13,%r10
	jne L_79755
L_79848:
	movl 0x0(%rdx),%r15d
	imull $0x4,%r15d
	jo L_79843
L_79849:
	cmpl %r15d,%r11d
	jnl L_79795
L_79851:
	addl %r11d,%r11d
	jo L_79843
L_79852:
	movq 0x20(%rbp),%r15
	movl 0x0(%r15),%r14d
	shll $0x1,%r14d
	orl $0x1,%r14d
	movl %r14d,0x1C(%rbp)
	movslq %r11d,%rdx
	movq %rdx,0x28(%rbp)
	cmpq $0x7FFFFFFF,%rdx
	ja L_79878
L_79853:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xD09,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_79854+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79854
.p2align 0x4
.long 0x10DF
L_79854:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq %rax,0x30(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_926:
	cmpq 0x28(%rbp),%r15
	jnl L_406992
L_79876:
	movq 0x30(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_926
.p2align 0x4
L_406992:
L_79855:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movl %r13d,0x40(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_79755
L_79857:
	cmpl $0x0,%r13d
	jl L_79875
L_79858:
	movl $0x0,0x44(%rbp)
.p2align 0x4,,0x7
loop_927:
	movl 0x44(%rbp),%r15d
	cmpl 0x40(%rbp),%r15d
	jnl L_406998
L_79860:
	movslq %r15d,%r14
	movq 0x38(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	cmpq $0x1,%r13
	je L_79869
L_79861:
	movq 0x8(%r13),%r15
	movq %r15,0x48(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x50(%rbp)
L_79862:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_406996
.p2align 0x4,,0x7
L_79863:
	movq 0x50(%rbp),%r15
	movl 0x0(%r15),%r14d
	andl 0x1C(%rbp),%r14d
	cmpl $0x0,%r14d
	jl L_79843
L_79864:
	movslq %r14d,%r13
	cmpq 0x28(%rbp),%r13
	jnb L_79815
L_79866:
	movq 0x30(%rbp),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq $0x2377,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r15,0x0(%r10)
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r10,0x0(%r14,%r13,8)
	movq 0x48(%rbp),%r15
	cmpq $0x1,%r15
	je L_406993
L_79867:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x48(%rbp)
	movq %r14,0x50(%rbp)
	jmp L_79862
.p2align 0x4
L_406993:
L_79869:
	incl 0x44(%rbp)
	jmp loop_927
.p2align 0x4
L_406996:
L_79871:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_79872+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79872
.p2align 0x4
.long 0x10E0
L_79872:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	jmp L_79863
.p2align 0x4
L_406998:
L_79859:
	movq 0x8(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x30(%rbp),%r13
	movq %r13,0x10(%r14)
	movq 0x20(%rbp),%r14
	movl 0x1C(%rbp),%r13d
	movl %r13d,0x0(%r14)
	jmp L_79795
.p2align 0x4
L_407008:
L_79879:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_79880+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79880
.p2align 0x4
.long 0x10E1
L_79880:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_79842
.p2align 0x4
L_407015:
L_79827:
	movq 0x8(%rbp),%r15
	movq 0x50(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x48(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x40(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_79799+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp incLabel_1
.p2align 0x4
L_407016:
L_79817:
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x38(%rbp)
	movq 0x30(%r14),%r15
	movq 0x8(%r15),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x28(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_79818+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_33
.p2align 0x4
L_407017:
L_79808:
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_79809+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1342
.p2align 0x4
L_407018:
L_79759:
	movzbq 0x0(%rbp),%rax
	subq $0x1,%rax
	cmpq $0x17,%rax
	ja L_407019
	leaq jumpTable_200(%rip),%rbx
	jmp *(%rbx,%rax,8)
.data
.p2align 0x4
jumpTable_200:
.quad L_407043,L_407042,L_407041,L_407040,L_407039,L_407038,L_407037,L_407036,L_407035,L_407034,L_407033,L_407032,L_407031,L_407030,L_407029,L_407028,L_407027,L_407026,L_407025,L_407024,L_407023,L_407022,L_407021,L_407020
.text
.p2align 0x4
L_407019:
L_79760:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_407020:
L_79784:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_407021:
L_79783:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_407022:
L_79782:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_407023:
L_79781:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_407024:
L_79780:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_407025:
L_79779:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_407026:
L_79778:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_407027:
L_79777:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_407028:
L_79776:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_407029:
L_79775:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_407030:
L_79774:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_407031:
L_79773:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_407032:
L_79772:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_407033:
L_79771:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_407034:
L_79770:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_407035:
L_79769:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_407036:
L_79768:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_407037:
L_79767:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_407038:
L_79766:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_407039:
L_79765:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_407040:
L_79764:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_407041:
L_79763:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_407042:
L_79762:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_407043:
L_79761:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_407044:
L_80410:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_80411+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_80411
.p2align 0x4
.long 0x49B
L_80411:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	jmp L_79758
.p2align 0x4
.long 0x639
L_79787:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_79788
L_79806:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_79807+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79807
.p2align 0x4
.long 0xE93
L_79807:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_79788:
	movq 0x30(%rbp),%r15
	movq 0x10(%r15),%r14
	movb 0x4(%r14),%r15b
	testb %r15b,%r15b
	jz L_407048
L_79801:
	movb $0x0,0x4(%r14)
	movl $0x0,0x0(%r14)
	movq $0x1,0x40(%rbp)
	movb $0x0,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_79802+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3819
.p2align 0x4
L_407048:
L_79790:
	movq 0x30(%rbp),%r14
	movq 0x18(%r14),%r13
	movq 0x8(%r13),%r15
	cmpq $0x1,%r15
	je L_407050
L_79791:
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_407049
L_79792:
L_79793:
	movq $0x41B9,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq 0x28(%rbp),%r11
	movq %r11,0x0(%r13)
	movq 0x20(%rbp),%r11
	movq %r11,0x8(%r13)
	movq $0x2729,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r14,0x8(%r11)
	addq $0x18,%r12
	movq %r11,%r14
L_79794:
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	jmp L_79795
.p2align 0x4
L_407049:
L_79796:
	movq $0x41B9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x20(%rbp),%r13
	movq %r13,0x8(%r14)
	movq $0x2727,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x10,%r12
	movq %r13,%r14
	jmp L_79794
.p2align 0x4
L_407050:
L_79797:
	movq 0x20(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (x_232+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_42
.p2align 0x4
.long 0x4F4
L_80404:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r15d
	movslq %r15d,%r13
	cmpq %r13,%r14
	jne L_79755
L_80406:
	cmpl $0x0,%r15d
	je L_79795
	cmpl $0x1,%r15d
	je L_407052
L_79812:
	movq (globalObjptr+0xCF0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_407052:
L_80407:
	cmpq $0x0,%r14
	ja L_79795
	jmp L_79815
.p2align 0x4
.long 0x639
L_80395:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movl 0x38(%rbp),%r15d
	movl %r15d,0x1C(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_80396
L_80401:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_80402+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_80402
.p2align 0x4
.long 0x518
L_80402:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_80396:
	movslq 0x1C(%rbp),%r15
	movq 0x28(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_79815
L_80398:
	movq 0x0(%r14,%r15,8),%r13
L_80399:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_407056
L_80400:
	movq 0x10(%r13),%r15
	movl 0x0(%r13),%r14d
	movq 0x8(%r13),%r11
	movq $0x8E5,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movl %r14d,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r11,0x10(%r13)
	addq $0x20,%r12
	movl $0x0,0x4(%r13)
	movq %r13,0x28(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_79799+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp deleteLabelMeaning_0
.p2align 0x4
L_407056:
L_79823:
	movq (globalObjptr+0x2230)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xB1D
L_80329:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r15d
	movslq %r15d,%r13
	cmpq %r14,%r13
	jne L_79755
L_80331:
	cmpl $0x0,%r15d
	je L_407072
	cmpl $0x1,%r15d
	je L_407059
	jmp L_79812
.p2align 0x4
L_407059:
L_80391:
	cmpq $0x0,%r14
	jna L_79815
L_80393:
	movq 0x40(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
L_80333:
	movq 0x20(%rbp),%r10
	movq 0x8(%r10),%r11
	movq 0x0(%r10),%r13
	movq 0x38(%rbp),%r10
	movq 0x10(%r10),%r15
	movq (globalObjptr+0x1068)(%rip),%r10
	movq 0x0(%r10),%r14
	incq %r14
	jo L_407070
L_80334:
	movq %r14,0x0(%r10)
	movq 0x0(%r15),%r10
	cmpq $0x1,%r10
	je L_407069
L_80335:
	movq 0x8(%r10),%r14
	movq 0x0(%r10),%r10
	xorl %ecx,%ecx
	movq %r10,%r15
.p2align 0x4,,0x7
L_80337:
	movq %r15,%r10
	andq $0x3,%r10
	jnz L_407068
L_80379:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r10
	shrq $0x1,%r10
	cmpq $0xD3C,%r10
	jne L_407067
L_80380:
	movq 0x8(%r15),%r10
	cmpq 0x0(%r15),%r11
	movq %r11,(localObjptr+0x0)(%rip)
	je L_407064
L_80338:
	incl %ecx
	jo L_79843
L_80339:
	cmpq $0x1,%r14
	je L_407060
L_80340:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq (localObjptr+0x0)(%rip),%r11
	jmp L_80337
.p2align 0x4
L_407060:
L_80341:
L_80342:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_407062
L_80343:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl x_236
L_80378:
	movl %ecx,0x0(%r15)
x_236:
	movq 0x0(%r13),%r15
	movq 0x38(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x40(%rbp)
	movq 0x18(%r14),%r11
	movq 0x0(%r13),%r14
	cmpq $0x1,%r14
	jne L_407061
L_80376:
	movq %r11,0x50(%rbp)
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_80377+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unique_0
.p2align 0x4
L_407061:
L_80345:
	movq %r14,%r15
L_80346:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_80347+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_407062:
L_80039:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_407064:
L_80382:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_80039
L_80383:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_407065
L_80389:
	movl %ecx,0x0(%r14)
	movq %r10,%r15
L_80385:
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x50,%rbp
	leaq (L_80386+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1378
.p2align 0x4
L_407065:
L_80384:
	movq %r10,%r15
	jmp L_80385
.p2align 0x4
L_407067:
	movq %r11,(localObjptr+0x0)(%rip)
	jmp L_80338
.p2align 0x4
L_407068:
	movq %r11,(localObjptr+0x0)(%rip)
	jmp L_80338
.p2align 0x4
L_407069:
L_80390:
	xorl %ecx,%ecx
	jmp L_80342
.p2align 0x4
L_407070:
L_80029:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_407072:
L_80332:
	movq $0x1,0x40(%rbp)
	jmp L_80333
.p2align 0x4
.long 0xBC0
L_80327:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x30(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp L_80325
.p2align 0x4
.long 0x4F4
L_79799:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	jmp L_79795
.p2align 0x4
.long 0xBC0
L_80295:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_80296+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_11
.p2align 0x4
.long 0x4F4
L_80284:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x1C(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_79755
L_80286:
	cmpl $0x0,%r13d
	jl L_79875
L_80287:
	movl $0x0,0x28(%rbp)
.p2align 0x4,,0x7
loop_937:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_407075
.p2align 0x4,,0x7
L_80288:
	movl 0x28(%rbp),%r15d
	cmpl 0x1C(%rbp),%r15d
	jnl L_79795
L_80290:
	movslq %r15d,%r14
	movq 0x20(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r11
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq %r11,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r14,0x0(%r11)
	incl %r15d
	movl %r15d,0x28(%rbp)
	jmp loop_937
.p2align 0x4
L_407075:
L_80291:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_80292+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_80292
.p2align 0x4
.long 0x10DF
L_80292:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_80288
.p2align 0x4
.long 0x9D2
L_80246:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	movslq 0x0(%r15),%r14
	movq 0x20(%rbp),%r15
	cmpq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	jnb L_79815
L_80248:
	movl $0x1,0x0(%r15,%r14,4)
	movq 0x48(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_80249+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_71
.p2align 0x4
.long 0x639
L_80241:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_80242
L_80243:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_80244+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_80244
.p2align 0x4
.long 0xE93
L_80244:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_80242:
	movq $0x342B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_79799+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_2
.p2align 0x4
.long 0x639
L_80232:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movl 0x38(%rbp),%r15d
	movl %r15d,0x1C(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_80233
L_80238:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_80239+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_80239
.p2align 0x4
.long 0x518
L_80239:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_80233:
	movslq 0x1C(%rbp),%r15
	movq 0x28(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_79815
L_80235:
	movq 0x0(%r14,%r15,8),%r13
L_80236:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_407080
L_80237:
	movq 0x10(%r13),%r15
	movl 0x0(%r13),%r14d
	movq 0x8(%r13),%r11
	movq $0x8C7,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movl %r14d,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r11,0x10(%r13)
	addq $0x20,%r12
	movl $0x0,0x4(%r13)
	movq %r13,0x28(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_79799+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp deleteLabelMeaning_1
.p2align 0x4
L_407080:
L_80023:
	movq (globalObjptr+0x1F00)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xBC0
L_80178:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x30(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp L_80176
.p2align 0x4
.long 0xBC0
L_80137:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x28(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_80138+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_13
.p2align 0x4
.long 0xE92
L_80028:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r10
	movq %r10,0x48(%rbp)
	movq 0x20(%rbp),%r10
	movq 0x8(%r10),%r11
	movq 0x0(%r10),%r13
	movq 0x40(%rbp),%r10
	movq 0x10(%r10),%r15
	movq (globalObjptr+0x1068)(%rip),%r10
	movq 0x0(%r10),%r14
	incq %r14
	jo L_80029
L_80030:
	movq %r14,0x0(%r10)
	movq 0x0(%r15),%r10
	cmpq $0x1,%r10
	je L_407099
L_80031:
	movq 0x8(%r10),%r14
	movq 0x0(%r10),%r10
	xorl %ecx,%ecx
	movq %r10,%r15
.p2align 0x4,,0x7
L_80033:
	movq %r15,%r10
	andq $0x3,%r10
	jnz L_407098
L_80076:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r10
	shrq $0x1,%r10
	cmpq $0xCEB,%r10
	jne L_407097
L_80077:
	movq 0x8(%r15),%r10
	cmpq %r11,0x0(%r15)
	movq %r11,(localObjptr+0x0)(%rip)
	je L_407087
L_80034:
	incl %ecx
	jo L_79843
L_80035:
	cmpq $0x1,%r14
	je L_407083
L_80036:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq (localObjptr+0x0)(%rip),%r11
	jmp L_80033
.p2align 0x4
L_407083:
L_80037:
L_80038:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_80039
L_80040:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl x_234
L_80075:
	movl %ecx,0x0(%r15)
x_234:
	movq 0x0(%r13),%r15
	movq 0x40(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x48(%rbp)
	movq 0x18(%r14),%r11
	movq 0x0(%r13),%r14
	cmpq $0x1,%r14
	jne L_407084
L_80073:
	movq %r11,0x58(%rbp)
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_80074+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unique_0
.p2align 0x4
L_407084:
L_80042:
	movq %r14,%r15
L_80043:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_80044+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_407087:
L_80079:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_80039
L_80080:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_407095
L_80134:
	movl %ecx,0x0(%r14)
	movq %r10,%r15
L_80082:
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x8(%r15),%r13
	movq 0x30(%rbp),%r11
	movq 0x8(%r11),%r10
	movq 0x8(%r10),%r9
	movq %r9,0x40(%rbp)
	movq 0x0(%r10),%r9
	movq %r9,0x50(%rbp)
	movq 0x28(%rbp),%r11
	movq 0x10(%r14),%r10
	cmpq %r10,0x10(%r11)
	jne L_407094
L_80103:
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r14
	movl %r14d,%ecx
	movslq %ecx,%r15
	cmpq %r14,%r15
	jne L_79755
L_80105:
	movq 0x48(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r11
	movl %r11d,%ebx
	movslq %ebx,%r15
	cmpq %r11,%r15
	jne L_79755
L_80107:
	cmpl %ecx,%ebx
	jne L_79977
L_80109:
	cmpl $0x0,%ecx
	jl L_407090
L_80110:
	xorl %ebx,%ebx
	movq %r13,%r15
.p2align 0x4,,0x7
loop_930:
	cmpl %ecx,%ebx
	jnl L_79795
L_80112:
	movl %ebx,%r14d
	incl %r14d
	movslq %ebx,%r13
	movq 0x0(%r15,%r13,8),%r11
	movq 0x48(%rbp),%r10
	movq 0x0(%r10,%r13,8),%r9
	movq %r9,0x20(%rbp)
	movq 0x38(%rbp),%r13
	movq 0x8(%r13),%r10
	movq %r10,0x28(%rbp)
	movq 0x0(%r13),%r10
	movq %r10,0x30(%rbp)
	movq 0x10(%r9),%r13
	cmpq %r13,0x10(%r11)
	jne L_407088
L_80132:
	movl %r14d,%ebx
	jmp loop_930
.p2align 0x4
L_407088:
L_80113:
	movq %r11,0x40(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_80114+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_14
.p2align 0x4
L_407090:
L_79977:
	movq (globalObjptr+0xCF8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_407094:
L_80083:
	movq 0x28(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_80084+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_14
.p2align 0x4
L_407095:
L_80081:
	movq %r10,%r15
	jmp L_80082
.p2align 0x4
L_407097:
	movq %r11,(localObjptr+0x0)(%rip)
	jmp L_80034
.p2align 0x4
L_407098:
	movq %r11,(localObjptr+0x0)(%rip)
	jmp L_80034
.p2align 0x4
L_407099:
L_80135:
	xorl %ecx,%ecx
	jmp L_80038
.p2align 0x4
.long 0x639
L_80018:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movl 0x38(%rbp),%r15d
	movl %r15d,0x1C(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_80019
L_80025:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_80026+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_80026
.p2align 0x4
.long 0x518
L_80026:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_80019:
	movslq 0x1C(%rbp),%r15
	movq 0x28(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_79815
L_80021:
	movq 0x0(%r14,%r15,8),%r13
L_80022:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_80023
L_80024:
	movq 0x10(%r13),%r15
	movl 0x0(%r13),%r14d
	movq 0x8(%r13),%r11
	movq $0x8C7,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movl %r14d,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r11,0x10(%r13)
	addq $0x20,%r12
	movl $0x0,0x4(%r13)
	movq %r13,0x28(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_79799+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp deleteLabelMeaning_1
.p2align 0x4
.long 0x639
L_79970:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_79971+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1462
.p2align 0x4
.long 0x4F4
L_79958:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x1C(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_79755
L_79960:
	cmpl $0x0,%r13d
	jl L_79875
L_79961:
	movl $0x0,0x28(%rbp)
.p2align 0x4,,0x7
loop_928:
	movl 0x28(%rbp),%r15d
	cmpl 0x1C(%rbp),%r15d
	jnl L_79795
L_79963:
	movslq %r15d,%r14
	movq 0x20(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	cmpq $0x1,%r13
	jne L_407104
.p2align 0x4,,0x7
L_79966:
	incl 0x28(%rbp)
	jmp loop_928
.p2align 0x4
L_407104:
L_79964:
	movq 0x0(%r13),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_79965+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp nonSelect_0
.p2align 0x4
.long 0xBC0
L_79939:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x8(%r15),%r14
	movb 0x4(%r14),%r15b
	testb %r15b,%r15b
	jz L_407108
L_79955:
	movb $0x0,0x4(%r14)
	movl $0x0,0x0(%r14)
	movq $0x1,0x48(%rbp)
	movb $0x4,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_79956+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3819
.p2align 0x4
L_407108:
L_79941:
	movq 0x30(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_79942+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_41
.p2align 0x4
.long 0x639
L_79924:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movl 0x38(%rbp),%r15d
	movl %r15d,0x1C(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_79925
L_79930:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_79931+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79931
.p2align 0x4
.long 0x518
L_79931:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_79925:
	movslq 0x1C(%rbp),%r15
	movq 0x28(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_79815
L_79927:
	movq 0x0(%r14,%r15,8),%r13
L_79928:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_79823
L_79929:
	movq 0x10(%r13),%r15
	movl 0x0(%r13),%r14d
	movq 0x8(%r13),%r11
	movq $0x8E5,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movl %r14d,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r11,0x10(%r13)
	addq $0x20,%r12
	movl $0x0,0x4(%r13)
	movq %r13,0x28(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_79799+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp deleteLabelMeaning_0
.p2align 0x4
.long 0xB1D
L_79912:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movl 0x48(%rbp),%r15d
	movl %r15d,0x1C(%rbp)
	movslq %r15d,%r14
	movq 0x30(%rbp),%r15
	cmpq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	jnb L_79815
L_79914:
	movl 0x0(%r15,%r14,4),%r13d
	testl %r13d,%r13d
	jnz L_79795
L_79915:
	movl $0x1,0x0(%r15,%r14,4)
	movq 0x28(%rbp),%r15
	cmpq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	jnb L_79815
L_79917:
	movq 0x0(%r15,%r14,8),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x40(%rbp)
	movq $0x3,0x50(%rbp)
	movq $0x3,0x58(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq %r11,0x68(%rbp)
	addq $0x50,%rbp
	leaq (L_79918+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachFuncLabelVar_0
.p2align 0x4
.long 0xB1D
L_79901:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movl 0x48(%rbp),%r15d
	movl %r15d,0x1C(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_79902
L_79909:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_79910+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79910
.p2align 0x4
.long 0xE91
L_79910:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_79902:
	movslq 0x1C(%rbp),%r15
	movq 0x30(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_79815
L_79904:
	movl 0x0(%r14,%r15,4),%r13d
	testl %r13d,%r13d
	jnz L_79795
L_79905:
	movl $0x1,0x0(%r14,%r15,4)
	movq 0x28(%rbp),%r13
	cmpq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	jnb L_79815
L_79907:
	movq 0x0(%r13,%r15,8),%r11
	movq 0x0(%r11),%r15
	movq %r15,0x40(%rbp)
	movq 0x20(%rbp),%r15
	movq 0x0(%r15),%r10
	movq $0x1E99,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r11,0x0(%r9)
	movq %r10,0x8(%r9)
	addq $0x18,%r12
	movq %r15,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r9,0x0(%r15)
	movq $0x3675,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x28,%r12
	movq 0x38(%rbp),%r10
	movq %r10,0x0(%r11)
	movq %r14,0x8(%r11)
	movq %r13,0x10(%r11)
	movq %r15,0x18(%r11)
	movq %r11,0x30(%rbp)
	movq $0xA,0x28(%rbp)
	movq $0xD,0x38(%rbp)
	addq $0x28,%rbp
	leaq (L_79799+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachFuncLabelVar_0
.p2align 0x4
.long 0xB1D
L_79892:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_79893
L_79897:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_79898+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79898
.p2align 0x4
.long 0xE90
L_79898:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_79893:
	movq 0x40(%rbp),%r15
	cmpq $0x1,%r15
	je L_407119
L_79894:
L_79895:
	movq 0x20(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x13,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq $0x1,0x0(%r11)
	movq $0x114D,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x20,%r12
	movq %r14,0x10(%r10)
	movq 0x0(%r13),%r15
	movq $0x261B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r10,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r14,0x0(%r13)
	jmp L_79795
.p2align 0x4
L_407119:
L_79896:
	movq $0x45,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x13,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0x47,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x1B7F,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r13,0x8(%r10)
	addq $0x18,%r12
	movq %r11,0x0(%r10)
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r13,1)
	movq %r10,0x0(%r14)
	movq $0x196B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r11,0x8(%r14)
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x38(%rbp),%r13
	movq 0x0(%r13),%r10
	movq $0x28DF,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r14,0x0(%r8)
	movq %r10,0x8(%r8)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r9,%r14,1)
	movq %r8,0x0(%r13)
	xchgq %r11,%r15
	jmp L_79895
.p2align 0x4
.long 0x639
L_79818:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movl 0x38(%rbp),%r15d
	movl %r15d,0x1C(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_79819
L_79825:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_79826+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79826
.p2align 0x4
.long 0x518
L_79826:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_79819:
	movslq 0x1C(%rbp),%r15
	movq 0x28(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_79815
L_79821:
	movq 0x0(%r14,%r15,8),%r13
L_79822:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_79823
L_79824:
	movq 0x10(%r13),%r15
	movl 0x0(%r13),%r14d
	movq 0x8(%r13),%r11
	movq $0x8E5,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movl %r14d,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r11,0x10(%r13)
	addq $0x20,%r12
	movl $0x0,0x4(%r13)
	movq %r13,0x28(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_79799+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp deleteLabelMeaning_0
.p2align 0x4
.long 0x4F4
L_79809:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r15d
	movslq %r15d,%r13
	cmpq %r13,%r14
	jne L_79755
L_79811:
	cmpl $0x0,%r15d
	je L_79795
	cmpl $0x1,%r15d
	je L_407124
	jmp L_79812
.p2align 0x4
L_407124:
L_79813:
	cmpq $0x0,%r14
	ja L_79795
	jmp L_79815
.p2align 0x4
.long 0xBC0
L_79802:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_79790
L_79804:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_79805+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79805
.p2align 0x4
.long 0xE93
L_79805:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_79790
.p2align 0x4
.long 0x4F4
x_232:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_79795
L_79798:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x8(%r14)
	movl $0x0,0x0(%r14)
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movb $0x2,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_79799+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3819
.p2align 0x4
.long 0x847
L_80377:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x40(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp L_80346
.p2align 0x4
.long 0x1
L_80347:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_80348+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x10E3
L_80386:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x40(%rbp),%r15
	cmpq $0x1,%r15
	je L_79795
L_80387:
	movq %r15,0x28(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_79799+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1378
.p2align 0x4
.long 0x730
L_80296:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r15,0x20(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1442,%r15
	jne L_407132
L_80297:
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xF1E,%r15
	jne L_407131
L_80299:
	movq 0x0(%r13),%r15
	movq %r15,0x20(%rbp)
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_80300+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_12
.p2align 0x4
L_407131:
L_80298:
	movq (globalObjptr+0x2168)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_407132:
L_79986:
	movq (globalObjptr+0x1500)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x10EC
L_80249:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x18(%r14),%r13
	movq %r15,0x20(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movl %r15d,%r14d
	movslq %r14d,%rdx
	movq %rdx,0x48(%rbp)
	cmpq %rdx,%r15
	movq %r13,0x28(%rbp)
	jne L_79755
L_80251:
	testq %rdx,%rdx
	jz L_407143
L_80252:
	cmpq $0x7FFFFFFF,%rdx
	ja L_79878
L_80253:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1493,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_80254+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_80254
.p2align 0x4
.long 0x10ED
L_80254:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq %rax,0x58(%rbp)
L_80255:
	movq $0x0,0x60(%rbp)
loop_935:
	movq 0x48(%rbp),%r15
	cmpq %r15,0x60(%rbp)
	jl L_407141
L_80256:
	movq 0x58(%rbp),%r15
	movq $0x951,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x38(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x28(%rbp)
	cmpq %r14,%rdx
	jne L_79755
L_80258:
	testq %rdx,%rdx
	jz L_407139
L_80259:
	cmpq $0x7FFFFFFF,%rdx
	ja L_79878
L_80260:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x153F,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_80261+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_80261
.p2align 0x4
.long 0x10EE
L_80261:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq %rax,0x30(%rbp)
L_80262:
	movq $0x0,0x48(%rbp)
.p2align 0x4,,0x7
loop_936:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_407137
.p2align 0x4,,0x7
L_80263:
	movq 0x48(%rbp),%r15
	cmpq 0x28(%rbp),%r15
	jnl L_407134
L_80269:
	movl %r15d,%r13d
	movslq %r13d,%r15
	movq 0x38(%rbp),%r13
	movq 0x0(%r13,%r15,8),%r14
	movq 0x50(%rbp),%r15
	movq 0x10(%r15),%r13
	cmpq %r13,0x10(%r14)
	je L_407133
L_80270:
	movq $0x1,%r15
L_80271:
	movq $0x16EF,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x30(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq 0x48(%rbp),%r14
	movq %r13,0x0(%r15,%r14,8)
	incq %r14
	movq %r14,0x48(%rbp)
	jmp loop_936
.p2align 0x4
L_407133:
L_80272:
	movq $0x1DE1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x58(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x50(%rbp),%r14
	jmp L_80271
.p2align 0x4
L_407134:
L_80264:
	movq 0x30(%rbp),%r14
	movq $0xB39,0xFFFFFFFFFFFFFFF8(%r14)
	movq 0x20(%rbp),%r13
	movq 0x0(%r13),%r11
	movq 0x0(%r11),%r10
L_80265:
	movq %r10,%r11
	andq $0x3,%r11
	jnz L_79795
L_80266:
	movq 0x0(%r10),%r11
L_80267:
	andq $0x3,%r11
	jnz L_79795
L_80268:
	movq $0x12B7,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x18,%r12
	movq %r14,0x0(%r11)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r11)
	movq 0x18(%r13),%r14
	movq 0x0(%r14),%r13
	movq $0x1DE5,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r11,0x0(%r10)
	movq %r13,0x8(%r10)
	addq $0x18,%r12
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r10,0x0(%r14)
	jmp L_79795
.p2align 0x4
L_407137:
L_80273:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_80274+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_80274
.p2align 0x4
.long 0xFE5
L_80274:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	jmp L_80263
.p2align 0x4
L_407139:
L_80276:
	movq (globalObjptr+0x2008)(%rip),%r15
	movq %r15,0x30(%rbp)
	jmp L_80262
.p2align 0x4
L_407141:
L_80277:
	movq 0x60(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x28(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x70(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (x_235+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_77
.p2align 0x4
L_407143:
L_80282:
	movq (globalObjptr+0xD08)(%rip),%r15
	movq %r15,0x58(%rbp)
	jmp L_80255
.p2align 0x4
.long 0x10EA
L_80138:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_80139
L_80171:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_80172+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_80172
.p2align 0x4
.long 0x10E4
L_80172:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_80139:
	movq 0x20(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1444,%r15
	jne L_79986
L_80140:
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xEE8,%r15
	jne L_407153
L_80142:
	movq 0x8(%r13),%r15
	movq 0x10(%r13),%r14
	movq 0x0(%r14),%r11
	cmpq $0x1,%r11
	je L_407152
	cmpq $0x2,%r11
	je L_407151
L_80143:
	movq 0x8(%r11),%r14
	movq 0x0(%r11),%r13
	movq %r13,0x20(%rbp)
	movq $0x1083,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x18,%r12
	movq 0x30(%rbp),%r10
	movq %r10,0x0(%r11)
	movq 0x38(%rbp),%r9
	movq %r9,0x8(%r11)
	movq 0x0(%r15),%r8
	movq $0x27C7,0x0(%r12)
	movq %r12,%rsp
	addq $0x8,%rsp
	movq %r11,0x0(%rsp)
	movq %r8,0x8(%rsp)
	addq $0x18,%r12
	movq %r15,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r11,1)
	movq %rsp,0x0(%r15)
	movq 0x10(%r14),%r15
	cmpq %r15,0x10(%r10)
	jne L_79795
L_80145:
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movl %r15d,%r14d
	movl %r14d,0x1C(%rbp)
	movslq %r14d,%r11
	cmpq %r11,%r15
	jne L_79755
L_80147:
	movq 0xFFFFFFFFFFFFFFF0(%r9),%r15
	movl %r15d,%ecx
	movslq %ecx,%r13
	cmpq %r15,%r13
	jne L_79755
L_80149:
	cmpl %r14d,%ecx
	jne L_79977
L_80151:
	cmpl $0x0,%r14d
	jl L_79977
L_80152:
	xorl %ecx,%ecx
loop_931:
	cmpl 0x1C(%rbp),%ecx
	jnl L_79795
L_80154:
	movl %ecx,%r15d
	incl %r15d
	movl %r15d,0x28(%rbp)
	movslq %ecx,%r15
	movq 0x20(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x58(%rbp)
	movq 0x38(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x50(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x50,%rbp
	leaq (L_80155+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp coerce_3
.p2align 0x4
L_407151:
L_80170:
	movq $0x1083,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x38(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x0(%r15),%r13
	movq $0x27C7,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq %r11,0x0(%r15)
	jmp L_79795
.p2align 0x4
L_407152:
L_80157:
	movq 0x30(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_80158+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1441
.p2align 0x4
L_407153:
L_80141:
	movq (globalObjptr+0xD00)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x90C
L_80074:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x48(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp L_80043
.p2align 0x4
.long 0x1
L_80044:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_80045+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x6FF
L_80114:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_80115
L_80130:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_80131+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_80131
.p2align 0x4
.long 0x5EE
L_80131:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_80115:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x40(%rbp)
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xF018)(%rip),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_80116+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_14
.p2align 0x4
.long 0x10E5
L_80084:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_80085
L_80101:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_80102+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_80102
.p2align 0x4
.long 0x10E9
L_80102:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_80085:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x30(%rbp)
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xF018)(%rip),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_80086+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_14
.p2align 0x4
.long 0x8FA
L_79971:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x30(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movl %r11d,0x1C(%rbp)
	movslq %r11d,%r10
	cmpq %r13,%r10
	jne L_79755
L_79973:
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%ecx
	movslq %ecx,%r13
	cmpq %r14,%r13
	jne L_79755
L_79975:
	cmpl %r11d,%ecx
	jne L_79977
L_79978:
	cmpl $0x0,%r11d
	jl L_79977
L_79979:
	xorl %ecx,%ecx
loop_929:
	cmpl 0x1C(%rbp),%ecx
	jnl L_79795
L_79981:
	movl %ecx,%r15d
	incl %r15d
	movl %r15d,0x28(%rbp)
	movslq %ecx,%r15
	movq 0x30(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x38(%rbp)
	movq 0x20(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r11
	movq %r11,0x40(%rbp)
	movq %r13,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_79982+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_3
.p2align 0x4
.long 0x73F
L_79965:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_79966
.p2align 0x4
.long 0xB1D
L_79956:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_79941
.p2align 0x4
.long 0x730
L_79942:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x38(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_79943+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp flowVarInfoTysVarInfoTys_0
.p2align 0x4
.long 0xE92
L_79918:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_79919
L_79920:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_79921+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79921
.p2align 0x4
.long 0xE90
L_79921:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_79919:
	movq $0x3677,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x28,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x18(%r15)
	movq %r15,0x30(%rbp)
	movq $0xB,0x28(%rbp)
	movq $0x6,0x38(%rbp)
	addq $0x28,%rbp
	leaq (L_79799+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachFuncLabelVar_0
.p2align 0x4
.long 0x4AF
L_80348:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xEF18)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_80349+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0xB1D
L_80300:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r15,0x40(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x145A,%r15
	jne L_79986
L_80301:
	movq 0x8(%r14),%r15
	movq %r15,0x40(%rbp)
	cmpq $0x1,%r15
	je L_407164
L_80302:
	movq 0x20(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_80303+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_12
.p2align 0x4
L_407164:
L_80307:
	movq 0x30(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_80308+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_19
.p2align 0x4
.long 0x10EF
x_235:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x0(%r15),%r14
L_80278:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_407166
L_80280:
	movq 0x0(%r14),%r15
	movq 0x58(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x60(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x60(%rbp)
	jmp loop_935
.p2align 0x4
L_407166:
L_80279:
	movq (globalObjptr+0x560)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xFE2
L_80155:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movl 0x28(%rbp),%ecx
	jmp loop_931
.p2align 0x4
.long 0x10EB
L_80158:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x1C(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_79755
L_80160:
	movq 0x38(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%ecx
	movslq %ecx,%r11
	cmpq %r14,%r11
	jne L_79755
L_80162:
	cmpl %ecx,%r13d
	jne L_79977
L_80164:
	cmpl $0x0,%r13d
	jl L_79977
L_80165:
	xorl %ecx,%ecx
loop_932:
	cmpl 0x1C(%rbp),%ecx
	jnl L_79795
L_80167:
	movl %ecx,%r15d
	incl %r15d
	movl %r15d,0x28(%rbp)
	movslq %ecx,%r15
	movq 0x20(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x58(%rbp)
	movq 0x38(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x50(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x50,%rbp
	leaq (L_80168+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp coerce_3
.p2align 0x4
.long 0x4AF
L_80045:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xEF18)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_80046+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x868
L_80116:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_80117
L_80128:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_80129+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_80129
.p2align 0x4
.long 0x86A
L_80129:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_80117:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xF020)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_80118+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp record_3
.p2align 0x4
.long 0x10E6
L_80086:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_80087
L_80099:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_80100+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_80100
.p2align 0x4
.long 0x10E8
L_80100:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_80087:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xF020)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_80088+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp record_3
.p2align 0x4
.long 0xE94
L_79982:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_79983+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_3
.p2align 0x4
.long 0x730
L_79943:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_79944
L_79953:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_79954+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79954
.p2align 0x4
.long 0x103F
L_79954:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_79944:
	movq 0x38(%rbp),%r14
	movq 0x10(%r14),%r13
	movq 0x8(%r13),%r15
	cmpq $0x1,%r15
	je L_407175
L_79945:
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_407174
L_79946:
L_79947:
	movq $0x41C7,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq 0x30(%rbp),%r11
	movq %r11,0x0(%r13)
	movq 0x28(%rbp),%r11
	movq %r11,0x8(%r13)
	movq $0x2729,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r14,0x8(%r11)
	addq $0x18,%r12
	movq %r11,%r14
L_79948:
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	jmp L_79795
.p2align 0x4
L_407174:
L_79949:
	movq $0x41C7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x28(%rbp),%r13
	movq %r13,0x8(%r14)
	movq $0x2727,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	addq $0x10,%r12
	movq %r13,%r14
	jmp L_79948
.p2align 0x4
L_407175:
L_79950:
	movq 0x30(%rbp),%r15
	movq 0x28(%rbp),%r14
	movq %r14,0x30(%rbp)
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (x_233+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_41
.p2align 0x4
.long 0x5AF
L_80349:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_80350+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0xFDD
L_80303:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_80304
L_80320:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_80321+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_80321
.p2align 0x4
.long 0xE90
L_80321:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_80304:
	movq 0x20(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x145A,%r13
	jne L_407177
L_80305:
	movl 0x0(%r14),%r13d
	movq $0x28B5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %r13d,0x0(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1,0x8(%r14)
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	movb $0x3,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_80306+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3819
.p2align 0x4
L_407177:
L_80006:
	movq (globalObjptr+0x1508)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x10F0
L_80308:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movl %r13d,0x1C(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_79755
L_80310:
	movq 0x38(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%ecx
	movslq %ecx,%r11
	cmpq %r14,%r11
	jne L_79755
L_80312:
	cmpl %ecx,%r13d
	jne L_79977
L_80314:
	cmpl $0x0,%r13d
	jl L_79977
L_80315:
	xorl %ecx,%ecx
loop_938:
	cmpl 0x1C(%rbp),%ecx
	jnl L_79795
L_80317:
	movl %ecx,%r15d
	incl %r15d
	movl %r15d,0x20(%rbp)
	movslq %ecx,%r15
	movq 0x28(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x50(%rbp)
	movq 0x38(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_80318+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp coerce_2
.p2align 0x4
.long 0xFE2
L_80168:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movl 0x28(%rbp),%ecx
	jmp loop_932
.p2align 0x4
.long 0x5AF
L_80046:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_80047+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x69B
L_80118:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_80119
L_80126:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_80127+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_80127
.p2align 0x4
.long 0x6AE
L_80127:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_80119:
	movq 0x30(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq (globalObjptr+0xF028)(%rip),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x858)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xA808)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_80120+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x61B
L_80088:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_80089
L_80097:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_80098+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_80098
.p2align 0x4
.long 0x61C
L_80098:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_80089:
	movq 0x50(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x68(%rbp)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq (globalObjptr+0xF028)(%rip),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x858)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xA808)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_80090+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x10E2
L_79983:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	cmpq 0x48(%rbp),%r15
	movq %r15,0x50(%rbp)
	je L_407186
L_79984:
	movq 0x38(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_79985+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_3
.p2align 0x4
L_407186:
L_79996:
	movl 0x28(%rbp),%ecx
	jmp loop_929
.p2align 0x4
.long 0x4F4
x_233:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_79795
L_79951:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x8(%r14)
	movl $0x0,0x0(%r14)
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movb $0x6,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_79799+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3819
.p2align 0x4
.long 0x51E
L_80350:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_80351
L_80374:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_80375+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_80375
.p2align 0x4
.long 0x4AE
L_80375:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_80351:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_80352:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_79843
L_80353:
	cmpq $0x1,%r14
	je L_407188
L_80354:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_80352
.p2align 0x4
L_407188:
L_80355:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_80356
L_80372:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_80373+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_80373
.p2align 0x4
.long 0x4E6
L_80373:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_80356:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_407189
L_80357:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
toString_94:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	addq $0x8,%rbp
	leaq (rev_94+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_407189:
L_80371:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_94
.p2align 0x4
.long 0x730
L_80306:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_80307
.p2align 0x4
.long 0x10F1
L_80318:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movl 0x20(%rbp),%ecx
	jmp loop_938
.p2align 0x4
.long 0x51E
L_80047:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_80048
L_80071:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_80072+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_80072
.p2align 0x4
.long 0x4AE
L_80072:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_80048:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_80049:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_79843
L_80050:
	cmpq $0x1,%r14
	je L_407193
L_80051:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_80049
.p2align 0x4
L_407193:
L_80052:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_80053
L_80069:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_80070+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_80070
.p2align 0x4
.long 0x4E6
L_80070:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_80053:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_407194
L_80054:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
toString_93:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	addq $0x8,%rbp
	leaq (rev_93+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_407194:
L_80068:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_93
.p2align 0x4
.long 0x9B0
L_80120:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq %r15,0x58(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_80121+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x10E7
L_80090:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq %r15,0x78(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_80091+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x10E3
L_79985:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r15,0x38(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1450,%r15
	jne L_79986
L_79987:
	movq 0x8(%r14),%r15
	movq %r15,0x38(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_79988+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_3
.p2align 0x4
.long 0x1
rev_94:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_407201
L_80358:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_80359:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_407200
.p2align 0x4,,0x7
L_80360:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_407199
L_80361:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_80359
.p2align 0x4
L_407199:
L_80363:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_80364+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_407200:
L_80368:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_80369+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_80369
.p2align 0x4
.long 0x45B
L_80369:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_80360
.p2align 0x4
L_407201:
L_80370:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_80363
.p2align 0x4
.long 0x1
rev_93:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_407204
L_80055:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_80056:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_407203
.p2align 0x4,,0x7
L_80057:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_407202
L_80058:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_80056
.p2align 0x4
L_407202:
L_80060:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_80061+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_407203:
L_80065:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_80066+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_80066
.p2align 0x4
.long 0x45B
L_80066:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_80057
.p2align 0x4
L_407204:
L_80067:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_80060
.p2align 0x4
.long 0x9B0
L_80121:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_80122
L_80124:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_80125+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_80125
.p2align 0x4
.long 0x78E
L_80125:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_80122:
	movq $0x3E37,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x60(%rbp)
	movq (globalObjptr+0x9D8)(%rip),%r15
	movq %r15,0x50(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_80123+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3780
.p2align 0x4
.long 0x10E7
L_80091:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_80092
L_80095:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_80096+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_80096
.p2align 0x4
.long 0x4DA
L_80096:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_80092:
	movq $0x3E37,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x80(%rbp)
	movq (globalObjptr+0x9D8)(%rip),%r15
	movq %r15,0x70(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_80093+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3780
.p2align 0x4
.long 0xE94
L_79988:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_79989
L_80013:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_80014+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_80014
.p2align 0x4
.long 0x10E4
L_80014:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_79989:
	movq 0x48(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1450,%r15
	jne L_79986
L_79990:
	movq 0x8(%r14),%r15
	movq 0x38(%rbp),%r14
	cmpq $0x1,%r14
	je L_407209
L_79991:
	cmpq $0x1,%r15
	je L_79996
L_79992:
	movq 0x0(%r14),%r15
	cmpq $0x1,%r15
	je L_407207
L_79993:
L_79994:
	movq $0x41DB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x2729,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq %r13,%r15
L_79995:
	movq 0x38(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp L_79996
.p2align 0x4
L_407207:
L_79997:
	movq $0x41DB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x2727,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
	jmp L_79995
.p2align 0x4
L_407209:
L_79999:
	cmpq $0x1,%r15
	je L_79996
L_80000:
	movq 0x40(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_80001+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_3
.p2align 0x4
.long 0x1
L_80364:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_80365
L_80366:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_80367+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_80367
.p2align 0x4
.long 0x451
L_80367:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_80365:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_80061:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_80062
L_80063:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_80064+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_80064
.p2align 0x4
.long 0x451
L_80064:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_80062:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x847
L_80123:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x8(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_80094+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x79A
L_80093:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x8(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_80094+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x10E3
L_80001:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r15,0x38(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1450,%r15
	jne L_79986
L_80002:
	movq 0x8(%r14),%r15
	movq %r15,0x38(%rbp)
	cmpq $0x1,%r15
	je L_79996
L_80003:
	movq 0x40(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_80004+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_3
.p2align 0x4
.long 0x1
L_80094:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq $0x15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xBBC
L_80004:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_80005
L_80009:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_80010+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_80010
.p2align 0x4
.long 0xE95
L_80010:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_80005:
	movq 0x40(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x1450,%r13
	jne L_80006
L_80007:
	movl 0x0(%r14),%r13d
	movq $0x28A1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %r13d,0x0(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1,0x8(%r14)
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movb $0xD,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_80008+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3819
.p2align 0x4
.long 0xA81
L_80008:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_79996
.text
.p2align 0x4
.globl x_1342
.hidden x_1342
x_1342:
L_80415:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_80416
L_80471:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_80472+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_80472
.p2align 0x4
.long 0x45F
L_80472:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_80416:
	movq 0x8(%rbp),%r10
	movq 0x8(%r10),%r11
	movq 0x0(%r10),%r13
	movq 0x0(%rbp),%r10
	movq 0x10(%r10),%r15
	movq (globalObjptr+0x1068)(%rip),%r10
	movq 0x0(%r10),%r14
	incq %r14
	jo L_407228
L_80418:
	movq %r14,0x0(%r10)
	movq 0x0(%r15),%r10
	cmpq $0x1,%r10
	je L_407227
L_80419:
	movq 0x8(%r10),%r14
	movq 0x0(%r10),%r10
	xorl %ecx,%ecx
	movq %r10,%r15
.p2align 0x4,,0x7
L_80421:
	movq %r15,%r10
	andq $0x3,%r10
	jnz L_407226
L_80462:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r10
	shrq $0x1,%r10
	cmpq $0xD46,%r10
	jne L_407225
L_80463:
	movq 0x8(%r15),%r10
	cmpq 0x0(%r15),%r11
	movq %r11,(localObjptr+0x0)(%rip)
	je L_407222
L_80422:
	incl %ecx
	jo L_407221
L_80424:
	cmpq $0x1,%r14
	je L_407219
L_80425:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq (localObjptr+0x0)(%rip),%r11
	jmp L_80421
.p2align 0x4
L_407219:
L_80426:
L_80427:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_407220
L_80429:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl x_237
L_80461:
	movl %ecx,0x0(%r15)
x_237:
	movq %r13,0x10(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_80431+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_407220:
L_80428:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_407221:
L_80423:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_407222:
L_80465:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_80428
L_80466:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_407223
L_80469:
	movl %ecx,0x0(%r14)
	movq %r10,%r15
L_80468:
	movq 0x8(%r15),%r14
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_407223:
L_80467:
	movq %r10,%r15
	jmp L_80468
.p2align 0x4
L_407225:
	movq %r11,(localObjptr+0x0)(%rip)
	jmp L_80422
.p2align 0x4
L_407226:
	movq %r11,(localObjptr+0x0)(%rip)
	jmp L_80422
.p2align 0x4
L_407227:
L_80470:
	xorl %ecx,%ecx
	jmp L_80427
.p2align 0x4
L_407228:
L_80417:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_80431:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_80432+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1
L_80432:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_80433+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4AF
L_80433:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xF078)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_80434+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5AF
L_80434:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_80435+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x51E
L_80435:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_80436
L_80459:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_80460+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_80460
.p2align 0x4
.long 0x4AE
L_80460:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_80436:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_80437:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_80423
L_80438:
	cmpq $0x1,%r14
	je L_407230
L_80439:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_80437
.p2align 0x4
L_407230:
L_80440:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_80441
L_80457:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_80458+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_80458
.p2align 0x4
.long 0x4E6
L_80458:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_80441:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_407231
L_80442:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
toString_95:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	addq $0x8,%rbp
	leaq (rev_95+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_407231:
L_80456:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_95
.p2align 0x4
.long 0x1
rev_95:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_407237
L_80443:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_80444:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_407236
.p2align 0x4,,0x7
L_80445:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_407235
L_80446:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_80444
.p2align 0x4
L_407235:
L_80448:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_80449+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_407236:
L_80453:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_80454+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_80454
.p2align 0x4
.long 0x45B
L_80454:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_80445
.p2align 0x4
L_407237:
L_80455:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_80448
.p2align 0x4
.long 0x1
L_80449:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_80450
L_80451:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_80452+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_80452
.p2align 0x4
.long 0x451
L_80452:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_80450:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl get_33
.hidden get_33
get_33:
L_80473:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_80474
L_80959:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_80960+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_80960
.p2align 0x4
.long 0x45F
L_80960:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_80474:
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_80475+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_3
.p2align 0x4
.long 0x788
L_80475:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x8(%rbp)
	andq $0x1,%r15
	jnz L_407256
L_80476:
	movq 0x10(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%rax
	shrq $0x1,%rax
	subq $0x21B1,%rax
	cmpq $0xE,%rax
	ja L_407240
	leaq jumpTable_201(%rip),%rbx
	jmp *(%rbx,%rax,8)
.data
.p2align 0x4
jumpTable_201:
.quad L_407255,L_407254,L_407253,L_407252,L_407251,L_407250,L_407249,L_407248,L_407247,L_407246,L_407245,L_407244,L_407243,L_407242,L_407241
.text
.p2align 0x4
L_407240:
L_80477:
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_80478+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_407241:
L_80928:
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_80929+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_407242:
L_80898:
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_80899+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_407243:
L_80868:
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_80869+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_407244:
L_80838:
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_80839+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_407245:
L_80808:
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_80809+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_407246:
L_80778:
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_80779+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_407247:
L_80748:
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_80749+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_407248:
L_80718:
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_80719+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_407249:
L_80688:
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_80689+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_407250:
L_80658:
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_80659+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_407251:
L_80628:
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_80629+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_407252:
L_80598:
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_80599+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_407253:
L_80568:
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_80569+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_407254:
L_80538:
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_80539+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_407255:
L_80508:
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_80509+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_407256:
L_80958:
	movq 0x8(%rbp),%r15
	shrq $0x1,%r15
	movl %r15d,%r14d
	movl %r14d,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_80478:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_80479+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1
L_80929:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_80930+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1
L_80899:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_80900+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1
L_80869:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_80870+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1
L_80839:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_80840+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1
L_80809:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_80810+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1
L_80779:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_80780+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1
L_80749:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_80750+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1
L_80719:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_80720+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1
L_80689:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_80690+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1
L_80659:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_80660+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1
L_80629:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_80630+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1
L_80599:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_80600+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1
L_80569:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_80570+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1
L_80539:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_80540+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1
L_80509:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_80510+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1
L_80479:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_80480+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1
L_80930:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_80931+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1
L_80900:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_80901+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1
L_80870:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_80871+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1
L_80840:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_80841+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1
L_80810:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_80811+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1
L_80780:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_80781+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1
L_80750:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_80751+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1
L_80720:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_80721+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1
L_80690:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_80691+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1
L_80660:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_80661+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1
L_80630:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_80631+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1
L_80600:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_80601+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1
L_80570:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_80571+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1
L_80540:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_80541+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1
L_80510:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_80511+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4AF
L_80480:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xDEE8)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_80481+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4AF
L_80931:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xF0D0)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_80932+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4AF
L_80901:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xF0C8)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_80902+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4AF
L_80871:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xDEE8)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_80872+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4AF
L_80841:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xDEE8)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_80842+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4AF
L_80811:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xDEE8)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_80812+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4AF
L_80781:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xDEE8)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_80782+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4AF
L_80751:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xDEE8)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_80752+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4AF
L_80721:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xDEE8)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_80722+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4AF
L_80691:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xDEE8)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_80692+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4AF
L_80661:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xDEE8)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_80662+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4AF
L_80631:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xDEE8)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_80632+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4AF
L_80601:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xDEE8)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_80602+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4AF
L_80571:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xDEE8)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_80572+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4AF
L_80541:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xDEE8)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_80542+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4AF
L_80511:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xDEE8)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_80512+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5AF
L_80481:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_80482+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5AF
L_80932:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_80933+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5AF
L_80902:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_80903+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5AF
L_80872:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_80873+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5AF
L_80842:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_80843+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5AF
L_80812:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_80813+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5AF
L_80782:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_80783+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5AF
L_80752:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_80753+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5AF
L_80722:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_80723+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5AF
L_80692:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_80693+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5AF
L_80662:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_80663+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5AF
L_80632:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_80633+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5AF
L_80602:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_80603+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5AF
L_80572:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_80573+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5AF
L_80542:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_80543+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5AF
L_80512:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_80513+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x51E
L_80482:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_80483
L_80506:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_80507+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_80507
.p2align 0x4
.long 0x4AE
L_80507:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_80483:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_80484:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_407260
L_80486:
	cmpq $0x1,%r14
	je L_407257
L_80487:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_80484
.p2align 0x4
L_407257:
L_80488:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_80489
L_80504:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_80505+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_80505
.p2align 0x4
.long 0x4E6
L_80505:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_80489:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_407258
L_80490:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
toString_96:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	addq $0x8,%rbp
	leaq (rev_96+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_407258:
L_80503:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_96
.p2align 0x4
L_407260:
L_80485:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x51E
L_80933:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_80934
L_80956:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_80957+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_80957
.p2align 0x4
.long 0x4AE
L_80957:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_80934:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_80935:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_80485
L_80936:
	cmpq $0x1,%r14
	je L_407262
L_80937:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_80935
.p2align 0x4
L_407262:
L_80938:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_80939
L_80954:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_80955+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_80955
.p2align 0x4
.long 0x4E6
L_80955:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_80939:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_407263
L_80940:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
toString_111:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	addq $0x8,%rbp
	leaq (rev_111+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_407263:
L_80953:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_111
.p2align 0x4
.long 0x51E
L_80903:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_80904
L_80926:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_80927+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_80927
.p2align 0x4
.long 0x4AE
L_80927:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_80904:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_80905:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_80485
L_80906:
	cmpq $0x1,%r14
	je L_407267
L_80907:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_80905
.p2align 0x4
L_407267:
L_80908:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_80909
L_80924:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_80925+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_80925
.p2align 0x4
.long 0x4E6
L_80925:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_80909:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_407268
L_80910:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
toString_110:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	addq $0x8,%rbp
	leaq (rev_110+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_407268:
L_80923:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_110
.p2align 0x4
.long 0x51E
L_80873:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_80874
L_80896:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_80897+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_80897
.p2align 0x4
.long 0x4AE
L_80897:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_80874:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_80875:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_80485
L_80876:
	cmpq $0x1,%r14
	je L_407272
L_80877:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_80875
.p2align 0x4
L_407272:
L_80878:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_80879
L_80894:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_80895+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_80895
.p2align 0x4
.long 0x4E6
L_80895:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_80879:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_407273
L_80880:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
toString_109:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	addq $0x8,%rbp
	leaq (rev_109+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_407273:
L_80893:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_109
.p2align 0x4
.long 0x51E
L_80843:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_80844
L_80866:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_80867+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_80867
.p2align 0x4
.long 0x4AE
L_80867:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_80844:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_80845:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_80485
L_80846:
	cmpq $0x1,%r14
	je L_407277
L_80847:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_80845
.p2align 0x4
L_407277:
L_80848:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_80849
L_80864:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_80865+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_80865
.p2align 0x4
.long 0x4E6
L_80865:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_80849:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_407278
L_80850:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
toString_108:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	addq $0x8,%rbp
	leaq (rev_108+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_407278:
L_80863:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_108
.p2align 0x4
.long 0x51E
L_80813:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_80814
L_80836:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_80837+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_80837
.p2align 0x4
.long 0x4AE
L_80837:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_80814:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_80815:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_80485
L_80816:
	cmpq $0x1,%r14
	je L_407282
L_80817:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_80815
.p2align 0x4
L_407282:
L_80818:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_80819
L_80834:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_80835+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_80835
.p2align 0x4
.long 0x4E6
L_80835:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_80819:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_407283
L_80820:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
toString_107:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	addq $0x8,%rbp
	leaq (rev_107+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_407283:
L_80833:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_107
.p2align 0x4
.long 0x51E
L_80783:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_80784
L_80806:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_80807+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_80807
.p2align 0x4
.long 0x4AE
L_80807:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_80784:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_80785:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_80485
L_80786:
	cmpq $0x1,%r14
	je L_407287
L_80787:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_80785
.p2align 0x4
L_407287:
L_80788:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_80789
L_80804:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_80805+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_80805
.p2align 0x4
.long 0x4E6
L_80805:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_80789:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_407288
L_80790:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
toString_106:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	addq $0x8,%rbp
	leaq (rev_106+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_407288:
L_80803:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_106
.p2align 0x4
.long 0x51E
L_80753:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_80754
L_80776:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_80777+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_80777
.p2align 0x4
.long 0x4AE
L_80777:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_80754:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_80755:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_80485
L_80756:
	cmpq $0x1,%r14
	je L_407292
L_80757:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_80755
.p2align 0x4
L_407292:
L_80758:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_80759
L_80774:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_80775+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_80775
.p2align 0x4
.long 0x4E6
L_80775:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_80759:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_407293
L_80760:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
toString_105:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	addq $0x8,%rbp
	leaq (rev_105+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_407293:
L_80773:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_105
.p2align 0x4
.long 0x51E
L_80723:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_80724
L_80746:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_80747+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_80747
.p2align 0x4
.long 0x4AE
L_80747:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_80724:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_80725:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_80485
L_80726:
	cmpq $0x1,%r14
	je L_407297
L_80727:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_80725
.p2align 0x4
L_407297:
L_80728:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_80729
L_80744:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_80745+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_80745
.p2align 0x4
.long 0x4E6
L_80745:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_80729:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_407298
L_80730:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
toString_104:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	addq $0x8,%rbp
	leaq (rev_104+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_407298:
L_80743:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_104
.p2align 0x4
.long 0x51E
L_80693:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_80694
L_80716:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_80717+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_80717
.p2align 0x4
.long 0x4AE
L_80717:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_80694:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_80695:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_80485
L_80696:
	cmpq $0x1,%r14
	je L_407302
L_80697:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_80695
.p2align 0x4
L_407302:
L_80698:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_80699
L_80714:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_80715+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_80715
.p2align 0x4
.long 0x4E6
L_80715:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_80699:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_407303
L_80700:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
toString_103:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	addq $0x8,%rbp
	leaq (rev_103+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_407303:
L_80713:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_103
.p2align 0x4
.long 0x51E
L_80663:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_80664
L_80686:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_80687+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_80687
.p2align 0x4
.long 0x4AE
L_80687:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_80664:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_80665:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_80485
L_80666:
	cmpq $0x1,%r14
	je L_407307
L_80667:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_80665
.p2align 0x4
L_407307:
L_80668:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_80669
L_80684:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_80685+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_80685
.p2align 0x4
.long 0x4E6
L_80685:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_80669:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_407308
L_80670:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
toString_102:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	addq $0x8,%rbp
	leaq (rev_102+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_407308:
L_80683:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_102
.p2align 0x4
.long 0x51E
L_80633:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_80634
L_80656:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_80657+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_80657
.p2align 0x4
.long 0x4AE
L_80657:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_80634:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_80635:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_80485
L_80636:
	cmpq $0x1,%r14
	je L_407312
L_80637:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_80635
.p2align 0x4
L_407312:
L_80638:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_80639
L_80654:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_80655+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_80655
.p2align 0x4
.long 0x4E6
L_80655:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_80639:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_407313
L_80640:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
toString_101:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	addq $0x8,%rbp
	leaq (rev_101+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_407313:
L_80653:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_101
.p2align 0x4
.long 0x51E
L_80603:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_80604
L_80626:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_80627+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_80627
.p2align 0x4
.long 0x4AE
L_80627:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_80604:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_80605:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_80485
L_80606:
	cmpq $0x1,%r14
	je L_407317
L_80607:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_80605
.p2align 0x4
L_407317:
L_80608:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_80609
L_80624:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_80625+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_80625
.p2align 0x4
.long 0x4E6
L_80625:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_80609:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_407318
L_80610:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
toString_100:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	addq $0x8,%rbp
	leaq (rev_100+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_407318:
L_80623:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_100
.p2align 0x4
.long 0x51E
L_80573:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_80574
L_80596:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_80597+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_80597
.p2align 0x4
.long 0x4AE
L_80597:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_80574:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_80575:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_80485
L_80576:
	cmpq $0x1,%r14
	je L_407322
L_80577:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_80575
.p2align 0x4
L_407322:
L_80578:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_80579
L_80594:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_80595+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_80595
.p2align 0x4
.long 0x4E6
L_80595:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_80579:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_407323
L_80580:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
toString_99:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	addq $0x8,%rbp
	leaq (rev_99+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_407323:
L_80593:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_99
.p2align 0x4
.long 0x51E
L_80543:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_80544
L_80566:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_80567+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_80567
.p2align 0x4
.long 0x4AE
L_80567:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_80544:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_80545:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_80485
L_80546:
	cmpq $0x1,%r14
	je L_407327
L_80547:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_80545
.p2align 0x4
L_407327:
L_80548:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_80549
L_80564:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_80565+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_80565
.p2align 0x4
.long 0x4E6
L_80565:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_80549:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_407328
L_80550:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
toString_98:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	addq $0x8,%rbp
	leaq (rev_98+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_407328:
L_80563:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_98
.p2align 0x4
.long 0x51E
L_80513:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_80514
L_80536:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_80537+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_80537
.p2align 0x4
.long 0x4AE
L_80537:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_80514:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_80515:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_80485
L_80516:
	cmpq $0x1,%r14
	je L_407332
L_80517:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_80515
.p2align 0x4
L_407332:
L_80518:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_80519
L_80534:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_80535+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_80535
.p2align 0x4
.long 0x4E6
L_80535:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_80519:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_407333
L_80520:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
toString_97:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	addq $0x8,%rbp
	leaq (rev_97+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_407333:
L_80533:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_97
.p2align 0x4
.long 0x1
rev_96:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_407339
L_80491:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_80492:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_407338
.p2align 0x4,,0x7
L_80493:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_407337
L_80494:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_80492
.p2align 0x4
L_407337:
L_80496:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_173+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_407338:
L_80500:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_80501+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_80501
.p2align 0x4
.long 0x45B
L_80501:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_80493
.p2align 0x4
L_407339:
L_80502:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_80496
.p2align 0x4
.long 0x1
rev_111:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_407342
L_80941:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_80942:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_407341
.p2align 0x4,,0x7
L_80943:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_407340
L_80944:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_80942
.p2align 0x4
L_407340:
L_80946:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_188+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_407341:
L_80950:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_80951+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_80951
.p2align 0x4
.long 0x45B
L_80951:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_80943
.p2align 0x4
L_407342:
L_80952:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_80946
.p2align 0x4
.long 0x1
rev_110:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_407345
L_80911:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_80912:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_407344
.p2align 0x4,,0x7
L_80913:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_407343
L_80914:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_80912
.p2align 0x4
L_407343:
L_80916:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_187+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_407344:
L_80920:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_80921+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_80921
.p2align 0x4
.long 0x45B
L_80921:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_80913
.p2align 0x4
L_407345:
L_80922:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_80916
.p2align 0x4
.long 0x1
rev_109:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_407348
L_80881:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_80882:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_407347
.p2align 0x4,,0x7
L_80883:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_407346
L_80884:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_80882
.p2align 0x4
L_407346:
L_80886:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_186+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_407347:
L_80890:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_80891+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_80891
.p2align 0x4
.long 0x45B
L_80891:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_80883
.p2align 0x4
L_407348:
L_80892:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_80886
.p2align 0x4
.long 0x1
rev_108:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_407351
L_80851:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_80852:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_407350
.p2align 0x4,,0x7
L_80853:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_407349
L_80854:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_80852
.p2align 0x4
L_407349:
L_80856:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_185+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_407350:
L_80860:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_80861+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_80861
.p2align 0x4
.long 0x45B
L_80861:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_80853
.p2align 0x4
L_407351:
L_80862:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_80856
.p2align 0x4
.long 0x1
rev_107:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_407354
L_80821:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_80822:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_407353
.p2align 0x4,,0x7
L_80823:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_407352
L_80824:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_80822
.p2align 0x4
L_407352:
L_80826:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_184+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_407353:
L_80830:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_80831+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_80831
.p2align 0x4
.long 0x45B
L_80831:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_80823
.p2align 0x4
L_407354:
L_80832:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_80826
.p2align 0x4
.long 0x1
rev_106:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_407357
L_80791:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_80792:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_407356
.p2align 0x4,,0x7
L_80793:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_407355
L_80794:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_80792
.p2align 0x4
L_407355:
L_80796:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_183+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_407356:
L_80800:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_80801+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_80801
.p2align 0x4
.long 0x45B
L_80801:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_80793
.p2align 0x4
L_407357:
L_80802:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_80796
.p2align 0x4
.long 0x1
rev_105:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_407360
L_80761:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_80762:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_407359
.p2align 0x4,,0x7
L_80763:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_407358
L_80764:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_80762
.p2align 0x4
L_407358:
L_80766:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_182+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_407359:
L_80770:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_80771+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_80771
.p2align 0x4
.long 0x45B
L_80771:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_80763
.p2align 0x4
L_407360:
L_80772:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_80766
.p2align 0x4
.long 0x1
rev_104:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_407363
L_80731:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_80732:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_407362
.p2align 0x4,,0x7
L_80733:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_407361
L_80734:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_80732
.p2align 0x4
L_407361:
L_80736:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_181+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_407362:
L_80740:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_80741+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_80741
.p2align 0x4
.long 0x45B
L_80741:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_80733
.p2align 0x4
L_407363:
L_80742:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_80736
.p2align 0x4
.long 0x1
rev_103:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_407366
L_80701:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_80702:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_407365
.p2align 0x4,,0x7
L_80703:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_407364
L_80704:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_80702
.p2align 0x4
L_407364:
L_80706:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_180+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_407365:
L_80710:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_80711+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_80711
.p2align 0x4
.long 0x45B
L_80711:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_80703
.p2align 0x4
L_407366:
L_80712:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_80706
.p2align 0x4
.long 0x1
rev_102:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_407369
L_80671:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_80672:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_407368
.p2align 0x4,,0x7
L_80673:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_407367
L_80674:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_80672
.p2align 0x4
L_407367:
L_80676:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_179+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_407368:
L_80680:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_80681+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_80681
.p2align 0x4
.long 0x45B
L_80681:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_80673
.p2align 0x4
L_407369:
L_80682:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_80676
.p2align 0x4
.long 0x1
rev_101:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_407372
L_80641:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_80642:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_407371
.p2align 0x4,,0x7
L_80643:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_407370
L_80644:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_80642
.p2align 0x4
L_407370:
L_80646:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_178+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_407371:
L_80650:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_80651+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_80651
.p2align 0x4
.long 0x45B
L_80651:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_80643
.p2align 0x4
L_407372:
L_80652:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_80646
.p2align 0x4
.long 0x1
rev_100:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_407375
L_80611:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_80612:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_407374
.p2align 0x4,,0x7
L_80613:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_407373
L_80614:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_80612
.p2align 0x4
L_407373:
L_80616:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_177+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_407374:
L_80620:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_80621+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_80621
.p2align 0x4
.long 0x45B
L_80621:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_80613
.p2align 0x4
L_407375:
L_80622:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_80616
.p2align 0x4
.long 0x1
rev_99:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_407378
L_80581:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_80582:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_407377
.p2align 0x4,,0x7
L_80583:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_407376
L_80584:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_80582
.p2align 0x4
L_407376:
L_80586:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_176+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_407377:
L_80590:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_80591+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_80591
.p2align 0x4
.long 0x45B
L_80591:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_80583
.p2align 0x4
L_407378:
L_80592:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_80586
.p2align 0x4
.long 0x1
rev_98:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_407381
L_80551:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_80552:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_407380
.p2align 0x4,,0x7
L_80553:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_407379
L_80554:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_80552
.p2align 0x4
L_407379:
L_80556:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_175+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_407380:
L_80560:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_80561+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_80561
.p2align 0x4
.long 0x45B
L_80561:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_80553
.p2align 0x4
L_407381:
L_80562:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_80556
.p2align 0x4
.long 0x1
rev_97:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_407384
L_80521:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_80522:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_407383
.p2align 0x4,,0x7
L_80523:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_407382
L_80524:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_80522
.p2align 0x4
L_407382:
L_80526:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_174+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_407383:
L_80530:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_80531+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_80531
.p2align 0x4
.long 0x45B
L_80531:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_80523
.p2align 0x4
L_407384:
L_80532:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_80526
.p2align 0x4
.long 0x1
bug_173:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_80497
L_80498:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_80499+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_80499
.p2align 0x4
.long 0x451
L_80499:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_80497:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
bug_188:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_80947
L_80948:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_80949+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_80949
.p2align 0x4
.long 0x451
L_80949:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_80947:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
bug_187:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_80917
L_80918:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_80919+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_80919
.p2align 0x4
.long 0x451
L_80919:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_80917:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
bug_186:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_80887
L_80888:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_80889+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_80889
.p2align 0x4
.long 0x451
L_80889:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_80887:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
bug_185:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_80857
L_80858:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_80859+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_80859
.p2align 0x4
.long 0x451
L_80859:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_80857:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
bug_184:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_80827
L_80828:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_80829+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_80829
.p2align 0x4
.long 0x451
L_80829:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_80827:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
bug_183:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_80797
L_80798:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_80799+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_80799
.p2align 0x4
.long 0x451
L_80799:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_80797:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
bug_182:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_80767
L_80768:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_80769+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_80769
.p2align 0x4
.long 0x451
L_80769:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_80767:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
bug_181:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_80737
L_80738:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_80739+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_80739
.p2align 0x4
.long 0x451
L_80739:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_80737:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
bug_180:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_80707
L_80708:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_80709+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_80709
.p2align 0x4
.long 0x451
L_80709:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_80707:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
bug_179:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_80677
L_80678:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_80679+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_80679
.p2align 0x4
.long 0x451
L_80679:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_80677:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
bug_178:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_80647
L_80648:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_80649+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_80649
.p2align 0x4
.long 0x451
L_80649:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_80647:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
bug_177:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_80617
L_80618:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_80619+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_80619
.p2align 0x4
.long 0x451
L_80619:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_80617:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
bug_176:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_80587
L_80588:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_80589+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_80589
.p2align 0x4
.long 0x451
L_80589:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_80587:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
bug_175:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_80557
L_80558:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_80559+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_80559
.p2align 0x4
.long 0x451
L_80559:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_80557:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
bug_174:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_80527
L_80528:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_80529+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_80529
.p2align 0x4
.long 0x451
L_80529:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_80527:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl deleteLabelMeaning_0
.hidden deleteLabelMeaning_0
deleteLabelMeaning_0:
loopS_10:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_80961
L_81014:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_81015+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_81015
.p2align 0x4
.long 0x45F
L_81015:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_80961:
	movq 0x0(%rbp),%r15
	movl 0x0(%r15),%ecx
	movq 0x10(%r15),%r14
	movq %r14,0x10(%rbp)
.p2align 0x4,,0x7
loop_939:
	movq 0x8(%rbp),%r15
	movq 0x38(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x20(%r15),%r14
	movslq %ecx,%r15
	movq %r15,0x30(%rbp)
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_80963
L_80964:
	movl 0x0(%r14,%r15,4),%r13d
	decl %r13d
	jo L_407411
L_80966:
	movl %r13d,0x0(%r14,%r15,4)
	testl %r13d,%r13d
	jnz L_407410
L_80968:
	movq 0x10(%rbp),%r15
	cmpq $0x1,%r15
	je L_407409
	cmpq $0x2,%r15
	je L_407406
L_80969:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xF38,%r14
	je L_407405
	cmpq $0xF39,%r14
	je L_407404
	cmpq $0xF3A,%r14
	je L_407401
L_80970:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_407401:
L_80973:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_80974
L_80986:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_80987+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_80987
.p2align 0x4
.long 0x63A
L_80987:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_80974:
	movq 0x10(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x8(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1208,%r15
	je L_407402
L_80985:
	movq 0x0(%r14),%r15
	movq %r15,0x40(%rbp)
	movq $0x3607,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x38(%rbp)
	movb $0x2,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_80976+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldP_1
.p2align 0x4
L_407402:
L_80975:
	movq 0x8(%r14),%r15
	movq %r15,0x40(%rbp)
	movq $0x363D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x38(%rbp)
	movb $0x4,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_80976+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldP_0
.p2align 0x4
L_407404:
L_80972:
	movq 0x10(%rbp),%r15
	movq 0x10(%r15),%r14
	movl 0x0(%r14),%ecx
	movq 0x10(%r14),%r15
	movq %r15,0x10(%rbp)
	jmp loop_939
.p2align 0x4
L_407405:
L_80971:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_407406:
L_80989:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_80990
L_81012:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r14d
	movl %r14d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r14
	movq %r14,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_81013+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_81013
.p2align 0x4
.long 0x10F2
L_81013:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_80990:
	movq 0x30(%rbp),%r15
	movq 0x28(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_407407
L_80992:
	movq 0x0(%r14,%r15,8),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x10(%rbp)
	movq $0x3679,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x38(%rbp)
	movq $0xD,0x30(%rbp)
	movq $0xE,0x40(%rbp)
	movq %r11,0x48(%rbp)
	addq $0x30,%rbp
	leaq (L_80993+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachFuncLabelVar_0
.p2align 0x4
L_407407:
L_80963:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_407409:
L_80988:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_407410:
L_80967:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_407411:
L_80965:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x5FF
L_80976:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_407414
L_80977:
	movq 0x20(%rbp),%r14
	movq 0x8(%r14),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x10(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x28(%rbp)
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_80978+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_33
.p2align 0x4
L_407414:
L_80984:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x8A9
L_80993:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_80994:
	movq 0x10(%rbp),%r15
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_80995
L_80996:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xF35,%r14
	jne L_407419
L_80997:
	movq 0x10(%r15),%r14
	cmpq $0x1,%r14
	je L_407418
	cmpq $0x2,%r14
	je L_407417
L_80998:
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_407416
	cmpq $0x2,%r15
	je L_407415
L_80999:
	movq %r15,0x38(%rbp)
	movq 0x20(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_81000+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_33
.p2align 0x4
L_407415:
L_81009:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_407416:
L_81008:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_407417:
L_81011:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_407418:
L_81010:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_407419:
L_80995:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4E5
L_80978:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movl 0x20(%rbp),%r15d
	movl %r15d,0x18(%rbp)
	movslq %r15d,%r14
	movq 0x10(%rbp),%r15
	cmpq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	jnb L_80963
L_80980:
	movq 0x0(%r15,%r14,8),%r13
L_80981:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_407421
L_80983:
	movl 0x0(%r13),%ecx
	movq 0x8(%r13),%r15
	movq %r15,0x10(%rbp)
	jmp loop_939
.p2align 0x4
L_407421:
L_80982:
	movq (globalObjptr+0x2230)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x71E
L_81000:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movl 0x38(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	movslq %r15d,%r14
	movq 0x28(%rbp),%r15
	cmpq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	jnb L_80963
L_81002:
	movq 0x0(%r15,%r14,8),%r13
L_81003:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_80982
L_81004:
	movslq 0x0(%r13),%r15
	movq 0x18(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_80963
L_81006:
	movl 0x0(%r14,%r15,4),%r13d
	decl %r13d
	jo L_80965
L_81007:
	movl %r13d,0x0(%r14,%r15,4)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl foreachFuncLabelVar_0
.hidden foreachFuncLabelVar_0
foreachFuncLabelVar_0:
L_81016:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_81552
L_81017:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_407501
L_81018:
	movq 0x18(%rbp),%r13
	cmpq $0x1,%r13
	je L_407500
L_81019:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xF31,%r15
	je L_407499
	cmpq $0xF32,%r15
	je L_407498
	cmpq $0xF33,%r15
	je L_407497
	cmpq $0xF34,%r15
	je L_407479
	cmpq $0xF35,%r15
	je L_407428
	cmpq $0xF36,%r15
	je L_407427
L_81020:
	movq 0x0(%rbp),%r14
	movq 0x10(%r13),%r11
	movq %r11,0x0(%rbp)
	movq 0x0(%r13),%r15
L_81021:
	movq %r15,0x20(%rbp)
	movq $0x339B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x18(%rbp)
	addq $0x10,%r12
	addq $0x18,%rbp
	leaq (L_81022+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_5
.p2align 0x4
L_407427:
L_81550:
	movq 0x8(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x8(%rbp)
	movq 0x0(%rbp),%r14
	movq 0x18(%r13),%r11
	movq %r11,0x0(%rbp)
	movq 0x0(%r13),%r15
L_81274:
	movq %r15,0x28(%rbp)
	movq $0x339B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x20(%rbp)
	addq $0x10,%r12
	addq $0x20,%rbp
	leaq (L_81275+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_5
.p2align 0x4
L_407428:
L_81549:
	movq 0x10(%r13),%r15
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r11
	movq 0x8(%rbp),%r13
	movq %r13,0x18(%rbp)
	movq %r11,0x8(%rbp)
	movq 0x10(%rbp),%r13
	movq 0x0(%rbp),%r11
	movq %r11,0x10(%rbp)
	movq %r15,0x0(%rbp)
	movq %r13,%r15
L_81121:
	movq %r15,%rax
	subq $0x1,%rax
	cmpq $0x11,%rax
	ja L_407429
	leaq jumpTable_202(%rip),%rbx
	jmp *(%rbx,%rax,8)
.data
.p2align 0x4
jumpTable_202:
.quad L_81125,L_81125,L_81125,L_81122,L_81125,L_81125,L_81125,L_81122,L_81125,L_81125,L_81125,L_81122,L_81125,L_81125,L_81125,L_81122,L_81125,L_407430
.text
.p2align 0x4
L_407429:
L_81122:
	movq %r14,0x28(%rbp)
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_81123+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp visit_11
.p2align 0x4
L_407430:
L_81125:
	movq 0x0(%rbp),%r15
	cmpq $0x1,%r15
	je L_81138
	cmpq $0x2,%r15
	je L_81138
L_81126:
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_81131
	cmpq $0x2,%r15
	je L_81131
	cmpq $0x3,%r15
	je L_407443
L_81127:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%rax
	shrq $0x1,%rax
	subq $0x1B35,%rax
	cmpq $0xA,%rax
	ja L_407431
	leaq jumpTable_203(%rip),%rbx
	jmp *(%rbx,%rax,8)
.data
.p2align 0x4
jumpTable_203:
.quad L_407442,L_407441,L_407440,L_407439,L_407438,L_407437,L_407436,L_407435,L_407434,L_407433,L_407432
.text
.p2align 0x4
L_407431:
L_81128:
	movq %r14,0x30(%rbp)
	movq 0x18(%rbp),%r15
	movq 0x30(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x68(%rbp)
	addq $0x30,%rbp
	leaq (L_81129+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp visit_1
.p2align 0x4
L_407432:
L_81251:
	movq %r14,0x30(%rbp)
	movq 0x18(%rbp),%r15
	movq 0x20(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x58(%rbp)
	addq $0x30,%rbp
	leaq (L_81129+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp visit_2
.p2align 0x4
L_407433:
L_81250:
	movq %r14,0x30(%rbp)
	movq 0x18(%rbp),%r15
	movq 0x20(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x58(%rbp)
	addq $0x30,%rbp
	leaq (L_81129+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp visit_3
.p2align 0x4
L_407434:
L_81249:
	movq %r14,0x30(%rbp)
	movq 0x18(%rbp),%r15
	movq 0x20(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x58(%rbp)
	addq $0x30,%rbp
	leaq (L_81129+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp visit_4
.p2align 0x4
L_407435:
L_81240:
	movq %r14,0x40(%rbp)
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x30(%r14),%r15
	movq 0x8(%r15),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x30(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_81241+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_33
.p2align 0x4
L_407436:
L_81225:
	movq %r14,0x50(%rbp)
	movq 0x18(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq %r14,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_81226+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_33
.p2align 0x4
L_407437:
L_81214:
	movq %r14,0x50(%rbp)
	movq 0x18(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq %r14,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_81215+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_33
.p2align 0x4
L_407438:
L_81213:
	movq %r14,0x38(%rbp)
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	addq $0x30,%rbp
	leaq (L_81129+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp goto_1
.p2align 0x4
L_407439:
L_81202:
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x28(%rbp)
	movq 0x8(%r15),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x58(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x30(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x38(%rbp)
	movq 0x10(%r14),%r15
	movq %r15,0x40(%rbp)
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_81203+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_4
.p2align 0x4
L_407440:
L_81201:
	movq %r14,0x30(%rbp)
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	addq $0x30,%rbp
	leaq (L_81129+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1336
.p2align 0x4
L_407441:
L_81200:
	movq %r14,0x30(%rbp)
	movq 0x18(%rbp),%r15
	movq 0x20(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x58(%rbp)
	addq $0x30,%rbp
	leaq (L_81129+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp visit_5
.p2align 0x4
L_407442:
L_81199:
	movq %r14,0x30(%rbp)
	movq 0x18(%rbp),%r15
	movq 0x20(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x58(%rbp)
	addq $0x30,%rbp
	leaq (L_81129+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp visit_6
.p2align 0x4
L_407443:
L_81131:
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je L_81138
	cmpq $0x2,%r15
	je L_81138
L_81132:
L_81133:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_81138
	cmpq $0x2,%r14
	je L_81138
	cmpq $0x3,%r14
	je L_407456
L_81134:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%rax
	shrq $0x1,%rax
	subq $0x1B35,%rax
	cmpq $0xA,%rax
	ja L_407444
	leaq jumpTable_204(%rip),%rbx
	jmp *(%rbx,%rax,8)
.data
.p2align 0x4
jumpTable_204:
.quad L_407455,L_407454,L_407453,L_407452,L_407451,L_407450,L_407449,L_407448,L_407447,L_407446,L_407445
.text
.p2align 0x4
L_407444:
L_81135:
	movq %r15,0x20(%rbp)
	movq 0x18(%rbp),%r15
	movq 0x30(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x58(%rbp)
	addq $0x20,%rbp
	leaq (L_81136+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp visit_1
.p2align 0x4
L_407445:
L_81191:
	movq %r15,0x20(%rbp)
	movq 0x18(%rbp),%r15
	movq 0x20(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	addq $0x20,%rbp
	leaq (L_81136+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp visit_2
.p2align 0x4
L_407446:
L_81190:
	movq %r15,0x20(%rbp)
	movq 0x18(%rbp),%r15
	movq 0x20(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	addq $0x20,%rbp
	leaq (L_81136+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp visit_3
.p2align 0x4
L_407447:
L_81189:
	movq %r15,0x20(%rbp)
	movq 0x18(%rbp),%r15
	movq 0x20(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	addq $0x20,%rbp
	leaq (L_81136+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp visit_4
.p2align 0x4
L_407448:
L_81179:
	movq %r15,0x38(%rbp)
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x30(%r14),%r15
	movq 0x8(%r15),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x28(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_81180+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_33
.p2align 0x4
L_407449:
L_81164:
	movq %r15,0x48(%rbp)
	movq 0x18(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq %r14,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_81165+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_33
.p2align 0x4
L_407450:
L_81153:
	movq %r15,0x48(%rbp)
	movq 0x18(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq %r14,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_81154+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_33
.p2align 0x4
L_407451:
L_81152:
	movq %r15,0x28(%rbp)
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	addq $0x20,%rbp
	leaq (L_81136+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp goto_1
.p2align 0x4
L_407452:
L_81144:
	movq 0x18(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x20(%rbp)
	movq 0x8(%r14),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x50(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x28(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x30(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x38(%rbp)
	movq %r14,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_81145+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_4
.p2align 0x4
L_407453:
L_81143:
	movq %r15,0x20(%rbp)
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	addq $0x20,%rbp
	leaq (L_81136+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1336
.p2align 0x4
L_407454:
L_81142:
	movq %r15,0x20(%rbp)
	movq 0x18(%rbp),%r15
	movq 0x20(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	addq $0x20,%rbp
	leaq (L_81136+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp visit_5
.p2align 0x4
L_407455:
L_81141:
	movq %r15,0x20(%rbp)
	movq 0x18(%rbp),%r15
	movq 0x20(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	addq $0x20,%rbp
	leaq (L_81136+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp visit_6
.p2align 0x4
L_407456:
L_81138:
	movq $0x339B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	jmp foreachi_5
.p2align 0x4
L_407479:
L_81548:
	movq 0x10(%r13),%r14
	movq 0x8(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x8(%rbp)
	movq 0x0(%rbp),%r15
	movq 0x8(%r13),%r11
	movq %r11,0x0(%rbp)
L_81083:
	movq %r15,%rax
	subq $0x1,%rax
	cmpq $0x10,%rax
	ja L_407480
	leaq jumpTable_205(%rip),%rbx
	jmp *(%rbx,%rax,8)
.data
.p2align 0x4
jumpTable_205:
.quad L_81088,L_81088,L_81088,L_81084,L_81088,L_81088,L_81088,L_81084,L_81088,L_81088,L_81088,L_81084,L_81088,L_81088,L_81088,L_81084,L_407482
.text
.p2align 0x4
L_407480:
L_81084:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0x19EB,%r13
	je L_407481
L_81446:
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_81086+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1323
.p2align 0x4
L_407481:
L_81085:
	movq %r14,0x20(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	addq $0x20,%rbp
	leaq (L_81086+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp use_0
.p2align 0x4
L_407482:
L_81088:
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1208,%r14
	je L_407483
L_81443:
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq $0x360D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x28(%rbp)
	movb $0x5,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_81090+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldP_1
.p2align 0x4
L_407483:
L_81089:
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq $0x3643,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x28(%rbp)
	movb $0x7,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_81090+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldP_0
.p2align 0x4
L_407497:
L_81547:
	movq 0x0(%rbp),%r14
	movq 0x8(%r13),%r11
	movq %r11,0x0(%rbp)
	movq 0x0(%r13),%r15
L_81053:
	movq %r15,0x20(%rbp)
	movq $0x339B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x18(%rbp)
	addq $0x10,%r12
	addq $0x18,%rbp
	leaq (L_81054+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_5
.p2align 0x4
L_407498:
L_81546:
	movq 0x0(%r13),%r15
	movq 0x0(%rbp),%r14
L_81051:
	movq %r15,0x8(%rbp)
	movq $0x339B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	addq $0x10,%r12
	jmp foreachi_5
.p2align 0x4
L_407499:
L_81545:
	movq 0x0(%r13),%r15
	movq 0x0(%rbp),%r14
L_81049:
	movq %r15,0x8(%rbp)
	movq $0x339B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	addq $0x10,%r12
	jmp foreachi_5
.p2align 0x4
L_407500:
L_81312:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_407501:
L_81552:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_81553+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_81553
.p2align 0x4
.long 0x4AE
L_81553:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	jmp L_81018
.p2align 0x4
.long 0x5AF
L_81022:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x8(%rbp),%r15
	cmpq $0x1,%r15
	je L_407517
	cmpq $0x2,%r15
	je L_407516
	cmpq $0x3,%r15
	je L_407515
L_81023:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%rax
	shrq $0x1,%rax
	subq $0x1B35,%rax
	cmpq $0xA,%rax
	ja L_407503
	leaq jumpTable_206(%rip),%rbx
	jmp *(%rbx,%rax,8)
.data
.p2align 0x4
jumpTable_206:
.quad L_407514,L_407513,L_407512,L_407511,L_407510,L_407509,L_407508,L_407507,L_407506,L_407505,L_407504
.text
.p2align 0x4
L_407503:
L_81024:
	movq 0x8(%rbp),%r15
	movq 0x28(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq 0x30(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r14,0x38(%rbp)
	jmp visit_1
.p2align 0x4
L_407504:
L_81541:
	movq 0x8(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq 0x20(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r14,0x28(%rbp)
	jmp visit_2
.p2align 0x4
L_407505:
L_81540:
	movq 0x8(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq 0x20(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r14,0x28(%rbp)
	jmp visit_3
.p2align 0x4
L_407506:
L_81539:
	movq 0x8(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq 0x20(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r14,0x28(%rbp)
	jmp visit_4
.p2align 0x4
L_407507:
L_81530:
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x30(%r14),%r15
	movq 0x8(%r15),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x18(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x30(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_81531+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_33
.p2align 0x4
L_407508:
L_81509:
	movq 0x8(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq %r14,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_81510+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_33
.p2align 0x4
L_407509:
L_81037:
	movq 0x8(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq %r14,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_81038+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_33
.p2align 0x4
L_407510:
L_81036:
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r13,0x10(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq %r14,0x0(%rbp)
	jmp goto_1
.p2align 0x4
L_407511:
L_81028:
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x8(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x40(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x20(%rbp)
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x28(%rbp)
	movq %r14,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_81029+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_4
.p2align 0x4
L_407512:
L_81027:
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r14,0x10(%rbp)
	jmp x_1336
.p2align 0x4
L_407513:
L_81026:
	movq 0x8(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq 0x20(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r14,0x28(%rbp)
	jmp visit_5
.p2align 0x4
L_407514:
L_81025:
	movq 0x8(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq 0x20(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r14,0x28(%rbp)
	jmp visit_6
.p2align 0x4
L_407515:
L_81544:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_407516:
L_81543:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_407517:
L_81542:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x51E
L_81275:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x10(%rbp),%r15
	cmpq $0x1,%r15
	je L_81279
	cmpq $0x2,%r15
	je L_81279
	cmpq $0x3,%r15
	je L_407530
L_81276:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%rax
	shrq $0x1,%rax
	subq $0x1B35,%rax
	cmpq $0xA,%rax
	ja L_407518
	leaq jumpTable_207(%rip),%rbx
	jmp *(%rbx,%rax,8)
.data
.p2align 0x4
jumpTable_207:
.quad L_407529,L_407528,L_407527,L_407526,L_407525,L_407524,L_407523,L_407522,L_407521,L_407520,L_407519
.text
.p2align 0x4
L_407518:
L_81277:
	movq 0x10(%rbp),%r15
	movq 0x30(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_81278+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp visit_1
.p2align 0x4
L_407519:
L_81398:
	movq 0x10(%rbp),%r15
	movq 0x20(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_81278+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp visit_2
.p2align 0x4
L_407520:
L_81397:
	movq 0x10(%rbp),%r15
	movq 0x20(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_81278+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp visit_3
.p2align 0x4
L_407521:
L_81396:
	movq 0x10(%rbp),%r15
	movq 0x20(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_81278+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp visit_4
.p2align 0x4
L_407522:
L_81387:
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x30(%r14),%r15
	movq 0x8(%r15),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x20(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x38(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_81388+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_33
.p2align 0x4
L_407523:
L_81375:
	movq 0x10(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq %r14,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_81376+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_33
.p2align 0x4
L_407524:
L_81364:
	movq 0x10(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq %r14,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_81365+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_33
.p2align 0x4
L_407525:
L_81363:
	movq 0x10(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_81278+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp goto_1
.p2align 0x4
L_407526:
L_81355:
	movq 0x10(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x10(%r14),%r15
	movq %r15,0x50(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x30(%rbp)
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x38(%rbp)
	movq %r14,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_81356+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_4
.p2align 0x4
L_407527:
L_81354:
	movq 0x10(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_81278+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1336
.p2align 0x4
L_407528:
L_81353:
	movq 0x10(%rbp),%r15
	movq 0x20(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_81278+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp visit_5
.p2align 0x4
L_407529:
L_81352:
	movq 0x10(%rbp),%r15
	movq 0x20(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_81278+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp visit_6
.p2align 0x4
L_407530:
L_81279:
	movq 0x10(%rbp),%r15
	cmpq $0x1,%r15
	je L_407545
	cmpq $0x2,%r15
	je L_407544
	cmpq $0x3,%r15
	je L_407543
L_81280:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%rax
	shrq $0x1,%rax
	subq $0x1B35,%rax
	cmpq $0xA,%rax
	ja L_407531
	leaq jumpTable_208(%rip),%rbx
	jmp *(%rbx,%rax,8)
.data
.p2align 0x4
jumpTable_208:
.quad L_407542,L_407541,L_407540,L_407539,L_407538,L_407537,L_407536,L_407535,L_407534,L_407533,L_407532
.text
.p2align 0x4
L_407531:
L_81281:
	movq 0x10(%rbp),%r15
	movq 0x30(%r15),%r14
	movq %r14,0x8(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq 0x28(%r15),%r15
	movq %r15,0x10(%rbp)
	movq %r14,0x38(%rbp)
	jmp visit_1
.p2align 0x4
L_407532:
L_81348:
	movq 0x10(%rbp),%r15
	movq 0x20(%r15),%r14
	movq %r14,0x8(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq 0x18(%r15),%r15
	movq %r15,0x10(%rbp)
	movq %r14,0x28(%rbp)
	jmp visit_2
.p2align 0x4
L_407533:
L_81347:
	movq 0x10(%rbp),%r15
	movq 0x20(%r15),%r14
	movq %r14,0x8(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq 0x18(%r15),%r15
	movq %r15,0x10(%rbp)
	movq %r14,0x28(%rbp)
	jmp visit_3
.p2align 0x4
L_407534:
L_81346:
	movq 0x10(%rbp),%r15
	movq 0x20(%r15),%r14
	movq %r14,0x8(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq 0x18(%r15),%r15
	movq %r15,0x10(%rbp)
	movq %r14,0x28(%rbp)
	jmp visit_4
.p2align 0x4
L_407535:
L_81337:
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x8(%rbp)
	movq 0x30(%r14),%r15
	movq 0x8(%r15),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x18(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x30(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_81338+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_33
.p2align 0x4
L_407536:
L_81316:
	movq 0x10(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x8(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq %r14,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_81317+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_33
.p2align 0x4
L_407537:
L_81295:
	movq 0x10(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x8(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq %r14,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_81296+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_33
.p2align 0x4
L_407538:
L_81294:
	movq 0x10(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r15
	movq %r15,0x10(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq %r14,0x0(%rbp)
	jmp goto_1
.p2align 0x4
L_407539:
L_81285:
	movq 0x10(%rbp),%r14
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq %r13,0x8(%rbp)
L_81286:
	movq 0x10(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x20(%rbp)
	movq %r14,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_81287+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_4
.p2align 0x4
L_407540:
L_81284:
	movq 0x10(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x8(%rbp)
	movq 0x0(%r15),%r15
	movq %r15,0x10(%rbp)
	jmp x_1336
.p2align 0x4
L_407541:
L_81283:
	movq 0x10(%rbp),%r15
	movq 0x20(%r15),%r14
	movq %r14,0x8(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq 0x18(%r15),%r15
	movq %r15,0x10(%rbp)
	movq %r14,0x28(%rbp)
	jmp visit_5
.p2align 0x4
L_407542:
L_81282:
	movq 0x10(%rbp),%r15
	movq 0x20(%r15),%r14
	movq %r14,0x8(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq 0x18(%r15),%r15
	movq %r15,0x10(%rbp)
	movq %r14,0x28(%rbp)
	jmp visit_6
.p2align 0x4
L_407543:
L_81351:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_407544:
L_81350:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_407545:
L_81349:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x65B
L_81123:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_81125
L_81257:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_81258+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_81258
.p2align 0x4
.long 0x4AE
L_81258:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	jmp L_81125
.p2align 0x4
.long 0x4A5
L_81129:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_81131
L_81197:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_81198+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_81198
.p2align 0x4
.long 0x4E9
L_81198:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	jmp L_81131
.p2align 0x4
.long 0x4EC
L_81241:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movl 0x40(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_81242
L_81247:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_81248+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_81248
.p2align 0x4
.long 0x73D
L_81248:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_81242:
	movslq 0x38(%rbp),%r15
	movq 0x30(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_407551
L_81244:
	movq 0x0(%r14,%r15,8),%r13
L_81245:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_407550
L_81246:
	movq 0x10(%r13),%r15
	movl 0x0(%r13),%r14d
	movq 0x8(%r13),%r11
	movq $0x8E5,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movl %r14d,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r11,0x10(%r13)
	addq $0x20,%r12
	movl $0x0,0x4(%r13)
	movq %r13,0x30(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_81129+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp deleteLabelMeaning_0
.p2align 0x4
L_407550:
L_81185:
	movq (globalObjptr+0x2230)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_407551:
L_81041:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x67A
L_81226:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movl 0x50(%rbp),%r15d
	movl %r15d,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_81227
L_81238:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_81239+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_81239
.p2align 0x4
.long 0xA9D
L_81239:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_81227:
	movslq 0x48(%rbp),%r15
	movq 0x38(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_81041
L_81229:
	movl 0x0(%r14,%r15,4),%r13d
	testl %r13d,%r13d
	jnz L_81131
L_81230:
	movl $0x1,0x0(%r14,%r15,4)
	movq 0x30(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_81041
L_81232:
	movq 0x0(%r14,%r15,8),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x48(%rbp)
	movq $0x3,0x58(%rbp)
	movq $0x3,0x60(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq %r11,0x70(%rbp)
	addq $0x58,%rbp
	leaq (L_81233+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachFuncLabelVar_0
.p2align 0x4
.long 0x67A
L_81215:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movl 0x50(%rbp),%r15d
	movl %r15d,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_81216
L_81223:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_81224+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_81224
.p2align 0x4
.long 0xA9D
L_81224:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_81216:
	movslq 0x48(%rbp),%r15
	movq 0x38(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_81041
L_81218:
	movl 0x0(%r14,%r15,4),%r13d
	testl %r13d,%r13d
	jnz L_81131
L_81219:
	movl $0x1,0x0(%r14,%r15,4)
	movq 0x30(%rbp),%r13
	cmpq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	jnb L_81041
L_81221:
	movq 0x0(%r13,%r15,8),%r11
	movq 0x0(%r11),%r15
	movq %r15,0x48(%rbp)
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r10
	movq $0x1E99,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r11,0x0(%r9)
	movq %r10,0x8(%r9)
	addq $0x18,%r12
	movq %r15,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r9,0x0(%r15)
	movq $0x3675,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x28,%r12
	movq 0x40(%rbp),%r10
	movq %r10,0x0(%r11)
	movq %r14,0x8(%r11)
	movq %r13,0x10(%r11)
	movq %r15,0x18(%r11)
	movq %r11,0x38(%rbp)
	movq $0xA,0x30(%rbp)
	movq $0xD,0x40(%rbp)
	addq $0x30,%rbp
	leaq (L_81129+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachFuncLabelVar_0
.p2align 0x4
.long 0x67A
L_81203:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_81204
L_81211:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_81212+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_81212
.p2align 0x4
.long 0x8A7
L_81212:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_81204:
	movq 0x48(%rbp),%r15
	cmpq $0x1,%r15
	je L_407563
L_81205:
L_81206:
	movq 0x28(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x13,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq $0x1,0x0(%r11)
	movq $0x114D,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x20,%r12
	movq %r14,0x10(%r10)
	movq 0x0(%r13),%r15
	movq $0x261B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r10,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r14,0x0(%r13)
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je L_81138
	cmpq $0x2,%r15
	je L_81138
L_81207:
	jmp L_81133
.p2align 0x4
L_407563:
L_81210:
	movq $0x45,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x13,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0x47,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x1B7F,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r13,0x8(%r10)
	addq $0x18,%r12
	movq %r11,0x0(%r10)
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r13,1)
	movq %r10,0x0(%r14)
	movq $0x196B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r11,0x8(%r14)
	addq $0x18,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x40(%rbp),%r13
	movq 0x0(%r13),%r10
	movq $0x28DF,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r14,0x0(%r8)
	movq %r10,0x8(%r8)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r9,%r14,1)
	movq %r8,0x0(%r13)
	xchgq %r11,%r15
	jmp L_81206
.p2align 0x4
.long 0x4E5
L_81136:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_81138
L_81139:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_81140+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_81140
.p2align 0x4
.long 0x4E8
L_81140:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_81138
.p2align 0x4
.long 0x639
L_81180:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movl 0x38(%rbp),%r15d
	movl %r15d,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_81181
L_81187:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_81188+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_81188
.p2align 0x4
.long 0x518
L_81188:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_81181:
	movslq 0x18(%rbp),%r15
	movq 0x28(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_81041
L_81183:
	movq 0x0(%r14,%r15,8),%r13
L_81184:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_81185
L_81186:
	movq 0x10(%r13),%r15
	movl 0x0(%r13),%r14d
	movq 0x8(%r13),%r11
	movq $0x8E5,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movl %r14d,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r11,0x10(%r13)
	addq $0x20,%r12
	movl $0x0,0x4(%r13)
	movq 0x20(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq %r13,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_81136+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp deleteLabelMeaning_0
.p2align 0x4
.long 0xB1D
L_81165:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movl 0x48(%rbp),%r15d
	movl %r15d,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_81166
L_81177:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_81178+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_81178
.p2align 0x4
.long 0xE91
L_81178:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_81166:
	movslq 0x18(%rbp),%r15
	movq 0x30(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_81041
L_81168:
	movl 0x0(%r14,%r15,4),%r13d
	testl %r13d,%r13d
	jnz L_81138
L_81169:
	movl $0x1,0x0(%r14,%r15,4)
	movq 0x28(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_81041
L_81171:
	movq 0x0(%r14,%r15,8),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x18(%rbp)
	movq $0x3,0x48(%rbp)
	movq $0x3,0x50(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq %r11,0x60(%rbp)
	addq $0x48,%rbp
	leaq (L_81172+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachFuncLabelVar_0
.p2align 0x4
.long 0xB1D
L_81154:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movl 0x48(%rbp),%r15d
	movl %r15d,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_81155
L_81162:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_81163+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_81163
.p2align 0x4
.long 0xE91
L_81163:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_81155:
	movslq 0x18(%rbp),%r15
	movq 0x30(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_81041
L_81157:
	movl 0x0(%r14,%r15,4),%r13d
	testl %r13d,%r13d
	jnz L_81138
L_81158:
	movl $0x1,0x0(%r14,%r15,4)
	movq 0x28(%rbp),%r13
	cmpq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	jnb L_81041
L_81160:
	movq 0x0(%r13,%r15,8),%r11
	movq 0x0(%r11),%r15
	movq 0x20(%rbp),%r10
	movq 0x0(%r10),%r9
	movq $0x1E99,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r11,0x0(%r8)
	movq %r9,0x8(%r8)
	addq $0x18,%r12
	movq %r10,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r11,1)
	movq %r8,0x0(%r10)
	movq $0x3675,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x28,%r12
	movq 0x38(%rbp),%r9
	movq %r9,0x0(%r11)
	movq %r15,0x38(%rbp)
	movq %r14,0x8(%r11)
	movq %r13,0x10(%r11)
	movq %r10,0x18(%r11)
	movq %r11,0x28(%rbp)
	movq $0xA,0x20(%rbp)
	movq $0xD,0x30(%rbp)
	addq $0x20,%rbp
	leaq (L_81136+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachFuncLabelVar_0
.p2align 0x4
.long 0xB1D
L_81145:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_81146
L_81150:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_81151+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_81151
.p2align 0x4
.long 0x4EB
L_81151:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_81146:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_407577
L_81147:
L_81148:
	movq 0x20(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x13,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq $0x1,0x0(%r11)
	movq $0x114D,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x20,%r12
	movq %r14,0x10(%r10)
	movq 0x0(%r13),%r15
	movq $0x261B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r10,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r14,0x0(%r13)
	jmp L_81138
.p2align 0x4
L_407577:
L_81149:
	movq $0x45,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x13,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0x47,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x1B7F,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r13,0x8(%r10)
	addq $0x18,%r12
	movq %r11,0x0(%r10)
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r13,1)
	movq %r10,0x0(%r14)
	movq $0x196B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r11,0x8(%r14)
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x38(%rbp),%r13
	movq 0x0(%r13),%r10
	movq $0x28DF,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r14,0x0(%r8)
	movq %r10,0x8(%r8)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r9,%r14,1)
	movq %r8,0x0(%r13)
	xchgq %r11,%r15
	jmp L_81148
.p2align 0x4
.long 0x51E
L_81086:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_81088
L_81444:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_81445+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_81445
.p2align 0x4
.long 0x45B
L_81445:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_81088
.p2align 0x4
.long 0x788
L_81090:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	cmpq $0x1,0x0(%rbp)
	je L_407595
L_81091:
	movq 0x10(%rbp),%r15
	cmpq $0x1,%r15
	je L_407594
	cmpq $0x2,%r15
	je L_407593
	cmpq $0x3,%r15
	je L_407592
L_81092:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%rax
	shrq $0x1,%rax
	subq $0x1B35,%rax
	cmpq $0xA,%rax
	ja L_407580
	leaq jumpTable_209(%rip),%rbx
	jmp *(%rbx,%rax,8)
.data
.p2align 0x4
jumpTable_209:
.quad L_407591,L_407590,L_407589,L_407588,L_407587,L_407586,L_407585,L_407584,L_407583,L_407582,L_407581
.text
.p2align 0x4
L_407580:
L_81093:
	movq 0x10(%rbp),%r15
	movq 0x30(%r15),%r14
	movq %r14,0x8(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq 0x28(%r15),%r15
	movq %r15,0x10(%rbp)
	movq %r14,0x38(%rbp)
	jmp visit_1
.p2align 0x4
L_407581:
L_81438:
	movq 0x10(%rbp),%r15
	movq 0x20(%r15),%r14
	movq %r14,0x8(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq 0x18(%r15),%r15
	movq %r15,0x10(%rbp)
	movq %r14,0x28(%rbp)
	jmp visit_2
.p2align 0x4
L_407582:
L_81437:
	movq 0x10(%rbp),%r15
	movq 0x20(%r15),%r14
	movq %r14,0x8(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq 0x18(%r15),%r15
	movq %r15,0x10(%rbp)
	movq %r14,0x28(%rbp)
	jmp visit_3
.p2align 0x4
L_407583:
L_81436:
	movq 0x10(%rbp),%r15
	movq 0x20(%r15),%r14
	movq %r14,0x8(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq 0x18(%r15),%r15
	movq %r15,0x10(%rbp)
	movq %r14,0x28(%rbp)
	jmp visit_4
.p2align 0x4
L_407584:
L_81427:
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x8(%rbp)
	movq 0x30(%r14),%r15
	movq 0x8(%r15),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x18(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x30(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_81428+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_33
.p2align 0x4
L_407585:
L_81406:
	movq 0x10(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x8(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq %r14,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_81407+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_33
.p2align 0x4
L_407586:
L_81106:
	movq 0x10(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x8(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq %r14,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_81107+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_33
.p2align 0x4
L_407587:
L_81105:
	movq 0x10(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r15
	movq %r15,0x10(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq %r14,0x0(%rbp)
	jmp goto_1
.p2align 0x4
L_407588:
L_81097:
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x8(%rbp)
	movq 0x8(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x40(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x20(%rbp)
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x28(%rbp)
	movq %r14,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_81098+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_4
.p2align 0x4
L_407589:
L_81096:
	movq 0x10(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x8(%rbp)
	movq 0x0(%r15),%r15
	movq %r15,0x10(%rbp)
	jmp x_1336
.p2align 0x4
L_407590:
L_81095:
	movq 0x10(%rbp),%r15
	movq 0x20(%r15),%r14
	movq %r14,0x8(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq 0x18(%r15),%r15
	movq %r15,0x10(%rbp)
	movq %r14,0x28(%rbp)
	jmp visit_5
.p2align 0x4
L_407591:
L_81094:
	movq 0x10(%rbp),%r15
	movq 0x20(%r15),%r14
	movq %r14,0x8(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq 0x18(%r15),%r15
	movq %r15,0x10(%rbp)
	movq %r14,0x28(%rbp)
	jmp visit_6
.p2align 0x4
L_407592:
L_81441:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_407593:
L_81440:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_407594:
L_81439:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_407595:
L_81442:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x5AF
L_81054:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x8(%rbp),%r15
	cmpq $0x1,%r15
	je L_407610
	cmpq $0x2,%r15
	je L_407609
	cmpq $0x3,%r15
	je L_407608
L_81055:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%rax
	shrq $0x1,%rax
	subq $0x1B35,%rax
	cmpq $0xA,%rax
	ja L_407596
	leaq jumpTable_210(%rip),%rbx
	jmp *(%rbx,%rax,8)
.data
.p2align 0x4
jumpTable_210:
.quad L_407607,L_407606,L_407605,L_407604,L_407603,L_407602,L_407601,L_407600,L_407599,L_407598,L_407597
.text
.p2align 0x4
L_407596:
L_81056:
	movq 0x8(%rbp),%r15
	movq 0x28(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq 0x30(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r14,0x38(%rbp)
	jmp visit_1
.p2align 0x4
L_407597:
L_81498:
	movq 0x8(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq 0x20(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r14,0x28(%rbp)
	jmp visit_2
.p2align 0x4
L_407598:
L_81497:
	movq 0x8(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq 0x20(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r14,0x28(%rbp)
	jmp visit_3
.p2align 0x4
L_407599:
L_81496:
	movq 0x8(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq 0x20(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r14,0x28(%rbp)
	jmp visit_4
.p2align 0x4
L_407600:
L_81487:
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x30(%r14),%r15
	movq 0x8(%r15),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x18(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x30(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_81488+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_33
.p2align 0x4
L_407601:
L_81466:
	movq 0x8(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq %r14,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_81467+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_33
.p2align 0x4
L_407602:
L_81069:
	movq 0x8(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq %r14,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_81070+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_33
.p2align 0x4
L_407603:
L_81068:
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r13,0x10(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq %r14,0x0(%rbp)
	jmp goto_1
.p2align 0x4
L_407604:
L_81060:
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x8(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x40(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x20(%rbp)
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x28(%rbp)
	movq %r14,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_81061+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_4
.p2align 0x4
L_407605:
L_81059:
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r14,0x10(%rbp)
	jmp x_1336
.p2align 0x4
L_407606:
L_81058:
	movq 0x8(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq 0x20(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r14,0x28(%rbp)
	jmp visit_5
.p2align 0x4
L_407607:
L_81057:
	movq 0x8(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq 0x20(%r15),%r15
	movq %r15,0x8(%rbp)
	movq %r14,0x28(%rbp)
	jmp visit_6
.p2align 0x4
L_407608:
L_81501:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_407609:
L_81500:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_407610:
L_81499:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x490
L_81531:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl 0x28(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_81532
L_81537:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_81538+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_81538
.p2align 0x4
.long 0x45E
L_81538:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_81532:
	movslq 0x20(%rbp),%r15
	movq 0x18(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_81041
L_81534:
	movq 0x0(%r14,%r15,8),%r13
L_81535:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_81185
L_81536:
	movq 0x10(%r13),%r15
	movl 0x0(%r13),%r14d
	movq 0x8(%r13),%r11
	movq $0x8E5,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movl %r14d,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r11,0x10(%r13)
	addq $0x20,%r12
	movl $0x0,0x4(%r13)
	movq %r13,0x0(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp deleteLabelMeaning_0
.p2align 0x4
.long 0x4A6
L_81510:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movl 0x38(%rbp),%r15d
	movslq %r15d,%r14
	movl %r15d,0x30(%rbp)
	movq 0x20(%rbp),%r15
	cmpq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	jnb L_81041
L_81512:
	movl 0x0(%r15,%r14,4),%r13d
	testl %r13d,%r13d
	jnz L_407615
L_81513:
	movl $0x1,0x0(%r15,%r14,4)
	movq 0x18(%rbp),%r15
	cmpq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	jnb L_81041
L_81515:
	movq 0x0(%r15,%r14,8),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x30(%rbp)
	movq $0x3,0x40(%rbp)
	movq $0x3,0x48(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq %r11,0x58(%rbp)
	addq $0x40,%rbp
	leaq (L_81516+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachFuncLabelVar_0
.p2align 0x4
L_407615:
L_81529:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4A6
L_81038:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movl 0x38(%rbp),%r15d
	movl %r15d,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_81039
L_81507:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_81508+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_81508
.p2align 0x4
.long 0xBC7
L_81508:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_81039:
	movslq 0x30(%rbp),%r15
	movq 0x20(%rbp),%r13
	cmpq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	jnb L_81041
L_81042:
	movl 0x0(%r13,%r15,4),%r11d
	testl %r11d,%r11d
	jnz L_407625
L_81043:
	movl $0x1,0x0(%r13,%r15,4)
	movq 0x18(%rbp),%r11
	cmpq 0xFFFFFFFFFFFFFFF0(%r11),%r15
	jnb L_81041
L_81045:
	movq 0x0(%r11,%r15,8),%r14
	movq 0x0(%r14),%r15
	movq 0x10(%rbp),%r10
	movq 0x0(%r10),%r9
	movq $0x1E99,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r14,0x0(%r8)
	movq %r9,0x8(%r8)
	addq $0x18,%r12
	movq %r10,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r14,1)
	movq %r8,0x0(%r10)
	movq $0x3675,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x28,%r12
	movq 0x28(%rbp),%r9
	movq %r9,0x0(%r14)
	movq %r13,0x8(%r14)
	movq %r11,0x10(%r14)
	movq %r10,0x18(%r14)
	cmpq $0x1,%r15
	je L_81312
L_81046:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0xF31,%r13
	je L_407622
	cmpq $0xF32,%r13
	je L_407621
	cmpq $0xF33,%r13
	je L_407620
	cmpq $0xF34,%r13
	je L_407619
	cmpq $0xF35,%r13
	je L_407618
	cmpq $0xF36,%r13
	je L_407617
L_81047:
	movq %r14,0x8(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x0(%rbp)
	movq 0x0(%r15),%r13
	movq $0xA,%r14
	movq %r13,%r15
	jmp L_81021
.p2align 0x4
L_407617:
L_81504:
	movq %r14,0x10(%rbp)
	movq 0x18(%r15),%r13
	movq %r13,0x0(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x8(%rbp)
	movq 0x0(%r15),%r13
	movq $0xA,%r14
	movq %r13,%r15
	jmp L_81274
.p2align 0x4
L_407618:
L_81503:
	movq %r14,0x18(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x0(%rbp)
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r13,0x8(%rbp)
	movq $0xA,0x10(%rbp)
	movq $0xD,%r15
	jmp L_81121
.p2align 0x4
L_407619:
L_81502:
	movq %r14,0x10(%rbp)
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq %r13,0x0(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x8(%rbp)
	movq $0xA,%r15
	jmp L_81083
.p2align 0x4
L_407620:
L_81052:
	movq %r14,0x8(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x0(%rbp)
	movq 0x0(%r15),%r13
	movq $0xA,%r14
	movq %r13,%r15
	jmp L_81053
.p2align 0x4
L_407621:
L_81050:
	movq 0x0(%r15),%r13
	movq $0xA,%r14
	movq %r13,%r15
	jmp L_81051
.p2align 0x4
L_407622:
L_81048:
	movq 0x0(%r15),%r13
	movq $0xA,%r14
	movq %r13,%r15
	jmp L_81049
.p2align 0x4
L_407625:
L_81506:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4A6
L_81029:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_81030
L_81034:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_81035+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_81035
.p2align 0x4
.long 0x720
L_81035:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_81030:
	movq 0x30(%rbp),%r15
	cmpq $0x1,%r15
	je L_407628
L_81031:
L_81032:
	movq 0x10(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x13,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq $0x1,0x0(%r11)
	movq $0x114D,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x20,%r12
	movq %r14,0x10(%r10)
	movq 0x0(%r13),%r15
	movq $0x261B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r10,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r14,0x0(%r13)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_407628:
L_81033:
	movq $0x45,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x13,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0x47,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x1B7F,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r13,0x8(%r10)
	addq $0x18,%r12
	movq %r11,0x0(%r10)
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r13,1)
	movq %r10,0x0(%r14)
	movq $0x196B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r11,0x8(%r14)
	addq $0x18,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x28(%rbp),%r13
	movq 0x0(%r13),%r10
	movq $0x28DF,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r14,0x0(%r8)
	movq %r10,0x8(%r8)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r9,%r14,1)
	movq %r8,0x0(%r13)
	xchgq %r11,%r15
	jmp L_81032
.p2align 0x4
.long 0x788
L_81278:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_81279
.p2align 0x4
.long 0x65C
L_81388:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movl 0x30(%rbp),%r15d
	movl %r15d,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_81389
L_81394:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_81395+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_81395
.p2align 0x4
.long 0x659
L_81395:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_81389:
	movslq 0x8(%rbp),%r15
	movq 0x20(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_81041
L_81391:
	movq 0x0(%r14,%r15,8),%r13
L_81392:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_81185
L_81393:
	movq 0x10(%r13),%r15
	movl 0x0(%r13),%r14d
	movq 0x8(%r13),%r11
	movq $0x8E5,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movl %r14d,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r11,0x10(%r13)
	addq $0x20,%r12
	movl $0x0,0x4(%r13)
	movq %r13,0x20(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_81278+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp deleteLabelMeaning_0
.p2align 0x4
.long 0x10F4
L_81376:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movl 0x40(%rbp),%r15d
	movslq %r15d,%r14
	movl %r15d,0x8(%rbp)
	movq 0x28(%rbp),%r15
	cmpq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	jnb L_81041
L_81378:
	movl 0x0(%r15,%r14,4),%r13d
	testl %r13d,%r13d
	jnz L_81279
L_81379:
	movl $0x1,0x0(%r15,%r14,4)
	movq 0x20(%rbp),%r15
	cmpq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	jnb L_81041
L_81381:
	movq 0x0(%r15,%r14,8),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x8(%rbp)
	movq $0x3,0x40(%rbp)
	movq $0x3,0x48(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq %r11,0x58(%rbp)
	addq $0x40,%rbp
	leaq (L_81382+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachFuncLabelVar_0
.p2align 0x4
.long 0x10F4
L_81365:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movl 0x40(%rbp),%r15d
	movl %r15d,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_81366
L_81373:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_81374+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_81374
.p2align 0x4
.long 0x658
L_81374:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_81366:
	movslq 0x8(%rbp),%r15
	movq 0x28(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_81041
L_81368:
	movl 0x0(%r14,%r15,4),%r13d
	testl %r13d,%r13d
	jnz L_81279
L_81369:
	movl $0x1,0x0(%r14,%r15,4)
	movq 0x20(%rbp),%r13
	cmpq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	jnb L_81041
L_81371:
	movq 0x0(%r13,%r15,8),%r11
	movq 0x0(%r11),%r15
	movq %r15,0x38(%rbp)
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r10
	movq $0x1E99,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r11,0x0(%r9)
	movq %r10,0x8(%r9)
	addq $0x18,%r12
	movq %r15,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r9,0x0(%r15)
	movq $0x3675,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x28,%r12
	movq 0x30(%rbp),%r10
	movq %r10,0x0(%r11)
	movq %r14,0x8(%r11)
	movq %r13,0x10(%r11)
	movq %r15,0x18(%r11)
	movq %r11,0x28(%rbp)
	movq $0xA,0x20(%rbp)
	movq $0xD,0x30(%rbp)
	addq $0x20,%rbp
	leaq (L_81278+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachFuncLabelVar_0
.p2align 0x4
.long 0x10F3
L_81356:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_81357
L_81361:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_81362+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_81362
.p2align 0x4
.long 0x563
L_81362:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_81357:
	movq 0x8(%rbp),%r15
	cmpq $0x1,%r15
	je L_407640
L_81358:
L_81359:
	movq 0x20(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x13,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq $0x1,0x0(%r11)
	movq $0x114D,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x20,%r12
	movq %r14,0x10(%r10)
	movq 0x0(%r13),%r15
	movq $0x261B,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r10,0x0(%r11)
	movq %r15,0x8(%r11)
	addq $0x18,%r12
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r15,1)
	movq %r11,0x0(%r13)
	movq 0x18(%rbp),%r15
	movq %r14,0x8(%rbp)
	jmp L_81286
.p2align 0x4
L_407640:
L_81360:
	movq $0x45,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x13,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0x47,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x1B7F,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r13,0x8(%r10)
	addq $0x18,%r12
	movq %r11,0x0(%r10)
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r13,1)
	movq %r10,0x0(%r14)
	movq $0x196B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r11,0x8(%r14)
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x38(%rbp),%r13
	movq 0x0(%r13),%r10
	movq $0x28DF,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r14,0x0(%r8)
	movq %r10,0x8(%r8)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r9,%r14,1)
	movq %r8,0x0(%r13)
	xchgq %r11,%r15
	jmp L_81359
.p2align 0x4
.long 0x4E0
L_81338:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl 0x28(%rbp),%r15d
	movl %r15d,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_81339
L_81344:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_81345+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_81345
.p2align 0x4
.long 0x522
L_81345:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_81339:
	movslq 0x10(%rbp),%r15
	movq 0x18(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_81041
L_81341:
	movq 0x0(%r14,%r15,8),%r13
L_81342:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_81185
L_81343:
	movq 0x10(%r13),%r15
	movl 0x0(%r13),%r14d
	movq 0x8(%r13),%r11
	movq $0x8E5,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movl %r14d,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r11,0x10(%r13)
	addq $0x20,%r12
	movl $0x0,0x4(%r13)
	movq %r13,0x0(%rbp)
	jmp deleteLabelMeaning_0
.p2align 0x4
.long 0x679
L_81317:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movl 0x38(%rbp),%r15d
	movslq %r15d,%r14
	movl %r15d,0x10(%rbp)
	movq 0x20(%rbp),%r15
	cmpq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	jnb L_81041
L_81319:
	movl 0x0(%r15,%r14,4),%r13d
	testl %r13d,%r13d
	jnz L_407646
L_81320:
	movl $0x1,0x0(%r15,%r14,4)
	movq 0x18(%rbp),%r15
	cmpq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	jnb L_81041
L_81322:
	movq 0x0(%r15,%r14,8),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x10(%rbp)
	movq $0x3,0x38(%rbp)
	movq $0x3,0x40(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq %r11,0x50(%rbp)
	addq $0x38,%rbp
	leaq (L_81323+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachFuncLabelVar_0
.p2align 0x4
L_407646:
L_81336:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x679
L_81296:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movl 0x38(%rbp),%r15d
	movl %r15d,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_81297
L_81314:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_81315+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_81315
.p2align 0x4
.long 0xA29
L_81315:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_81297:
	movslq 0x10(%rbp),%r15
	movq 0x20(%rbp),%r13
	cmpq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	jnb L_81041
L_81299:
	movl 0x0(%r13,%r15,4),%r11d
	testl %r11d,%r11d
	jnz L_407656
L_81300:
	movl $0x1,0x0(%r13,%r15,4)
	movq 0x18(%rbp),%r11
	cmpq 0xFFFFFFFFFFFFFFF0(%r11),%r15
	jnb L_81041
L_81302:
	movq 0x0(%r11,%r15,8),%r14
	movq 0x0(%r14),%r15
	movq 0x8(%rbp),%r10
	movq 0x0(%r10),%r9
	movq $0x1E99,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r14,0x0(%r8)
	movq %r9,0x8(%r8)
	addq $0x18,%r12
	movq %r10,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r14,1)
	movq %r8,0x0(%r10)
	movq $0x3675,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x28,%r12
	movq 0x28(%rbp),%r9
	movq %r9,0x0(%r14)
	movq %r13,0x8(%r14)
	movq %r11,0x10(%r14)
	movq %r10,0x18(%r14)
	cmpq $0x1,%r15
	je L_81312
L_81303:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0xF31,%r13
	je L_407653
	cmpq $0xF32,%r13
	je L_407652
	cmpq $0xF33,%r13
	je L_407651
	cmpq $0xF34,%r13
	je L_407650
	cmpq $0xF35,%r13
	je L_407649
	cmpq $0xF36,%r13
	je L_407648
L_81304:
	movq %r14,0x8(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x0(%rbp)
	movq 0x0(%r15),%r13
	movq $0xA,%r14
	movq %r13,%r15
	jmp L_81021
.p2align 0x4
L_407648:
L_81310:
	movq %r14,0x10(%rbp)
	movq 0x18(%r15),%r13
	movq %r13,0x0(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x8(%rbp)
	movq 0x0(%r15),%r13
	movq $0xA,%r14
	movq %r13,%r15
	jmp L_81274
.p2align 0x4
L_407649:
L_81309:
	movq %r14,0x18(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x0(%rbp)
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r13,0x8(%rbp)
	movq $0xA,0x10(%rbp)
	movq $0xD,%r15
	jmp L_81121
.p2align 0x4
L_407650:
L_81308:
	movq %r14,0x10(%rbp)
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq %r13,0x0(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x8(%rbp)
	movq $0xA,%r15
	jmp L_81083
.p2align 0x4
L_407651:
L_81307:
	movq %r14,0x8(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x0(%rbp)
	movq 0x0(%r15),%r13
	movq $0xA,%r14
	movq %r13,%r15
	jmp L_81053
.p2align 0x4
L_407652:
L_81306:
	movq 0x0(%r15),%r13
	movq $0xA,%r14
	movq %r13,%r15
	jmp L_81051
.p2align 0x4
L_407653:
L_81305:
	movq 0x0(%r15),%r13
	movq $0xA,%r14
	movq %r13,%r15
	jmp L_81049
.p2align 0x4
L_407656:
L_81313:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4A5
L_81287:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_81288
L_81292:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_81293+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_81293
.p2align 0x4
.long 0x637
L_81293:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_81288:
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_407659
L_81289:
L_81290:
	movq 0x8(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x13,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq $0x1,0x0(%r11)
	movq $0x114D,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x20,%r12
	movq %r14,0x10(%r10)
	movq 0x0(%r13),%r15
	movq $0x261B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r10,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r14,0x0(%r13)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_407659:
L_81291:
	movq $0x45,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x13,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0x47,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x1B7F,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r13,0x8(%r10)
	addq $0x18,%r12
	movq %r11,0x0(%r10)
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r13,1)
	movq %r10,0x0(%r14)
	movq $0x196B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r11,0x8(%r14)
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x20(%rbp),%r13
	movq 0x0(%r13),%r10
	movq $0x28DF,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r14,0x0(%r8)
	movq %r10,0x8(%r8)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r9,%r14,1)
	movq %r8,0x0(%r13)
	xchgq %r11,%r15
	jmp L_81290
.p2align 0x4
.long 0xB65
L_81233:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_81234
L_81235:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_81236+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_81236
.p2align 0x4
.long 0x8A7
L_81236:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_81234:
	movq $0x3677,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x28,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x18(%r15)
	movq %r15,0x38(%rbp)
	movq $0xB,0x30(%rbp)
	movq $0x6,0x40(%rbp)
	addq $0x30,%rbp
	leaq (L_81129+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachFuncLabelVar_0
.p2align 0x4
.long 0x4ED
L_81172:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_81173
L_81174:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_81175+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_81175
.p2align 0x4
.long 0x4EB
L_81175:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_81173:
	movq $0x3677,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x28,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x18(%r15)
	movq %r15,0x28(%rbp)
	movq $0xB,0x20(%rbp)
	movq $0x6,0x30(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x20,%rbp
	leaq (L_81136+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachFuncLabelVar_0
.p2align 0x4
.long 0x4E0
L_81428:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl 0x28(%rbp),%r15d
	movl %r15d,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_81429
L_81434:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_81435+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_81435
.p2align 0x4
.long 0x522
L_81435:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_81429:
	movslq 0x10(%rbp),%r15
	movq 0x18(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_81041
L_81431:
	movq 0x0(%r14,%r15,8),%r13
L_81432:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_81185
L_81433:
	movq 0x10(%r13),%r15
	movl 0x0(%r13),%r14d
	movq 0x8(%r13),%r11
	movq $0x8E5,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movl %r14d,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r11,0x10(%r13)
	addq $0x20,%r12
	movl $0x0,0x4(%r13)
	movq %r13,0x0(%rbp)
	jmp deleteLabelMeaning_0
.p2align 0x4
.long 0x679
L_81407:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movl 0x38(%rbp),%r15d
	movslq %r15d,%r14
	movl %r15d,0x10(%rbp)
	movq 0x20(%rbp),%r15
	cmpq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	jnb L_81041
L_81409:
	movl 0x0(%r15,%r14,4),%r13d
	testl %r13d,%r13d
	jnz L_407667
L_81410:
	movl $0x1,0x0(%r15,%r14,4)
	movq 0x18(%rbp),%r15
	cmpq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	jnb L_81041
L_81412:
	movq 0x0(%r15,%r14,8),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x10(%rbp)
	movq $0x3,0x38(%rbp)
	movq $0x3,0x40(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq %r11,0x50(%rbp)
	addq $0x38,%rbp
	leaq (L_81413+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachFuncLabelVar_0
.p2align 0x4
L_407667:
L_81426:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x679
L_81107:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movl 0x38(%rbp),%r15d
	movl %r15d,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_81108
L_81404:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_81405+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_81405
.p2align 0x4
.long 0xA29
L_81405:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_81108:
	movslq 0x10(%rbp),%r15
	movq 0x20(%rbp),%r13
	cmpq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	jnb L_81041
L_81110:
	movl 0x0(%r13,%r15,4),%r11d
	testl %r11d,%r11d
	jnz L_407677
L_81111:
	movl $0x1,0x0(%r13,%r15,4)
	movq 0x18(%rbp),%r11
	cmpq 0xFFFFFFFFFFFFFFF0(%r11),%r15
	jnb L_81041
L_81113:
	movq 0x0(%r11,%r15,8),%r14
	movq 0x0(%r14),%r15
	movq 0x8(%rbp),%r10
	movq 0x0(%r10),%r9
	movq $0x1E99,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r14,0x0(%r8)
	movq %r9,0x8(%r8)
	addq $0x18,%r12
	movq %r10,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r14,1)
	movq %r8,0x0(%r10)
	movq $0x3675,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x28,%r12
	movq 0x28(%rbp),%r9
	movq %r9,0x0(%r14)
	movq %r13,0x8(%r14)
	movq %r11,0x10(%r14)
	movq %r10,0x18(%r14)
	cmpq $0x1,%r15
	je L_81312
L_81114:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0xF31,%r13
	je L_407674
	cmpq $0xF32,%r13
	je L_407673
	cmpq $0xF33,%r13
	je L_407672
	cmpq $0xF34,%r13
	je L_407671
	cmpq $0xF35,%r13
	je L_407670
	cmpq $0xF36,%r13
	je L_407669
L_81115:
	movq %r14,0x8(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x0(%rbp)
	movq 0x0(%r15),%r13
	movq $0xA,%r14
	movq %r13,%r15
	jmp L_81021
.p2align 0x4
L_407669:
L_81273:
	movq %r14,0x10(%rbp)
	movq 0x18(%r15),%r13
	movq %r13,0x0(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x8(%rbp)
	movq 0x0(%r15),%r13
	movq $0xA,%r14
	movq %r13,%r15
	jmp L_81274
.p2align 0x4
L_407670:
L_81120:
	movq %r14,0x18(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x0(%rbp)
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r13,0x8(%rbp)
	movq $0xA,0x10(%rbp)
	movq $0xD,%r15
	jmp L_81121
.p2align 0x4
L_407671:
L_81119:
	movq %r14,0x10(%rbp)
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq %r13,0x0(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x8(%rbp)
	movq $0xA,%r15
	jmp L_81083
.p2align 0x4
L_407672:
L_81118:
	movq %r14,0x8(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x0(%rbp)
	movq 0x0(%r15),%r13
	movq $0xA,%r14
	movq %r13,%r15
	jmp L_81053
.p2align 0x4
L_407673:
L_81117:
	movq 0x0(%r15),%r13
	movq $0xA,%r14
	movq %r13,%r15
	jmp L_81051
.p2align 0x4
L_407674:
L_81116:
	movq 0x0(%r15),%r13
	movq $0xA,%r14
	movq %r13,%r15
	jmp L_81049
.p2align 0x4
L_407677:
L_81403:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x679
L_81098:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_81099
L_81103:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_81104+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_81104
.p2align 0x4
.long 0x637
L_81104:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_81099:
	movq 0x10(%rbp),%r15
	cmpq $0x1,%r15
	je L_407680
L_81100:
L_81101:
	movq 0x8(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x13,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq $0x1,0x0(%r11)
	movq $0x114D,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x20,%r12
	movq %r14,0x10(%r10)
	movq 0x0(%r13),%r15
	movq $0x261B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r10,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r14,0x0(%r13)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_407680:
L_81102:
	movq $0x45,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x13,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0x47,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x1B7F,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r13,0x8(%r10)
	addq $0x18,%r12
	movq %r11,0x0(%r10)
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r13,1)
	movq %r10,0x0(%r14)
	movq $0x196B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r11,0x8(%r14)
	addq $0x18,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x28(%rbp),%r13
	movq 0x0(%r13),%r10
	movq $0x28DF,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r14,0x0(%r8)
	movq %r10,0x8(%r8)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r9,%r14,1)
	movq %r8,0x0(%r13)
	xchgq %r11,%r15
	jmp L_81101
.p2align 0x4
.long 0x490
L_81488:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl 0x28(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_81489
L_81494:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_81495+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_81495
.p2align 0x4
.long 0x45E
L_81495:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_81489:
	movslq 0x20(%rbp),%r15
	movq 0x18(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_81041
L_81491:
	movq 0x0(%r14,%r15,8),%r13
L_81492:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_81185
L_81493:
	movq 0x10(%r13),%r15
	movl 0x0(%r13),%r14d
	movq 0x8(%r13),%r11
	movq $0x8E5,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movl %r14d,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r11,0x10(%r13)
	addq $0x20,%r12
	movl $0x0,0x4(%r13)
	movq %r13,0x0(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp deleteLabelMeaning_0
.p2align 0x4
.long 0x4A6
L_81467:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movl 0x38(%rbp),%r15d
	movslq %r15d,%r14
	movl %r15d,0x30(%rbp)
	movq 0x20(%rbp),%r15
	cmpq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	jnb L_81041
L_81469:
	movl 0x0(%r15,%r14,4),%r13d
	testl %r13d,%r13d
	jnz L_407686
L_81470:
	movl $0x1,0x0(%r15,%r14,4)
	movq 0x18(%rbp),%r15
	cmpq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	jnb L_81041
L_81472:
	movq 0x0(%r15,%r14,8),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x30(%rbp)
	movq $0x3,0x40(%rbp)
	movq $0x3,0x48(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq %r11,0x58(%rbp)
	addq $0x40,%rbp
	leaq (L_81473+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachFuncLabelVar_0
.p2align 0x4
L_407686:
L_81486:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4A6
L_81070:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movl 0x38(%rbp),%r15d
	movl %r15d,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_81071
L_81464:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_81465+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_81465
.p2align 0x4
.long 0xBC7
L_81465:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_81071:
	movslq 0x30(%rbp),%r15
	movq 0x20(%rbp),%r13
	cmpq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	jnb L_81041
L_81073:
	movl 0x0(%r13,%r15,4),%r11d
	testl %r11d,%r11d
	jnz L_407696
L_81074:
	movl $0x1,0x0(%r13,%r15,4)
	movq 0x18(%rbp),%r11
	cmpq 0xFFFFFFFFFFFFFFF0(%r11),%r15
	jnb L_81041
L_81076:
	movq 0x0(%r11,%r15,8),%r14
	movq 0x0(%r14),%r15
	movq 0x10(%rbp),%r10
	movq 0x0(%r10),%r9
	movq $0x1E99,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r14,0x0(%r8)
	movq %r9,0x8(%r8)
	addq $0x18,%r12
	movq %r10,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r14,1)
	movq %r8,0x0(%r10)
	movq $0x3675,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x28,%r12
	movq 0x28(%rbp),%r9
	movq %r9,0x0(%r14)
	movq %r13,0x8(%r14)
	movq %r11,0x10(%r14)
	movq %r10,0x18(%r14)
	cmpq $0x1,%r15
	je L_81312
L_81077:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0xF31,%r13
	je L_407693
	cmpq $0xF32,%r13
	je L_407692
	cmpq $0xF33,%r13
	je L_407691
	cmpq $0xF34,%r13
	je L_407690
	cmpq $0xF35,%r13
	je L_407689
	cmpq $0xF36,%r13
	je L_407688
L_81078:
	movq %r14,0x8(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x0(%rbp)
	movq 0x0(%r15),%r13
	movq $0xA,%r14
	movq %r13,%r15
	jmp L_81021
.p2align 0x4
L_407688:
L_81461:
	movq %r14,0x10(%rbp)
	movq 0x18(%r15),%r13
	movq %r13,0x0(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x8(%rbp)
	movq 0x0(%r15),%r13
	movq $0xA,%r14
	movq %r13,%r15
	jmp L_81274
.p2align 0x4
L_407689:
L_81460:
	movq %r14,0x18(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x0(%rbp)
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r13,0x8(%rbp)
	movq $0xA,0x10(%rbp)
	movq $0xD,%r15
	jmp L_81121
.p2align 0x4
L_407690:
L_81082:
	movq %r14,0x10(%rbp)
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq %r13,0x0(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x8(%rbp)
	movq $0xA,%r15
	jmp L_81083
.p2align 0x4
L_407691:
L_81081:
	movq %r14,0x8(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x0(%rbp)
	movq 0x0(%r15),%r13
	movq $0xA,%r14
	movq %r13,%r15
	jmp L_81053
.p2align 0x4
L_407692:
L_81080:
	movq 0x0(%r15),%r13
	movq $0xA,%r14
	movq %r13,%r15
	jmp L_81051
.p2align 0x4
L_407693:
L_81079:
	movq 0x0(%r15),%r13
	movq $0xA,%r14
	movq %r13,%r15
	jmp L_81049
.p2align 0x4
L_407696:
L_81463:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4A6
L_81061:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_81062
L_81066:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_81067+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_81067
.p2align 0x4
.long 0x720
L_81067:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_81062:
	movq 0x30(%rbp),%r15
	cmpq $0x1,%r15
	je L_407699
L_81063:
L_81064:
	movq 0x10(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x13,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq $0x1,0x0(%r11)
	movq $0x114D,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x20,%r12
	movq %r14,0x10(%r10)
	movq 0x0(%r13),%r15
	movq $0x261B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r10,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r14,0x0(%r13)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_407699:
L_81065:
	movq $0x45,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x13,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0x47,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x1B7F,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r13,0x8(%r10)
	addq $0x18,%r12
	movq %r11,0x0(%r10)
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r13,1)
	movq %r10,0x0(%r14)
	movq $0x196B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r11,0x8(%r14)
	addq $0x18,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x28(%rbp),%r13
	movq 0x0(%r13),%r10
	movq $0x28DF,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r14,0x0(%r8)
	movq %r10,0x8(%r8)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r9,%r14,1)
	movq %r8,0x0(%r13)
	xchgq %r11,%r15
	jmp L_81064
.p2align 0x4
.long 0x4A7
L_81516:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_81517
L_81527:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_81528+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_81528
.p2align 0x4
.long 0x720
L_81528:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_81517:
	movq $0x3677,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x28,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x20(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x18(%rbp),%r13
	movq %r13,0x10(%r15)
	movq 0x10(%rbp),%r13
	movq %r13,0x18(%r15)
	movq 0x30(%rbp),%r13
	cmpq $0x1,%r13
	je L_81312
L_81518:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r14
	shrq $0x1,%r14
	cmpq $0xF31,%r14
	je L_407706
	cmpq $0xF32,%r14
	je L_407705
	cmpq $0xF33,%r14
	je L_407704
	cmpq $0xF34,%r14
	je L_407703
	cmpq $0xF35,%r14
	je L_407702
	cmpq $0xF36,%r14
	je L_407701
L_81519:
	movq %r15,0x8(%rbp)
	movq 0x10(%r13),%r11
	movq %r11,0x0(%rbp)
	movq 0x0(%r13),%r15
	movq $0xB,%r14
	jmp L_81021
.p2align 0x4
L_407701:
L_81525:
	movq %r15,0x10(%rbp)
	movq 0x18(%r13),%r11
	movq %r11,0x0(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x8(%rbp)
	movq 0x0(%r13),%r15
	movq $0xB,%r14
	jmp L_81274
.p2align 0x4
L_407702:
L_81524:
	movq %r15,0x18(%rbp)
	movq 0x10(%r13),%r11
	movq %r11,0x0(%rbp)
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r11
	movq %r11,0x8(%rbp)
	movq $0xB,0x10(%rbp)
	movq $0x6,%r15
	jmp L_81121
.p2align 0x4
L_407703:
L_81523:
	movq %r15,0x10(%rbp)
	movq 0x10(%r13),%r14
	movq 0x8(%r13),%r11
	movq %r11,0x0(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x8(%rbp)
	movq $0xB,%r15
	jmp L_81083
.p2align 0x4
L_407704:
L_81522:
	movq %r15,0x8(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x0(%rbp)
	movq 0x0(%r13),%r15
	movq $0xB,%r14
	jmp L_81053
.p2align 0x4
L_407705:
L_81521:
	movq 0x0(%r13),%r15
	movq $0xB,%r14
	jmp L_81051
.p2align 0x4
L_407706:
L_81520:
	movq 0x0(%r13),%r15
	movq $0xB,%r14
	jmp L_81049
.p2align 0x4
.long 0x655
L_81382:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_81383
L_81384:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_81385+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_81385
.p2align 0x4
.long 0x646
L_81385:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_81383:
	movq $0x3677,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x28,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x18(%r15)
	movq %r15,0x28(%rbp)
	movq $0xB,0x20(%rbp)
	movq $0x6,0x30(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x20,%rbp
	leaq (L_81278+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachFuncLabelVar_0
.p2align 0x4
.long 0x4E3
L_81323:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_81324
L_81334:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_81335+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_81335
.p2align 0x4
.long 0x637
L_81335:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_81324:
	movq $0x3677,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x28,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x20(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x18(%rbp),%r13
	movq %r13,0x10(%r15)
	movq 0x8(%rbp),%r13
	movq %r13,0x18(%r15)
	movq 0x10(%rbp),%r13
	cmpq $0x1,%r13
	je L_81312
L_81325:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r14
	shrq $0x1,%r14
	cmpq $0xF31,%r14
	je L_407715
	cmpq $0xF32,%r14
	je L_407714
	cmpq $0xF33,%r14
	je L_407713
	cmpq $0xF34,%r14
	je L_407712
	cmpq $0xF35,%r14
	je L_407711
	cmpq $0xF36,%r14
	je L_407710
L_81326:
	movq %r15,0x8(%rbp)
	movq 0x10(%r13),%r11
	movq %r11,0x0(%rbp)
	movq 0x0(%r13),%r15
	movq $0xB,%r14
	jmp L_81021
.p2align 0x4
L_407710:
L_81332:
	movq 0x18(%r13),%r11
	movq %r11,0x0(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x8(%rbp)
	movq 0x0(%r13),%r14
	movq %r15,0x10(%rbp)
	movq $0xB,%r13
	movq %r14,%r15
	movq %r13,%r14
	jmp L_81274
.p2align 0x4
L_407711:
L_81331:
	movq %r15,0x18(%rbp)
	movq 0x10(%r13),%r11
	movq %r11,0x0(%rbp)
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r11
	movq %r11,0x8(%rbp)
	movq $0xB,0x10(%rbp)
	movq $0x6,%r15
	jmp L_81121
.p2align 0x4
L_407712:
L_81330:
	movq 0x10(%r13),%r14
	movq 0x8(%r13),%r11
	movq %r11,0x0(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x8(%rbp)
	movq %r15,0x10(%rbp)
	movq $0xB,%r15
	jmp L_81083
.p2align 0x4
L_407713:
L_81329:
	movq %r15,0x8(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x0(%rbp)
	movq 0x0(%r13),%r15
	movq $0xB,%r14
	jmp L_81053
.p2align 0x4
L_407714:
L_81328:
	movq 0x0(%r13),%r15
	movq $0xB,%r14
	jmp L_81051
.p2align 0x4
L_407715:
L_81327:
	movq 0x0(%r13),%r15
	movq $0xB,%r14
	jmp L_81049
.p2align 0x4
.long 0x4E3
L_81413:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_81414
L_81424:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_81425+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_81425
.p2align 0x4
.long 0x637
L_81425:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_81414:
	movq $0x3677,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x28,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x20(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x18(%rbp),%r13
	movq %r13,0x10(%r15)
	movq 0x8(%rbp),%r13
	movq %r13,0x18(%r15)
	movq 0x10(%rbp),%r13
	cmpq $0x1,%r13
	je L_81312
L_81415:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r14
	shrq $0x1,%r14
	cmpq $0xF31,%r14
	je L_407723
	cmpq $0xF32,%r14
	je L_407722
	cmpq $0xF33,%r14
	je L_407721
	cmpq $0xF34,%r14
	je L_407720
	cmpq $0xF35,%r14
	je L_407719
	cmpq $0xF36,%r14
	je L_407718
L_81416:
	movq %r15,0x8(%rbp)
	movq 0x10(%r13),%r11
	movq %r11,0x0(%rbp)
	movq 0x0(%r13),%r15
	movq $0xB,%r14
	jmp L_81021
.p2align 0x4
L_407718:
L_81422:
	movq 0x18(%r13),%r11
	movq %r11,0x0(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x8(%rbp)
	movq 0x0(%r13),%r14
	movq %r15,0x10(%rbp)
	movq $0xB,%r13
	movq %r14,%r15
	movq %r13,%r14
	jmp L_81274
.p2align 0x4
L_407719:
L_81421:
	movq %r15,0x18(%rbp)
	movq 0x10(%r13),%r11
	movq %r11,0x0(%rbp)
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r11
	movq %r11,0x8(%rbp)
	movq $0xB,0x10(%rbp)
	movq $0x6,%r15
	jmp L_81121
.p2align 0x4
L_407720:
L_81420:
	movq 0x10(%r13),%r14
	movq 0x8(%r13),%r11
	movq %r11,0x0(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x8(%rbp)
	movq %r15,0x10(%rbp)
	movq $0xB,%r15
	jmp L_81083
.p2align 0x4
L_407721:
L_81419:
	movq %r15,0x8(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x0(%rbp)
	movq 0x0(%r13),%r15
	movq $0xB,%r14
	jmp L_81053
.p2align 0x4
L_407722:
L_81418:
	movq 0x0(%r13),%r15
	movq $0xB,%r14
	jmp L_81051
.p2align 0x4
L_407723:
L_81417:
	movq 0x0(%r13),%r15
	movq $0xB,%r14
	jmp L_81049
.p2align 0x4
.long 0x4A7
L_81473:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_81474
L_81484:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_81485+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_81485
.p2align 0x4
.long 0x720
L_81485:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_81474:
	movq $0x3677,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x28,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x20(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x18(%rbp),%r13
	movq %r13,0x10(%r15)
	movq 0x10(%rbp),%r13
	movq %r13,0x18(%r15)
	movq 0x30(%rbp),%r13
	cmpq $0x1,%r13
	je L_81312
L_81475:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r14
	shrq $0x1,%r14
	cmpq $0xF31,%r14
	je L_407731
	cmpq $0xF32,%r14
	je L_407730
	cmpq $0xF33,%r14
	je L_407729
	cmpq $0xF34,%r14
	je L_407728
	cmpq $0xF35,%r14
	je L_407727
	cmpq $0xF36,%r14
	je L_407726
L_81476:
	movq %r15,0x8(%rbp)
	movq 0x10(%r13),%r11
	movq %r11,0x0(%rbp)
	movq 0x0(%r13),%r15
	movq $0xB,%r14
	jmp L_81021
.p2align 0x4
L_407726:
L_81482:
	movq %r15,0x10(%rbp)
	movq 0x18(%r13),%r11
	movq %r11,0x0(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x8(%rbp)
	movq 0x0(%r13),%r15
	movq $0xB,%r14
	jmp L_81274
.p2align 0x4
L_407727:
L_81481:
	movq %r15,0x18(%rbp)
	movq 0x10(%r13),%r11
	movq %r11,0x0(%rbp)
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r11
	movq %r11,0x8(%rbp)
	movq $0xB,0x10(%rbp)
	movq $0x6,%r15
	jmp L_81121
.p2align 0x4
L_407728:
L_81480:
	movq %r15,0x10(%rbp)
	movq 0x10(%r13),%r14
	movq 0x8(%r13),%r11
	movq %r11,0x0(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x8(%rbp)
	movq $0xB,%r15
	jmp L_81083
.p2align 0x4
L_407729:
L_81479:
	movq %r15,0x8(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x0(%rbp)
	movq 0x0(%r13),%r15
	movq $0xB,%r14
	jmp L_81053
.p2align 0x4
L_407730:
L_81478:
	movq 0x0(%r13),%r15
	movq $0xB,%r14
	jmp L_81051
.p2align 0x4
L_407731:
L_81477:
	movq 0x0(%r13),%r15
	movq $0xB,%r14
	jmp L_81049
.text
.p2align 0x4
.globl visit_1
.hidden visit_1
visit_1:
L_81554:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_81555
L_81670:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_81671+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_81671
.p2align 0x4
.long 0x657
L_81671:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_81555:
	movq 0x0(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_81556+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_33
.p2align 0x4
.long 0x4ED
L_81556:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movl 0x48(%rbp),%r15d
	movl %r15d,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_81557
L_81668:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_81669+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_81669
.p2align 0x4
.long 0x67D
L_81669:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_81557:
	movslq 0x40(%rbp),%r15
	movq 0x30(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_81559
L_81560:
	movl 0x0(%r14,%r15,4),%r13d
	testl %r13d,%r13d
	jnz L_407737
L_81561:
	movl $0x1,0x0(%r14,%r15,4)
	movq 0x28(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_407736
L_81563:
	movq 0x0(%r14,%r15,8),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x40(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x48(%rbp)
	movq 0x10(%r13),%r11
	movq %r11,0x50(%rbp)
	movq 0x18(%r13),%r11
	movq 0x20(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r10
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r15
	movl %r15d,%r9d
	movslq %r9d,%r8
	cmpq %r8,%r15
	jne L_407735
L_81566:
	movl %r9d,0x68(%rbp)
	movq $0x380B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	movq %r10,0x10(%r15)
	movq %r11,0x18(%r15)
	movq %r15,0x60(%rbp)
	addq $0x28,%r12
	addq $0x60,%rbp
	leaq (L_81567+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_26
.p2align 0x4
L_407735:
L_81565:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_407736:
L_81559:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_407737:
L_81667:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x8A6
L_81567:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_81568+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp transformStatements_0
.p2align 0x4
.long 0x84A
L_81568:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_81569
L_81665:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_81666+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_81666
.p2align 0x4
.long 0x9E0
L_81666:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_81569:
	movq 0x40(%rbp),%r15
	cmpq $0x1,%r15
	je L_407752
L_81570:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xF31,%r14
	je L_407750
	cmpq $0xF32,%r14
	je L_407748
	cmpq $0xF33,%r14
	je L_407746
	cmpq $0xF34,%r14
	je L_407745
	cmpq $0xF35,%r14
	je L_407743
	cmpq $0xF36,%r14
	je L_407741
L_81571:
	movq 0x10(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_81565
L_81573:
	movl %r13d,0x80(%rbp)
	movq $0x3FC9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_81574+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
L_407741:
L_81657:
	movq 0x20(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_81565
L_81659:
	movl %r13d,0x90(%rbp)
	movq $0x3FC9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_81660+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
L_407743:
L_81642:
	movq 0x10(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_81565
L_81644:
	movl %r13d,0x80(%rbp)
	movq $0x3FC9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_81645+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
L_407745:
L_81600:
	movq 0x10(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x68(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x70(%rbp)
	movq 0x10(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x78(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x90(%rbp)
	movq %r14,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_81601+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_61
.p2align 0x4
L_407746:
L_81593:
	movq 0x8(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_81565
L_81595:
	movl %r13d,0x78(%rbp)
	movq $0x3FC9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_81596+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
L_407748:
L_81586:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_81565
L_81588:
	movl %r13d,0x70(%rbp)
	movq $0x3FC9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_81589+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
L_407750:
L_81579:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_81565
L_81581:
	movl %r13d,0x70(%rbp)
	movq $0x3FC9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_81582+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
L_407752:
L_81664:
	movq $0x1,%r14
	xchgq %r14,%r15
L_81576:
	movq $0x23,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x28,%r12
	movq 0x48(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x50(%rbp),%r15
	movq %r15,0x10(%r14)
	movq 0x58(%rbp),%r15
	movq %r15,0x18(%r14)
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r13
	movq $0x1E99,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq %r11,0x0(%r15)
	movq $0x3669,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x40,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x30(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x28(%rbp),%r13
	movq %r13,0x10(%r14)
	movq 0x20(%rbp),%r13
	movq %r13,0x18(%r14)
	movq 0x18(%rbp),%r13
	movq %r13,0x20(%r14)
	movq 0x10(%rbp),%r13
	movq %r13,0x28(%r14)
	movq %r15,0x30(%r14)
	movq %r14,0x8(%rbp)
	movq $0x1,0x0(%rbp)
	movq $0x3,0x10(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x18(%rbp)
	jmp foreachFuncLabelVar_0
.p2align 0x4
.long 0xC07
L_81574:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x70(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_81575
L_81577:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_81578+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_81578
.p2align 0x4
.long 0xC14
L_81578:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_81575:
	movq $0x1E61,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x10(%r15)
	jmp L_81576
.p2align 0x4
.long 0x7FA
L_81660:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x80(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_81661
L_81662:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_81663+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_81663
.p2align 0x4
.long 0x803
L_81663:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_81661:
	movq $0x1E6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x30,%r12
	movq 0x80(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x20(%r15)
	jmp L_81576
.p2align 0x4
.long 0xC07
L_81645:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x70(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_81646
L_81655:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_81656+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_81656
.p2align 0x4
.long 0xC14
L_81656:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_81646:
	movq 0x60(%rbp),%r13
	cmpq $0x1,%r13
	je L_407759
	cmpq $0x2,%r13
	je L_407758
L_81647:
	movq 0x8(%r13),%r15
	movq 0x0(%r13),%r14
	cmpq $0x1,%r15
	je L_407757
	cmpq $0x2,%r15
	je L_407756
L_81649:
	movq $0x23B5,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq %r13,%r15
L_81650:
	movq $0x1E6B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movq 0x70(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x68(%rbp),%r13
	movq %r13,0x8(%r14)
	movq %r14,%r15
	jmp L_81576
.p2align 0x4
L_407756:
L_81652:
	movq $0x2,%r15
	jmp L_81649
.p2align 0x4
L_407757:
L_81651:
	movq $0x1,%r15
	jmp L_81649
.p2align 0x4
L_407758:
L_81654:
	movq $0x2,%r15
	jmp L_81650
.p2align 0x4
L_407759:
L_81653:
	movq $0x1,%r15
	jmp L_81650
.p2align 0x4
.long 0x7FA
L_81601:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x80(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_81602
L_81640:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_81641+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_81641
.p2align 0x4
.long 0x803
L_81641:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_81602:
	movq 0x80(%rbp),%r15
	movq 0x8(%r15),%r14
	cmpq $0x1,%r14
	je bug_189
L_81603:
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	movq %r15,0x80(%rbp)
	je bug_702
L_81604:
	movq 0x70(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1208,%r14
	je L_407767
L_81615:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x78(%rbp)
	cmpq %r15,%rdx
	movq %r14,0x60(%rbp)
	jne L_81565
L_81617:
	testq %rdx,%rdx
	jz L_407765
L_81618:
	cmpq $0x7FFFFFFF,%rdx
	ja L_407764
L_81619:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14DF,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_81620+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_81620
.p2align 0x4
.long 0x10F6
L_81620:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq %rax,0x70(%rbp)
L_81621:
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_940:
	cmpq 0x78(%rbp),%r15
	jnl L_407761
L_81628:
	movl %r15d,%r14d
	movslq %r14d,%r13
	movq 0x60(%rbp),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq 0x70(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r11,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_940
.p2align 0x4
L_407761:
L_81622:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_81623
L_81626:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_81627+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_81627
.p2align 0x4
.long 0x10F7
L_81627:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_81623:
	movq 0x70(%rbp),%r13
	movq $0xB03,0xFFFFFFFFFFFFFFF8(%r13)
	movq $0x2413,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r13,0x0(%r14)
	movq 0x68(%rbp),%r15
	cmpq $0x1,%r15
	je L_407762
L_81624:
L_81611:
	movq $0x1E69,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x20,%r12
	movq 0x80(%rbp),%r14
	movq %r14,0x10(%r13)
	movq %r13,%r15
	jmp L_81576
.p2align 0x4
L_407762:
L_81625:
	movq $0x1,%r13
	xchgq %r13,%r15
	jmp L_81611
.p2align 0x4
L_407764:
L_81629:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_407765:
L_81630:
	movq (globalObjptr+0x2310)(%rip),%r15
	movq %r15,0x70(%rbp)
	jmp L_81621
.p2align 0x4
L_407767:
L_81605:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r13,0x60(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_81565
L_81607:
	movl %r13d,0x98(%rbp)
	movq $0x397B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x90(%rbp)
	addq $0x10,%r12
	addq $0x90,%rbp
	leaq (L_81608+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_27
.p2align 0x4
bug_702:
bug_189:
	movq 0x60(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_81632+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
.long 0x9D3
L_81596:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_81597
L_81598:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_81599+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_81599
.p2align 0x4
.long 0x9DD
L_81599:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_81597:
	movq $0x1E67,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_81576
.p2align 0x4
.long 0x8EE
L_81589:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_81590
L_81591:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_81592+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_81592
.p2align 0x4
.long 0x900
L_81592:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_81590:
	movq $0x1E65,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_81576
.p2align 0x4
.long 0x8EE
L_81582:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_81583
L_81584:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_81585+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_81585
.p2align 0x4
.long 0x900
L_81585:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_81583:
	movq $0x1E63,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_81576
.p2align 0x4
.long 0x10F5
L_81608:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x70(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_81609
L_81613:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_81614+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_81614
.p2align 0x4
.long 0xC15
L_81614:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_81609:
	movq $0x2411,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x60(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x70(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x68(%rbp),%r15
	cmpq $0x1,%r15
	je L_407773
L_81610:
	jmp L_81611
.p2align 0x4
L_407773:
L_81612:
	movq $0x1,%r13
	xchgq %r13,%r15
	jmp L_81611
.p2align 0x4
.long 0x1
L_81632:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_81633
L_81637:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_81638+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_81638
.p2align 0x4
.long 0x451
L_81638:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_81633:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xEF88)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_190+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x1
bug_190:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_81634
L_81635:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_81636+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_81636
.p2align 0x4
.long 0x451
L_81636:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_81634:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl tabulate_26
.hidden tabulate_26
tabulate_26:
L_81672:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_81673
L_81783:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_81784+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_81784
.p2align 0x4
.long 0x457
L_81784:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_81673:
	movslq 0x8(%rbp),%rdx
	movq %rdx,0x10(%rbp)
	testq %rdx,%rdx
	jz L_407806
L_81674:
	cmpq $0x7FFFFFFF,%rdx
	ja L_407805
L_81675:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x147B,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_81676+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_81676
.p2align 0x4
.long 0x452
L_81676:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq %rax,0x8(%rbp)
L_81677:
	movq $0x0,0x18(%rbp)
.p2align 0x4,,0x7
loop_941:
	movq 0x18(%rbp),%r15
	cmpq 0x10(%rbp),%r15
	jnl L_407804
L_81679:
	movl %r15d,%r14d
	movq 0x0(%rbp),%r15
	cmpq $0x1,%r15
	je L_407803
L_81680:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%rax
	shrq $0x1,%rax
	subq $0x1C02,%rax
	cmpq $0x8,%rax
	ja L_407777
	leaq jumpTable_211(%rip),%rbx
	jmp *(%rbx,%rax,8)
.data
.p2align 0x4
jumpTable_211:
.quad L_407799,L_407795,L_407791,L_407790,L_407789,L_407788,L_407784,L_407780,L_407779
.text
.p2align 0x4
L_407777:
L_81681:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
.p2align 0x4,,0x7
L_81682:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_407778
.p2align 0x4,,0x7
L_81683:
	movq $0x16ED,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x8(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x18(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x18(%rbp)
	jmp loop_941
.p2align 0x4
L_407778:
L_81684:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_81685+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_81685
.p2align 0x4
.long 0x579
L_81685:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_81683
.p2align 0x4
L_407779:
L_81778:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x38(%rbp)
	movslq %r14d,%r13
	movq 0x8(%r15),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq 0x0(%r11),%r10
	movq %r10,0x30(%rbp)
	movq 0x8(%r11),%r10
	movq %r10,0x20(%rbp)
	addq $0x30,%rbp
	leaq (L_81779+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_80
.p2align 0x4
L_407780:
L_81773:
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r13
	movl 0x0(%r13),%ecx
.p2align 0x4,,0x7
loop_946:
	movq 0x0(%r15),%r14
	movslq %ecx,%r13
	movq 0x8(%r15),%r11
	movq 0x0(%r11,%r13,8),%r10
	cmpq $0x1,%r10
	jne L_407782
L_81776:
	incl %ecx
	jo L_407781
L_81777:
	jmp loop_946
.p2align 0x4
L_407781:
L_81688:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_407782:
L_81774:
	movq 0x8(%r10),%r15
	movq 0x0(%r10),%r13
	incl %ecx
	jo L_81688
L_81775:
	movl %ecx,0x0(%r14)
	movq %r15,0x20(%rbp)
	movq %r13,0x28(%rbp)
	jmp L_81682
.p2align 0x4
L_407784:
L_81768:
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r13
	movl 0x0(%r13),%ecx
.p2align 0x4,,0x7
loop_945:
	movq 0x0(%r15),%r14
	movslq %ecx,%r13
	movq 0x8(%r15),%r11
	movq 0x0(%r11,%r13,8),%r10
	cmpq $0x1,%r10
	jne L_407786
L_81771:
	incl %ecx
	jo L_81688
L_81772:
	jmp loop_945
.p2align 0x4
L_407786:
L_81769:
	movq 0x8(%r10),%r15
	movq 0x0(%r10),%r13
	incl %ecx
	jo L_81688
L_81770:
	movl %ecx,0x0(%r14)
	movq %r15,0x20(%rbp)
	movq %r13,0x28(%rbp)
	jmp L_81682
.p2align 0x4
L_407788:
L_81765:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x40(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x20(%rbp)
	movslq %r14d,%r13
	movq 0x10(%r15),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x28(%rbp)
	movq %r10,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_81766+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1374
.p2align 0x4
L_407789:
L_81764:
	movslq %r14d,%r15
	movq 0x0(%rbp),%r14
	movq 0x8(%r14),%r13
	movq 0x0(%r13,%r15,8),%r11
	movq %r11,0x28(%rbp)
	movq 0x0(%r14),%r13
	movq 0x0(%r13,%r15,8),%r11
	movq %r11,0x20(%rbp)
	jmp L_81682
.p2align 0x4
L_407790:
L_81702:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x28(%rbp)
	movslq %r14d,%r13
	movq 0x18(%r15),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x30(%rbp)
	movq 0x10(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x58(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x38(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x40(%rbp)
	movq %r10,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_81703+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1376
.p2align 0x4
L_407791:
L_81697:
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r13
	movl 0x0(%r13),%ecx
.p2align 0x4,,0x7
loop_944:
	movq 0x0(%r15),%r14
	movslq %ecx,%r13
	movq 0x8(%r15),%r11
	movq 0x0(%r11,%r13,8),%r10
	cmpq $0x1,%r10
	jne L_407793
L_81700:
	incl %ecx
	jo L_81688
L_81701:
	jmp loop_944
.p2align 0x4
L_407793:
L_81698:
	movq 0x8(%r10),%r15
	movq 0x0(%r10),%r13
	incl %ecx
	jo L_81688
L_81699:
	movl %ecx,0x0(%r14)
	movq %r15,0x20(%rbp)
	movq %r13,0x28(%rbp)
	jmp L_81682
.p2align 0x4
L_407795:
L_81692:
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r13
	movl 0x0(%r13),%ecx
.p2align 0x4,,0x7
loop_943:
	movq 0x0(%r15),%r14
	movslq %ecx,%r13
	movq 0x8(%r15),%r11
	movq 0x0(%r11,%r13,8),%r10
	cmpq $0x1,%r10
	jne L_407797
L_81695:
	incl %ecx
	jo L_81688
L_81696:
	jmp loop_943
.p2align 0x4
L_407797:
L_81693:
	movq 0x8(%r10),%r15
	movq 0x0(%r10),%r13
	incl %ecx
	jo L_81688
L_81694:
	movl %ecx,0x0(%r14)
	movq %r15,0x20(%rbp)
	movq %r13,0x28(%rbp)
	jmp L_81682
.p2align 0x4
L_407799:
L_81686:
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r13
	movl 0x0(%r13),%ecx
.p2align 0x4,,0x7
loop_942:
	movq 0x0(%r15),%r14
	movslq %ecx,%r13
	movq 0x8(%r15),%r11
	movq 0x0(%r11,%r13,8),%r10
	cmpq $0x1,%r10
	jne L_407801
L_81690:
	incl %ecx
	jo L_81688
L_81691:
	jmp loop_942
.p2align 0x4
L_407801:
L_81687:
	movq 0x8(%r10),%r15
	movq 0x0(%r10),%r13
	incl %ecx
	jo L_81688
L_81689:
	movl %ecx,0x0(%r14)
	movq %r15,0x20(%rbp)
	movq %r13,0x28(%rbp)
	jmp L_81682
.p2align 0x4
L_407803:
L_81780:
	movq (globalObjptr+0x4A0)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_407804:
L_81678:
	movq 0x8(%rbp),%r14
	movq $0x1F,0xFFFFFFFFFFFFFFF8(%r14)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_407805:
L_81781:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_407806:
L_81782:
	movq (globalObjptr+0xC48)(%rip),%r15
	movq %r15,0x8(%rbp)
	jmp L_81677
.p2align 0x4
.long 0x456
L_81779:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq 0x20(%rbp),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_81682
.p2align 0x4
.long 0x557
L_81766:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq %r15,0x38(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_81767+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp valueType_1
.p2align 0x4
.long 0x528
L_81703:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xF40,%r14
	je L_407808
L_81704:
	movq %r15,0x50(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_81705+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp finalType_0
.p2align 0x4
L_407808:
L_81745:
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_81746+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp value_1
.p2align 0x4
.long 0x56C
L_81767:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x20(%rbp)
	jmp L_81682
.p2align 0x4
.long 0x570
L_81705:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_81706
L_81743:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_81744+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_81744
.p2align 0x4
.long 0xF84
L_81744:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_81706:
	movq $0x1E77,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x48(%rbp)
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1,0x58(%rbp)
	movl $0x0,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_81707+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_28
.p2align 0x4
.long 0x597
L_81746:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0x88(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_81747
L_81762:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_81763+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_81763
.p2align 0x4
.long 0x10FD
L_81763:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_81747:
	movq 0x68(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	jne L_407812
L_81749:
	movq 0x50(%rbp),%r13
	movb 0x0(%r13),%r15b
	testb %r15b,%r15b
	jnz L_407810
L_81750:
	movq 0x48(%rbp),%r15
	movq %r15,0x98(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0xA0(%rbp)
	addq $0x98,%rbp
	leaq (L_81751+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp finalType_0
.p2align 0x4
L_407810:
L_81761:
	movq $0x1,0x48(%rbp)
L_81753:
	movq 0x88(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_407811
L_81755:
	movl %r13d,0x80(%rbp)
	movq $0x395B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x78(%rbp)
	addq $0x78,%rbp
	leaq (x_239+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_28
.p2align 0x4
L_407811:
L_81754:
	movq (globalObjptr+0x4D8)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_407812:
	movq %r14,%r15
L_81709:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	cmpq $0x1,%r13
	je L_407825
L_81710:
	movq 0x0(%r13),%r15
	movq $0x1E77,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x18,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x8(%r13)
	movq $0x12AD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	movq %r15,0x38(%rbp)
	addq $0x18,%r12
L_81711:
	movq 0x40(%rbp),%r11
	movq 0x8(%r11),%r10
	movq 0x8(%r10),%r9
	movq %r9,0x48(%rbp)
	movq 0x0(%r10),%r14
	movq 0x30(%rbp),%r11
	movq 0x10(%r11),%r10
	movq %r10,0x50(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_407824
L_81713:
	movq %r15,0x0(%r11)
	movq 0x0(%r10),%r11
	cmpq $0x1,%r11
	je L_407823
L_81714:
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r11
	xorl %ecx,%ecx
	movq %r11,%r15
.p2align 0x4,,0x7
L_81716:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_407822
L_81732:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xD47,%r11
	jne L_407821
L_81733:
	cmpq %r14,0x0(%r13)
	movq %r14,(localObjptr+0x8)(%rip)
	je L_407818
L_81717:
	incl %ecx
	movl %ecx,0x40(%rbp)
	jo L_81688
L_81718:
	cmpq $0x1,%r15
	je L_407813
L_81719:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x8)(%rip),%r14
	jmp L_81716
.p2align 0x4
L_407813:
L_81720:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_81721
L_81730:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_81731+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_81731
.p2align 0x4
.long 0x10F8
L_81731:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_81721:
	movl 0x40(%rbp),%ecx
L_81722:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_407815
L_81724:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_81726
L_81729:
	movl %ecx,0x0(%r15)
L_81726:
	movq $0x1A8F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x50(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	movq 0x30(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_81727+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1376
.p2align 0x4
L_407815:
L_81723:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_407818:
L_81735:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_81723
L_81736:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_407819
L_81738:
	movl %ecx,0x0(%r15)
	movq (globalObjptr+0x578)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_407819:
L_81737:
	movq (globalObjptr+0x578)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_407821:
	movq %r14,(localObjptr+0x8)(%rip)
	jmp L_81717
.p2align 0x4
L_407822:
	movq %r14,(localObjptr+0x8)(%rip)
	jmp L_81717
.p2align 0x4
L_407823:
L_81739:
	xorl %ecx,%ecx
	jmp L_81722
.p2align 0x4
L_407824:
L_81712:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_407825:
L_81740:
	movq %r15,0x38(%rbp)
	jmp L_81711
.p2align 0x4
.long 0x5C9
L_81707:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_81708
L_81741:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_81742+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_81742
.p2align 0x4
.long 0x5A2
L_81742:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_81708:
	movq $0x12AD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_81709
.p2align 0x4
.long 0x10F9
L_81751:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_81752
L_81759:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_81760+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_81760
.p2align 0x4
.long 0x10FC
L_81760:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_81752:
	movq $0x1E77,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq %r15,0x48(%rbp)
	jmp L_81753
.p2align 0x4
.long 0x10FA
x_239:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_81756
L_81757:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_81758+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_81758
.p2align 0x4
.long 0x10FB
L_81758:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_81756:
	movq $0x12AD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp L_81709
.p2align 0x4
.long 0x56E
L_81727:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq %r15,0x40(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_81728+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp finalType_0
.p2align 0x4
.long 0x568
L_81728:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_81682
.text
.p2align 0x4
.globl x_1376
.hidden x_1376
x_1376:
L_81785:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_81786
L_81839:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_81840+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_81840
.p2align 0x4
.long 0x45F
L_81840:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_81786:
	movq 0x8(%rbp),%r10
	movq 0x8(%r10),%r9
	movq 0x8(%r9),%r11
	movq 0x0(%r9),%r13
	movq 0x0(%rbp),%r10
	movq 0x10(%r10),%r15
	movq (globalObjptr+0x1068)(%rip),%r10
	movq 0x0(%r10),%r14
	incq %r14
	jo L_407839
L_81788:
	movq %r14,0x0(%r10)
	movq 0x0(%r15),%r10
	cmpq $0x1,%r10
	je L_407838
L_81789:
	movq 0x0(%r10),%r14
	movq 0x8(%r10),%r10
	xorl %ecx,%ecx
	movq %r10,%r15
.p2align 0x4,,0x7
L_81791:
	movq %r14,%r10
	andq $0x3,%r10
	jnz L_407837
L_81831:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r10
	shrq $0x1,%r10
	cmpq $0xD44,%r10
	jne L_407836
L_81832:
	movq 0x8(%r14),%r10
	cmpq 0x0(%r14),%r11
	movq %r11,(localObjptr+0x8)(%rip)
	je L_407833
L_81792:
	incl %ecx
	jo L_407832
L_81794:
	cmpq $0x1,%r15
	je L_407830
L_81795:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq (localObjptr+0x8)(%rip),%r11
	jmp L_81791
.p2align 0x4
L_407830:
L_81796:
L_81797:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_407831
L_81799:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl x_240
L_81830:
	movl %ecx,0x0(%r15)
x_240:
	movq %r13,0x10(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_81801+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_407831:
L_81798:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_407832:
L_81793:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_407833:
L_81834:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_81798
L_81835:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_407834
L_81837:
	movl %ecx,0x0(%r15)
	movq %r10,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_407834:
L_81836:
	movq %r10,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_407836:
	movq %r11,(localObjptr+0x8)(%rip)
	jmp L_81792
.p2align 0x4
L_407837:
	movq %r11,(localObjptr+0x8)(%rip)
	jmp L_81792
.p2align 0x4
L_407838:
L_81838:
	xorl %ecx,%ecx
	jmp L_81797
.p2align 0x4
L_407839:
L_81787:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_81801:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_81802+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1
L_81802:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_81803+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4AF
L_81803:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xEF78)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_81804+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5AF
L_81804:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_81805+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x51E
L_81805:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_81806
L_81828:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_81829+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_81829
.p2align 0x4
.long 0x4AE
L_81829:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_81806:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_81807:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_81793
L_81808:
	cmpq $0x1,%r14
	je L_407841
L_81809:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_81807
.p2align 0x4
L_407841:
L_81810:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_81811
L_81826:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_81827+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_81827
.p2align 0x4
.long 0x4E6
L_81827:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_81811:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_407842
L_81812:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
toString_112:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	addq $0x8,%rbp
	leaq (rev_112+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_407842:
L_81825:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_112
.p2align 0x4
.long 0x1
rev_112:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_407848
L_81813:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_81814:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_407847
.p2align 0x4,,0x7
L_81815:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_407846
L_81816:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_81814
.p2align 0x4
L_407846:
L_81818:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_191+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_407847:
L_81822:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_81823+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_81823
.p2align 0x4
.long 0x45B
L_81823:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_81815
.p2align 0x4
L_407848:
L_81824:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_81818
.p2align 0x4
.long 0x1
bug_191:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_81819
L_81820:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_81821+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_81821
.p2align 0x4
.long 0x451
L_81821:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_81819:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl finalType_0
.hidden finalType_0
finalType_0:
L_81841:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_81842
L_81856:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_81857+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_81857
.p2align 0x4
.long 0x45F
L_81857:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_81842:
	movq 0x8(%rbp),%r15
	movq 0x70(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xF40,%r13
	je L_407851
	cmpq $0xF41,%r13
	je L_407850
L_81843:
	movq 0x0(%r14),%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_81844+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp finalType_0
.p2align 0x4
L_407850:
L_81855:
	movq 0x0(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_407851:
L_81848:
	movq %r14,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_81849+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp value_1
.p2align 0x4
.long 0x2B
L_81844:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_81845
L_81846:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_81847+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_81847
.p2align 0x4
.long 0x2C
L_81847:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_81845:
	movq 0x10(%rbp),%r15
	movl 0x0(%r15),%r14d
	movq 0x8(%r15),%r15
	movq %r15,0x10(%rbp)
	movq 0x18(%rbp),%r15
	xorl 0x0(%r15),%r14d
	movl %r14d,0x8(%rbp)
	movq $0x1E49,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	jmp lookup_2
.p2align 0x4
.long 0x5AF
L_81849:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x30(%rbp),%r14
	movq %r14,0x28(%rbp)
	movq 0x38(%rbp),%r14
	movq %r14,0x30(%rbp)
	movq 0x40(%rbp),%r14
	movq %r14,0x38(%rbp)
	movq 0x48(%rbp),%r14
	movq %r14,0x40(%rbp)
	movq 0x50(%rbp),%r14
	movq %r14,0x48(%rbp)
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_407854
L_81850:
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_407854:
L_81851:
	movq 0x0(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_81852+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp finalTypes_0
.p2align 0x4
.long 0x459
L_81852:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq $0x0,0xFFFFFFFFFFFFFFF0(%r15)
	ja L_407855
L_81853:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_407855:
L_81854:
	movq 0x28(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x20(%rbp),%r15
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl value_1
.hidden value_1
value_1:
L_81858:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_81859
L_81895:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_81896+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_81896
.p2align 0x4
.long 0x451
L_81896:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_81859:
	movq 0x0(%rbp),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_81860+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_9
.p2align 0x4
.long 0x4AF
L_81860:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r15,0x8(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1458,%r15
	jne L_407865
L_81862:
	movq 0x8(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1436,%r14
	je L_407857
L_81894:
	movq 0x38(%r15),%r14
	movq %r14,0x0(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x8(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_407857:
L_81863:
	movq 0x8(%r15),%r14
	movq %r14,0x8(%rbp)
	movq 0x0(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x10(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x18(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movl %r15d,%r14d
	movslq %r14d,%r11
	movq %r11,0x20(%rbp)
	cmpq %r11,%r15
	je L_407858
L_81864:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_407858:
L_81865:
	movq 0x20(%rbp),%rdx
	testq %rdx,%rdx
	jz L_407864
L_81866:
	cmpq $0x7FFFFFFF,%rdx
	ja L_407863
L_81867:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14F1,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_81868+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_81868
.p2align 0x4
.long 0x4DF
L_81868:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq %rax,0x28(%rbp)
L_81869:
	movq $0x0,0x30(%rbp)
.p2align 0x4,,0x7
loop_947:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_407862
.p2align 0x4,,0x7
L_81870:
	movq 0x30(%rbp),%r14
	cmpq 0x20(%rbp),%r14
	jnl L_407861
L_81883:
	movl %r14d,%r13d
	movslq %r13d,%r15
	movq %r15,%r14
	salq $0x4,%r14
	movq 0x18(%rbp),%r13
	movl 0x0(%r13,%r14,1),%r11d
	movl %r11d,0x38(%rbp)
	salq $0x4,%r15
	movq 0x8(%r13,%r15,1),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x13A1,%r15
	je L_407859
L_81889:
	movq 0x0(%r14),%r14
	movq %r14,%r15
.p2align 0x4,,0x7
L_81887:
	movq 0x30(%rbp),%r14
	movq %r14,%r13
	salq $0x4,%r13
	movq 0x28(%rbp),%r11
	movl 0x38(%rbp),%r10d
	movl %r10d,0x0(%r11,%r13,1)
	movq %r11,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r14,%r13
	salq $0x4,%r13
	movq %r15,0x8(%r11,%r13,1)
	incq %r14
	movq %r14,0x30(%rbp)
	jmp loop_947
.p2align 0x4
L_407859:
L_81884:
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x20D6,%r14
	je L_407860
L_81888:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq $0x1011,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	movq %r14,0x10(%r15)
	addq $0x20,%r12
	movq $0x7FFFFFFF,0x0(%r15)
	movq $0x100F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x286D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq $0x28B1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x1E81,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
	jmp L_81887
.p2align 0x4
L_407860:
L_81885:
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_81886+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1381
.p2align 0x4
L_407861:
L_81871:
	movq 0x28(%rbp),%r15
	movq $0xBBB,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x10(%rbp),%r13
	movq %r13,0x18(%rbp)
	movq %r15,0x20(%rbp)
	addq $0x18,%rbp
	leaq (L_81872+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp objectFields_0
.p2align 0x4
L_407862:
L_81890:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_81891+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_81891
.p2align 0x4
.long 0xF77
L_81891:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_81870
.p2align 0x4
L_407863:
L_81892:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_407864:
L_81893:
	movq (globalObjptr+0x1668)(%rip),%r15
	movq %r15,0x28(%rbp)
	jmp L_81869
.p2align 0x4
L_407865:
L_81861:
	movq (globalObjptr+0x1500)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x10FE
L_81886:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	jmp L_81887
.p2align 0x4
.long 0x5AF
L_81872:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_81873
L_81881:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_81882+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_81882
.p2align 0x4
.long 0x80A
L_81882:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_81873:
	movq $0x286F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x20(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x28(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x30(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x38(%r15)
	movq 0x0(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_81874+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_9
.p2align 0x4
.long 0x8A6
L_81874:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_81875
L_81879:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_81880+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_81880
.p2align 0x4
.long 0x9E0
L_81880:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_81875:
	movq 0x58(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x1458,%r13
	jne L_407867
L_81877:
	movl 0x0(%r14),%r13d
	movq $0x28B1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %r13d,0x0(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq 0x50(%rbp),%r13
	movq %r13,0x8(%r14)
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x58(%rbp)
	movq $0x3205,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_81878+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3845
.p2align 0x4
L_407867:
L_81876:
	movq (globalObjptr+0x1508)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x98A
L_81878:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x38(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl objectFields_0
.hidden objectFields_0
objectFields_0:
L_81897:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_81942
L_81898:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_407885
L_81899:
	cmpq $0x1,0x0(%rbp)
	je L_81908
L_81901:
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x10(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_81903
L_81904:
	cmpl $0x0,%r13d
	jl L_407882
L_81905:
	movl $0x0,0x14(%rbp)
.p2align 0x4,,0x7
loop_948:
	movl 0x14(%rbp),%r15d
	cmpl 0x10(%rbp),%r15d
	jnl L_407870
L_81934:
	movslq %r15d,%r14
	movq %r14,%r15
	salq $0x4,%r15
	salq $0x4,%r14
	movq 0x8(%rbp),%r13
	movq 0x8(%r13,%r14,1),%r11
	movl 0x0(%r13,%r15,1),%r14d
	testl %r14d,%r14d
	jz L_407869
.p2align 0x4,,0x7
L_81937:
	incl 0x14(%rbp)
	jmp loop_948
.p2align 0x4
L_407869:
L_81935:
	movq %r11,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_81936+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp dontFlatten_2
.p2align 0x4
L_407870:
L_81906:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_81908
L_81932:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r14d
	movl %r14d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r14
	movq %r14,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_81933+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_81933
.p2align 0x4
.long 0x45F
L_81933:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_81908:
	movq 0x8(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%ecx
	movslq %ecx,%r14
	cmpq %r14,%r15
	jne L_407880
L_81910:
	testl %ecx,%ecx
	jz L_81920
L_81911:
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_949:
	cmpl %ebx,%ecx
	je L_407875
L_81912:
	movslq %ebx,%r14
	cmpq %r15,%r14
	jnb L_407874
L_81914:
	salq $0x4,%r14
	movq 0x8(%rbp),%r13
	movl 0x0(%r13,%r14,1),%r11d
	testl %r11d,%r11d
	jnz L_407872
L_81915:
	incl %ebx
	jo L_407871
L_81917:
	jmp loop_949
.p2align 0x4
L_407871:
L_81916:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_407872:
L_81918:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_81920
L_81922:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_81923+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_81923
.p2align 0x4
.long 0x45F
L_81923:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_81920:
	xorb %dl,%dl
L_81921:
	movq $0xDCB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq %r15,0x30(%rbp)
	movq $0xD8B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq %r15,0x20(%rbp)
	movq $0x100D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq %r15,0x18(%rbp)
	movq $0xD8D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq %r15,0x10(%rbp)
	movq $0xD89,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0xDC9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movzbl %dl,%r13d
	movl %r13d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x0(%rbp),%r13
	movq %r13,0x28(%rbp)
	movq %r14,0x0(%rbp)
	movq 0x8(%rbp),%r14
	movq %r14,0x38(%rbp)
	movq %r15,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_407874:
L_81913:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_407875:
L_81924:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_81925
L_81929:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_81930+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_81930
.p2align 0x4
.long 0x45F
L_81930:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_81925:
	movq 0x0(%rbp),%r15
	cmpq $0x1,%r15
	je L_81920
	cmpq $0x2,%r15
	je L_407876
L_81926:
	xorb %dl,%dl
	jmp L_81921
.p2align 0x4
L_407876:
L_81928:
	movb $0x1,%dl
	jmp L_81921
.p2align 0x4
L_407880:
L_81903:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_407882:
L_81939:
	movq (globalObjptr+0x4F8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_407885:
L_81942:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_81943+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_81943
.p2align 0x4
.long 0x45F
L_81943:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_81899
.p2align 0x4
.long 0x523
L_81936:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_81937
