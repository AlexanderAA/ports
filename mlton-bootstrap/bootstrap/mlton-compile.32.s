/* MLton 20130715 (built Mon Jun 13 11:54:01 AEST 2016 on ports.extensibl.com) */
/*   created this file on Mon Jun 13 12:09:03 2016. */
/* Do not edit this file. */
/* Flag settings:  */
/*    align: 8 */
/*    atMLtons: (mlton-compile, @MLton, --) */
/*    chunk: chunk per function */
/*    closureConvertGlobalize: true */
/*    closureConvertShrink: true */
/*    codegen: amd64 */
/*    contifyIntoMain: false */
/*    debug: false */
/*    defaultChar: char8 */
/*    defaultWideChar: widechar32 */
/*    defaultInt: int32 */
/*    defaultReal: real64 */
/*    defaultWord: word32 */
/*    diag passes: [] */
/*    drop passes: [] */
/*    elaborate allowConstant (default): false */
/*    elaborate allowConstant (enabled): true */
/*    elaborate allowFFI (default): false */
/*    elaborate allowFFI (enabled): true */
/*    elaborate allowPrim (default): false */
/*    elaborate allowPrim (enabled): true */
/*    elaborate allowOverload (default): false */
/*    elaborate allowOverload (enabled): true */
/*    elaborate allowRebindEquals (default): false */
/*    elaborate allowRebindEquals (enabled): true */
/*    elaborate deadCode (default): false */
/*    elaborate deadCode (enabled): true */
/*    elaborate forceUsed (default): false */
/*    elaborate forceUsed (enabled): true */
/*    elaborate ffiStr (default):  */
/*    elaborate ffiStr (enabled): true */
/*    elaborate nonexhaustiveExnMatch (default): default */
/*    elaborate nonexhaustiveExnMatch (enabled): true */
/*    elaborate nonexhaustiveMatch (default): warn */
/*    elaborate nonexhaustiveMatch (enabled): true */
/*    elaborate redundantMatch (default): warn */
/*    elaborate redundantMatch (enabled): true */
/*    elaborate resolveScope (default): strdec */
/*    elaborate resolveScope (enabled): true */
/*    elaborate sequenceNonUnit (default): warn */
/*    elaborate sequenceNonUnit (enabled): true */
/*    elaborate warnUnused (default): true */
/*    elaborate warnUnused (enabled): true */
/*    elaborate only: false */
/*    emit main: true */
/*    export header: None */
/*    exn history: false */
/*    generated output format: executable */
/*    gc check: Limit */
/*    indentation: 3 */
/*    inlineIntoMain: true */
/*    inlineLeafA: {loops = true, repeat = true, size = Some 20} */
/*    inlineLeafB: {loops = true, repeat = true, size = Some 40} */
/*    inlineNonRec: {small = 60, product = 320} */
/*    input file: mlton */
/*    keep CoreML: false */
/*    keep def use: true */
/*    keep dot: false */
/*    keep Machine: false */
/*    keep passes: [] */
/*    keep RSSA: false */
/*    keep SSA: false */
/*    keep SSA2: false */
/*    keep SXML: false */
/*    keep XML: false */
/*    extra_: false */
/*    lib dir: /usr/ports/pobj/mlton-20130715/mlton-on-20130715-release/build/lib */
/*    lib target dir: /usr/ports/pobj/mlton-20130715/mlton-on-20130715-release/build/lib/targets/self */
/*    loop passes: 1 */
/*    mark cards: true */
/*    max function size: 10000 */
/*    mlb path vars: [{var = MLTON_ROOT, path = $(LIB_MLTON_DIR)/sml}, {var = SML_LIB, path = $(LIB_MLTON_DIR)/sml}] */
/*    native commented: 0 */
/*    native live stack: false */
/*    native optimize: 1 */
/*    native move hoist: true */
/*    native copy prop: true */
/*    native copy prop cutoff: 1000 */
/*    native cutoff: 100 */
/*    native live transfer: 8 */
/*    native shuffle: true */
/*    native ieee fp: false */
/*    native split: Some 20000 */
/*    optimizationPasses: [<ssa2::default>, <ssa::default>, <sxml::default>, <xml::default>] */
/*    polyvariance: Some {hofo = true, rounds = 2, small = 30, product = 300} */
/*    prefer abs paths: false */
/*    prof passes: [] */
/*    profile: None */
/*    profile branch: false */
/*    profile C: [] */
/*    profile IL: ProfileSource */
/*    profile include/exclude: [(Seq [Star [.], Or [Seq [Seq [[$], [(], [S], [M], [L], [_], [L], [I], [B], [)]]]], Star [.]], false)] */
/*    profile raise: false */
/*    profile stack: false */
/*    profile val: false */
/*    show basis: None */
/*    show def-use: None */
/*    show types: true */
/*    target: self */
/*    target arch: AMD64 */
/*    target OS: OpenBSD */
/*    type check: false */
/*    verbosity: Pass */
/*    warn unrecognized annotation: true */
/*    warn deprecated features: true */
/*    zone cut depth: 100 */
.text
.p2align 0x4
.globl peek_6
.hidden peek_6
peek_6:
L_102746:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_102747
L_102773:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_102774+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_102774
.p2align 0x4
.long 0x45F
L_102774:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_102747:
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_416367
L_102749:
	movq %r15,0x0(%r13)
	movq 0x0(%rbp),%r13
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_416366
L_102750:
	movq 0x0(%r11),%r14
	movq 0x8(%r11),%r11
	xorl %ecx,%ecx
	movq %r11,%r15
.p2align 0x4,,0x7
L_102752:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_102753
L_102764:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xCAB,%r13
	jne L_102753
L_102765:
	movq 0x8(%r14),%r13
	movq 0x8(%rbp),%r11
	cmpq %r11,0x0(%r14)
	je L_416361
L_102753:
	incl %ecx
	jo L_416360
L_102755:
	cmpq $0x1,%r15
	je L_416357
L_102756:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_102752
.p2align 0x4
L_416357:
L_102757:
L_102758:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_416359
L_102760:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_102762
L_102763:
	movl %ecx,0x0(%r15)
L_102762:
	movq $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_416359:
L_102759:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_416360:
L_102754:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_416361:
L_102767:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_102759
L_102768:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_416362
L_102771:
	movl %ecx,0x0(%r14)
	movq %r13,%r15
L_102770:
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_416362:
	movq %r13,%r15
	jmp L_102770
.p2align 0x4
L_416366:
L_102772:
	xorl %ecx,%ecx
	jmp L_102758
.p2align 0x4
L_416367:
L_102748:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl x_1491
.hidden x_1491
x_1491:
L_102775:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_102836
L_102776:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_416372
L_102777:
	movq 0x10(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x38(%r14),%r13
	movq 0x30(%r14),%r11
	movq %r11,0x18(%rbp)
	movq 0x28(%r14),%r10
	movq %r10,0x20(%rbp)
	movq 0x20(%r14),%r9
	movq %r9,0x28(%rbp)
	movq 0x18(%r14),%r9
	movq %r9,0x30(%rbp)
	movq 0x10(%r14),%r9
	movq %r9,0x38(%rbp)
	movq 0x8(%r14),%r9
	movq %r9,0x40(%rbp)
	movq 0x0(%r14),%r9
	movq %r9,0x48(%rbp)
	movq 0x40(%r14),%r9
	cmpb $0x7,0x0(%r9)
	je L_102780
L_102778:
	cmpb $0x2,0x0(%r13)
	jne L_416370
L_102781:
	movq 0x0(%r11),%r15
	movq %r15,0x10(%rbp)
	cmpq $0x1,%r15
	je L_416369
L_102782:
	movq 0x8(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq %r10,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_102783+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_45
.p2align 0x4
L_416369:
L_102788:
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x10(%rbp)
	movq 0x10(%r14),%r13
	movq %r13,0x50(%rbp)
	movq 0x18(%r14),%r13
	movq %r13,0x58(%rbp)
	movq 0x20(%r14),%r13
	movq %r13,0x60(%rbp)
	movl 0x0(%r14),%r13d
	movl %r13d,0x68(%rbp)
	movq 0x28(%r14),%r13
	movq %r13,0x70(%rbp)
	movq 0x30(%r14),%r11
	movq %r11,0x78(%rbp)
	movq $0x30D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x80(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x88(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x355B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x98(%rbp)
	movq %r13,0xA0(%rbp)
	addq $0x98,%rbp
	leaq (L_102789+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_4
.p2align 0x4
L_416370:
L_102780:
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_416372:
L_102836:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_102837+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_102837
.p2align 0x4
.long 0x45B
L_102837:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_102777
.p2align 0x4
.long 0x7EF
L_102783:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	movl 0x60(%rbp),%r15d
	movl %r15d,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_102784
L_102832:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_102833+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_102833
.p2align 0x4
.long 0x1433
L_102833:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_102784:
	movq $0xC3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x58(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x60(%rbp)
	movq $0x3E37,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x68(%rbp)
	movq (globalObjptr+0x9D8)(%rip),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_102785+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3780
.p2align 0x4
.long 0x17A1
L_102789:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_102790
L_102828:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_102829+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_102829
.p2align 0x4
.long 0x17AB
L_102829:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_102790:
	movq 0x70(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_416375
L_102792:
	movl %r13d,0xA0(%rbp)
	movq $0x3F39,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x60,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x30(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x88(%rbp),%r13
	movq %r13,0x10(%r14)
	movq 0x80(%rbp),%r13
	movq %r13,0x18(%r14)
	movq 0x38(%rbp),%r13
	movq %r13,0x20(%r14)
	movq 0x40(%rbp),%r13
	movq %r13,0x28(%r14)
	movq 0x58(%rbp),%r13
	movq %r13,0x30(%r14)
	movq 0x0(%rbp),%r13
	movq %r13,0x38(%r14)
	movq 0x10(%rbp),%r13
	movq %r13,0x40(%r14)
	movq 0x48(%rbp),%r13
	movq %r13,0x48(%r14)
	movq %r15,0x50(%r14)
	movq %r14,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_102793+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_5
.p2align 0x4
L_416375:
L_102791:
	movq (globalObjptr+0x4D8)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x7EF
L_102785:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x58(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_102786+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x17A2
L_102793:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_102794
L_102826:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_102827+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_102827
.p2align 0x4
.long 0x17AA
L_102827:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_102794:
	movq $0x3553,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x88(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x90(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x90,%rbp
	leaq (L_102795+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_4
.p2align 0x4
.long 0x57A
L_102786:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_102788
L_102830:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_102831+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_102831
.p2align 0x4
.long 0x59F
L_102831:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	jmp L_102788
.p2align 0x4
.long 0x17A3
L_102795:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_102796
L_102824:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_102825+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_102825
.p2align 0x4
.long 0x17A9
L_102825:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_102796:
	movq $0x2777,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x30(%rbp)
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq 0x80(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x30D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x38(%rbp)
	addq $0x10,%r12
	movq %r13,0x0(%r14)
	cmpq $0x1,%r13
	je L_416382
L_102797:
	movq 0x8(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_102798:
	incl %ecx
	movl %ecx,0x28(%rbp)
	jo L_416381
L_102800:
	cmpq $0x1,%r15
	je L_416379
L_102801:
	movq 0x8(%r15),%r15
	jmp L_102798
.p2align 0x4
L_416379:
L_102802:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_102803
L_102821:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_102822+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_102822
.p2align 0x4
.long 0x17A8
L_102822:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_102803:
	movl 0x28(%rbp),%ecx
L_102804:
	movl %ecx,0x90(%rbp)
	movq $0x3F35,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_102805+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_5
.p2align 0x4
L_416381:
L_102799:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_416382:
L_102823:
	xorl %ecx,%ecx
	jmp L_102804
.p2align 0x4
.long 0x17A4
L_102805:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_102806
L_102819:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_102820+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_102820
.p2align 0x4
.long 0x17A7
L_102820:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_102806:
	movq $0x2777,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_102807+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_3
.p2align 0x4
.long 0x17A5
L_102807:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_102808
L_102817:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_102818+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_102818
.p2align 0x4
.long 0x17A6
L_102818:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_102808:
	movq $0x721,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x40,%r12
	movl 0x68(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x20(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x28(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x30(%r15)
	movq $0x723,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq $0x7FFFFFFF,0x0(%r14)
	movq %r15,0x8(%r14)
	movq $0x2937,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq %r14,0x0(%r13)
	movq $0x725,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	addq $0x10,%r12
	movq $0x727,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r11,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq $0x729,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x30(%rbp)
	movq %r15,0x0(%r14)
	movq %r13,0x8(%r14)
	addq $0x18,%r12
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x38(%rbp)
	cmpq $0x1,%r13
	je L_416385
L_102809:
	movq %r14,0x48(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_102810+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_45
.p2align 0x4
L_416385:
L_102816:
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x7BF
L_102810:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	movl 0x50(%rbp),%r15d
	movl %r15d,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_102811
L_102814:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_102815+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_102815
.p2align 0x4
.long 0x99C
L_102815:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_102811:
	movq $0xC3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x48(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x50(%rbp)
	movq $0x3E37,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x58(%rbp)
	movq (globalObjptr+0x9D8)(%rip),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_102812+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3780
.p2align 0x4
.long 0x7BF
L_102812:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x40(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_102813+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x69B
L_102813:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl layout_45
.hidden layout_45
layout_45:
L_102838:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_102839
L_102962:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_102963+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_102963
.p2align 0x4
.long 0x45F
L_102963:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_102839:
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r13
	movq 0x28(%r13),%r11
	movq %r11,0x18(%rbp)
	movq 0x8(%r15),%r11
	movq 0x10(%r11),%r10
	movq %r10,0x20(%rbp)
	movq 0x8(%r11),%r10
	movq %r10,0x28(%rbp)
	movq 0x0(%r11),%r10
	movq %r10,0x30(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x38(%rbp)
	movq 0x10(%r13),%r15
	movq %r15,0x40(%rbp)
	movq 0x18(%r13),%r15
	movq %r15,0x48(%rbp)
	movq 0x20(%r13),%r15
	movq %r15,0x50(%rbp)
	movq 0x30(%r13),%r15
	movq %r15,0x58(%rbp)
	movq (globalObjptr+0xF1F0)(%rip),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_102840+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0xA45
L_102840:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_102841+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
.long 0x17AC
L_102841:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_102842+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x17AC
L_102842:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_102843+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0xA46
L_102843:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_102844
L_102960:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_102961+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_102961
.p2align 0x4
.long 0xA59
L_102961:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_102844:
	movq 0x58(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_416389
L_102847:
	movl %r13d,0x80(%rbp)
	movq $0x3B9B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x28,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x30(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x20(%rbp),%r13
	movq %r13,0x10(%r14)
	movq %r15,0x18(%r14)
	movq %r14,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_102848+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
L_416389:
L_102846:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x17AD
L_102848:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq %r15,0x78(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x80(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0x88(%rbp)
	movq (globalObjptr+0xD0F8)(%rip),%r15
	movq %r15,0x90(%rbp)
	addq $0x78,%rbp
	leaq (L_102849+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
.long 0x17AD
L_102849:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_102850
L_102958:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_102959+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_102959
.p2align 0x4
.long 0xA59
L_102959:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_102850:
	movq 0x30(%rbp),%r14
	movl 0x0(%r14),%r13d
	testl %r13d,%r13d
	jnz L_416391
L_102851:
	movq $0x1,%r15
	xorl %ecx,%ecx
L_102852:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x28(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0xAEC8)(%rip),%r15
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_102853+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_416391:
L_102889:
	movq (globalObjptr+0xA160)(%rip),%r15
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_102890+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x17AE
L_102853:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_102854+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
.long 0x17B3
L_102890:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq $0x1,0x48(%rbp)
	je L_416393
L_102891:
	movq (globalObjptr+0xDF50)(%rip),%r15
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_102892+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_416393:
L_102953:
	movq (globalObjptr+0xDF58)(%rip),%r15
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_102954+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x17AF
L_102854:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_102855+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0xDFB
L_102892:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x70(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_102893
L_102951:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_102952+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_102952
.p2align 0x4
.long 0xDFE
L_102952:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_102893:
	movq 0x48(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_102846
L_102895:
	movl %r13d,0x88(%rbp)
	movq $0x3C35,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_102896+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
.long 0x17BC
L_102954:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_102955
L_102956:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_102957+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_102957
.p2align 0x4
.long 0xA59
L_102957:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_102955:
	movq 0x48(%rbp),%r15
L_102905:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x48(%rbp)
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xF1F8)(%rip),%r15
	movq %r15,0x8(%r14)
	cmpq $0x1,0x40(%rbp)
	je L_416396
L_102906:
	movq (globalObjptr+0xDF50)(%rip),%r15
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_102907+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_416396:
L_102941:
	movq (globalObjptr+0xDF58)(%rip),%r15
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_102942+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x17AF
L_102855:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xEAA0)(%rip),%r15
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_102856+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x17B4
L_102896:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq %r15,0x80(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x88(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0x90(%rbp)
	movq (globalObjptr+0xD0F8)(%rip),%r15
	movq %r15,0x98(%rbp)
	addq $0x80,%rbp
	leaq (L_102897+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
.long 0xDFB
L_102907:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x70(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_102908
L_102939:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_102940+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_102940
.p2align 0x4
.long 0xDFE
L_102940:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_102908:
	movq 0x40(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_102846
L_102910:
	movl %r13d,0x88(%rbp)
	movq $0x3B99,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_102911+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
.long 0x17BA
L_102942:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_102943
L_102944:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_102945+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_102945
.p2align 0x4
.long 0xF4C
L_102945:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_102943:
	movq 0x28(%rbp),%r15
L_102920:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xF090)(%rip),%r15
	movq %r15,0x8(%r14)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x48(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_102921+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp record_3
.p2align 0x4
.long 0x17B0
L_102856:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_102857
L_102887:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_102888+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_102888
.p2align 0x4
.long 0x17B2
L_102888:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_102857:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x58(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x68(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x40(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x60(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_102858:
	addl 0x0(%r15),%ecx
	movl %ecx,0x20(%rbp)
	jo L_416405
L_102860:
	cmpq $0x1,%r14
	je L_416401
L_102861:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_102858
.p2align 0x4
L_416401:
L_102862:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_102863
L_102885:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_102886+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_102886
.p2align 0x4
.long 0x17B1
L_102886:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_102863:
	movl 0x20(%rbp),%ecx
	testl %ecx,%ecx
	jz L_416403
L_102864:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
L_102865:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x20(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq 0x18(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_102846
L_102867:
	movl %r13d,0x38(%rbp)
	movq $0x3C37,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_102868+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
L_416403:
L_102884:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_102865
.p2align 0x4
L_416405:
L_102859:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x17B4
L_102897:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_102898
L_102949:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_102950+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_102950
.p2align 0x4
.long 0xDFE
L_102950:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_102898:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x78(%rbp)
	addq $0x18,%r12
	movq 0x70(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_102899:
	addl 0x0(%r15),%ecx
	movl %ecx,0x48(%rbp)
	jo L_102859
L_102900:
	cmpq $0x1,%r14
	je L_416407
L_102901:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_102899
.p2align 0x4
L_416407:
L_102902:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_102903
L_102947:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_102948+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_102948
.p2align 0x4
.long 0x17BB
L_102948:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_102903:
	movl 0x48(%rbp),%r15d
	testl %r15d,%r15d
	jz L_416408
L_102904:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x78(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,%r15
	jmp L_102905
.p2align 0x4
L_416408:
L_102946:
	movq (globalObjptr+0x9D0)(%rip),%r14
	movq %r14,%r15
	jmp L_102905
.p2align 0x4
.long 0x17B5
L_102911:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq %r15,0x80(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x88(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0x90(%rbp)
	movq (globalObjptr+0xD0F8)(%rip),%r15
	movq %r15,0x98(%rbp)
	addq $0x80,%rbp
	leaq (L_102912+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
.long 0x17B6
L_102921:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_102922
L_102932:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_102933+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_102933
.p2align 0x4
.long 0x17B2
L_102933:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_102922:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x40(%rbp)
	addq $0x18,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_102923:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_102859
L_102924:
	cmpq $0x1,%r14
	je L_416412
L_102925:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_102923
.p2align 0x4
L_416412:
L_102926:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_102927
L_102930:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_102931+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_102931
.p2align 0x4
.long 0x17B7
L_102931:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_102927:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_416413
L_102928:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_102852
.p2align 0x4
L_416413:
L_102929:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_102852
.p2align 0x4
.long 0x459
L_102868:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_102869+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3782
.p2align 0x4
.long 0x17B5
L_102912:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_102913
L_102937:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_102938+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_102938
.p2align 0x4
.long 0x17B9
L_102938:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_102913:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x40(%rbp)
	addq $0x18,%r12
	movq 0x70(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_102914:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_102859
L_102915:
	cmpq $0x1,%r14
	je L_416417
L_102916:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_102914
.p2align 0x4
L_416417:
L_102917:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_102918
L_102935:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_102936+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_102936
.p2align 0x4
.long 0x17B8
L_102936:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_102918:
	movl 0x28(%rbp),%r15d
	testl %r15d,%r15d
	jz L_416418
L_102919:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,%r15
	jmp L_102920
.p2align 0x4
L_416418:
L_102934:
	movq (globalObjptr+0x9D0)(%rip),%r14
	movq %r14,%r15
	jmp L_102920
.p2align 0x4
.long 0x459
L_102869:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movl 0x30(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_102870
L_102882:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_102883+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_102883
.p2align 0x4
.long 0x600
L_102883:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_102870:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_416423
L_102871:
	decl %ecx
	jo L_102859
L_102872:
	movq $0x1B67,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl $0x1,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
L_102873:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl %ecx,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x1B65,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movl $0x2,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_102874+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3782
.p2align 0x4
L_416423:
L_102881:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_102873
.p2align 0x4
.long 0x1
L_102874:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movl 0x8(%rbp),%r15d
	movl %r15d,0x0(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_102875
L_102879:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_102880+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_102880
.p2align 0x4
.long 0x494
L_102880:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_102875:
	movl 0x0(%rbp),%r15d
	testl %r15d,%r15d
	jz L_416426
L_102876:
	decl %r15d
	jo L_102859
L_102877:
	movq $0x1B67,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movl $0x1,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x8(%rbp),%r13
	movq %r13,0x8(%r14)
	movq %r14,0x0(%rbp)
	movl %r15d,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_416426:
L_102878:
	movq $0x1,0x0(%rbp)
	movl $0x0,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl loop_3854
.hidden loop_3854
loop_3854:
L_102964:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_102986
L_102965:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_416431
L_102966:
	movl 0x38(%rbp),%r15d
	movl 0x0(%rbp),%r14d
	cmpl %r14d,%r15d
	jl L_416430
L_102967:
	movslq %r14d,%r13
	movq 0x28(%rbp),%r11
	cmpq 0xFFFFFFFFFFFFFFF0(%r11),%r13
	jnb L_416429
L_102969:
	movq 0x0(%r11,%r13,8),%r10
	movq $0x1D8D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x20,%r12
	movl %r14d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq 0x20(%rbp),%r9
	movq %r9,0x8(%r13)
	movq %r10,0x10(%r13)
	movq $0x1D8D,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	addq $0x20,%r12
	movl %r14d,0x0(%r8)
	movl $0x0,0x4(%r8)
	movq 0x18(%rbp),%rsp
	movq %rsp,0x8(%r8)
	movq %r10,0x10(%r8)
	movq $0x4755,0x0(%r12)
	movq %r12,%rsi
	addq $0x8,%rsi
	movq %r8,0x0(%rsi)
	movq %r10,0x8(%rsi)
	addq $0x20,%r12
	movq 0x10(%rbp),%r10
	movq %r10,0x10(%rsi)
	movq $0x1D97,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r8,0x40(%rbp)
	movq %r13,0x0(%r8)
	movq %rsi,0x8(%r8)
	addq $0x18,%r12
	incl %r14d
	jo L_416428
L_102971:
	movl %r14d,0x50(%rbp)
	movq 0x8(%rbp),%r14
	movq %r14,0x58(%rbp)
	movq %r10,0x60(%rbp)
	movq %rsp,0x68(%rbp)
	movq %r9,0x70(%rbp)
	movq %r11,0x78(%rbp)
	movq 0x30(%rbp),%r14
	movq %r14,0x80(%rbp)
	movl %r15d,0x88(%rbp)
	addq $0x50,%rbp
	leaq (L_102972+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3854
.p2align 0x4
L_416428:
L_102970:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_416429:
L_102968:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_416430:
L_102985:
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_416431:
L_102986:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_102987+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_102987
.p2align 0x4
.long 0x73D
L_102987:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_102966
.p2align 0x4
.long 0xAA7
L_102972:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x8(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq $0x1,0x50(%rbp)
	movl $0x0,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_102973+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_4
.p2align 0x4
.long 0x70D
L_102973:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_102974
L_102983:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_102984+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_102984
.p2align 0x4
.long 0x86E
L_102984:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_102974:
	movq $0xBE7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x48(%rbp)
	addq $0x20,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x10(%r15)
	movq $0x1,0x58(%rbp)
	movl $0x0,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_102975+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_4
.p2align 0x4
.long 0x9AE
L_102975:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_102976
L_102981:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_102982+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_102982
.p2align 0x4
.long 0x4B5
L_102982:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_102976:
	movq $0xBE7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x10(%r15)
	movq $0x390F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x48(%rbp),%r15
	movq %r15,0x8(%r14)
	movq %r14,0x50(%rbp)
	movl $0x2,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_102977+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_29
.p2align 0x4
.long 0x868
L_102977:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_102978
L_102979:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_102980+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_102980
.p2align 0x4
.long 0x86A
L_102980:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_102978:
	movq $0x1DAD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1DA5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x28,%r12
	movq $0x1,0x8(%r14)
	movq 0x40(%rbp),%r15
	movq %r15,0x10(%r14)
	movq 0x30(%rbp),%r15
	movq %r15,0x18(%r14)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl vectorHashFunc_0
.hidden vectorHashFunc_0
vectorHashFunc_0:
L_102988:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_102989
L_103171:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_103172+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_103172
.p2align 0x4
.long 0x45F
L_103172:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_102989:
	movq 0x8(%rbp),%r15
	movq 0x108(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x100(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0xF8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0xF0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0xE8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0xE0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0xC8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0xC0(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0xA8(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0xA0(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x90(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x88(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x80(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x68(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x48(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x40(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x90(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x98(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq 0x110(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0xD0(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0xA8(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0xB0(%rbp)
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0xB8(%rbp)
	movq %r14,0xC8(%rbp)
	addq $0xC8,%rbp
	leaq (L_102990+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_6
.p2align 0x4
.long 0x17BD
L_102990:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0xC0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_102991
L_103169:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_103170+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_103170
.p2align 0x4
.long 0x1807
L_103170:
	addq $0xFFFFFFFFFFFFFF30,%rbp
L_102991:
	movq 0xC0(%rbp),%r15
	cmpq $0x1,%r15
	je L_416438
L_102992:
x_325:
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_416437
L_102993:
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_416437:
L_102994:
	movq 0x78(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC8,%rbp
	leaq (L_102995+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_416438:
L_103165:
	movq 0xA8(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x2087,%r13
	je L_416439
L_103168:
	movq 0x0(%r14),%r13
	movq 0x0(%r13),%r14
	movq $0x28DD,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x8(%r11)
	addq $0x18,%r12
	movq 0xB8(%rbp),%r14
	movq %r14,0x0(%r11)
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r14,1)
	movq %r11,0x0(%r13)
	movq $0x6F5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	xchgq %r14,%r15
L_103167:
	movq $0x1957,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0xB0(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq 0xB8(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r10,0x0(%r13)
	jmp x_325
.p2align 0x4
L_416439:
L_103166:
	movq 0x0(%r14),%r13
	movq 0x0(%r13),%r14
	movq $0x28DD,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x8(%r11)
	addq $0x18,%r12
	movq 0xB8(%rbp),%r14
	movq %r14,0x0(%r11)
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r14,1)
	movq %r11,0x0(%r13)
	movq $0x6F5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	xchgq %r14,%r15
	jmp L_103167
.p2align 0x4
.long 0x17BE
L_102995:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movl 0xC8(%rbp),%r15d
	movl %r15d,0xA8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_102996
L_103163:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_103164+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_103164
.p2align 0x4
.long 0x1806
L_103164:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_102996:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0xB0(%rbp)
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0xA8(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xF200)(%rip),%r15
	movq %r15,0x18(%r13)
	movq 0xB8(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC8,%rbp
	leaq (L_102997+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_6
.p2align 0x4
.long 0x17BF
L_102997:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_102998
L_103161:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_103162+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_103162
.p2align 0x4
.long 0x1805
L_103162:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_102998:
	movq 0x10(%rbp),%r15
	cmpq $0x1,%r15
	je L_416442
L_102999:
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0xB0(%rbp),%r14
	movq %r14,0x0(%r15)
newString_1:
	movq 0x78(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xC0,%rbp
	leaq (L_103000+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_416442:
L_103160:
	movq 0x18(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DD,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq 0xB8(%rbp),%r13
	movq %r13,0x0(%r11)
	movq %r14,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r11,0x0(%r14)
	movq $0x6F5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0xB0(%rbp),%r11
	movq %r11,0x0(%r14)
	movq $0x1957,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x8(%r11)
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r11)
	movq 0x0(%r13),%r14
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r11,0x0(%r10)
	movq %r14,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r9,%r14,1)
	movq %r10,0x0(%r13)
	jmp newString_1
.p2align 0x4
.long 0x17C0
L_103000:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movl 0xC0(%rbp),%r15d
	movl %r15d,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_103001
L_103158:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_103159+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_103159
.p2align 0x4
.long 0x1804
L_103159:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_103001:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x18(%rbp)
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x10(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xF208)(%rip),%r15
	movq %r15,0x18(%r13)
	movq 0x50(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0xD0(%rbp)
	movl 0x0(%r15),%r14d
	movq 0x0(%rbp),%r15
	xorl 0x0(%r15),%r14d
	movl %r14d,0xC8(%rbp)
	movq $0x1D63,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq %r14,0xC0(%rbp)
	addq $0xC0,%rbp
	leaq (L_103002+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lookup_1
.p2align 0x4
.long 0x17C1
L_103002:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xC0,%rbp
	leaq (L_103003+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x17C2
L_103003:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movl 0xC0(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_103004
L_103156:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_103157+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_103157
.p2align 0x4
.long 0x1803
L_103157:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_103004:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x20(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xCE38)(%rip),%r15
	movq %r15,0x18(%r13)
	movq $0xA01,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x50(%rbp)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq 0x88(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x80(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xC0,%rbp
	leaq (L_103005+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x17C3
L_103005:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movl 0xC0(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_103006
L_103154:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_103155+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_103155
.p2align 0x4
.long 0x1802
L_103155:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_103006:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x20(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xCE38)(%rip),%r15
	movq %r15,0x18(%r13)
	movq $0xA01,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x78(%rbp)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x3E7F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x50(%rbp),%r15
	movq %r15,0x8(%r14)
	movq %r14,0xC0(%rbp)
	movl $0x2,0xC8(%rbp)
	addq $0xC0,%rbp
	leaq (L_103007+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_4
.p2align 0x4
.long 0x17C4
L_103007:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_103008
L_103152:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_103153+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_103153
.p2align 0x4
.long 0x1801
L_103153:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_103008:
	movq $0x1D89,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xA8(%rbp)
	addq $0x10,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1D89,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xB8(%rbp)
	addq $0x10,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x80(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC8,%rbp
	leaq (L_103009+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x17C5
L_103009:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movl 0xC8(%rbp),%r15d
	movl %r15d,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_103010
L_103150:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_103151+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_103151
.p2align 0x4
.long 0x1800
L_103151:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_103010:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x78(%rbp)
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x50(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xCE38)(%rip),%r15
	movq %r15,0x18(%r13)
	movq $0xA01,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	movq $0x1D89,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0xC0(%rbp)
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x3885,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xC8(%rbp)
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0xD8(%rbp)
	movl $0x1,0xE0(%rbp)
	addq $0xD8,%rbp
	leaq (L_103011+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_5
.p2align 0x4
.long 0x17C6
L_103011:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_103012
L_103148:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_103149+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_103149
.p2align 0x4
.long 0x17FF
L_103149:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_103012:
	movq $0x3773,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xB8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0xD8(%rbp)
	movl $0x1,0xE0(%rbp)
	addq $0xD8,%rbp
	leaq (L_103013+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_6
.p2align 0x4
.long 0x17C7
L_103013:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0xD0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_103014
L_103146:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_103147+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_103147
.p2align 0x4
.long 0x17FE
L_103147:
	addq $0xFFFFFFFFFFFFFF20,%rbp
L_103014:
	movq $0x1D95,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x28,%r12
	movq 0xD0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x59,0x8(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x18(%r15)
	movq $0x12BB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x78(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x1DAF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xD8(%rbp)
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq 0x30(%rbp),%r15
	movq %r15,0xE8(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0xF0(%rbp)
	movq 0xA8(%rbp),%r15
	movq %r15,0xF8(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x100(%rbp)
	addq $0xE8,%rbp
	leaq (L_103015+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp wordBytes_0
.p2align 0x4
.long 0x17C8
L_103015:
	addq $0xFFFFFFFFFFFFFF18,%rbp
	movq 0xE8(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x38(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0xE8(%rbp)
	addq $0xE8,%rbp
	leaq (L_103016+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x17C9
L_103016:
	addq $0xFFFFFFFFFFFFFF18,%rbp
	movl 0xE8(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	movl %r15d,0xE8(%rbp)
	movq $0x3,0xF0(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0xF8(%rbp)
	addq $0xE8,%rbp
	leaq (L_103017+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x17CA
L_103017:
	addq $0xFFFFFFFFFFFFFF18,%rbp
	movq 0xE8(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq %r15,0xE8(%rbp)
	movq $0x1,0xF0(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0xF8(%rbp)
	addq $0xE8,%rbp
	leaq (L_103018+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x17CB
L_103018:
	addq $0xFFFFFFFFFFFFFF18,%rbp
	movq 0xE8(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_103019
L_103144:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE8,%rbp
	leaq (L_103145+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_103145
.p2align 0x4
.long 0x17FD
L_103145:
	addq $0xFFFFFFFFFFFFFF18,%rbp
L_103019:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x1DA1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x3775,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x28,%r12
	movq 0xB8(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0xC0(%rbp),%r15
	movq %r15,0x10(%r14)
	movq 0x48(%rbp),%r15
	movq %r15,0x18(%r14)
	movq %r14,0xE8(%rbp)
	movl $0x4,0xF0(%rbp)
	addq $0xE8,%rbp
	leaq (L_103020+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_6
.p2align 0x4
.long 0x17CC
L_103020:
	addq $0xFFFFFFFFFFFFFF18,%rbp
	movq 0xE8(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_103021
L_103142:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE8,%rbp
	leaq (L_103143+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_103143
.p2align 0x4
.long 0x17FC
L_103143:
	addq $0xFFFFFFFFFFFFFF18,%rbp
L_103021:
	movq $0x1DA7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x88(%rbp),%r14
	movq %r14,0x10(%r15)
	movq $0x1D99,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0xD8(%rbp),%r15
	movq %r15,0x8(%r14)
	movq %r14,0xE0(%rbp)
	movq $0x2,0xD8(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0xE8(%rbp)
	addq $0xD8,%rbp
	leaq (L_103022+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1490
.p2align 0x4
.long 0x17CD
L_103022:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_103023
L_103140:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_103141+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_103141
.p2align 0x4
.long 0x17FA
L_103141:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_103023:
	movq $0x30D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x50(%rbp)
	addq $0x10,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r14)
	cmpq $0x1,%r13
	je L_416456
L_103024:
	movq 0x8(%r13),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_103025:
	incl %ecx
	movl %ecx,0x38(%rbp)
	jo L_416455
L_103027:
	cmpq $0x1,%r15
	je L_416453
L_103028:
	movq 0x8(%r15),%r15
	jmp L_103025
.p2align 0x4
L_416453:
L_103029:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_103030
L_103137:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_103138+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_103138
.p2align 0x4
.long 0x17FB
L_103138:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_103030:
	movl 0x38(%rbp),%ecx
L_103031:
	movl %ecx,0xE0(%rbp)
	movq $0x3F35,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0xD8(%rbp)
	addq $0xD8,%rbp
	leaq (L_103032+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_5
.p2align 0x4
L_416455:
L_103026:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_416456:
L_103139:
	xorl %ecx,%ecx
	jmp L_103031
.p2align 0x4
.long 0x17CE
L_103032:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_103033
L_103135:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_103136+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_103136
.p2align 0x4
.long 0x17FA
L_103136:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_103033:
	movq $0x721,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x40,%r12
	movl $0x1,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x98(%rbp),%r14
	movq %r14,0x10(%r15)
	movq $0x1,0x18(%r15)
	movq 0xB0(%rbp),%r14
	movq %r14,0x20(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x28(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x30(%r15)
	movq 0xA0(%rbp),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x50(%rbp)
	movq 0x8(%r14),%r11
	movq %r11,0x78(%rbp)
	movq 0x0(%r14),%r10
	movq %r10,0xA8(%rbp)
	movq $0x723,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq $0x7FFFFFFF,0x0(%r14)
	movq %r15,0x8(%r14)
	movq $0x2937,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	addq $0x10,%r12
	movq %r14,0x0(%r10)
	movq $0x725,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r10,0x0(%r9)
	addq $0x10,%r12
	movq $0x727,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r9,0x0(%r10)
	movq %r14,0x8(%r10)
	addq $0x18,%r12
	movq $0x729,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r10,0x8(%r14)
	movq %r14,0xE0(%rbp)
	addq $0x18,%r12
	movq %r13,0xD8(%rbp)
	movq %r11,0xE8(%rbp)
	addq $0xD8,%rbp
	leaq (L_103034+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1491
.p2align 0x4
.long 0x17CF
L_103034:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_103035
L_103133:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_103134+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_103134
.p2align 0x4
.long 0x17F9
L_103134:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_103035:
	movq 0xA8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x210F,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x0(%r15)
	movq 0x80(%rbp),%r15
	movq %r15,0xD8(%rbp)
	addq $0xD8,%rbp
	leaq (L_103036+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x17CF
L_103036:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movl 0xD8(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_103037
L_103131:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_103132+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_103132
.p2align 0x4
.long 0x17F8
L_103132:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_103037:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x20(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xCE38)(%rip),%r15
	movq %r15,0x18(%r13)
	movq $0xA01,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x38(%rbp)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq 0x88(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x80(%rbp),%r15
	movq %r15,0xD8(%rbp)
	addq $0xD8,%rbp
	leaq (L_103038+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x17D0
L_103038:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movl 0xD8(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_103039
L_103129:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_103130+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_103130
.p2align 0x4
.long 0x17F7
L_103130:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_103039:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x20(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xCE38)(%rip),%r15
	movq %r15,0x18(%r13)
	movq $0xA01,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x48(%rbp)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x80(%rbp),%r15
	movq %r15,0xD8(%rbp)
	addq $0xD8,%rbp
	leaq (L_103040+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x17D1
L_103040:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movl 0xD8(%rbp),%r15d
	movl %r15d,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_103041
L_103127:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_103128+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_103128
.p2align 0x4
.long 0x17F6
L_103128:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_103041:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x10(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xCE38)(%rip),%r15
	movq %r15,0x18(%r13)
	movq $0xA01,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x20(%rbp)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x80(%rbp),%r15
	movq %r15,0xD8(%rbp)
	addq $0xD8,%rbp
	leaq (L_103042+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x17D2
L_103042:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movl 0xD8(%rbp),%r15d
	movl %r15d,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_103043
L_103125:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_103126+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_103126
.p2align 0x4
.long 0x17F5
L_103126:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_103043:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x10(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xCE38)(%rip),%r15
	movq %r15,0x18(%r13)
	movq $0xA01,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x80(%rbp)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x3E85,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x28,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq 0x20(%rbp),%r15
	movq %r15,0x10(%r14)
	movq 0x38(%rbp),%r15
	movq %r15,0x18(%r14)
	movq %r14,0xD8(%rbp)
	movl $0x4,0xE0(%rbp)
	addq $0xD8,%rbp
	leaq (L_103044+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_4
.p2align 0x4
.long 0x17D3
L_103044:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_103045
L_103123:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_103124+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_103124
.p2align 0x4
.long 0x17F4
L_103124:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_103045:
	movq $0x1D89,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x28(%rbp)
	addq $0x10,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1D89,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xA0(%rbp)
	addq $0x10,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1D89,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xB8(%rbp)
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1D89,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xC0(%rbp)
	addq $0x10,%r12
	movq 0x80(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xC8(%rbp),%r15
	movq %r15,0xD0(%rbp)
	movl $0x1,0xD8(%rbp)
	addq $0xD0,%rbp
	leaq (L_103046+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_5
.p2align 0x4
.long 0x17D4
L_103046:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movq 0xD0(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_103047
L_103121:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_103122+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_103122
.p2align 0x4
.long 0x17F3
L_103122:
	addq $0xFFFFFFFFFFFFFF30,%rbp
L_103047:
	movq $0x3771,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xC0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xA0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0xD0(%rbp)
	movl $0x2,0xD8(%rbp)
	addq $0xD0,%rbp
	leaq (L_103048+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_6
.p2align 0x4
.long 0x17D5
L_103048:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movq 0xD0(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_103049
L_103119:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_103120+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_103120
.p2align 0x4
.long 0x17F2
L_103120:
	addq $0xFFFFFFFFFFFFFF30,%rbp
L_103049:
	movq $0x1D95,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x28,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x5A,0x8(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x0(%rbp),%r14
	movq %r14,0x18(%r15)
	movq $0x4753,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x20,%r12
	movq %r14,0x8(%r13)
	movq 0x8(%rbp),%r15
	movq %r15,0x10(%r13)
	movq $0x1D97,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x48(%rbp)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xC8(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0xD8(%rbp)
	addq $0xD8,%rbp
	leaq (L_103050+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x17D6
L_103050:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movl 0xD8(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	movl %r15d,0xD8(%rbp)
	movq $0x3,0xE0(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0xE8(%rbp)
	addq $0xD8,%rbp
	leaq (L_103051+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x17D7
L_103051:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq %r15,0xD0(%rbp)
	movq $0x3,0xD8(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0xE0(%rbp)
	addq $0xD0,%rbp
	leaq (L_103052+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x17D8
L_103052:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movq 0xD0(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_103053
L_103117:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_103118+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_103118
.p2align 0x4
.long 0x17F1
L_103118:
	addq $0xFFFFFFFFFFFFFF30,%rbp
L_103053:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x10,%r12
	movq $0x1DA1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x38(%rbp)
	movq %r13,0x0(%r15)
	addq $0x10,%r12
	movq $0x1E1B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x58(%rbp)
	addq $0x10,%r12
	movq %r14,0x0(%r15)
	movq $0x1,0xD0(%rbp)
	movl $0x0,0xD8(%rbp)
	addq $0xD0,%rbp
	leaq (L_103054+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_5
.p2align 0x4
.long 0x17D9
L_103054:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movq 0xD0(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_103055
L_103115:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_103116+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_103116
.p2align 0x4
.long 0x17EF
L_103116:
	addq $0xFFFFFFFFFFFFFF30,%rbp
L_103055:
	movq $0x3771,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xC0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0xD0(%rbp)
	movl $0x2,0xD8(%rbp)
	addq $0xD0,%rbp
	leaq (L_103056+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_6
.p2align 0x4
.long 0x17DA
L_103056:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movq 0xD0(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x40(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xC8(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0xD8(%rbp)
	addq $0xD8,%rbp
	leaq (L_103057+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
.long 0x17DB
L_103057:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movl 0xD8(%rbp),%r15d
	movl %r15d,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_103058
L_103113:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_103114+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_103114
.p2align 0x4
.long 0x17F0
L_103114:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_103058:
	movslq 0x40(%rbp),%r15
	movq 0xC8(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_416470
L_103060:
	movq 0x0(%r14,%r15,8),%r13
	cmpq $0x1,%r13
	je L_416469
L_103061:
	movl 0x0(%r13),%r15d
	movl %r15d,0xD8(%rbp)
	movq $0x1D5F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0xD0(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0xE0(%rbp)
	addq $0xD0,%rbp
	leaq (L_103062+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lookup_1
.p2align 0x4
L_416469:
L_103112:
	movq $0x9,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_416470:
L_103059:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x17DC
L_103062:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movq 0xD0(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_103063
L_103110:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_103111+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_103111
.p2align 0x4
.long 0x17EF
L_103111:
	addq $0xFFFFFFFFFFFFFF30,%rbp
L_103063:
	movq $0x1D95,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x28,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x18(%r15)
	movq $0x3775,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x28,%r12
	movq 0xA0(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0xB8(%rbp),%r15
	movq %r15,0x10(%r14)
	movq 0x48(%rbp),%r15
	movq %r15,0x18(%r14)
	movq %r14,0xD0(%rbp)
	movl $0x4,0xD8(%rbp)
	addq $0xD0,%rbp
	leaq (L_103064+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_6
.p2align 0x4
.long 0x17DD
L_103064:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movq 0xD0(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_103065
L_103108:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_103109+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_103109
.p2align 0x4
.long 0x17EE
L_103109:
	addq $0xFFFFFFFFFFFFFF30,%rbp
L_103065:
	movq $0x1E13,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x38(%rbp)
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0xD0(%rbp)
	movl $0x0,0xD8(%rbp)
	addq $0xD0,%rbp
	leaq (L_103066+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_5
.p2align 0x4
.long 0x17DE
L_103066:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movq 0xD0(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_103067
L_103106:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_103107+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_103107
.p2align 0x4
.long 0x17ED
L_103107:
	addq $0xFFFFFFFFFFFFFF30,%rbp
L_103067:
	movq $0x3771,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xB8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xC0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0xC0(%rbp)
	movl $0x2,0xC8(%rbp)
	addq $0xC0,%rbp
	leaq (L_103068+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_6
.p2align 0x4
.long 0x17DF
L_103068:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_103069
L_103104:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_103105+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_103105
.p2align 0x4
.long 0x17EC
L_103105:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_103069:
	movq $0x1D95,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x48(%rbp)
	addq $0x28,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x18(%r15)
	movq $0x1,0xC0(%rbp)
	movl $0x0,0xC8(%rbp)
	addq $0xC0,%rbp
	leaq (L_103070+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_4
.p2align 0x4
.long 0x17E0
L_103070:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_103071
L_103102:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_103103+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_103103
.p2align 0x4
.long 0x17EB
L_103103:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_103071:
	movq $0xBE7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x38(%rbp)
	addq $0x20,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x10(%r15)
	movq $0x1,0xC0(%rbp)
	movl $0x0,0xC8(%rbp)
	addq $0xC0,%rbp
	leaq (L_103072+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_4
.p2align 0x4
.long 0x17E1
L_103072:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_103073
L_103100:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_103101+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_103101
.p2align 0x4
.long 0x17EA
L_103101:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_103073:
	movq $0x1DA7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x88(%rbp),%r14
	movq %r14,0x10(%r15)
	movq $0xBE7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x20,%r12
	movq 0x70(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x28(%rbp),%r15
	movq %r15,0x10(%r14)
	movq $0x390F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0xC0(%rbp)
	movl $0x2,0xC8(%rbp)
	addq $0xC0,%rbp
	leaq (L_103074+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_29
.p2align 0x4
.long 0x17E2
L_103074:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_103075
L_103098:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_103099+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_103099
.p2align 0x4
.long 0x17E9
L_103099:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_103075:
	movq $0x1DAD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1DA5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x28,%r12
	movq $0x1,0x8(%r14)
	movq 0x48(%rbp),%r15
	movq %r15,0x10(%r14)
	movq 0x88(%rbp),%r15
	movq %r15,0x18(%r14)
	movq %r14,0xC8(%rbp)
	movq $0x2,0xC0(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (L_103076+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1490
.p2align 0x4
.long 0x17E3
L_103076:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_103077
L_103096:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_103097+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_103097
.p2align 0x4
.long 0x17E7
L_103097:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_103077:
	movq $0x30D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x30(%rbp)
	addq $0x10,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r14)
	cmpq $0x1,%r13
	je L_416482
L_103078:
	movq 0x8(%r13),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_103079:
	incl %ecx
	movl %ecx,0x20(%rbp)
	jo L_103026
L_103080:
	cmpq $0x1,%r15
	je L_416479
L_103081:
	movq 0x8(%r15),%r15
	jmp L_103079
.p2align 0x4
L_416479:
L_103082:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_103083
L_103093:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_103094+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_103094
.p2align 0x4
.long 0x17E8
L_103094:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_103083:
	movl 0x20(%rbp),%ecx
L_103084:
	movl %ecx,0xC8(%rbp)
	movq $0x3F35,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0xC0(%rbp)
	addq $0xC0,%rbp
	leaq (L_103085+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_5
.p2align 0x4
L_416482:
L_103095:
	xorl %ecx,%ecx
	jmp L_103084
.p2align 0x4
.long 0x17E4
L_103085:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_103086
L_103091:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_103092+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_103092
.p2align 0x4
.long 0x17E7
L_103092:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_103086:
	movq $0x721,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x40,%r12
	movl $0x1,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x98(%rbp),%r14
	movq %r14,0x10(%r15)
	movq $0x1,0x18(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x20(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x28(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x30(%r15)
	movq $0x723,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq $0x7FFFFFFF,0x0(%r14)
	movq %r15,0x8(%r14)
	movq $0x2937,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq %r14,0x0(%r13)
	movq $0x725,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	addq $0x10,%r12
	movq $0x727,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r11,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq $0x729,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r13,0x8(%r14)
	movq %r14,0xC8(%rbp)
	addq $0x18,%r12
	movq 0x50(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (L_103087+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1491
.p2align 0x4
.long 0x17E5
L_103087:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0xB8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_103088
L_103089:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_103090+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_103090
.p2align 0x4
.long 0x17E6
L_103090:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_103088:
	movq 0xA8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x210F,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0xB8(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x0(%r15)
	movq 0xB0(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl each_1
.hidden each_1
each_1:
L_103173:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_103174
L_103181:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_103182+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_103182
.p2align 0x4
.long 0x63C
L_103182:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_103174:
	movq 0x0(%rbp),%r15
	cmpq $0x1,%r15
	je L_416486
L_103175:
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x30(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x40,%rbp
	leaq (L_103176+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp each_1
.p2align 0x4
L_416486:
L_103180:
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x8(%rbp),%r15
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x18(%rbp)
	jmp loop_3849
.p2align 0x4
.long 0xA82
L_103176:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_103177
L_103178:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_103179+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_103179
.p2align 0x4
.long 0x4F0
L_103179:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_103177:
	movq $0x1DB7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0x0(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x8(%rbp),%r15
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x18(%rbp)
	jmp loop_3849
.text
.p2align 0x4
.globl forceMeaningBlock_0
.hidden forceMeaningBlock_0
forceMeaningBlock_0:
L_103183:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_103242
L_103184:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_416505
L_103185:
	movq 0x8(%rbp),%r15
	movq 0x98(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x68(%r15),%r14
	movq 0x50(%r15),%r13
	movq 0x40(%r15),%r11
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r10
	movslq 0x0(%r15),%r9
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r9
	jnb L_103187
L_103188:
	movl 0x0(%r14,%r9,4),%r15d
	testl %r15d,%r15d
	jnz L_416503
L_103189:
	movl $0x1,0x0(%r14,%r9,4)
	cmpq 0xFFFFFFFFFFFFFFF0(%r11),%r9
	jnb L_416502
L_103191:
	movq 0x0(%r11,%r9,8),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x20(%rbp)
	movq $0x945,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	addq $0x18,%r12
	movq %r14,0x8(%r11)
	cmpq $0x1,%r10
	je L_416496
	cmpq $0x2,%r10
	je L_416495
L_103192:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r14
	shrq $0x1,%r14
	cmpq $0xF38,%r14
	je L_416493
	cmpq $0xF39,%r14
	je L_416491
	cmpq $0xF3A,%r14
	je L_416490
L_103193:
	movq 0x8(%r10),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r10),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r10
	cmpq %r10,%r14
	jne L_416489
L_103196:
	movl %r13d,0x40(%rbp)
	movq $0x4049,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r11,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x38(%rbp)
	addq $0x18,%r12
	addq $0x38,%rbp
	leaq (L_103197+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
L_416489:
L_103195:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_416490:
L_103238:
	movq %r15,0x30(%rbp)
	movq $0x1,0x38(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x30,%rbp
	leaq (L_103235+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp simplifyBlock_1
.p2align 0x4
L_416491:
L_103231:
	movq 0x10(%r10),%r15
	movq %r15,0x28(%rbp)
	movq 0x8(%r10),%r15
	movq %r15,0x30(%rbp)
	movq 0x0(%r10),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r10
	cmpq %r14,%r10
	jne L_103195
L_103233:
	movl %r13d,0x48(%rbp)
	movq $0x37AF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r11,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x40(%rbp)
	addq $0x18,%r12
	addq $0x40,%rbp
	leaq (L_103234+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_19
.p2align 0x4
L_416493:
L_103222:
	movq 0x8(%r10),%r15
	movq %r15,0x28(%rbp)
	movq 0x0(%r10),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r10
	cmpq %r14,%r10
	jne L_103195
L_103224:
	movl %r13d,0x40(%rbp)
	movq $0x3FCD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r11,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x38(%rbp)
	addq $0x18,%r12
	addq $0x38,%rbp
	leaq (L_103225+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
L_416495:
L_103240:
	movq %r15,0x30(%rbp)
	movq $0x1,0x38(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x30,%rbp
	leaq (L_103235+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp simplifyBlock_1
.p2align 0x4
L_416496:
L_103239:
	movq $0x1,0x28(%rbp)
	movq $0x1,0x30(%rbp)
	xorl %ecx,%ecx
L_103205:
	movslq %ecx,%rdx
	movq %rdx,0x38(%rbp)
	testq %rdx,%rdx
	jz L_416501
L_103206:
	cmpq $0x7FFFFFFF,%rdx
	ja L_416500
L_103207:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1443,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_103208+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_103208
.p2align 0x4
.long 0x787
L_103208:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq %rax,0x40(%rbp)
L_103209:
	movq 0x30(%rbp),%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_1146:
	cmpq 0x38(%rbp),%r15
	jnl L_416498
L_103214:
	cmpq $0x1,%r14
	je L_416497
L_103215:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq 0x40(%rbp),%r11
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r13,0x0(%r11,%r15,8)
	incq %r15
	jmp loop_1146
.p2align 0x4
L_416497:
L_103216:
	movq (globalObjptr+0x4B0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_416498:
L_103210:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_103211
L_103212:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_103213+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_103213
.p2align 0x4
.long 0xC48
L_103213:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_103211:
	movq 0x40(%rbp),%r15
	movq $0x21,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x23,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x28,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%r14)
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%r14)
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r13
	movq $0x1E99,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq %r11,0x0(%r15)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_416500:
L_103217:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_416501:
L_103218:
	movq (globalObjptr+0xD90)(%rip),%r15
	movq %r15,0x40(%rbp)
	jmp L_103209
.p2align 0x4
L_416502:
L_103187:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_416503:
L_103241:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_416505:
L_103242:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_103243+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_103243
.p2align 0x4
.long 0x45F
L_103243:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_103185
.p2align 0x4
.long 0x4A6
L_103197:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_103198
L_103220:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_103221+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_103221
.p2align 0x4
.long 0x720
L_103221:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_103198:
	movq $0x1E63,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq 0x30(%rbp),%r11
	movq %r11,0x0(%r13)
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_416509
L_103199:
	movq 0x8(%r14),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_103200:
	incl %ecx
	jo L_416508
L_103202:
	cmpq $0x1,%r15
	je L_416507
L_103203:
	movq 0x8(%r15),%r15
	jmp L_103200
.p2align 0x4
L_416507:
L_103204:
	movq %r13,0x28(%rbp)
	movq %r14,0x30(%rbp)
	jmp L_103205
.p2align 0x4
L_416508:
L_103201:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_416509:
L_103219:
	movq %r14,0x30(%rbp)
	movq %r13,0x28(%rbp)
	xorl %ecx,%ecx
	jmp L_103205
.p2align 0x4
.long 0x8A9
L_103235:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r13
	movq %r13,0x28(%rbp)
	movq 0x38(%rbp),%r14
	movq %r14,0x30(%rbp)
	cmpq $0x1,%r14
	je L_416511
L_103236:
	movq 0x8(%r14),%r15
	xorl %ecx,%ecx
	jmp L_103200
.p2align 0x4
L_416511:
L_103237:
	xorl %ecx,%ecx
	jmp L_103205
.p2align 0x4
.long 0x4EC
L_103234:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq 0x30(%rbp),%r14
	movq %r14,0x40(%rbp)
	movq 0x8(%rbp),%r14
	movq %r14,0x48(%rbp)
	movq %r15,0x30(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_103235+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp gotoMeaning_1
.p2align 0x4
.long 0x4A6
L_103225:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_103226
L_103229:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_103230+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_103230
.p2align 0x4
.long 0x720
L_103230:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_103226:
	movq $0x1E65,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq 0x30(%rbp),%r11
	movq %r11,0x0(%r13)
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_416512
L_103227:
	movq 0x8(%r14),%r15
	xorl %ecx,%ecx
	jmp L_103200
.p2align 0x4
L_416512:
L_103228:
	movq %r14,0x30(%rbp)
	movq %r13,0x28(%rbp)
	xorl %ecx,%ecx
	jmp L_103205
.text
.p2align 0x4
.globl tabulate_19
.hidden tabulate_19
tabulate_19:
L_103244:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_103245
L_103276:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_103277+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_103277
.p2align 0x4
.long 0x457
L_103277:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_103245:
	movslq 0x8(%rbp),%rdx
	movq %rdx,0x10(%rbp)
	testq %rdx,%rdx
	jz L_416527
L_103246:
	cmpq $0x7FFFFFFF,%rdx
	ja L_416526
L_103247:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1481,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_103248+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_103248
.p2align 0x4
.long 0x452
L_103248:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq %rax,0x8(%rbp)
L_103249:
	movq $0x0,0x18(%rbp)
.p2align 0x4,,0x7
loop_1147:
	movq 0x18(%rbp),%r13
	cmpq 0x10(%rbp),%r13
	jnl L_416525
L_103251:
	movl %r13d,%r11d
	movq 0x0(%rbp),%r13
	cmpq $0x1,%r13
	je L_416524
L_103252:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x1BD8,%r15
	je L_416523
	cmpq $0x1BD9,%r15
	je L_416522
	cmpq $0x1BDA,%r15
	je L_416520
	cmpq $0x1BDB,%r15
	je L_416519
	cmpq $0x1BDC,%r15
	je L_416516
L_103253:
	movslq %r11d,%r15
	movq 0x8(%r13),%r11
	movq 0x0(%r11,%r15,8),%r14
	movq 0x0(%r13),%r11
	movq 0x8(%r11),%r15
	movq 0x0(%r11),%r10
	movq %r14,%r13
	andq $0x1,%r13
	cmpq $0x1,%r13
	jne L_416515
L_103258:
	shrq $0x1,%r14
	movl %r14d,%r13d
	movslq %r13d,%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	jnb L_416514
L_103261:
	movq 0x0(%r15,%r14,8),%r13
	movq 0x8(%r13),%r13
	movq %r13,%r15
	movq %r10,%r14
L_103255:
	movq %r15,0x28(%rbp)
	movq %r14,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_103256+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1375
.p2align 0x4
L_416514:
L_103260:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_416515:
L_103254:
	movq %r14,%r15
	movq %r10,%r14
	jmp L_103255
.p2align 0x4
L_416516:
L_103268:
	movslq %r11d,%r15
	movq 0x8(%r13),%r14
	movq 0x0(%r14,%r15,8),%r11
	movq 0x0(%r13),%r14
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r10
	movq %r11,%r14
	andq $0x1,%r14
	cmpq $0x1,%r14
	jne L_416518
L_103270:
	shrq $0x1,%r11
	movl %r11d,%r14d
	movslq %r14d,%r13
	cmpq 0xFFFFFFFFFFFFFFF0(%r15),%r13
	jnb L_103260
L_103272:
	movq 0x0(%r15,%r13,8),%r14
	movq %r14,%r15
.p2align 0x4,,0x7
L_103257:
	movq 0x8(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x18(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x18(%rbp)
	jmp loop_1147
.p2align 0x4
L_416518:
L_103269:
	movq %r11,0x28(%rbp)
	movq %r10,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_103256+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1375
.p2align 0x4
L_416519:
L_103267:
	movq 0x0(%r13),%r15
	movq %r15,0x30(%rbp)
	movslq %r11d,%r15
	movq 0x8(%r13),%r14
	movq 0x0(%r14,%r15,8),%r11
	movq %r11,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_103256+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1375
.p2align 0x4
L_416520:
L_103264:
	movq 0x0(%r13),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_416521
L_103265:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r14,1)
	movq %r13,0x0(%r15)
	movq %r11,%r15
	jmp L_103257
.p2align 0x4
L_416521:
L_103266:
	movq (globalObjptr+0x4B0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_416522:
L_103263:
	movq 0x0(%r13),%r15
	jmp L_103257
.p2align 0x4
L_416523:
L_103262:
	movq 0x0(%r13),%r15
	movq %r15,0x30(%rbp)
	movslq %r11d,%r15
	movq 0x8(%r13),%r14
	movq 0x0(%r14,%r15,8),%r11
	movq %r11,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_103256+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1375
.p2align 0x4
L_416524:
L_103273:
	movq (globalObjptr+0x4A0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_416525:
L_103250:
	movq 0x8(%rbp),%r15
	movq $0x8F7,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_416526:
L_103274:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_416527:
L_103275:
	movq (globalObjptr+0xC70)(%rip),%r15
	movq %r15,0x8(%rbp)
	jmp L_103249
.p2align 0x4
.long 0x5F8
L_103256:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	jmp L_103257
.text
.p2align 0x4
.globl gotoMeaning_1
.hidden gotoMeaning_1
gotoMeaning_1:
L_103278:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_103398
L_103279:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_416572
L_103280:
	movq 0x0(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x30(%rbp)
loop_1148:
	movq 0x18(%rbp),%r15
	movq 0x70(%r15),%r14
	movq 0x68(%r15),%r13
	movq 0x60(%r15),%r11
	movq 0x58(%r15),%r10
	movq %r10,0x38(%rbp)
	movq 0x50(%r15),%r10
	movq 0x48(%r15),%r9
	movq %r9,0x40(%rbp)
	movq 0x40(%r15),%r9
	movq %r9,0x48(%rbp)
	movq 0x38(%r15),%r9
	movq %r9,0x50(%rbp)
	movq 0x28(%rbp),%r15
	movl 0x0(%r15),%r8d
	movq 0x10(%r15),%rsp
	movslq %r8d,%r15
	movl %r8d,0x58(%rbp)
	cmpq 0xFFFFFFFFFFFFFFF0(%r9),%r15
	jnb L_103282
L_103283:
	movl 0x0(%r9,%r15,4),%r8d
	movl %r8d,0x5C(%rbp)
	movq $0x947,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r9,0x60(%rbp)
	movq %r10,0x0(%r9)
	addq $0x18,%r12
	movq 0x20(%rbp),%r10
	movq %r10,0x8(%r9)
	cmpq $0x1,%rsp
	je L_416570
	cmpq $0x2,%rsp
	je L_416569
L_103284:
	movq 0xFFFFFFFFFFFFFFF8(%rsp),%r10
	shrq $0x1,%r10
	cmpq $0xF38,%r10
	je L_416561
	cmpq $0xF39,%r10
	je L_416544
	cmpq $0xF3A,%r10
	je L_416536
L_103285:
	movq 0x8(%rsp),%r10
	movq %r10,0x38(%rbp)
	movq 0x0(%rsp),%r9
	movq %r9,0x40(%rbp)
	cmpq $0x1,%r10
	je L_416535
L_103286:
	movq 0x30(%rbp),%r10
	cmpq $0x1,%r10
	je L_416534
L_103287:
	movq 0x8(%r10),%r9
	movq %r9,0x48(%rbp)
	movq 0x0(%r10),%r9
	movq %r9,0x50(%rbp)
	movq $0x1,0x58(%rbp)
.p2align 0x4,,0x7
L_103288:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_416533
.p2align 0x4,,0x7
L_103289:
	movq $0x1E7D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_416529
L_103290:
	movq %r15,0x58(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	movq %r15,0x50(%rbp)
	jmp L_103288
.p2align 0x4
L_416529:
L_103291:
	movq 0x58(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x58(%rbp)
.p2align 0x4,,0x7
L_103292:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_416532
.p2align 0x4,,0x7
L_103293:
	movq $0x1E7D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_416530
L_103294:
	movq %r15,0x58(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	movq %r15,0x50(%rbp)
	jmp L_103292
.p2align 0x4
L_416530:
L_103295:
	movq %r15,0x48(%rbp)
L_103296:
	movq 0x40(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_416531
L_103299:
	movq $0x4047,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x60(%rbp),%r11
	movq %r11,0x0(%r14)
	movl %r13d,0x60(%rbp)
	movq %r15,0x8(%r14)
	movq %r14,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_103300+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
L_416531:
L_103298:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_416532:
L_103304:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_103305+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_103305
.p2align 0x4
.long 0x6FA
L_103305:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_103293
.p2align 0x4
L_416533:
L_103306:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_103307+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_103307
.p2align 0x4
.long 0x11CD
L_103307:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_103289
.p2align 0x4
L_416534:
L_103308:
	movq 0x38(%rbp),%r15
	movq %r15,0x48(%rbp)
	jmp L_103296
.p2align 0x4
L_416535:
L_103309:
	movq 0x30(%rbp),%r15
	movq %r15,0x48(%rbp)
	jmp L_103296
.p2align 0x4
L_416536:
L_103376:
	movq 0x10(%rsp),%r15
	movq %r15,0x60(%rbp)
	movq 0x8(%rsp),%r15
	movq %r15,0x68(%rbp)
	movq 0x0(%rsp),%r15
	movq %r15,0x70(%rbp)
	cmpq $0x1,%r15
	je L_416543
L_103377:
	movq 0x30(%rbp),%r15
	cmpq $0x1,%r15
	je L_416542
L_103378:
	movq 0x8(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x80(%rbp)
	movq $0x1,0x88(%rbp)
.p2align 0x4,,0x7
L_103379:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_416541
.p2align 0x4,,0x7
L_103380:
	movq $0x1E7D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x80(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x88(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x78(%rbp),%r14
	cmpq $0x1,%r14
	je L_416537
L_103381:
	movq %r15,0x88(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x78(%rbp)
	movq %r15,0x80(%rbp)
	jmp L_103379
.p2align 0x4
L_416537:
L_103382:
	movq 0x80(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x70(%rbp)
.p2align 0x4,,0x7
L_103383:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_416540
.p2align 0x4,,0x7
L_103384:
	movq $0x1E7D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x80(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x70(%rbp),%r14
	cmpq $0x1,%r14
	je L_416538
L_103385:
	movq %r15,0x80(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x70(%rbp)
	movq %r15,0x78(%rbp)
	jmp L_103383
.p2align 0x4
L_416538:
L_103387:
	movq 0x20(%rbp),%r14
	cmpq $0x0,0xFFFFFFFFFFFFFFF0(%r14)
	jna L_416539
L_103389:
	movq 0x0(%r14),%r13
	movq %r13,0x0(%rbp)
	movq $0x40A7,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x50,%r12
	movl 0x5C(%rbp),%r11d
	movl %r11d,0x0(%r13)
	movl 0x58(%rbp),%r11d
	movl %r11d,0x4(%r13)
	movq 0x50(%rbp),%r11
	movq %r11,0x8(%r13)
	movq 0x48(%rbp),%r11
	movq %r11,0x10(%r13)
	movq %r14,0x18(%r13)
	movq 0x40(%rbp),%r14
	movq %r14,0x20(%r13)
	movq 0x30(%rbp),%r14
	movq %r14,0x28(%r13)
	movq 0x18(%rbp),%r14
	movq %r14,0x30(%r13)
	movq %r14,0x38(%r13)
	movq 0x28(%rbp),%r11
	movq %r11,0x40(%r13)
	movq %r13,0x20(%rbp)
	movq $0x40A3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq %r11,0x0(%r13)
	movq %r15,0x28(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x8(%r13)
	movq %r13,0x8(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq %r14,0x30(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x18(%rbp)
	jmp simplifyCase_1
.p2align 0x4
L_416539:
L_103282:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_416540:
L_103390:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_103391+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_103391
.p2align 0x4
.long 0x11D0
L_103391:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	jmp L_103384
.p2align 0x4
L_416541:
L_103392:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_103393+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_103393
.p2align 0x4
.long 0x11D1
L_103393:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	jmp L_103380
.p2align 0x4
L_416542:
L_103394:
	movq 0x70(%rbp),%r14
	xchgq %r14,%r15
	jmp L_103387
.p2align 0x4
L_416543:
L_103395:
	movq 0x30(%rbp),%r15
	jmp L_103387
.p2align 0x4
L_416544:
L_103334:
	movq 0x10(%rsp),%r10
	movq %r10,0x38(%rbp)
	movq 0x8(%rsp),%r9
	movq %r9,0x68(%rbp)
	movq 0x0(%rsp),%r8
	movq %r8,0x70(%rbp)
	cmpq 0xFFFFFFFFFFFFFFF0(%r11),%r15
	jnb L_103282
L_103336:
	movl 0x0(%r11,%r15,4),%r8d
	testl %r8d,%r8d
	jnz L_103374
L_103337:
	cmpq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	jnb L_103282
L_103339:
	movl 0x0(%r13,%r15,4),%r11d
	testl %r11d,%r11d
	jnz L_416557
L_103340:
	movl 0x5C(%rbp),%r13d
	decl %r13d
	jo L_103341
L_103342:
	movq 0x50(%rbp),%r11
	movl %r13d,0x0(%r11,%r15,4)
	cmpl $0x0,%r13d
	jng L_416554
L_103368:
	movq 0x8(%r14),%r15
	movslq 0x0(%r10),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	jnb L_103282
L_103370:
	movl 0x0(%r15,%r14,4),%r13d
	incl %r13d
	jo L_416552
L_103371:
	movl %r13d,0x0(%r15,%r14,4)
	cmpq $0x1,%r9
	je L_416551
L_103344:
	movq 0x30(%rbp),%r15
	cmpq $0x1,%r15
	je L_416550
L_103345:
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq $0x1,0x30(%rbp)
.p2align 0x4,,0x7
L_103346:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_416549
.p2align 0x4,,0x7
L_103347:
	movq $0x1E7D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_416545
L_103348:
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x28(%rbp)
	jmp L_103346
.p2align 0x4
L_416545:
L_103349:
	movq 0x30(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x30(%rbp)
.p2align 0x4,,0x7
L_103350:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_416548
.p2align 0x4,,0x7
L_103351:
	movq $0x1E7D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_416546
L_103352:
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x28(%rbp)
	jmp L_103350
.p2align 0x4
L_416546:
L_103353:
	movq %r15,0x20(%rbp)
L_103354:
	movq 0x70(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_103298
L_103356:
	movl %r13d,0x50(%rbp)
	movq $0x37B9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x60(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_103357+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_19
.p2align 0x4
L_416548:
L_103361:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_103362+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_103362
.p2align 0x4
.long 0x11CE
L_103362:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	jmp L_103351
.p2align 0x4
L_416549:
L_103363:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_103364+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_103364
.p2align 0x4
.long 0x11CF
L_103364:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	jmp L_103347
.p2align 0x4
L_416550:
L_103365:
	movq 0x68(%rbp),%r14
	movq %r14,0x20(%rbp)
	jmp L_103354
.p2align 0x4
L_416551:
L_103367:
	movq 0x30(%rbp),%r15
	movq %r15,0x20(%rbp)
	jmp L_103354
.p2align 0x4
L_416552:
L_103341:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_416554:
L_103343:
	cmpq $0x1,%r9
	je L_103367
	jmp L_103344
.p2align 0x4
L_416557:
L_103374:
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq %r15,0x10(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x30(%rbp)
	movl 0x58(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	movl 0x5C(%rbp),%r15d
	movl %r15d,0x48(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x40(%rbp)
	jmp normal_23
.p2align 0x4
L_416561:
L_103310:
	movq 0x8(%rsp),%r15
	movq %r15,0x38(%rbp)
	movq 0x0(%rsp),%r14
	movq %r14,0x40(%rbp)
	cmpq $0x1,%r15
	je L_416568
L_103311:
	movq 0x30(%rbp),%r15
	cmpq $0x1,%r15
	je L_416567
L_103312:
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movq $0x1,0x58(%rbp)
.p2align 0x4,,0x7
L_103313:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_416566
.p2align 0x4,,0x7
L_103314:
	movq $0x1E7D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_416562
L_103315:
	movq %r15,0x58(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	movq %r15,0x50(%rbp)
	jmp L_103313
.p2align 0x4
L_416562:
L_103316:
	movq 0x58(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x58(%rbp)
.p2align 0x4,,0x7
L_103317:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_416565
.p2align 0x4,,0x7
L_103318:
	movq $0x1E7D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_416563
L_103319:
	movq %r15,0x58(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	movq %r15,0x50(%rbp)
	jmp L_103317
.p2align 0x4
L_416563:
L_103320:
	movq %r15,0x48(%rbp)
L_103321:
	movq 0x40(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_103298
L_103323:
	movq $0x3FCF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x60(%rbp),%r11
	movq %r11,0x0(%r14)
	movl %r13d,0x60(%rbp)
	movq %r15,0x8(%r14)
	movq %r14,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_103324+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
L_416565:
L_103328:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_103329+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_103329
.p2align 0x4
.long 0x6FA
L_103329:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_103318
.p2align 0x4
L_416566:
L_103330:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_103331+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_103331
.p2align 0x4
.long 0x11CD
L_103331:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_103314
.p2align 0x4
L_416567:
L_103332:
	movq 0x38(%rbp),%r14
	movq %r14,0x48(%rbp)
	jmp L_103321
.p2align 0x4
L_416568:
L_103333:
	movq 0x30(%rbp),%r15
	movq %r15,0x48(%rbp)
	jmp L_103321
.p2align 0x4
L_416569:
L_103397:
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq %r15,0x10(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x30(%rbp)
	movl 0x58(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	movl 0x5C(%rbp),%r15d
	movl %r15d,0x48(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x40(%rbp)
	jmp normal_23
.p2align 0x4
L_416570:
L_103396:
	movq $0x1,0x0(%rbp)
	movq $0x1,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_416572:
L_103398:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_103399+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_103399
.p2align 0x4
.long 0x4AE
L_103399:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	jmp L_103280
.p2align 0x4
.long 0x90C
L_103300:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_103301
L_103302:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_103303+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_103303
.p2align 0x4
.long 0x9BB
L_103303:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_103301:
	movq $0x1E63,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x5E3
L_103357:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_103358
L_103359:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_103360+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_103360
.p2align 0x4
.long 0x5E6
L_103360:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_103358:
	movq 0x20(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp loop_1148
.p2align 0x4
.long 0x90C
L_103324:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_103325
L_103326:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_103327+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_103327
.p2align 0x4
.long 0x9BB
L_103327:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_103325:
	movq $0x1E65,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl normal_23
.hidden normal_23
normal_23:
L_103400:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_103401
L_103434:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_103435+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_103435
.p2align 0x4
.long 0x11D4
L_103435:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_103401:
	cmpl $0x1,0x48(%rbp)
	je L_416577
L_103402:
	movq 0x0(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_103403+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp forceMeaningBlock_0
.p2align 0x4
L_416577:
L_103417:
	movslq 0x38(%rbp),%r15
	movq 0x40(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_103406
L_103419:
	movl $0x0,0x0(%r14,%r15,4)
	movq 0x30(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_416583
L_103421:
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x38(%rbp)
	movq 0x18(%r13),%r15
	movq %r15,0x40(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x48(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_103409
L_103423:
	movq 0x28(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%ecx
	movslq %ecx,%r11
	cmpq %r11,%r14
	jne L_416581
L_103425:
	cmpl %r13d,%ecx
	jne L_103427
L_103428:
	cmpl $0x0,%r13d
	jl L_416579
L_103429:
	xorl %ecx,%ecx
loop_1149:
	cmpl 0x48(%rbp),%ecx
	jnl L_416578
L_103431:
	movl %ecx,%r15d
	incl %r15d
	movl %r15d,0x30(%rbp)
	movslq %ecx,%r15
	movq 0x28(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x58(%rbp)
	movq 0x40(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x60(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x58,%rbp
	leaq (L_103432+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1380
.p2align 0x4
L_416578:
L_103430:
	movq 0x38(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp simplifyBlock_1
.p2align 0x4
L_416579:
L_103427:
	movq (globalObjptr+0xCF8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_416581:
L_103409:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_416583:
L_103406:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1050
L_103403:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_103404
L_103415:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_103416+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_103416
.p2align 0x4
.long 0x11D2
L_103416:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_103404:
	movslq 0x38(%rbp),%r15
	movq 0x30(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_103406
L_103407:
	movq 0x0(%r14,%r15,8),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x20(%rbp)
	movq 0x28(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_103409
L_103410:
	movl %r13d,0x38(%rbp)
	movq $0x3FD3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq %r14,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_103411+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
.long 0x11D3
L_103432:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movl 0x30(%rbp),%ecx
	jmp loop_1149
.p2align 0x4
.long 0x519
L_103411:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_103412
L_103413:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_103414+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_103414
.p2align 0x4
.long 0x51C
L_103414:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_103412:
	movq $0x1E67,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x0(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl simplifyBlock_1
.hidden simplifyBlock_1
simplifyBlock_1:
L_103436:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_103437
L_103808:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_103809+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_103809
.p2align 0x4
.long 0x45B
L_103809:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_103437:
	movq 0x10(%rbp),%r15
	movq 0xA8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_103438+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp evalStatements_0
.p2align 0x4
.long 0x5EF
L_103438:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_103439
L_103806:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_103807+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_103807
.p2align 0x4
.long 0x4E9
L_103807:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_103439:
	movq 0x10(%rbp),%r15
	movq 0xE8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0xE0(%r15),%r13
	movq %r13,0x30(%rbp)
	movq 0xD8(%r15),%r13
	movq %r13,0x38(%rbp)
	movq 0xD0(%r15),%r13
	movq %r13,0x40(%rbp)
	movq 0xC8(%r15),%r13
	movq %r13,0x48(%rbp)
	movq 0xC0(%r15),%r13
	movq %r13,0x50(%rbp)
	movq 0xB8(%r15),%r13
	movq 0x58(%r15),%r11
	movq %r11,0x58(%rbp)
	movq 0x50(%r15),%r11
	movq 0x40(%r15),%r10
	movq %r10,0x60(%rbp)
	movq 0x0(%r15),%r10
	movq %r10,0x68(%rbp)
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_416604
L_103440:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r10
	shrq $0x1,%r10
	cmpq $0xF31,%r10
	je L_416602
	cmpq $0xF32,%r10
	je L_416600
	cmpq $0xF33,%r10
	je L_416598
	cmpq $0xF34,%r10
	je L_416597
	cmpq $0xF35,%r10
	je L_416594
	cmpq $0xF36,%r10
	je L_416592
L_103441:
	movq 0x10(%r15),%r10
	movq %r10,0x38(%rbp)
	movq 0x8(%r15),%r10
	movq %r10,0x40(%rbp)
	movq 0x0(%r15),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movl %r15d,%r10d
	movslq %r10d,%r9
	cmpq %r15,%r9
	jne L_416591
L_103444:
	movl %r10d,0x80(%rbp)
	movq $0x4043,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,0x0(%r11)
	movq %r11,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_103445+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
L_416591:
L_103443:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_416592:
L_103620:
	movq 0x20(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r11d
	movslq %r11d,%r10
	cmpq %r10,%r15
	jne L_103443
L_103622:
	movl %r11d,0x88(%rbp)
	movq $0x37B7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r15,0x80(%rbp)
	addq $0x18,%r12
	addq $0x80,%rbp
	leaq (L_103623+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_19
.p2align 0x4
L_416594:
L_103512:
	movq 0x10(%r15),%r13
	movq 0x8(%r15),%r11
	movq %r11,0x38(%rbp)
	movq 0x0(%r15),%r11
	movq %r11,0x40(%rbp)
L_103513:
	movq %r13,%r15
	andq $0x3,%r15
	jz L_416596
L_103514:
	movq %r13,0x10(%rbp)
	movq $0x1,0x18(%rbp)
L_103515:
	movq 0x40(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_103443
L_103517:
	movl %r13d,0x50(%rbp)
	movq $0x4043,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_103518+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
L_416596:
L_103522:
	movq 0x8(%r13),%r15
	movq %r15,0x18(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x70(%rbp)
	movq 0x68(%rbp),%r15
	movq 0x8(%r15),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x48(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x50(%rbp)
	movq %r11,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_103523+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_33
.p2align 0x4
L_416597:
L_103507:
	movq %r11,0x60(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x58(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	addq $0x58,%rbp
	leaq (L_103508+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1375
.p2align 0x4
L_416598:
L_103494:
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r11d
	movslq %r11d,%r10
	cmpq %r10,%r15
	jne L_103443
L_103496:
	movl %r11d,0x80(%rbp)
	movq $0x37B7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r15,0x78(%rbp)
	addq $0x18,%r12
	addq $0x78,%rbp
	leaq (L_103497+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_19
.p2align 0x4
L_416600:
L_103487:
	movq 0x0(%r15),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movl %r15d,%r11d
	movslq %r11d,%r10
	cmpq %r10,%r15
	jne L_103443
L_103489:
	movl %r11d,0x38(%rbp)
	movq $0x4043,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq %r14,0x0(%r15)
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_103490+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
L_416602:
L_103480:
	movq 0x0(%r15),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movl %r15d,%r11d
	movslq %r11d,%r10
	cmpq %r10,%r15
	jne L_103443
L_103482:
	movl %r11d,0x38(%rbp)
	movq $0x4043,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq %r14,0x0(%r15)
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_103483+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
L_416604:
L_103805:
	movq $0x1,0x10(%rbp)
	movq $0x1,%r13
	xchgq %r13,%r15
L_103458:
	movq 0x20(%rbp),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_103459+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1526
.p2align 0x4
.long 0x1808
L_103445:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x68(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x58(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_103446+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_33
.p2align 0x4
.long 0x1818
L_103623:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq %r15,0x80(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x80,%rbp
	leaq (L_103624+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp primApp_7
.p2align 0x4
.long 0xA24
L_103518:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_103519
L_103520:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_103521+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_103521
.p2align 0x4
.long 0xA28
L_103521:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_103519:
	movq $0x1E6B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0x10(%rbp)
	movq 0x18(%rbp),%r15
	jmp L_103458
.p2align 0x4
.long 0x9D3
L_103523:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movl 0x70(%rbp),%r15d
	movq 0x48(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movq %r13,0x70(%rbp)
	movslq %r15d,%r11
	movl %r15d,0x68(%rbp)
	cmpq %r13,%r11
	jnb L_103449
L_103525:
	movq 0x0(%r14,%r11,8),%r15
L_103526:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_416617
L_103527:
	movq 0x10(%r15),%r14
	movq %r14,0x68(%rbp)
	movl 0x0(%r15),%r14d
	movl %r14d,0x78(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_103613
	cmpq $0x2,%r15
	je L_416607
L_103528:
	movq %r15,0x90(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x90,%rbp
	leaq (L_103529+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_33
.p2align 0x4
L_416607:
L_103613:
	movq 0x80(%rbp),%r14
	cmpq $0x1,%r14
	je nonTail_1
L_103614:
	movq %r14,%r15
	andq $0x3,%r15
	jnz nonTail_1
L_103615:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xF37,%r15
	jne nonTail_1
L_103616:
	movq 0x8(%r14),%r13
	movq %r13,0x88(%rbp)
	movq 0x0(%r14),%r15
L_103585:
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%ecx
	movslq %ecx,%r13
	cmpq %r14,%r13
	jne L_103443
L_103587:
	movslq 0x78(%rbp),%r13
	movq 0x60(%rbp),%r11
	cmpq 0xFFFFFFFFFFFFFFF0(%r11),%r13
	jnb L_103449
L_103589:
	movq 0x0(%r11,%r13,8),%r10
	movq 0x18(%r10),%r9
	movq 0xFFFFFFFFFFFFFFF0(%r9),%r8
	movl %r8d,%ebx
	movslq %ebx,%rsp
	cmpq %r8,%rsp
	jne L_103443
L_103591:
	cmpl %ecx,%ebx
	jne nonTail_1
L_103593:
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_1151:
	cmpl %ebx,%ecx
	je L_416611
L_103594:
	movslq %ebx,%r13
	cmpq %r14,%r13
	jnb L_416610
L_103596:
	movq 0x0(%r15,%r13,8),%r11
	movq %r11,%r13
	andq $0x1,%r13
	cmpq $0x1,%r13
	jne nonTail_1
L_103597:
	shrq $0x1,%r11
	movl %r11d,%r13d
	cmpl %ebx,%r13d
	jne nonTail_15
L_103599:
	incl %ebx
	jo L_416608
L_103600:
	jmp loop_1151
.p2align 0x4
L_416608:
L_103578:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
nonTail_15:
nonTail_1:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_103535
L_103560:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_103561+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_103561
.p2align 0x4
.long 0x1813
L_103561:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_103535:
	movq $0x8E5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movl 0x78(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x80(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0x88(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x88,%rbp
	leaq (L_103536+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp forceMeaningBlock_0
.p2align 0x4
L_416610:
L_103449:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_416611:
L_103601:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_103602
L_103607:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_103608+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_103608
.p2align 0x4
.long 0x1816
L_103608:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_103602:
	movq 0x88(%rbp),%r15
	movq %r15,0x10(%rbp)
tail_2:
	movq $0x8E5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movl 0x78(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x80(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_103603+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp deleteLabelMeaning_0
.p2align 0x4
L_416617:
L_103452:
	movq (globalObjptr+0x2230)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x180B
L_103508:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_103509
L_103510:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_103511+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_103511
.p2align 0x4
.long 0x180C
L_103511:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_103509:
	movq $0x40A5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x28,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x10(%rbp),%r11
	movq %r11,0x10(%r15)
	movq 0x28(%rbp),%r10
	movq %r10,0x18(%r15)
	movq %r15,0x50(%rbp)
	movq $0x40A1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq %r10,0x0(%r15)
	movq %r13,0x8(%r15)
	movq 0x48(%rbp),%r9
	movq %r9,0x10(%r15)
	movq %r15,0x38(%rbp)
	movq %r10,0x40(%rbp)
	movq %r13,0x48(%rbp)
	movq $0x1,0x58(%rbp)
	movq %r11,0x60(%rbp)
	movq %r14,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_103504+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp simplifyCase_1
.p2align 0x4
.long 0x180A
L_103497:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x68(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x30(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x48(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_103498+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_33
.p2align 0x4
.long 0x496
L_103490:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_103491
L_103492:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_103493+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_103493
.p2align 0x4
.long 0x63A
L_103493:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_103491:
	movq $0x1E65,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x10(%rbp)
	movq $0x1,%r15
	jmp L_103458
.p2align 0x4
.long 0x496
L_103483:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_103484
L_103485:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_103486+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_103486
.p2align 0x4
.long 0x63A
L_103486:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_103484:
	movq $0x1E63,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x10(%rbp)
	movq $0x1,%r15
	jmp L_103458
.p2align 0x4
.long 0x4E5
L_103459:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq $0x1,%r15
	je L_416627
L_103460:
	movq 0x8(%rbp),%r15
	cmpq $0x1,%r15
	je L_416626
L_103461:
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq $0x1,0x30(%rbp)
.p2align 0x4,,0x7
L_103462:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_416625
.p2align 0x4,,0x7
L_103463:
	movq $0x1E7D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_416622
L_103464:
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x28(%rbp)
	jmp L_103462
.p2align 0x4
L_416622:
L_103465:
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x18(%rbp)
.p2align 0x4,,0x7
L_103466:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_416624
.p2align 0x4,,0x7
L_103467:
	movq $0x1E7D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_416623
L_103468:
	movq %r15,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	movq %r15,0x20(%rbp)
	jmp L_103466
.p2align 0x4
L_416623:
L_103469:
	movq %r15,0x8(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_416624:
L_103470:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_103471+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_103471
.p2align 0x4
.long 0x51F
L_103471:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_103467
.p2align 0x4
L_416625:
L_103472:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_103473+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_103473
.p2align 0x4
.long 0x720
L_103473:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_103463
.p2align 0x4
L_416626:
L_103474:
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_416627:
L_103475:
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x67C
L_103446:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movl 0x50(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_103447
L_103478:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_103479+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_103479
.p2align 0x4
.long 0xAA4
L_103479:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_103447:
	movslq 0x38(%rbp),%r15
	movq 0x28(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_103449
L_103450:
	movq 0x0(%r14,%r15,8),%r13
L_103451:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_103452
L_103453:
	movq 0x10(%r13),%r15
	movl 0x0(%r13),%r14d
	movl %r14d,0x28(%rbp)
	movq 0x8(%r13),%r11
	movq $0x8E5,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	movq %r11,0x10(%r13)
	addq $0x20,%r12
	movl %r14d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,0x50(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_103454+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp forceMeaningBlock_0
.p2align 0x4
.long 0x1819
L_103624:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_103625
L_103803:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_103804+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_103804
.p2align 0x4
.long 0xC14
L_103804:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_103625:
	movq 0x50(%rbp),%r15
	movq %r15,%r14
	andq $0x3,%r14
	cmpq $0x1,%r14
	je L_416639
L_103626:
	andq $0x3,%r15
	jz L_416632
L_103627:
	movq 0x18(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_103443
L_103629:
	movl %r13d,0x88(%rbp)
	movq $0x3FD3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq %r14,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_103630+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
L_416632:
L_103656:
	movq 0x50(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x13A9,%r14
	je L_416638
	cmpq $0x13AA,%r14
	je L_416633
L_103657:
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x48(%rbp),%r15
	movq 0x30(%r15),%r14
	movq 0x8(%r14),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x28(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x80(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_103658+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_33
.p2align 0x4
L_416633:
L_103742:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r13,0x18(%rbp)
	movq $0xC43,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x38(%rbp)
	addq $0x10,%r12
	movq %r14,0x0(%r13)
	cmpq $0x1,%r14
	je L_416637
L_103743:
	movq 0x8(%r14),%r14
	xorl %ecx,%ecx
	movq %r14,%r15
.p2align 0x4,,0x7
L_103744:
	incl %ecx
	movl %ecx,0x40(%rbp)
	jo L_103578
L_103745:
	cmpq $0x1,%r15
	je L_416634
L_103746:
	movq 0x8(%r15),%r15
	jmp L_103744
.p2align 0x4
L_416634:
L_103747:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_103748
L_103781:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_103782+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_103782
.p2align 0x4
.long 0x1830
L_103782:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_103748:
	movl 0x40(%rbp),%ecx
L_103749:
	movl %ecx,0x88(%rbp)
	movq $0x37B5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (uses_2+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_19
.p2align 0x4
L_416637:
L_103783:
	xorl %ecx,%ecx
	jmp L_103749
.p2align 0x4
L_416638:
L_103679:
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x48(%rbp),%r15
	movq 0x30(%r15),%r14
	movq 0x8(%r14),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x30(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x80(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_103680+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_33
.p2align 0x4
L_416639:
L_103784:
	movq 0x48(%rbp),%r14
	movq 0x30(%r14),%r13
	movq 0x8(%r13),%r11
	movq 0x10(%r11),%r10
	movq %r10,0x18(%rbp)
	movq 0x0(%r11),%r10
	movq %r10,0x88(%rbp)
	movq 0x58(%rbp),%r14
	movq %r14,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_103785+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_33
.p2align 0x4
.long 0x10F5
L_103529:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movl 0x90(%rbp),%r13d
	movl %r13d,0x7C(%rbp)
	movslq %r13d,%r15
	cmpq 0x70(%rbp),%r15
	jnb L_103449
L_103531:
	movq 0x48(%rbp),%r13
	movq 0x0(%r13,%r15,8),%r14
L_103532:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_103452
L_103533:
	movl 0x0(%r14),%ecx
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_103613
L_103534:
	movq %r15,%r14
	andq $0x3,%r14
	jnz nonTail_1
L_103562:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xF38,%r14
	jne nonTail_1
L_103563:
	movq 0x8(%r15),%r13
	movq %r13,0x88(%rbp)
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%ebx
	movslq %ebx,%r13
	cmpq %r15,%r13
	jne L_103443
L_103565:
	movslq %ecx,%r13
	movq 0x60(%rbp),%r11
	cmpq 0xFFFFFFFFFFFFFFF0(%r11),%r13
	jnb L_103449
L_103567:
	movq 0x0(%r11,%r13,8),%r10
	movq 0x18(%r10),%r9
	movq 0xFFFFFFFFFFFFFFF0(%r9),%r8
	movl %r8d,%ecx
	movslq %ecx,%rsp
	cmpq %r8,%rsp
	jne L_103443
L_103569:
	cmpl %ebx,%ecx
	jne nonTail_1
L_103571:
	xorl %ecx,%ecx
.p2align 0x4,,0x7
loop_1150:
	cmpl %ebx,%ecx
	je L_416643
L_103572:
	movslq %ecx,%r13
	cmpq %r15,%r13
	jnb L_103449
L_103574:
	movq 0x0(%r14,%r13,8),%r11
	movq %r11,%r13
	andq $0x1,%r13
	cmpq $0x1,%r13
	jne nonTail_1
L_103575:
	shrq $0x1,%r11
	movl %r11d,%r13d
	cmpl %r13d,%ecx
	jne nonTail_1
L_103577:
	incl %ecx
	jo L_103578
L_103579:
	jmp loop_1150
.p2align 0x4
L_416643:
L_103580:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_103581
L_103610:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_103611+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_103611
.p2align 0x4
.long 0x1817
L_103611:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_103581:
	movq 0x80(%rbp),%r14
	cmpq $0x1,%r14
	je L_416644
L_103582:
	movq %r14,%r15
	andq $0x3,%r15
	jnz nonTail_1
L_103583:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xF37,%r15
	jne nonTail_1
L_103584:
	movq 0x8(%r14),%r13
	movq %r13,0x88(%rbp)
	movq 0x0(%r14),%r15
	jmp L_103585
.p2align 0x4
L_416644:
L_103609:
	movq 0x88(%rbp),%r15
	movq %r15,0x10(%rbp)
	jmp tail_2
.p2align 0x4
.long 0x180D
L_103536:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_103537
L_103558:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_103559+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_103559
.p2align 0x4
.long 0x1812
L_103559:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_103537:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_416654
	cmpq $0x2,%r15
	je L_416652
L_103538:
	movq %r15,0x88(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x88,%rbp
	leaq (L_103539+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_33
.p2align 0x4
L_416652:
L_103557:
	movq $0x2,%r14
	xchgq %r14,%r15
L_103549:
	movslq 0x78(%rbp),%r14
	movq 0x30(%rbp),%r13
	cmpq 0xFFFFFFFFFFFFFFF0(%r13),%r14
	jnb L_103449
L_103551:
	movq 0x0(%r13,%r14,8),%r11
	movq 0x10(%r11),%r10
	movq $0x23B5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r10,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x10(%rbp)
	addq $0x18,%r12
	movq $0x1,0x18(%rbp)
	jmp L_103515
.p2align 0x4
L_416654:
L_103556:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_103549
.p2align 0x4
.long 0x1814
L_103603:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_103604
L_103605:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_103606+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_103606
.p2align 0x4
.long 0x1815
L_103606:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_103604:
	movq 0x10(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq $0x1,0x10(%rbp)
	jmp L_103515
.p2align 0x4
.long 0x496
L_103504:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r14
	movq %r14,0x10(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x18(%rbp)
	jmp L_103458
.p2align 0x4
.long 0x811
L_103498:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movl 0x40(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_103499
L_103505:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_103506+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_103506
.p2align 0x4
.long 0xA27
L_103506:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_103499:
	movslq 0x28(%rbp),%r15
	movq 0x30(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_103449
L_103501:
	movq 0x0(%r14,%r15,8),%r13
L_103502:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_103452
L_103503:
	movq 0x10(%r13),%r15
	movl 0x0(%r13),%r14d
	movq 0x8(%r13),%r11
	movq $0x8E5,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movl %r14d,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r11,0x10(%r13)
	addq $0x20,%r12
	movl $0x0,0x4(%r13)
	movq %r13,0x38(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq $0x1,0x40(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x30,%rbp
	leaq (L_103504+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp gotoMeaning_1
.p2align 0x4
.long 0x9AC
L_103454:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_103455
L_103476:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_103477+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_103477
.p2align 0x4
.long 0x1809
L_103477:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_103455:
	movslq 0x28(%rbp),%r15
	movq 0x30(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_103449
L_103457:
	movq 0x0(%r14,%r15,8),%r13
	movq 0x10(%r13),%r11
	movq $0x1E61,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x10(%r15)
	addq $0x20,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x10(%rbp)
	movq $0x1,%r15
	jmp L_103458
.p2align 0x4
.long 0x181A
L_103630:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x68(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x38(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x40(%rbp)
	movq %r13,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_103631+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_33
.p2align 0x4
.long 0x181F
L_103658:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movl 0x78(%rbp),%r15d
	movl %r15d,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_103659
L_103677:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_103678+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_103678
.p2align 0x4
.long 0x1823
L_103678:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_103659:
	movslq 0x30(%rbp),%r15
	movq 0x28(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_103449
L_103661:
	movq 0x0(%r14,%r15,8),%r13
L_103662:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_103452
L_103663:
	movq 0x10(%r13),%r15
	movl 0x0(%r13),%r14d
	movq 0x8(%r13),%r11
	movq $0x8E5,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movl %r14d,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r11,0x10(%r13)
	addq $0x20,%r12
	movl $0x0,0x4(%r13)
	movq %r13,0x78(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_103664+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp deleteLabelMeaning_0
.p2align 0x4
.long 0x182B
uses_2:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_103750
L_103779:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_103780+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_103780
.p2align 0x4
.long 0x1830
L_103780:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_103750:
	movq 0x38(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_103443
L_103752:
	movl %r13d,0x88(%rbp)
	movq $0x3FD3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq %r14,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_103753+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
.long 0x1221
L_103680:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movl 0x78(%rbp),%r15d
	movl %r15d,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_103681
L_103740:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_103741+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_103741
.p2align 0x4
.long 0x182A
L_103741:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_103681:
	movslq 0x50(%rbp),%r15
	movq 0x30(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_103449
L_103683:
	movq 0x0(%r14,%r15,8),%r13
L_103684:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_103452
L_103685:
	movq 0x10(%r13),%r15
	movl 0x0(%r13),%r14d
	movq 0x8(%r13),%r11
	movq $0x8E5,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movl %r14d,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r11,0x10(%r13)
	addq $0x20,%r12
	movl $0x0,0x4(%r13)
	movq %r13,0x78(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_103686+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp deleteLabelMeaning_0
.p2align 0x4
.long 0x1831
L_103785:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movl 0x80(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_103786
L_103801:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_103802+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_103802
.p2align 0x4
.long 0x1833
L_103802:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_103786:
	movslq 0x28(%rbp),%r15
	movq 0x18(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_103449
L_103788:
	movq 0x0(%r14,%r15,8),%r13
L_103789:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_103452
L_103790:
	movq 0x10(%r13),%r15
	movl 0x0(%r13),%r14d
	movq 0x8(%r13),%r11
	movq $0x8E5,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movl %r14d,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r11,0x10(%r13)
	addq $0x20,%r12
	movl $0x0,0x4(%r13)
	movq %r13,0x80(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_103791+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp deleteLabelMeaning_0
.p2align 0x4
.long 0x180E
L_103539:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movl 0x88(%rbp),%r15d
	movl %r15d,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_103540
L_103554:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_103555+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_103555
.p2align 0x4
.long 0x1811
L_103555:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_103540:
	movslq 0x18(%rbp),%r15
	cmpq 0x70(%rbp),%r15
	jnb L_103449
L_103542:
	movq 0x48(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
L_103543:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_103452
L_103544:
	movq 0x10(%r13),%r15
	movl 0x0(%r13),%r14d
	movl %r14d,0x18(%rbp)
	movq 0x8(%r13),%r11
	movq $0x8E5,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	movq %r11,0x10(%r13)
	addq $0x20,%r12
	movl %r14d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,0x88(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x88,%rbp
	leaq (L_103545+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp forceMeaningBlock_0
.p2align 0x4
.long 0x4C8
L_103631:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movl 0x70(%rbp),%r15d
	movl %r15d,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_103632
L_103654:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_103655+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_103655
.p2align 0x4
.long 0x4D1
L_103655:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_103632:
	movq 0x38(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq %r14,0x50(%rbp)
	movslq 0x48(%rbp),%r13
	cmpq %r14,%r13
	jnb L_103449
L_103634:
	movq 0x0(%r15,%r13,8),%r14
L_103635:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_103452
L_103636:
	movq 0x10(%r14),%r15
	movl 0x0(%r14),%r13d
	movl %r13d,0x48(%rbp)
	movq 0x8(%r14),%r11
	movq $0x8E5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	movq %r11,0x10(%r14)
	addq $0x20,%r12
	movl %r13d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq %r14,0x70(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_103637+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp forceMeaningBlock_0
.p2align 0x4
.long 0x1820
L_103664:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_103665
L_103675:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_103676+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_103676
.p2align 0x4
.long 0x1822
L_103676:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_103665:
	movq $0x37B3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x78(%rbp)
	movl $0x1,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_103666+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_19
.p2align 0x4
.long 0x182B
L_103753:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x68(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x40(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x48(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq %r13,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_103754+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_33
.p2align 0x4
.long 0x1824
L_103686:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_103687+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x1832
L_103791:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq $0x1,0x80(%rbp)
	movl $0x0,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_103792+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_19
.p2align 0x4
.long 0x180F
L_103545:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_103546
L_103552:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_103553+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_103553
.p2align 0x4
.long 0x1810
L_103553:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_103546:
	movslq 0x18(%rbp),%r15
	movq 0x30(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_103449
L_103548:
	movq 0x0(%r14,%r15,8),%r13
	movq 0x10(%r13),%r13
	movq %r13,%r15
	jmp L_103549
.p2align 0x4
.long 0x4C8
L_103637:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x30(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq %r14,0x68(%rbp)
	movslq 0x48(%rbp),%r13
	cmpq %r14,%r13
	jnb L_103449
L_103639:
	movq 0x0(%r15,%r13,8),%r14
	movq 0x10(%r14),%r11
	movq %r11,0x48(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_103640+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_33
.p2align 0x4
.long 0x1821
L_103666:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x68(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x40(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_103667+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_33
.p2align 0x4
.long 0x712
L_103754:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movl 0x68(%rbp),%r15d
	movl %r15d,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_103755
L_103777:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_103778+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_103778
.p2align 0x4
.long 0xA9C
L_103778:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_103755:
	movq 0x40(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq %r14,0x60(%rbp)
	movslq 0x50(%rbp),%r13
	cmpq %r14,%r13
	jnb L_103449
L_103757:
	movq 0x0(%r15,%r13,8),%r14
L_103758:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_103452
L_103759:
	movq 0x10(%r14),%r15
	movl 0x0(%r14),%r13d
	movl %r13d,0x50(%rbp)
	movq 0x8(%r14),%r11
	movq $0x8E5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	movq %r11,0x10(%r14)
	addq $0x20,%r12
	movl %r13d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq %r14,0x70(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_103760+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp forceMeaningBlock_0
.p2align 0x4
.long 0x1825
L_103687:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movl 0x78(%rbp),%r15d
	movl %r15d,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_103688
L_103738:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_103739+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_103739
.p2align 0x4
.long 0x1829
L_103739:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_103688:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x40(%rbp)
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x30(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xCE38)(%rip),%r15
	movq %r15,0x18(%r13)
	movq $0x53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x48(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x4B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x274F,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq 0x18(%rbp),%r10
	movq %r10,0x0(%r11)
	movq $0x8F9,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r11,0x0(%r10)
	addq $0x10,%r12
	movq $0x8FB,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r10,0x8(%r11)
	movq %r14,0x18(%r11)
	addq $0x30,%r12
	movq %r13,0x0(%r11)
	movq 0x28(%rbp),%r14
	movq %r14,0x10(%r11)
	movq %r15,0x20(%r11)
	movq $0x37B3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	movq %r15,0x78(%rbp)
	addq $0x10,%r12
	movl $0x1,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_103689+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_19
.p2align 0x4
.long 0x1832
L_103792:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x68(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x40(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_103793+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_33
.p2align 0x4
.long 0x181B
L_103640:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movl 0x78(%rbp),%r15d
	movl %r15d,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_103641
L_103652:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_103653+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_103653
.p2align 0x4
.long 0x181E
L_103653:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_103641:
	movslq 0x40(%rbp),%r15
	cmpq 0x50(%rbp),%r15
	jnb L_103449
L_103643:
	movq 0x38(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
L_103644:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_103452
L_103645:
	movq 0x10(%r13),%r15
	movl 0x0(%r13),%r14d
	movl %r14d,0x38(%rbp)
	movq 0x8(%r13),%r11
	movq $0x8E5,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	movq %r11,0x10(%r13)
	addq $0x20,%r12
	movl %r14d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,0x78(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_103646+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp forceMeaningBlock_0
.p2align 0x4
.long 0x4E3
L_103667:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movl 0x38(%rbp),%r15d
	movl %r15d,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_103668
L_103673:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_103674+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_103674
.p2align 0x4
.long 0xBBD
L_103674:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_103668:
	movslq 0x30(%rbp),%r15
	movq 0x28(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_103449
L_103670:
	movq 0x0(%r14,%r15,8),%r13
L_103671:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_103452
L_103672:
	movq 0x10(%r13),%r15
	movl 0x0(%r13),%r14d
	movq 0x8(%r13),%r11
	movq $0x8E5,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movl %r14d,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r11,0x10(%r13)
	addq $0x20,%r12
	movl $0x0,0x4(%r13)
	movq %r13,0x38(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq $0x1,0x40(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x30,%rbp
	leaq (L_103504+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp gotoMeaning_1
.p2align 0x4
.long 0x1213
L_103760:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x30(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq %r14,0x68(%rbp)
	movslq 0x50(%rbp),%r13
	cmpq %r14,%r13
	jnb L_103449
L_103762:
	movq 0x0(%r15,%r13,8),%r14
	movq 0x10(%r14),%r11
	movq %r11,0x50(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_103763+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_33
.p2align 0x4
.long 0x1826
L_103689:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x68(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x30(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_103690+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_33
.p2align 0x4
.long 0x4E3
L_103793:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movl 0x38(%rbp),%r15d
	movl %r15d,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_103794
L_103799:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_103800+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_103800
.p2align 0x4
.long 0xBBD
L_103800:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_103794:
	movslq 0x30(%rbp),%r15
	movq 0x28(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_103449
L_103796:
	movq 0x0(%r14,%r15,8),%r13
L_103797:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_103452
L_103798:
	movq 0x10(%r13),%r15
	movl 0x0(%r13),%r14d
	movq 0x8(%r13),%r11
	movq $0x8E5,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movl %r14d,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r11,0x10(%r13)
	addq $0x20,%r12
	movl $0x0,0x4(%r13)
	movq %r13,0x38(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq $0x1,0x40(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x30,%rbp
	leaq (L_103504+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp gotoMeaning_1
.p2align 0x4
.long 0x181C
L_103646:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_103647
L_103650:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_103651+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_103651
.p2align 0x4
.long 0x181D
L_103651:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_103647:
	movslq 0x38(%rbp),%r15
	cmpq 0x68(%rbp),%r15
	jnb L_103449
L_103649:
	movq 0x30(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x10(%r13),%r11
	movq $0x1E6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x18(%r15)
	addq $0x30,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x20(%r15)
	movq %r15,0x10(%rbp)
	movq $0x1,%r15
	jmp L_103458
.p2align 0x4
.long 0x182C
L_103763:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movl 0x78(%rbp),%r15d
	movl %r15d,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_103764
L_103775:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_103776+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_103776
.p2align 0x4
.long 0x182F
L_103776:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_103764:
	movslq 0x48(%rbp),%r15
	cmpq 0x60(%rbp),%r15
	jnb L_103449
L_103766:
	movq 0x40(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
L_103767:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_103452
L_103768:
	movq 0x10(%r13),%r15
	movl 0x0(%r13),%r14d
	movl %r14d,0x40(%rbp)
	movq 0x8(%r13),%r11
	movq $0x8E5,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	movq %r11,0x10(%r13)
	addq $0x20,%r12
	movl %r14d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,0x78(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_103769+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp forceMeaningBlock_0
.p2align 0x4
.long 0xB65
L_103690:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movl 0x58(%rbp),%r15d
	movl %r15d,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_103691
L_103736:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_103737+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_103737
.p2align 0x4
.long 0xB67
L_103737:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_103691:
	movslq 0x50(%rbp),%r15
	movq 0x30(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_103449
L_103693:
	movq 0x0(%r14,%r15,8),%r13
L_103694:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_103452
L_103695:
	movq 0x10(%r13),%r15
	movl 0x0(%r13),%r14d
	movq 0x8(%r13),%r11
	movq $0x8E5,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movl %r14d,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r11,0x10(%r13)
	addq $0x20,%r12
	movl $0x0,0x4(%r13)
	movq %r13,0x60(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq $0x1,0x68(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x58,%rbp
	leaq (L_103696+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp gotoMeaning_1
.p2align 0x4
.long 0x182D
L_103769:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_103770
L_103773:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_103774+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_103774
.p2align 0x4
.long 0x182E
L_103774:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_103770:
	movslq 0x40(%rbp),%r15
	cmpq 0x68(%rbp),%r15
	jnb L_103449
L_103772:
	movq 0x30(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x10(%r13),%r11
	movq $0x1E6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x18(%r15)
	addq $0x30,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x20(%r15)
	movq %r15,0x10(%rbp)
	movq $0x1,%r15
	jmp L_103458
.p2align 0x4
.long 0x1827
L_103696:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_103697
L_103734:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_103735+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_103735
.p2align 0x4
.long 0x8A8
L_103735:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_103697:
	movq 0x48(%rbp),%r14
	movl 0x0(%r14),%r13d
	testl %r13d,%r13d
	jnz L_416707
L_103698:
	movq 0x28(%rbp),%r15
	jmp L_103458
.p2align 0x4
L_416707:
L_103699:
	movq 0x38(%rbp),%r15
	movq 0x20(%r15),%r14
	movq 0x18(%r15),%r13
	movq 0x10(%r15),%r11
	movq 0x8(%r15),%r10
	movq %r10,0x30(%rbp)
	movq 0x0(%r15),%r10
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_416713
L_103700:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r9
	shrq $0x1,%r9
	cmpq $0xE4A,%r9
	je L_416712
	cmpq $0xE4B,%r9
	je L_416709
	cmpq $0xE4C,%r9
	je L_416708
L_103701:
	movq 0x0(%r15),%r9
	movq %r9,0x38(%rbp)
	movq 0x8(%r11),%r15
	movq %r15,0x48(%rbp)
	movq 0x0(%r11),%r15
	movq %r15,0x50(%rbp)
	movq %r9,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_103702+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_416708:
	xchgq %r14,%r15
L_103710:
	movq $0x1E59,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1E5F,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x20,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x10(%r13)
	movq $0x1E7D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_103458
.p2align 0x4
L_416709:
L_103726:
	movq 0x0(%r15),%r14
	andq $0x1,%r14
	cmpq $0x1,%r14
	je L_416711
L_103727:
	xorb %dl,%dl
	movq %r13,%r14
real_14:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq 0x8(%r11),%r15
	movq 0x0(%r11),%r10
	testb %dl,%dl
	jnz L_416710
L_103728:
	movq %r13,%r14
L_103729:
	movq %r14,0x60(%rbp)
	movl 0x0(%r15),%r14d
	movl %r14d,0x58(%rbp)
	movzbq %dl,%r15
	shlq $0x3,%r15
	orq $0x5,%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_103708+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lookup_2
.p2align 0x4
L_416710:
L_103730:
	movq %r10,%r15
	movq %r13,%r14
	jmp L_103729
.p2align 0x4
L_416711:
L_103731:
	movb $0x1,%dl
	movq %r13,%r14
	jmp real_14
.p2align 0x4
L_416712:
L_103717:
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x30(%rbp)
	movq 0x8(%r11),%r15
	movq %r15,0x38(%rbp)
	movq 0x0(%r11),%r15
	movq %r15,0x48(%rbp)
	movq %r13,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_103718+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_416713:
L_103733:
	xchgq %r10,%r15
	jmp L_103710
.p2align 0x4
.long 0x8A6
L_103702:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movl 0x60(%rbp),%r15d
	movl %r15d,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_103703
L_103715:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_103716+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_103716
.p2align 0x4
.long 0x1828
L_103716:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_103703:
	movslq 0x58(%rbp),%r15
	movq 0x50(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_103449
L_103705:
	movq 0x0(%r14,%r15,8),%r13
	cmpq $0x1,%r13
	je L_416715
L_103706:
	movl 0x0(%r13),%r15d
	movl %r15d,0x58(%rbp)
	movq $0x1E47,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x50(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x50,%rbp
	leaq (L_103707+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lookup_2
.p2align 0x4
L_416715:
L_103714:
	movq $0x9,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x860
L_103708:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_103709
L_103711:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_103712+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_103712
.p2align 0x4
.long 0xAA4
L_103712:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_103709:
	movq 0x30(%rbp),%r15
	jmp L_103710
.p2align 0x4
.long 0xB65
L_103718:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movl 0x58(%rbp),%r15d
	movl %r15d,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_103719
L_103724:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_103725+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_103725
.p2align 0x4
.long 0xB67
L_103725:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_103719:
	movslq 0x50(%rbp),%r15
	movq 0x48(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_103449
L_103721:
	movq 0x0(%r14,%r15,8),%r13
	cmpq $0x1,%r13
	je L_103714
L_103722:
	movl 0x0(%r13),%r15d
	movl %r15d,0x58(%rbp)
	movq $0x1E47,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x50(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x50,%rbp
	leaq (L_103708+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lookup_2
.p2align 0x4
.long 0x67C
L_103707:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq %r15,0x50(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_103708+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1382
.text
.p2align 0x4
.globl evalStatements_0
.hidden evalStatements_0
evalStatements_0:
L_103810:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_103811
L_104106:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_104107+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_104107
.p2align 0x4
.long 0x45F
L_104107:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_103811:
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x10(%rbp)
	cmpq %rdx,%r14
	jne L_103813
L_103814:
	testq %rdx,%rdx
	jz L_416739
L_103815:
	cmpq $0x7FFFFFFF,%rdx
	ja L_416738
L_103816:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1559,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_103817+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_103817
.p2align 0x4
.long 0x45D
L_103817:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq %rax,0x18(%rbp)
L_103818:
	movq $0x0,0x20(%rbp)
.p2align 0x4,,0x7
loop_1152:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_416737
.p2align 0x4,,0x7
L_103819:
	movq 0x20(%rbp),%r14
	cmpq 0x10(%rbp),%r14
	jnl L_416736
L_103821:
	movl %r14d,%r13d
	movslq %r13d,%r15
	movq 0x0(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x8(%rbp),%r14
	movq 0x30(%r14),%r11
	movq %r11,0x28(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xF2E,%r15
	je L_416735
	cmpq $0xF2F,%r15
	je L_416722
L_103822:
	movq $0x3E0D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq %r11,0x8(%r15)
.p2align 0x4,,0x7
L_103823:
	movq 0x18(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x20(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x20(%rbp)
	jmp loop_1152
.p2align 0x4
L_416722:
L_103825:
	movq 0x10(%r13),%r15
	movq %r15,0x30(%rbp)
	movq 0x8(%r13),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%r13),%r14
	movq %r14,0x40(%rbp)
	movq 0x8(%rbp),%r14
	movq 0x70(%r14),%r13
	movq %r13,0x48(%rbp)
	movq 0x68(%r14),%r13
	movq %r13,0x50(%rbp)
	movq 0x60(%r14),%r13
	movq %r13,0x58(%rbp)
	movq 0x58(%r14),%r13
	movq %r13,0x60(%rbp)
	movq 0x50(%r14),%r13
	movq %r13,0x68(%rbp)
	movq 0x48(%r14),%r13
	movq %r13,0x70(%rbp)
	movq 0x40(%r14),%r13
	movq %r13,0x78(%rbp)
	movq 0x38(%r14),%r13
	movq %r13,0x80(%rbp)
	cmpq $0x1,%r15
	jne L_416734
.p2align 0x4,,0x7
L_103828:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_416733
.p2align 0x4,,0x7
L_103829:
	movq 0x40(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xF28,%r14
	je L_416730
	cmpq $0xF29,%r14
	je L_416728
	cmpq $0xF2A,%r14
	je L_416726
	cmpq $0xF2B,%r14
	je L_416725
	cmpq $0xF2C,%r14
	je L_416723
L_103830:
	movq 0x0(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (setVar_0+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1375
.p2align 0x4
L_416723:
L_104092:
	movq 0x0(%r15),%r14
	movq $0x274F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x48(%rbp)
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	cmpq $0x1,0x30(%rbp)
	jne L_416724
.p2align 0x4,,0x7
L_103834:
	movq $0x1,%r15
	jmp L_103823
.p2align 0x4
L_416724:
L_104093:
	movq 0x30(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_104094+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1375
.p2align 0x4
L_416725:
L_104081:
	movq 0x8(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_104082+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1375
.p2align 0x4
L_416726:
L_103968:
	movq 0x8(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_416727
L_103970:
	movl %r13d,0x70(%rbp)
	movq $0x37B7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_103971+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_19
.p2align 0x4
L_416727:
L_103813:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_416728:
L_103873:
	movq 0x8(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_103813
L_103875:
	movl %r13d,0xA0(%rbp)
	movq $0x37B7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_103876+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_19
.p2align 0x4
L_416730:
L_103836:
	movl 0x0(%r15),%r14d
	movl %r14d,0x50(%rbp)
	movq 0x8(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xF3C,%r15
	jne L_416732
L_103837:
	movq 0x30(%rbp),%r15
	cmpq $0x1,%r15
	je L_103834
L_103838:
	movq %r15,0x50(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_103839+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1375
.p2align 0x4
L_416732:
L_103844:
	movq 0x0(%r14),%r15
	movq %r15,0x60(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_103845+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1375
.p2align 0x4
L_416733:
L_104099:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_104100+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_104100
.p2align 0x4
.long 0x1852
L_104100:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	jmp L_103829
.p2align 0x4
L_416734:
L_103826:
	movq $0x53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x4B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x8F9,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0x8FB,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r13,0x8(%r10)
	movq %r14,0x18(%r10)
	movq %r15,0x20(%r10)
	addq $0x30,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x0(%r10)
	movq 0x38(%rbp),%r14
	movq %r14,0x10(%r10)
	movq %r10,0x90(%rbp)
	movq %r15,0x98(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0xA0(%rbp)
	addq $0x90,%rbp
	leaq (L_103827+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1380
.p2align 0x4
L_416735:
L_103824:
	movq $0x3E0D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq %r11,0x8(%r15)
	jmp L_103823
.p2align 0x4
L_416736:
L_103820:
	movq 0x18(%rbp),%r15
	movq $0xA19,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_416737:
L_104102:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_104103+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_104103
.p2align 0x4
.long 0x5E1
L_104103:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	jmp L_103819
.p2align 0x4
L_416738:
L_104104:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_416739:
L_104105:
	movq (globalObjptr+0x2250)(%rip),%r15
	movq %r15,0x18(%rbp)
	jmp L_103818
.p2align 0x4
.long 0x1835
setVar_0:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x28(%rbp)
setVar_1:
	movq 0x30(%rbp),%r13
	cmpq $0x1,%r13
	je L_103834
L_103831:
	movq %r15,%r14
	movq %r13,%r15
L_103832:
	movq %r14,0x30(%rbp)
	movq %r15,0x38(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x30,%rbp
	leaq (L_103833+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1380
.p2align 0x4
.long 0x5B9
L_104094:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_104095
L_104096:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_104097+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_104097
.p2align 0x4
.long 0x1001
L_104097:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_104095:
	movq 0x28(%rbp),%r14
	movq 0x8(%r14),%r15
	movq 0x20(%r14),%r13
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x3E19,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x18(%r15)
	addq $0x28,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x10(%r15)
	jmp L_103823
.p2align 0x4
.long 0x184F
L_104082:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_104083
L_104090:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_104091+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_104091
.p2align 0x4
.long 0x1001
L_104091:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_104083:
	movq $0x274D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x50(%rbp)
	addq $0x10,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r15
	cmpq $0x1,%r15
	je L_103834
L_104084:
	movq %r15,0x60(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_104085+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1375
.p2align 0x4
.long 0x1849
L_103971:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r13
	movq %r13,0x40(%rbp)
	movq 0x38(%rbp),%r13
	movq 0x8(%r13),%r15
L_103972:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_103973
L_103974:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xF25,%r14
	jne L_416786
L_103975:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%ecx
	movslq %ecx,%r13
	cmpq %r13,%r15
	jne L_103813
L_103977:
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_1155:
	cmpl %ecx,%ebx
	je L_416751
L_103978:
	movslq %ebx,%r13
	cmpq %r15,%r13
	jnb L_416750
L_103980:
	salq $0x4,%r13
	movl 0x0(%r14,%r13,1),%r11d
	testl %r11d,%r11d
	jnz L_416747
L_103981:
	incl %ebx
	jo L_416746
L_103982:
	jmp loop_1155
.p2align 0x4
L_416746:
L_103907:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_416747:
L_103983:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_103985
L_103992:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_103993+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_103993
.p2align 0x4
.long 0x184C
L_103993:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_103985:
	movq $0x274B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x48(%rbp)
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r15
	cmpq $0x1,%r15
	je L_103834
L_103986:
	movq %r15,0x68(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_103987+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1375
.p2align 0x4
L_416750:
L_103863:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_416751:
L_103994:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_103995
L_104079:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_104080+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_104080
.p2align 0x4
.long 0x184B
L_104080:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_103995:
	cmpq $0x1,0x58(%rbp)
	jne L_103985
L_103997:
	movq $0x71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x50(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x40(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%ecx
	movslq %ecx,%r13
	cmpq %r14,%r13
	jne L_103999
L_104000:
	movl %ecx,%ebx
	decl %ebx
	jo L_104001
L_104002:
	movq $0x1,0x58(%rbp)
.p2align 0x4,,0x7
loop_1156:
	cmpl $0x0,%ebx
	jl L_416778
L_104003:
	movl %ebx,%r15d
	decl %r15d
	movslq %ebx,%r14
	movq 0x40(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r11
	movq 0x8(%r11),%r10
	movq 0x0(%r10),%r9
L_104004:
	movq %r9,%r14
	andq $0x3,%r14
	jnz L_416776
L_104019:
	movq 0xFFFFFFFFFFFFFFF8(%r9),%r14
	shrq $0x1,%r14
	cmpq $0x13A4,%r14
	jne L_416774
L_104024:
	movq 0x8(%r9),%r14
	cmpl %ebx,0x0(%r9)
	jne L_416772
L_104029:
	movq 0x58(%rbp),%r13
	cmpq $0x1,%r13
	je L_416756
L_104030:
	movq 0x0(%r13),%r11
	movq 0x0(%r14),%r10
	movq 0x10(%r10),%r9
	cmpq %r9,0x10(%r11)
	jne L_416752
L_104035:
	movl %r15d,%ebx
	jmp loop_1156
.p2align 0x4
L_416752:
L_104031:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_104032
L_104033:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_104034+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_104034
.p2align 0x4
.long 0x184D
L_104034:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_104032:
	movq 0x50(%rbp),%r15
	movq $0x19,%r14
L_104007:
	cmpq %r15,0x50(%rbp)
	je L_416753
L_104008:
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_416753:
L_104010:
	movq $0x274B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x48(%rbp)
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq 0x30(%rbp),%r15
	cmpq $0x1,%r15
	je L_103834
L_104011:
	movq %r15,0x58(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_104012+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1375
.p2align 0x4
L_416756:
L_104036:
	movq 0x10(%r14),%r11
	cmpq $0x1,%r11
	je L_416770
L_104037:
	movq 0x8(%r11),%r10
L_104038:
	movq %r10,%r11
	andq $0x3,%r11
	jnz L_104039
L_104043:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r11
	shrq $0x1,%r11
	cmpq $0xF25,%r11
	jne L_416767
L_104044:
	movq 0x8(%r10),%r13
	movq %r13,0x58(%rbp)
	movq 0x0(%r10),%r11
	cmpq $0x2,%r13
	jne L_416765
L_104050:
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r13
	movl %r13d,%ebx
	movslq %ebx,%r10
	cmpq %r13,%r10
	jne L_416764
L_104052:
	cmpl %ecx,%ebx
	movl %ecx,(localWord32+0x0)(%rip)
	jne L_416762
L_104058:
	xorl %ecx,%ecx
	movl %r15d,(localWord32+0x8)(%rip)
	movq %r14,%r15
	movq %r11,%r14
.p2align 0x4,,0x7
loop_1157:
	cmpl %ecx,%ebx
	je L_416761
L_104059:
	movslq %ecx,%r11
	cmpq %r13,%r11
	jnb L_416760
L_104061:
	salq $0x4,%r11
	movl 0x0(%r14,%r11,1),%r10d
	testl %r10d,%r10d
	jnz L_416758
L_104062:
	incl %ecx
	jo L_416757
L_104063:
	jmp loop_1157
.p2align 0x4
L_416757:
L_104001:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_416758:
L_104064:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_104055
L_104066:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_104067+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_104067
.p2align 0x4
.long 0x184D
L_104067:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_104055:
	movq 0x50(%rbp),%r15
	movq $0x19,%r14
	jmp L_104007
.p2align 0x4
L_416760:
L_104060:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_416761:
L_104068:
	movq %r15,0x58(%rbp)
	movl (localWord32+0x8)(%rip),%ebx
	movl (localWord32+0x0)(%rip),%ecx
	jmp loop_1156
.p2align 0x4
L_416762:
L_104053:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_104055
L_104056:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_104057+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_104057
.p2align 0x4
.long 0x184D
L_104057:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	jmp L_104055
.p2align 0x4
L_416764:
L_103999:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_416765:
L_104045:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_104046
L_104048:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_104049+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_104049
.p2align 0x4
.long 0x184E
L_104049:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_104046:
L_104047:
	movq 0x50(%rbp),%r15
	movq $0x19,%r14
	jmp L_104007
.p2align 0x4
L_416767:
L_104039:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_104040
L_104041:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_104042+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_104042
.p2align 0x4
.long 0x184D
L_104042:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_104040:
	movq 0x50(%rbp),%r15
	movq $0x19,%r14
	jmp L_104007
.p2align 0x4
L_416770:
L_104069:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_104070
L_104071:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_104072+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_104072
.p2align 0x4
.long 0x184D
L_104072:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_104070:
	movq 0x50(%rbp),%r15
	movq $0x19,%r14
	jmp L_104007
.p2align 0x4
L_416772:
L_104025:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_104026
L_104027:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_104028+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_104028
.p2align 0x4
.long 0x184D
L_104028:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_104026:
	movq 0x50(%rbp),%r15
	movq $0x19,%r14
	jmp L_104007
.p2align 0x4
L_416774:
L_104020:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_104021
L_104022:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_104023+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_104023
.p2align 0x4
.long 0x184D
L_104023:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_104021:
	movq 0x50(%rbp),%r15
	movq $0x19,%r14
	jmp L_104007
.p2align 0x4
L_416776:
L_104005:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_104006
L_104017:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_104018+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_104018
.p2align 0x4
.long 0x184D
L_104018:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_104006:
	movq 0x50(%rbp),%r15
	movq $0x19,%r14
	jmp L_104007
.p2align 0x4
L_416778:
L_104073:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_104074
L_104077:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_104078+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_104078
.p2align 0x4
.long 0x184B
L_104078:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_104074:
	movq 0x58(%rbp),%r15
	cmpq $0x1,%r15
	je L_104010
L_104075:
	jmp setVar_1
.p2align 0x4
L_416786:
L_103973:
	movq (globalObjptr+0x2248)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1838
L_103876:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq %r15,0x98(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0xA0(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0xA8(%rbp)
	addq $0x98,%rbp
	leaq (L_103877+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp primApp_7
.p2align 0x4
.long 0x57D
L_103839:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_103840
L_103841:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_103842+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_103842
.p2align 0x4
.long 0x1001
L_103842:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_103840:
	movq 0x48(%rbp),%r14
	movq 0x8(%r14),%r15
	movq 0x20(%r14),%r13
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq $0x1,0x0(%r15)
	movq $0x3E1D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x20(%r15)
	addq $0x30,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x18(%r15)
	jmp L_103823
.p2align 0x4
.long 0x1836
L_103845:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_103846
L_103871:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_103872+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_103872
.p2align 0x4
.long 0x15CD
L_103872:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_103846:
	movq 0x40(%rbp),%r13
	movq 0x10(%r13),%r15
	movq 0x8(%r13),%r11
	movq 0x0(%r11),%r14
L_103847:
	movq %r15,%r13
	andq $0x3,%r13
	jnz dontChange_0
L_103855:
	movq %r14,%r13
	andq $0x3,%r13
	jnz dontChange_0
L_103856:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x13A5,%r13
	jne dontChange_0
L_103857:
	movq 0x0(%r14),%r13
	movq 0x8(%r15),%r14
L_103858:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_103859
L_103860:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xF25,%r15
	jne L_416793
L_103861:
	movq 0x0(%r14),%r15
	movslq 0x50(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	jnb L_103863
L_103864:
	movq %r14,%r11
	salq $0x4,%r11
	movl 0x0(%r15,%r11,1),%r10d
	testl %r10d,%r10d
	jnz dontChange_1
L_103865:
	cmpq 0xFFFFFFFFFFFFFFF0(%r13),%r14
	jnb L_103863
L_103867:
	movq 0x0(%r13,%r14,8),%r11
	movq 0x30(%rbp),%r15
	cmpq $0x1,%r15
	je L_103834
L_103868:
	movq %r11,%r14
	jmp L_103832
.p2align 0x4
dontChange_1:
dontChange_0:
	movq $0x2749,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x48(%rbp)
	addq $0x18,%r12
	movl 0x50(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r15
	cmpq $0x1,%r15
	je L_103834
L_103848:
	movq %r15,0x60(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_103849+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1375
.p2align 0x4
L_416793:
L_103859:
	movq (globalObjptr+0x2240)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1834
L_103827:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	jmp L_103828
.p2align 0x4
.long 0x5BE
L_103833:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	jmp L_103834
.p2align 0x4
.long 0x1850
L_104085:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_104086
L_104087:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_104088+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_104088
.p2align 0x4
.long 0x1851
L_104088:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_104086:
	movq 0x28(%rbp),%r14
	movq 0x8(%r14),%r15
	movq 0x20(%r14),%r13
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x3E1F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x20(%r15)
	addq $0x30,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x18(%r15)
	jmp L_103823
.p2align 0x4
.long 0x184A
L_103987:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_103988
L_103989:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_103990+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_103990
.p2align 0x4
.long 0x184B
L_103990:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_103988:
	movq 0x28(%rbp),%r14
	movq 0x8(%r14),%r15
	movq 0x20(%r14),%r13
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x3E17,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x20(%r15)
	addq $0x30,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x18(%r15)
	jmp L_103823
.p2align 0x4
.long 0x5B9
L_104012:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_104013
L_104014:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_104015+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_104015
.p2align 0x4
.long 0x1001
L_104015:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_104013:
	movq 0x28(%rbp),%r14
	movq 0x8(%r14),%r15
	movq 0x20(%r14),%r13
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x3E15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x18(%r15)
	addq $0x28,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x10(%r15)
	jmp L_103823
.p2align 0x4
.long 0x1839
L_103877:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_103878
L_103966:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_103967+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_103967
.p2align 0x4
.long 0x1848
L_103967:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_103878:
	movq 0x50(%rbp),%r15
	movq %r15,%r14
	andq $0x3,%r14
	cmpq $0x3,%r14
	je L_416807
L_103879:
	andq $0x3,%r15
	jz L_416799
L_103880:
	movq 0x88(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_103881+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp maySideEffect_0
.p2align 0x4
L_416799:
L_103895:
	movq 0x50(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x13A9,%r15
	je L_416805
	cmpq $0x13AA,%r15
	je L_416800
L_103896:
	movq 0x0(%r14),%r15
	jmp setVar_1
.p2align 0x4
L_416800:
L_103904:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq %r11,0x40(%rbp)
	movq $0xC43,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x48(%rbp)
	addq $0x10,%r12
	movq %r13,0x0(%r14)
	cmpq $0x1,%r13
	je L_416804
L_103905:
	movq 0x8(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_103906:
	incl %ecx
	movl %ecx,0x50(%rbp)
	jo L_103907
L_103908:
	cmpq $0x1,%r15
	je L_416801
L_103909:
	movq 0x8(%r15),%r15
	jmp L_103906
.p2align 0x4
L_416801:
L_103910:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_103911
L_103926:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_103927+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_103927
.p2align 0x4
.long 0x15CD
L_103927:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_103911:
	movl 0x50(%rbp),%ecx
L_103912:
	movl %ecx,0x58(%rbp)
	movq $0x37B5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_103913+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_19
.p2align 0x4
L_416804:
L_103928:
	xorl %ecx,%ecx
	jmp L_103912
.p2align 0x4
L_416805:
L_103897:
	movq 0x0(%r14),%r15
	movq %r15,0x40(%rbp)
	movq $0x274F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x48(%rbp)
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq 0x30(%rbp),%r15
	cmpq $0x1,%r15
	je L_103834
L_103898:
	movq %r15,0x58(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_103899+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1375
.p2align 0x4
L_416807:
L_103929:
	shrq $0x2,%r15
	movl %r15d,0x28(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_103930+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x1837
L_103849:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_103850
L_103851:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_103852+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_103852
.p2align 0x4
.long 0x15CD
L_103852:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_103850:
	movq 0x28(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x20(%r15),%r13
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq 0x48(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x3E1B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x20(%r15)
	addq $0x30,%r12
	movl 0x50(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x18(%r15)
	jmp L_103823
.p2align 0x4
.long 0x183A
L_103881:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movl 0x98(%rbp),%r15d
	movl %r15d,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_103882
L_103893:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_103894+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_103894
.p2align 0x4
.long 0x183C
L_103894:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_103882:
	movq $0xA17,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x50(%rbp)
	addq $0x20,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x88(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x30(%rbp),%r15
	cmpq $0x1,%r15
	je L_416810
L_103883:
	movq %r15,0x60(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_103884+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1375
.p2align 0x4
L_416810:
L_103889:
	movl 0x48(%rbp),%r13d
	testl %r13d,%r13d
	jz L_103834
L_103891:
	movq 0x88(%rbp),%r14
	movq 0x40(%rbp),%r13
	xchgq %r13,%r15
L_103892:
	movq $0x3E11,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x20,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x10(%r13)
	movq %r13,%r15
	jmp L_103823
.p2align 0x4
.long 0x57D
L_103913:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_103914+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp maySideEffect_0
.p2align 0x4
.long 0x5B9
L_103899:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_103900
L_103901:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_103902+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_103902
.p2align 0x4
.long 0x1001
L_103902:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_103900:
	movq 0x28(%rbp),%r14
	movq 0x8(%r14),%r15
	movq 0x20(%r14),%r13
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x3E0F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x18(%r15)
	addq $0x28,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x10(%r15)
	jmp L_103823
.p2align 0x4
.long 0x183F
L_103930:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movl 0x90(%rbp),%r15d
	movl %r15d,0x2C(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_103931
L_103964:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_103965+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_103965
.p2align 0x4
.long 0x1847
L_103965:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_103931:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x38(%rbp)
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x2C(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xCE38)(%rip),%r15
	movq %r15,0x18(%r13)
	movq 0x68(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movl 0x28(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_416814
L_103932:
	movq %r13,0x28(%rbp)
L_103933:
	movq $0x1,0x90(%rbp)
	movl $0x0,0x98(%rbp)
	addq $0x90,%rbp
	leaq (L_103934+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
L_416814:
L_103963:
	movq %r14,0x28(%rbp)
	jmp L_103933
.p2align 0x4
.long 0xED4
L_103884:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_103885
L_103887:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_103888+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_103888
.p2align 0x4
.long 0x183B
L_103888:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_103885:
	movq 0x28(%rbp),%r11
	movq 0x8(%r11),%r15
	movq 0x20(%r11),%r13
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq $0x1,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq 0x50(%rbp),%r15
	movl 0x48(%rbp),%ecx
L_103886:
	movq $0x3E13,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movl %ecx,0x0(%r11)
	movq %r15,0x8(%r11)
	movq %r14,0x10(%r11)
	movq %r13,0x18(%r11)
	addq $0x28,%r12
	movl $0x0,0x4(%r11)
	movq %r11,%r15
	jmp L_103823
.p2align 0x4
.long 0x100B
L_103914:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movl 0x58(%rbp),%r15d
	movl %r15d,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_103915
L_103924:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_103925+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_103925
.p2align 0x4
.long 0x15CD
L_103925:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_103915:
	movq $0xA17,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x58(%rbp)
	addq $0x20,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x30(%rbp),%r15
	cmpq $0x1,%r15
	je L_416817
L_103916:
	movq %r15,0x68(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_103917+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1375
.p2align 0x4
L_416817:
L_103921:
	movl 0x50(%rbp),%r13d
	testl %r13d,%r13d
	jz L_103834
L_103923:
	movq 0x40(%rbp),%r14
	movq 0x48(%rbp),%r13
	xchgq %r13,%r15
	jmp L_103892
.p2align 0x4
.long 0x1840
L_103934:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_103935
L_103961:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_103962+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_103962
.p2align 0x4
.long 0x1846
L_103962:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_103935:
	movq $0x1E55,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x48(%rbp)
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1,0x90(%rbp)
	movl $0x0,0x98(%rbp)
	addq $0x90,%rbp
	leaq (L_103936+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_7
.p2align 0x4
.long 0x183D
L_103917:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_103918
L_103919:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_103920+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_103920
.p2align 0x4
.long 0x183E
L_103920:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_103918:
	movq 0x28(%rbp),%r11
	movq 0x8(%r11),%r15
	movq 0x20(%r11),%r13
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq $0x1,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq 0x58(%rbp),%r15
	movl 0x50(%rbp),%ecx
	jmp L_103886
.p2align 0x4
.long 0x1841
L_103936:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x70(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x50(%rbp)
	movq 0x28(%rbp),%r14
	movl 0x0(%r14),%ebx
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%ecx
	movslq %ecx,%r13
	cmpq %r13,%r14
	jne L_103813
L_103938:
	cmpl $0x0,%ecx
	jl L_416824
L_103939:
	movl %ebx,0x58(%rbp)
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_1153:
	cmpl %ecx,%ebx
	jnl L_416822
L_103959:
	movslq %ebx,%r15
	salq $0x4,%r15
	movl 0x58(%rbp),%r14d
	imull $0x5555,%r14d
	movq 0x40(%rbp),%r13
	movq 0x8(%r13,%r15,1),%r11
	xorl 0x0(%r11),%r14d
	movl %r14d,0x58(%rbp)
	incl %ebx
	jmp loop_1153
.p2align 0x4
L_416822:
L_103940:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_103941
L_103957:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_103958+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_103958
.p2align 0x4
.long 0x1845
L_103958:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_103941:
	movq $0x1E4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x90(%rbp)
	movl 0x58(%rbp),%r15d
	movl %r15d,0x98(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0xA0(%rbp)
	addq $0x90,%rbp
	leaq (L_103942+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lookup_2
.p2align 0x4
L_416824:
L_103960:
	movq (globalObjptr+0x4F8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1842
L_103942:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_103943
L_103955:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_103956+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_103956
.p2align 0x4
.long 0x1844
L_103956:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_103943:
	movq $0x1E5F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0x40(%rbp)
	movq $0x1E57,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x78(%rbp),%r13
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	movq $0x1E5F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x20,%r12
	movq %r12,(gcState+0x0)(%rip)
	movq 0x80(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x30(%rbp),%r15
	movq %r15,0x10(%r14)
	movq %r14,0x50(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1443,%rcx
	movq $0x2,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_103944+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_103944
.p2align 0x4
.long 0x1843
L_103944:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	xorq %r15,%r15
	movq %rax,%r14
.p2align 0x4,,0x7
loop_1154:
	cmpq $0x2,%r15
	jnl L_416828
L_103950:
	movl %r15d,%r13d
	cmpl $0x0,%r13d
	je L_416827
	cmpl $0x1,%r13d
	je L_416826
L_103951:
	movq (globalObjptr+0x4A8)(%rip),%r13
	movq %r13,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_416826:
L_103954:
	movq 0x50(%rbp),%r13
L_103953:
	movq %r14,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r13,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_1154
.p2align 0x4
L_416827:
L_103952:
	movq 0x40(%rbp),%r13
	jmp L_103953
.p2align 0x4
L_416828:
L_103945:
	movq $0x21,0xFFFFFFFFFFFFFFF8(%r14)
	movq %r14,0x30(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_103946+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp evalStatements_0
.p2align 0x4
.long 0x5BE
L_103946:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_103947
L_103948:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_103949+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_103949
.p2align 0x4
.long 0x56D
L_103949:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_103947:
	movq $0x3E0B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_103823
.text
.p2align 0x4
.globl x_1380
.hidden x_1380
x_1380:
L_104108:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_104139
L_104109:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_416843
L_104110:
	movq 0x10(%rbp),%r11
	movq 0x8(%r11),%r10
	movq 0x8(%r10),%r9
	movq %r9,0x18(%rbp)
	movq 0x0(%r10),%r14
	movq 0x8(%rbp),%r11
	movq 0x10(%r11),%r10
	movq %r10,0x20(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_416842
L_104112:
	movq %r15,0x0(%r11)
	movq 0x0(%r10),%r11
	cmpq $0x1,%r11
	je L_416841
L_104113:
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r11
	xorl %ecx,%ecx
	movq %r11,%r15
.p2align 0x4,,0x7
L_104115:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_416840
L_104130:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xD40,%r11
	jne L_416839
L_104131:
	movq 0x8(%r13),%r11
	cmpq 0x0(%r13),%r14
	movq %r14,(localObjptr+0x8)(%rip)
	je L_416836
L_104116:
	incl %ecx
	movl %ecx,0x8(%rbp)
	jo L_416835
L_104118:
	cmpq $0x1,%r15
	je L_416831
L_104119:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x8)(%rip),%r14
	jmp L_104115
.p2align 0x4
L_416831:
L_104120:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_104121
L_104128:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_104129+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_104129
.p2align 0x4
.long 0xB28
L_104129:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_104121:
	movl 0x8(%rbp),%ecx
L_104122:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_416833
L_104124:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_104126
L_104127:
	movl %ecx,0x0(%r15)
L_104126:
	movq $0x1373,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1A81,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x20(%rbp),%r15
	movq 0x0(%r15),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq %r11,0x0(%r15)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_416833:
L_104123:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_416835:
L_104117:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_416836:
L_104133:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_104123
L_104134:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_416837
L_104137:
	movl %ecx,0x0(%r14)
	movq %r11,%r15
L_104136:
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_416837:
L_104135:
	movq %r11,%r15
	jmp L_104136
.p2align 0x4
L_416839:
	movq %r14,(localObjptr+0x8)(%rip)
	jmp L_104116
.p2align 0x4
L_416840:
	movq %r14,(localObjptr+0x8)(%rip)
	jmp L_104116
.p2align 0x4
L_416841:
L_104138:
	xorl %ecx,%ecx
	jmp L_104122
.p2align 0x4
L_416842:
L_104111:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_416843:
L_104139:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_104140+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_104140
.p2align 0x4
.long 0x45B
L_104140:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_104110
.text
.p2align 0x4
.globl primApp_7
.hidden primApp_7
primApp_7:
L_104141:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x20(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_104142
L_106921:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_106922+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_106922
.p2align 0x4
.long 0x6FE
L_106922:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_104142:
	movq 0x10(%rbp),%r15
	movq 0x28(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x30(%rbp)
	cmpq %r14,%rdx
	jne L_104144
L_104145:
	testq %rdx,%rdx
	jz L_416858
L_104146:
	cmpq $0x7FFFFFFF,%rdx
	ja L_416857
L_104147:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1557,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_104148+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_104148
.p2align 0x4
.long 0x1244
L_104148:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq %rax,0x10(%rbp)
L_104149:
	movq $0x0,0x38(%rbp)
.p2align 0x4,,0x7
loop_1158:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_416856
.p2align 0x4,,0x7
L_104150:
	movq 0x38(%rbp),%r14
	cmpq 0x30(%rbp),%r14
	jnl L_416851
L_106902:
	movl %r14d,%r13d
	movslq %r13d,%r15
	movq 0x0(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x8(%r13),%r14
	movq 0x0(%r14),%r11
L_106903:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_416850
L_106906:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0x13A5,%r15
	je L_416846
	cmpq $0x13A7,%r15
	je L_416845
L_106907:
	movq $0x2759,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x10,%r12
L_106905:
	movq 0x10(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x38(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x38(%rbp)
	jmp loop_1158
.p2align 0x4
L_416845:
L_106916:
	movq 0x0(%r11),%r15
	movq $0x275B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
	jmp L_106905
.p2align 0x4
L_416846:
L_106908:
	movq 0x8(%r11),%r15
	movq 0x0(%r11),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r10
	movl %r10d,%r9d
	movslq %r9d,%r8
	cmpq %r10,%r8
	jne L_416849
L_106911:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_416848
L_106913:
	testl %r9d,%r9d
	jz L_416847
L_106914:
	movq $0x2759,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x10,%r12
	jmp L_106905
.p2align 0x4
L_416847:
L_106915:
	movq $0x275D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
	jmp L_106905
.p2align 0x4
L_416848:
L_106912:
	movq $0x2759,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x10,%r12
	jmp L_106905
.p2align 0x4
L_416849:
L_104144:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_416850:
L_106904:
	movq $0x2759,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x10,%r12
	jmp L_106905
.p2align 0x4
L_416851:
L_104151:
	movq 0x10(%rbp),%r15
	movq $0x1781,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r10,%r13
	jne L_104144
L_104153:
	decl %r11d
	jo L_416854
L_104155:
	movl %r11d,0x38(%rbp)
	movq $0x1,0x30(%rbp)
.p2align 0x4,,0x7
loop_1159:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_416853
.p2align 0x4,,0x7
L_104156:
	movl 0x38(%rbp),%r15d
	cmpl $0x0,%r15d
	jl L_416852
L_104157:
	movl %r15d,%r14d
	decl %r14d
	movslq %r15d,%r13
	movl %r14d,0x38(%rbp)
	movq 0x10(%rbp),%r15
	movq 0x0(%r15,%r13,8),%r14
	movq $0x275F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x30(%rbp)
	jmp loop_1159
.p2align 0x4
L_416852:
L_104158:
	movq 0x28(%rbp),%r14
	movq 0x290(%r14),%r13
	movq %r13,0x10(%rbp)
	movq 0x288(%r14),%r11
	movq %r11,0x38(%rbp)
	movq 0x278(%r14),%r11
	movq %r11,0x40(%rbp)
	movq 0x270(%r14),%r11
	movq %r11,0x48(%rbp)
	movq 0x268(%r14),%r11
	movq %r11,0x50(%rbp)
	movq 0x260(%r14),%r11
	movq %r11,0x58(%rbp)
	movq 0x258(%r14),%r11
	movq %r11,0x60(%rbp)
	movq 0x250(%r14),%r11
	movq %r11,0x68(%rbp)
	movq 0x248(%r14),%r11
	movq %r11,0x70(%rbp)
	movq 0x240(%r14),%r11
	movq %r11,0x78(%rbp)
	movq 0x238(%r14),%r11
	movq %r11,0x80(%rbp)
	movq 0x230(%r14),%r11
	movq %r11,0x88(%rbp)
	movq 0x228(%r14),%r11
	movq %r11,0x90(%rbp)
	movq 0x220(%r14),%r11
	movq %r11,0x98(%rbp)
	movq 0x218(%r14),%r11
	movq %r11,0xA0(%rbp)
	movq 0x210(%r14),%r11
	movq %r11,0xA8(%rbp)
	movq 0x208(%r14),%r11
	movq %r11,0xB0(%rbp)
	movq 0x200(%r14),%r11
	movq %r11,0xB8(%rbp)
	movq 0x1F8(%r14),%r11
	movq %r11,0xC0(%rbp)
	movq 0x1F0(%r14),%r11
	movq %r11,0xC8(%rbp)
	movq 0x1E8(%r14),%r11
	movq %r11,0xD0(%rbp)
	movq 0x1E0(%r14),%r11
	movq %r11,0xD8(%rbp)
	movq 0x1D8(%r14),%r11
	movq %r11,0xE0(%rbp)
	movq 0x1D0(%r14),%r11
	movq %r11,0xE8(%rbp)
	movq 0x1C8(%r14),%r11
	movq %r11,0xF0(%rbp)
	movq 0x1C0(%r14),%r11
	movq %r11,0xF8(%rbp)
	movq 0x1B8(%r14),%r11
	movq %r11,0x100(%rbp)
	movq 0x1B0(%r14),%r11
	movq %r11,0x108(%rbp)
	movq 0x1A8(%r14),%r11
	movq %r11,0x110(%rbp)
	movq 0x1A0(%r14),%r11
	movq %r11,0x118(%rbp)
	movq 0x198(%r14),%r11
	movq %r11,0x120(%rbp)
	movq 0x190(%r14),%r11
	movq %r11,0x128(%rbp)
	movq 0x188(%r14),%r11
	movq %r11,0x130(%rbp)
	movq 0x180(%r14),%r11
	movq %r11,0x138(%rbp)
	movq 0x178(%r14),%r11
	movq %r11,0x140(%rbp)
	movq 0x170(%r14),%r11
	movq %r11,0x148(%rbp)
	movq 0x168(%r14),%r11
	movq %r11,0x150(%rbp)
	movq 0x160(%r14),%r11
	movq %r11,0x158(%rbp)
	movq 0x158(%r14),%r11
	movq %r11,0x160(%rbp)
	movq 0x150(%r14),%r11
	movq %r11,0x168(%rbp)
	movq 0x148(%r14),%r11
	movq %r11,0x170(%rbp)
	movq 0x140(%r14),%r11
	movq %r11,0x178(%rbp)
	movq 0x138(%r14),%r11
	movq %r11,0x180(%rbp)
	movq 0x130(%r14),%r11
	movq %r11,0x188(%rbp)
	movq 0x128(%r14),%r11
	movq %r11,0x190(%rbp)
	movq 0x120(%r14),%r11
	movq %r11,0x198(%rbp)
	movq 0x118(%r14),%r11
	movq %r11,0x1A0(%rbp)
	movq 0x110(%r14),%r11
	movq %r11,0x1A8(%rbp)
	movq 0x108(%r14),%r11
	movq %r11,0x1B0(%rbp)
	movq 0x100(%r14),%r11
	movq %r11,0x1B8(%rbp)
	movq 0xF8(%r14),%r11
	movq %r11,0x1C0(%rbp)
	movq 0xF0(%r14),%r11
	movq %r11,0x1C8(%rbp)
	movq 0xE8(%r14),%r11
	movq %r11,0x1D0(%rbp)
	movq 0xE0(%r14),%r11
	movq %r11,0x1D8(%rbp)
	movq 0xD8(%r14),%r11
	movq %r11,0x1E0(%rbp)
	movq 0xD0(%r14),%r11
	movq %r11,0x1E8(%rbp)
	movq 0xC8(%r14),%r11
	movq %r11,0x1F0(%rbp)
	movq 0xC0(%r14),%r11
	movq %r11,0x1F8(%rbp)
	movq 0xB8(%r14),%r11
	movq %r11,0x200(%rbp)
	movq 0xB0(%r14),%r11
	movq %r11,0x208(%rbp)
	movq 0xA8(%r14),%r11
	movq %r11,0x210(%rbp)
	movq 0xA0(%r14),%r11
	movq %r11,0x218(%rbp)
	movq 0x98(%r14),%r11
	movq %r11,0x220(%rbp)
	movq 0x90(%r14),%r11
	movq %r11,0x228(%rbp)
	movq 0x88(%r14),%r11
	movq %r11,0x230(%rbp)
	movq 0x80(%r14),%r11
	movq %r11,0x238(%rbp)
	movq 0x78(%r14),%r11
	movq %r11,0x240(%rbp)
	movq 0x70(%r14),%r11
	movq %r11,0x248(%rbp)
	movq 0x68(%r14),%r11
	movq %r11,0x250(%rbp)
	movq 0x60(%r14),%r11
	movq %r11,0x258(%rbp)
	movq 0x58(%r14),%r11
	movq %r11,0x260(%rbp)
	movq 0x50(%r14),%r11
	movq %r11,0x268(%rbp)
	movq 0x48(%r14),%r11
	movq %r11,0x270(%rbp)
	movq 0x40(%r14),%r11
	movq %r11,0x278(%rbp)
	movq 0x38(%r14),%r11
	movq %r11,0x280(%rbp)
	movq 0x30(%r14),%r11
	movq %r11,0x288(%rbp)
	movq 0x28(%r14),%r11
	movq %r11,0x290(%rbp)
	movq 0x18(%r14),%r11
	movq %r11,0x298(%rbp)
	movq 0x10(%r14),%r11
	movq %r11,0x2A0(%rbp)
	movq 0x8(%r14),%r11
	movq %r11,0x2A8(%rbp)
	movq 0x0(%r14),%r11
	movq %r11,0x2B0(%rbp)
	movl $0x80,0x2C0(%rbp)
	movq $0x3,0x2C8(%rbp)
	movq %r13,0x2D0(%rbp)
	addq $0x2C0,%rbp
	leaq (L_104159+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
L_416853:
L_106900:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_106901+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_106901
.p2align 0x4
.long 0x129B
L_106901:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_104156
.p2align 0x4
L_416854:
L_104154:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_416856:
L_106917:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_106918+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_106918
.p2align 0x4
.long 0x129C
L_106918:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_104150
.p2align 0x4
L_416857:
L_106919:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_416858:
L_106920:
	movq (globalObjptr+0x2238)(%rip),%r15
	movq %r15,0x10(%rbp)
	jmp L_104149
.p2align 0x4
.long 0x1245
L_104159:
	addq $0xFFFFFFFFFFFFFD40,%rbp
	movq 0x2C0(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq %r15,0x2C0(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x2C8(%rbp)
	addq $0x2C0,%rbp
	leaq (L_104160+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigNeg_0
.p2align 0x4
.long 0x1246
L_104160:
	addq $0xFFFFFFFFFFFFFD40,%rbp
	movq 0x2C0(%rbp),%r15
	movq %r15,0x2B8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_104161
L_106898:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2C8,%rbp
	leaq (L_106899+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_106899
.p2align 0x4
.long 0x129A
L_106899:
	addq $0xFFFFFFFFFFFFFD38,%rbp
L_104161:
	movq 0x40(%rbp),%r13
	movq 0x30(%r13),%r15
	movq 0x28(%r13),%r14
	movq 0x20(%r13),%r11
	movq 0x38(%r13),%r10
	movq 0x8(%r10),%r9
	movq $0x3D69,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq 0x2B8(%rbp),%r10
	movq %r10,0x0(%r13)
	movq 0x28(%rbp),%r10
	movq %r10,0x8(%r13)
	movq $0x1763,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r10,0x2C0(%rbp)
	movq %r9,0x0(%r10)
	movq %r13,0x8(%r10)
	movq %r15,0x10(%r10)
	movq %r14,0x18(%r10)
	movq %r11,0x20(%r10)
	addq $0x30,%r12
	movq 0x30(%rbp),%r13
	cmpq $0x1,%r13
	je L_104804
L_104162:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
.p2align 0x4,,0x7
L_104163:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0x13AD,%r13
	jne L_417890
L_104800:
	cmpq $0x1,%r14
	je L_416861
L_104801:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_104163
.p2align 0x4
L_416861:
L_104802:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_104804
L_106895:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2D0,%rbp
	leaq (L_106896+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_106896
.p2align 0x4
.long 0x1299
L_106896:
	addq $0xFFFFFFFFFFFFFD30,%rbp
L_104804:
	movq 0x30(%rbp),%r15
	cmpq $0x1,%r15
	je L_417888
L_104805:
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r15
	movq %r15,0x30(%rbp)
	movq $0x1,0x40(%rbp)
.p2align 0x4,,0x7
L_104806:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_417887
.p2align 0x4,,0x7
L_104807:
	movq 0x30(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x13AD,%r14
	jne L_417886
L_104809:
	movq 0x0(%r15),%r14
	movq $0x284B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x28(%rbp),%r13
	cmpq $0x1,%r13
	je L_416862
L_104810:
	movq %r15,0x40(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x28(%rbp)
	movq %r15,0x30(%rbp)
	jmp L_104806
.p2align 0x4
L_416862:
L_104811:
	movq %r14,0x30(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq $0x1,0x40(%rbp)
.p2align 0x4,,0x7
L_104812:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_417885
.p2align 0x4,,0x7
L_104813:
	movq $0x284B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_416863
L_104814:
	movq %r15,0x40(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x30(%rbp)
	jmp L_104812
.p2align 0x4
L_416863:
L_104816:
	movq 0x8(%rbp),%r14
	movq %r14,%r13
	andq $0xFF,%r13
	cmpq $0xD,%r13
	je L_417869
	cmpq $0x16,%r13
	je L_417854
	cmpq $0x21,%r13
	je L_417836
	cmpq $0x22,%r13
	je L_417823
	cmpq $0x32,%r13
	je L_417810
	cmpq $0x39,%r13
	je L_417792
	cmpq $0x3A,%r13
	je L_417771
	cmpq $0x59,%r13
	je L_417754
	cmpq $0x5A,%r13
	je L_417736
	cmpq $0x5F,%r13
	je L_417721
	cmpq $0x67,%r13
	je L_417706
	cmpq $0x69,%r13
	je L_417691
	cmpq $0x6A,%r13
	je L_417676
	cmpq $0x6B,%r13
	je L_417658
	cmpq $0x6D,%r13
	je L_417643
	cmpq $0x6E,%r13
	je L_417628
	cmpq $0x6F,%r13
	je L_417613
	cmpq $0x71,%r13
	je L_417598
	cmpq $0x72,%r13
	je L_417583
	cmpq $0x73,%r13
	je L_417568
	cmpq $0x75,%r13
	je L_417553
	cmpq $0x76,%r13
	je L_417536
	cmpq $0x77,%r13
	je L_417518
	cmpq $0x79,%r13
	je L_417500
	cmpq $0x7A,%r13
	je L_417478
	cmpq $0x7D,%r13
	je L_417456
	cmpq $0x7E,%r13
	je L_417434
	cmpq $0x7F,%r13
	je L_417416
	cmpq $0x81,%r13
	je L_417395
	cmpq $0x82,%r13
	je L_417374
	cmpq $0x83,%r13
	je L_417357
	cmpq $0x85,%r13
	je L_417335
	cmpq $0x87,%r13
	je L_417317
L_104817:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_104819
L_104926:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%rax
	shrq $0x1,%rax
	subq $0x11E8,%rax
	cmpq $0x18,%rax
	ja L_416864
	leaq jumpTable_230(%rip),%rbx
	jmp *(%rbx,%rax,8)
.data
.p2align 0x4
jumpTable_230:
.quad L_417298,L_417279,L_417261,L_417243,L_417225,L_417207,L_417180,L_417161,L_417142,L_417124,L_417105,L_417090,L_417075,L_417056,L_417038,L_417020,L_417002,L_416986,L_416968,L_416950,L_416932,L_416913,L_416895,L_104819,L_416877
.text
.p2align 0x4
L_416864:
L_104819:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_104167
L_104820:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
L_104821:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_104167
L_104822:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE4C,%r15
	jne L_104167
L_104823:
	movq 0x0(%r13),%r15
L_104824:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_104167
L_104825:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_104826:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_416872
L_104866:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	je L_416869
	cmpq $0xE4C,%r14
	je L_416866
	movq %r13,%r14
L_104827:
	cmpq $0x1,%r14
	jne L_416865
L_104828:
	movq %r15,0x10(%rbp)
intInfUnary_4:
	movq 0x10(%rbp),%r15
	movq %r15,0x2D0(%rbp)
	movq 0x2C0(%rbp),%r15
	movq %r15,0x2D8(%rbp)
	addq $0x2D0,%rbp
	leaq (L_104829+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1473
.p2align 0x4
L_416865:
L_104167:
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x2,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_416866:
L_104921:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_416868
L_104922:
	cmpq $0x1,0x8(%r13)
	jne L_104167
x_328:
	movq %r14,0x30(%rbp)
	movq %r15,0x38(%rbp)
	leaq L_104841(%rip),%r15
	movq %r15,0x18(%rbp)
	movq %rbp,%r15
	addq $0x20,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x98(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x2C0(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0x60(%rbp),%r15
	movq 0x78(%rbp),%r14
	movq %r14,0x60(%rbp)
	movq %r15,0x78(%rbp)
	movq 0x70(%rbp),%r15
	movq 0x68(%rbp),%r14
	movq %r14,0x70(%rbp)
	movq %r15,0x68(%rbp)
	addq $0x30,%rbp
	leaq (L_104924+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp intInfBinary_13
.p2align 0x4
L_416868:
L_104925:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_4
.p2align 0x4
L_416869:
L_104867:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_416871
L_104868:
	cmpq $0x1,0x8(%r13)
	jne L_104167
L_104869:
	movq %r15,0x28(%rbp)
	movq %r14,0x30(%rbp)
x_327:
	movq 0x28(%rbp),%r15
	movq %r15,0x2D0(%rbp)
	movq 0x2C0(%rbp),%r15
	movq %r15,0x2D8(%rbp)
	addq $0x2D0,%rbp
	leaq (L_104870+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1473
.p2align 0x4
L_416871:
L_104920:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_4
.p2align 0x4
L_416872:
	movq %r13,%r14
	jmp L_104827
.p2align 0x4
L_416877:
L_105835:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_104167
L_105836:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
L_105837:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_104167
L_105838:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE4B,%r15
	je L_416888
	cmpq $0xE4C,%r15
	je L_416878
	jmp L_104167
.p2align 0x4
L_416878:
L_105851:
	movq 0x0(%r13),%r15
L_105852:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_104167
L_105853:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_105854:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_416886
L_105857:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	je L_416883
	cmpq $0xE4C,%r14
	je L_416880
	movq %r13,%r14
L_105855:
	cmpq $0x1,%r14
	jne L_104167
L_105856:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_4
.p2align 0x4
L_416880:
L_105862:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_416882
L_105863:
	cmpq $0x1,0x8(%r13)
	jne L_104167
	jmp x_328
.p2align 0x4
L_416882:
L_105865:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_4
.p2align 0x4
L_416883:
L_105858:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_416885
L_105859:
	cmpq $0x1,0x8(%r13)
	jne L_104167
L_105860:
	movq %r15,0x28(%rbp)
	movq %r14,0x30(%rbp)
	jmp x_327
.p2align 0x4
L_416885:
L_105861:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_4
.p2align 0x4
L_416886:
	movq %r13,%r14
	jmp L_105855
.p2align 0x4
L_416888:
L_105839:
	movq 0x0(%r13),%r15
	cmpq $0x1,%r14
	jne L_104167
L_105840:
	movq 0x138(%rbp),%r14
	movq 0x8(%r14),%r13
	cmpq $0x1,0x0(%r13)
	jne L_104167
L_105842:
	movq %r15,%r14
	andq $0x1,%r14
	cmpq $0x1,%r14
	je L_416889
L_105843:
	movsd 0x0(%r15),%xmm15
	movsd %xmm15,0x30(%rbp)
	movq 0x150(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x158(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_105844+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1474
.p2align 0x4
L_416889:
L_105850:
	shrq $0x1,%r15
	movl %r15d,%r14d
	movd %r14d,%xmm15
	movss %xmm15,%xmm14
	movss %xmm14,0x30(%rbp)
	movq 0x140(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x148(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_105844+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1475
.p2align 0x4
L_416895:
L_105792:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_104167
L_105793:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
L_105794:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_104167
L_105795:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE4A,%r15
	je L_416906
	cmpq $0xE4C,%r15
	je L_416896
	jmp L_104167
.p2align 0x4
L_416896:
L_105819:
	movq 0x0(%r13),%r15
L_105820:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_104167
L_105821:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_105822:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_416904
L_105825:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	je L_416901
	cmpq $0xE4C,%r14
	je L_416898
	movq %r13,%r14
L_105823:
	cmpq $0x1,%r14
	jne L_104167
L_105824:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_4
.p2align 0x4
L_416898:
L_105830:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_416900
L_105831:
	cmpq $0x1,0x8(%r13)
	jne L_104167
	jmp x_328
.p2align 0x4
L_416900:
L_105833:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_4
.p2align 0x4
L_416901:
L_105826:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_416903
L_105827:
	cmpq $0x1,0x8(%r13)
	jne L_104167
L_105828:
	movq %r15,0x28(%rbp)
	movq %r14,0x30(%rbp)
	jmp x_327
.p2align 0x4
L_416903:
L_105829:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_4
.p2align 0x4
L_416904:
	movq %r13,%r14
	jmp L_105823
.p2align 0x4
L_416906:
L_105796:
	movq 0x0(%r13),%r15
	movq %r15,0x28(%rbp)
L_105797:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_104167
L_105798:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_105799:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_104167
L_105800:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	jne L_104167
L_105801:
	movq 0x0(%r11),%r14
	movq %r14,0x30(%rbp)
	cmpq $0x1,%r13
	jne L_104167
L_105802:
	movq 0x200(%rbp),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x38(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x40(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x48(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x58(%rbp)
	movq %r13,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_105803+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_0
.p2align 0x4
L_416913:
L_105755:
	movq 0x8(%rbp),%r14
	movl 0x0(%r14),%r13d
	movl %r13d,0x28(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x30(%rbp)
L_105756:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_104167
L_105757:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
L_105758:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_104167
L_105759:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE4A,%r15
	je L_416924
	cmpq $0xE4C,%r15
	je L_416914
	jmp L_104167
.p2align 0x4
L_416914:
L_105776:
	movq 0x0(%r13),%r15
L_105777:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_104167
L_105778:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_105779:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_416922
L_105782:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	je L_416919
	cmpq $0xE4C,%r14
	je L_416916
	movq %r13,%r14
L_105780:
	cmpq $0x1,%r14
	jne L_104167
L_105781:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_4
.p2align 0x4
L_416916:
L_105787:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_416918
L_105788:
	cmpq $0x1,0x8(%r13)
	jne L_104167
	jmp x_328
.p2align 0x4
L_416918:
L_105790:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_4
.p2align 0x4
L_416919:
L_105783:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_416921
L_105784:
	cmpq $0x1,0x8(%r13)
	jne L_104167
L_105785:
	movq %r15,0x28(%rbp)
	movq %r14,0x30(%rbp)
	jmp x_327
.p2align 0x4
L_416921:
L_105786:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_4
.p2align 0x4
L_416922:
	movq %r13,%r14
	jmp L_105780
.p2align 0x4
L_416924:
L_105760:
	movq 0x0(%r13),%r15
L_105761:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_104167
L_105762:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_105763:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_104167
L_105764:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	jne L_104167
L_105765:
	movq 0x0(%r11),%r10
	movq %r10,0x38(%rbp)
	cmpq $0x1,%r13
	jne L_104167
L_105766:
	movl 0x28(%rbp),%r13d
	testl %r13d,%r13d
	jnz L_416925
L_105767:
	movq 0x0(%r15),%r14
	movq 0x0(%r10),%r15
L_105768:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	movq %r13,0x60(%rbp)
	addq $0x18,%r12
	leaq L_104841(%rip),%r15
	movq %r15,0x18(%rbp)
	movq %rbp,%r15
	addq $0x20,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x58(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_105769+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1183
.p2align 0x4
L_416925:
L_105770:
	movq %r15,0x170(%rbp)
	leaq L_104841(%rip),%r15
	movq %r15,0x18(%rbp)
	movq %rbp,%r15
	addq $0x20,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x160(%rbp),%r15
	movq %r15,0x178(%rbp)
	addq $0x170,%rbp
	leaq (L_105771+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toIntInfX_0
.p2align 0x4
L_416932:
L_105726:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_104167
L_105727:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
L_105728:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_104167
L_105729:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE4A,%r15
	je L_416943
	cmpq $0xE4C,%r15
	je L_416933
	jmp L_104167
.p2align 0x4
L_416933:
L_105740:
	movq 0x0(%r13),%r15
L_105741:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_104167
L_105742:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_105743:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_416941
L_105746:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	je L_416938
	cmpq $0xE4C,%r14
	je L_416935
	movq %r13,%r14
L_105744:
	cmpq $0x1,%r14
	jne L_104167
L_105745:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_4
.p2align 0x4
L_416935:
L_105751:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_416937
L_105752:
	cmpq $0x1,0x8(%r13)
	jne L_104167
	jmp x_328
.p2align 0x4
L_416937:
L_105754:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_4
.p2align 0x4
L_416938:
L_105747:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_416940
L_105748:
	cmpq $0x1,0x8(%r13)
	jne L_104167
L_105749:
	movq %r15,0x28(%rbp)
	movq %r14,0x30(%rbp)
	jmp x_327
.p2align 0x4
L_416940:
L_105750:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_4
.p2align 0x4
L_416941:
	movq %r13,%r14
	jmp L_105744
.p2align 0x4
L_416943:
L_105730:
	movq 0x0(%r13),%r15
L_105731:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_104167
L_105732:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_105733:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_104167
L_105734:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	jne L_104167
L_105735:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	jne L_104167
L_105736:
	movq %r14,0x30(%rbp)
	movq %r15,0x38(%rbp)
	leaq L_104841(%rip),%r15
	movq %r15,0x18(%rbp)
	movq %rbp,%r15
	addq $0x20,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x1F8(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x30,%rbp
	leaq (word_24+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1476
.p2align 0x4
L_416950:
L_105693:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_104167
L_105694:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
L_105695:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_104167
L_105696:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE4A,%r15
	je L_416961
	cmpq $0xE4C,%r15
	je L_416951
	jmp L_104167
.p2align 0x4
L_416951:
L_105710:
	movq 0x0(%r13),%r15
L_105711:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_104167
L_105712:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_105713:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_416959
L_105716:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	je L_416956
	cmpq $0xE4C,%r14
	je L_416953
	movq %r13,%r14
L_105714:
	cmpq $0x1,%r14
	jne L_104167
L_105715:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_4
.p2align 0x4
L_416953:
L_105721:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_416955
L_105722:
	cmpq $0x1,0x8(%r13)
	jne L_104167
	jmp x_328
.p2align 0x4
L_416955:
L_105724:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_4
.p2align 0x4
L_416956:
L_105717:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_416958
L_105718:
	cmpq $0x1,0x8(%r13)
	jne L_104167
L_105719:
	movq %r15,0x28(%rbp)
	movq %r14,0x30(%rbp)
	jmp x_327
.p2align 0x4
L_416958:
L_105720:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_4
.p2align 0x4
L_416959:
	movq %r13,%r14
	jmp L_105714
.p2align 0x4
L_416961:
L_105697:
	movq 0x0(%r13),%r15
	cmpq $0x1,%r14
	jne L_104167
L_105698:
	movq 0x138(%rbp),%r14
	movq 0x8(%r14),%r13
	cmpq $0x1,0x0(%r13)
	jne L_104167
L_105700:
	movq 0x8(%r15),%r14
	cmpq $0x41,%r14
	je L_416963
L_105701:
	cmpq $0x81,%r14
	jne L_416962
L_105703:
	movq %r15,0x30(%rbp)
	movq 0x158(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x210(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x30,%rbp
	leaq (realOpt_18+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1477
.p2align 0x4
L_416962:
L_105702:
	movq (globalObjptr+0x1A50)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_416963:
L_105709:
	movq %r15,0x30(%rbp)
	movq 0x148(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x208(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x30,%rbp
	leaq (realOpt_18+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1478
.p2align 0x4
L_416968:
L_105662:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_104167
L_105663:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
L_105664:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_104167
L_105665:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE4A,%r15
	je L_416979
	cmpq $0xE4C,%r15
	je L_416969
	jmp L_104167
.p2align 0x4
L_416969:
L_105677:
	movq 0x0(%r13),%r15
L_105678:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_104167
L_105679:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_105680:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_416977
L_105683:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	je L_416974
	cmpq $0xE4C,%r14
	je L_416971
	movq %r13,%r14
L_105681:
	cmpq $0x1,%r14
	jne L_104167
L_105682:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_4
.p2align 0x4
L_416971:
L_105688:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_416973
L_105689:
	cmpq $0x1,0x8(%r13)
	jne L_104167
	jmp x_328
.p2align 0x4
L_416973:
L_105691:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_4
.p2align 0x4
L_416974:
L_105684:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_416976
L_105685:
	cmpq $0x1,0x8(%r13)
	jne L_104167
L_105686:
	movq %r15,0x28(%rbp)
	movq %r14,0x30(%rbp)
	jmp x_327
.p2align 0x4
L_416976:
L_105687:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_4
.p2align 0x4
L_416977:
	movq %r13,%r14
	jmp L_105681
.p2align 0x4
L_416979:
L_105666:
	movq 0x0(%r13),%r15
	movq %r15,0x28(%rbp)
L_105667:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_104167
L_105668:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_105669:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_104167
L_105670:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	jne L_104167
L_105671:
	movq 0x0(%r11),%r14
	movq %r14,0x30(%rbp)
	cmpq $0x1,%r13
	jne L_104167
L_105672:
	movq 0x8(%r15),%r13
	movq %r13,0x48(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_105673+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_0
.p2align 0x4
L_416986:
L_105629:
	movq 0x8(%rbp),%r14
	movq 0x0(%r14),%r13
	movl 0x0(%r13),%r11d
	movq 0x8(%r13),%r10
	movq %r10,0x28(%rbp)
L_105630:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_104167
L_105631:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
L_105632:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_104167
L_105633:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE4A,%r15
	je L_416997
	cmpq $0xE4C,%r15
	je L_416987
	jmp L_104167
.p2align 0x4
L_416987:
L_105646:
	movq 0x0(%r13),%r15
L_105647:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_104167
L_105648:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_105649:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_416995
L_105652:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	je L_416992
	cmpq $0xE4C,%r14
	je L_416989
	movq %r13,%r14
L_105650:
	cmpq $0x1,%r14
	jne L_104167
L_105651:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_4
.p2align 0x4
L_416989:
L_105657:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_416991
L_105658:
	cmpq $0x1,0x8(%r13)
	jne L_104167
	jmp x_328
.p2align 0x4
L_416991:
L_105660:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_4
.p2align 0x4
L_416992:
L_105653:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_416994
L_105654:
	cmpq $0x1,0x8(%r13)
	jne L_104167
L_105655:
	movq %r15,0x28(%rbp)
	movq %r14,0x30(%rbp)
	jmp x_327
.p2align 0x4
L_416994:
L_105656:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_4
.p2align 0x4
L_416995:
	movq %r13,%r14
	jmp L_105650
.p2align 0x4
L_416997:
L_105634:
	movq 0x0(%r13),%r15
	cmpq $0x1,%r14
	jne L_104167
L_105635:
	testl %r11d,%r11d
	jnz L_416998
L_105636:
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x1D0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_105637+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_416998:
L_105642:
	movq %r15,0x40(%rbp)
	movq 0x1C8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	leaq L_104841(%rip),%r15
	movq %r15,0x18(%rbp)
	movq %rbp,%r15
	addq $0x20,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x40,%rbp
	leaq (L_105643+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toIntInfX_0
.p2align 0x4
L_417002:
L_105600:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_104167
L_105601:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
L_105602:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_104167
L_105603:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE4A,%r15
	je L_417013
	cmpq $0xE4C,%r15
	je L_417003
	jmp L_104167
.p2align 0x4
L_417003:
L_105614:
	movq 0x0(%r13),%r15
L_105615:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_104167
L_105616:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_105617:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_417011
L_105620:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	je L_417008
	cmpq $0xE4C,%r14
	je L_417005
	movq %r13,%r14
L_105618:
	cmpq $0x1,%r14
	jne L_104167
L_105619:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_4
.p2align 0x4
L_417005:
L_105625:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_417007
L_105626:
	cmpq $0x1,0x8(%r13)
	jne L_104167
	jmp x_328
.p2align 0x4
L_417007:
L_105628:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_4
.p2align 0x4
L_417008:
L_105621:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_417010
L_105622:
	cmpq $0x1,0x8(%r13)
	jne L_104167
L_105623:
	movq %r15,0x28(%rbp)
	movq %r14,0x30(%rbp)
	jmp x_327
.p2align 0x4
L_417010:
L_105624:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_4
.p2align 0x4
L_417011:
	movq %r13,%r14
	jmp L_105618
.p2align 0x4
L_417013:
L_105604:
	movq 0x0(%r13),%r15
L_105605:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_104167
L_105606:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_105607:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_104167
L_105608:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	jne L_104167
L_105609:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	jne L_104167
L_105610:
	movq %r14,0x30(%rbp)
	movq %r15,0x38(%rbp)
	leaq L_104841(%rip),%r15
	movq %r15,0x18(%rbp)
	movq %rbp,%r15
	addq $0x20,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x1F0(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x30,%rbp
	leaq (word_22+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1437
.p2align 0x4
L_417020:
L_105572:
	movq 0x8(%rbp),%r14
	movl 0x0(%r14),%r13d
L_105573:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_104167
L_105574:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r11
L_105575:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_104167
L_105576:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE4A,%r15
	je L_417031
	cmpq $0xE4C,%r15
	je L_417021
	jmp L_104167
.p2align 0x4
L_417021:
L_105584:
	movq 0x0(%r11),%r15
L_105585:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_104167
L_105586:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_105587:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_417029
L_105590:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	je L_417026
	cmpq $0xE4C,%r14
	je L_417023
	movq %r13,%r14
L_105588:
	cmpq $0x1,%r14
	jne L_104167
L_105589:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_4
.p2align 0x4
L_417023:
L_105595:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_417025
L_105596:
	cmpq $0x1,0x8(%r13)
	jne L_104167
	jmp x_328
.p2align 0x4
L_417025:
L_105598:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_4
.p2align 0x4
L_417026:
L_105591:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_417028
L_105592:
	cmpq $0x1,0x8(%r13)
	jne L_104167
L_105593:
	movq %r15,0x28(%rbp)
	movq %r14,0x30(%rbp)
	jmp x_327
.p2align 0x4
L_417028:
L_105594:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_4
.p2align 0x4
L_417029:
	movq %r13,%r14
	jmp L_105588
.p2align 0x4
L_417031:
L_105577:
	movq 0x0(%r11),%r15
L_105578:
	movq %r14,%r11
	andq $0x3,%r11
	jnz L_104167
L_105579:
	movq 0x8(%r14),%r11
	movq 0x0(%r14),%r10
L_105580:
	movq %r10,%r14
	andq $0x3,%r14
	jnz L_104167
L_105581:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	jne L_104167
L_105582:
	movq 0x0(%r10),%r14
	cmpq $0x1,%r11
	jne L_104167
L_105583:
	movl %r13d,0x30(%rbp)
	movq %r14,0x38(%rbp)
	movq %r15,0x40(%rbp)
	leaq L_104841(%rip),%r15
	movq %r15,0x18(%rbp)
	movq %rbp,%r15
	addq $0x20,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0xC8(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x30,%rbp
	leaq (x_329+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1479
.p2align 0x4
L_417038:
L_105524:
	movq 0x8(%rbp),%r14
	movl 0x0(%r14),%r13d
	movl %r13d,0x28(%rbp)
L_105525:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_104167
L_105526:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
L_105527:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_104167
L_105528:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE4A,%r15
	je L_417049
	cmpq $0xE4C,%r15
	je L_417039
	jmp L_104167
.p2align 0x4
L_417039:
L_105557:
	movq 0x0(%r13),%r15
L_105558:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_104167
L_105559:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_105560:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_417047
L_105563:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	je L_417044
	cmpq $0xE4C,%r14
	je L_417041
	movq %r13,%r14
L_105561:
	cmpq $0x1,%r14
	jne L_104167
L_105562:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_4
.p2align 0x4
L_417041:
L_105568:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_417043
L_105569:
	cmpq $0x1,0x8(%r13)
	jne L_104167
	jmp x_328
.p2align 0x4
L_417043:
L_105571:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_4
.p2align 0x4
L_417044:
L_105564:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_417046
L_105565:
	cmpq $0x1,0x8(%r13)
	jne L_104167
L_105566:
	movq %r15,0x28(%rbp)
	movq %r14,0x30(%rbp)
	jmp x_327
.p2align 0x4
L_417046:
L_105567:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_4
.p2align 0x4
L_417047:
	movq %r13,%r14
	jmp L_105561
.p2align 0x4
L_417049:
L_105529:
	movq 0x0(%r13),%r15
	movq %r15,0x30(%rbp)
L_105530:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_104167
L_105531:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_105532:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_104167
L_105533:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	jne L_104167
L_105534:
	movq 0x0(%r11),%r14
	movq %r14,0x38(%rbp)
	cmpq $0x1,%r13
	jne L_104167
L_105535:
	movq 0x1E8(%rbp),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x40(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x48(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x50(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x58(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x68(%rbp)
	movq %r13,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_105536+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_0
.p2align 0x4
L_417056:
L_105491:
	movq 0x8(%rbp),%r14
	movl 0x0(%r14),%r13d
	movl %r13d,0x28(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x30(%rbp)
L_105492:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_104167
L_105493:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
L_105494:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_104167
L_105495:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE4A,%r15
	je L_417067
	cmpq $0xE4C,%r15
	je L_417057
	jmp L_104167
.p2align 0x4
L_417057:
L_105509:
	movq 0x0(%r13),%r15
L_105510:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_104167
L_105511:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_105512:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_417065
L_105515:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	je L_417062
	cmpq $0xE4C,%r14
	je L_417059
	movq %r13,%r14
L_105513:
	cmpq $0x1,%r14
	jne L_104167
L_105514:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_4
.p2align 0x4
L_417059:
L_105520:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_417061
L_105521:
	cmpq $0x1,0x8(%r13)
	jne L_104167
	jmp x_328
.p2align 0x4
L_417061:
L_105523:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_4
.p2align 0x4
L_417062:
L_105516:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_417064
L_105517:
	cmpq $0x1,0x8(%r13)
	jne L_104167
L_105518:
	movq %r15,0x28(%rbp)
	movq %r14,0x30(%rbp)
	jmp x_327
.p2align 0x4
L_417064:
L_105519:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_4
.p2align 0x4
L_417065:
	movq %r13,%r14
	jmp L_105513
.p2align 0x4
L_417067:
L_105496:
	movq 0x0(%r13),%r15
L_105497:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_104167
L_105498:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_105499:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_104167
L_105500:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	jne L_104167
L_105501:
	movq 0x0(%r11),%r10
	movq %r10,0x38(%rbp)
	cmpq $0x1,%r13
	jne L_104167
L_105502:
	movl 0x28(%rbp),%r13d
	testl %r13d,%r13d
	jnz L_417068
L_105503:
	movq 0x0(%r15),%r14
	movq 0x0(%r10),%r15
L_105504:
	movq %r15,0x60(%rbp)
	movq %r14,0x68(%rbp)
	leaq L_104841(%rip),%r15
	movq %r15,0x18(%rbp)
	movq %rbp,%r15
	addq $0x20,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x90(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x60,%rbp
	leaq (L_105505+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1182
.p2align 0x4
L_417068:
L_105506:
	movq %r15,0x170(%rbp)
	leaq L_104841(%rip),%r15
	movq %r15,0x18(%rbp)
	movq %rbp,%r15
	addq $0x20,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x160(%rbp),%r15
	movq %r15,0x178(%rbp)
	addq $0x170,%rbp
	leaq (L_105507+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toIntInfX_0
.p2align 0x4
L_417075:
L_105462:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_104167
L_105463:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
L_105464:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_104167
L_105465:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE4A,%r15
	je L_417086
	cmpq $0xE4C,%r15
	je L_417076
	jmp L_104167
.p2align 0x4
L_417076:
L_105476:
	movq 0x0(%r13),%r15
L_105477:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_104167
L_105478:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_105479:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_417084
L_105482:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	je L_417081
	cmpq $0xE4C,%r14
	je L_417078
	movq %r13,%r14
L_105480:
	cmpq $0x1,%r14
	jne L_104167
L_105481:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_4
.p2align 0x4
L_417078:
L_105487:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_417080
L_105488:
	cmpq $0x1,0x8(%r13)
	jne L_104167
	jmp x_328
.p2align 0x4
L_417080:
L_105490:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_4
.p2align 0x4
L_417081:
L_105483:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_417083
L_105484:
	cmpq $0x1,0x8(%r13)
	jne L_104167
L_105485:
	movq %r15,0x28(%rbp)
	movq %r14,0x30(%rbp)
	jmp x_327
.p2align 0x4
L_417083:
L_105486:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_4
.p2align 0x4
L_417084:
	movq %r13,%r14
	jmp L_105480
.p2align 0x4
L_417086:
L_105466:
	movq 0x0(%r13),%r15
	movq %r15,0x28(%rbp)
	cmpq $0x1,%r14
	jne L_104167
L_105467:
	leaq L_104841(%rip),%r14
	movq %r14,0x18(%rbp)
	movq %rbp,%r14
	addq $0x20,%r14
	subq (gcState+0x560)(%rip),%r14
	movq %r14,(gcState+0x20)(%rip)
	movq %r15,0x60(%rbp)
	movq 0x160(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_105468+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toIntInfX_0
.p2align 0x4
L_417090:
L_105437:
	movq 0x8(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x28(%rbp)
L_105438:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_104167
L_105439:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
L_105440:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_104167
L_105441:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE4A,%r15
	je L_417101
	cmpq $0xE4C,%r15
	je L_417091
	jmp L_104167
.p2align 0x4
L_417091:
L_105446:
	movq 0x0(%r13),%r15
L_105447:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_104167
L_105448:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_105449:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_417099
L_105452:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	je L_417096
	cmpq $0xE4C,%r14
	je L_417093
	movq %r13,%r14
L_105450:
	cmpq $0x1,%r14
	jne L_104167
L_105451:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_4
.p2align 0x4
L_417093:
L_105457:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_417095
L_105458:
	cmpq $0x1,0x8(%r13)
	jne L_104167
	jmp x_328
.p2align 0x4
L_417095:
L_105460:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_4
.p2align 0x4
L_417096:
L_105453:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_417098
L_105454:
	cmpq $0x1,0x8(%r13)
	jne L_104167
L_105455:
	movq %r15,0x28(%rbp)
	movq %r14,0x30(%rbp)
	jmp x_327
.p2align 0x4
L_417098:
L_105456:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_4
.p2align 0x4
L_417099:
	movq %r13,%r14
	jmp L_105450
.p2align 0x4
L_417101:
L_105442:
	movq 0x0(%r13),%r15
	cmpq $0x1,%r14
	jne L_104167
L_105443:
	movq %r15,0x60(%rbp)
	leaq L_104841(%rip),%r15
	movq %r15,0x18(%rbp)
	movq %rbp,%r15
	addq $0x20,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x160(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_105444+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toIntInfX_0
.p2align 0x4
L_417105:
L_105401:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_104167
L_105402:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
L_105403:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_104167
L_105404:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE4A,%r15
	je L_417116
	cmpq $0xE4C,%r15
	je L_417106
	jmp L_104167
.p2align 0x4
L_417106:
L_105422:
	movq 0x0(%r13),%r15
L_105423:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_104167
L_105424:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_105425:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_417114
L_105428:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	je L_417111
	cmpq $0xE4C,%r14
	je L_417108
	movq %r13,%r14
L_105426:
	cmpq $0x1,%r14
	jne L_104167
L_105427:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_4
.p2align 0x4
L_417108:
L_105433:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_417110
L_105434:
	cmpq $0x1,0x8(%r13)
	jne L_104167
	jmp x_328
.p2align 0x4
L_417110:
L_105436:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_4
.p2align 0x4
L_417111:
L_105429:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_417113
L_105430:
	cmpq $0x1,0x8(%r13)
	jne L_104167
L_105431:
	movq %r15,0x28(%rbp)
	movq %r14,0x30(%rbp)
	jmp x_327
.p2align 0x4
L_417113:
L_105432:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_4
.p2align 0x4
L_417114:
	movq %r13,%r14
	jmp L_105426
.p2align 0x4
L_417116:
L_105405:
	movq 0x0(%r13),%r15
	movq %r15,0x28(%rbp)
	cmpq $0x1,%r14
	jne L_104167
L_105406:
	movq 0x1E0(%rbp),%r14
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq %r11,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq %r14,%r15
	andq $0x1,%r15
	jnz L_417120
L_105415:
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	decq %r15
	jo L_417119
L_105416:
	movq 0x8(%r13),%rsi
	movq %rsi,%r14
	movq 0x0(%r13),%r11
	imulq %r15,%r14
	addq $0x7,%r11
	addq %r11,%rsi
	addq %rsi,%r14
	movq %r14,%rsi
	movq %r14,0x40(%rbp)
	addq $0x0,%rsi
	jc L_417118
L_105417:
	movq (gcState+0x458)(%rip),%r15
	subq %r12,%r15
	cmpq %rsi,%r15
	jnb L_105418
L_105420:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_105421+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_105421
.p2align 0x4
.long 0x1281
L_105421:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_105418:
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0x40(%rbp),%rsi
	movq 0x38(%rbp),%rdi
	xorq %rax,%rax
	movq %r12,(gcState+0x0)(%rip)
	call IntInf_notb
L_105419:
	movq %rax,0x38(%rbp)
	movq (gcState+0x0)(%rip),%r12
L_105408:
	movq 0x28(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x30(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x48(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x50(%rbp)
	movq %r14,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_105409+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_417118:
L_104711:
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %rax,%rax
	call MLton_heapCheckTooLarge
.p2align 0x4
L_417119:
L_104847:
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_417120:
L_105407:
	notq %r14
	orq $0x1,%r14
	movq %r14,0x38(%rbp)
	jmp L_105408
.p2align 0x4
L_417124:
L_105371:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_104167
L_105372:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
L_105373:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_104167
L_105374:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE4A,%r15
	je L_417135
	cmpq $0xE4C,%r15
	je L_417125
	jmp L_104167
.p2align 0x4
L_417125:
L_105385:
	movq 0x0(%r13),%r15
L_105386:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_104167
L_105387:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_105388:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_417133
L_105391:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	je L_417130
	cmpq $0xE4C,%r14
	je L_417127
	movq %r13,%r14
L_105389:
	cmpq $0x1,%r14
	jne L_104167
L_105390:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_4
.p2align 0x4
L_417127:
L_105396:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_417129
L_105397:
	cmpq $0x1,0x8(%r13)
	jne L_104167
	jmp x_328
.p2align 0x4
L_417129:
L_105399:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_4
.p2align 0x4
L_417130:
L_105392:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_417132
L_105393:
	cmpq $0x1,0x8(%r13)
	jne L_104167
L_105394:
	movq %r15,0x28(%rbp)
	movq %r14,0x30(%rbp)
	jmp x_327
.p2align 0x4
L_417132:
L_105395:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_4
.p2align 0x4
L_417133:
	movq %r13,%r14
	jmp L_105389
.p2align 0x4
L_417135:
L_105375:
	movq 0x0(%r13),%r15
L_105376:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_104167
L_105377:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_105378:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_104167
L_105379:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	jne L_104167
L_105380:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	jne L_104167
L_105381:
	movq %r14,0x30(%rbp)
	movq %r15,0x38(%rbp)
	leaq L_104841(%rip),%r15
	movq %r15,0x18(%rbp)
	movq %rbp,%r15
	addq $0x20,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x188(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x30,%rbp
	leaq (word_21+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1438
.p2align 0x4
L_417142:
L_105321:
	movq 0x8(%rbp),%r14
	movl 0x0(%r14),%r13d
	movl %r13d,0x28(%rbp)
L_105322:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_104167
L_105323:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
L_105324:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_104167
L_105325:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE4A,%r15
	je L_417153
	cmpq $0xE4C,%r15
	je L_417143
	jmp L_104167
.p2align 0x4
L_417143:
L_105355:
	movq 0x0(%r13),%r15
L_105356:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_104167
L_105357:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_105358:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_417151
L_105361:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	je L_417148
	cmpq $0xE4C,%r14
	je L_417145
	movq %r13,%r14
L_105359:
	cmpq $0x1,%r14
	jne L_104167
L_105360:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_4
.p2align 0x4
L_417145:
L_105366:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_417147
L_105367:
	cmpq $0x1,0x8(%r13)
	jne L_104167
	jmp x_328
.p2align 0x4
L_417147:
L_105369:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_4
.p2align 0x4
L_417148:
L_105362:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_417150
L_105363:
	cmpq $0x1,0x8(%r13)
	jne L_104167
L_105364:
	movq %r15,0x28(%rbp)
	movq %r14,0x30(%rbp)
	jmp x_327
.p2align 0x4
L_417150:
L_105365:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_4
.p2align 0x4
L_417151:
	movq %r13,%r14
	jmp L_105359
.p2align 0x4
L_417153:
L_105326:
	movq 0x0(%r13),%r15
	movq %r15,0x30(%rbp)
L_105327:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_104167
L_105328:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_105329:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_104167
L_105330:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	jne L_104167
L_105331:
	movq 0x0(%r11),%r14
	movq %r14,0x38(%rbp)
	cmpq $0x1,%r13
	jne L_104167
L_105332:
	movq 0x0(%r14),%r13
	movq %r13,0x40(%rbp)
	cmpq $0x1,%r13
	je L_104167
L_105333:
	movq 0x1D8(%rbp),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x48(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x50(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x58(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x60(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x70(%rbp)
	movq %r13,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_105334+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_0
.p2align 0x4
L_417161:
L_105272:
	movq 0x8(%rbp),%r14
	movl 0x0(%r14),%r13d
	movl %r13d,0x28(%rbp)
L_105273:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_104167
L_105274:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
L_105275:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_104167
L_105276:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE4A,%r15
	je L_417172
	cmpq $0xE4C,%r15
	je L_417162
	jmp L_104167
.p2align 0x4
L_417162:
L_105306:
	movq 0x0(%r13),%r15
L_105307:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_104167
L_105308:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_105309:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_417170
L_105312:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	je L_417167
	cmpq $0xE4C,%r14
	je L_417164
	movq %r13,%r14
L_105310:
	cmpq $0x1,%r14
	jne L_104167
L_105311:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_4
.p2align 0x4
L_417164:
L_105317:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_417166
L_105318:
	cmpq $0x1,0x8(%r13)
	jne L_104167
	jmp x_328
.p2align 0x4
L_417166:
L_105320:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_4
.p2align 0x4
L_417167:
L_105313:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_417169
L_105314:
	cmpq $0x1,0x8(%r13)
	jne L_104167
L_105315:
	movq %r15,0x28(%rbp)
	movq %r14,0x30(%rbp)
	jmp x_327
.p2align 0x4
L_417169:
L_105316:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_4
.p2align 0x4
L_417170:
	movq %r13,%r14
	jmp L_105310
.p2align 0x4
L_417172:
L_105277:
	movq 0x0(%r13),%r15
	movq %r15,0x30(%rbp)
L_105278:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_104167
L_105279:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_105280:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_104167
L_105281:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	jne L_104167
L_105282:
	movq 0x0(%r11),%r14
	movq %r14,0x38(%rbp)
	cmpq $0x1,%r13
	jne L_104167
L_105283:
	movq 0x0(%r14),%r13
	movq %r13,0x40(%rbp)
	cmpq $0x1,%r13
	je L_104167
L_105284:
	movq 0x190(%rbp),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x48(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x50(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x58(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x60(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x70(%rbp)
	movq %r13,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_105285+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_0
.p2align 0x4
L_417180:
L_105149:
	movq 0x8(%rbp),%r14
	movl 0x0(%r14),%r13d
	movb 0x4(%r14),%r11b
	movb %r11b,0x28(%rbp)
L_105150:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_104167
L_105151:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r11
L_105152:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_104167
L_105153:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE4A,%r15
	je L_417191
	cmpq $0xE4C,%r15
	je L_417181
	jmp L_104167
.p2align 0x4
L_417181:
L_105257:
	movq 0x0(%r11),%r15
L_105258:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_104167
L_105259:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_105260:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_417189
L_105263:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	je L_417186
	cmpq $0xE4C,%r14
	je L_417183
	movq %r13,%r14
L_105261:
	cmpq $0x1,%r14
	jne L_104167
L_105262:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_4
.p2align 0x4
L_417183:
L_105268:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_417185
L_105269:
	cmpq $0x1,0x8(%r13)
	jne L_104167
	jmp x_328
.p2align 0x4
L_417185:
L_105271:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_4
.p2align 0x4
L_417186:
L_105264:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_417188
L_105265:
	cmpq $0x1,0x8(%r13)
	jne L_104167
L_105266:
	movq %r15,0x28(%rbp)
	movq %r14,0x30(%rbp)
	jmp x_327
.p2align 0x4
L_417188:
L_105267:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_4
.p2align 0x4
L_417189:
	movq %r13,%r14
	jmp L_105261
.p2align 0x4
L_417191:
L_105154:
	movq 0x0(%r11),%r15
	cmpq $0x1,%r14
	jne L_104167
L_105155:
	testl %r13d,%r13d
	jnz L_417203
L_105156:
	movq 0x0(%r15),%r14
	movb 0x28(%rbp),%r15b
	testb %r15b,%r15b
	jnz L_417197
L_105157:
	movq %r14,0x28(%rbp)
L_105158:
	movq 0x138(%rbp),%r15
	movq 0x8(%r15),%r14
	cmpq $0x1,0x0(%r14)
	jne L_104167
L_105160:
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %rax,%rax
	addq $0x190,%rbp
	leaq (L_105161+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call IEEEReal_getRoundingMode
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_105161
.p2align 0x4
.long 0x1271
L_105161:
	addq $0xFFFFFFFFFFFFFE70,%rbp
	testl %eax,%eax
	jz L_417195
L_105162:
	cmpl $0x1,%eax
	je L_417194
L_105163:
	cmpl $0x2,%eax
	je L_417193
L_105164:
	cmpl $0x3,%eax
	jne L_417192
L_105167:
	movb $0x0,0x30(%rbp)
L_105168:
	leaq L_105188(%rip),%r15
	movq %r15,0x18(%rbp)
	movq %rbp,%r15
	addq $0x20,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movb $0x2,0x190(%rbp)
	addq $0x190,%rbp
	leaq (L_105169+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp setRoundingMode_0
.p2align 0x4
L_417192:
L_105166:
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x778)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_417193:
L_105202:
	movb $0x1,0x30(%rbp)
	jmp L_105168
.p2align 0x4
L_417194:
L_105203:
	movb $0x2,0x30(%rbp)
	jmp L_105168
.p2align 0x4
L_417195:
L_105204:
	movb $0x3,0x30(%rbp)
	jmp L_105168
.p2align 0x4
L_417197:
L_105205:
	movq %r14,0x28(%rbp)
L_105206:
	movq 0x138(%rbp),%r15
	movq 0x8(%r15),%r14
	cmpq $0x1,0x0(%r14)
	jne L_104167
L_105208:
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %rax,%rax
	addq $0x180,%rbp
	leaq (L_105209+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call IEEEReal_getRoundingMode
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_105209
.p2align 0x4
.long 0x1275
L_105209:
	addq $0xFFFFFFFFFFFFFE80,%rbp
	testl %eax,%eax
	jz L_417201
L_105210:
	cmpl $0x1,%eax
	je L_417200
L_105211:
	cmpl $0x2,%eax
	je L_417199
L_105212:
	cmpl $0x3,%eax
	jne L_105166
L_105214:
	movb $0x0,0x30(%rbp)
L_105215:
	leaq L_105235(%rip),%r15
	movq %r15,0x18(%rbp)
	movq %rbp,%r15
	addq $0x20,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movb $0x2,0x180(%rbp)
	addq $0x180,%rbp
	leaq (L_105216+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp setRoundingMode_0
.p2align 0x4
L_417199:
L_105250:
	movb $0x1,0x30(%rbp)
	jmp L_105215
.p2align 0x4
L_417200:
L_105251:
	movb $0x2,0x30(%rbp)
	jmp L_105215
.p2align 0x4
L_417201:
L_105252:
	movb $0x3,0x30(%rbp)
	jmp L_105215
.p2align 0x4
L_417203:
L_105253:
	movq %r15,0x190(%rbp)
	leaq L_104841(%rip),%r15
	movq %r15,0x18(%rbp)
	movq %rbp,%r15
	addq $0x20,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x160(%rbp),%r15
	movq %r15,0x198(%rbp)
	addq $0x190,%rbp
	leaq (L_105254+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toIntInfX_0
.p2align 0x4
L_417207:
L_105110:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_104167
L_105111:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
L_105112:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_104167
L_105113:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE4A,%r15
	je L_417218
	cmpq $0xE4C,%r15
	je L_417208
	jmp L_104167
.p2align 0x4
L_417208:
L_105134:
	movq 0x0(%r13),%r15
L_105135:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_104167
L_105136:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_105137:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_417216
L_105140:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	je L_417213
	cmpq $0xE4C,%r14
	je L_417210
	movq %r13,%r14
L_105138:
	cmpq $0x1,%r14
	jne L_104167
L_105139:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_4
.p2align 0x4
L_417210:
L_105145:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_417212
L_105146:
	cmpq $0x1,0x8(%r13)
	jne L_104167
	jmp x_328
.p2align 0x4
L_417212:
L_105148:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_4
.p2align 0x4
L_417213:
L_105141:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_417215
L_105142:
	cmpq $0x1,0x8(%r13)
	jne L_104167
L_105143:
	movq %r15,0x28(%rbp)
	movq %r14,0x30(%rbp)
	jmp x_327
.p2align 0x4
L_417215:
L_105144:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_4
.p2align 0x4
L_417216:
	movq %r13,%r14
	jmp L_105138
.p2align 0x4
L_417218:
L_105114:
	movq 0x0(%r13),%r15
	movq %r15,0x28(%rbp)
L_105115:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_104167
L_105116:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_105117:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_104167
L_105118:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	jne L_104167
L_105119:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	jne L_104167
L_105120:
	movq 0x8(%r15),%r13
	movq %r13,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x1B8(%rbp)
	leaq L_104841(%rip),%r15
	movq %r15,0x18(%rbp)
	movq %rbp,%r15
	addq $0x20,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq %r13,0x1B0(%rbp)
	movq 0x198(%rbp),%r15
	movq %r15,0x1C0(%rbp)
	addq $0x1B0,%rbp
	leaq (L_105121+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
L_417225:
L_105070:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_104167
L_105071:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
L_105072:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_104167
L_105073:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE4A,%r15
	je L_417236
	cmpq $0xE4C,%r15
	je L_417226
	jmp L_104167
.p2align 0x4
L_417226:
L_105094:
	movq 0x0(%r13),%r15
L_105095:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_104167
L_105096:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_105097:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_417234
L_105100:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	je L_417231
	cmpq $0xE4C,%r14
	je L_417228
	movq %r13,%r14
L_105098:
	cmpq $0x1,%r14
	jne L_104167
L_105099:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_4
.p2align 0x4
L_417228:
L_105105:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_417230
L_105106:
	cmpq $0x1,0x8(%r13)
	jne L_104167
	jmp x_328
.p2align 0x4
L_417230:
L_105108:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_4
.p2align 0x4
L_417231:
L_105101:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_417233
L_105102:
	cmpq $0x1,0x8(%r13)
	jne L_104167
L_105103:
	movq %r15,0x28(%rbp)
	movq %r14,0x30(%rbp)
	jmp x_327
.p2align 0x4
L_417233:
L_105104:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_4
.p2align 0x4
L_417234:
	movq %r13,%r14
	jmp L_105098
.p2align 0x4
L_417236:
L_105074:
	movq 0x0(%r13),%r15
	movq %r15,0x28(%rbp)
L_105075:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_104167
L_105076:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_105077:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_104167
L_105078:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	jne L_104167
L_105079:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	jne L_104167
L_105080:
	movq 0x8(%r15),%r13
	movq %r13,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x1B8(%rbp)
	leaq L_104841(%rip),%r15
	movq %r15,0x18(%rbp)
	movq %rbp,%r15
	addq $0x20,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq %r13,0x1B0(%rbp)
	movq 0x198(%rbp),%r15
	movq %r15,0x1C0(%rbp)
	addq $0x1B0,%rbp
	leaq (L_105081+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
L_417243:
L_105039:
	movq 0x8(%rbp),%r14
	movl 0x0(%r14),%r13d
L_105040:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_104167
L_105041:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r11
L_105042:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_104167
L_105043:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE4A,%r15
	je L_417254
	cmpq $0xE4C,%r15
	je L_417244
	jmp L_104167
.p2align 0x4
L_417244:
L_105054:
	movq 0x0(%r11),%r15
L_105055:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_104167
L_105056:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_105057:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_417252
L_105060:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	je L_417249
	cmpq $0xE4C,%r14
	je L_417246
	movq %r13,%r14
L_105058:
	cmpq $0x1,%r14
	jne L_104167
L_105059:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_4
.p2align 0x4
L_417246:
L_105065:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_417248
L_105066:
	cmpq $0x1,0x8(%r13)
	jne L_104167
	jmp x_328
.p2align 0x4
L_417248:
L_105068:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_4
.p2align 0x4
L_417249:
L_105061:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_417251
L_105062:
	cmpq $0x1,0x8(%r13)
	jne L_104167
L_105063:
	movq %r15,0x28(%rbp)
	movq %r14,0x30(%rbp)
	jmp x_327
.p2align 0x4
L_417251:
L_105064:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_4
.p2align 0x4
L_417252:
	movq %r13,%r14
	jmp L_105058
.p2align 0x4
L_417254:
L_105044:
	movq 0x0(%r11),%r15
L_105045:
	movq %r14,%r11
	andq $0x3,%r11
	jnz L_104167
L_105046:
	movq 0x8(%r14),%r11
	movq 0x0(%r14),%r10
L_105047:
	movq %r10,%r14
	andq $0x3,%r14
	jnz L_104167
L_105048:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	jne L_104167
L_105049:
	movq 0x0(%r10),%r14
	cmpq $0x1,%r11
	jne L_104167
L_105050:
	movl %r13d,0x30(%rbp)
	movq %r14,0x38(%rbp)
	movq %r15,0x40(%rbp)
	leaq L_104841(%rip),%r15
	movq %r15,0x18(%rbp)
	movq %rbp,%r15
	addq $0x20,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x1B8(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x30,%rbp
	leaq (word_20+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp rshift_0
.p2align 0x4
L_417261:
L_105000:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_104167
L_105001:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
L_105002:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_104167
L_105003:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE4A,%r15
	je L_417272
	cmpq $0xE4C,%r15
	je L_417262
	jmp L_104167
.p2align 0x4
L_417262:
L_105024:
	movq 0x0(%r13),%r15
L_105025:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_104167
L_105026:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_105027:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_417270
L_105030:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	je L_417267
	cmpq $0xE4C,%r14
	je L_417264
	movq %r13,%r14
L_105028:
	cmpq $0x1,%r14
	jne L_104167
L_105029:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_4
.p2align 0x4
L_417264:
L_105035:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_417266
L_105036:
	cmpq $0x1,0x8(%r13)
	jne L_104167
	jmp x_328
.p2align 0x4
L_417266:
L_105038:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_4
.p2align 0x4
L_417267:
L_105031:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_417269
L_105032:
	cmpq $0x1,0x8(%r13)
	jne L_104167
L_105033:
	movq %r15,0x28(%rbp)
	movq %r14,0x30(%rbp)
	jmp x_327
.p2align 0x4
L_417269:
L_105034:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_4
.p2align 0x4
L_417270:
	movq %r13,%r14
	jmp L_105028
.p2align 0x4
L_417272:
L_105004:
	movq 0x0(%r13),%r15
	movq %r15,0x28(%rbp)
L_105005:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_104167
L_105006:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_105007:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_104167
L_105008:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	jne L_104167
L_105009:
	movq 0x0(%r11),%r14
	movq %r14,0x30(%rbp)
	cmpq $0x1,%r13
	jne L_104167
L_105010:
	movq 0x1A8(%rbp),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x38(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x40(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x48(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x58(%rbp)
	movq %r13,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_105011+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_0
.p2align 0x4
L_417279:
L_104957:
	movq 0x8(%rbp),%r14
	movl 0x0(%r14),%r13d
	movl %r13d,0x28(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x30(%rbp)
L_104958:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_104167
L_104959:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
L_104960:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_104167
L_104961:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE4A,%r15
	je L_417290
	cmpq $0xE4C,%r15
	je L_417280
	jmp L_104167
.p2align 0x4
L_417280:
L_104984:
	movq 0x0(%r13),%r15
L_104985:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_104167
L_104986:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_104987:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_417288
L_104990:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	je L_417285
	cmpq $0xE4C,%r14
	je L_417282
	movq %r13,%r14
L_104988:
	cmpq $0x1,%r14
	jne L_104167
L_104989:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_4
.p2align 0x4
L_417282:
L_104995:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_417284
L_104996:
	cmpq $0x1,0x8(%r13)
	jne L_104167
	jmp x_328
.p2align 0x4
L_417284:
L_104998:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_4
.p2align 0x4
L_417285:
L_104991:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_417287
L_104992:
	cmpq $0x1,0x8(%r13)
	jne L_104167
L_104993:
	movq %r15,0x28(%rbp)
	movq %r14,0x30(%rbp)
	jmp x_327
.p2align 0x4
L_417287:
L_104994:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_4
.p2align 0x4
L_417288:
	movq %r13,%r14
	jmp L_104988
.p2align 0x4
L_417290:
L_104962:
	movq 0x0(%r13),%r15
L_104963:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_104167
L_104964:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_104965:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_104167
L_104966:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	jne L_104167
L_104967:
	movq 0x0(%r11),%r10
	movq %r10,0x38(%rbp)
	cmpq $0x1,%r13
	jne L_104167
L_104968:
	movl 0x28(%rbp),%r13d
	testl %r13d,%r13d
	jnz L_417291
L_104969:
	movq 0x0(%r15),%r14
	movq 0x0(%r10),%r15
L_104970:
	movq %r15,0x60(%rbp)
	movq %r14,0x68(%rbp)
	leaq L_104841(%rip),%r15
	movq %r15,0x18(%rbp)
	movq %rbp,%r15
	addq $0x20,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x80(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x60,%rbp
	leaq (L_104971+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
L_417291:
L_104981:
	movq %r15,0x170(%rbp)
	leaq L_104841(%rip),%r15
	movq %r15,0x18(%rbp)
	movq %rbp,%r15
	addq $0x20,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x160(%rbp),%r15
	movq %r15,0x178(%rbp)
	addq $0x170,%rbp
	leaq (L_104982+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toIntInfX_0
.p2align 0x4
L_417298:
L_104928:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_104167
L_104929:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
L_104930:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_104167
L_104931:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE4A,%r15
	je L_417309
	cmpq $0xE4C,%r15
	je L_417299
	jmp L_104167
.p2align 0x4
L_417299:
L_104942:
	movq 0x0(%r13),%r15
L_104943:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_104167
L_104944:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_104945:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_417307
L_104948:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	je L_417304
	cmpq $0xE4C,%r14
	je L_417301
	movq %r13,%r14
L_104946:
	cmpq $0x1,%r14
	jne L_104167
L_104947:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_4
.p2align 0x4
L_417301:
L_104953:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_417303
L_104954:
	cmpq $0x1,0x8(%r13)
	jne L_104167
	jmp x_328
.p2align 0x4
L_417303:
L_104956:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_4
.p2align 0x4
L_417304:
L_104949:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_417306
L_104950:
	cmpq $0x1,0x8(%r13)
	jne L_104167
L_104951:
	movq %r15,0x28(%rbp)
	movq %r14,0x30(%rbp)
	jmp x_327
.p2align 0x4
L_417306:
L_104952:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_4
.p2align 0x4
L_417307:
	movq %r13,%r14
	jmp L_104946
.p2align 0x4
L_417309:
L_104932:
	movq 0x0(%r13),%r15
L_104933:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_104167
L_104934:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
L_104935:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_104167
L_104936:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	jne L_104167
L_104937:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	jne L_104167
L_104938:
	movq %r14,0x30(%rbp)
	movq %r15,0x38(%rbp)
	leaq L_104841(%rip),%r15
	movq %r15,0x18(%rbp)
	movq %rbp,%r15
	addq $0x20,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x1C0(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x30,%rbp
	leaq (word_19+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1480
.p2align 0x4
L_417317:
L_106859:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_104167
L_106860:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
L_106861:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_104167
L_106862:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE4B,%r15
	je L_417328
	cmpq $0xE4C,%r15
	je L_417318
	jmp L_104167
.p2align 0x4
L_417318:
L_106875:
	movq 0x0(%r11),%r15
L_106876:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_104167
L_106877:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_106878:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_417326
L_106881:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4A,%r13
	je L_417323
	cmpq $0xE4C,%r13
	je L_417320
	xchgq %r11,%r14
L_106879:
	cmpq $0x1,%r14
	jne L_104167
L_106880:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_4
.p2align 0x4
L_417320:
L_106886:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_417322
L_106887:
	cmpq $0x1,0x8(%r11)
	jne L_104167
	xchgq %r13,%r14
	jmp x_328
.p2align 0x4
L_417322:
L_106889:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_4
.p2align 0x4
L_417323:
L_106882:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_417325
L_106883:
	cmpq $0x1,0x8(%r11)
	jne L_104167
L_106884:
	movq %r15,0x28(%rbp)
	movq %r13,0x30(%rbp)
	jmp x_327
.p2align 0x4
L_417325:
L_106885:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_4
.p2align 0x4
L_417326:
	xchgq %r11,%r14
	jmp L_106879
.p2align 0x4
L_417328:
L_106863:
	movq 0x0(%r11),%r15
L_106864:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_104167
L_106865:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_106866:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_104167
L_106867:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4B,%r13
	jne L_104167
L_106868:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	jne L_104167
L_106869:
	movq %r13,0x30(%rbp)
	movq %r15,0x38(%rbp)
	leaq L_104841(%rip),%r15
	movq %r15,0x18(%rbp)
	movq %rbp,%r15
	addq $0x20,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x230(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x30,%rbp
	leaq (realOpt_35+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1481
.p2align 0x4
L_417335:
L_106823:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_104167
L_106824:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
L_106825:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_104167
L_106826:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE4B,%r15
	je L_417346
	cmpq $0xE4C,%r15
	je L_417336
	jmp L_104167
.p2align 0x4
L_417336:
L_106843:
	movq 0x0(%r11),%r15
L_106844:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_104167
L_106845:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_106846:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_417344
L_106849:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4A,%r13
	je L_417341
	cmpq $0xE4C,%r13
	je L_417338
	xchgq %r11,%r14
L_106847:
	cmpq $0x1,%r14
	jne L_104167
L_106848:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_4
.p2align 0x4
L_417338:
L_106854:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_417340
L_106855:
	cmpq $0x1,0x8(%r11)
	jne L_104167
	xchgq %r13,%r14
	jmp x_328
.p2align 0x4
L_417340:
L_106857:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_4
.p2align 0x4
L_417341:
L_106850:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_417343
L_106851:
	cmpq $0x1,0x8(%r11)
	jne L_104167
L_106852:
	movq %r15,0x28(%rbp)
	movq %r13,0x30(%rbp)
	jmp x_327
.p2align 0x4
L_417343:
L_106853:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_4
.p2align 0x4
L_417344:
	xchgq %r11,%r14
	jmp L_106847
.p2align 0x4
L_417346:
L_106827:
	movq 0x0(%r11),%r15
L_106828:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_104167
L_106829:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_106830:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_104167
L_106831:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4B,%r13
	jne L_104167
L_106832:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	jne L_104167
L_106833:
	movq 0x218(%rbp),%r11
	movq 0x8(%r11),%r10
	cmpq $0x1,0x0(%r10)
	jne L_104167
L_106835:
	movq %r15,%r11
	andq $0x1,%r11
	cmpq $0x1,%r11
	je L_417348
L_106836:
	movsd 0x0(%r15),%xmm15
L_106837:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_417347
L_106839:
	ucomisd 0x0(%r13),%xmm15
	setp %al
	movzbl %al,%eax
	sete %cl
	movzbl %cl,%ecx
	orl %eax,%ecx
x_337:
	movl %ecx,%r15d
	shlq $0x2,%r15
	orq $0x3,%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_417347:
L_106838:
	movq (globalObjptr+0x19D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_417348:
L_106840:
	shrq $0x1,%r15
	movl %r15d,%r11d
	movd %r11d,%xmm15
	movq %r13,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	jne L_417349
L_106842:
	shrq $0x1,%r13
	movl %r13d,%r15d
	movd %r15d,%xmm14
	ucomiss %xmm14,%xmm15
	setp %al
	movzbl %al,%eax
	sete %cl
	movzbl %cl,%ecx
	orl %eax,%ecx
	jmp x_337
.p2align 0x4
L_417349:
L_106841:
	movq (globalObjptr+0x19D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_417357:
L_106797:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_104167
L_106798:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
L_106799:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_104167
L_106800:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE4B,%r15
	je L_417368
	cmpq $0xE4C,%r15
	je L_417358
	jmp L_104167
.p2align 0x4
L_417358:
L_106807:
	movq 0x0(%r11),%r15
L_106808:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_104167
L_106809:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_106810:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_417366
L_106813:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4A,%r13
	je L_417363
	cmpq $0xE4C,%r13
	je L_417360
	xchgq %r11,%r14
L_106811:
	cmpq $0x1,%r14
	jne L_104167
L_106812:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_4
.p2align 0x4
L_417360:
L_106818:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_417362
L_106819:
	cmpq $0x1,0x8(%r11)
	jne L_104167
	xchgq %r13,%r14
	jmp x_328
.p2align 0x4
L_417362:
L_106821:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_4
.p2align 0x4
L_417363:
L_106814:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_417365
L_106815:
	cmpq $0x1,0x8(%r11)
	jne L_104167
L_106816:
	movq %r15,0x28(%rbp)
	movq %r13,0x30(%rbp)
	jmp x_327
.p2align 0x4
L_417365:
L_106817:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_4
.p2align 0x4
L_417366:
	xchgq %r11,%r14
	jmp L_106811
.p2align 0x4
L_417368:
L_106801:
	movq 0x0(%r11),%r15
	cmpq $0x1,%r13
	jne L_104167
L_106802:
	movq 0x270(%rbp),%r13
	movq 0x8(%r13),%r11
	cmpq $0x1,0x0(%r11)
	jne L_104167
L_106804:
	movq %r15,%r13
	andq $0x1,%r13
	cmpq $0x1,%r13
	je L_417369
L_106805:
	movq $0x8000000000000000,%r13
	movd %r13,%xmm15
	movsd 0x0(%r15),%xmm14
	xorpd %xmm14,%xmm15
	movq $0x1C8F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movsd %xmm15,%xmm14
	movsd %xmm14,0x0(%r15)
	addq $0x10,%r12
real_17:
	movq $0x1C97,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x2753,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_417369:
L_106806:
	shrq $0x1,%r15
	movl %r15d,%r13d
	movd %r13d,%xmm15
	movl $0x80000000,%r13d
	movd %r13d,%xmm14
	xorps %xmm15,%xmm14
	movd %xmm14,%r13d
	movl %r13d,%r15d
	shlq $0x1,%r15
	orq $0x1,%r15
	jmp real_17
.p2align 0x4
L_417374:
L_106760:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_104167
L_106761:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
L_106762:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_104167
L_106763:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE4B,%r15
	je L_417385
	cmpq $0xE4C,%r15
	je L_417375
	jmp L_104167
.p2align 0x4
L_417375:
L_106781:
	movq 0x0(%r11),%r15
L_106782:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_104167
L_106783:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_106784:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_417383
L_106787:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4A,%r13
	je L_417380
	cmpq $0xE4C,%r13
	je L_417377
	xchgq %r11,%r14
L_106785:
	cmpq $0x1,%r14
	jne L_104167
L_106786:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_4
.p2align 0x4
L_417377:
L_106792:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_417379
L_106793:
	cmpq $0x1,0x8(%r11)
	jne L_104167
	xchgq %r13,%r14
	jmp x_328
.p2align 0x4
L_417379:
L_106795:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_4
.p2align 0x4
L_417380:
L_106788:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_417382
L_106789:
	cmpq $0x1,0x8(%r11)
	jne L_104167
L_106790:
	movq %r15,0x28(%rbp)
	movq %r13,0x30(%rbp)
	jmp x_327
.p2align 0x4
L_417382:
L_106791:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_4
.p2align 0x4
L_417383:
	xchgq %r11,%r14
	jmp L_106785
.p2align 0x4
L_417385:
L_106764:
	movq 0x0(%r11),%r15
L_106765:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_104167
L_106766:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_106767:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_104167
L_106768:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4B,%r13
	jne L_104167
L_106769:
	movq 0x0(%r10),%r13
L_106770:
	movq %r11,%r10
	andq $0x3,%r10
	jnz L_104167
L_106771:
	movq 0x8(%r11),%r10
	movq 0x0(%r11),%r9
L_106772:
	movq %r9,%r11
	andq $0x3,%r11
	jnz L_104167
L_106773:
	movq 0xFFFFFFFFFFFFFFF8(%r9),%r11
	shrq $0x1,%r11
	cmpq $0xE4B,%r11
	jne L_104167
L_106774:
	movq 0x0(%r9),%r11
	cmpq $0x1,%r10
	jne L_104167
L_106775:
	movq %r11,0x30(%rbp)
	movq %r13,0x38(%rbp)
	movq %r15,0x40(%rbp)
	leaq L_104841(%rip),%r15
	movq %r15,0x18(%rbp)
	movq %rbp,%r15
	addq $0x20,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x228(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x30,%rbp
	leaq (realOpt_34+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1482
.p2align 0x4
L_417395:
L_106723:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_104167
L_106724:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
L_106725:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_104167
L_106726:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE4B,%r15
	je L_417406
	cmpq $0xE4C,%r15
	je L_417396
	jmp L_104167
.p2align 0x4
L_417396:
L_106744:
	movq 0x0(%r11),%r15
L_106745:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_104167
L_106746:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_106747:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_417404
L_106750:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4A,%r13
	je L_417401
	cmpq $0xE4C,%r13
	je L_417398
	xchgq %r11,%r14
L_106748:
	cmpq $0x1,%r14
	jne L_104167
L_106749:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_4
.p2align 0x4
L_417398:
L_106755:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_417400
L_106756:
	cmpq $0x1,0x8(%r11)
	jne L_104167
	xchgq %r13,%r14
	jmp x_328
.p2align 0x4
L_417400:
L_106758:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_4
.p2align 0x4
L_417401:
L_106751:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_417403
L_106752:
	cmpq $0x1,0x8(%r11)
	jne L_104167
L_106753:
	movq %r15,0x28(%rbp)
	movq %r13,0x30(%rbp)
	jmp x_327
.p2align 0x4
L_417403:
L_106754:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_4
.p2align 0x4
L_417404:
	xchgq %r11,%r14
	jmp L_106748
.p2align 0x4
L_417406:
L_106727:
	movq 0x0(%r11),%r15
L_106728:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_104167
L_106729:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_106730:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_104167
L_106731:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4B,%r13
	jne L_104167
L_106732:
	movq 0x0(%r10),%r13
L_106733:
	movq %r11,%r10
	andq $0x3,%r10
	jnz L_104167
L_106734:
	movq 0x8(%r11),%r10
	movq 0x0(%r11),%r9
L_106735:
	movq %r9,%r11
	andq $0x3,%r11
	jnz L_104167
L_106736:
	movq 0xFFFFFFFFFFFFFFF8(%r9),%r11
	shrq $0x1,%r11
	cmpq $0xE4B,%r11
	jne L_104167
L_106737:
	movq 0x0(%r9),%r11
	cmpq $0x1,%r10
	jne L_104167
L_106738:
	movq %r11,0x30(%rbp)
	movq %r13,0x38(%rbp)
	movq %r15,0x40(%rbp)
	leaq L_104841(%rip),%r15
	movq %r15,0x18(%rbp)
	movq %rbp,%r15
	addq $0x20,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x120(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x30,%rbp
	leaq (realOpt_33+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1483
.p2align 0x4
L_417416:
L_106691:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_104167
L_106692:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
L_106693:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_104167
L_106694:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE4B,%r15
	je L_417427
	cmpq $0xE4C,%r15
	je L_417417
	jmp L_104167
.p2align 0x4
L_417417:
L_106707:
	movq 0x0(%r11),%r15
L_106708:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_104167
L_106709:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_106710:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_417425
L_106713:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4A,%r13
	je L_417422
	cmpq $0xE4C,%r13
	je L_417419
	xchgq %r11,%r14
L_106711:
	cmpq $0x1,%r14
	jne L_104167
L_106712:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_4
.p2align 0x4
L_417419:
L_106718:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_417421
L_106719:
	cmpq $0x1,0x8(%r11)
	jne L_104167
	xchgq %r13,%r14
	jmp x_328
.p2align 0x4
L_417421:
L_106721:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_4
.p2align 0x4
L_417422:
L_106714:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_417424
L_106715:
	cmpq $0x1,0x8(%r11)
	jne L_104167
L_106716:
	movq %r15,0x28(%rbp)
	movq %r13,0x30(%rbp)
	jmp x_327
.p2align 0x4
L_417424:
L_106717:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_4
.p2align 0x4
L_417425:
	xchgq %r11,%r14
	jmp L_106711
.p2align 0x4
L_417427:
L_106695:
	movq 0x0(%r11),%r15
L_106696:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_104167
L_106697:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_106698:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_104167
L_106699:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4B,%r13
	jne L_104167
L_106700:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	jne L_104167
L_106701:
	movq %r13,0x30(%rbp)
	movq %r15,0x38(%rbp)
	leaq L_104841(%rip),%r15
	movq %r15,0x18(%rbp)
	movq %rbp,%r15
	addq $0x20,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x118(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x30,%rbp
	leaq (realOpt_32+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1481
.p2align 0x4
L_417434:
L_106655:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_104167
L_106656:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
L_106657:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_104167
L_106658:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE4B,%r15
	je L_417445
	cmpq $0xE4C,%r15
	je L_417435
	jmp L_104167
.p2align 0x4
L_417435:
L_106675:
	movq 0x0(%r11),%r15
L_106676:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_104167
L_106677:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_106678:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_417443
L_106681:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4A,%r13
	je L_417440
	cmpq $0xE4C,%r13
	je L_417437
	xchgq %r11,%r14
L_106679:
	cmpq $0x1,%r14
	jne L_104167
L_106680:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_4
.p2align 0x4
L_417437:
L_106686:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_417439
L_106687:
	cmpq $0x1,0x8(%r11)
	jne L_104167
	xchgq %r13,%r14
	jmp x_328
.p2align 0x4
L_417439:
L_106689:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_4
.p2align 0x4
L_417440:
L_106682:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_417442
L_106683:
	cmpq $0x1,0x8(%r11)
	jne L_104167
L_106684:
	movq %r15,0x28(%rbp)
	movq %r13,0x30(%rbp)
	jmp x_327
.p2align 0x4
L_417442:
L_106685:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_4
.p2align 0x4
L_417443:
	xchgq %r11,%r14
	jmp L_106679
.p2align 0x4
L_417445:
L_106659:
	movq 0x0(%r11),%r15
L_106660:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_104167
L_106661:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_106662:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_104167
L_106663:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4B,%r13
	jne L_104167
L_106664:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	jne L_104167
L_106665:
	movq 0x130(%rbp),%r11
	movq 0x8(%r11),%r10
	cmpq $0x1,0x0(%r10)
	jne L_104167
L_106667:
	movq %r15,%r11
	andq $0x1,%r11
	cmpq $0x1,%r11
	je L_417447
L_106668:
	movsd 0x0(%r15),%xmm15
L_106669:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_417446
L_106671:
	ucomisd 0x0(%r13),%xmm15
	setnp %al
	movzbl %al,%eax
	setc %cl
	movzbl %cl,%ecx
	andl %eax,%ecx
x_336:
	movl %ecx,%r15d
	shlq $0x2,%r15
	orq $0x3,%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_417446:
L_106670:
	movq (globalObjptr+0x19D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_417447:
L_106672:
	shrq $0x1,%r15
	movl %r15d,%r11d
	movd %r11d,%xmm15
	movq %r13,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	jne L_417448
L_106674:
	shrq $0x1,%r13
	movl %r13d,%r15d
	movd %r15d,%xmm14
	ucomiss %xmm14,%xmm15
	setnp %al
	movzbl %al,%eax
	setc %cl
	movzbl %cl,%ecx
	andl %eax,%ecx
	jmp x_336
.p2align 0x4
L_417448:
L_106673:
	movq (globalObjptr+0x19D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_417456:
L_106619:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_104167
L_106620:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
L_106621:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_104167
L_106622:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE4B,%r15
	je L_417467
	cmpq $0xE4C,%r15
	je L_417457
	jmp L_104167
.p2align 0x4
L_417457:
L_106639:
	movq 0x0(%r11),%r15
L_106640:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_104167
L_106641:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_106642:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_417465
L_106645:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4A,%r13
	je L_417462
	cmpq $0xE4C,%r13
	je L_417459
	xchgq %r11,%r14
L_106643:
	cmpq $0x1,%r14
	jne L_104167
L_106644:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_4
.p2align 0x4
L_417459:
L_106650:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_417461
L_106651:
	cmpq $0x1,0x8(%r11)
	jne L_104167
	xchgq %r13,%r14
	jmp x_328
.p2align 0x4
L_417461:
L_106653:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_4
.p2align 0x4
L_417462:
L_106646:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_417464
L_106647:
	cmpq $0x1,0x8(%r11)
	jne L_104167
L_106648:
	movq %r15,0x28(%rbp)
	movq %r13,0x30(%rbp)
	jmp x_327
.p2align 0x4
L_417464:
L_106649:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_4
.p2align 0x4
L_417465:
	xchgq %r11,%r14
	jmp L_106643
.p2align 0x4
L_417467:
L_106623:
	movq 0x0(%r11),%r15
L_106624:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_104167
L_106625:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_106626:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_104167
L_106627:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4B,%r13
	jne L_104167
L_106628:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	jne L_104167
L_106629:
	movq 0x220(%rbp),%r11
	movq 0x8(%r11),%r10
	cmpq $0x1,0x0(%r10)
	jne L_104167
L_106631:
	movq %r15,%r11
	andq $0x1,%r11
	cmpq $0x1,%r11
	je L_417469
L_106632:
	movsd 0x0(%r15),%xmm15
L_106633:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_417468
L_106635:
	ucomisd 0x0(%r13),%xmm15
	setnp %al
	movzbl %al,%eax
	setna %cl
	movzbl %cl,%ecx
	andl %eax,%ecx
x_335:
	movl %ecx,%r15d
	shlq $0x2,%r15
	orq $0x3,%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_417468:
L_106634:
	movq (globalObjptr+0x19D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_417469:
L_106636:
	shrq $0x1,%r15
	movl %r15d,%r11d
	movd %r11d,%xmm15
	movq %r13,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	jne L_417470
L_106638:
	shrq $0x1,%r13
	movl %r13d,%r15d
	movd %r15d,%xmm14
	ucomiss %xmm14,%xmm15
	setnp %al
	movzbl %al,%eax
	setna %cl
	movzbl %cl,%ecx
	andl %eax,%ecx
	jmp x_335
.p2align 0x4
L_417470:
L_106637:
	movq (globalObjptr+0x19D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_417478:
L_106583:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_104167
L_106584:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
L_106585:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_104167
L_106586:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE4B,%r15
	je L_417489
	cmpq $0xE4C,%r15
	je L_417479
	jmp L_104167
.p2align 0x4
L_417479:
L_106603:
	movq 0x0(%r11),%r15
L_106604:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_104167
L_106605:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_106606:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_417487
L_106609:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4A,%r13
	je L_417484
	cmpq $0xE4C,%r13
	je L_417481
	xchgq %r11,%r14
L_106607:
	cmpq $0x1,%r14
	jne L_104167
L_106608:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_4
.p2align 0x4
L_417481:
L_106614:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_417483
L_106615:
	cmpq $0x1,0x8(%r11)
	jne L_104167
	xchgq %r13,%r14
	jmp x_328
.p2align 0x4
L_417483:
L_106617:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_4
.p2align 0x4
L_417484:
L_106610:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_417486
L_106611:
	cmpq $0x1,0x8(%r11)
	jne L_104167
L_106612:
	movq %r15,0x28(%rbp)
	movq %r13,0x30(%rbp)
	jmp x_327
.p2align 0x4
L_417486:
L_106613:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_4
.p2align 0x4
L_417487:
	xchgq %r11,%r14
	jmp L_106607
.p2align 0x4
L_417489:
L_106587:
	movq 0x0(%r11),%r15
L_106588:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_104167
L_106589:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_106590:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_104167
L_106591:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4B,%r13
	jne L_104167
L_106592:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	jne L_104167
L_106593:
	movq 0x128(%rbp),%r11
	movq 0x8(%r11),%r10
	cmpq $0x1,0x0(%r10)
	jne L_104167
L_106595:
	movq %r15,%r11
	andq $0x1,%r11
	cmpq $0x1,%r11
	je L_417491
L_106596:
	movsd 0x0(%r15),%xmm15
L_106597:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_417490
L_106599:
	ucomisd 0x0(%r13),%xmm15
	setnp %al
	movzbl %al,%eax
	setz %cl
	movzbl %cl,%ecx
	andl %eax,%ecx
x_334:
	movl %ecx,%r15d
	shlq $0x2,%r15
	orq $0x3,%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_417490:
L_106598:
	movq (globalObjptr+0x19D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_417491:
L_106600:
	shrq $0x1,%r15
	movl %r15d,%r11d
	movd %r11d,%xmm15
	movq %r13,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	jne L_417492
L_106602:
	shrq $0x1,%r13
	movl %r13d,%r15d
	movd %r15d,%xmm14
	ucomiss %xmm14,%xmm15
	setnp %al
	movzbl %al,%eax
	setz %cl
	movzbl %cl,%ecx
	andl %eax,%ecx
	jmp x_334
.p2align 0x4
L_417492:
L_106601:
	movq (globalObjptr+0x19D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_417500:
L_106551:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_104167
L_106552:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
L_106553:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_104167
L_106554:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE4B,%r15
	je L_417511
	cmpq $0xE4C,%r15
	je L_417501
	jmp L_104167
.p2align 0x4
L_417501:
L_106567:
	movq 0x0(%r11),%r15
L_106568:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_104167
L_106569:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_106570:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_417509
L_106573:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4A,%r13
	je L_417506
	cmpq $0xE4C,%r13
	je L_417503
	xchgq %r11,%r14
L_106571:
	cmpq $0x1,%r14
	jne L_104167
L_106572:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_4
.p2align 0x4
L_417503:
L_106578:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_417505
L_106579:
	cmpq $0x1,0x8(%r11)
	jne L_104167
	xchgq %r13,%r14
	jmp x_328
.p2align 0x4
L_417505:
L_106581:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_4
.p2align 0x4
L_417506:
L_106574:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_417508
L_106575:
	cmpq $0x1,0x8(%r11)
	jne L_104167
L_106576:
	movq %r15,0x28(%rbp)
	movq %r13,0x30(%rbp)
	jmp x_327
.p2align 0x4
L_417508:
L_106577:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_4
.p2align 0x4
L_417509:
	xchgq %r11,%r14
	jmp L_106571
.p2align 0x4
L_417511:
L_106555:
	movq 0x0(%r11),%r15
L_106556:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_104167
L_106557:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_106558:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_104167
L_106559:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4B,%r13
	jne L_104167
L_106560:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	jne L_104167
L_106561:
	movq %r13,0x30(%rbp)
	movq %r15,0x38(%rbp)
	leaq L_104841(%rip),%r15
	movq %r15,0x18(%rbp)
	movq %rbp,%r15
	addq $0x20,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x238(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x30,%rbp
	leaq (realOpt_31+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1481
.p2align 0x4
L_417518:
L_106519:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_104167
L_106520:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
L_106521:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_104167
L_106522:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE4B,%r15
	je L_417529
	cmpq $0xE4C,%r15
	je L_417519
	jmp L_104167
.p2align 0x4
L_417519:
L_106535:
	movq 0x0(%r11),%r15
L_106536:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_104167
L_106537:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_106538:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_417527
L_106541:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4A,%r13
	je L_417524
	cmpq $0xE4C,%r13
	je L_417521
	xchgq %r11,%r14
L_106539:
	cmpq $0x1,%r14
	jne L_104167
L_106540:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_4
.p2align 0x4
L_417521:
L_106546:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_417523
L_106547:
	cmpq $0x1,0x8(%r11)
	jne L_104167
	xchgq %r13,%r14
	jmp x_328
.p2align 0x4
L_417523:
L_106549:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_4
.p2align 0x4
L_417524:
L_106542:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_417526
L_106543:
	cmpq $0x1,0x8(%r11)
	jne L_104167
L_106544:
	movq %r15,0x28(%rbp)
	movq %r13,0x30(%rbp)
	jmp x_327
.p2align 0x4
L_417526:
L_106545:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_4
.p2align 0x4
L_417527:
	xchgq %r11,%r14
	jmp L_106539
.p2align 0x4
L_417529:
L_106523:
	movq 0x0(%r11),%r15
L_106524:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_104167
L_106525:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_106526:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_104167
L_106527:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4B,%r13
	jne L_104167
L_106528:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	jne L_104167
L_106529:
	movq %r13,0x30(%rbp)
	movq %r15,0x38(%rbp)
	leaq L_104841(%rip),%r15
	movq %r15,0x18(%rbp)
	movq %rbp,%r15
	addq $0x20,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x110(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x30,%rbp
	leaq (realOpt_30+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1481
.p2align 0x4
L_417536:
L_106493:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_104167
L_106494:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
L_106495:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_104167
L_106496:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE4B,%r15
	je L_417547
	cmpq $0xE4C,%r15
	je L_417537
	jmp L_104167
.p2align 0x4
L_417537:
L_106503:
	movq 0x0(%r11),%r15
L_106504:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_104167
L_106505:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_106506:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_417545
L_106509:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4A,%r13
	je L_417542
	cmpq $0xE4C,%r13
	je L_417539
	xchgq %r11,%r14
L_106507:
	cmpq $0x1,%r14
	jne L_104167
L_106508:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_4
.p2align 0x4
L_417539:
L_106514:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_417541
L_106515:
	cmpq $0x1,0x8(%r11)
	jne L_104167
	xchgq %r13,%r14
	jmp x_328
.p2align 0x4
L_417541:
L_106517:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_4
.p2align 0x4
L_417542:
L_106510:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_417544
L_106511:
	cmpq $0x1,0x8(%r11)
	jne L_104167
L_106512:
	movq %r15,0x28(%rbp)
	movq %r13,0x30(%rbp)
	jmp x_327
.p2align 0x4
L_417544:
L_106513:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_4
.p2align 0x4
L_417545:
	xchgq %r11,%r14
	jmp L_106507
.p2align 0x4
L_417547:
L_106497:
	movq 0x0(%r11),%r15
	cmpq $0x1,%r13
	jne L_104167
L_106498:
	movq 0xE0(%rbp),%r13
	movq 0x8(%r13),%r11
	cmpq $0x1,0x0(%r11)
	jne L_104167
L_106500:
	movq %r15,%r13
	andq $0x1,%r13
	cmpq $0x1,%r13
	je L_417548
L_106501:
	movq $0x7FFFFFFFFFFFFFFF,%r13
	movd %r13,%xmm15
	movsd 0x0(%r15),%xmm14
	andpd %xmm14,%xmm15
	movq $0x1C8F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movsd %xmm15,%xmm14
	movsd %xmm14,0x0(%r15)
	addq $0x10,%r12
real_16:
	movq $0x1C97,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x2753,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_417548:
L_106502:
	shrq $0x1,%r15
	movl %r15d,%r13d
	movd %r13d,%xmm15
	movl $0x7FFFFFFF,%r13d
	movd %r13d,%xmm14
	andps %xmm15,%xmm14
	movd %xmm14,%r13d
	movl %r13d,%r15d
	shlq $0x1,%r15
	orq $0x1,%r15
	jmp real_16
.p2align 0x4
L_417553:
L_106466:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_104167
L_106467:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
L_106468:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_104167
L_106469:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE4B,%r15
	je L_417564
	cmpq $0xE4C,%r15
	je L_417554
	jmp L_104167
.p2align 0x4
L_417554:
L_106477:
	movq 0x0(%r11),%r15
L_106478:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_104167
L_106479:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_106480:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_417562
L_106483:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4A,%r13
	je L_417559
	cmpq $0xE4C,%r13
	je L_417556
	xchgq %r11,%r14
L_106481:
	cmpq $0x1,%r14
	jne L_104167
L_106482:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_4
.p2align 0x4
L_417556:
L_106488:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_417558
L_106489:
	cmpq $0x1,0x8(%r11)
	jne L_104167
	xchgq %r13,%r14
	jmp x_328
.p2align 0x4
L_417558:
L_106491:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_4
.p2align 0x4
L_417559:
L_106484:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_417561
L_106485:
	cmpq $0x1,0x8(%r11)
	jne L_104167
L_106486:
	movq %r15,0x28(%rbp)
	movq %r13,0x30(%rbp)
	jmp x_327
.p2align 0x4
L_417561:
L_106487:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_4
.p2align 0x4
L_417562:
	xchgq %r11,%r14
	jmp L_106481
.p2align 0x4
L_417564:
L_106470:
	movq 0x0(%r11),%r15
	cmpq $0x1,%r13
	jne L_104167
L_106471:
	movq %r15,0x30(%rbp)
	leaq L_104841(%rip),%r15
	movq %r15,0x18(%rbp)
	movq %rbp,%r15
	addq $0x20,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x240(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (realOpt_29+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1484
.p2align 0x4
L_417568:
L_106439:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_104167
L_106440:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
L_106441:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_104167
L_106442:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE4B,%r15
	je L_417579
	cmpq $0xE4C,%r15
	je L_417569
	jmp L_104167
.p2align 0x4
L_417569:
L_106450:
	movq 0x0(%r11),%r15
L_106451:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_104167
L_106452:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_106453:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_417577
L_106456:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4A,%r13
	je L_417574
	cmpq $0xE4C,%r13
	je L_417571
	xchgq %r11,%r14
L_106454:
	cmpq $0x1,%r14
	jne L_104167
L_106455:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_4
.p2align 0x4
L_417571:
L_106461:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_417573
L_106462:
	cmpq $0x1,0x8(%r11)
	jne L_104167
	xchgq %r13,%r14
	jmp x_328
.p2align 0x4
L_417573:
L_106464:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_4
.p2align 0x4
L_417574:
L_106457:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_417576
L_106458:
	cmpq $0x1,0x8(%r11)
	jne L_104167
L_106459:
	movq %r15,0x28(%rbp)
	movq %r13,0x30(%rbp)
	jmp x_327
.p2align 0x4
L_417576:
L_106460:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_4
.p2align 0x4
L_417577:
	xchgq %r11,%r14
	jmp L_106454
.p2align 0x4
L_417579:
L_106443:
	movq 0x0(%r11),%r15
	cmpq $0x1,%r13
	jne L_104167
L_106444:
	movq %r15,0x30(%rbp)
	leaq L_104841(%rip),%r15
	movq %r15,0x18(%rbp)
	movq %rbp,%r15
	addq $0x20,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x108(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (realOpt_28+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1484
.p2align 0x4
L_417583:
L_106412:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_104167
L_106413:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
L_106414:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_104167
L_106415:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE4B,%r15
	je L_417594
	cmpq $0xE4C,%r15
	je L_417584
	jmp L_104167
.p2align 0x4
L_417584:
L_106423:
	movq 0x0(%r11),%r15
L_106424:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_104167
L_106425:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_106426:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_417592
L_106429:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4A,%r13
	je L_417589
	cmpq $0xE4C,%r13
	je L_417586
	xchgq %r11,%r14
L_106427:
	cmpq $0x1,%r14
	jne L_104167
L_106428:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_4
.p2align 0x4
L_417586:
L_106434:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_417588
L_106435:
	cmpq $0x1,0x8(%r11)
	jne L_104167
	xchgq %r13,%r14
	jmp x_328
.p2align 0x4
L_417588:
L_106437:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_4
.p2align 0x4
L_417589:
L_106430:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_417591
L_106431:
	cmpq $0x1,0x8(%r11)
	jne L_104167
L_106432:
	movq %r15,0x28(%rbp)
	movq %r13,0x30(%rbp)
	jmp x_327
.p2align 0x4
L_417591:
L_106433:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_4
.p2align 0x4
L_417592:
	xchgq %r11,%r14
	jmp L_106427
.p2align 0x4
L_417594:
L_106416:
	movq 0x0(%r11),%r15
	cmpq $0x1,%r13
	jne L_104167
L_106417:
	movq %r15,0x30(%rbp)
	leaq L_104841(%rip),%r15
	movq %r15,0x18(%rbp)
	movq %rbp,%r15
	addq $0x20,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x248(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (realOpt_27+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1484
.p2align 0x4
L_417598:
L_106385:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_104167
L_106386:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
L_106387:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_104167
L_106388:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE4B,%r15
	je L_417609
	cmpq $0xE4C,%r15
	je L_417599
	jmp L_104167
.p2align 0x4
L_417599:
L_106396:
	movq 0x0(%r11),%r15
L_106397:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_104167
L_106398:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_106399:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_417607
L_106402:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4A,%r13
	je L_417604
	cmpq $0xE4C,%r13
	je L_417601
	xchgq %r11,%r14
L_106400:
	cmpq $0x1,%r14
	jne L_104167
L_106401:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_4
.p2align 0x4
L_417601:
L_106407:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_417603
L_106408:
	cmpq $0x1,0x8(%r11)
	jne L_104167
	xchgq %r13,%r14
	jmp x_328
.p2align 0x4
L_417603:
L_106410:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_4
.p2align 0x4
L_417604:
L_106403:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_417606
L_106404:
	cmpq $0x1,0x8(%r11)
	jne L_104167
L_106405:
	movq %r15,0x28(%rbp)
	movq %r13,0x30(%rbp)
	jmp x_327
.p2align 0x4
L_417606:
L_106406:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_4
.p2align 0x4
L_417607:
	xchgq %r11,%r14
	jmp L_106400
.p2align 0x4
L_417609:
L_106389:
	movq 0x0(%r11),%r15
	cmpq $0x1,%r13
	jne L_104167
L_106390:
	movq %r15,0x30(%rbp)
	leaq L_104841(%rip),%r15
	movq %r15,0x18(%rbp)
	movq %rbp,%r15
	addq $0x20,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x100(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (realOpt_26+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1484
.p2align 0x4
L_417613:
L_106358:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_104167
L_106359:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
L_106360:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_104167
L_106361:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE4B,%r15
	je L_417624
	cmpq $0xE4C,%r15
	je L_417614
	jmp L_104167
.p2align 0x4
L_417614:
L_106369:
	movq 0x0(%r11),%r15
L_106370:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_104167
L_106371:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_106372:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_417622
L_106375:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4A,%r13
	je L_417619
	cmpq $0xE4C,%r13
	je L_417616
	xchgq %r11,%r14
L_106373:
	cmpq $0x1,%r14
	jne L_104167
L_106374:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_4
.p2align 0x4
L_417616:
L_106380:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_417618
L_106381:
	cmpq $0x1,0x8(%r11)
	jne L_104167
	xchgq %r13,%r14
	jmp x_328
.p2align 0x4
L_417618:
L_106383:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_4
.p2align 0x4
L_417619:
L_106376:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_417621
L_106377:
	cmpq $0x1,0x8(%r11)
	jne L_104167
L_106378:
	movq %r15,0x28(%rbp)
	movq %r13,0x30(%rbp)
	jmp x_327
.p2align 0x4
L_417621:
L_106379:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_4
.p2align 0x4
L_417622:
	xchgq %r11,%r14
	jmp L_106373
.p2align 0x4
L_417624:
L_106362:
	movq 0x0(%r11),%r15
	cmpq $0x1,%r13
	jne L_104167
L_106363:
	movq %r15,0x30(%rbp)
	leaq L_104841(%rip),%r15
	movq %r15,0x18(%rbp)
	movq %rbp,%r15
	addq $0x20,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x250(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (realOpt_25+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1484
.p2align 0x4
L_417628:
L_106331:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_104167
L_106332:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
L_106333:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_104167
L_106334:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE4B,%r15
	je L_417639
	cmpq $0xE4C,%r15
	je L_417629
	jmp L_104167
.p2align 0x4
L_417629:
L_106342:
	movq 0x0(%r11),%r15
L_106343:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_104167
L_106344:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_106345:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_417637
L_106348:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4A,%r13
	je L_417634
	cmpq $0xE4C,%r13
	je L_417631
	xchgq %r11,%r14
L_106346:
	cmpq $0x1,%r14
	jne L_104167
L_106347:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_4
.p2align 0x4
L_417631:
L_106353:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_417633
L_106354:
	cmpq $0x1,0x8(%r11)
	jne L_104167
	xchgq %r13,%r14
	jmp x_328
.p2align 0x4
L_417633:
L_106356:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_4
.p2align 0x4
L_417634:
L_106349:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_417636
L_106350:
	cmpq $0x1,0x8(%r11)
	jne L_104167
L_106351:
	movq %r15,0x28(%rbp)
	movq %r13,0x30(%rbp)
	jmp x_327
.p2align 0x4
L_417636:
L_106352:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_4
.p2align 0x4
L_417637:
	xchgq %r11,%r14
	jmp L_106346
.p2align 0x4
L_417639:
L_106335:
	movq 0x0(%r11),%r15
	cmpq $0x1,%r13
	jne L_104167
L_106336:
	movq %r15,0x30(%rbp)
	leaq L_104841(%rip),%r15
	movq %r15,0x18(%rbp)
	movq %rbp,%r15
	addq $0x20,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0xF8(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (realOpt_24+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1484
.p2align 0x4
L_417643:
L_106304:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_104167
L_106305:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
L_106306:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_104167
L_106307:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE4B,%r15
	je L_417654
	cmpq $0xE4C,%r15
	je L_417644
	jmp L_104167
.p2align 0x4
L_417644:
L_106315:
	movq 0x0(%r11),%r15
L_106316:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_104167
L_106317:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_106318:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_417652
L_106321:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4A,%r13
	je L_417649
	cmpq $0xE4C,%r13
	je L_417646
	xchgq %r11,%r14
L_106319:
	cmpq $0x1,%r14
	jne L_104167
L_106320:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_4
.p2align 0x4
L_417646:
L_106326:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_417648
L_106327:
	cmpq $0x1,0x8(%r11)
	jne L_104167
	xchgq %r13,%r14
	jmp x_328
.p2align 0x4
L_417648:
L_106329:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_4
.p2align 0x4
L_417649:
L_106322:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_417651
L_106323:
	cmpq $0x1,0x8(%r11)
	jne L_104167
L_106324:
	movq %r15,0x28(%rbp)
	movq %r13,0x30(%rbp)
	jmp x_327
.p2align 0x4
L_417651:
L_106325:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_4
.p2align 0x4
L_417652:
	xchgq %r11,%r14
	jmp L_106319
.p2align 0x4
L_417654:
L_106308:
	movq 0x0(%r11),%r15
	cmpq $0x1,%r13
	jne L_104167
L_106309:
	movq %r15,0x30(%rbp)
	leaq L_104841(%rip),%r15
	movq %r15,0x18(%rbp)
	movq %rbp,%r15
	addq $0x20,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x258(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (realOpt_23+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1484
.p2align 0x4
L_417658:
L_106272:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_104167
L_106273:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
L_106274:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_104167
L_106275:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE4B,%r15
	je L_417669
	cmpq $0xE4C,%r15
	je L_417659
	jmp L_104167
.p2align 0x4
L_417659:
L_106288:
	movq 0x0(%r11),%r15
L_106289:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_104167
L_106290:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_106291:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_417667
L_106294:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4A,%r13
	je L_417664
	cmpq $0xE4C,%r13
	je L_417661
	xchgq %r11,%r14
L_106292:
	cmpq $0x1,%r14
	jne L_104167
L_106293:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_4
.p2align 0x4
L_417661:
L_106299:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_417663
L_106300:
	cmpq $0x1,0x8(%r11)
	jne L_104167
	xchgq %r13,%r14
	jmp x_328
.p2align 0x4
L_417663:
L_106302:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_4
.p2align 0x4
L_417664:
L_106295:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_417666
L_106296:
	cmpq $0x1,0x8(%r11)
	jne L_104167
L_106297:
	movq %r15,0x28(%rbp)
	movq %r13,0x30(%rbp)
	jmp x_327
.p2align 0x4
L_417666:
L_106298:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_4
.p2align 0x4
L_417667:
	xchgq %r11,%r14
	jmp L_106292
.p2align 0x4
L_417669:
L_106276:
	movq 0x0(%r11),%r15
L_106277:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_104167
L_106278:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_106279:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_104167
L_106280:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4B,%r13
	jne L_104167
L_106281:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	jne L_104167
L_106282:
	movq %r13,0x30(%rbp)
	movq %r15,0x38(%rbp)
	leaq L_104841(%rip),%r15
	movq %r15,0x18(%rbp)
	movq %rbp,%r15
	addq $0x20,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0xF0(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x30,%rbp
	leaq (realOpt_22+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1481
.p2align 0x4
L_417676:
L_106245:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_104167
L_106246:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
L_106247:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_104167
L_106248:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE4B,%r15
	je L_417687
	cmpq $0xE4C,%r15
	je L_417677
	jmp L_104167
.p2align 0x4
L_417677:
L_106256:
	movq 0x0(%r11),%r15
L_106257:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_104167
L_106258:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_106259:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_417685
L_106262:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4A,%r13
	je L_417682
	cmpq $0xE4C,%r13
	je L_417679
	xchgq %r11,%r14
L_106260:
	cmpq $0x1,%r14
	jne L_104167
L_106261:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_4
.p2align 0x4
L_417679:
L_106267:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_417681
L_106268:
	cmpq $0x1,0x8(%r11)
	jne L_104167
	xchgq %r13,%r14
	jmp x_328
.p2align 0x4
L_417681:
L_106270:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_4
.p2align 0x4
L_417682:
L_106263:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_417684
L_106264:
	cmpq $0x1,0x8(%r11)
	jne L_104167
L_106265:
	movq %r15,0x28(%rbp)
	movq %r13,0x30(%rbp)
	jmp x_327
.p2align 0x4
L_417684:
L_106266:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_4
.p2align 0x4
L_417685:
	xchgq %r11,%r14
	jmp L_106260
.p2align 0x4
L_417687:
L_106249:
	movq 0x0(%r11),%r15
	cmpq $0x1,%r13
	jne L_104167
L_106250:
	movq %r15,0x30(%rbp)
	leaq L_104841(%rip),%r15
	movq %r15,0x18(%rbp)
	movq %rbp,%r15
	addq $0x20,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x260(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (realOpt_21+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1484
.p2align 0x4
L_417691:
L_106218:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_104167
L_106219:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
L_106220:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_104167
L_106221:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE4B,%r15
	je L_417702
	cmpq $0xE4C,%r15
	je L_417692
	jmp L_104167
.p2align 0x4
L_417692:
L_106229:
	movq 0x0(%r11),%r15
L_106230:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_104167
L_106231:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_106232:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_417700
L_106235:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4A,%r13
	je L_417697
	cmpq $0xE4C,%r13
	je L_417694
	xchgq %r11,%r14
L_106233:
	cmpq $0x1,%r14
	jne L_104167
L_106234:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_4
.p2align 0x4
L_417694:
L_106240:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_417696
L_106241:
	cmpq $0x1,0x8(%r11)
	jne L_104167
	xchgq %r13,%r14
	jmp x_328
.p2align 0x4
L_417696:
L_106243:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_4
.p2align 0x4
L_417697:
L_106236:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_417699
L_106237:
	cmpq $0x1,0x8(%r11)
	jne L_104167
L_106238:
	movq %r15,0x28(%rbp)
	movq %r13,0x30(%rbp)
	jmp x_327
.p2align 0x4
L_417699:
L_106239:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_4
.p2align 0x4
L_417700:
	xchgq %r11,%r14
	jmp L_106233
.p2align 0x4
L_417702:
L_106222:
	movq 0x0(%r11),%r15
	cmpq $0x1,%r13
	jne L_104167
L_106223:
	movq %r15,0x30(%rbp)
	leaq L_104841(%rip),%r15
	movq %r15,0x18(%rbp)
	movq %rbp,%r15
	addq $0x20,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0xE8(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (realOpt_20+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1484
.p2align 0x4
L_417706:
L_106191:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_104167
L_106192:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
L_106193:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_104167
L_106194:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE4B,%r15
	je L_417717
	cmpq $0xE4C,%r15
	je L_417707
	jmp L_104167
.p2align 0x4
L_417707:
L_106202:
	movq 0x0(%r11),%r15
L_106203:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_104167
L_106204:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_106205:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_417715
L_106208:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4A,%r13
	je L_417712
	cmpq $0xE4C,%r13
	je L_417709
	xchgq %r11,%r14
L_106206:
	cmpq $0x1,%r14
	jne L_104167
L_106207:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_4
.p2align 0x4
L_417709:
L_106213:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_417711
L_106214:
	cmpq $0x1,0x8(%r11)
	jne L_104167
	xchgq %r13,%r14
	jmp x_328
.p2align 0x4
L_417711:
L_106216:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_4
.p2align 0x4
L_417712:
L_106209:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_417714
L_106210:
	cmpq $0x1,0x8(%r11)
	jne L_104167
L_106211:
	movq %r15,0x28(%rbp)
	movq %r13,0x30(%rbp)
	jmp x_327
.p2align 0x4
L_417714:
L_106212:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_4
.p2align 0x4
L_417715:
	xchgq %r11,%r14
	jmp L_106206
.p2align 0x4
L_417717:
L_106195:
	movq 0x0(%r11),%r15
	cmpq $0x1,%r13
	jne L_104167
L_106196:
	movq %r15,0x30(%rbp)
	leaq L_104841(%rip),%r15
	movq %r15,0x18(%rbp)
	movq %rbp,%r15
	addq $0x20,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x268(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (realOpt_19+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1484
.p2align 0x4
L_417721:
L_106152:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_104167
L_106153:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
L_106154:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_104167
L_106155:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE4A,%r15
	je L_417732
	cmpq $0xE4C,%r15
	je L_417722
	jmp L_104167
.p2align 0x4
L_417722:
L_106175:
	movq 0x0(%r11),%r15
L_106176:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_104167
L_106177:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_106178:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_417730
L_106181:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4A,%r13
	je L_417727
	cmpq $0xE4C,%r13
	je L_417724
	xchgq %r11,%r14
L_106179:
	cmpq $0x1,%r14
	jne L_104167
L_106180:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_4
.p2align 0x4
L_417724:
L_106186:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_417726
L_106187:
	cmpq $0x1,0x8(%r11)
	jne L_104167
	xchgq %r13,%r14
	jmp x_328
.p2align 0x4
L_417726:
L_106189:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_4
.p2align 0x4
L_417727:
L_106182:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_417729
L_106183:
	cmpq $0x1,0x8(%r11)
	jne L_104167
L_106184:
	movq %r15,0x28(%rbp)
	movq %r13,0x30(%rbp)
	jmp x_327
.p2align 0x4
L_417729:
L_106185:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_4
.p2align 0x4
L_417730:
	xchgq %r11,%r14
	jmp L_106179
.p2align 0x4
L_417732:
L_106156:
	movq 0x0(%r11),%r15
	movq %r15,0x28(%rbp)
	cmpq $0x1,%r13
	jne L_104167
L_106157:
	movq 0x8(%r15),%r13
	movq %r13,0x30(%rbp)
	movq 0x1B0(%rbp),%r15
	movq 0x8(%r15),%r11
	movq %r11,0x38(%rbp)
	movq 0x0(%r15),%r11
	movq %r11,0x40(%rbp)
	movq %r13,0x2D0(%rbp)
	addq $0x2D0,%rbp
	leaq (L_106158+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_417736:
L_106119:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_104167
L_106120:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
L_106121:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_104167
L_106122:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE49,%r15
	je L_417747
	cmpq $0xE4C,%r15
	je L_417737
	jmp L_104167
.p2align 0x4
L_417737:
L_106136:
	movq 0x0(%r11),%r15
L_106137:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_104167
L_106138:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_106139:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_417745
L_106142:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4A,%r13
	je L_417742
	cmpq $0xE4C,%r13
	je L_417739
	xchgq %r11,%r14
L_106140:
	cmpq $0x1,%r14
	jne L_104167
L_106141:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_4
.p2align 0x4
L_417739:
L_106147:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_417741
L_106148:
	cmpq $0x1,0x8(%r11)
	jne L_104167
	xchgq %r13,%r14
	jmp x_328
.p2align 0x4
L_417741:
L_106150:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_4
.p2align 0x4
L_417742:
L_106143:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_417744
L_106144:
	cmpq $0x1,0x8(%r11)
	jne L_104167
L_106145:
	movq %r15,0x28(%rbp)
	movq %r13,0x30(%rbp)
	jmp x_327
.p2align 0x4
L_417744:
L_106146:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_4
.p2align 0x4
L_417745:
	xchgq %r11,%r14
	jmp L_106140
.p2align 0x4
L_417747:
L_106123:
	movq 0x8(%r11),%r15
	movq %r15,0x28(%rbp)
L_106124:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_104167
L_106125:
	movq 0x8(%r13),%r15
	movq 0x0(%r13),%r11
L_106126:
	movq %r11,%r13
	andq $0x3,%r13
	jnz L_104167
L_106127:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r13
	shrq $0x1,%r13
	cmpq $0xE4A,%r13
	jne L_104167
L_106128:
	movq 0x0(%r11),%r13
	cmpq $0x1,%r15
	jne L_104167
L_106129:
	movq 0x0(%r13),%r15
	movq %r15,0x38(%rbp)
	leaq L_104841(%rip),%r15
	movq %r15,0x18(%rbp)
	movq %rbp,%r15
	addq $0x20,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x38,%rbp
	leaq (L_106130+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_417754:
L_106082:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_104167
L_106083:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
L_106084:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_104167
L_106085:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE49,%r15
	je L_417765
	cmpq $0xE4C,%r15
	je L_417755
	jmp L_104167
.p2align 0x4
L_417755:
L_106103:
	movq 0x0(%r11),%r15
L_106104:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_104167
L_106105:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_106106:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_417763
L_106109:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4A,%r13
	je L_417760
	cmpq $0xE4C,%r13
	je L_417757
	xchgq %r11,%r14
L_106107:
	cmpq $0x1,%r14
	jne L_104167
L_106108:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_4
.p2align 0x4
L_417757:
L_106114:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_417759
L_106115:
	cmpq $0x1,0x8(%r11)
	jne L_104167
	xchgq %r13,%r14
	jmp x_328
.p2align 0x4
L_417759:
L_106117:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_4
.p2align 0x4
L_417760:
L_106110:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_417762
L_106111:
	cmpq $0x1,0x8(%r11)
	jne L_104167
L_106112:
	movq %r15,0x28(%rbp)
	movq %r13,0x30(%rbp)
	jmp x_327
.p2align 0x4
L_417762:
L_106113:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_4
.p2align 0x4
L_417763:
	xchgq %r11,%r14
	jmp L_106107
.p2align 0x4
L_417765:
L_106086:
	movq 0x8(%r11),%r15
	cmpq $0x1,%r13
	jne L_104167
L_106087:
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r13,%r10
	jne L_417767
L_106089:
	shlq $0x1,%r10
	orq $0x1,%r10
	movq %r10,0x28(%rbp)
	movq 0x278(%rbp),%r15
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r11
	movq 0x0(%r11),%r10
	movq 0x8(%r11),%r9
	movq 0x0(%r9),%r8
	cmpq $0x1,%r8
	je L_417766
L_106090:
	movq %r13,0x68(%rbp)
	movq 0x0(%r8),%r15
	movq %r15,0x60(%rbp)
	leaq L_104841(%rip),%r15
	movq %r15,0x18(%rbp)
	movq %rbp,%r15
	addq $0x20,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x60,%rbp
	leaq (L_106091+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_417766:
L_106098:
	movq %r10,0x30(%rbp)
	leaq L_104841(%rip),%r15
	movq %r15,0x18(%rbp)
	movq %rbp,%r15
	addq $0x20,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_106099+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_417767:
L_106088:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_417771:
L_106045:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_104167
L_106046:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
L_106047:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_417790
L_106066:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE4C,%r15
	jne L_417780
L_106067:
	movq 0x0(%r11),%r15
L_106068:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_104167
L_106069:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_106070:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_104167
L_106071:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4A,%r13
	je L_417775
	cmpq $0xE4C,%r13
	je L_417772
	jmp L_104167
.p2align 0x4
L_417772:
L_106076:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_417774
L_106077:
	cmpq $0x1,0x8(%r11)
	jne L_104167
	xchgq %r13,%r14
	jmp x_328
.p2align 0x4
L_417774:
L_106079:
	movq (c_stackP+0x0)(%rip),%rsp
	movq %r15,%rsi
	movq %r13,%rdi
	xorq %rax,%rax
	call IntInf_equal
L_106080:
	movl %eax,%r15d
	shlq $0x2,%r15
	orq $0x3,%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_417775:
L_106072:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_104167
L_106073:
	cmpq $0x1,0x8(%r11)
	jne L_104167
L_106074:
	movq %r15,0x28(%rbp)
	movq %r13,0x30(%rbp)
	jmp x_327
.p2align 0x4
L_417780:
	movq %r13,%r15
	xchgq %r11,%r14
L_106049:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_104167
L_106050:
	movq 0x0(%r15),%r13
	cmpq $0x1,0x8(%r15)
	jne L_104167
L_106052:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_104167
L_106053:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xE49,%r15
	je L_417784
	cmpq $0xE4A,%r15
	je L_417781
	jmp L_104167
.p2align 0x4
L_417781:
L_106058:
	movq 0x0(%r14),%r15
	movq %r15,0x28(%rbp)
L_106059:
	movq %r13,%r14
	andq $0x3,%r14
	jnz L_104167
L_106060:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	jne L_104167
L_106061:
	movq 0x0(%r13),%r14
	movq %r14,0x30(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x48(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_106062+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_0
.p2align 0x4
L_417784:
L_106054:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r11
	movq $0xECB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r11,0x8(%r14)
	addq $0x18,%r12
L_106055:
	movq %r13,%r15
	andq $0x3,%r15
	jnz L_104167
L_106056:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE49,%r15
	jne L_104167
L_106057:
	movq %r14,0x38(%rbp)
	movq 0x8(%r13),%r15
	movq 0x0(%r13),%r14
	movq $0xECB,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	movq %r13,0x30(%rbp)
	addq $0x18,%r12
	leaq L_104841(%rip),%r15
	movq %r15,0x18(%rbp)
	movq %rbp,%r15
	addq $0x20,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x30,%rbp
	leaq (x_332+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_3
.p2align 0x4
L_417790:
	movq %r13,%r15
	xchgq %r11,%r14
	jmp L_106049
.p2align 0x4
L_417792:
L_106013:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_104167
L_106014:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
L_106015:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_417808
L_106030:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE4C,%r15
	jne L_417801
L_106031:
	movq 0x0(%r11),%r15
L_106032:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_104167
L_106033:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_106034:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_104167
L_106035:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4A,%r13
	je L_417796
	cmpq $0xE4C,%r13
	je L_417793
	jmp L_104167
.p2align 0x4
L_417793:
L_106040:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_104167
L_106041:
	cmpq $0x1,0x8(%r11)
	jne L_104167
	xchgq %r13,%r14
	jmp x_328
.p2align 0x4
L_417796:
L_106036:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_104167
L_106037:
	cmpq $0x1,0x8(%r11)
	jne L_104167
L_106038:
	movq %r15,0x28(%rbp)
	movq %r13,0x30(%rbp)
	jmp x_327
.p2align 0x4
L_417801:
	movq %r13,%r15
	xchgq %r11,%r14
L_106017:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_104167
L_106018:
	movq 0x0(%r15),%r13
	cmpq $0x1,0x8(%r15)
	jne L_104167
L_106020:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_104167
L_106021:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xE4A,%r15
	jne L_104167
L_106022:
	movq 0x0(%r14),%r15
	movq %r15,0x28(%rbp)
L_106023:
	movq %r13,%r14
	andq $0x3,%r14
	jnz L_104167
L_106024:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	jne L_104167
L_106025:
	movq 0x0(%r13),%r14
	movq %r14,0x30(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x48(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_106026+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_0
.p2align 0x4
L_417808:
	movq %r13,%r15
	xchgq %r11,%r14
	jmp L_106017
.p2align 0x4
L_417810:
L_105987:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_104167
L_105988:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
L_105989:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_104167
L_105990:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE4C,%r15
	jne L_104167
L_105991:
	movq 0x0(%r11),%r15
	cmpq $0x1,%r13
	je L_417819
L_105992:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_105993:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_417818
L_105996:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4A,%r13
	je L_417815
	cmpq $0xE4C,%r13
	je L_417812
	xchgq %r11,%r14
L_105994:
	cmpq $0x1,%r14
	jne L_104167
L_105995:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_4
.p2align 0x4
L_417812:
L_106001:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_417814
L_106002:
	cmpq $0x1,0x8(%r11)
	jne L_104167
	xchgq %r13,%r14
	jmp x_328
.p2align 0x4
L_417814:
L_106004:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_4
.p2align 0x4
L_417815:
L_105997:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_417817
L_105998:
	cmpq $0x1,0x8(%r11)
	jne L_104167
L_105999:
	movq %r15,0x28(%rbp)
	movq %r13,0x30(%rbp)
	jmp x_327
.p2align 0x4
L_417817:
L_106000:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_4
.p2align 0x4
L_417818:
	xchgq %r11,%r14
	jmp L_105994
.p2align 0x4
L_417819:
L_106005:
	movq %r15,0x30(%rbp)
	leaq L_104841(%rip),%r15
	movq %r15,0x18(%rbp)
	movq %rbp,%r15
	addq $0x20,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0xD8(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_106006+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toWord_0
.p2align 0x4
L_417823:
L_105966:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_104167
L_105967:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
L_105968:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_104167
L_105969:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE4C,%r15
	jne L_104167
L_105970:
	movq 0x0(%r11),%r15
L_105971:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_104167
L_105972:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_105973:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_417831
L_105976:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4A,%r13
	je L_417828
	cmpq $0xE4C,%r13
	je L_417825
	xchgq %r11,%r14
L_105974:
	cmpq $0x1,%r14
	jne L_104167
L_105975:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_4
.p2align 0x4
L_417825:
L_105981:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_417827
L_105982:
	cmpq $0x1,0x8(%r11)
	jne L_104167
	xchgq %r13,%r14
	jmp x_328
.p2align 0x4
L_417827:
L_105984:
	movq (c_stackP+0x0)(%rip),%rsp
	movq %r15,%rsi
	movq %r13,%rdi
	xorq %rax,%rax
	call IntInf_equal
L_105985:
	movl %eax,%r15d
	shlq $0x2,%r15
	orq $0x3,%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_417828:
L_105977:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_417830
L_105978:
	cmpq $0x1,0x8(%r11)
	jne L_104167
L_105979:
	movq %r15,0x28(%rbp)
	movq %r13,0x30(%rbp)
	jmp x_327
.p2align 0x4
L_417830:
L_105980:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_4
.p2align 0x4
L_417831:
	xchgq %r11,%r14
	jmp L_105974
.p2align 0x4
L_417836:
L_105925:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_104167
L_105926:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
L_105927:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_104167
L_105928:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE4C,%r15
	jne L_104167
L_105929:
	movq 0x0(%r11),%r15
L_105930:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_104167
L_105931:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_105932:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_417849
L_105935:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4A,%r13
	je L_417846
	cmpq $0xE4C,%r13
	je L_417838
	xchgq %r11,%r14
L_105933:
	cmpq $0x1,%r14
	jne L_104167
L_105934:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_4
.p2align 0x4
L_417838:
L_105940:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_417840
L_105941:
	cmpq $0x1,0x8(%r11)
	jne L_104167
	xchgq %r13,%r14
	jmp x_328
.p2align 0x4
L_417840:
L_105943:
	movq %r15,%r11
	andq %r13,%r11
	andq $0x1,%r11
	jz L_417843
L_105944:
	cmpq %r13,%r15
	jl L_417842
L_105945:
	cmpq %r15,%r13
	jl L_417841
L_105947:
	movq $0x1,0x28(%rbp)
L_105948:
	movq 0x50(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0xE0(%rbp)
	addq $0xE0,%rbp
	leaq (L_105949+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_417841:
L_105956:
	movq $0x3,0x28(%rbp)
	jmp L_105948
.p2align 0x4
L_417842:
L_105958:
	movq $0xFFFFFFFFFFFFFFFF,0x28(%rbp)
	jmp L_105948
.p2align 0x4
L_417843:
L_105959:
	movq (c_stackP+0x0)(%rip),%rsp
	movq %r13,%rsi
	movq %r15,%rdi
	xorq %rax,%rax
	call IntInf_compare
L_105960:
	cmpl $0x0,%eax
	jl L_105958
L_105961:
	cmpl $0x0,%eax
	jg L_105956
	jmp L_105947
.p2align 0x4
L_417846:
L_105936:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_417848
L_105937:
	cmpq $0x1,0x8(%r11)
	jne L_104167
L_105938:
	movq %r15,0x28(%rbp)
	movq %r13,0x30(%rbp)
	jmp x_327
.p2align 0x4
L_417848:
L_105939:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_4
.p2align 0x4
L_417849:
	xchgq %r11,%r14
	jmp L_105933
.p2align 0x4
L_417854:
L_105891:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_104167
L_105892:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	cmpq $0x1,%r11
	je L_417865
L_105893:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE4C,%r15
	jne L_104167
L_105894:
	movq 0x0(%r11),%r15
L_105895:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_104167
L_105896:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_105897:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_417862
L_105900:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4A,%r13
	je L_417859
	cmpq $0xE4C,%r13
	je L_417856
	xchgq %r11,%r14
L_105898:
	cmpq $0x1,%r14
	jne L_104167
L_105899:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_4
.p2align 0x4
L_417856:
L_105905:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_417858
L_105906:
	cmpq $0x1,0x8(%r11)
	jne L_104167
	xchgq %r13,%r14
	jmp x_328
.p2align 0x4
L_417858:
L_105908:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_4
.p2align 0x4
L_417859:
L_105901:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_417861
L_105902:
	cmpq $0x1,0x8(%r11)
	jne L_104167
L_105903:
	movq %r15,0x28(%rbp)
	movq %r13,0x30(%rbp)
	jmp x_327
.p2align 0x4
L_417861:
L_105904:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_4
.p2align 0x4
L_417862:
	xchgq %r11,%r14
	jmp L_105898
.p2align 0x4
L_417865:
L_105909:
	cmpq $0x1,%r13
	jne L_104167
L_105910:
	movq 0x280(%rbp),%r15
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r11
	movq 0x0(%r11),%r10
	movq 0x8(%r11),%r9
	movq 0x0(%r9),%r8
	cmpq $0x1,%r8
	je L_417866
L_105911:
	movq %r13,0x2A0(%rbp)
	movq 0x0(%r8),%r15
	movq %r15,0x298(%rbp)
	leaq L_104841(%rip),%r15
	movq %r15,0x18(%rbp)
	movq %rbp,%r15
	addq $0x20,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x298,%rbp
	leaq (L_105912+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_417866:
L_105919:
	movq %r10,0x30(%rbp)
	leaq L_104841(%rip),%r15
	movq %r15,0x18(%rbp)
	movq %rbp,%r15
	addq $0x20,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_105920+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_417869:
L_105867:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_104167
L_105868:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
L_105869:
	movq %r11,%r15
	andq $0x3,%r15
	jnz L_104167
L_105870:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0xE4A,%r15
	je L_417880
	cmpq $0xE4C,%r15
	je L_417870
	jmp L_104167
.p2align 0x4
L_417870:
L_105875:
	movq 0x0(%r11),%r15
L_105876:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_104167
L_105877:
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
L_105878:
	movq %r10,%r13
	andq $0x3,%r13
	jnz L_417878
L_105881:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0xE4A,%r13
	je L_417875
	cmpq $0xE4C,%r13
	je L_417872
	xchgq %r11,%r14
L_105879:
	cmpq $0x1,%r14
	jne L_104167
L_105880:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_4
.p2align 0x4
L_417872:
L_105886:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_417874
L_105887:
	cmpq $0x1,0x8(%r11)
	jne L_104167
	xchgq %r13,%r14
	jmp x_328
.p2align 0x4
L_417874:
L_105889:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_4
.p2align 0x4
L_417875:
L_105882:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r11
	je L_417877
L_105883:
	cmpq $0x1,0x8(%r11)
	jne L_104167
L_105884:
	movq %r15,0x28(%rbp)
	movq %r13,0x30(%rbp)
	jmp x_327
.p2align 0x4
L_417877:
L_105885:
	movq %r15,0x10(%rbp)
	jmp intInfUnary_4
.p2align 0x4
L_417878:
	xchgq %r11,%r14
	jmp L_105879
.p2align 0x4
L_417880:
L_105871:
	movq 0x0(%r11),%r15
	cmpq $0x1,%r13
	jne L_104167
L_105872:
	cmpq $0x1,0x0(%r15)
	jne L_104167
L_105874:
	movq (globalObjptr+0x1A60)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_417885:
L_106890:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2D0,%rbp
	leaq (L_106891+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_106891
.p2align 0x4
.long 0x1298
L_106891:
	addq $0xFFFFFFFFFFFFFD30,%rbp
	jmp L_104813
.p2align 0x4
L_417886:
L_104808:
	movq (globalObjptr+0x1A48)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_417887:
L_106892:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2D0,%rbp
	leaq (L_106893+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_106893
.p2align 0x4
.long 0x1298
L_106893:
	addq $0xFFFFFFFFFFFFFD30,%rbp
	jmp L_104807
.p2align 0x4
L_417888:
L_106894:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_104816
.p2align 0x4
L_417890:
L_104164:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_104166
L_104798:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2D0,%rbp
	leaq (L_104799+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_104799
.p2align 0x4
.long 0x1268
L_104799:
	addq $0xFFFFFFFFFFFFFD30,%rbp
L_104166:
	movq 0x30(%rbp),%r15
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_104167
L_104168:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x13AD,%r15
	je L_418005
	cmpq $0x13AE,%r15
	je L_417997
L_104169:
	movq 0x0(%r13),%r15
L_104170:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_104167
L_104171:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0x13AC,%r14
	je L_417964
	cmpq $0x13AD,%r14
	je L_417891
	jmp L_104167
.p2align 0x4
L_417891:
L_104267:
	movq 0x0(%r11),%r14
L_104268:
	movq %r14,%r11
	andq $0x3,%r11
	jnz L_104167
L_104269:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r11
	shrq $0x1,%r11
	cmpq $0xE4A,%r11
	je L_417900
	cmpq $0xE4B,%r11
	je L_417896
	cmpq $0xE4C,%r11
	je L_417892
	jmp L_104167
.p2align 0x4
L_417892:
L_104583:
	movq 0x0(%r14),%r11
L_104584:
	movq %r13,%r14
	andq $0x3,%r14
	jnz L_104167
L_104585:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r10
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r13
	shrq $0x1,%r13
	cmpq $0x13AC,%r13
	jne L_104167
L_104586:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r14
	jne L_104167
L_104587:
	movq %r13,0x28(%rbp)
	movq %r15,0x30(%rbp)
	movl $0x1,0x10(%rbp)
	movq %r11,%r15
varIntInf_1:
	movq %r15,0x2D0(%rbp)
	leaq L_104646(%rip),%r15
	movq %r15,0x18(%rbp)
	movq %rbp,%r15
	addq $0x20,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x2D0,%rbp
	leaq (L_104588+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_417896:
L_104532:
	movq 0x0(%r14),%r11
	cmpq $0x1,%r13
	jne L_104167
L_104533:
	movq %r11,0x28(%rbp)
	movq %r15,0x30(%rbp)
	movl $0x1,0x10(%rbp)
varReal_1:
	movq 0x138(%rbp),%r15
	movq 0x8(%r15),%r14
	cmpq $0x1,0x0(%r14)
	jne L_104167
L_104535:
	movq 0x28(%rbp),%r15
	movq %r15,%r14
	andq $0x1,%r14
	cmpq $0x1,%r14
	je L_417897
L_104536:
	movsd 0x0(%r15),%xmm15
	movsd %xmm15,0x40(%rbp)
	movq 0x158(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_104537+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1485
.p2align 0x4
L_417897:
L_104582:
	shrq $0x1,%r15
	movl %r15d,%r14d
	movd %r14d,%xmm15
	movss %xmm15,%xmm14
	movss %xmm14,0x40(%rbp)
	movq 0x148(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_104537+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1486
.p2align 0x4
L_417900:
L_104270:
	movq 0x0(%r14),%r11
	cmpq $0x1,%r13
	je L_417906
L_104271:
	cmpq $0x1,0x8(%r13)
	jne L_104167
L_104272:
	cmpq $0x1,0x0(%r11)
	jne L_104167
L_104274:
	movq 0x8(%rbp),%r14
	movq %r14,%r13
	andq $0xFF,%r13
	cmpq $0x1F,%r13
	je L_417903
	cmpq $0x25,%r13
	je L_417902
L_104275:
	andq $0x3,%r14
	jnz L_104167
L_104276:
	jmp L_104167
.p2align 0x4
L_417902:
L_104278:
	movq $0x2751,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r13,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_417903:
L_104277:
	movq $0x2751,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r13,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_417906:
L_104279:
	movq 0x8(%rbp),%r14
	movq %r14,%r13
	andq $0xFF,%r13
	cmpq $0x9,%r13
	je L_417961
	cmpq $0x15,%r13
	je L_417958
L_104280:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_104167
L_104281:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%rax
	shrq $0x1,%rax
	subq $0x11E8,%rax
	cmpq $0x16,%rax
	ja L_104167
	leaq jumpTable_231(%rip),%rbx
	jmp *(%rbx,%rax,8)
.data
.p2align 0x4
jumpTable_231:
.quad L_417955,L_417952,L_417949,L_417944,L_417943,L_417940,L_104167,L_417936,L_417932,L_417930,L_104167,L_104167,L_104167,L_417926,L_417922,L_417918,L_417914,L_104167,L_104167,L_104167,L_417912,L_417910,L_417908
.text
.p2align 0x4
L_417908:
L_104518:
	movq %r15,%r14
	movq %r11,%r15
L_104519:
	cmpq $0x1,0x0(%r15)
	jne L_104167
L_104521:
	movq $0x2751,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_417910:
L_104514:
	movq %r15,%r14
	movq %r11,%r15
L_104515:
	cmpq $0x1,0x0(%r15)
	jne L_104167
L_104517:
	movq $0x2751,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_417912:
L_104501:
	movq %r15,0x28(%rbp)
	movq 0x8(%rbp),%r13
	movq 0x0(%r13),%r14
	movq %r11,%r15
L_104502:
	movq 0x0(%r15),%r13
	movq %r13,0x30(%rbp)
	cmpq $0x1,%r13
	je L_417913
L_104503:
	movq 0x290(%rbp),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x38(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x40(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_104504+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_417913:
L_104513:
	movq %r14,0x28(%rbp)
zero_3:
	movq 0x288(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_104314+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_417914:
L_104498:
	movq 0x8(%rbp),%r10
	movq 0x0(%r10),%r13
	movl $0x1,%ecx
	movq %r11,%r14
shift_1:
	testl %ecx,%ecx
	jz L_417916
L_104500:
	movq %r14,0x28(%rbp)
	movq %r13,0x30(%rbp)
	movq %r15,%r13
L_104321:
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	cmpq $0x1,%r14
	jne L_417915
L_104339:
	movq $0x2751,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r15,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_417915:
L_104322:
	movq 0x50(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0x298(%rbp)
	addq $0x298,%rbp
	leaq (L_104323+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_417916:
L_104499:
	xchgq %r13,%r14
L_104311:
	cmpq $0x1,0x0(%r13)
	jne L_104167
L_104313:
	movq %r14,0x28(%rbp)
	jmp zero_3
.p2align 0x4
L_417918:
L_104458:
	movq %r11,0x28(%rbp)
	movq 0x8(%rbp),%r15
	movl 0x0(%r15),%ebx
	movl $0x1,%ecx
L_104459:
	testl %ecx,%ecx
	jnz L_417920
L_104460:
	movq 0x28(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x2A0(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x38(%rbp)
	movq 0x0(%r15),%r13
	movq 0x18(%r13),%r11
	movq %r11,0x40(%rbp)
	movq 0x10(%r13),%r11
	movq %r11,0x48(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x50(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x58(%rbp)
	testl %ebx,%ebx
	jnz L_417919
L_104461:
	movq %r14,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_104462+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_417919:
L_104474:
	movq %r14,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_104475+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_417920:
L_104478:
	movq 0x28(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x298(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x38(%rbp)
	movq 0x0(%r15),%r13
	movq 0x18(%r13),%r11
	movq %r11,0x40(%rbp)
	movq 0x10(%r13),%r11
	movq %r11,0x48(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x50(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x58(%rbp)
	testl %ebx,%ebx
	jnz L_417921
L_104479:
	movq %r14,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_104480+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_417921:
L_104493:
	movq %r14,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_104494+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_417922:
L_104444:
	movq %r15,0x30(%rbp)
	movq 0x8(%rbp),%r14
	movl 0x0(%r14),%ecx
	movq 0x8(%r14),%r13
	movq %r13,0x28(%rbp)
	movq %r11,%r15
L_104445:
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_417925
L_104446:
	cmpq $0x3,%r14
	je L_417924
L_104447:
	testl %ecx,%ecx
	jz L_104167
L_104449:
	movq %r15,0x40(%rbp)
	movq 0x2A8(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_104450+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toIntInfX_0
.p2align 0x4
L_417924:
L_104456:
	movq $0x2751,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_417925:
L_104457:
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x2753,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_417926:
L_104430:
	movq %r15,0x30(%rbp)
	movq 0x8(%rbp),%r14
	movl 0x0(%r14),%ecx
	movq 0x8(%r14),%r13
	movq %r13,0x28(%rbp)
	movq %r11,%r15
L_104431:
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_417929
L_104432:
	cmpq $0x3,%r14
	je L_417928
L_104433:
	testl %ecx,%ecx
	jz L_104167
L_104435:
	movq %r15,0x40(%rbp)
	movq 0x2A8(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_104436+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toIntInfX_0
.p2align 0x4
L_417928:
L_104442:
	movq $0x2751,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_417929:
L_104443:
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x2753,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_417930:
L_104417:
	movq %r11,0x28(%rbp)
L_104418:
	movq 0x28(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x30(%rbp)
	cmpq $0x1,%r13
	jne L_417931
L_104429:
	movq $0x2751,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_417931:
L_104419:
	movq 0x290(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x28(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_104420+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_417932:
L_104403:
	movq %r15,0x30(%rbp)
	movq 0x8(%rbp),%r14
	movl 0x0(%r14),%ebx
	movq 0x8(%r14),%r13
	movq %r13,0x28(%rbp)
	movl $0x1,%ecx
	movq %r11,%r15
L_104404:
	testl %ecx,%ecx
	jz L_104167
L_104406:
	cmpq $0x3,0x0(%r15)
	je L_417934
L_104407:
	testl %ebx,%ebx
	jz L_104167
L_104409:
	movq %r15,0x40(%rbp)
	movq 0x2A8(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_104410+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toIntInfX_0
.p2align 0x4
L_417934:
L_104416:
	movq $0x2751,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_417936:
L_104391:
	movq 0x8(%rbp),%r14
	movl 0x0(%r14),%ebx
	movq 0x8(%r14),%r13
	movq %r13,0x28(%rbp)
	movl $0x1,%ecx
	movq %r11,%r15
L_104392:
	testl %ecx,%ecx
	jz L_104167
L_104394:
	cmpq $0x3,0x0(%r15)
	je zero_3
L_104395:
	testl %ebx,%ebx
	jz L_104167
L_104397:
	movq %r15,0x298(%rbp)
	movq 0x2A8(%rbp),%r15
	movq %r15,0x2A0(%rbp)
	addq $0x298,%rbp
	leaq (L_104398+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toIntInfX_0
.p2align 0x4
L_417940:
L_104390:
	movq %r11,0x28(%rbp)
	movq %r15,0x30(%rbp)
	movq 0x8(%rbp),%r14
	movq 0x0(%r14),%r15
	movl $0x1,%ecx
ro_1:
	testl %ecx,%ecx
	jz L_417941
L_104370:
	movq %r15,0x1A0(%rbp)
	addq $0x1A0,%rbp
	leaq (L_104371+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_417941:
L_104357:
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	cmpq $0x1,%r14
	je L_417942
L_104358:
	movq 0x290(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x38(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x40(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_104359+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_417942:
L_104366:
	movq $0x1C95,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x2753,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_417943:
L_104356:
	movq %r11,0x28(%rbp)
	movq %r15,0x30(%rbp)
	movq 0x8(%rbp),%r14
	movq 0x0(%r14),%r15
	movl $0x1,%ecx
	jmp ro_1
.p2align 0x4
L_417944:
L_104307:
	movq %r11,0x30(%rbp)
	movq 0x8(%rbp),%r13
	movl 0x0(%r13),%ecx
	movq 0x8(%r13),%r11
	movl $0x1,0x28(%rbp)
	movq %r15,%r14
	movq %r11,%r15
L_104308:
	testl %ecx,%ecx
	jnz L_417946
L_104309:
	movl 0x28(%rbp),%r11d
	testl %r11d,%r11d
	jz L_417945
L_104320:
	movq 0x30(%rbp),%r13
	movq %r13,0x28(%rbp)
	movq %r15,0x30(%rbp)
	movq %r14,%r13
	jmp L_104321
.p2align 0x4
L_417945:
L_104310:
	movq 0x30(%rbp),%r13
	movq %r15,%r14
	jmp L_104311
.p2align 0x4
L_417946:
L_104340:
	movq 0x30(%rbp),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x38(%rbp)
	cmpq $0x1,%r11
	jne L_417948
L_104353:
	movl 0x28(%rbp),%r13d
	testl %r13d,%r13d
	jnz L_417947
L_104354:
	movq %r15,0x28(%rbp)
	jmp zero_3
.p2align 0x4
L_417947:
L_104355:
	movq $0x2751,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_417948:
L_104341:
	movq 0x290(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x30(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_104342+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_417949:
L_104301:
	movq 0x8(%rbp),%r10
	movq 0x0(%r10),%r13
	movl $0x1,%ecx
	movq %r11,%r14
L_104302:
	cmpq $0x1,0x0(%r14)
	jne L_104167
L_104304:
	testl %ecx,%ecx
	jnz L_417950
L_104305:
	movq $0x23E9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	addq $0x10,%r12
	movq $0x2757,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x18,%r12
	movq $0x1,0x8(%r13)
	movq $0x2755,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	movq %r15,0x0(%rbp)
	addq $0x18,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_417950:
L_104306:
	movq $0x2751,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_417952:
L_104295:
	movq 0x8(%rbp),%r10
	movq 0x8(%r10),%r13
	movl $0x1,%ecx
	movq %r11,%r14
L_104296:
	cmpq $0x1,0x0(%r14)
	jne L_104167
L_104298:
	testl %ecx,%ecx
	jnz L_417953
L_104299:
	movq $0x23E7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	addq $0x10,%r12
	movq $0x2757,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x18,%r12
	movq $0x1,0x8(%r13)
	movq $0x2755,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	movq %r15,0x0(%rbp)
	addq $0x18,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_417953:
L_104300:
	movq $0x2751,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_417955:
L_104282:
	movq %r15,0x30(%rbp)
	movq 0x8(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x28(%rbp)
	movq %r11,%r15
L_104283:
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	cmpq $0x1,%r14
	je L_417956
L_104284:
	movq 0x290(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x40(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x48(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_104285+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_417956:
L_104294:
	movq $0x2751,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_417958:
L_104526:
	movl $0x1,%ecx
	xchgq %r15,%r14
	xchgq %r11,%r15
L_104527:
	cmpq $0x1,0x0(%r15)
	jne L_104167
L_104529:
	testl %ecx,%ecx
	jz L_104167
L_104531:
	movq $0x2751,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_417961:
L_104522:
	xchgq %r15,%r14
	xchgq %r11,%r15
L_104523:
	cmpq $0x1,0x0(%r15)
	jne L_104167
L_104525:
	movq $0x2751,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_417964:
L_104172:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	je L_417974
L_104173:
	cmpq $0x1,0x8(%r13)
	jne L_104167
L_104174:
	movq 0x0(%r14),%r13
	movq 0x0(%r15),%r11
	movq 0x10(%r11),%r10
	cmpq %r10,0x10(%r13)
	jne L_104167
L_104176:
	movq 0x8(%rbp),%r14
	movq %r14,%r13
	andq $0xFF,%r13
	cmpq $0x1E,%r13
	je L_417971
	cmpq $0x2A,%r13
	je L_417970
	cmpq $0x2B,%r13
	je L_417969
	cmpq $0x2D,%r13
	je L_104190
	cmpq $0x2E,%r13
	je L_104190
	cmpq $0x33,%r13
	je L_417966
L_104177:
	andq $0x3,%r14
	jnz L_104167
L_104178:
	jmp L_104167
.p2align 0x4
L_417966:
L_104190:
	xorl %ecx,%ecx
x_326:
	movslq %ecx,%r15
	shlq $0x1,%r15
	orq $0x1,%r15
	movq %r15,0x28(%rbp)
	movq %r15,0x38(%rbp)
	movq 0x2C0(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_104183+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1473
.p2align 0x4
L_417969:
L_104182:
	movl $0x1,%ecx
	jmp x_326
.p2align 0x4
L_417970:
L_104180:
	movq $0x2751,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r13,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_417971:
L_104179:
	movq $0x2751,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r13,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_417974:
L_104193:
	movq 0x0(%r15),%r13
	movq 0x0(%r14),%r11
	movq 0x10(%r11),%r10
	cmpq %r10,0x10(%r13)
	jne L_104167
L_104195:
	movq 0x8(%rbp),%r14
	movq %r14,%r13
	andq $0xFF,%r13
	cmpq $0xA,%r13
	je L_417993
	cmpq $0xB,%r13
	je L_104237
	cmpq $0x11,%r13
	je L_104235
	cmpq $0x21,%r13
	je L_417990
	cmpq $0x22,%r13
	je L_104237
	cmpq $0x39,%r13
	je L_104237
	cmpq $0x3A,%r13
	je L_104237
	cmpq $0x7E,%r13
	je L_104235
	cmpq $0x85,%r13
	je L_104237
L_104196:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_104167
L_104197:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x11E8,%r13
	je L_417983
	cmpq $0x11E9,%r13
	je L_417982
	cmpq $0x11EA,%r13
	je L_417981
	cmpq $0x11EF,%r13
	je L_417980
	cmpq $0x11F0,%r13
	je L_417979
	cmpq $0x11F1,%r13
	je L_417978
	cmpq $0x11F7,%r13
	je L_417977
	cmpq $0x11FA,%r13
	je L_417976
	cmpq $0x11FC,%r13
	je L_417975
	jmp L_104167
.p2align 0x4
L_417975:
L_104238:
	movq $0x2751,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_417976:
L_104237:
	movq (globalWord64+0x1B8)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_417977:
L_104235:
	movq (globalWord64+0x1A8)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_417978:
L_104233:
	movq $0x2751,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_417979:
L_104226:
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x1B0(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x28(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x30(%rbp)
	movq %r14,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_104227+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_417980:
L_104219:
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x288(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x28(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x30(%rbp)
	movq %r14,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_104220+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_417981:
L_104212:
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x288(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x28(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x30(%rbp)
	movq %r14,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_104213+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_417982:
L_104205:
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x288(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x28(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x30(%rbp)
	movq %r14,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_104206+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_417983:
L_104198:
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x288(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x28(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x30(%rbp)
	movq %r14,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_104199+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_417990:
L_104255:
	movq 0x288(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x28(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x30(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0xE0(%rbp)
	addq $0xE0,%rbp
	leaq (L_104256+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_417993:
L_104239:
	movq 0x2B0(%rbp),%r15
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r11
	movq 0x0(%r11),%r10
	movq 0x8(%r11),%r9
	movq 0x0(%r9),%r8
	cmpq $0x1,%r8
	je L_417994
L_104240:
	movq %r13,0x2A0(%rbp)
	movq 0x0(%r8),%r15
	movq %r15,0x298(%rbp)
	addq $0x298,%rbp
	leaq (L_104241+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_417994:
L_104248:
	movq %r10,0x30(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_104249+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_417997:
L_104786:
	movq 0x0(%r13),%r15
L_104787:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_104167
L_104788:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0x13AE,%r14
	jne L_104167
L_104789:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r13
	jne L_104167
L_104790:
	movq 0x8(%rbp),%r13
	movq %r13,%r11
	andq $0xFF,%r11
	cmpq $0x39,%r11
	je L_104794
	cmpq $0x3A,%r11
	je L_417999
L_104791:
	andq $0x3,%r13
	jnz L_104167
L_104792:
	jmp L_104167
.p2align 0x4
L_417999:
L_104794:
	movq 0x10(%r15),%r13
	cmpq %r13,0x10(%r14)
	je L_104237
	jmp L_104235
.p2align 0x4
L_418005:
L_104651:
	movq 0x0(%r13),%r15
L_104652:
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_104167
L_104653:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0xE4A,%r13
	je L_418022
	cmpq $0xE4B,%r13
	je L_418018
	cmpq $0xE4C,%r13
	je L_418006
	jmp L_104167
.p2align 0x4
L_418006:
L_104684:
	movq 0x0(%r15),%r13
	movq %r13,0x28(%rbp)
L_104685:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_104167
L_104686:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r14
	shrq $0x1,%r14
	cmpq $0x13AC,%r14
	je L_418014
	cmpq $0x13AD,%r14
	je L_418008
L_104687:
	cmpq $0x1,%r15
	jne L_104167
intInfUnary_3:
	movq 0x28(%rbp),%r15
	movq %r15,0x2D0(%rbp)
	movq 0x2C0(%rbp),%r15
	movq %r15,0x2D8(%rbp)
	addq $0x2D0,%rbp
	leaq (L_104689+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1473
.p2align 0x4
L_418008:
L_104723:
	movq 0x0(%r13),%r11
L_104724:
	movq %r11,%r14
	andq $0x3,%r14
	jnz L_418013
L_104727:
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0xE4A,%r14
	je L_418011
	cmpq $0xE4C,%r14
	je L_418009
	movq %r15,%r14
L_104725:
	cmpq $0x1,%r14
	je intInfUnary_3
	jmp L_104167
.p2align 0x4
L_418009:
L_104782:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r15
	je intInfUnary_3
L_104783:
	cmpq $0x1,0x8(%r15)
	jne L_104167
L_104784:
	movq %r14,0x0(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x2C0(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp intInfBinary_13
.p2align 0x4
L_418011:
L_104728:
	movq 0x0(%r11),%r14
	movq %r14,0x30(%rbp)
	cmpq $0x1,%r15
	je intInfUnary_3
L_104729:
	cmpq $0x1,0x8(%r15)
	jne L_104167
L_104730:
	movq 0x28(%rbp),%r15
	movq %r15,0x2D0(%rbp)
	movq 0x2C0(%rbp),%r15
	movq %r15,0x2D8(%rbp)
	addq $0x2D0,%rbp
	leaq (L_104731+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1473
.p2align 0x4
L_418013:
	movq %r15,%r14
	jmp L_104725
.p2align 0x4
L_418014:
L_104718:
	movq 0x0(%r13),%r14
	cmpq $0x1,%r15
	je intInfUnary_3
L_104719:
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0x13AC,%r15
	jne L_104167
L_104720:
	movq 0x0(%r11),%r15
	cmpq $0x1,%r13
	jne L_104167
L_104721:
	movq %r14,0x30(%rbp)
	movl $0x0,0x10(%rbp)
	movq 0x28(%rbp),%r14
	movq %r15,0x28(%rbp)
	movq %r14,%r15
	jmp varIntInf_1
.p2align 0x4
L_418018:
L_104679:
	movq 0x0(%r15),%r13
L_104680:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_104167
L_104681:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r11
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0x13AC,%r14
	jne L_104167
L_104682:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r15
	jne L_104167
L_104683:
	movq %r13,0x28(%rbp)
	movq %r14,0x30(%rbp)
	movl $0x0,0x10(%rbp)
	jmp varReal_1
.p2align 0x4
L_418022:
L_104654:
	movq 0x0(%r15),%r13
L_104655:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_104167
L_104656:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r11
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r14
	shrq $0x1,%r14
	cmpq $0x13AC,%r14
	jne L_104167
L_104657:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r15
	jne L_104167
L_104658:
	movq 0x8(%rbp),%r15
	movq %r15,%r11
	andq $0xFF,%r11
	cmpq $0x9,%r11
	je L_418043
	cmpq $0x15,%r11
	je L_418042
L_104659:
	movq %r15,%r11
	andq $0x3,%r11
	jnz L_104167
L_104660:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%rax
	shrq $0x1,%rax
	subq $0x11E8,%rax
	cmpq $0x16,%rax
	ja L_104167
	leaq jumpTable_232(%rip),%rbx
	jmp *(%rbx,%rax,8)
.data
.p2align 0x4
jumpTable_232:
.quad L_418040,L_418039,L_418038,L_418037,L_418036,L_418035,L_104167,L_418033,L_418032,L_418031,L_104167,L_104167,L_104167,L_418030,L_418029,L_418028,L_418027,L_104167,L_104167,L_104167,L_418026,L_418025,L_418024
.text
.p2align 0x4
L_418024:
L_104676:
	movq %r13,%r15
	jmp L_104519
.p2align 0x4
L_418025:
L_104675:
	movq %r13,%r15
	jmp L_104515
.p2align 0x4
L_418026:
L_104674:
	movq %r14,0x28(%rbp)
	movq 0x8(%rbp),%r11
	movq 0x0(%r11),%r14
	movq %r13,%r15
	jmp L_104502
.p2align 0x4
L_418027:
L_104673:
	movq 0x8(%rbp),%r11
	movq 0x0(%r11),%r10
	xorl %ecx,%ecx
	movq %r14,%r15
	movq %r13,%r14
	movq %r10,%r13
	jmp shift_1
.p2align 0x4
L_418028:
L_104672:
	movq %r13,0x28(%rbp)
	movq 0x8(%rbp),%r15
	movl 0x0(%r15),%ebx
	xorl %ecx,%ecx
	jmp L_104459
.p2align 0x4
L_418029:
L_104671:
	movq %r14,0x30(%rbp)
	movq 0x8(%rbp),%r14
	movl 0x0(%r14),%ecx
	movq 0x8(%r14),%r11
	movq %r11,0x28(%rbp)
	movq %r13,%r15
	jmp L_104445
.p2align 0x4
L_418030:
L_104670:
	movq %r14,0x30(%rbp)
	movq 0x8(%rbp),%r14
	movl 0x0(%r14),%ecx
	movq 0x8(%r14),%r11
	movq %r11,0x28(%rbp)
	movq %r13,%r15
	jmp L_104431
.p2align 0x4
L_418031:
L_104669:
	movq %r13,0x28(%rbp)
	movq %r14,%r15
	jmp L_104418
.p2align 0x4
L_418032:
L_104668:
	movq %r14,0x30(%rbp)
	movq 0x8(%rbp),%r14
	movl 0x0(%r14),%ebx
	movq 0x8(%r14),%r11
	movq %r11,0x28(%rbp)
	xorl %ecx,%ecx
	movq %r13,%r15
	jmp L_104404
.p2align 0x4
L_418033:
L_104667:
	movq 0x8(%rbp),%r14
	movl 0x0(%r14),%ebx
	movq 0x8(%r14),%r11
	movq %r11,0x28(%rbp)
	xorl %ecx,%ecx
	movq %r13,%r15
	jmp L_104392
.p2align 0x4
L_418035:
L_104666:
	movq %r13,0x28(%rbp)
	movq %r14,0x30(%rbp)
	movq 0x8(%rbp),%r14
	movq 0x0(%r14),%r15
	xorl %ecx,%ecx
	jmp ro_1
.p2align 0x4
L_418036:
L_104665:
	movq %r13,0x28(%rbp)
	movq %r14,0x30(%rbp)
	movq 0x8(%rbp),%r14
	movq 0x0(%r14),%r15
	xorl %ecx,%ecx
	jmp ro_1
.p2align 0x4
L_418037:
L_104664:
	movq %r13,0x30(%rbp)
	movq 0x8(%rbp),%r13
	movl 0x0(%r13),%ecx
	movq 0x8(%r13),%r15
	movl $0x0,0x28(%rbp)
	jmp L_104308
.p2align 0x4
L_418038:
L_104663:
	movq 0x8(%rbp),%r11
	movq 0x0(%r11),%r10
	xorl %ecx,%ecx
	movq %r14,%r15
	movq %r13,%r14
	movq %r10,%r13
	jmp L_104302
.p2align 0x4
L_418039:
L_104662:
	movq 0x8(%rbp),%r11
	movq 0x8(%r11),%r10
	xorl %ecx,%ecx
	movq %r14,%r15
	movq %r13,%r14
	movq %r10,%r13
	jmp L_104296
.p2align 0x4
L_418040:
L_104661:
	movq %r14,0x30(%rbp)
	movq 0x8(%rbp),%r14
	movq 0x0(%r14),%r11
	movq %r11,0x28(%rbp)
	movq %r13,%r15
	jmp L_104283
.p2align 0x4
L_418042:
L_104678:
	xorl %ecx,%ecx
	xchgq %r13,%r15
	jmp L_104527
.p2align 0x4
L_418043:
L_104677:
	xchgq %r13,%r15
	jmp L_104523
.p2align 0x4
.long 0x1269
L_104829:
	addq $0xFFFFFFFFFFFFFD30,%rbp
	movl 0x2D0(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	testl %r15d,%r15d
	jnz L_104167
L_104830:
	movq 0x8(%rbp),%r15
	movq %r15,%r14
	andq $0xFF,%r14
	cmpq $0x27,%r14
	je L_418058
	cmpq $0x29,%r14
	je L_418053
L_104831:
	andq $0x3,%r15
	jnz L_104167
L_104832:
	jmp L_104167
.p2align 0x4
L_418053:
L_104850:
	movq 0x10(%rbp),%r14
	movq %r14,%r13
	andq $0x1,%r13
	jz L_418054
L_104851:
	notq %r14
	orq $0x1,%r14
	movq %r14,0x28(%rbp)
intInf_6:
	movq 0x28(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x2C0(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_104852+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1473
.p2align 0x4
L_418054:
L_104858:
	movq 0xFFFFFFFFFFFFFFF0(%r14),%rsi
	decq %rsi
	jo L_104847
L_104859:
	movq 0xA0(%rbp),%r14
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r11
	imulq %r11,%rsi
	addq $0x7,%r13
	addq %r11,%r13
	addq %r13,%rsi
	movq %rsi,%r14
	movq %rsi,0x28(%rbp)
	addq $0x0,%r14
	jc L_104711
L_104860:
	movq (gcState+0x458)(%rip),%r13
	subq %r12,%r13
	cmpq %r14,%r13
	jnb L_104861
L_104863:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r13d
	movl %r13d,%edx
	movq %r14,%rsi
	leaq gcState(%rip),%r14
	movq %r14,%rdi
	xorq %rax,%rax
	addq $0x2D0,%rbp
	leaq (L_104864+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_104864
.p2align 0x4
.long 0x126A
L_104864:
	addq $0xFFFFFFFFFFFFFD30,%rbp
L_104861:
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0x28(%rbp),%rsi
	movq 0x10(%rbp),%rdi
	xorq %rax,%rax
	movq %r12,(gcState+0x0)(%rip)
	call IntInf_notb
L_104862:
	movq %rax,0x28(%rbp)
	movq (gcState+0x0)(%rip),%r12
	jmp intInf_6
.p2align 0x4
L_418058:
L_104833:
	leaq L_104841(%rip),%r14
	movq %r14,0x18(%rbp)
	movq %rbp,%r14
	addq $0x20,%r14
	subq (gcState+0x560)(%rip),%r14
	movq %r14,(gcState+0x20)(%rip)
	movq 0x10(%rbp),%r14
	movq %r14,0x2D0(%rbp)
	movq 0x38(%rbp),%r14
	movq %r14,0x2D8(%rbp)
	addq $0x2D0,%rbp
	leaq (L_104834+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigNeg_0
.p2align 0x4
.long 0x920
L_104924:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x20(%rbp),%r14
	movq %r14,(gcState+0x20)(%rip)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x48A
L_104841:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	cmpq $0x1,%r15
	je L_104167
	cmpq $0x3,%r15
	je L_104847
	cmpq $0x6,%r15
	je L_104167
	cmpq $0x7,%r15
	je L_104167
L_104842:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_104843
L_104844:
L_104843:
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x125E
L_104870:
	addq $0xFFFFFFFFFFFFFD30,%rbp
	movl 0x2D0(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	testl %r15d,%r15d
	jnz L_104167
L_104871:
	movq 0x8(%rbp),%r15
	movq %r15,%r14
	andq $0xFF,%r14
	cmpq $0x1F,%r14
	je L_418068
	cmpq $0x25,%r14
	je L_418067
	cmpq $0x2F,%r14
	je L_418066
L_104872:
	andq $0x3,%r15
	jnz L_104167
L_104873:
	jmp L_104167
.p2align 0x4
L_418066:
L_104901:
	movq 0x30(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0xC8(%rbp)
	leaq L_104841(%rip),%r14
	movq %r14,0x18(%rbp)
	movq %rbp,%r14
	addq $0x20,%r14
	subq (gcState+0x560)(%rip),%r14
	movq %r14,(gcState+0x20)(%rip)
	addq $0xC8,%rbp
	leaq (L_104902+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_418067:
L_104883:
	movq 0x50(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x38(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x40(%rbp)
	movq 0xC0(%rbp),%r14
	movq %r14,0x2D0(%rbp)
	addq $0x2D0,%rbp
	leaq (L_104884+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_418068:
L_104874:
	movq 0x30(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x2D0(%rbp)
	addq $0x2D0,%rbp
	leaq (L_104875+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x920
L_105844:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_105845
L_105848:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_105849+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_105849
.p2align 0x4
.long 0x504
L_105849:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_105845:
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_104167
L_105846:
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq $0x2753,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xBAD
L_105803:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movl 0x58(%rbp),%r15d
	movl %r15d,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_105804
L_105817:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_105818+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_105818
.p2align 0x4
.long 0x128F
L_105818:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_105804:
	movl 0x50(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_418072
L_105805:
	leaq L_104841(%rip),%r15
	movq %r15,0x18(%rbp)
	movq %rbp,%r15
	addq $0x20,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x18F8)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (bug_270+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_418072:
L_105809:
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x30(%rbp),%r15
	movq 0x0(%r15),%r13
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r15,0x58(%rbp)
	addq $0x18,%r12
	leaq L_104841(%rip),%r15
	movq %r15,0x18(%rbp)
	movq %rbp,%r15
	addq $0x20,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x40(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_105810+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1183
.p2align 0x4
.long 0x126B
L_105769:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x38(%rbp)
	movl 0x28(%rbp),%ecx
	movq %r15,0x28(%rbp)
wordOrOverflow_1:
	movl %ecx,0x60(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x60,%rbp
	leaq (L_104972+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp isInRange_0
.p2align 0x4
.long 0x128C
L_105771:
	addq $0xFFFFFFFFFFFFFE90,%rbp
	movq 0x170(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x160(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_105772+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toIntInfX_0
.p2align 0x4
.long 0x920
word_24:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_105737
L_105738:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_105739+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_105739
.p2align 0x4
.long 0x488
L_105739:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_105737:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x2753,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	addq $0x10,%r12
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x920
realOpt_18:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_105704
L_105707:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_105708+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_105708
.p2align 0x4
.long 0x504
L_105708:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_105704:
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_104167
L_105705:
	movq 0x0(%r15),%r14
	movq $0x1C97,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x2753,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x5F1
L_105673:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movl 0x40(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	testl %r15d,%r15d
	jnz L_418077
L_105674:
	xorl %ecx,%ecx
x_330:
	movl %ecx,%r15d
	shlq $0x2,%r15
	orq $0x3,%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_418077:
L_105675:
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%rsi
	movq 0x30(%rbp),%r15
	movq 0x0(%r15),%rdi
	xorq %rax,%rax
	call IntInf_equal
L_105676:
	movl %eax,%ecx
	jmp x_330
.p2align 0x4
.long 0xDDE
L_105637:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movl 0x50(%rbp),%r15d
	movl %r15d,0x48(%rbp)
	leaq L_104841(%rip),%r14
	movq %r14,0x18(%rbp)
	movq %rbp,%r14
	addq $0x20,%r14
	subq (gcState+0x560)(%rip),%r14
	movq %r14,(gcState+0x20)(%rip)
	movl %r15d,0x50(%rbp)
	movq $0x3,0x58(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x50,%rbp
	leaq (L_105638+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x5F1
L_105643:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x30(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_105644+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x920
word_22:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_105611
L_105612:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_105613+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_105613
.p2align 0x4
.long 0x488
L_105613:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_105611:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x2753,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	addq $0x10,%r12
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x920
x_329:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movl 0x30(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	movl %r15d,%r14d
	shlq $0x2,%r14
	orq $0x3,%r14
	movq %r14,0x0(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x76B
L_105536:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movl 0x68(%rbp),%r15d
	movl %r15d,0x2C(%rbp)
	testl %r15d,%r15d
	jnz L_418079
L_105537:
	leaq L_104841(%rip),%r15
	movq %r15,0x18(%rbp)
	movq %rbp,%r15
	addq $0x20,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x1968)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (bug_269+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_418079:
L_105541:
	movl 0x28(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_418080
L_105542:
	movq 0x30(%rbp),%r14
	movq 0x0(%r14),%r15
L_105543:
	movq 0x38(%rbp),%r13
	movq 0x0(%r13),%r11
	movq %r15,%r14
	movq %r11,%r15
L_105544:
	movq %r15,0x68(%rbp)
	movq %r14,0x70(%rbp)
	leaq L_104841(%rip),%r15
	movq %r15,0x18(%rbp)
	movq %rbp,%r15
	addq $0x20,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x48(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x68,%rbp
	leaq (L_105545+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1182
.p2align 0x4
L_418080:
L_105552:
	leaq L_104841(%rip),%r15
	movq %r15,0x18(%rbp)
	movq %rbp,%r15
	addq $0x20,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x30(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_105553+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toIntInfX_0
.p2align 0x4
.long 0x126B
L_105505:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x38(%rbp)
	movl 0x28(%rbp),%ecx
	movq %r15,0x28(%rbp)
	jmp wordOrOverflow_1
.p2align 0x4
.long 0x1284
L_105507:
	addq $0xFFFFFFFFFFFFFE90,%rbp
	movq 0x170(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0xA0(%rbp)
	movq 0x160(%rbp),%r15
	movq %r15,0xA8(%rbp)
	addq $0xA0,%rbp
	leaq (L_105508+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toIntInfX_0
.p2align 0x4
.long 0x7C5
L_105468:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq %r15,0x60(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_105469+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigNeg_0
.p2align 0x4
.long 0x1282
L_105444:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq %r15,0x60(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_105445+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigNeg_0
.p2align 0x4
.long 0x1280
L_105409:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movl 0x60(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	leaq L_104841(%rip),%r14
	movq %r14,0x18(%rbp)
	movq %rbp,%r14
	addq $0x20,%r14
	subq (gcState+0x560)(%rip),%r14
	movq %r14,(gcState+0x20)(%rip)
	movl %r15d,0x60(%rbp)
	movq $0x3,0x68(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x60,%rbp
	leaq (L_105410+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x920
word_21:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_105382
L_105383:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_105384+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_105384
.p2align 0x4
.long 0x488
L_105384:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_105382:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x2753,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	addq $0x10,%r12
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x127A
L_105334:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movl 0x70(%rbp),%r15d
	movl %r15d,0x2C(%rbp)
	testl %r15d,%r15d
	jnz L_418082
L_105335:
	leaq L_104841(%rip),%r15
	movq %r15,0x18(%rbp)
	movq %rbp,%r15
	addq $0x20,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x1978)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (bug_268+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_418082:
L_105339:
	movl 0x28(%rbp),%r13d
	testl %r13d,%r13d
	jnz L_418083
L_105340:
	movq 0x30(%rbp),%r13
	movq 0x0(%r13),%r14
	movq 0x40(%rbp),%r15
L_105341:
	movq %r15,0x70(%rbp)
	movq %r14,0x78(%rbp)
	leaq L_104841(%rip),%r15
	movq %r15,0x18(%rbp)
	movq %rbp,%r15
	addq $0x20,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x50(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x70,%rbp
	leaq (L_105342+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigQuot_0
.p2align 0x4
L_418083:
L_105349:
	leaq L_104841(%rip),%r15
	movq %r15,0x18(%rbp)
	movq %rbp,%r15
	addq $0x20,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x30(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_105350+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toIntInfX_0
.p2align 0x4
.long 0x127A
L_105285:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movl 0x70(%rbp),%r15d
	movl %r15d,0x2C(%rbp)
	testl %r15d,%r15d
	jnz L_418084
L_105286:
	leaq L_104841(%rip),%r15
	movq %r15,0x18(%rbp)
	movq %rbp,%r15
	addq $0x20,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x1988)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (bug_267+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_418084:
L_105290:
	movl 0x28(%rbp),%r13d
	testl %r13d,%r13d
	jnz L_418085
L_105291:
	movq 0x30(%rbp),%r13
	movq 0x0(%r13),%r14
	movq 0x40(%rbp),%r15
L_105292:
	movq %r15,0x70(%rbp)
	movq %r14,0x78(%rbp)
	leaq L_104841(%rip),%r15
	movq %r15,0x18(%rbp)
	movq %rbp,%r15
	addq $0x20,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x50(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x70,%rbp
	leaq (L_105293+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigRem_0
.p2align 0x4
L_418085:
L_105300:
	leaq L_104841(%rip),%r15
	movq %r15,0x18(%rbp)
	movq %rbp,%r15
	addq $0x20,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x30(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_105301+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toIntInfX_0
.p2align 0x4
.long 0x1272
L_105169:
	addq $0xFFFFFFFFFFFFFE70,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x190(%rbp)
	movq 0x178(%rbp),%r15
	movq %r15,0x198(%rbp)
	addq $0x190,%rbp
	leaq (L_105170+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromIntInf_0
.p2align 0x4
.long 0x48A
L_105188:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_105189+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call IEEEReal_getRoundingMode
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_105189
.p2align 0x4
.long 0x475
L_105189:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	testl %eax,%eax
	jz L_418090
L_105190:
	cmpl $0x1,%eax
	je L_418089
L_105191:
	cmpl $0x2,%eax
	je L_418088
L_105192:
	cmpl $0x3,%eax
	jne L_105166
L_105194:
	xorb %dl,%dl
L_105195:
	cmpb 0x30(%rbp),%dl
	je L_104167
L_105196:
	leaq L_104841(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x30,%rbp
	leaq (L_105197+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp setRoundingMode_0
.p2align 0x4
L_418088:
L_105199:
	movb $0x1,%dl
	jmp L_105195
.p2align 0x4
L_418089:
L_105200:
	movb $0x2,%dl
	jmp L_105195
.p2align 0x4
L_418090:
L_105201:
	movb $0x3,%dl
	jmp L_105195
.p2align 0x4
.long 0x1276
L_105216:
	addq $0xFFFFFFFFFFFFFE80,%rbp
	leaq L_105249(%rip),%r15
	movq %r15,0x18(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x180(%rbp)
	movq 0x168(%rbp),%r15
	movq %r15,0x188(%rbp)
	addq $0x180,%rbp
	leaq (L_105217+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromIntInf_1
.p2align 0x4
.long 0x48A
L_105235:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_105236:
	movq (c_stackP+0x0)(%rip),%rsp
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_105237+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call IEEEReal_getRoundingMode
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_105237
.p2align 0x4
.long 0x475
L_105237:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	testl %eax,%eax
	jz L_418095
L_105238:
	cmpl $0x1,%eax
	je L_418094
L_105239:
	cmpl $0x2,%eax
	je L_418093
L_105240:
	cmpl $0x3,%eax
	jne L_105166
L_105242:
	xorb %dl,%dl
L_105243:
	cmpb 0x30(%rbp),%dl
	je L_104167
L_105244:
	leaq L_104841(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x30,%rbp
	leaq (L_105197+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp setRoundingMode_0
.p2align 0x4
L_418093:
L_105246:
	movb $0x1,%dl
	jmp L_105243
.p2align 0x4
L_418094:
L_105247:
	movb $0x2,%dl
	jmp L_105243
.p2align 0x4
L_418095:
L_105248:
	movb $0x3,%dl
	jmp L_105243
.p2align 0x4
.long 0x1279
L_105254:
	addq $0xFFFFFFFFFFFFFE70,%rbp
	movq 0x190(%rbp),%r15
	movq %r15,0x30(%rbp)
	movb 0x28(%rbp),%r14b
	testb %r14b,%r14b
	jnz L_418096
L_105255:
	movq %r15,0x28(%rbp)
	jmp L_105158
.p2align 0x4
L_418096:
L_105256:
	movq %r15,0x28(%rbp)
	jmp L_105206
.p2align 0x4
.long 0x126E
L_105121:
	addq $0xFFFFFFFFFFFFFE50,%rbp
	movq 0x1B0(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq %r15,0x1B0(%rbp)
	addq $0x1B0,%rbp
	leaq (L_105122+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x126E
L_105081:
	addq $0xFFFFFFFFFFFFFE50,%rbp
	movq 0x1B0(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq %r15,0x1B0(%rbp)
	addq $0x1B0,%rbp
	leaq (L_105082+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x920
word_20:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_105051
L_105052:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_105053+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_105053
.p2align 0x4
.long 0x488
L_105053:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_105051:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x2753,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	addq $0x10,%r12
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xBAD
L_105011:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movl 0x58(%rbp),%r15d
	movl %r15d,0x50(%rbp)
	testl %r15d,%r15d
	jnz L_418098
L_105012:
	leaq L_104841(%rip),%r15
	movq %r15,0x18(%rbp)
	movq %rbp,%r15
	addq $0x20,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x1908)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (bug_266+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_418098:
L_105016:
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x30(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x58(%rbp)
	leaq L_104841(%rip),%r15
	movq %r15,0x18(%rbp)
	movq %rbp,%r15
	addq $0x20,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x40(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x58,%rbp
	leaq (L_105017+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x126B
L_104971:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x38(%rbp)
	movl 0x28(%rbp),%ecx
	movq %r15,0x28(%rbp)
	jmp wordOrOverflow_1
.p2align 0x4
.long 0x126C
L_104982:
	addq $0xFFFFFFFFFFFFFE90,%rbp
	movq 0x170(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq 0x160(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x90,%rbp
	leaq (L_104983+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toIntInfX_0
.p2align 0x4
.long 0x920
word_19:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_104939
L_104940:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_104941+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_104941
.p2align 0x4
.long 0x488
L_104941:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_104939:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x2753,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	addq $0x10,%r12
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x920
realOpt_35:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_106870
L_106873:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_106874+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_106874
.p2align 0x4
.long 0x504
L_106874:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_106870:
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_104167
L_106871:
	movq 0x0(%r15),%r14
	movq $0x1C97,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x2753,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x920
realOpt_34:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_106776
L_106779:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_106780+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_106780
.p2align 0x4
.long 0x504
L_106780:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_106776:
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_104167
L_106777:
	movq 0x0(%r15),%r14
	movq $0x1C97,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x2753,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x920
realOpt_33:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_106739
L_106742:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_106743+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_106743
.p2align 0x4
.long 0x504
L_106743:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_106739:
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_104167
L_106740:
	movq 0x0(%r15),%r14
	movq $0x1C97,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x2753,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x920
realOpt_32:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_106702
L_106705:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_106706+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_106706
.p2align 0x4
.long 0x504
L_106706:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_106702:
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_104167
L_106703:
	movq 0x0(%r15),%r14
	movq $0x1C97,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x2753,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x920
realOpt_31:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_106562
L_106565:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_106566+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_106566
.p2align 0x4
.long 0x504
L_106566:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_106562:
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_104167
L_106563:
	movq 0x0(%r15),%r14
	movq $0x1C97,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x2753,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x920
realOpt_30:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_106530
L_106533:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_106534+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_106534
.p2align 0x4
.long 0x504
L_106534:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_106530:
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_104167
L_106531:
	movq 0x0(%r15),%r14
	movq $0x1C97,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x2753,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x920
realOpt_29:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_106472
L_106475:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_106476+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_106476
.p2align 0x4
.long 0x504
L_106476:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_106472:
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_104167
L_106473:
	movq 0x0(%r15),%r14
	movq $0x1C97,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x2753,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x920
realOpt_28:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_106445
L_106448:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_106449+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_106449
.p2align 0x4
.long 0x504
L_106449:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_106445:
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_104167
L_106446:
	movq 0x0(%r15),%r14
	movq $0x1C97,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x2753,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x920
realOpt_27:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_106418
L_106421:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_106422+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_106422
.p2align 0x4
.long 0x504
L_106422:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_106418:
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_104167
L_106419:
	movq 0x0(%r15),%r14
	movq $0x1C97,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x2753,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x920
realOpt_26:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_106391
L_106394:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_106395+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_106395
.p2align 0x4
.long 0x504
L_106395:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_106391:
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_104167
L_106392:
	movq 0x0(%r15),%r14
	movq $0x1C97,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x2753,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x920
realOpt_25:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_106364
L_106367:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_106368+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_106368
.p2align 0x4
.long 0x504
L_106368:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_106364:
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_104167
L_106365:
	movq 0x0(%r15),%r14
	movq $0x1C97,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x2753,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x920
realOpt_24:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_106337
L_106340:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_106341+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_106341
.p2align 0x4
.long 0x504
L_106341:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_106337:
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_104167
L_106338:
	movq 0x0(%r15),%r14
	movq $0x1C97,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x2753,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x920
realOpt_23:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_106310
L_106313:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_106314+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_106314
.p2align 0x4
.long 0x504
L_106314:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_106310:
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_104167
L_106311:
	movq 0x0(%r15),%r14
	movq $0x1C97,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x2753,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x920
realOpt_22:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_106283
L_106286:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_106287+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_106287
.p2align 0x4
.long 0x504
L_106287:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_106283:
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_104167
L_106284:
	movq 0x0(%r15),%r14
	movq $0x1C97,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x2753,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x920
realOpt_21:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_106251
L_106254:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_106255+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_106255
.p2align 0x4
.long 0x504
L_106255:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_106251:
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_104167
L_106252:
	movq 0x0(%r15),%r14
	movq $0x1C97,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x2753,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x920
realOpt_20:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_106224
L_106227:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_106228+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_106228
.p2align 0x4
.long 0x504
L_106228:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_106224:
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_104167
L_106225:
	movq 0x0(%r15),%r14
	movq $0x1C97,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x2753,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x920
realOpt_19:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_106197
L_106200:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_106201+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_106201
.p2align 0x4
.long 0x504
L_106201:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_106197:
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_104167
L_106198:
	movq 0x0(%r15),%r14
	movq $0x1C97,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x2753,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1292
L_106158:
	addq $0xFFFFFFFFFFFFFD30,%rbp
	movl 0x2D0(%rbp),%r15d
	movl %r15d,0x48(%rbp)
	leaq L_104841(%rip),%r14
	movq %r14,0x18(%rbp)
	movq %rbp,%r14
	addq $0x20,%r14
	subq (gcState+0x560)(%rip),%r14
	movq %r14,(gcState+0x20)(%rip)
	movl %r15d,0x2D0(%rbp)
	movq $0x3,0x2D8(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x2E0(%rbp)
	addq $0x2D0,%rbp
	leaq (L_106159+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x51A
L_106130:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movl 0x38(%rbp),%r15d
	movl %r15d,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_106131
L_106134:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_106135+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_106135
.p2align 0x4
.long 0x5E4
L_106135:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_106131:
	movslq 0x30(%rbp),%r15
	movq 0x28(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_104167
L_106133:
	movq 0x0(%r14,%r15,8),%r13
	movq $0x1C95,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x10,%r12
	movq $0x2753,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x61B
L_106091:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x50(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x38(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x40(%rbp)
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_106092+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x920
L_106099:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x30(%rbp)
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (bug_272+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x5F1
L_106062:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movl 0x40(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	testl %r15d,%r15d
	jnz L_418136
L_106063:
	xorl %ecx,%ecx
x_333:
	movl %ecx,%r15d
	shlq $0x2,%r15
	orq $0x3,%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_418136:
L_106064:
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0x30(%rbp),%r15
	movq 0x0(%r15),%rsi
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%rdi
	xorq %rax,%rax
	call IntInf_equal
L_106065:
	movl %eax,%ecx
	jmp x_333
.p2align 0x4
.long 0x920
x_332:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movl 0x30(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	movl %r15d,%r14d
	shlq $0x2,%r14
	orq $0x3,%r14
	movq %r14,0x0(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x5F1
L_106026:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movl 0x40(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	testl %r15d,%r15d
	jnz L_418137
L_106027:
	xorl %ecx,%ecx
x_331:
	movl %ecx,%r15d
	shlq $0x2,%r15
	orq $0x3,%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_418137:
L_106028:
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%rsi
	movq 0x30(%rbp),%r15
	movq 0x0(%r15),%rdi
	xorq %rax,%rax
	call IntInf_equal
L_106029:
	movl %eax,%ecx
	jmp x_331
.p2align 0x4
.long 0x920
L_106006:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_106007
L_106010:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_106011+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_106011
.p2align 0x4
.long 0x504
L_106011:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_106007:
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_104167
L_106008:
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq $0x2753,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	addq $0x10,%r12
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1290
L_105949:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	movl 0xE0(%rbp),%r15d
	movl %r15d,0x40(%rbp)
	leaq L_104841(%rip),%r14
	movq %r14,0x18(%rbp)
	movq %rbp,%r14
	addq $0x20,%r14
	subq (gcState+0x560)(%rip),%r14
	movq %r14,(gcState+0x20)(%rip)
	movl %r15d,0xE0(%rbp)
	movq $0x3,0xE8(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0xF0(%rbp)
	addq $0xE0,%rbp
	leaq (L_105950+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x1248
L_105912:
	addq $0xFFFFFFFFFFFFFD68,%rbp
	movq 0x298(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x288(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x30(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x38(%rbp)
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_105913+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x920
L_105920:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x30(%rbp)
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (bug_271+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x1259
L_104588:
	addq $0xFFFFFFFFFFFFFD30,%rbp
	movl 0x2D0(%rbp),%r15d
	movl %r15d,0x14(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_104589
L_104644:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2D0,%rbp
	leaq (L_104645+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_104645
.p2align 0x4
.long 0x125A
L_104645:
	addq $0xFFFFFFFFFFFFFD30,%rbp
L_104589:
	movq 0x8(%rbp),%r15
	movq %r15,%r14
	andq $0xFF,%r14
	cmpq $0x1D,%r14
	je L_418173
	cmpq $0x1E,%r14
	je L_418170
	cmpq $0x1F,%r14
	je L_418167
	cmpq $0x23,%r14
	je L_418164
	cmpq $0x25,%r14
	je L_418162
	cmpq $0x26,%r14
	je L_418158
	cmpq $0x2A,%r14
	je L_418155
	cmpq $0x2B,%r14
	je L_418151
	cmpq $0x2D,%r14
	je L_418147
	cmpq $0x2E,%r14
	je L_418144
	cmpq $0x33,%r14
	je L_418141
L_104590:
	andq $0x3,%r15
	jnz L_104167
L_104591:
	jmp L_104167
.p2align 0x4
L_418141:
L_104639:
	movl 0x14(%rbp),%r14d
	testl %r14d,%r14d
	jz L_418143
L_104640:
	cmpl $0xFFFFFFFF,%r14d
	jne L_104167
L_104642:
	movq $0x2757,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x2757,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r13)
	movq $0x2755,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x8(%r14)
	addq $0x18,%r12
	movq $0x29,0x0(%r14)
	movq %r14,0x0(%rbp)
	movq 0x20(%rbp),%r14
	movq %r14,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_418143:
L_104643:
	movq $0x2751,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq 0x30(%rbp),%r11
	movq %r11,0x0(%r13)
	movq %r13,0x0(%rbp)
	movq 0x20(%rbp),%r13
	movq %r13,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_418144:
L_104634:
	movl 0x14(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_104167
L_104636:
	movl 0x10(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_418145
L_104637:
	movq $0x2757,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x2757,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r13)
	movq $0x2755,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x8(%r14)
	addq $0x18,%r12
	movq $0x27,0x0(%r14)
	movq %r14,0x0(%rbp)
	movq 0x20(%rbp),%r14
	movq %r14,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_418145:
L_104638:
	movq $0x2751,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r14,0x0(%rbp)
	movq 0x20(%rbp),%r14
	movq %r14,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_418147:
L_104627:
	movl 0x10(%rbp),%r14d
	testl %r14d,%r14d
	jz L_104167
L_104629:
	movl 0x14(%rbp),%r14d
	cmpl $0xFFFFFFFF,%r14d
	je L_104190
L_104630:
	cmpl $0x1,%r14d
	je L_104190
	jmp L_104167
.p2align 0x4
L_418151:
L_104622:
	movl 0x10(%rbp),%r14d
	testl %r14d,%r14d
	jz L_104167
L_104624:
	movl 0x14(%rbp),%r14d
	cmpl $0x1,%r14d
	je L_418153
	cmpl $0xFFFFFFFF,%r14d
	je L_418152
	jmp L_104167
.p2align 0x4
L_418152:
L_104626:
	movq $0x2757,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x2757,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r13)
	movq $0x2755,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x8(%r14)
	addq $0x18,%r12
	movq $0x27,0x0(%r14)
	movq %r14,0x0(%rbp)
	movq 0x20(%rbp),%r14
	movq %r14,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_418153:
L_104625:
	movq $0x2751,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq 0x30(%rbp),%r11
	movq %r11,0x0(%r13)
	movq %r13,0x0(%rbp)
	movq 0x20(%rbp),%r13
	movq %r13,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_418155:
L_104617:
	movl 0x14(%rbp),%r14d
	testl %r14d,%r14d
	jz L_418157
L_104618:
	cmpl $0xFFFFFFFF,%r14d
	jne L_104167
L_104604:
	movl $0xFFFFFFFF,%ecx
	jmp x_326
.p2align 0x4
L_418157:
L_104621:
	movq $0x2751,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq 0x30(%rbp),%r11
	movq %r11,0x0(%r13)
	movq %r13,0x0(%rbp)
	movq 0x20(%rbp),%r13
	movq %r13,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_418158:
L_104614:
	movl 0x14(%rbp),%r14d
	cmpl $0x0,%r14d
	je L_104190
	cmpl $0x1,%r14d
	je L_418160
	cmpl $0xFFFFFFFF,%r14d
	je L_418159
	jmp L_104167
.p2align 0x4
L_418159:
L_104616:
	movq $0x2757,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x2757,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r13)
	movq $0x2755,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x8(%r14)
	addq $0x18,%r12
	movq $0x27,0x0(%r14)
	movq %r14,0x0(%rbp)
	movq 0x20(%rbp),%r14
	movq %r14,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_418160:
L_104615:
	movq $0x2751,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq 0x30(%rbp),%r11
	movq %r11,0x0(%r13)
	movq %r13,0x0(%rbp)
	movq 0x20(%rbp),%r13
	movq %r13,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_418162:
L_104611:
	movl 0x14(%rbp),%r14d
	testl %r14d,%r14d
	jz L_104190
	jmp L_104167
.p2align 0x4
L_418164:
L_104606:
	movl 0x14(%rbp),%r14d
	cmpl $0xFFFFFFFF,%r14d
	je L_104182
L_104607:
	cmpl $0x1,%r14d
	je L_104182
	jmp L_104167
.p2align 0x4
L_418167:
L_104600:
	movl 0x14(%rbp),%r14d
	testl %r14d,%r14d
	jz L_104190
L_104601:
	cmpl $0xFFFFFFFF,%r14d
	je L_104604
	jmp L_104167
.p2align 0x4
L_418170:
L_104595:
	movl 0x14(%rbp),%r14d
	testl %r14d,%r14d
	jz L_104190
L_104596:
	cmpl $0xFFFFFFFF,%r14d
	jne L_104167
L_104598:
	movq $0x2751,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r14,0x0(%rbp)
	movq 0x20(%rbp),%r14
	movq %r14,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_418173:
L_104592:
	movl 0x14(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_104167
L_104594:
	movq $0x2751,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r14,0x0(%rbp)
	movq 0x20(%rbp),%r14
	movq %r14,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x48A
L_104646:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	cmpq $0x3,%r15
	je L_104167
L_104647:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_104648
L_104649:
L_104648:
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x8F9
L_104537:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_104538
L_104580:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_104581+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_104581
.p2align 0x4
.long 0xB61
L_104581:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_104538:
	movq 0x38(%rbp),%r15
	movq %r15,%r14
	andq $0x7,%r14
	cmpq $0x1,%r14
	je L_418196
	cmpq $0x2,%r14
	je L_104167
	cmpq $0x3,%r14
	je L_104167
	cmpq $0x5,%r14
	je L_104167
	cmpq $0x6,%r14
	je L_418186
L_104539:
	movl 0x4(%r15),%r14d
	movl 0x0(%r15),%r13d
	movq 0x8(%rbp),%r15
	movq %r15,%r11
	andq $0xFF,%r11
	cmpq $0x79,%r11
	je L_418182
	cmpq $0x7F,%r11
	je L_418179
L_104540:
	andq $0x3,%r15
	jnz L_104167
L_104541:
	jmp L_104167
.p2align 0x4
L_418179:
L_104549:
	shrq $0x8,%r15
	movb %r15b,%r11b
	testl %r14d,%r14d
	jnz L_104167
L_104550:
	cmpl $0x2,%r13d
	jne L_104167
L_104552:
	movzbq %r11b,%r15
	shlq $0x8,%r15
	orq $0x77,%r15
	movq $0x2757,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x2757,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x8(%r11)
	addq $0x18,%r12
	movq %r13,0x0(%r11)
	movq $0x2755,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r11,0x8(%r14)
	movq %r14,0x0(%rbp)
	addq $0x18,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_418182:
L_104542:
	shrq $0x8,%r15
	movb %r15b,%r11b
	movl 0x10(%rbp),%r15d
	testl %r15d,%r15d
	jz L_104167
L_104544:
	testl %r14d,%r14d
	jnz L_104167
L_104545:
	testl %r13d,%r13d
	jnz L_104167
L_104547:
	movzbq %r11b,%r15
	shlq $0x8,%r15
	orq $0x77,%r15
	movq $0x2757,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x2757,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x8(%r11)
	addq $0x18,%r12
	movq %r13,0x0(%r11)
	movq $0x2755,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r11,0x8(%r14)
	movq %r14,0x0(%rbp)
	addq $0x18,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_418186:
L_104569:
	shrq $0x3,%r15
	movl %r15d,%r14d
	movq 0x8(%rbp),%r15
	movq %r15,%r13
	andq $0xFF,%r13
	cmpq $0x79,%r13
	je L_418190
	cmpq $0x7F,%r13
	je L_418188
L_104570:
	andq $0x3,%r15
	jnz L_104167
L_104571:
	jmp L_104167
.p2align 0x4
L_418188:
L_104577:
	shrq $0x8,%r15
	movb %r15b,%r13b
	testl %r14d,%r14d
	jz L_418189
L_104579:
	movzbq %r13b,%r15
	shlq $0x8,%r15
	orq $0x83,%r15
	movq $0x2757,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x2755,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	movq %r13,0x0(%rbp)
	addq $0x18,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_418189:
L_104578:
	movq $0x2751,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_418190:
L_104572:
	shrq $0x8,%r15
	movb %r15b,%r13b
	movl 0x10(%rbp),%r15d
	testl %r15d,%r15d
	jz L_104167
L_104574:
	testl %r14d,%r14d
	jz L_418191
L_104576:
	movzbq %r13b,%r15
	shlq $0x8,%r15
	orq $0x83,%r15
	movq $0x2757,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x2755,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	movq %r13,0x0(%rbp)
	addq $0x18,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_418191:
L_104575:
	movq $0x2751,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_418196:
L_104554:
	movq 0x8(%rbp),%r14
	movq %r14,%r13
	andq $0xFF,%r13
	cmpq $0x6B,%r13
	je L_418206
	cmpq $0x77,%r13
	je L_418205
	cmpq $0x79,%r13
	je L_418204
	cmpq $0x7A,%r13
	je L_104235
	cmpq $0x7D,%r13
	je L_104235
	cmpq $0x7E,%r13
	je L_104235
	cmpq $0x7F,%r13
	je L_418200
	cmpq $0x85,%r13
	je L_104237
	cmpq $0x87,%r13
	je L_418198
L_104555:
	andq $0x3,%r14
	jnz L_104167
L_104556:
	jmp L_104167
.p2align 0x4
L_418198:
L_104565:
	movq $0x1C97,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq 0x28(%rbp),%r11
	movq %r11,0x0(%r13)
	movq $0x2753,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r11,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_418200:
L_104563:
	movq $0x1C97,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq 0x28(%rbp),%r11
	movq %r11,0x0(%r13)
	movq $0x2753,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r11,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_418204:
L_104559:
	movq $0x1C97,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq 0x28(%rbp),%r11
	movq %r11,0x0(%r13)
	movq $0x2753,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r11,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_418205:
L_104558:
	movq $0x1C97,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq 0x28(%rbp),%r11
	movq %r11,0x0(%r13)
	movq $0x2753,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r11,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_418206:
L_104557:
	movq $0x1C97,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq 0x28(%rbp),%r11
	movq %r11,0x0(%r13)
	movq $0x2753,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r11,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xDDE
L_104504:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movl 0x50(%rbp),%r15d
	movl %r15d,0x48(%rbp)
	movl %r15d,0x50(%rbp)
	movq $0x3,0x58(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x50,%rbp
	leaq (L_104505+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x7B4
L_104314:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movl 0x48(%rbp),%r15d
	movl %r15d,0x40(%rbp)
	movl %r15d,0x48(%rbp)
	movq $0x3,0x50(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x48,%rbp
	leaq (L_104315+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x124D
L_104323:
	addq $0xFFFFFFFFFFFFFD68,%rbp
	movl 0x298(%rbp),%r15d
	movl %r15d,0x50(%rbp)
	movl %r15d,0x298(%rbp)
	movq $0x3,0x2A0(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x2A8(%rbp)
	addq $0x298,%rbp
	leaq (L_104324+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x1258
L_104462:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movl 0x68(%rbp),%r15d
	movl %r15d,0x40(%rbp)
	movl %r15d,0x60(%rbp)
	movq $0x3,0x68(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x60,%rbp
	leaq (L_104463+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0xF4E
L_104475:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movl 0x60(%rbp),%r15d
	movl %r15d,0x58(%rbp)
	decl %r15d
	movl %r15d,0x60(%rbp)
	movq $0x3,0x68(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x60,%rbp
	leaq (L_104476+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x1258
L_104480:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movl 0x68(%rbp),%r15d
	movl %r15d,0x40(%rbp)
	movl %r15d,0x60(%rbp)
	movq $0x3,0x68(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x60,%rbp
	leaq (L_104481+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0xF4E
L_104494:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movl 0x60(%rbp),%r15d
	movl %r15d,0x58(%rbp)
	decl %r15d
	movl %r15d,0x60(%rbp)
	movq $0x3,0x68(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x60,%rbp
	leaq (L_104495+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x5F1
L_104450:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_104451
L_104454:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_104455+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_104455
.p2align 0x4
.long 0x489
L_104455:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_104451:
	cmpq $0xFFFFFFFFFFFFFFFF,0x38(%rbp)
	jne L_104167
L_104453:
	movq $0x23E9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x2757,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x2755,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	movq %r13,0x0(%rbp)
	addq $0x18,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x5F1
L_104436:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_104437
L_104440:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_104441+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_104441
.p2align 0x4
.long 0x489
L_104441:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_104437:
	cmpq $0xFFFFFFFFFFFFFFFF,0x38(%rbp)
	jne L_104167
L_104439:
	movq $0x23E7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x2757,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x2755,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	movq %r13,0x0(%rbp)
	addq $0x18,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xDDE
L_104420:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movl 0x50(%rbp),%r15d
	movl %r15d,0x48(%rbp)
	movl %r15d,0x50(%rbp)
	movq $0x3,0x58(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x50,%rbp
	leaq (L_104421+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x5F1
L_104410:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_104411
L_104414:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_104415+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_104415
.p2align 0x4
.long 0x489
L_104415:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_104411:
	cmpq $0xFFFFFFFFFFFFFFFF,0x38(%rbp)
	jne L_104167
L_104413:
	movq $0x23E9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x2757,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x2755,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	movq %r13,0x0(%rbp)
	addq $0x18,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1257
L_104398:
	addq $0xFFFFFFFFFFFFFD68,%rbp
	movq 0x298(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq $0xFFFFFFFFFFFFFFFF,%r15
	je zero_3
	jmp L_104167
.p2align 0x4
.long 0x1252
L_104371:
	addq $0xFFFFFFFFFFFFFE60,%rbp
	movl 0x1A0(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	movslq %r15d,%r14
	shlq $0x1,%r14
	orq $0x1,%r14
	movq %r14,0x40(%rbp)
	movq 0x28(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x50(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x58(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x60(%rbp)
	movq %r14,0x1A0(%rbp)
	addq $0x1A0,%rbp
	leaq (L_104372+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0xDDE
L_104359:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movl 0x50(%rbp),%r15d
	movl %r15d,0x48(%rbp)
	movl %r15d,0x50(%rbp)
	movq $0x3,0x58(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x50,%rbp
	leaq (L_104360+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x1251
L_104342:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movl 0x58(%rbp),%r15d
	movl %r15d,0x2C(%rbp)
	movl %r15d,0x58(%rbp)
	movq $0x3,0x60(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x58,%rbp
	leaq (L_104343+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0xBAD
L_104285:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movl 0x58(%rbp),%r15d
	movl %r15d,0x50(%rbp)
	movl %r15d,0x58(%rbp)
	movq $0x3,0x60(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x58,%rbp
	leaq (L_104286+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x651
L_104183:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movl 0x38(%rbp),%r15d
	movl %r15d,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_104184
L_104187:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_104188+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_104188
.p2align 0x4
.long 0x475
L_104188:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_104184:
	movl 0x30(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_104167
L_104185:
	movq $0x1C99,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x2753,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x50D
L_104227:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movl 0x40(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	movl %r15d,0x40(%rbp)
	movq $0x3,0x48(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x40,%rbp
	leaq (L_104228+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x50D
L_104220:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movl 0x40(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	movl %r15d,0x40(%rbp)
	movq $0x3,0x48(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x40,%rbp
	leaq (L_104221+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x50D
L_104213:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movl 0x40(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	movl %r15d,0x40(%rbp)
	movq $0x3,0x48(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x40,%rbp
	leaq (L_104214+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x50D
L_104206:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movl 0x40(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	movl %r15d,0x40(%rbp)
	movq $0x3,0x48(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x40,%rbp
	leaq (L_104207+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x50D
L_104199:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movl 0x40(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	movl %r15d,0x40(%rbp)
	movq $0x3,0x48(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x40,%rbp
	leaq (L_104200+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x1249
L_104256:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	movl 0xE0(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	movl %r15d,0xE0(%rbp)
	movq $0x3,0xE8(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0xF0(%rbp)
	addq $0xE0,%rbp
	leaq (L_104257+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x1248
L_104241:
	addq $0xFFFFFFFFFFFFFD68,%rbp
	movq 0x298(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x288(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x30(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x38(%rbp)
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_104242+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x920
L_104249:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x30(%rbp)
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (bug_263+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x125B
L_104689:
	addq $0xFFFFFFFFFFFFFD30,%rbp
	movl 0x2D0(%rbp),%r15d
	movl %r15d,0x10(%rbp)
	testl %r15d,%r15d
	jnz L_104167
L_104690:
	movq 0x8(%rbp),%r15
	movq %r15,%r14
	andq $0xFF,%r14
	cmpq $0x27,%r14
	je L_418222
	cmpq $0x29,%r14
	je L_418217
L_104691:
	andq $0x3,%r15
	jnz L_104167
L_104692:
	jmp L_104167
.p2align 0x4
L_418217:
L_104701:
	movq 0x28(%rbp),%r14
	movq %r14,%r13
	andq $0x1,%r13
	jz L_418218
L_104702:
	notq %r14
	orq $0x1,%r14
	movq %r14,0x28(%rbp)
intInf_5:
	movq 0x28(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x2C0(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_104703+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1473
.p2align 0x4
L_418218:
L_104709:
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	decq %r13
	jo L_104154
L_104710:
	movq 0xA0(%rbp),%r14
	movq 0x0(%r14),%r11
	movq 0x8(%r14),%rsi
	imulq %rsi,%r13
	addq $0x7,%r11
	addq %r11,%rsi
	addq %r13,%rsi
	movq %rsi,%r14
	movq %rsi,0x30(%rbp)
	addq $0x0,%r14
	jc L_104711
L_104712:
	movq (gcState+0x458)(%rip),%r13
	subq %r12,%r13
	cmpq %r14,%r13
	jnb L_104713
L_104715:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r13d
	movl %r13d,%edx
	movq %r14,%rsi
	leaq gcState(%rip),%r14
	movq %r14,%rdi
	xorq %rax,%rax
	addq $0x2D0,%rbp
	leaq (L_104716+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_104716
.p2align 0x4
.long 0x125D
L_104716:
	addq $0xFFFFFFFFFFFFFD30,%rbp
L_104713:
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0x30(%rbp),%rsi
	movq 0x28(%rbp),%rdi
	xorq %rax,%rax
	movq %r12,(gcState+0x0)(%rip)
	call IntInf_notb
L_104714:
	movq %rax,0x28(%rbp)
	movq (gcState+0x0)(%rip),%r12
	jmp intInf_5
.p2align 0x4
L_418222:
L_104693:
	movq 0x28(%rbp),%r14
	movq %r14,0x2D0(%rbp)
	movq 0x38(%rbp),%r14
	movq %r14,0x2D8(%rbp)
	addq $0x2D0,%rbp
	leaq (L_104694+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigNeg_0
.p2align 0x4
.long 0x125E
L_104731:
	addq $0xFFFFFFFFFFFFFD30,%rbp
	movl 0x2D0(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	testl %r15d,%r15d
	jnz L_104167
L_104732:
	movq 0x8(%rbp),%r15
	movq %r15,%r14
	andq $0xFF,%r14
	cmpq $0x1F,%r14
	je L_418227
	cmpq $0x25,%r14
	je L_418226
	cmpq $0x2F,%r14
	je L_418225
L_104733:
	andq $0x3,%r15
	jnz L_104167
L_104734:
	jmp L_104167
.p2align 0x4
L_418225:
L_104762:
	movq 0x30(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0xC8(%rbp)
	addq $0xC8,%rbp
	leaq (L_104763+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_418226:
L_104744:
	movq 0x50(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x38(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x40(%rbp)
	movq 0xC0(%rbp),%r14
	movq %r14,0x2D0(%rbp)
	addq $0x2D0,%rbp
	leaq (L_104745+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
L_418227:
L_104735:
	movq 0x30(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x2D0(%rbp)
	addq $0x2D0,%rbp
	leaq (L_104736+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x51A
L_104852:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movl 0x38(%rbp),%r15d
	movl %r15d,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_104853
L_104856:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_104857+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_104857
.p2align 0x4
.long 0x5E4
L_104857:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_104853:
	movl 0x30(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_104167
L_104854:
	movq $0x1C99,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x2753,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x125C
L_104834:
	addq $0xFFFFFFFFFFFFFD30,%rbp
	movq 0x2D0(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq %r15,0x38(%rbp)
	movq 0x2C0(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_104835+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1473
.p2align 0x4
.long 0x1266
L_104902:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movl 0xC8(%rbp),%r15d
	movl %r15d,0x30(%rbp)
	cmpl $0x2,%r15d
	je L_418237
	cmpl $0x8,%r15d
	je L_418236
	cmpl $0xA,%r15d
	je L_418235
	cmpl $0x10,%r15d
	je L_418231
L_104903:
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x1A40)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_418231:
L_104918:
	xorb %dl,%dl
L_104905:
	movq 0xB0(%rbp),%r14
	movq 0x18(%r14),%r13
	movq 0x10(%r14),%r11
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r10
	cmpb $0x1,%dl
	je L_418234
	cmpb $0x2,%dl
	je L_418233
	cmpb $0x3,%dl
	je L_418232
L_104906:
L_104907:
	movq %r15,0xD0(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC8,%rbp
	leaq (L_104908+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1197
.p2align 0x4
L_418232:
	movq %r13,%r15
	jmp L_104907
.p2align 0x4
L_418233:
L_104914:
	movq %r10,%r15
	jmp L_104907
.p2align 0x4
L_418234:
L_104913:
	movq %r11,%r15
	jmp L_104907
.p2align 0x4
L_418235:
L_104917:
	movb $0x1,%dl
	jmp L_104905
.p2align 0x4
L_418236:
L_104916:
	movb $0x2,%dl
	jmp L_104905
.p2align 0x4
L_418237:
L_104904:
	movb $0x3,%dl
	jmp L_104905
.p2align 0x4
.long 0x1260
L_104884:
	addq $0xFFFFFFFFFFFFFD30,%rbp
	movl 0x2D0(%rbp),%r15d
	movl %r15d,0x48(%rbp)
	leaq L_104841(%rip),%r14
	movq %r14,0x18(%rbp)
	movq %rbp,%r14
	addq $0x20,%r14
	subq (gcState+0x560)(%rip),%r14
	movq %r14,(gcState+0x20)(%rip)
	movl %r15d,0x2D0(%rbp)
	movq $0x3,0x2D8(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x2E0(%rbp)
	addq $0x2D0,%rbp
	leaq (L_104885+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x125F
L_104875:
	addq $0xFFFFFFFFFFFFFD30,%rbp
	movl 0x2D0(%rbp),%r15d
	movl %r15d,0x30(%rbp)
	leaq L_104841(%rip),%r14
	movq %r14,0x18(%rbp)
	movq %rbp,%r14
	addq $0x20,%r14
	subq (gcState+0x560)(%rip),%r14
	movq %r14,(gcState+0x20)(%rip)
	movl %r15d,0x2D0(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x2D8(%rbp)
	movq 0xA8(%rbp),%r15
	movq %r15,0x2E0(%rbp)
	addq $0x2D0,%rbp
	leaq (L_104876+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1487
.p2align 0x4
.long 0x920
bug_270:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_105806
L_105807:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_105808+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_105808
.p2align 0x4
.long 0x504
L_105808:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_105806:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xFA4
L_105810:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x38(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_105811+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x1256
L_104972:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movl 0x60(%rbp),%r15d
	testl %r15d,%r15d
	movl %r15d,0x38(%rbp)
	jz L_104847
L_104974:
	movq 0x50(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_104975+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x128D
L_105772:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_105773
L_105774:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_105775+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_105775
.p2align 0x4
.long 0x128E
L_105775:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_105773:
	movq 0x38(%rbp),%r15
	movq 0x40(%rbp),%r14
	jmp L_105768
.p2align 0x4
.long 0x7AA
L_105638:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (word_23+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x9B2
L_105644:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movl 0x58(%rbp),%r15d
	movl %r15d,0x30(%rbp)
	movl %r15d,0x58(%rbp)
	movq $0x3,0x60(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x58,%rbp
	leaq (L_105645+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x920
bug_269:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_105538
L_105539:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_105540+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_105540
.p2align 0x4
.long 0x504
L_105540:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_105538:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1286
L_105545:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x40(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_105546+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x128A
L_105553:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x30(%rbp)
	movl 0x28(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_418242
L_105554:
	jmp L_105543
.p2align 0x4
L_418242:
L_105555:
	movq 0x38(%rbp),%r14
	movq %r14,0x68(%rbp)
	movq 0x50(%rbp),%r14
	movq %r14,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_105556+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toIntInfX_0
.p2align 0x4
.long 0x1285
L_105508:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x40(%rbp),%r14
	jmp L_105504
.p2align 0x4
.long 0x7C6
L_105469:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x28(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x50(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x40(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x48(%rbp)
	movq %r14,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_105470+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x1283
L_105445:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movl $0x1,%ecx
	movq 0x28(%rbp),%r14
	movq %r15,0x28(%rbp)
	movq %r14,0x30(%rbp)
	jmp wordOrOverflow_1
.p2align 0x4
.long 0xA4B
L_105410:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x38(%rbp),%r14
	movq %r14,0x58(%rbp)
	movq 0x50(%rbp),%r14
	movq %r14,0x60(%rbp)
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_105411+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x920
bug_268:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_105336
L_105337:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_105338+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_105338
.p2align 0x4
.long 0x504
L_105338:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_105336:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x127B
L_105342:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x48(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_105343+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x127E
L_105350:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r14
	movq %r14,0x30(%rbp)
	movl 0x28(%rbp),%r13d
	testl %r13d,%r13d
	jnz L_418244
L_105351:
	movq 0x40(%rbp),%r15
	jmp L_105341
.p2align 0x4
L_418244:
L_105352:
	movq 0x38(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_105353+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toIntInfX_0
.p2align 0x4
.long 0x920
bug_267:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_105287
L_105288:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_105289+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_105289
.p2align 0x4
.long 0x504
L_105289:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_105287:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x127B
L_105293:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x48(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_105294+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x127E
L_105301:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r14
	movq %r14,0x30(%rbp)
	movl 0x28(%rbp),%r13d
	testl %r13d,%r13d
	jnz L_418246
L_105302:
	movq 0x40(%rbp),%r15
	jmp L_105292
.p2align 0x4
L_418246:
L_105303:
	movq 0x38(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_105304+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toIntInfX_0
.p2align 0x4
.long 0x1272
L_105170:
	addq $0xFFFFFFFFFFFFFE70,%rbp
	movsd 0x190(%rbp),%xmm15
	movsd %xmm15,0x38(%rbp)
	movb $0x1,0x190(%rbp)
	addq $0x190,%rbp
	leaq (L_105171+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp setRoundingMode_0
.p2align 0x4
.long 0x920
L_105197:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	jmp L_104167
.p2align 0x4
.long 0x1276
L_105217:
	addq $0xFFFFFFFFFFFFFE80,%rbp
	movss 0x180(%rbp),%xmm15
	movss %xmm15,0x34(%rbp)
	leaq L_105235(%rip),%r15
	movq %r15,0x18(%rbp)
	movb $0x1,0x180(%rbp)
	addq $0x180,%rbp
	leaq (L_105218+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp setRoundingMode_0
.p2align 0x4
.long 0x48A
L_105249:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_105236
.p2align 0x4
.long 0x126E
L_105122:
	addq $0xFFFFFFFFFFFFFE50,%rbp
	movl 0x1B0(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x1B0(%rbp)
	addq $0x1B0,%rbp
	leaq (L_105123+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x126E
L_105082:
	addq $0xFFFFFFFFFFFFFE50,%rbp
	movl 0x1B0(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x1B0(%rbp)
	addq $0x1B0,%rbp
	leaq (L_105083+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x920
bug_266:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_105013
L_105014:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_105015+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_105015
.p2align 0x4
.long 0x504
L_105015:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_105013:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xFA4
L_105017:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x38(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_105018+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x126D
L_104983:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x40(%rbp),%r14
	jmp L_104970
.p2align 0x4
.long 0x1293
L_106159:
	addq $0xFFFFFFFFFFFFFD30,%rbp
	movq 0x2D0(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq %r15,0x2D0(%rbp)
	movq $0x3,0x2D8(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x2E0(%rbp)
	addq $0x2D0,%rbp
	leaq (L_106160+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x512
L_106092:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movl 0x50(%rbp),%r15d
	movl %r15d,0x48(%rbp)
	movl %r15d,0x50(%rbp)
	movq $0x3,0x58(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x50,%rbp
	leaq (L_106093+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x920
bug_272:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_106100
L_106101:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_106102+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_106102
.p2align 0x4
.long 0x504
L_106102:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_106100:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1291
L_105950:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	movq 0xE0(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq %r15,0xE0(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0xE8(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0xF0(%rbp)
	addq $0xE0,%rbp
	leaq (L_105951+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x7B4
L_105913:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movl 0x48(%rbp),%r15d
	movl %r15d,0x40(%rbp)
	movl %r15d,0x48(%rbp)
	movq $0x3,0x50(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x48,%rbp
	leaq (L_105914+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x920
bug_271:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_105921
L_105922:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_105923+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_105923
.p2align 0x4
.long 0x504
L_105923:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_105921:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x7AA
L_104505:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq %r15,0x48(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq $0x3,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_104506+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x79B
L_104315:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq $0x1,0x40(%rbp)
	movq 0x38(%rbp),%r14
	movq %r14,0x48(%rbp)
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_104316+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x124E
L_104324:
	addq $0xFFFFFFFFFFFFFD68,%rbp
	movq 0x298(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq %r15,0x298(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x2A0(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x2A8(%rbp)
	addq $0x298,%rbp
	leaq (L_104325+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x7C4
L_104463:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq $0x3,0x48(%rbp)
	movq 0x50(%rbp),%r14
	movq %r14,0x58(%rbp)
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_104464+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x9F5
L_104476:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq %r15,0x60(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_104477+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigNeg_0
.p2align 0x4
.long 0x7C4
L_104481:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq $0x3,0x48(%rbp)
	movq 0x50(%rbp),%r14
	movq %r14,0x58(%rbp)
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_104482+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x9F5
L_104495:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq %r15,0x60(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_104496+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigNeg_0
.p2align 0x4
.long 0x7AA
L_104421:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq %r15,0x48(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq $0x3,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_104422+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x1253
L_104372:
	addq $0xFFFFFFFFFFFFFE60,%rbp
	movl 0x1A0(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	movl %r15d,0x1A0(%rbp)
	movq $0x3,0x1A8(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x1B0(%rbp)
	addq $0x1A0,%rbp
	leaq (L_104373+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x7AA
L_104360:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq %r15,0x48(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq $0x3,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_104361+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x6DB
L_104343:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq %r15,0x50(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq $0x3,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_104344+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x693
L_104286:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq %r15,0x50(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq $0x3,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_104287+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x1247
L_104228:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq $0x3,0x38(%rbp)
	movq 0x30(%rbp),%r14
	movq %r14,0x40(%rbp)
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_104229+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x1247
L_104221:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq $0x1,0x38(%rbp)
	movq 0x30(%rbp),%r14
	movq %r14,0x40(%rbp)
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_104222+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x1247
L_104214:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq $0x1,0x38(%rbp)
	movq 0x30(%rbp),%r14
	movq %r14,0x40(%rbp)
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_104215+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x1247
L_104207:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq $0x1,0x38(%rbp)
	movq 0x30(%rbp),%r14
	movq %r14,0x40(%rbp)
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_104208+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x1247
L_104200:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq $0x1,0x38(%rbp)
	movq 0x30(%rbp),%r14
	movq %r14,0x40(%rbp)
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_104201+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x124A
L_104257:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	movq 0xE0(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq %r15,0xE0(%rbp)
	movq $0x1,0xE8(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0xF0(%rbp)
	addq $0xE0,%rbp
	leaq (L_104258+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x7B4
L_104242:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movl 0x48(%rbp),%r15d
	movl %r15d,0x40(%rbp)
	movl %r15d,0x48(%rbp)
	movq $0x3,0x50(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x48,%rbp
	leaq (L_104243+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x920
bug_263:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_104250
L_104251:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_104252+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_104252
.p2align 0x4
.long 0x504
L_104252:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_104250:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x51A
L_104703:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movl 0x38(%rbp),%r15d
	movl %r15d,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_104704
L_104707:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_104708+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_104708
.p2align 0x4
.long 0x5E4
L_104708:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_104704:
	movl 0x30(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_104167
L_104705:
	movq $0x1C99,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x2753,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x125C
L_104694:
	addq $0xFFFFFFFFFFFFFD30,%rbp
	movq 0x2D0(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq %r15,0x38(%rbp)
	movq 0x2C0(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_104695+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1473
.p2align 0x4
.long 0x1266
L_104763:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movl 0xC8(%rbp),%r15d
	movl %r15d,0x30(%rbp)
	cmpl $0x2,%r15d
	je L_418259
	cmpl $0x8,%r15d
	je L_418258
	cmpl $0xA,%r15d
	je L_418257
	cmpl $0x10,%r15d
	je L_418253
L_104764:
	movq (globalObjptr+0x1A40)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_418253:
L_104779:
	xorb %dl,%dl
L_104766:
	movq 0xB0(%rbp),%r14
	movq 0x18(%r14),%r13
	movq 0x10(%r14),%r11
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r10
	cmpb $0x1,%dl
	je L_418256
	cmpb $0x2,%dl
	je L_418255
	cmpb $0x3,%dl
	je L_418254
L_104767:
L_104768:
	movq %r15,0xD0(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC8,%rbp
	leaq (L_104769+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1197
.p2align 0x4
L_418254:
	movq %r13,%r15
	jmp L_104768
.p2align 0x4
L_418255:
L_104775:
	movq %r10,%r15
	jmp L_104768
.p2align 0x4
L_418256:
L_104774:
	movq %r11,%r15
	jmp L_104768
.p2align 0x4
L_418257:
L_104778:
	movb $0x1,%dl
	jmp L_104766
.p2align 0x4
L_418258:
L_104777:
	movb $0x2,%dl
	jmp L_104766
.p2align 0x4
L_418259:
L_104765:
	movb $0x3,%dl
	jmp L_104766
.p2align 0x4
.long 0x1260
L_104745:
	addq $0xFFFFFFFFFFFFFD30,%rbp
	movl 0x2D0(%rbp),%r15d
	movl %r15d,0x48(%rbp)
	movl %r15d,0x2D0(%rbp)
	movq $0x3,0x2D8(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x2E0(%rbp)
	addq $0x2D0,%rbp
	leaq (L_104746+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x125F
L_104736:
	addq $0xFFFFFFFFFFFFFD30,%rbp
	movl 0x2D0(%rbp),%r15d
	movl %r15d,0x30(%rbp)
	movl %r15d,0x2D0(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x2D8(%rbp)
	movq 0xA8(%rbp),%r15
	movq %r15,0x2E0(%rbp)
	addq $0x2D0,%rbp
	leaq (L_104737+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1487
.p2align 0x4
.long 0x51A
L_104835:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movl 0x38(%rbp),%r15d
	movl %r15d,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_104836
L_104839:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_104840+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_104840
.p2align 0x4
.long 0x5E4
L_104840:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_104836:
	movl 0x30(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_104167
L_104837:
	movq $0x1C99,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x2753,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1267
L_104908:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq %r15,0x30(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_104909+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1266
.p2align 0x4
.long 0x1261
L_104885:
	addq $0xFFFFFFFFFFFFFD30,%rbp
	movq 0x2D0(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq %r15,0x2D0(%rbp)
	movq $0x101,0x2D8(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x2E0(%rbp)
	addq $0x2D0,%rbp
	leaq (L_104886+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x125C
L_104876:
	addq $0xFFFFFFFFFFFFFD30,%rbp
	movq 0x2D0(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq %r15,0x38(%rbp)
	movq 0x2C0(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_104877+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1473
.p2align 0x4
.long 0x923
L_105811:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movl 0x58(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	movl %r15d,0x58(%rbp)
	movq $0x3,0x60(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x58,%rbp
	leaq (L_105812+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0xDDE
L_104975:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movl 0x50(%rbp),%r15d
	movl %r15d,0x48(%rbp)
	movl %r15d,0x50(%rbp)
	movq $0x3,0x58(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x50,%rbp
	leaq (L_104976+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x51A
word_23:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_105639
L_105640:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_105641+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_105641
.p2align 0x4
.long 0x488
L_105641:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_105639:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x2753,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	addq $0x10,%r12
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xFA3
L_105645:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x38(%rbp),%r14
	movq %r14,0x40(%rbp)
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (word_23+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x1287
L_105546:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movl 0x68(%rbp),%r15d
	movl %r15d,0x40(%rbp)
	movl %r15d,0x68(%rbp)
	movq $0x3,0x70(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x68,%rbp
	leaq (L_105547+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x128B
L_105556:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x30(%rbp),%r14
	jmp L_105544
.p2align 0x4
.long 0x1251
L_105470:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movl 0x58(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	movl %r15d,0x58(%rbp)
	movq $0x3,0x60(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x58,%rbp
	leaq (L_105471+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x847
L_105411:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_105412
L_105413:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_105414+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_105414
.p2align 0x4
.long 0x6F7
L_105414:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_105412:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x2753,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	addq $0x10,%r12
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x127C
L_105343:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movl 0x70(%rbp),%r15d
	movl %r15d,0x40(%rbp)
	movl %r15d,0x70(%rbp)
	movq $0x3,0x78(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x70,%rbp
	leaq (L_105344+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x127F
L_105353:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x30(%rbp),%r14
	jmp L_105341
.p2align 0x4
.long 0x127C
L_105294:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movl 0x70(%rbp),%r15d
	movl %r15d,0x40(%rbp)
	movl %r15d,0x70(%rbp)
	movq $0x3,0x78(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x70,%rbp
	leaq (L_105295+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x127F
L_105304:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x30(%rbp),%r14
	jmp L_105292
.p2align 0x4
.long 0x1272
L_105171:
	addq $0xFFFFFFFFFFFFFE70,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x190(%rbp)
	movq 0x178(%rbp),%r15
	movq %r15,0x198(%rbp)
	addq $0x190,%rbp
	leaq (L_105172+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromIntInf_0
.p2align 0x4
.long 0x1276
L_105218:
	addq $0xFFFFFFFFFFFFFE80,%rbp
	leaq L_105249(%rip),%r15
	movq %r15,0x18(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x180(%rbp)
	movq 0x168(%rbp),%r15
	movq %r15,0x188(%rbp)
	addq $0x180,%rbp
	leaq (L_105219+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromIntInf_1
.p2align 0x4
.long 0x126F
L_105123:
	addq $0xFFFFFFFFFFFFFE50,%rbp
	movl 0x1B0(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_105124
L_105132:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1B0,%rbp
	leaq (L_105133+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_105133
.p2align 0x4
.long 0x1270
L_105133:
	addq $0xFFFFFFFFFFFFFE50,%rbp
L_105124:
	movl 0x28(%rbp),%r15d
	movl 0x38(%rbp),%r14d
	subl %r14d,%r15d
	movq $0x343,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movl %r15d,0x0(%r13)
	addq $0x10,%r12
	movl %r14d,0x4(%r13)
	movq %r13,0x60(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x1A0(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x60,%rbp
	leaq (L_105125+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp swap_0
.p2align 0x4
.long 0x126F
L_105083:
	addq $0xFFFFFFFFFFFFFE50,%rbp
	movl 0x1B0(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_105084
L_105092:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1B0,%rbp
	leaq (L_105093+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_105093
.p2align 0x4
.long 0x1270
L_105093:
	addq $0xFFFFFFFFFFFFFE50,%rbp
L_105084:
	movl 0x28(%rbp),%r15d
	movl 0x38(%rbp),%r14d
	subl %r14d,%r15d
	movq $0x343,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movl %r15d,0x4(%r13)
	addq $0x10,%r12
	movl %r14d,0x0(%r13)
	movq %r13,0x60(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x1A0(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x60,%rbp
	leaq (L_105085+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp swap_0
.p2align 0x4
.long 0x923
L_105018:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movl 0x58(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	movl %r15d,0x58(%rbp)
	movq $0x3,0x60(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x58,%rbp
	leaq (L_105019+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x1294
L_106160:
	addq $0xFFFFFFFFFFFFFD30,%rbp
	movq 0x2D0(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_106161
L_106173:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2D0,%rbp
	leaq (L_106174+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_106174
.p2align 0x4
.long 0x1297
L_106174:
	addq $0xFFFFFFFFFFFFFD30,%rbp
L_106161:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x2D8(%rbp)
	movl $0x1,0x2D0(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x2E0(%rbp)
	movq 0x1B8(%rbp),%r15
	movq %r15,0x2E8(%rbp)
	addq $0x2D0,%rbp
	leaq (L_106162+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp rshift_0
.p2align 0x4
.long 0x868
L_106093:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x28(%rbp),%r14
	movq %r14,0x48(%rbp)
	movq 0x40(%rbp),%r14
	movq %r14,0x50(%rbp)
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_106094+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x124B
L_105951:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	movq 0xE0(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_105952
L_105953:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_105954+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_105954
.p2align 0x4
.long 0x124C
L_105954:
	addq $0xFFFFFFFFFFFFFF20,%rbp
L_105952:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xD0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x2753,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	addq $0x10,%r12
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x79B
L_105914:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq $0x1,0x40(%rbp)
	movq 0x38(%rbp),%r14
	movq %r14,0x48(%rbp)
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_105915+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x5F1
L_104506:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_104507
L_104511:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_104512+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_104512
.p2align 0x4
.long 0x489
L_104512:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_104507:
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0x38(%rbp),%rsi
	movq 0x30(%rbp),%rdi
	xorq %rax,%rax
	call IntInf_equal
L_104508:
	testl %eax,%eax
	jz L_104167
L_104510:
	movq $0x2751,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x51A
L_104316:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_104317
L_104318:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_104319+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_104319
.p2align 0x4
.long 0x488
L_104319:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_104317:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x2753,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x124F
L_104325:
	addq $0xFFFFFFFFFFFFFD68,%rbp
	movq 0x298(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x28(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x2A0(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0x298(%rbp)
	addq $0x298,%rbp
	leaq (L_104326+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_0
.p2align 0x4
.long 0x7B4
L_104464:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x38(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_104465+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x8BD
L_104477:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq $0x3,0x48(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_104464+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x7B4
L_104482:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq $0x1,0x40(%rbp)
L_104483:
	movq 0x38(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_104484+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x8BD
L_104496:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq $0x3,0x58(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x58,%rbp
	leaq (L_104497+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1186
.p2align 0x4
.long 0x5F1
L_104422:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_104423
L_104427:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_104428+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_104428
.p2align 0x4
.long 0x489
L_104428:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_104423:
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0x30(%rbp),%rsi
	movq 0x38(%rbp),%rdi
	xorq %rax,%rax
	call IntInf_equal
L_104424:
	testl %eax,%eax
	jz L_104167
L_104426:
	movq $0x1C95,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x2753,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1254
L_104373:
	addq $0xFFFFFFFFFFFFFE60,%rbp
	movq 0x1A0(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq %r15,0x1A0(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x1A8(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x1B0(%rbp)
	addq $0x1A0,%rbp
	leaq (L_104374+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x5F1
L_104361:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_104362
L_104367:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_104368+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_104368
.p2align 0x4
.long 0x489
L_104368:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_104362:
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0x30(%rbp),%rsi
	movq 0x38(%rbp),%rdi
	xorq %rax,%rax
	call IntInf_equal
L_104363:
	testl %eax,%eax
	jnz L_104366
	jmp L_104167
.p2align 0x4
.long 0x7BF
L_104344:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_104345
L_104351:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_104352+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_104352
.p2align 0x4
.long 0x86A
L_104352:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_104345:
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0x38(%rbp),%rsi
	movq 0x40(%rbp),%rdi
	xorq %rax,%rax
	call IntInf_equal
L_104346:
	testl %eax,%eax
	jz L_104167
L_104348:
	movl 0x28(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_104167
L_104349:
	movq $0x1C95,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x2753,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x7B4
L_104287:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_104288
L_104292:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_104293+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_104293
.p2align 0x4
.long 0x5F4
L_104293:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_104288:
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0x38(%rbp),%rsi
	movq 0x40(%rbp),%rdi
	xorq %rax,%rax
	call IntInf_equal
L_104289:
	testl %eax,%eax
	jz L_104167
L_104291:
	movq $0x23E5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x2757,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x2755,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	movq %r13,0x0(%rbp)
	addq $0x18,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x8B0
L_104229:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_104230
L_104231:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_104232+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_104232
.p2align 0x4
.long 0x8B1
L_104232:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_104230:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x2753,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x8B0
L_104222:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_104223
L_104224:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_104225+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_104225
.p2align 0x4
.long 0x8B1
L_104225:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_104223:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x2753,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x8B0
L_104215:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_104216
L_104217:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_104218+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_104218
.p2align 0x4
.long 0x8B1
L_104218:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_104216:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x2753,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x8B0
L_104208:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_104209
L_104210:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_104211+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_104211
.p2align 0x4
.long 0x8B1
L_104211:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_104209:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x2753,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x8B0
L_104201:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_104202
L_104203:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_104204+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_104204
.p2align 0x4
.long 0x8B1
L_104204:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_104202:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x2753,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x124B
L_104258:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	movq 0xE0(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_104259
L_104260:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_104261+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_104261
.p2align 0x4
.long 0x124C
L_104261:
	addq $0xFFFFFFFFFFFFFF20,%rbp
L_104259:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xD0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x2753,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x79B
L_104243:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq $0x1,0x40(%rbp)
	movq 0x38(%rbp),%r14
	movq %r14,0x48(%rbp)
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_104244+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x51A
L_104695:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movl 0x38(%rbp),%r15d
	movl %r15d,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_104696
L_104699:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_104700+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_104700
.p2align 0x4
.long 0x5E4
L_104700:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_104696:
	movl 0x30(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_104167
L_104697:
	movq $0x1C99,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x2753,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1267
L_104769:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq %r15,0x30(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_104770+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1266
.p2align 0x4
.long 0x1261
L_104746:
	addq $0xFFFFFFFFFFFFFD30,%rbp
	movq 0x2D0(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq %r15,0x2D0(%rbp)
	movq $0x101,0x2D8(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x2E0(%rbp)
	addq $0x2D0,%rbp
	leaq (L_104747+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x125C
L_104737:
	addq $0xFFFFFFFFFFFFFD30,%rbp
	movq 0x2D0(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq %r15,0x38(%rbp)
	movq 0x2C0(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_104738+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1473
.p2align 0x4
.long 0x920
L_104909:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_104910
L_104911:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_104912+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_104912
.p2align 0x4
.long 0x504
L_104912:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_104910:
	movq $0x2753,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1262
L_104886:
	addq $0xFFFFFFFFFFFFFD30,%rbp
	movq 0x2D0(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_104887
L_104899:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2D0,%rbp
	leaq (L_104900+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_104900
.p2align 0x4
.long 0x1265
L_104900:
	addq $0xFFFFFFFFFFFFFD30,%rbp
L_104887:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xC0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x2D8(%rbp)
	movl $0x0,0x2D0(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x2E0(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0x2E8(%rbp)
	addq $0x2D0,%rbp
	leaq (L_104888+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1479
.p2align 0x4
.long 0x51A
L_104877:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movl 0x38(%rbp),%r15d
	movl %r15d,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_104878
L_104881:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_104882+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_104882
.p2align 0x4
.long 0x5E4
L_104882:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_104878:
	movl 0x30(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_104167
L_104879:
	movq $0x1C99,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x2753,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x6F4
L_105812:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq %r15,0x58(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x58,%rbp
	leaq (L_105813+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x7AA
L_104976:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x28(%rbp),%r14
	movq %r14,0x48(%rbp)
	movq 0x40(%rbp),%r14
	movq %r14,0x50(%rbp)
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_104977+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x1288
L_105547:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq %r15,0x68(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x68,%rbp
	leaq (L_105548+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x6DB
L_105471:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x30(%rbp),%r14
	movq %r14,0x50(%rbp)
	movq 0x48(%rbp),%r14
	movq %r14,0x58(%rbp)
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_105472+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x7A0
L_105344:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq %r15,0x70(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x70,%rbp
	leaq (L_105345+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x7A0
L_105295:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq %r15,0x70(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x70,%rbp
	leaq (L_105296+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x1273
L_105172:
	addq $0xFFFFFFFFFFFFFE70,%rbp
	movsd 0x190(%rbp),%xmm15
	movsd %xmm15,0x28(%rbp)
	movb 0x30(%rbp),%r15b
	movb %r15b,0x190(%rbp)
	addq $0x190,%rbp
	leaq (L_105173+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp setRoundingMode_0
.p2align 0x4
.long 0x1277
L_105219:
	addq $0xFFFFFFFFFFFFFE80,%rbp
	movss 0x180(%rbp),%xmm15
	movss %xmm15,0x28(%rbp)
	leaq L_105235(%rip),%r15
	movq %r15,0x18(%rbp)
	movb 0x30(%rbp),%r15b
	movb %r15b,0x180(%rbp)
	addq $0x180,%rbp
	leaq (L_105220+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp setRoundingMode_0
.p2align 0x4
.long 0x10E6
L_105125:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x50(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_105126+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x10E6
L_105085:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x50(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_105086+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x6F4
L_105019:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq %r15,0x58(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x58,%rbp
	leaq (L_105020+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x1295
L_106162:
	addq $0xFFFFFFFFFFFFFD30,%rbp
	movq 0x2D0(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x2D8(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_106163
L_106171:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2D0,%rbp
	leaq (L_106172+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_106172
.p2align 0x4
.long 0x1296
L_106172:
	addq $0xFFFFFFFFFFFFFD30,%rbp
L_106163:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x2D0(%rbp)
	movq 0x160(%rbp),%r15
	movq %r15,0x2D8(%rbp)
	addq $0x2D0,%rbp
	leaq (L_106164+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toIntInfX_0
.p2align 0x4
.long 0x69B
L_106094:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_106095
L_106096:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_106097+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_106097
.p2align 0x4
.long 0x488
L_106097:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_106095:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x2753,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	addq $0x10,%r12
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x51A
L_105915:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_105916
L_105917:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_105918+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_105918
.p2align 0x4
.long 0x488
L_105918:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_105916:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x2753,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	addq $0x10,%r12
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1250
L_104326:
	addq $0xFFFFFFFFFFFFFD68,%rbp
	movl 0x298(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	testl %r15d,%r15d
	jnz L_418295
L_104327:
	movq (globalObjptr+0x19C8)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (bug_264+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_418295:
L_104331:
	movq 0x38(%rbp),%r15
	movq %r15,%r14
	movq 0x40(%rbp),%r13
	andq %r13,%r14
	andq $0x1,%r14
	jz L_418297
L_104332:
	cmpq %r13,%r15
	jl L_104167
L_104333:
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp zero_3
.p2align 0x4
L_418297:
L_104335:
	movq (c_stackP+0x0)(%rip),%rsp
	movq %r13,%rsi
	movq %r15,%rdi
	xorq %rax,%rax
	call IntInf_compare
L_104336:
	cmpl $0x0,%eax
	jl L_104167
L_104337:
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp zero_3
.p2align 0x4
.long 0xF50
L_104465:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movl 0x60(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	movl %r15d,0x60(%rbp)
	movq $0x3,0x68(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x60,%rbp
	leaq (L_104466+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0xF50
L_104484:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movl 0x60(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	movl %r15d,0x60(%rbp)
	movq $0x3,0x68(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x60,%rbp
	leaq (L_104485+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x693
L_104497:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	jmp L_104483
.p2align 0x4
.long 0x1255
L_104374:
	addq $0xFFFFFFFFFFFFFE60,%rbp
	movq 0x1A0(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x190(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_104375+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_0
.p2align 0x4
.long 0x51A
L_104244:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_104245
L_104246:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_104247+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_104247
.p2align 0x4
.long 0x488
L_104247:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_104245:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x2753,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x920
L_104770:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_104771
L_104772:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_104773+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_104773
.p2align 0x4
.long 0x504
L_104773:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_104771:
	movq $0x2753,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1262
L_104747:
	addq $0xFFFFFFFFFFFFFD30,%rbp
	movq 0x2D0(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_104748
L_104760:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x2D0,%rbp
	leaq (L_104761+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_104761
.p2align 0x4
.long 0x1265
L_104761:
	addq $0xFFFFFFFFFFFFFD30,%rbp
L_104748:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xC0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x2D8(%rbp)
	movl $0x0,0x2D0(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x2E0(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0x2E8(%rbp)
	addq $0x2D0,%rbp
	leaq (L_104749+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1479
.p2align 0x4
.long 0x51A
L_104738:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movl 0x38(%rbp),%r15d
	movl %r15d,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_104739
L_104742:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_104743+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_104743
.p2align 0x4
.long 0x5E4
L_104743:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_104739:
	movl 0x30(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_104167
L_104740:
	movq $0x1C99,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x2753,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1263
L_104888:
	addq $0xFFFFFFFFFFFFFD30,%rbp
	movl 0x2D0(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	testl %r15d,%r15d
	jz L_104167
L_104890:
	movq 0x30(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x2D0(%rbp)
	addq $0x2D0,%rbp
	leaq (L_104891+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x90C
L_105813:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_105814
L_105815:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_105816+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_105816
.p2align 0x4
.long 0x90B
L_105816:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_105814:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x2753,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	addq $0x10,%r12
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x69B
L_104977:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_104978
L_104979:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_104980+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_104980
.p2align 0x4
.long 0x488
L_104980:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_104978:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x2753,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	addq $0x10,%r12
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xA96
L_105548:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_105549
L_105550:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_105551+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_105551
.p2align 0x4
.long 0x1289
L_105551:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_105549:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x2753,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	addq $0x10,%r12
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x78B
L_105472:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_105473
L_105474:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_105475+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_105475
.p2align 0x4
.long 0x5F3
L_105475:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_105473:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x2753,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	addq $0x10,%r12
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x79A
L_105345:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_105346
L_105347:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_105348+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_105348
.p2align 0x4
.long 0x127D
L_105348:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_105346:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x2753,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	addq $0x10,%r12
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x79A
L_105296:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_105297
L_105298:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_105299+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_105299
.p2align 0x4
.long 0x127D
L_105299:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_105297:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x2753,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	addq $0x10,%r12
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1273
L_105173:
	addq $0xFFFFFFFFFFFFFE70,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_105174
L_105186:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x190,%rbp
	leaq (L_105187+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_105187
.p2align 0x4
.long 0x1274
L_105187:
	addq $0xFFFFFFFFFFFFFE70,%rbp
L_105174:
	movsd 0x28(%rbp),%xmm15
	movsd 0x38(%rbp),%xmm14
	ucomisd %xmm15,%xmm14
	setnp %al
	movzbl %al,%eax
	setc %bl
	movzbl %bl,%ebx
	andl %eax,%ebx
	jnz L_418315
L_105175:
	ucomisd %xmm14,%xmm15
	setnp %al
	movzbl %al,%eax
	setc %bl
	movzbl %bl,%ebx
	andl %eax,%ebx
	jnz L_418314
L_105176:
	ucomisd %xmm15,%xmm14
	setnp %al
	movzbl %al,%eax
	setz %bl
	movzbl %bl,%ebx
	andl %eax,%ebx
	jnz L_418313
L_105177:
	xorb %dl,%dl
L_105178:
	cmpb $0x2,%dl
	jne L_104167
L_105180:
	movsd 0x38(%rbp),%xmm15
	movd %xmm15,%r15
	movq 0x180(%rbp),%r14
	movq 0x10(%r14),%r13
	andq %r13,%r15
	cmpq %r15,%r13
	sete %al
	movzbl %al,%eax
	movsd 0x28(%rbp),%xmm14
	movd %xmm14,%r15
	andq %r13,%r15
	cmpq %r13,%r15
	sete %bl
	movzbl %bl,%ebx
	cmpl %ebx,%eax
	jne L_104167
L_105182:
	movq $0x1C8F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movsd %xmm15,%xmm14
	movsd %xmm14,0x0(%r15)
real_15:
	movq $0x1C97,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x2753,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	addq $0x10,%r12
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_418313:
L_105183:
	movb $0x2,%dl
	jmp L_105178
.p2align 0x4
L_418314:
L_105184:
	movb $0x1,%dl
	jmp L_105178
.p2align 0x4
L_418315:
L_105185:
	movb $0x3,%dl
	jmp L_105178
.p2align 0x4
.long 0x1277
L_105220:
	addq $0xFFFFFFFFFFFFFE80,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_105221
L_105233:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x180,%rbp
	leaq (L_105234+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_105234
.p2align 0x4
.long 0x1278
L_105234:
	addq $0xFFFFFFFFFFFFFE80,%rbp
L_105221:
	movss 0x28(%rbp),%xmm15
	movss 0x34(%rbp),%xmm14
	ucomiss %xmm15,%xmm14
	setnp %al
	movzbl %al,%eax
	setc %bl
	movzbl %bl,%ebx
	andl %eax,%ebx
	jnz L_418321
L_105222:
	ucomiss %xmm14,%xmm15
	setnp %al
	movzbl %al,%eax
	setc %bl
	movzbl %bl,%ebx
	andl %eax,%ebx
	jnz L_418320
L_105223:
	ucomiss %xmm15,%xmm14
	setnp %al
	movzbl %al,%eax
	setz %bl
	movzbl %bl,%ebx
	andl %eax,%ebx
	jnz L_418319
L_105224:
	xorb %dl,%dl
L_105225:
	cmpb $0x2,%dl
	jne L_104167
L_105227:
	movss 0x34(%rbp),%xmm15
	movd %xmm15,%r14d
	movq 0x170(%rbp),%r13
	movl 0xC(%r13),%r11d
	andl %r11d,%r14d
	cmpl %r14d,%r11d
	sete %al
	movzbl %al,%eax
	movss 0x28(%rbp),%xmm14
	movd %xmm14,%r14d
	andl %r11d,%r14d
	cmpl %r14d,%r11d
	sete %bl
	movzbl %bl,%ebx
	cmpl %eax,%ebx
	jne L_104167
L_105229:
	movd %xmm15,%r14d
	movl %r14d,%r15d
	shlq $0x1,%r15
	orq $0x1,%r15
	jmp real_15
.p2align 0x4
L_418319:
L_105230:
	movb $0x2,%dl
	jmp L_105225
.p2align 0x4
L_418320:
L_105231:
	movb $0x1,%dl
	jmp L_105225
.p2align 0x4
L_418321:
L_105232:
	movb $0x3,%dl
	jmp L_105225
.p2align 0x4
.long 0xDDE
L_105126:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movl 0x50(%rbp),%r15d
	movl %r15d,0x48(%rbp)
	movl %r15d,0x50(%rbp)
	movq $0x3,0x58(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x50,%rbp
	leaq (L_105127+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0xDDE
L_105086:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movl 0x50(%rbp),%r15d
	movl %r15d,0x48(%rbp)
	movl %r15d,0x50(%rbp)
	movq $0x3,0x58(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x50,%rbp
	leaq (L_105087+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x90C
L_105020:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_105021
L_105022:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_105023+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_105023
.p2align 0x4
.long 0x90B
L_105023:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_105021:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x2753,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	addq $0x10,%r12
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x125C
L_106164:
	addq $0xFFFFFFFFFFFFFD30,%rbp
	movq 0x2D0(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq %r15,0x38(%rbp)
	movq 0x2C0(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_106165+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1473
.p2align 0x4
.long 0x920
bug_264:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_104328
L_104329:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_104330+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_104330
.p2align 0x4
.long 0x504
L_104330:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_104328:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x8BE
L_104466:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x40(%rbp),%r14
	movq %r14,0x48(%rbp)
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_104467+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x8BE
L_104485:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x40(%rbp),%r14
	movq %r14,0x48(%rbp)
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_104486+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0xF4E
L_104375:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movl 0x60(%rbp),%r15d
	movl %r15d,0x58(%rbp)
	testl %r15d,%r15d
	jnz L_418325
L_104376:
	movq (globalObjptr+0x1988)(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (bug_265+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_418325:
L_104380:
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x58,%rbp
	leaq (L_104381+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigRem_0
.p2align 0x4
.long 0x1263
L_104749:
	addq $0xFFFFFFFFFFFFFD30,%rbp
	movl 0x2D0(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	testl %r15d,%r15d
	jz L_104167
L_104751:
	movq 0x30(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x2D0(%rbp)
	addq $0x2D0,%rbp
	leaq (L_104752+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x1264
L_104891:
	addq $0xFFFFFFFFFFFFFD30,%rbp
	movl 0x2D0(%rbp),%r15d
	movl %r15d,0x30(%rbp)
	movl %r15d,0x2D0(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x2D8(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x2E0(%rbp)
	addq $0x2D0,%rbp
	leaq (L_104892+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x7AA
L_105127:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x28(%rbp),%r14
	movq %r14,0x48(%rbp)
	movq 0x40(%rbp),%r14
	movq %r14,0x50(%rbp)
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_105128+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x7AA
L_105087:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x28(%rbp),%r14
	movq %r14,0x48(%rbp)
	movq 0x40(%rbp),%r14
	movq %r14,0x50(%rbp)
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_105088+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x51A
L_106165:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movl 0x38(%rbp),%r15d
	movl %r15d,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_106166
L_106169:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_106170+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_106170
.p2align 0x4
.long 0x5E4
L_106170:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_106166:
	movl 0x30(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_104167
L_106167:
	movq $0x1C99,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x2753,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x5F1
L_104467:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_104468+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_0
.p2align 0x4
.long 0x5F1
L_104486:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_104487+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_0
.p2align 0x4
.long 0x920
bug_265:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_104377
L_104378:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_104379+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_104379
.p2align 0x4
.long 0x504
L_104379:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_104377:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x9F3
L_104381:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x40(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_104382+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x1264
L_104752:
	addq $0xFFFFFFFFFFFFFD30,%rbp
	movl 0x2D0(%rbp),%r15d
	movl %r15d,0x30(%rbp)
	movl %r15d,0x2D0(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x2D8(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x2E0(%rbp)
	addq $0x2D0,%rbp
	leaq (L_104753+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x125C
L_104892:
	addq $0xFFFFFFFFFFFFFD30,%rbp
	movq 0x2D0(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq %r15,0x38(%rbp)
	movq 0x2C0(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_104893+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1473
.p2align 0x4
.long 0x69B
L_105128:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_105129
L_105130:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_105131+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_105131
.p2align 0x4
.long 0x488
L_105131:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_105129:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x2753,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	addq $0x10,%r12
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x69B
L_105088:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_105089
L_105090:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_105091+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_105091
.p2align 0x4
.long 0x488
L_105091:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_105089:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x2753,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	addq $0x10,%r12
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x79B
L_104468:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movl 0x48(%rbp),%r15d
	movl %r15d,0x30(%rbp)
	testl %r15d,%r15d
	jz L_104167
L_104470:
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%rsi
	movq 0x38(%rbp),%rdi
	xorq %rax,%rax
	call IntInf_equal
L_104471:
	testl %eax,%eax
	jnz L_104235
	jmp L_104167
.p2align 0x4
.long 0x79B
L_104487:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movl 0x48(%rbp),%r15d
	movl %r15d,0x30(%rbp)
	testl %r15d,%r15d
	jz L_104167
L_104489:
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0x38(%rbp),%rsi
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%rdi
	xorq %rax,%rax
	call IntInf_equal
L_104490:
	testl %eax,%eax
	jnz L_104235
	jmp L_104167
.p2align 0x4
.long 0x7C4
L_104382:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movl 0x60(%rbp),%r15d
	movl %r15d,0x40(%rbp)
	movl %r15d,0x60(%rbp)
	movq $0x3,0x68(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x60,%rbp
	leaq (L_104383+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x125C
L_104753:
	addq $0xFFFFFFFFFFFFFD30,%rbp
	movq 0x2D0(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq %r15,0x38(%rbp)
	movq 0x2C0(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_104754+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1473
.p2align 0x4
.long 0x51A
L_104893:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movl 0x38(%rbp),%r15d
	movl %r15d,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_104894
L_104897:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_104898+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_104898
.p2align 0x4
.long 0x5E4
L_104898:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_104894:
	movl 0x30(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_104167
L_104895:
	movq $0x1C99,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x2753,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1256
L_104383:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq %r15,0x40(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_104384+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x51A
L_104754:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movl 0x38(%rbp),%r15d
	movl %r15d,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_104755
L_104758:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_104759+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_104759
.p2align 0x4
.long 0x5E4
L_104759:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_104755:
	movl 0x30(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_104167
L_104756:
	movq $0x1C99,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x2753,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x69B
L_104384:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_104385
L_104388:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_104389+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_104389
.p2align 0x4
.long 0x488
L_104389:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_104385:
	cmpq $0x1,0x28(%rbp)
	jne L_104167
L_104387:
	movq $0x2751,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
