/* MLton 20130715 (built Mon Jun 13 11:54:01 AEST 2016 on ports.extensibl.com) */
/*   created this file on Mon Jun 13 12:09:30 2016. */
/* Do not edit this file. */
/* Flag settings:  */
/*    align: 8 */
/*    atMLtons: (mlton-compile, @MLton, --) */
/*    chunk: chunk per function */
/*    closureConvertGlobalize: true */
/*    closureConvertShrink: true */
/*    codegen: amd64 */
/*    contifyIntoMain: false */
/*    debug: false */
/*    defaultChar: char8 */
/*    defaultWideChar: widechar32 */
/*    defaultInt: int32 */
/*    defaultReal: real64 */
/*    defaultWord: word32 */
/*    diag passes: [] */
/*    drop passes: [] */
/*    elaborate allowConstant (default): false */
/*    elaborate allowConstant (enabled): true */
/*    elaborate allowFFI (default): false */
/*    elaborate allowFFI (enabled): true */
/*    elaborate allowPrim (default): false */
/*    elaborate allowPrim (enabled): true */
/*    elaborate allowOverload (default): false */
/*    elaborate allowOverload (enabled): true */
/*    elaborate allowRebindEquals (default): false */
/*    elaborate allowRebindEquals (enabled): true */
/*    elaborate deadCode (default): false */
/*    elaborate deadCode (enabled): true */
/*    elaborate forceUsed (default): false */
/*    elaborate forceUsed (enabled): true */
/*    elaborate ffiStr (default):  */
/*    elaborate ffiStr (enabled): true */
/*    elaborate nonexhaustiveExnMatch (default): default */
/*    elaborate nonexhaustiveExnMatch (enabled): true */
/*    elaborate nonexhaustiveMatch (default): warn */
/*    elaborate nonexhaustiveMatch (enabled): true */
/*    elaborate redundantMatch (default): warn */
/*    elaborate redundantMatch (enabled): true */
/*    elaborate resolveScope (default): strdec */
/*    elaborate resolveScope (enabled): true */
/*    elaborate sequenceNonUnit (default): warn */
/*    elaborate sequenceNonUnit (enabled): true */
/*    elaborate warnUnused (default): true */
/*    elaborate warnUnused (enabled): true */
/*    elaborate only: false */
/*    emit main: true */
/*    export header: None */
/*    exn history: false */
/*    generated output format: executable */
/*    gc check: Limit */
/*    indentation: 3 */
/*    inlineIntoMain: true */
/*    inlineLeafA: {loops = true, repeat = true, size = Some 20} */
/*    inlineLeafB: {loops = true, repeat = true, size = Some 40} */
/*    inlineNonRec: {small = 60, product = 320} */
/*    input file: mlton */
/*    keep CoreML: false */
/*    keep def use: true */
/*    keep dot: false */
/*    keep Machine: false */
/*    keep passes: [] */
/*    keep RSSA: false */
/*    keep SSA: false */
/*    keep SSA2: false */
/*    keep SXML: false */
/*    keep XML: false */
/*    extra_: false */
/*    lib dir: /usr/ports/pobj/mlton-20130715/mlton-on-20130715-release/build/lib */
/*    lib target dir: /usr/ports/pobj/mlton-20130715/mlton-on-20130715-release/build/lib/targets/self */
/*    loop passes: 1 */
/*    mark cards: true */
/*    max function size: 10000 */
/*    mlb path vars: [{var = MLTON_ROOT, path = $(LIB_MLTON_DIR)/sml}, {var = SML_LIB, path = $(LIB_MLTON_DIR)/sml}] */
/*    native commented: 0 */
/*    native live stack: false */
/*    native optimize: 1 */
/*    native move hoist: true */
/*    native copy prop: true */
/*    native copy prop cutoff: 1000 */
/*    native cutoff: 100 */
/*    native live transfer: 8 */
/*    native shuffle: true */
/*    native ieee fp: false */
/*    native split: Some 20000 */
/*    optimizationPasses: [<ssa2::default>, <ssa::default>, <sxml::default>, <xml::default>] */
/*    polyvariance: Some {hofo = true, rounds = 2, small = 30, product = 300} */
/*    prefer abs paths: false */
/*    prof passes: [] */
/*    profile: None */
/*    profile branch: false */
/*    profile C: [] */
/*    profile IL: ProfileSource */
/*    profile include/exclude: [(Seq [Star [.], Or [Seq [Seq [[$], [(], [S], [M], [L], [_], [L], [I], [B], [)]]]], Star [.]], false)] */
/*    profile raise: false */
/*    profile stack: false */
/*    profile val: false */
/*    show basis: None */
/*    show def-use: None */
/*    show types: true */
/*    target: self */
/*    target arch: AMD64 */
/*    target OS: OpenBSD */
/*    type check: false */
/*    verbosity: Pass */
/*    warn unrecognized annotation: true */
/*    warn deprecated features: true */
/*    zone cut depth: 100 */
.text
.p2align 0x4
.globl get_116
.hidden get_116
get_116:
L_179746:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_179747
L_179808:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_179809+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_179809
.p2align 0x4
.long 0x63C
L_179809:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_179747:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x28(%rbp)
	movq %r14,0x38(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_179748+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_0
.p2align 0x4
.long 0x739
L_179748:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movb 0x38(%rbp),%r15b
	movb %r15b,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_179749
L_179806:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_179807+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_179807
.p2align 0x4
.long 0x5F6
L_179807:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_179749:
	movb 0x30(%rbp),%r15b
	testb %r15b,%r15b
	jnz L_454514
L_179750:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_454514:
L_179751:
	movq 0x20(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x28DD,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x0(%r15)
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
L_179752:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_179753
L_179754:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xF25,%r15
	je L_454516
	cmpq $0xF26,%r15
	je L_454515
L_179753:
	movq $0x1943,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_454515:
L_179766:
	movq 0x0(%r14),%r15
	movq %r15,0x20(%rbp)
	movq 0x18(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x48(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x30(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_179767+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_4
.p2align 0x4
L_454516:
L_179755:
	movq 0x0(%r14),%r15
	movq %r15,0x30(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x38(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	je L_454517
L_179756:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_454517:
L_179757:
	cmpl $0x0,0x38(%rbp)
	jl L_454519
L_179758:
	movl $0x0,0x3C(%rbp)
loop_1825:
	movl 0x3C(%rbp),%r15d
	cmpl 0x38(%rbp),%r15d
	jnl L_179753
L_179760:
	movslq %r15d,%r14
	salq $0x4,%r14
	movq 0x30(%rbp),%r15
	movq 0x8(%r15,%r14,1),%r13
	movq %r13,0x48(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x48,%rbp
	leaq (L_179761+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_116
.p2align 0x4
L_454519:
L_179765:
	movq (globalObjptr+0x4F8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xBC0
L_179767:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_179768
L_179804:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_179805+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_179805
.p2align 0x4
.long 0x4F0
L_179805:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_179768:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_454522
L_179769:
	movq 0x10(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x13,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq $0x1,0x0(%r11)
	movq $0x114D,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r11,0x8(%r10)
	addq $0x20,%r12
	movq %r15,0x0(%r10)
	movq %r14,0x10(%r10)
	movq 0x0(%r13),%r15
	movq $0x261B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r10,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r14,0x0(%r13)
	jmp L_179753
.p2align 0x4
L_454522:
L_179770:
	movq 0x30(%rbp),%r14
	movq 0x0(%r14),%r13
	movq 0x20(%rbp),%r14
	movq 0x8(%r14),%r11
	movq %r11,0x28(%rbp)
	movq 0x18(%r14),%r10
	movq 0x0(%r11),%r14
	cmpq $0x1,%r14
	jne L_454523
L_179802:
	movq %r10,0x38(%rbp)
	movq %r13,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_179803+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unique_0
.p2align 0x4
L_454523:
L_179771:
	xchgq %r14,%r15
L_179772:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_179773+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0xBD3
L_179761:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_179762
L_179763:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_179764+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_179764
.p2align 0x4
.long 0x73D
L_179764:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_179762:
	incl 0x3C(%rbp)
	jmp loop_1825
.p2align 0x4
.long 0x51A
L_179803:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x28(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp L_179772
.p2align 0x4
.long 0x1
L_179773:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_179774+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4AF
L_179774:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xF5A8)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_179775+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5AF
L_179775:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_179776+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x51E
L_179776:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_179777
L_179800:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_179801+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_179801
.p2align 0x4
.long 0x4AE
L_179801:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_179777:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_179778:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_454529
L_179780:
	cmpq $0x1,%r14
	je L_454526
L_179781:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_179778
.p2align 0x4
L_454526:
L_179782:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_179783
L_179798:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_179799+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_179799
.p2align 0x4
.long 0x4E6
L_179799:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_179783:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_454527
L_179784:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
toString_255:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	addq $0x8,%rbp
	leaq (rev_253+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_454527:
L_179797:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_255
.p2align 0x4
L_454529:
L_179779:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
rev_253:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_454533
L_179785:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_179786:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_454532
.p2align 0x4,,0x7
L_179787:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_454531
L_179788:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_179786
.p2align 0x4
L_454531:
L_179790:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_469+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_454532:
L_179794:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_179795+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_179795
.p2align 0x4
.long 0x45B
L_179795:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_179787
.p2align 0x4
L_454533:
L_179796:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_179790
.p2align 0x4
.long 0x1
bug_469:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_179791
L_179792:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_179793+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_179793
.p2align 0x4
.long 0x451
L_179793:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_179791:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl makeBool_0
.hidden makeBool_0
makeBool_0:
L_179810:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_179811
L_179835:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_179836+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_179836
.p2align 0x4
.long 0x63C
L_179836:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_179811:
	movq 0x8(%rbp),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x28(%rbp)
	movl 0x0(%r13),%r11d
	movl %r11d,0x30(%rbp)
	movq 0x0(%rbp),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x38(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x40(%rbp)
	movq 0x10(%r13),%r11
	movq %r11,0x48(%rbp)
	movq 0x18(%r13),%r11
	movq %r11,0x50(%rbp)
	movq (globalObjptr+0x1518)(%rip),%r15
	movq $0x1,%r14
.p2align 0x4,,0x7
L_179812:
	movq %r15,0x60(%rbp)
	movq %r14,0x68(%rbp)
	movq (globalObjptr+0xCDB0)(%rip),%r15
	movq %r15,0x58(%rbp)
L_179813:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_454539
.p2align 0x4,,0x7
L_179814:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x58(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x68(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x60(%rbp),%r13
	cmpq $0x1,%r13
	je L_454536
L_179815:
	movq 0x8(%r13),%r15
	movl 0x0(%r13),%r11d
	testl %r11d,%r11d
	jnz L_454535
L_179816:
	jmp L_179812
.p2align 0x4
L_454535:
L_179817:
	movq %r15,0x60(%rbp)
	movq %r14,0x68(%rbp)
	movq (globalObjptr+0xCDC0)(%rip),%r15
	movq %r15,0x58(%rbp)
	jmp L_179813
.p2align 0x4
L_454536:
L_179818:
	movq 0x58(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq $0x1,0x68(%rbp)
.p2align 0x4,,0x7
L_179819:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_454538
.p2align 0x4,,0x7
L_179820:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x58(%rbp),%r14
	cmpq $0x1,%r14
	je L_454537
L_179821:
	movq %r15,0x68(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x58(%rbp)
	movq %r15,0x60(%rbp)
	jmp L_179819
.p2align 0x4
L_454537:
L_179822:
	movq $0x1B79,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x10,%r12
	movq $0x12F1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x10(%r15)
	addq $0x20,%r12
	movl 0x30(%rbp),%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x28(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x20(%rbp),%r11
	movq 0x0(%r11),%r10
	movq $0x1BA9,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r15,0x0(%r9)
	movq %r10,0x8(%r9)
	addq $0x18,%r12
	movq %r11,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r15,1)
	movq %r9,0x0(%r11)
	movq $0xE5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x58(%rbp)
	addq $0x10,%r12
	movq $0x0,0x0(%r14)
	movq $0x53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x60(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r13,0x0(%r15)
	movq (globalObjptr+0x1520)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xBD28)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_179823+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_454538:
L_179831:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_179832+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_179832
.p2align 0x4
.long 0x2499
L_179832:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	jmp L_179820
.p2align 0x4
L_454539:
L_179833:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_179834+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_179834
.p2align 0x4
.long 0x2499
L_179834:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	jmp L_179814
.p2align 0x4
.long 0x2497
L_179823:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_179824
L_179829:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_179830+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_179830
.p2align 0x4
.long 0x1B7A
L_179830:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_179824:
	movq $0x53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x68(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x18(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x485F,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq %r15,0x0(%r11)
	movq $0x12F3,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r11,0x0(%r10)
	addq $0x18,%r12
	movq 0x20(%rbp),%r11
	movq %r11,0x8(%r10)
	movq $0x1BA3,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r10,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r11,0x0(%r14)
	movq 0x10(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x4A0F,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq %r15,0x0(%r11)
	movq $0x1B55,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq %r14,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%r10,%r13,1)
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x1528)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xBD28)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_179825+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x2498
L_179825:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_179826
L_179827:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_179828+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_179828
.p2align 0x4
.long 0x2499
L_179828:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_179826:
	movq $0x53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x1,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x18(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x483F,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq %r15,0x0(%r11)
	movq $0x12F3,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r11,0x0(%r10)
	addq $0x18,%r12
	movq 0x20(%rbp),%r11
	movq %r11,0x8(%r10)
	movq $0x1BA3,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r10,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r11,0x0(%r14)
	movq 0x10(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x49EB,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq %r15,0x0(%r11)
	movq $0x1B55,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r11,0x0(%r9)
	movq %r13,0x8(%r9)
	addq $0x18,%r12
	movq %r14,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%r10,%r13,1)
	movq %r9,0x0(%r14)
	movq $0x1FD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x20,%r12
	movl 0x30(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x28(%rbp),%r13
	movq %r13,0x8(%r14)
	movq %r15,0x10(%r14)
	movq $0x5D1,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x28,%r12
	movq %r14,0x0(%r11)
	movq 0x68(%rbp),%r10
	movq %r10,0x8(%r11)
	movq 0x60(%rbp),%r9
	movq %r9,0x10(%r11)
	movq 0x58(%rbp),%r8
	movq %r8,0x18(%r11)
	movq %r11,0x8(%rbp)
	movq $0x201,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x20,%r12
	movq %r13,0x0(%r11)
	movq %r14,0x8(%r11)
	movq 0x50(%rbp),%rsp
	movq %rsp,0x10(%r11)
	movq $0x205,0x0(%r12)
	movq %r12,%rsp
	addq $0x8,%rsp
	movq %r15,0x10(%rsp)
	movq %r14,0x28(%rsp)
	addq $0x40,%r12
	movq %r13,0x0(%rsp)
	movq %r8,0x8(%rsp)
	movq %r9,0x18(%rsp)
	movq %r10,0x20(%rsp)
	movq 0x48(%rbp),%r15
	movq %r15,0x30(%rsp)
	movq $0x771,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r9,0x8(%r15)
	movq %r10,0x10(%r15)
	movq $0x76D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x40(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r9,0x8(%r14)
	movq $0x16CB,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	movq %rsp,0x10(%r13)
	movq %r11,0x18(%r13)
	movq %r13,0x0(%rbp)
	addq $0x28,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl makeDiagEIW_0
.hidden makeDiagEIW_0
makeDiagEIW_0:
L_179837:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_179871
L_179838:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_454552
L_179839:
	movq 0x8(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x28(%rbp)
	movb 0x0(%r14),%r13b
	movb %r13b,0x30(%rbp)
	cmpb $0x1,%r13b
	je L_454551
	cmpb $0x2,%r13b
	je L_454550
L_179840:
	movq (globalObjptr+0x1558)(%rip),%r15
L_179841:
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x8(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x38(%rbp)
	movq 0x10(%r14),%r13
	movq %r13,0x40(%rbp)
	movq 0x18(%r14),%r13
	movq %r13,0x48(%rbp)
	cmpq $0x1,%r15
	je L_454549
L_179842:
	movq 0x8(%r15),%r14
	movq %r14,0x50(%rbp)
	movb 0x0(%r15),%r14b
	movb %r14b,0x31(%rbp)
	movq $0x1,0x58(%rbp)
.p2align 0x4,,0x7
L_179843:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_454548
.p2align 0x4,,0x7
L_179844:
	movb 0x31(%rbp),%r14b
	cmpb $0x1,%r14b
	je L_454547
	cmpb $0x2,%r14b
	je L_454546
L_179845:
	movq (globalObjptr+0xE578)(%rip),%r15
L_179846:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x58(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x50(%rbp),%r13
	cmpq $0x1,%r13
	je L_454543
L_179847:
	movq %r14,0x58(%rbp)
	movb 0x0(%r13),%r14b
	movq 0x8(%r13),%r13
	movq %r13,0x50(%rbp)
	movb %r14b,0x31(%rbp)
	jmp L_179843
.p2align 0x4
L_454543:
L_179848:
	movq 0x58(%rbp),%r14
	movq %r14,0x50(%rbp)
	movq %r15,0x58(%rbp)
	movq $0x1,0x60(%rbp)
.p2align 0x4,,0x7
L_179849:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_454545
.p2align 0x4,,0x7
L_179850:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x50(%rbp),%r14
	cmpq $0x1,%r14
	je L_454544
L_179851:
	movq %r15,0x60(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x50(%rbp)
	movq %r15,0x58(%rbp)
	jmp L_179849
.p2align 0x4
L_454544:
L_179853:
	movq $0x1B79,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x12F1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x10(%r15)
	addq $0x20,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x1BA9,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r10,0x0(%r13)
	movq $0x71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x50(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x1BB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x58(%rbp)
	addq $0x10,%r12
	movzbl 0x30(%rbp),%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x1520)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xBD28)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_179854+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_454545:
L_179862:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_179863+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_179863
.p2align 0x4
.long 0x85B
L_179863:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_179850
.p2align 0x4
L_454546:
L_179865:
	movq (globalObjptr+0xE580)(%rip),%r15
	jmp L_179846
.p2align 0x4
L_454547:
L_179864:
	movq (globalObjptr+0xCAD8)(%rip),%r15
	jmp L_179846
.p2align 0x4
L_454548:
L_179866:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_179867+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_179867
.p2align 0x4
.long 0x85A
L_179867:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	jmp L_179844
.p2align 0x4
L_454549:
L_179868:
	movq $0x1,%r15
	jmp L_179853
.p2align 0x4
L_454550:
L_179870:
	movq (globalObjptr+0x1568)(%rip),%r15
	jmp L_179841
.p2align 0x4
L_454551:
L_179869:
	movq (globalObjptr+0x1540)(%rip),%r15
	jmp L_179841
.p2align 0x4
L_454552:
L_179871:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_179872+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_179872
.p2align 0x4
.long 0x63C
L_179872:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	jmp L_179839
.p2align 0x4
.long 0x249A
L_179854:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_179855
L_179860:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_179861+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_179861
.p2align 0x4
.long 0x85A
L_179861:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_179855:
	movq $0x1BB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x60(%rbp)
	addq $0x10,%r12
	movb 0x30(%rbp),%r14b
	movzbl %r14b,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x18(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x4861,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	addq $0x10,%r12
	movq %r15,0x0(%r10)
	movq $0x12F3,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r10,0x0(%r9)
	addq $0x18,%r12
	movq 0x20(%rbp),%r10
	movq %r10,0x8(%r9)
	movq $0x1BA3,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r9,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r11,1)
	movq %r10,0x0(%r13)
	movq 0x10(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x4A11,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	addq $0x18,%r12
	movzbl %r14b,%r8d
	movl %r8d,0x0(%r10)
	movl $0x0,0x4(%r10)
	movq %r15,0x8(%r10)
	movq $0x1B55,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r10,0x0(%r15)
	movq %r11,0x8(%r15)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r9,%r14,1)
	movq %r15,0x0(%r13)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x1528)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xBD28)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_179856+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x249B
L_179856:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_179857
L_179858:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_179859+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_179859
.p2align 0x4
.long 0x85B
L_179859:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_179857:
	movq $0x53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x1,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x18(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x483D,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq %r15,0x0(%r11)
	movq $0x12F3,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r11,0x0(%r10)
	addq $0x18,%r12
	movq 0x20(%rbp),%r11
	movq %r11,0x8(%r10)
	movq $0x1BA3,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r10,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r11,0x0(%r14)
	movq 0x10(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x49E9,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x10,%r12
	movq %r15,0x0(%r11)
	movq $0x1B55,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r11,0x0(%r9)
	movq %r13,0x8(%r9)
	addq $0x18,%r12
	movq %r14,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%r10,%r13,1)
	movq %r9,0x0(%r14)
	movq $0x1FD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x20,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x28(%rbp),%r13
	movq %r13,0x8(%r14)
	movq %r15,0x10(%r14)
	movq $0x639,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x28,%r12
	movq %r14,0x0(%r11)
	movq 0x60(%rbp),%r10
	movq %r10,0x8(%r11)
	movq 0x58(%rbp),%r9
	movq %r9,0x10(%r11)
	movq 0x50(%rbp),%r8
	movq %r8,0x18(%r11)
	movq $0x1FF,0x0(%r12)
	movq %r12,%rsp
	addq $0x8,%rsp
	addq $0x20,%r12
	movq %r13,0x0(%rsp)
	movq %r14,0x8(%rsp)
	movq 0x48(%rbp),%rsi
	movq %rsi,0x10(%rsp)
	movq $0x203,0x0(%r12)
	movq %r12,%rsi
	addq $0x8,%rsi
	movq %r15,0x10(%rsi)
	movq %r14,0x28(%rsi)
	addq $0x40,%r12
	movq %r13,0x0(%rsi)
	movq %r8,0x8(%rsi)
	movq %r9,0x18(%rsi)
	movq %r10,0x20(%rsi)
	movq 0x40(%rbp),%r15
	movq %r15,0x30(%rsi)
	movq $0x76F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r11,0x8(%rbp)
	movq %r9,0x8(%r15)
	movq %r10,0x10(%r15)
	movq $0x76B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r9,0x8(%r14)
	movq $0x16CF,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	movq %rsi,0x10(%r13)
	movq %rsp,0x18(%r13)
	movq %r13,0x0(%rbp)
	addq $0x28,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl fromString_23
.hidden fromString_23
fromString_23:
L_179873:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_179874
L_179951:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_179952+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_179952
.p2align 0x4
.long 0x45F
L_179952:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_179874:
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq %r14,0x20(%rbp)
	movl %r14d,%ecx
	movslq %ecx,%r15
	cmpq %r15,%r14
	jne L_179876
L_179877:
	movl $0x0,0x8(%rbp)
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_1826:
	cmpl %ecx,%ebx
	jnl L_454557
L_179948:
	movl %ebx,%r15d
	incl %r15d
	movslq %ebx,%r14
	cmpq 0x20(%rbp),%r14
	jnb L_454556
L_179950:
	movq 0x0(%rbp),%r13
	movzbl 0x0(%r13,%r14,1),%r11d
	movl 0x8(%rbp),%r14d
	imull $0x1F,%r14d
	addl %r11d,%r14d
	movl %r14d,0x8(%rbp)
	movl %r15d,%ebx
	jmp loop_1826
.p2align 0x4
L_454556:
L_179884:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_454557:
L_179878:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_179879
L_179946:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_179947+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_179947
.p2align 0x4
.long 0x249D
L_179947:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_179879:
	movq 0x10(%rbp),%r13
	movq 0x0(%r13),%r15
	movq (globalObjptr+0xAE0)(%rip),%r13
	movq 0x0(%r13),%r14
	incq %r14
	jo L_454586
L_179881:
	movq %r14,0x0(%r13)
	movq 0x18(%rbp),%r13
	movl 0x0(%r13),%r11d
	andl 0x8(%rbp),%r11d
	cmpl $0x0,%r11d
	jl L_179896
L_179882:
	movslq %r11d,%r13
	movq %r13,0x28(%rbp)
	cmpq 0xFFFFFFFFFFFFFFF0(%r15),%r13
	jnb L_179884
L_179885:
	movq 0x0(%r15,%r13,8),%r11
	movq %r11,0x30(%rbp)
	cmpq $0x1,%r11
	je L_179895
L_179886:
	movq 0x8(%r11),%r14
	movq 0x0(%r11),%r15
.p2align 0x4,,0x7
L_179887:
	movq (globalObjptr+0xAE8)(%rip),%r10
	movq 0x0(%r10),%r13
	incq %r13
	jo L_454582
L_179889:
	movq %r13,0x0(%r10)
	movq 0x10(%r15),%r13
	cmpq 0x0(%rbp),%r13
	je L_179942
L_179890:
	movq 0x20(%rbp),%r10
	cmpq %r10,0xFFFFFFFFFFFFFFF0(%r13)
	jne L_454578
L_179932:
	xorq %r11,%r11
.p2align 0x4,,0x7
vectorEqualLoop_144:
	cmpq 0x20(%rbp),%r11
	je L_454577
L_179933:
	movq 0x0(%rbp),%r10
	movb 0x0(%r13,%r11,1),%r9b
	cmpb %r9b,0x0(%r10,%r11,1)
	jne L_454558
L_179940:
	incq %r11
	jmp vectorEqualLoop_144
.p2align 0x4
L_454558:
L_179934:
	cmpq $0x1,%r14
	je L_454559
L_179935:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_179887
.p2align 0x4
L_454559:
L_179936:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_179895
L_179938:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_179939+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_179939
.p2align 0x4
.long 0x249C
L_179939:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_179895:
	movq $0x13,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x8(%r14)
	addq $0x20,%r12
	movl 0x8(%rbp),%r15d
	movl %r15d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x0(%rbp),%r15
	movq %r15,0x10(%r14)
	movq (globalObjptr+0x16C0)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_179896
L_179897:
	movl %r13d,0x0(%r15)
	movq 0x10(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x20E7,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	addq $0x18,%r12
	movq %r14,0x0(%r10)
	movq 0x30(%rbp),%rdx
	movq %rdx,0x8(%r10)
	movq 0x28(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r11),%r14
	jnb L_179884
L_179899:
	movq %r11,%r9
	shrq $0x8,%r9
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r9,1)
	movq %r10,0x0(%r11,%r14,8)
	movq 0x0(%r13),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r11
	movl %r11d,%r10d
	movslq %r10d,%r9
	cmpq %r9,%r11
	jne L_179876
L_179901:
	movl 0x0(%r15),%r14d
	imull $0x4,%r14d
	jo L_179896
L_179902:
	cmpl %r14d,%r10d
	jnl L_454571
L_179904:
	addl %r10d,%r10d
	jo L_179896
L_179905:
	movq 0x18(%rbp),%r15
	movl 0x0(%r15),%r14d
	shll $0x1,%r14d
	orl $0x1,%r14d
	movl %r14d,0x28(%rbp)
	movslq %r10d,%rdx
	movq %rdx,0x30(%rbp)
	cmpq $0x7FFFFFFF,%rdx
	ja L_454569
L_179906:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x38B,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_179907+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_179907
.p2align 0x4
.long 0x1CCD
L_179907:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq %rax,0x38(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_1827:
	cmpq 0x30(%rbp),%r15
	jnl L_454560
L_179928:
	movq 0x38(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_1827
.p2align 0x4
L_454560:
L_179908:
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movl %r13d,0x2C(%rbp)
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_454568
L_179910:
	cmpl $0x0,%r13d
	jl L_454567
L_179911:
	movl $0x0,0x48(%rbp)
.p2align 0x4,,0x7
loop_1828:
	movl 0x48(%rbp),%r15d
	cmpl 0x2C(%rbp),%r15d
	jnl L_454566
L_179913:
	movslq %r15d,%r14
	movq 0x40(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	cmpq $0x1,%r13
	je L_179922
L_179914:
	movq 0x8(%r13),%r15
	movq %r15,0x50(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x58(%rbp)
L_179915:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_454564
.p2align 0x4,,0x7
L_179916:
	movq 0x58(%rbp),%r15
	movl 0x0(%r15),%r14d
	andl 0x28(%rbp),%r14d
	cmpl $0x0,%r14d
	jl L_454563
L_179917:
	movslq %r14d,%r13
	cmpq 0x30(%rbp),%r13
	jnb L_179884
L_179919:
	movq 0x38(%rbp),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq $0x20E7,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r15,0x0(%r10)
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r10,0x0(%r14,%r13,8)
	movq 0x50(%rbp),%r15
	cmpq $0x1,%r15
	je L_454561
L_179920:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x50(%rbp)
	movq %r14,0x58(%rbp)
	jmp L_179915
.p2align 0x4
L_454561:
L_179922:
	incl 0x48(%rbp)
	jmp loop_1828
.p2align 0x4
L_454563:
L_179896:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_454564:
L_179924:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_179925+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_179925
.p2align 0x4
.long 0x1CCE
L_179925:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	jmp L_179916
.p2align 0x4
L_454566:
L_179912:
	movq 0x10(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x18(%rbp),%r14
	movl 0x28(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_454567:
L_179927:
	movq (globalObjptr+0x4F8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_454568:
L_179876:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_454569:
L_179929:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_454571:
L_179903:
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_454577:
L_179942:
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_454578:
L_179891:
	cmpq $0x1,%r14
	je L_454579
L_179892:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_179887
.p2align 0x4
L_454579:
L_179893:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_179895
L_179930:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_179931+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_179931
.p2align 0x4
.long 0x249C
L_179931:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_179895
.p2align 0x4
L_454582:
L_179888:
	movq (globalObjptr+0xAF0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_454586:
L_179880:
	movq (globalObjptr+0xAF8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl tabulate_2
.hidden tabulate_2
tabulate_2:
L_179953:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_179954
L_179995:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_179996+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_179996
.p2align 0x4
.long 0x457
L_179996:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_179954:
	movslq 0x8(%rbp),%rdx
	movq %rdx,0x10(%rbp)
	testq %rdx,%rdx
	jz L_454607
L_179955:
	cmpq $0x7FFFFFFF,%rdx
	ja L_454606
L_179956:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x144B,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_179957+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_179957
.p2align 0x4
.long 0x452
L_179957:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq %rax,0x8(%rbp)
L_179958:
	movq $0x0,0x18(%rbp)
.p2align 0x4,,0x7
loop_1829:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_454605
.p2align 0x4,,0x7
L_179959:
	movq 0x18(%rbp),%r15
	cmpq 0x10(%rbp),%r15
	jnl L_454604
L_179961:
	movl %r15d,%r14d
	movq 0x0(%rbp),%r15
	cmpq $0x1,%r15
	je L_454603
L_179962:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%rax
	shrq $0x1,%rax
	subq $0x1D6A,%rax
	cmpq $0x8,%rax
	ja L_454590
	leaq jumpTable_601(%rip),%rbx
	jmp *(%rbx,%rax,8)
.data
.p2align 0x4
jumpTable_601:
.quad L_454602,L_454601,L_454600,L_454597,L_454595,L_454594,L_454593,L_454592,L_454591
.text
.p2align 0x4
L_454590:
L_179963:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x30(%rbp)
	movslq %r14d,%r13
	movq 0x8(%r15),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq %r11,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_179964+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3884
.p2align 0x4
L_454591:
L_179989:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x30(%rbp)
	movslq %r14d,%r13
	movq 0x8(%r15),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq %r11,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_179964+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3884
.p2align 0x4
L_454592:
L_179983:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x0(%r15),%r11
	movq %r11,0x40(%rbp)
	movslq %r14d,%r11
	movq 0x10(%r15),%r14
	movq 0x0(%r14,%r11,8),%r10
	movq %r10,0x38(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x28(%rbp)
	addq $0x38,%rbp
	leaq (L_179984+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3885
.p2align 0x4
L_454593:
L_179982:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq $0x65D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
.p2align 0x4,,0x7
L_179965:
	movq 0x8(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x18(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x18(%rbp)
	jmp loop_1829
.p2align 0x4
L_454594:
L_179981:
	movq 0x0(%rbp),%r13
	movq 0x0(%r13),%r11
	movslq %r14d,%r15
	salq $0x4,%r15
	movq 0x0(%r11,%r15,1),%r11
	movq %r11,%r15
	jmp L_179965
.p2align 0x4
L_454595:
L_179978:
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_454596
L_179979:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r14,1)
	movq %r13,0x0(%r15)
	movq %r11,%r15
	jmp L_179965
.p2align 0x4
L_454596:
L_179980:
	movq (globalObjptr+0x4B0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_454597:
L_179974:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	cmpl $0x0,%r14d
	je L_454599
	cmpl $0x1,%r14d
	je L_454598
L_179975:
	movq (globalObjptr+0x4A8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_454598:
L_179977:
	movq %r11,%r15
	jmp L_179965
.p2align 0x4
L_454599:
	movq %r13,%r15
	jmp L_179965
.p2align 0x4
L_454600:
L_179973:
	movq 0x0(%rbp),%r13
	movq 0x0(%r13),%r11
	movslq %r14d,%r15
	salq $0x4,%r15
	movq 0x0(%r11,%r15,1),%r11
	movq %r11,%r15
	jmp L_179965
.p2align 0x4
L_454601:
L_179972:
	movslq %r14d,%r15
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r13
	movq 0x0(%r13,%r15,8),%r11
	movq $0x1BD5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	addq $0x10,%r12
	movq $0x65D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq $0x1,0x0(%r14)
	movq %r14,%r15
	jmp L_179965
.p2align 0x4
L_454602:
L_179966:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x0(%r15),%r11
	movq %r11,0x40(%rbp)
	movslq %r14d,%r11
	movq 0x10(%r15),%r14
	movq 0x0(%r14,%r11,8),%r10
	movq %r10,0x38(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x28(%rbp)
	addq $0x38,%rbp
	leaq (L_179967+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3885
.p2align 0x4
L_454603:
L_179990:
	movq (globalObjptr+0x4A0)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_454604:
L_179960:
	movq 0x8(%rbp),%r14
	movq $0x9DD,0xFFFFFFFFFFFFFFF8(%r14)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_454605:
L_179991:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_179992+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_179992
.p2align 0x4
.long 0x45C
L_179992:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	jmp L_179959
.p2align 0x4
L_454606:
L_179993:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_454607:
L_179994:
	movq (globalObjptr+0xB30)(%rip),%r15
	movq %r15,0x8(%rbp)
	jmp L_179958
.p2align 0x4
.long 0x5F8
L_179964:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	jmp L_179965
.p2align 0x4
.long 0x557
L_179984:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x40(%rbp),%r14
	movq %r14,0x38(%rbp)
	movq %r15,0x48(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_179985+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp combineUp_0
.p2align 0x4
.long 0x557
L_179967:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x40(%rbp),%r14
	movq %r14,0x38(%rbp)
	movq %r15,0x48(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_179968+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp combineUp_0
.p2align 0x4
.long 0x531
L_179985:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_179986
L_179987:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_179988+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_179988
.p2align 0x4
.long 0xF85
L_179988:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_179986:
	movq $0xB55,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	movq 0x38(%rbp),%r15
	jmp L_179965
.p2align 0x4
.long 0x531
L_179968:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_179969
L_179970:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_179971+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_179971
.p2align 0x4
.long 0xF85
L_179971:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_179969:
	movq $0xB55,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	movq 0x38(%rbp),%r15
	jmp L_179965
.text
.p2align 0x4
.globl loop_3884
.hidden loop_3884
loop_3884:
L_179997:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_180087
L_179998:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_454630
L_179999:
	movq 0x8(%rbp),%r13
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
	movq %r10,0x10(%rbp)
	movq 0x0(%rbp),%r13
	movq 0x8(%r13),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xDEB,%r14
	je L_454622
	cmpq $0xDEC,%r14
	je L_454620
L_180000:
	movq 0x0(%r15),%r13
	cmpq $0x1,%r11
	je L_454619
L_180001:
	movq 0x0(%r11),%r15
	movq 0x8(%r11),%r11
	movq %r15,0x8(%rbp)
	movq %r13,%r15
	movq %r11,%r14
.p2align 0x4,,0x7
L_180002:
	movq 0x8(%r15),%r8
	movq 0x10(%r8),%r13
	movq 0x8(%rbp),%r8
	movq 0x8(%r8),%rsp
	movq 0x8(%rsp),%rsi
	movq 0x10(%rsi),%r11
	cmpq %r13,%r11
	je L_454617
L_180003:
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r10
	cmpq 0xFFFFFFFFFFFFFFF0(%r11),%r10
	jne L_454615
L_180014:
	xorq %r9,%r9
.p2align 0x4,,0x7
vectorEqualLoop_145:
	cmpq %r9,%r10
	je L_454613
L_180015:
	movb 0x0(%r13,%r9,1),%r8b
	cmpb %r8b,0x0(%r11,%r9,1)
	jne L_454611
L_180019:
	incq %r9
	jmp vectorEqualLoop_145
.p2align 0x4
L_454611:
L_180016:
	cmpq $0x1,%r14
	je L_454612
L_180017:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq %r13,0x8(%rbp)
	jmp L_180002
.p2align 0x4
L_454612:
L_180007:
	movq 0x8(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_180008+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_454613:
L_180020:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_180022
L_180024:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_180025+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_180025
.p2align 0x4
.long 0x45F
L_180025:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_180022:
	movq 0x8(%rbp),%r14
	movq 0x0(%r14),%r15
	movq $0x1BD5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
L_180023:
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x65D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x0(%rbp)
	addq $0x18,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_454615:
L_180004:
	cmpq $0x1,%r14
	je L_180007
L_180005:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq %r13,0x8(%rbp)
	jmp L_180002
.p2align 0x4
L_454617:
L_180026:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_180022
L_180028:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_180029+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_180029
.p2align 0x4
.long 0x45F
L_180029:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_180022
.p2align 0x4
L_454619:
	movq %r13,%r15
	jmp L_180007
.p2align 0x4
L_454620:
L_180080:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r13,0x10(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_454621
L_180082:
	movl %r13d,0x28(%rbp)
	movq $0x3AE5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_180083+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_2
.p2align 0x4
L_454621:
L_180034:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_454622:
L_180031:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xDED,%r15
	je L_454624
L_180073:
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_180034
L_180075:
	movl %r13d,0x18(%rbp)
	movq $0x3AD3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_180076+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_2
.p2align 0x4
L_454624:
L_180032:
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x20(%rbp)
	movl %r13d,0x18(%rbp)
	cmpq %rdx,%r14
	movq %r15,0x10(%rbp)
	jne L_180034
L_180035:
	testq %rdx,%rdx
	jz L_454628
L_180036:
	cmpq $0x7FFFFFFF,%rdx
	ja L_454627
L_180037:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xA9D,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_180038+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_180038
.p2align 0x4
.long 0x6FE
L_180038:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq %rax,0x28(%rbp)
L_180039:
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_1830:
	cmpq 0x20(%rbp),%r15
	jnl L_454625
L_180070:
	movl %r15d,%r14d
	movslq %r14d,%r13
	salq $0x4,%r13
	movq 0x10(%rbp),%r14
	movq 0x8(%r14,%r13,1),%r11
	movq 0x28(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r11,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_1830
.p2align 0x4
L_454625:
L_180040:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_180041
L_180068:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_180069+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_180069
.p2align 0x4
.long 0xFCE
L_180069:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_180041:
	movq 0x28(%rbp),%r15
	movq $0xB6B,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x3ADF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x38(%rbp)
	movl 0x18(%rbp),%r15d
	movl %r15d,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_180042+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_2
.p2align 0x4
L_454627:
L_180064:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_454628:
L_180072:
	movq (globalObjptr+0xF80)(%rip),%r15
	movq %r15,0x28(%rbp)
	jmp L_180039
.p2align 0x4
L_454630:
L_180087:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_180088+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_180088
.p2align 0x4
.long 0x45F
L_180088:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_179999
.p2align 0x4
.long 0x2B
L_180008:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_180009
L_180012:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_180013+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_180013
.p2align 0x4
.long 0x2C
L_180013:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_180009:
	movq $0x3E37,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x30(%rbp)
	movq (globalObjptr+0x9D8)(%rip),%r15
	movq %r15,0x20(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_180010+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3780
.p2align 0x4
.long 0x788
L_180083:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_180084
L_180085:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_180086+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_180086
.p2align 0x4
.long 0x45B
L_180086:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_180084:
	movq $0x1BD9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x8(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_180023
.p2align 0x4
.long 0x4AF
L_180076:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_180077
L_180078:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_180079+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_180079
.p2align 0x4
.long 0x45F
L_180079:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_180077:
	movq $0x1BDD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
L_180059:
	movq $0x1BD7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
	jmp L_180023
.p2align 0x4
.long 0x56C
L_180042:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_180043
L_180066:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_180067+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_180067
.p2align 0x4
.long 0xFCE
L_180067:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_180043:
	movq 0x10(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_180034
L_180045:
	movl %r13d,0x40(%rbp)
	movq $0x3AD3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_180046+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_2
.p2align 0x4
.long 0x2B
L_180010:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_180011+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x461
L_180046:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x28(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	movq %r10,0x10(%rbp)
	cmpq %r10,%r13
	jne L_180034
L_180048:
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r10
	cmpq %r14,%r10
	jne L_180034
L_180050:
	cmpl %r11d,%r13d
	je L_454637
L_180051:
	movq (globalObjptr+0x4E0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_454637:
L_180052:
	movq 0x10(%rbp),%rdx
	testq %rdx,%rdx
	jz L_454641
L_180053:
	cmpq $0x7FFFFFFF,%rdx
	ja L_180064
L_180054:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14D7,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_180055+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_180055
.p2align 0x4
.long 0x464
L_180055:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq %rax,0x18(%rbp)
L_180056:
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_1831:
	cmpq 0x10(%rbp),%r15
	jnl L_454638
L_180062:
	movl %r15d,%r14d
	movq %r15,%r13
	movq %r15,%r11
	movslq %r14d,%r10
	movq 0x28(%rbp),%r14
	movq 0x0(%r14,%r10,8),%r9
	movq 0x8(%rbp),%r14
	movq 0x0(%r14,%r10,8),%r8
	movq 0x18(%rbp),%r14
	movq %r14,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r10,1)
	salq $0x4,%r13
	movq %r8,0x0(%r14,%r13,1)
	movq %r14,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%rsp,%r13,1)
	salq $0x4,%r11
	movq %r9,0x8(%r14,%r11,1)
	incq %r15
	jmp loop_1831
.p2align 0x4
L_454638:
L_180057:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_180058
L_180060:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_180061+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_180061
.p2align 0x4
.long 0xFC7
L_180061:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_180058:
	movq 0x18(%rbp),%r14
	movq $0xB1F,0xFFFFFFFFFFFFFFF8(%r14)
	movq $0x1BDB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r14,0x0(%r15)
	jmp L_180059
.p2align 0x4
L_454641:
L_180065:
	movq (globalObjptr+0xFB0)(%rip),%r15
	movq %r15,0x18(%rbp)
	jmp L_180056
.p2align 0x4
.long 0x1
L_180011:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq (globalObjptr+0xB68)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl loop_3885
.hidden loop_3885
loop_3885:
L_180089:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_180180
L_180090:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_454665
L_180091:
	movq 0x0(%rbp),%r14
	movq 0x8(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xDEB,%r14
	je L_454657
	cmpq $0xDEC,%r14
	je L_454655
L_180092:
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_180100
L_180093:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r14
	movq %r14,0x8(%rbp)
.p2align 0x4,,0x7
L_180094:
	movq 0x10(%rbp),%r9
	movq 0x8(%r9),%r8
	movq 0x10(%r8),%r14
	movq 0x8(%rbp),%r9
	movq 0x8(%r9),%r8
	movq 0x8(%r8),%rsp
	movq 0x10(%rsp),%r13
	cmpq %r13,%r14
	je L_454652
L_180095:
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r11
	cmpq 0xFFFFFFFFFFFFFFF0(%r13),%r11
	jne L_454649
L_180105:
	xorq %r10,%r10
.p2align 0x4,,0x7
vectorEqualLoop_146:
	cmpq %r11,%r10
	je L_454647
L_180106:
	movb 0x0(%r14,%r10,1),%r9b
	cmpb %r9b,0x0(%r13,%r10,1)
	jne L_454644
L_180113:
	incq %r10
	jmp vectorEqualLoop_146
.p2align 0x4
L_454644:
L_180107:
	cmpq $0x1,%r15
	je L_454645
L_180108:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r14,0x8(%rbp)
	jmp L_180094
.p2align 0x4
L_454645:
L_180109:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_180100
L_180111:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_180112+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_180112
.p2align 0x4
.long 0x65A
L_180112:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_180100:
	movq 0x10(%rbp),%r15
L_180101:
	movq $0x20ED,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0xB55,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq $0x1,0x0(%r13)
	movq $0x1BD5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r13,%r15
L_180102:
	movq 0x0(%rbp),%r13
	movq 0x0(%r13),%r11
	movq %r15,0x0(%rbp)
	movq $0x65D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r15,0x8(%rbp)
	addq $0x18,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_454647:
L_180114:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_180116
L_180117:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_180118+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_180118
.p2align 0x4
.long 0x45F
L_180118:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_180116:
	movq 0x8(%rbp),%r14
	movq 0x0(%r14),%r15
	jmp L_180101
.p2align 0x4
L_454649:
L_180096:
	cmpq $0x1,%r15
	je L_454650
L_180097:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r14,0x8(%rbp)
	jmp L_180094
.p2align 0x4
L_454650:
L_180098:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_180100
L_180103:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_180104+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_180104
.p2align 0x4
.long 0x65A
L_180104:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_180100
.p2align 0x4
L_454652:
L_180119:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_180116
L_180121:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_180122+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_180122
.p2align 0x4
.long 0x45F
L_180122:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_180116
.p2align 0x4
L_454655:
L_180173:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r13,0x10(%rbp)
	movq $0xB57,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x18(%rbp)
	addq $0x10,%r12
	movq (globalObjptr+0x4EC0)(%rip),%r13
	movq %r13,0x0(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r13,%r10
	jne L_454656
L_180175:
	movl %r11d,0x30(%rbp)
	movq $0x3AE3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x10(%r13)
	addq $0x20,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r13,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_180176+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_2
.p2align 0x4
L_454656:
L_180127:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_454657:
L_180124:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xDED,%r15
	je L_454659
L_180166:
	movq 0x0(%r14),%r15
	movq $0xB57,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x10(%rbp)
	addq $0x10,%r12
	movq (globalObjptr+0x4EC0)(%rip),%r13
	movq %r13,0x0(%r14)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r10,%r13
	jne L_180127
L_180168:
	movl %r11d,0x28(%rbp)
	movq $0x3AD5,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x10(%r13)
	addq $0x20,%r12
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	movq %r13,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_180169+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_2
.p2align 0x4
L_454659:
L_180125:
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x20(%rbp)
	movl %r13d,0x18(%rbp)
	cmpq %r14,%rdx
	movq %r15,0x10(%rbp)
	jne L_180127
L_180128:
	testq %rdx,%rdx
	jz L_454663
L_180129:
	cmpq $0x7FFFFFFF,%rdx
	ja L_454662
L_180130:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xA9D,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_180131+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_180131
.p2align 0x4
.long 0x6FE
L_180131:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq %rax,0x28(%rbp)
L_180132:
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_1832:
	cmpq 0x20(%rbp),%r15
	jnl L_454660
L_180163:
	movl %r15d,%r14d
	movslq %r14d,%r13
	salq $0x4,%r13
	movq 0x10(%rbp),%r14
	movq 0x8(%r14,%r13,1),%r11
	movq 0x28(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r11,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_1832
.p2align 0x4
L_454660:
L_180133:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_180134
L_180161:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_180162+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_180162
.p2align 0x4
.long 0xFCE
L_180162:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_180134:
	movq 0x28(%rbp),%r15
	movq $0xB6B,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x3ADF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x38(%rbp)
	movl 0x18(%rbp),%r15d
	movl %r15d,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_180135+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_2
.p2align 0x4
L_454662:
L_180157:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_454663:
L_180165:
	movq (globalObjptr+0xF80)(%rip),%r15
	movq %r15,0x28(%rbp)
	jmp L_180132
.p2align 0x4
L_454665:
L_180180:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_180181+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_180181
.p2align 0x4
.long 0x45F
L_180181:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_180091
.p2align 0x4
.long 0x4DC
L_180176:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_180177
L_180178:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_180179+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_180179
.p2align 0x4
.long 0x4AE
L_180179:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_180177:
	movq 0x18(%rbp),%r13
	movq 0x0(%r13),%r15
	movq $0x1BD9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x8(%rbp),%r13
	movq %r13,0x8(%r14)
	jmp L_180102
.p2align 0x4
.long 0x788
L_180169:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_180170
L_180171:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_180172+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_180172
.p2align 0x4
.long 0x45B
L_180172:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_180170:
	movq 0x10(%rbp),%r13
	movq 0x0(%r13),%r14
	movq $0x1BDD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
L_180152:
	movq $0x1BD7,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x10,%r12
	movq %r14,%r15
	movq %r13,%r14
	jmp L_180102
.p2align 0x4
.long 0x56C
L_180135:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_180136
L_180159:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_180160+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_180160
.p2align 0x4
.long 0xFCE
L_180160:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_180136:
	movq $0xB57,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x18(%rbp)
	addq $0x10,%r12
	movq (globalObjptr+0x4EC0)(%rip),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r10,%r13
	jne L_180127
L_180138:
	movl %r11d,0x40(%rbp)
	movq $0x3AD5,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x20,%r12
	movq 0x8(%rbp),%r11
	movq %r11,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	movq %r13,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_180139+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_2
.p2align 0x4
.long 0x460
L_180139:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x18(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x10(%rbp)
	movq 0x28(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	movq %r10,0x20(%rbp)
	cmpq %r10,%r13
	jne L_180127
L_180141:
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r10
	cmpq %r14,%r10
	jne L_180127
L_180143:
	cmpl %r13d,%r11d
	je L_454671
L_180144:
	movq (globalObjptr+0x4E0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_454671:
L_180145:
	movq 0x20(%rbp),%rdx
	testq %rdx,%rdx
	jz L_454675
L_180146:
	cmpq $0x7FFFFFFF,%rdx
	ja L_180157
L_180147:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14D7,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_180148+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_180148
.p2align 0x4
.long 0xFCE
L_180148:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq %rax,0x18(%rbp)
L_180149:
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_1833:
	cmpq 0x20(%rbp),%r15
	jnl L_454672
L_180155:
	movl %r15d,%r14d
	movq %r15,%r13
	movq %r15,%r11
	movslq %r14d,%r10
	movq 0x28(%rbp),%r14
	movq 0x0(%r14,%r10,8),%r9
	movq 0x8(%rbp),%r14
	movq 0x0(%r14,%r10,8),%r8
	movq 0x18(%rbp),%r14
	movq %r14,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r10,1)
	salq $0x4,%r13
	movq %r8,0x0(%r14,%r13,1)
	movq %r14,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%rsp,%r13,1)
	salq $0x4,%r11
	movq %r9,0x8(%r14,%r11,1)
	incq %r15
	jmp loop_1833
.p2align 0x4
L_454672:
L_180150:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_180151
L_180153:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_180154+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_180154
.p2align 0x4
.long 0x798
L_180154:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_180151:
	movq 0x18(%rbp),%r15
	movq $0xB1F,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x1BDB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq 0x10(%rbp),%r13
	movq %r14,%r15
	movq %r13,%r14
	jmp L_180152
.p2align 0x4
L_454675:
L_180158:
	movq (globalObjptr+0xFB0)(%rip),%r15
	movq %r15,0x18(%rbp)
	jmp L_180149
.text
.p2align 0x4
.globl combineUp_0
.hidden combineUp_0
combineUp_0:
L_180182:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_180183
L_180233:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_180234+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_180234
.p2align 0x4
.long 0x45F
L_180234:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_180183:
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x8(%r15),%r14
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x20(%rbp)
	cmpq $0x1,%r14
	je L_180197
L_180184:
	movq 0x8(%r14),%r15
	movq %r15,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x30(%rbp)
	movq %r13,0x38(%rbp)
.p2align 0x4,,0x7
L_180185:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_454695
.p2align 0x4,,0x7
L_180186:
	movq 0x20(%rbp),%r13
	cmpq $0x1,%r13
	je L_180194
L_180187:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
.p2align 0x4,,0x7
L_180188:
	movq 0x30(%rbp),%r9
	movq 0x8(%r9),%r8
	movq 0x10(%r8),%rsp
	movq 0x8(%r15),%r9
	movq 0x10(%r9),%r13
	cmpq %rsp,%r13
	je L_454692
L_180189:
	movq 0xFFFFFFFFFFFFFFF0(%rsp),%r11
	cmpq %r11,0xFFFFFFFFFFFFFFF0(%r13)
	jne L_454689
L_180214:
	xorq %r10,%r10
	movq %rsp,%r15
.p2align 0x4,,0x7
vectorEqualLoop_147:
	cmpq %r10,%r11
	je L_454687
L_180215:
	movb 0x0(%r15,%r10,1),%r9b
	cmpb %r9b,0x0(%r13,%r10,1)
	jne L_454678
L_180222:
	incq %r10
	jmp vectorEqualLoop_147
.p2align 0x4
L_454678:
L_180216:
	cmpq $0x1,%r14
	je L_454679
L_180217:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_180188
.p2align 0x4
L_454679:
L_180218:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_454686
.p2align 0x4,,0x7
L_180194:
	movq $0x20ED,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_454680
L_180195:
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x30(%rbp)
	jmp L_180185
.p2align 0x4
L_454680:
L_180196:
	movq %r15,0x20(%rbp)
L_180197:
	movq 0x10(%rbp),%r15
	cmpq $0x1,%r15
	je L_454685
L_180198:
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq $0x1,0x38(%rbp)
.p2align 0x4,,0x7
L_180199:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_454684
.p2align 0x4,,0x7
L_180200:
	movq $0x20ED,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_454681
L_180201:
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x30(%rbp)
	jmp L_180199
.p2align 0x4
L_454681:
L_180202:
	movq 0x38(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x38(%rbp)
.p2align 0x4,,0x7
L_180203:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_454683
.p2align 0x4,,0x7
L_180204:
	movq $0x20ED,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_454682
L_180205:
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x30(%rbp)
	jmp L_180203
.p2align 0x4
L_454682:
L_180206:
	movq %r15,0x0(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_454683:
L_180207:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_180208+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_180208
.p2align 0x4
.long 0x5EE
L_180208:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_180204
.p2align 0x4
L_454684:
L_180209:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_180210+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_180210
.p2align 0x4
.long 0x5E7
L_180210:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_180200
.p2align 0x4
L_454685:
L_180211:
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%rbp)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_454686:
L_180220:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_180221+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_180221
.p2align 0x4
.long 0x4B0
L_180221:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_180194
.p2align 0x4
L_454687:
L_180223:
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_454688
L_180224:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x28(%rbp)
	movq %r14,0x30(%rbp)
	jmp L_180185
.p2align 0x4
L_454688:
L_180225:
	movq 0x38(%rbp),%r14
	movq %r14,0x20(%rbp)
	jmp L_180197
.p2align 0x4
L_454689:
L_180190:
	cmpq $0x1,%r14
	je L_454690
L_180191:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_180188
.p2align 0x4
L_454690:
L_180192:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_180194
L_180212:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_180213+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_180213
.p2align 0x4
.long 0x4B0
L_180213:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_180194
.p2align 0x4
L_454692:
L_180226:
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_454693
L_180227:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x28(%rbp)
	movq %r14,0x30(%rbp)
	jmp L_180185
.p2align 0x4
L_454693:
L_180228:
	movq 0x38(%rbp),%r14
	movq %r14,0x20(%rbp)
	jmp L_180197
.p2align 0x4
L_454695:
L_180230:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_180231+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_180231
.p2align 0x4
.long 0x4B0
L_180231:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_180186
.text
.p2align 0x4
.globl tabulate_3
.hidden tabulate_3
tabulate_3:
L_180235:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_180236
L_180295:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_180296+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_180296
.p2align 0x4
.long 0x457
L_180296:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_180236:
	movslq 0x8(%rbp),%rdx
	movq %rdx,0x10(%rbp)
	testq %rdx,%rdx
	jz L_454722
L_180237:
	cmpq $0x7FFFFFFF,%rdx
	ja L_454721
L_180238:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1451,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_180239+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_180239
.p2align 0x4
.long 0x452
L_180239:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq %rax,0x8(%rbp)
L_180240:
	movq $0x0,0x18(%rbp)
.p2align 0x4,,0x7
loop_1834:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_454720
.p2align 0x4,,0x7
L_180241:
	movq 0x18(%rbp),%r15
	cmpq 0x10(%rbp),%r15
	jnl L_454719
L_180243:
	movl %r15d,%r14d
	movq 0x0(%rbp),%r15
	cmpq $0x1,%r15
	je L_454718
L_180244:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%rax
	shrq $0x1,%rax
	subq $0x1D3F,%rax
	cmpq $0xC,%rax
	ja L_454698
	leaq jumpTable_602(%rip),%rbx
	jmp *(%rbx,%rax,8)
.data
.p2align 0x4
jumpTable_602:
.quad L_454717,L_454716,L_454715,L_454714,L_454713,L_454710,L_454708,L_454707,L_454706,L_454705,L_454704,L_454703,L_454702
.text
.p2align 0x4
L_454698:
L_180245:
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r13
	movq 0x8(%r15),%r11
	movq 0x0(%r15),%r10
	cmpl $0x0,%r14d
	je L_454701
	cmpl $0x1,%r14d
	je L_454700
	cmpl $0x2,%r14d
	je L_454699
L_180246:
	movq (globalObjptr+0x4C0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_454699:
L_180250:
	movq %r11,%r15
.p2align 0x4,,0x7
L_180248:
	movq 0x8(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x18(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x18(%rbp)
	jmp loop_1834
.p2align 0x4
L_454700:
L_180249:
	movq %r10,%r15
	jmp L_180248
.p2align 0x4
L_454701:
	movq %r13,%r15
	jmp L_180248
.p2align 0x4
L_454702:
L_180289:
	movslq %r14d,%r15
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r13
	movq 0x0(%r13,%r15,8),%r11
	movq $0x143,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq $0x1,0x0(%r15)
	movq %r11,0x8(%r15)
	movq 0x0(%r11),%r14
	movq $0x145,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq %r14,0x0(%r13)
	movq $0x1C19,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movb $0x0,%r13b
	movzbl %r13b,%r11d
	movl %r11d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x13D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq %r13,%r15
	jmp L_180248
.p2align 0x4
L_454703:
L_180288:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x30(%rbp)
	movslq %r14d,%r13
	movq 0x8(%r15),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq %r11,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_180252+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3886
.p2align 0x4
L_454704:
L_180287:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x30(%rbp)
	movslq %r14d,%r13
	movq 0x8(%r15),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq %r11,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_180252+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3886
.p2align 0x4
L_454705:
L_180281:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x0(%r15),%r11
	movq %r11,0x40(%rbp)
	movslq %r14d,%r11
	movq 0x10(%r15),%r14
	movq 0x0(%r14,%r11,8),%r10
	movq %r10,0x38(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x28(%rbp)
	addq $0x38,%rbp
	leaq (L_180282+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3887
.p2align 0x4
L_454706:
L_180275:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x0(%r15),%r11
	movq %r11,0x40(%rbp)
	movslq %r14d,%r11
	movq 0x10(%r15),%r14
	movq 0x0(%r14,%r11,8),%r10
	movq %r10,0x38(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x28(%rbp)
	addq $0x38,%rbp
	leaq (L_180276+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3887
.p2align 0x4
L_454707:
L_180274:
	movq 0x0(%rbp),%r13
	movq 0x0(%r13),%r11
	movslq %r14d,%r15
	salq $0x4,%r15
	movq 0x0(%r11,%r15,1),%r11
	movq %r11,%r15
	jmp L_180248
.p2align 0x4
L_454708:
L_180271:
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_454709
L_180272:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r14,1)
	movq %r13,0x0(%r15)
	movq %r11,%r15
	jmp L_180248
.p2align 0x4
L_454709:
L_180273:
	movq (globalObjptr+0x4B0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_454710:
L_180267:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r13
	movq 0x0(%r15),%r11
	cmpl $0x0,%r14d
	je L_454712
	cmpl $0x1,%r14d
	je L_454711
L_180268:
	movq (globalObjptr+0x4A8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_454711:
L_180270:
	movq %r11,%r15
	jmp L_180248
.p2align 0x4
L_454712:
	movq %r13,%r15
	jmp L_180248
.p2align 0x4
L_454713:
L_180266:
	movq 0x0(%rbp),%r13
	movq 0x0(%r13),%r11
	movslq %r14d,%r15
	salq $0x4,%r15
	movq 0x0(%r11,%r15,1),%r11
	movq %r11,%r15
	jmp L_180248
.p2align 0x4
L_454714:
L_180260:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x0(%r15),%r11
	movq %r11,0x40(%rbp)
	movslq %r14d,%r11
	movq 0x10(%r15),%r14
	movq 0x0(%r14,%r11,8),%r10
	movq %r10,0x38(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x28(%rbp)
	addq $0x38,%rbp
	leaq (L_180261+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3887
.p2align 0x4
L_454715:
L_180254:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x0(%r15),%r11
	movq %r11,0x40(%rbp)
	movslq %r14d,%r11
	movq 0x10(%r15),%r14
	movq 0x0(%r14,%r11,8),%r10
	movq %r10,0x38(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x28(%rbp)
	addq $0x38,%rbp
	leaq (L_180255+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3887
.p2align 0x4
L_454716:
L_180253:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x30(%rbp)
	movslq %r14d,%r13
	movq 0x8(%r15),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq %r11,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_180252+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3886
.p2align 0x4
L_454717:
L_180251:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x30(%rbp)
	movslq %r14d,%r13
	movq 0x8(%r15),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq %r11,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_180252+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3886
.p2align 0x4
L_454718:
L_180290:
	movq (globalObjptr+0x4A0)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_454719:
L_180242:
	movq 0x8(%rbp),%r14
	movq $0x18D,0xFFFFFFFFFFFFFFF8(%r14)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_454720:
L_180291:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_180292+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_180292
.p2align 0x4
.long 0x45C
L_180292:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	jmp L_180241
.p2align 0x4
L_454721:
L_180293:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_454722:
L_180294:
	movq (globalObjptr+0xB58)(%rip),%r15
	movq %r15,0x8(%rbp)
	jmp L_180240
.p2align 0x4
.long 0x5F8
L_180252:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	jmp L_180248
.p2align 0x4
.long 0x557
L_180282:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x40(%rbp),%r14
	movq %r14,0x38(%rbp)
	movq %r15,0x48(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_180283+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp combineUp_0
.p2align 0x4
.long 0x557
L_180276:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x40(%rbp),%r14
	movq %r14,0x38(%rbp)
	movq %r15,0x48(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_180277+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp combineUp_0
.p2align 0x4
.long 0x557
L_180261:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x40(%rbp),%r14
	movq %r14,0x38(%rbp)
	movq %r15,0x48(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_180262+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp combineUp_0
.p2align 0x4
.long 0x557
L_180255:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x40(%rbp),%r14
	movq %r14,0x38(%rbp)
	movq %r15,0x48(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_180256+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp combineUp_0
.p2align 0x4
.long 0x531
L_180283:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_180284
L_180285:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_180286+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_180286
.p2align 0x4
.long 0xF85
L_180286:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_180284:
	movq $0xB55,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	movq 0x38(%rbp),%r15
	jmp L_180248
.p2align 0x4
.long 0x531
L_180277:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_180278
L_180279:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_180280+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_180280
.p2align 0x4
.long 0xF85
L_180280:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_180278:
	movq $0xB55,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	movq 0x38(%rbp),%r15
	jmp L_180248
.p2align 0x4
.long 0x531
L_180262:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_180263
L_180264:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_180265+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_180265
.p2align 0x4
.long 0xF85
L_180265:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_180263:
	movq $0xB55,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	movq 0x38(%rbp),%r15
	jmp L_180248
.p2align 0x4
.long 0x531
L_180256:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_180257
L_180258:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_180259+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_180259
.p2align 0x4
.long 0xF85
L_180259:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_180257:
	movq $0xB55,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	movq 0x38(%rbp),%r15
	jmp L_180248
.text
.p2align 0x4
.globl loop_3886
.hidden loop_3886
loop_3886:
L_180297:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_180550
L_180298:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_454772
L_180299:
	movq 0x8(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x28(%rbp)
	movq 0x8(%r15),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%rax
	shrq $0x1,%rax
	subq $0xDFB,%rax
	cmpq $0x11,%rax
	ja L_454728
	leaq jumpTable_603(%rip),%rbx
	jmp *(%rbx,%rax,8)
.data
.p2align 0x4
jumpTable_603:
.quad L_454771,L_454770,L_454769,L_454768,L_454767,L_454766,L_454765,L_454764,L_454762,L_454754,L_454753,L_454751,L_454750,L_454749,L_454748,L_454746,L_454740,L_454739
.text
.p2align 0x4
L_454728:
L_180300:
	movq 0x0(%r13),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%rax
	shrq $0x1,%rax
	subq $0x1283,%rax
	cmpq $0x8,%rax
	ja L_454729
	leaq jumpTable_604(%rip),%rbx
	jmp *(%rbx,%rax,8)
.data
.p2align 0x4
jumpTable_604:
.quad L_454738,L_454737,L_454736,L_454735,L_454734,L_454733,L_454732,L_454731,L_454730
.text
.p2align 0x4
L_454729:
L_180301:
	movq 0x10(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq $0xB53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_180302+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3884
.p2align 0x4
L_454730:
L_180347:
	movq 0x10(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq $0xB53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_180348+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3884
.p2align 0x4
L_454731:
L_180342:
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq $0xB53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_180343+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3884
.p2align 0x4
L_454732:
L_180337:
	movq 0x10(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq $0xB53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_180338+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3884
.p2align 0x4
L_454733:
L_180332:
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq $0xB53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_180333+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3884
.p2align 0x4
L_454734:
L_180327:
	movq 0x10(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq $0xB53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_180328+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3884
.p2align 0x4
L_454735:
L_180322:
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq $0xB53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_180323+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3884
.p2align 0x4
L_454736:
L_180317:
	movq 0x10(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq $0xB53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_180318+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3884
.p2align 0x4
L_454737:
L_180312:
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq $0xB53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_180313+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3884
.p2align 0x4
L_454738:
L_180307:
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq $0xB53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_180308+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3884
.p2align 0x4
L_454739:
L_180549:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_454740:
L_180527:
	movq 0x8(%r13),%r15
	movq %r15,0x18(%rbp)
	movq 0x0(%r13),%r15
	movq 0x10(%rbp),%r14
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq %r11,0x38(%rbp)
	movq 0x0(%r13),%r14
	movq %r14,0x40(%rbp)
	movq %r13,0x30(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	movq %r11,0x48(%rbp)
	cmpq %r11,%r14
	movq %r15,0x20(%rbp)
	jne L_454745
L_180529:
	testq %r11,%r11
	jz L_454744
L_180530:
	cmpq $0x7FFFFFFF,%r11
	ja L_454743
L_180531:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_180532
L_180545:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_180546+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_180546
.p2align 0x4
.long 0x15BA
L_180546:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_180532:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1589,%rcx
	movq 0x48(%rbp),%rdx
	movq $0x30,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_180533+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_180533
.p2align 0x4
.long 0x15BA
L_180533:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq %rax,0x50(%rbp)
L_180534:
	movq $0x0,0x58(%rbp)
loop_1839:
	movq 0x48(%rbp),%r15
	cmpq %r15,0x58(%rbp)
	jl L_454741
L_180535:
	movq 0x50(%rbp),%r15
	movq $0xB19,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x1C17,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x18(%rbp),%r15
	movq %r15,0x8(%r14)
	movq $0x13D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_454741:
L_180536:
	movq 0x58(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq %r15,%r14
	salq $0x4,%r14
	movq 0x20(%rbp),%r13
	movq 0x0(%r13,%r14,1),%r11
	movq %r11,0x60(%rbp)
	salq $0x4,%r15
	movq 0x8(%r13,%r15,1),%r14
	movq %r14,0x70(%rbp)
	movq 0x40(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq $0xC65,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	addq $0x20,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_180537+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3888
.p2align 0x4
L_454743:
L_180406:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_454744:
L_180548:
	movq (globalObjptr+0x4F40)(%rip),%r15
	movq %r15,0x50(%rbp)
	jmp L_180534
.p2align 0x4
L_454745:
L_180386:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_454746:
L_180520:
	movq 0x0(%r13),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_180386
L_180522:
	movl %r13d,0x40(%rbp)
	movq $0x3A7F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_180523+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_3
.p2align 0x4
L_454748:
L_180514:
	movq 0x8(%r13),%r15
	movq %r15,0x10(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x38(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_180515+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3886
.p2align 0x4
L_454749:
L_180488:
	movq 0x8(%r13),%r15
	movq %r15,0x18(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x38(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_180489+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3886
.p2align 0x4
L_454750:
L_180482:
	movq %r14,0x48(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x10(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x40(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_180483+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loopDec_0
.p2align 0x4
L_454751:
L_180475:
	movq 0x0(%r13),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_180386
L_180477:
	movl %r13d,0x40(%rbp)
	movq $0x3A95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_180478+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_3
.p2align 0x4
L_454753:
L_180474:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_454754:
L_180427:
	movq 0x0(%r13),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1295,%r14
	je L_454756
L_180467:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_180386
L_180469:
	movl %r13d,0x40(%rbp)
	movq $0x3A81,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_180470+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_3
.p2align 0x4
L_454756:
L_180428:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x20(%rbp)
	movl %r13d,0x18(%rbp)
	cmpq %rdx,%r15
	movq %r14,0x10(%rbp)
	jne L_180386
L_180430:
	testq %rdx,%rdx
	jz L_454760
L_180431:
	cmpq $0x7FFFFFFF,%rdx
	ja L_180406
L_180432:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xA9D,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_180433+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_180433
.p2align 0x4
.long 0x463
L_180433:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq %rax,0x30(%rbp)
L_180434:
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_1836:
	cmpq 0x20(%rbp),%r15
	jnl L_454757
L_180464:
	movl %r15d,%r14d
	movslq %r14d,%r13
	salq $0x4,%r13
	movq 0x10(%rbp),%r14
	movq 0x8(%r14,%r13,1),%r11
	movq 0x30(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r11,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_1836
.p2align 0x4
L_454757:
L_180435:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_180436
L_180462:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_180463+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_180463
.p2align 0x4
.long 0xE88
L_180463:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_180436:
	movq 0x30(%rbp),%r15
	movq $0xB6B,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x3A8D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x40(%rbp)
	movl 0x18(%rbp),%r15d
	movl %r15d,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_180437+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_3
.p2align 0x4
L_454760:
L_180466:
	movq (globalObjptr+0xF78)(%rip),%r15
	movq %r15,0x30(%rbp)
	jmp L_180434
.p2align 0x4
L_454762:
L_180420:
	movq 0x0(%r13),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_180386
L_180422:
	movl %r13d,0x40(%rbp)
	movq $0x3A93,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_180423+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_3
.p2align 0x4
L_454764:
L_180419:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_454765:
L_180410:
	movq 0x8(%r13),%r15
	movq %r15,0x10(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x38(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_180411+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3886
.p2align 0x4
L_454766:
L_180382:
	movq 0x8(%r13),%r15
	movq %r15,0x18(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x38(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_180383+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3886
.p2align 0x4
L_454767:
L_180377:
	movq 0x0(%r13),%r15
	movq %r15,0x38(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_180378+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3886
.p2align 0x4
L_454768:
L_180370:
	movq 0x10(%r13),%r15
	movq %r15,0x10(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x18(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x38(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_180371+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3886
.p2align 0x4
L_454769:
L_180364:
	movq 0x8(%r13),%r15
	movq %r15,0x10(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x38(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_180365+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3886
.p2align 0x4
L_454770:
L_180358:
	movq 0x8(%r13),%r15
	movq %r15,0x10(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x38(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_180359+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3886
.p2align 0x4
L_454771:
L_180352:
	movq 0x8(%r13),%r15
	movq %r15,0x10(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x38(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_180353+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3886
.p2align 0x4
L_454772:
L_180550:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_180551+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_180551
.p2align 0x4
.long 0x45F
L_180551:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_180299
.p2align 0x4
.long 0x7B4
L_180302:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_180303
L_180305:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_180306+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_180306
.p2align 0x4
.long 0x5F4
L_180306:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_180303:
	movq $0x2505,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x10(%r15)
L_180304:
	movq $0x1BF5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x13D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x7B4
L_180348:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_180349
L_180350:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_180351+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_180351
.p2align 0x4
.long 0x5F4
L_180351:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_180349:
	movq $0x2517,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x10(%r15)
	jmp L_180304
.p2align 0x4
.long 0x5F1
L_180343:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_180344
L_180345:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_180346+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_180346
.p2align 0x4
.long 0x489
L_180346:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_180344:
	movq $0x2515,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_180304
.p2align 0x4
.long 0x7B4
L_180338:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_180339
L_180340:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_180341+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_180341
.p2align 0x4
.long 0x5F4
L_180341:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_180339:
	movq $0x2513,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x10(%r15)
	jmp L_180304
.p2align 0x4
.long 0x5F1
L_180333:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_180334
L_180335:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_180336+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_180336
.p2align 0x4
.long 0x489
L_180336:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_180334:
	movq $0x2511,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_180304
.p2align 0x4
.long 0x7B4
L_180328:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_180329
L_180330:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_180331+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_180331
.p2align 0x4
.long 0x5F4
L_180331:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_180329:
	movq $0x250F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x10(%r15)
	jmp L_180304
.p2align 0x4
.long 0x5F1
L_180323:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_180324
L_180325:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_180326+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_180326
.p2align 0x4
.long 0x489
L_180326:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_180324:
	movq $0x250D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_180304
.p2align 0x4
.long 0x7B4
L_180318:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_180319
L_180320:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_180321+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_180321
.p2align 0x4
.long 0x5F4
L_180321:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_180319:
	movq $0x250B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x10(%r15)
	jmp L_180304
.p2align 0x4
.long 0x51A
L_180313:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_180314
L_180315:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_180316+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_180316
.p2align 0x4
.long 0x488
L_180316:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_180314:
	movq $0x2509,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_180304
.p2align 0x4
.long 0x5F1
L_180308:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_180309
L_180310:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_180311+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_180311
.p2align 0x4
.long 0x489
L_180311:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_180309:
	movq $0x2507,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_180304
.p2align 0x4
.long 0x24A2
L_180537:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_180538
L_180543:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_180544+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_180544
.p2align 0x4
.long 0x24A4
L_180544:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_180538:
	movq 0x30(%rbp),%r15
	movq 0x8(%r15),%r14
	movq $0xB81,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x28,%r12
	movq %r15,0x0(%r13)
	movq 0x38(%rbp),%r15
	movq %r15,0x10(%r13)
	movq 0x10(%rbp),%r15
	movq %r15,0x18(%r13)
	movq %r13,0x80(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_180539+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3886
.p2align 0x4
.long 0x51A
L_180523:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_180524
L_180525:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_180526+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_180526
.p2align 0x4
.long 0x488
L_180526:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_180524:
	movq $0x1C15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x13D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x785
L_180515:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_180516+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3886
.p2align 0x4
.long 0x4E2
L_180489:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_180490
L_180512:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_180513+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_180513
.p2align 0x4
.long 0x51F
L_180513:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_180490:
	movq 0x10(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r13,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x40(%rbp)
	movq %r14,0x30(%rbp)
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x8(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	movq %r11,0x58(%rbp)
	cmpq %r15,%r11
	movq %r14,0x50(%rbp)
	jne L_180386
L_180492:
	testq %r11,%r11
	jz L_454789
L_180493:
	cmpq $0x7FFFFFFF,%r11
	ja L_180406
L_180494:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_180495
L_180508:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_180509+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_180509
.p2align 0x4
.long 0x249E
L_180509:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_180495:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1589,%rcx
	movq 0x58(%rbp),%rdx
	movq $0x48,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_180496+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_180496
.p2align 0x4
.long 0x249E
L_180496:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq %rax,0x18(%rbp)
L_180497:
	movq $0x0,0x60(%rbp)
loop_1838:
	movq 0x58(%rbp),%r15
	cmpq %r15,0x60(%rbp)
	jl L_454786
L_180498:
	movq 0x18(%rbp),%r15
	movq $0xB19,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x10CB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq $0x1C11,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x13D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_454786:
L_180499:
	movq 0x60(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq %r15,%r14
	salq $0x4,%r14
	movq 0x50(%rbp),%r13
	movq 0x0(%r13,%r14,1),%r11
	movq %r11,0x68(%rbp)
	salq $0x4,%r15
	movq 0x8(%r13,%r15,1),%r14
	movq %r14,0x78(%rbp)
	movq 0x40(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq $0xC65,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	addq $0x20,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_180500+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3888
.p2align 0x4
L_454789:
L_180511:
	movq (globalObjptr+0x4F40)(%rip),%r15
	movq %r15,0x18(%rbp)
	jmp L_180497
.p2align 0x4
.long 0x785
L_180483:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_180484+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3886
.p2align 0x4
.long 0x51A
L_180478:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_180479
L_180480:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_180481+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_180481
.p2align 0x4
.long 0x488
L_180481:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_180479:
	movq $0x1C0D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x13D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x51A
L_180470:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_180471
L_180472:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_180473+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_180473
.p2align 0x4
.long 0x488
L_180473:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_180471:
	movq $0x252D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
L_180454:
	movq $0x1C09,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x13D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x8F9
L_180437:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_180438
L_180460:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_180461+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_180461
.p2align 0x4
.long 0xE88
L_180461:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_180438:
	movq 0x10(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_180386
L_180440:
	movl %r13d,0x48(%rbp)
	movq $0x3A81,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_180441+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_3
.p2align 0x4
.long 0x51A
L_180423:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_180424
L_180425:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_180426+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_180426
.p2align 0x4
.long 0x488
L_180426:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_180424:
	movq $0x1C07,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x13D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4A6
L_180411:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_180412
L_180417:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_180418+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_180418
.p2align 0x4
.long 0x720
L_180418:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_180412:
	movq $0xB53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x48(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_180413+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3884
.p2align 0x4
.long 0x4E2
L_180383:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_180384
L_180408:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_180409+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_180409
.p2align 0x4
.long 0x51F
L_180409:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_180384:
	movq 0x10(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r13,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x40(%rbp)
	movq %r14,0x30(%rbp)
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x8(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	movq %r11,0x58(%rbp)
	cmpq %r11,%r15
	movq %r14,0x50(%rbp)
	jne L_180386
L_180387:
	testq %r11,%r11
	jz L_454801
L_180388:
	cmpq $0x7FFFFFFF,%r11
	ja L_180406
L_180389:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_180390
L_180403:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_180404+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_180404
.p2align 0x4
.long 0x249E
L_180404:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_180390:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1589,%rcx
	movq 0x58(%rbp),%rdx
	movq $0x48,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_180391+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_180391
.p2align 0x4
.long 0x249E
L_180391:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq %rax,0x18(%rbp)
L_180392:
	movq $0x0,0x60(%rbp)
loop_1835:
	movq 0x58(%rbp),%r15
	cmpq %r15,0x60(%rbp)
	jl L_454798
L_180393:
	movq 0x18(%rbp),%r15
	movq $0xB19,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x10CB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq $0x1C01,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x13D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_454798:
L_180394:
	movq 0x60(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq %r15,%r14
	salq $0x4,%r14
	movq 0x50(%rbp),%r13
	movq 0x0(%r13,%r14,1),%r11
	movq %r11,0x68(%rbp)
	salq $0x4,%r15
	movq 0x8(%r13,%r15,1),%r14
	movq %r14,0x78(%rbp)
	movq 0x40(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq $0xC65,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	addq $0x20,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_180395+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3888
.p2align 0x4
L_454801:
L_180407:
	movq (globalObjptr+0x4F40)(%rip),%r15
	movq %r15,0x18(%rbp)
	jmp L_180392
.p2align 0x4
.long 0x51A
L_180378:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_180379
L_180380:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_180381+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_180381
.p2align 0x4
.long 0x488
L_180381:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_180379:
	movq $0x1BFF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x13D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x97C
L_180371:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_180372+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3886
.p2align 0x4
.long 0x785
L_180365:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_180366+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3886
.p2align 0x4
.long 0x785
L_180359:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_180360+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3886
.p2align 0x4
.long 0x785
L_180353:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_180354+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3886
.p2align 0x4
.long 0x24A3
L_180539:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_180540
L_180541:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_180542+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_180542
.p2align 0x4
.long 0x24A4
L_180542:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_180540:
	movq 0x50(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x58(%rbp),%r14
	movq %r14,%r11
	salq $0x4,%r11
	movq 0x60(%rbp),%r10
	movq %r10,0x0(%r15,%r11,1)
	movq %r15,%r11
	shrq $0x8,%r11
	movb $0x1,0x0(%r13,%r11,1)
	movq %r14,%r13
	salq $0x4,%r13
	movq 0x68(%rbp),%r11
	movq %r11,0x8(%r15,%r13,1)
	incq %r14
	movq %r14,0x58(%rbp)
	jmp loop_1839
.p2align 0x4
.long 0x71E
L_180516:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_180517
L_180518:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_180519+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_180519
.p2align 0x4
.long 0x51C
L_180519:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_180517:
	movq $0x1C13,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x13D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x249F
L_180500:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x70(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_180501
L_180506:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_180507+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_180507
.p2align 0x4
.long 0x24A1
L_180507:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_180501:
	movq 0x30(%rbp),%r15
	movq 0x8(%r15),%r14
	movq $0xB81,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x28,%r12
	movq %r15,0x0(%r13)
	movq 0x38(%rbp),%r15
	movq %r15,0x10(%r13)
	movq 0x10(%rbp),%r15
	movq %r15,0x18(%r13)
	movq %r13,0x88(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_180502+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3886
.p2align 0x4
.long 0x71E
L_180484:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_180485
L_180486:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_180487+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_180487
.p2align 0x4
.long 0x51C
L_180487:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_180485:
	movq $0x1C0F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x13D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x5F1
L_180441:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x30(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	movq %r10,0x40(%rbp)
	cmpq %r13,%r10
	jne L_180386
L_180443:
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r10
	cmpq %r14,%r10
	jne L_180386
L_180445:
	cmpl %r11d,%r13d
	je L_454809
L_180446:
	movq (globalObjptr+0x4E0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_454809:
L_180447:
	movq 0x40(%rbp),%rdx
	testq %rdx,%rdx
	jz L_454813
L_180448:
	cmpq $0x7FFFFFFF,%rdx
	ja L_180406
L_180449:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14D1,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_180450+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_180450
.p2align 0x4
.long 0x1281
L_180450:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq %rax,0x48(%rbp)
L_180451:
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_1837:
	cmpq 0x40(%rbp),%r15
	jnl L_454810
L_180457:
	movl %r15d,%r14d
	movq %r15,%r13
	movq %r15,%r11
	movslq %r14d,%r10
	movq 0x30(%rbp),%r14
	movq 0x0(%r14,%r10,8),%r9
	movq 0x38(%rbp),%r14
	movq 0x0(%r14,%r10,8),%r8
	movq 0x48(%rbp),%r14
	movq %r14,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r10,1)
	salq $0x4,%r13
	movq %r8,0x0(%r14,%r13,1)
	movq %r14,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%rsp,%r13,1)
	salq $0x4,%r11
	movq %r9,0x8(%r14,%r11,1)
	incq %r15
	jmp loop_1837
.p2align 0x4
L_454810:
L_180452:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_180453
L_180455:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_180456+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_180456
.p2align 0x4
.long 0x90B
L_180456:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_180453:
	movq 0x48(%rbp),%r14
	movq $0xB25,0xFFFFFFFFFFFFFFF8(%r14)
	movq $0x252B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r14,0x0(%r15)
	jmp L_180454
.p2align 0x4
L_454813:
L_180459:
	movq (globalObjptr+0xF98)(%rip),%r15
	movq %r15,0x48(%rbp)
	jmp L_180451
.p2align 0x4
.long 0x5F1
L_180413:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_180414
L_180415:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_180416+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_180416
.p2align 0x4
.long 0x489
L_180416:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_180414:
	movq $0x1C03,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x13D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x249F
L_180395:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x70(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_180396
L_180401:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_180402+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_180402
.p2align 0x4
.long 0x24A1
L_180402:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_180396:
	movq 0x30(%rbp),%r15
	movq 0x8(%r15),%r14
	movq $0xB81,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x28,%r12
	movq %r15,0x0(%r13)
	movq 0x38(%rbp),%r15
	movq %r15,0x10(%r13)
	movq 0x10(%rbp),%r15
	movq %r15,0x18(%r13)
	movq %r13,0x88(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_180397+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3886
.p2align 0x4
.long 0x639
L_180372:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_180373+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3886
.p2align 0x4
.long 0x71E
L_180366:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_180367
L_180368:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_180369+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_180369
.p2align 0x4
.long 0x51C
L_180369:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_180367:
	movq $0x1BFB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x13D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x71E
L_180360:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_180361
L_180362:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_180363+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_180363
.p2align 0x4
.long 0x51C
L_180363:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_180361:
	movq $0x1BF9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x13D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x71E
L_180354:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_180355
L_180356:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_180357+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_180357
.p2align 0x4
.long 0x51C
L_180357:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_180355:
	movq $0x1BF7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x13D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x24A0
L_180502:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_180503
L_180504:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_180505+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_180505
.p2align 0x4
.long 0x24A1
L_180505:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_180503:
	movq 0x18(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x60(%rbp),%r14
	movq %r14,%r11
	salq $0x4,%r11
	movq 0x68(%rbp),%r10
	movq %r10,0x0(%r15,%r11,1)
	movq %r15,%r11
	shrq $0x8,%r11
	movb $0x1,0x0(%r13,%r11,1)
	movq %r14,%r13
	salq $0x4,%r13
	movq 0x70(%rbp),%r11
	movq %r11,0x8(%r15,%r13,1)
	incq %r14
	movq %r14,0x60(%rbp)
	jmp loop_1838
.p2align 0x4
.long 0x24A0
L_180397:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_180398
L_180399:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_180400+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_180400
.p2align 0x4
.long 0x24A1
L_180400:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_180398:
	movq 0x18(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x60(%rbp),%r14
	movq %r14,%r11
	salq $0x4,%r11
	movq 0x68(%rbp),%r10
	movq %r10,0x0(%r15,%r11,1)
	movq %r15,%r11
	shrq $0x8,%r11
	movb $0x1,0x0(%r13,%r11,1)
	movq %r14,%r13
	salq $0x4,%r13
	movq 0x70(%rbp),%r11
	movq %r11,0x8(%r15,%r13,1)
	incq %r14
	movq %r14,0x60(%rbp)
	jmp loop_1835
.p2align 0x4
.long 0x71D
L_180373:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_180374
L_180375:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_180376+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_180376
.p2align 0x4
.long 0x71F
L_180376:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_180374:
	movq $0x1BFD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x10(%r15)
	movq $0x13D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl loop_3888
.hidden loop_3888
loop_3888:
L_180552:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_180638
L_180553:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_454847
L_180554:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	cmpq $0x1,%r14
	je L_454846
L_180555:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%rax
	shrq $0x1,%rax
	subq $0xDF2,%rax
	cmpq $0x7,%rax
	ja L_454824
	leaq jumpTable_605(%rip),%rbx
	jmp *(%rbx,%rax,8)
.data
.p2align 0x4
jumpTable_605:
.quad L_454844,L_454834,L_454832,L_454830,L_454828,L_454827,L_454826,L_454825
.text
.p2align 0x4
L_454824:
L_180556:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_454825:
L_180632:
	movq 0x8(%r14),%r15
	movq %r15,0x20(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x10(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_180633+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3888
.p2align 0x4
L_454826:
L_180631:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_454827:
L_180622:
	movq 0x8(%r14),%r15
	movq %r15,0x20(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x30(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_180623+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3888
.p2align 0x4
L_454828:
L_180615:
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_454829
L_180617:
	movl %r13d,0x18(%rbp)
	movq $0x372D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_180618+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_9
.p2align 0x4
L_454829:
L_180559:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_454830:
L_180606:
	movq 0x18(%r14),%r15
	movq %r15,0x18(%rbp)
	movq 0x10(%r14),%r15
	movq %r15,0x28(%rbp)
	movb 0x0(%r14),%r15b
	movb %r15b,0x30(%rbp)
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_454831
L_180607:
	movq %r15,0x40(%rbp)
	movq $0xB53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_180608+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3884
.p2align 0x4
L_454831:
L_180614:
	movq $0x1,0x10(%rbp)
L_180609:
	movq 0x28(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_180610+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3888
.p2align 0x4
L_454832:
L_180599:
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_180559
L_180601:
	movl %r13d,0x18(%rbp)
	movq $0x373D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_180602+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_9
.p2align 0x4
L_454834:
L_180565:
	movq 0x8(%r14),%r15
	movl 0x0(%r14),%r13d
	movl %r13d,0x28(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x30(%rbp)
	cmpq %r14,%rdx
	movq %r15,0x18(%rbp)
	jne L_180559
L_180567:
	testq %rdx,%rdx
	jz L_454842
L_180568:
	cmpq $0x7FFFFFFF,%rdx
	ja L_454841
L_180569:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1587,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_180570+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_180570
.p2align 0x4
.long 0x97B
L_180570:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq %rax,0x38(%rbp)
L_180571:
	movq $0x0,0x40(%rbp)
.p2align 0x4,,0x7
loop_1840:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_454840
.p2align 0x4,,0x7
L_180572:
	movq 0x40(%rbp),%r15
	cmpq 0x30(%rbp),%r15
	jnl L_454839
L_180574:
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq %r15,%r14
	salq $0x4,%r14
	movq 0x18(%rbp),%r13
	movq 0x0(%r13,%r14,1),%r11
	salq $0x4,%r15
	movq 0x8(%r13,%r15,1),%r14
	movq %r14,0x48(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0x107D,%r15
	jne L_454838
L_180575:
	movq 0x10(%r11),%r15
	movq %r15,0x50(%rbp)
	movq 0x8(%r11),%r14
	movq 0x0(%r11),%r13
	movq %r13,0x58(%rbp)
	cmpq $0x1,%r14
	jne L_454837
L_180587:
	cmpq $0x1,%r15
	jne L_454836
L_180589:
	movq $0x1,0x50(%rbp)
	movq $0x1,0x60(%rbp)
.p2align 0x4,,0x7
L_180581:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_454835
.p2align 0x4,,0x7
L_180582:
	movq $0x20FB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x10(%r15)
.p2align 0x4,,0x7
L_180583:
	movq 0x38(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x40(%rbp),%r13
	movq %r13,%r10
	salq $0x4,%r10
	movq %r15,0x0(%r14,%r10,1)
	movq %r14,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,%r15
	salq $0x4,%r15
	movq 0x48(%rbp),%r11
	movq %r11,0x8(%r14,%r15,1)
	incq %r13
	movq %r13,0x40(%rbp)
	jmp loop_1840
.p2align 0x4
L_454835:
L_180584:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_180585+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_180585
.p2align 0x4
.long 0x24A6
L_180585:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_180582
.p2align 0x4
L_454836:
L_180588:
	movq 0x50(%rbp),%r15
	movq $0x1,0x50(%rbp)
L_180579:
	movq %r15,0x68(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_180580+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3888
.p2align 0x4
L_454837:
L_180576:
	movq %r14,0x68(%rbp)
	movq $0xB53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x10(%rbp),%r13
	movq %r13,0x8(%r14)
	movq %r14,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_180577+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3884
.p2align 0x4
L_454838:
L_180590:
	movq 0x0(%r11),%r15
	movq %r15,0x58(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_180591+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3888
.p2align 0x4
L_454839:
L_180573:
	movq 0x38(%rbp),%r14
	movq $0xB23,0xFFFFFFFFFFFFFFF8(%r14)
	movq $0x1BE7,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movl 0x28(%rbp),%r11d
	movl %r11d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r14,0x8(%r13)
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r11
	movq $0x159,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r11,0x0(%r14)
	movq %r13,0x8(%r14)
	movq %r14,0x0(%rbp)
	addq $0x18,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_454840:
L_180595:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_180596+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_180596
.p2align 0x4
.long 0x2477
L_180596:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_180572
.p2align 0x4
L_454841:
L_180597:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_454842:
L_180598:
	movq (globalObjptr+0x4F38)(%rip),%r15
	movq %r15,0x38(%rbp)
	jmp L_180571
.p2align 0x4
L_454844:
L_180557:
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_180559
L_180560:
	movl %r13d,0x18(%rbp)
	movq $0x372F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_180561+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_9
.p2align 0x4
L_454846:
L_180637:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_454847:
L_180638:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_180639+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_180639
.p2align 0x4
.long 0x45F
L_180639:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_180554
.p2align 0x4
.long 0x788
L_180633:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_180634
L_180635:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_180636+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_180636
.p2align 0x4
.long 0x45B
L_180636:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_180634:
	movq $0x1BF3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x159,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x0(%rbp)
	addq $0x18,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x65C
L_180623:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_180624
L_180629:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_180630+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_180630
.p2align 0x4
.long 0x63C
L_180630:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_180624:
	movq $0xB53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x18(%rbp)
	movq %r15,0x20(%rbp)
	addq $0x18,%rbp
	leaq (L_180625+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3884
.p2align 0x4
.long 0x4AF
L_180618:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_180619
L_180620:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_180621+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_180621
.p2align 0x4
.long 0x45F
L_180621:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_180619:
	movq $0x1BED,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x159,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x0(%rbp)
	addq $0x18,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x24A9
L_180608:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x10(%rbp)
	jmp L_180609
.p2align 0x4
.long 0x24AA
L_180610:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_180611
L_180612:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_180613+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_180613
.p2align 0x4
.long 0x24AB
L_180613:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_180611:
	movq $0x1BEB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x28,%r12
	movzbl 0x30(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x8(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x159,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x0(%rbp)
	addq $0x18,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4AF
L_180602:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_180603
L_180604:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_180605+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_180605
.p2align 0x4
.long 0x45F
L_180605:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_180603:
	movq $0x1BE9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x159,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x0(%rbp)
	addq $0x18,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x24A5
L_180580:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq 0x50(%rbp),%r14
	movq %r14,0x60(%rbp)
	movq %r15,0x50(%rbp)
	jmp L_180581
.p2align 0x4
.long 0x24A5
L_180577:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r14
	movq %r14,0x60(%rbp)
	movq 0x50(%rbp),%r15
	cmpq $0x1,%r15
	je L_454854
L_180578:
	movq %r14,0x50(%rbp)
	jmp L_180579
.p2align 0x4
L_454854:
L_180586:
	movq $0x1,0x50(%rbp)
	jmp L_180581
.p2align 0x4
.long 0x24A7
L_180591:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_180592
L_180593:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_180594+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_180594
.p2align 0x4
.long 0x24A8
L_180594:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_180592:
	movq $0x20FD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_180583
.p2align 0x4
.long 0x4AF
L_180561:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_180562
L_180563:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_180564+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_180564
.p2align 0x4
.long 0x45F
L_180564:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_180562:
	movq $0x1BE5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x159,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x0(%rbp)
	addq $0x18,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x5AF
L_180625:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_180626
L_180627:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_180628+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_180628
.p2align 0x4
.long 0x45B
L_180628:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_180626:
	movq $0x1BEF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x159,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x0(%rbp)
	addq $0x18,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl tabulate_9
.hidden tabulate_9
tabulate_9:
L_180640:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_180641
L_180693:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_180694+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_180694
.p2align 0x4
.long 0x457
L_180694:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_180641:
	movslq 0x8(%rbp),%rdx
	movq %rdx,0x10(%rbp)
	testq %rdx,%rdx
	jz L_454876
L_180642:
	cmpq $0x7FFFFFFF,%rdx
	ja L_454875
L_180643:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x148B,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_180644+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_180644
.p2align 0x4
.long 0x452
L_180644:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq %rax,0x8(%rbp)
L_180645:
	movq $0x0,0x18(%rbp)
.p2align 0x4,,0x7
loop_1841:
	movq 0x18(%rbp),%r15
	cmpq 0x10(%rbp),%r15
	jnl L_454874
L_180647:
	movl %r15d,0x20(%rbp)
	movq 0x0(%rbp),%r15
	cmpq $0x1,%r15
	je L_454873
L_180648:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%rax
	shrq $0x1,%rax
	subq $0x1B96,%rax
	cmpq $0x9,%rax
	ja L_454858
	leaq jumpTable_606(%rip),%rbx
	jmp *(%rbx,%rax,8)
.data
.p2align 0x4
jumpTable_606:
.quad L_454872,L_454871,L_454870,L_454869,L_454867,L_454864,L_454863,L_454862,L_454861,L_454859
.text
.p2align 0x4
L_454858:
L_180649:
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r13
	movslq 0x20(%rbp),%r15
	salq $0x4,%r15
	movq 0x0(%r13,%r15,1),%r13
	movq %r13,%r15
.p2align 0x4,,0x7
L_180650:
	movq 0x8(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x18(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x18(%rbp)
	jmp loop_1841
.p2align 0x4
L_454859:
L_180686:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_180687
L_180688:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_180689+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_180689
.p2align 0x4
.long 0x495
L_180689:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_180687:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movslq 0x20(%rbp),%r13
	movq 0x10(%r15),%r11
	movq 0x0(%r11,%r13,8),%r10
	movq %r10,0x28(%rbp)
	movq 0x0(%r15),%r13
	movq 0x8(%r13),%r11
	movq 0x0(%r13),%r10
	movq $0xC65,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r10,0x0(%r15)
	movq %r11,0x8(%r15)
	movq %r14,0x10(%r15)
	movq %r15,0x30(%rbp)
	addq $0x20,%r12
	addq $0x28,%rbp
	leaq (L_180652+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3888
.p2align 0x4
L_454861:
L_180685:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movslq 0x20(%rbp),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r13,%r14,8),%r11
	movq %r11,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_180652+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3888
.p2align 0x4
L_454862:
L_180679:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x48(%rbp)
	movslq 0x20(%rbp),%r13
	movq 0x10(%r15),%r11
	movq 0x0(%r11,%r13,8),%r10
	movq %r10,0x40(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x30(%rbp)
	addq $0x40,%rbp
	leaq (L_180680+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3889
.p2align 0x4
L_454863:
L_180673:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x48(%rbp)
	movslq 0x20(%rbp),%r13
	movq 0x10(%r15),%r11
	movq 0x0(%r11,%r13,8),%r10
	movq %r10,0x40(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x30(%rbp)
	addq $0x40,%rbp
	leaq (L_180674+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3889
.p2align 0x4
L_454864:
L_180669:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movl 0x20(%rbp),%r15d
	cmpl $0x0,%r15d
	je L_454866
	cmpl $0x1,%r15d
	je L_454865
L_180670:
	movq (globalObjptr+0x4A8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_454865:
L_180672:
	movq %r13,%r15
	jmp L_180650
.p2align 0x4
L_454866:
	movq %r14,%r15
	jmp L_180650
.p2align 0x4
L_454867:
L_180666:
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_454868
L_180667:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r14,1)
	movq %r13,0x0(%r15)
	movq %r11,%r15
	jmp L_180650
.p2align 0x4
L_454868:
L_180668:
	movq (globalObjptr+0x4B0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_454869:
L_180660:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x48(%rbp)
	movslq 0x20(%rbp),%r13
	movq 0x10(%r15),%r11
	movq 0x0(%r11,%r13,8),%r10
	movq %r10,0x40(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x30(%rbp)
	addq $0x40,%rbp
	leaq (L_180661+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3889
.p2align 0x4
L_454870:
L_180654:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x48(%rbp)
	movslq 0x20(%rbp),%r13
	movq 0x10(%r15),%r11
	movq 0x0(%r11,%r13,8),%r10
	movq %r10,0x40(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x30(%rbp)
	addq $0x40,%rbp
	leaq (L_180655+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3889
.p2align 0x4
L_454871:
L_180653:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movslq 0x20(%rbp),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r13,%r14,8),%r11
	movq %r11,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_180652+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3888
.p2align 0x4
L_454872:
L_180651:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movslq 0x20(%rbp),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r13,%r14,8),%r11
	movq %r11,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_180652+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3888
.p2align 0x4
L_454873:
L_180690:
	movq (globalObjptr+0x4A0)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_454874:
L_180646:
	movq 0x8(%rbp),%r14
	movq $0x43F,0xFFFFFFFFFFFFFFF8(%r14)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_454875:
L_180691:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_454876:
L_180692:
	movq (globalObjptr+0xCC8)(%rip),%r15
	movq %r15,0x8(%rbp)
	jmp L_180645
.p2align 0x4
.long 0x5F8
L_180652:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	jmp L_180650
.p2align 0x4
.long 0x56E
L_180680:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x48(%rbp),%r14
	movq %r14,0x38(%rbp)
	movq %r15,0x48(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_180681+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp combineUp_0
.p2align 0x4
.long 0x56E
L_180674:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x48(%rbp),%r14
	movq %r14,0x38(%rbp)
	movq %r15,0x48(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_180675+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp combineUp_0
.p2align 0x4
.long 0x56E
L_180661:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x48(%rbp),%r14
	movq %r14,0x38(%rbp)
	movq %r15,0x48(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_180662+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp combineUp_0
.p2align 0x4
.long 0x56E
L_180655:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x48(%rbp),%r14
	movq %r14,0x38(%rbp)
	movq %r15,0x48(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_180656+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp combineUp_0
.p2align 0x4
.long 0xC73
L_180681:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_180682
L_180683:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_180684+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_180684
.p2align 0x4
.long 0xF85
L_180684:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_180682:
	movq $0xB55,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	movq 0x38(%rbp),%r15
	jmp L_180650
.p2align 0x4
.long 0xC73
L_180675:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_180676
L_180677:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_180678+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_180678
.p2align 0x4
.long 0xF85
L_180678:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_180676:
	movq $0xB55,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	movq 0x38(%rbp),%r15
	jmp L_180650
.p2align 0x4
.long 0xC73
L_180662:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_180663
L_180664:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_180665+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_180665
.p2align 0x4
.long 0xF85
L_180665:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_180663:
	movq $0xB55,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	movq 0x38(%rbp),%r15
	jmp L_180650
.p2align 0x4
.long 0xC73
L_180656:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_180657
L_180658:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_180659+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_180659
.p2align 0x4
.long 0xF85
L_180659:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_180657:
	movq $0xB55,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	movq 0x38(%rbp),%r15
	jmp L_180650
.text
.p2align 0x4
.globl loop_3889
.hidden loop_3889
loop_3889:
L_180695:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_180797
L_180696:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_454904
L_180697:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	cmpq $0x1,%r14
	je L_454903
L_180698:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%rax
	shrq $0x1,%rax
	subq $0xDF2,%rax
	cmpq $0x7,%rax
	ja L_454882
	leaq jumpTable_607(%rip),%rbx
	jmp *(%rbx,%rax,8)
.data
.p2align 0x4
jumpTable_607:
.quad L_454901,L_454892,L_454890,L_454888,L_454886,L_454885,L_454884,L_454883
.text
.p2align 0x4
L_454882:
L_180699:
	movq 0x0(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0x4EC0)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_454883:
L_180791:
	movq 0x8(%r14),%r15
	movq %r15,0x20(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x10(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_180792+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3889
.p2align 0x4
L_454884:
L_180790:
	movq 0x0(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0x4EC0)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_454885:
L_180780:
	movq 0x8(%r14),%r15
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x20(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_180781+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3889
.p2align 0x4
L_454886:
L_180773:
	movq 0x0(%r14),%r15
	movq $0xB57,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x10(%rbp)
	addq $0x10,%r12
	movq (globalObjptr+0x4EC0)(%rip),%r13
	movq %r13,0x0(%r14)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r10,%r13
	jne L_454887
L_180775:
	movl %r11d,0x28(%rbp)
	movq $0x3731,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x10(%r13)
	addq $0x20,%r12
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	movq %r13,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_180776+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_9
.p2align 0x4
L_454887:
L_180702:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_454888:
L_180760:
	movq 0x18(%r14),%r15
	movq %r15,0x10(%rbp)
	movq 0x10(%r14),%r15
	movq %r15,0x18(%rbp)
	movb 0x0(%r14),%r15b
	movb %r15b,0x20(%rbp)
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_454889
L_180761:
	movq %r15,0x30(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_180762+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3885
.p2align 0x4
L_454889:
L_180772:
	movq (globalObjptr+0x4EC0)(%rip),%r15
	movq %r15,0x28(%rbp)
	movq $0x1,0x30(%rbp)
L_180763:
	movq 0x18(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_180764+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3889
.p2align 0x4
L_454890:
L_180753:
	movq 0x0(%r14),%r15
	movq $0xB57,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x10(%rbp)
	addq $0x10,%r12
	movq (globalObjptr+0x4EC0)(%rip),%r13
	movq %r13,0x0(%r14)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r13,%r10
	jne L_180702
L_180755:
	movl %r11d,0x28(%rbp)
	movq $0x3739,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x10(%r13)
	addq $0x20,%r12
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	movq %r13,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_180756+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_9
.p2align 0x4
L_454892:
L_180708:
	movq 0x8(%r14),%r15
	movl 0x0(%r14),%r13d
	movl %r13d,0x18(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	movq %r11,0x20(%rbp)
	cmpq %r14,%r11
	movq %r15,0x10(%rbp)
	jne L_180702
L_180710:
	testq %r11,%r11
	jz L_454899
L_180711:
	cmpq $0x7FFFFFFF,%r11
	ja L_454898
L_180712:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_180713
L_180749:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_180750+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_180750
.p2align 0x4
.long 0x6FE
L_180750:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_180713:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1587,%rcx
	movq 0x20(%rbp),%rdx
	movq $0x48,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_180714+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_180714
.p2align 0x4
.long 0x6FE
L_180714:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq %rax,0x28(%rbp)
L_180715:
	movq $0x1,%r14
	movq $0x1,%r15
	movq $0x0,0x30(%rbp)
loop_1842:
	movq $0xB55,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x38(%rbp)
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	cmpq %r15,0x30(%rbp)
	jl L_454893
L_180716:
	movq 0x28(%rbp),%r15
	movq $0xB23,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x1BE7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movl 0x18(%rbp),%r11d
	movl %r11d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq %r15,0x8(%r14)
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r11
	movq $0x159,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r15,0x8(%rbp)
	addq $0x18,%r12
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_454893:
L_180717:
	movq 0x30(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq %r15,%r14
	salq $0x4,%r14
	movq 0x10(%rbp),%r11
	movq 0x0(%r11,%r14,1),%r10
	salq $0x4,%r15
	movq 0x8(%r11,%r15,1),%r14
	movq %r14,0x40(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r15
	shrq $0x1,%r15
	cmpq $0x107D,%r15
	je L_454894
L_180744:
	movq 0x0(%r10),%r15
	movq %r15,0x50(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_180745+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3889
.p2align 0x4
L_454894:
L_180718:
	movq 0x10(%r10),%r15
	movq %r15,0x48(%rbp)
	movq 0x8(%r10),%r15
	movq 0x0(%r10),%r14
	movq %r14,0x50(%rbp)
	cmpq $0x1,%r15
	je L_454895
L_180719:
	movq %r15,0x60(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_180720+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3885
.p2align 0x4
L_454895:
L_180741:
	movq 0x48(%rbp),%r15
	cmpq $0x1,%r15
	je L_454896
L_180742:
	movq (globalObjptr+0x4EC0)(%rip),%r14
	movq %r14,0x48(%rbp)
	movq $0x1,0x58(%rbp)
L_180723:
	movq %r15,0x68(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_180724+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3889
.p2align 0x4
L_454896:
L_180743:
	movq (globalObjptr+0x4EC0)(%rip),%r14
	movq %r14,%r10
	movq $0x1,%r11
	movq $0x1,%r9
	xchgq %r14,%r15
	xchgq %r10,%r14
	xchgq %r9,%r13
L_180726:
	movq %r14,0x58(%rbp)
	movq %r15,0x60(%rbp)
	movq $0x20FB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x48(%rbp)
	movq %r13,0x8(%r15)
	movq %r11,0x10(%r15)
	addq $0x20,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	addq $0x58,%rbp
	leaq (L_180727+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp combineUp_0
.p2align 0x4
L_454898:
L_180751:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_454899:
L_180752:
	movq (globalObjptr+0x4EE0)(%rip),%r15
	movq %r15,0x28(%rbp)
	jmp L_180715
.p2align 0x4
L_454901:
L_180700:
	movq 0x0(%r14),%r15
	movq $0xB57,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x10(%rbp)
	addq $0x10,%r12
	movq (globalObjptr+0x4EC0)(%rip),%r13
	movq %r13,0x0(%r14)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r13,%r10
	jne L_180702
L_180703:
	movl %r11d,0x28(%rbp)
	movq $0x3733,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x10(%r13)
	addq $0x20,%r12
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	movq %r13,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_180704+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_9
.p2align 0x4
L_454903:
L_180796:
	movq 0x0(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0x4EC0)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_454904:
L_180797:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_180798+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_180798
.p2align 0x4
.long 0x45F
L_180798:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_180697
.p2align 0x4
.long 0x788
L_180792:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_180793
L_180794:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_180795+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_180795
.p2align 0x4
.long 0x4AE
L_180795:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_180793:
	movq $0x1BF3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x159,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x51E
L_180781:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_180782+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3885
.p2align 0x4
.long 0x788
L_180776:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_180777
L_180778:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_180779+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_180779
.p2align 0x4
.long 0x45B
L_180779:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_180777:
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x1BED,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x0(%rbp),%r13
	movq 0x0(%r13),%r11
	movq %r14,0x0(%rbp)
	movq $0x159,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r11,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x8(%rbp)
	addq $0x18,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x24B0
L_180762:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	jmp L_180763
.p2align 0x4
.long 0x24B1
L_180764:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_180765
L_180770:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_180771+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_180771
.p2align 0x4
.long 0x645
L_180771:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_180765:
	movq $0x1BEB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x28,%r12
	movzbl 0x20(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x159,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x38(%rbp)
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x8(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_180766+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp combineUp_0
.p2align 0x4
.long 0x788
L_180756:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_180757
L_180758:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_180759+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_180759
.p2align 0x4
.long 0x45B
L_180759:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_180757:
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x1BE9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x0(%rbp),%r13
	movq 0x0(%r13),%r11
	movq %r14,0x0(%rbp)
	movq $0x159,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r11,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x8(%rbp)
	addq $0x18,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x113B
L_180745:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_180746
L_180747:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_180748+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_180748
.p2align 0x4
.long 0x1192
L_180748:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_180746:
	movq $0x20FD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r15,0x48(%rbp)
	movq %r14,%r15
L_180729:
	movq %r15,0x58(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_180730+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp combineUp_0
.p2align 0x4
.long 0x113D
L_180720:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_180721
L_180739:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_180740+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_180740
.p2align 0x4
.long 0x24AF
L_180740:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_180721:
	movq 0x48(%rbp),%r15
	cmpq $0x1,%r15
	je L_454911
L_180722:
	movq 0x58(%rbp),%r14
	movq %r14,0x48(%rbp)
	movq 0x60(%rbp),%r14
	movq %r14,0x58(%rbp)
	jmp L_180723
.p2align 0x4
L_454911:
L_180738:
	movq (globalObjptr+0x4EC0)(%rip),%r14
	movq $0x1,%r11
	movq 0x58(%rbp),%r10
	movq 0x60(%rbp),%r13
	xchgq %r10,%r15
	jmp L_180726
.p2align 0x4
.long 0x24AC
L_180724:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_180725
L_180736:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_180737+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_180737
.p2align 0x4
.long 0x1A88
L_180737:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_180725:
	movq 0x60(%rbp),%r14
	movq 0x68(%rbp),%r11
	movq 0x48(%rbp),%r15
	movq 0x58(%rbp),%r13
	jmp L_180726
.p2align 0x4
.long 0x1134
L_180727:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_180728
L_180734:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_180735+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_180735
.p2align 0x4
.long 0x24AE
L_180735:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_180728:
	movq $0xB55,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_180729
.p2align 0x4
.long 0x788
L_180704:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_180705
L_180706:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_180707+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_180707
.p2align 0x4
.long 0x45B
L_180707:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_180705:
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x1BE5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x0(%rbp),%r13
	movq 0x0(%r13),%r11
	movq %r14,0x0(%rbp)
	movq $0x159,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r11,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x8(%rbp)
	addq $0x18,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x458
L_180782:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_180783
L_180788:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_180789+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_180789
.p2align 0x4
.long 0x63C
L_180789:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_180783:
	movq $0x1BEF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x159,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x28(%rbp)
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x8(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_180784+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp combineUp_0
.p2align 0x4
.long 0x78B
L_180766:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_180767
L_180768:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_180769+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_180769
.p2align 0x4
.long 0x78E
L_180769:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_180767:
	movq $0xB55,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x0(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x24AD
L_180730:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_180731
L_180732:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_180733+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_180733
.p2align 0x4
.long 0x1192
L_180733:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_180731:
	movq 0x28(%rbp),%r13
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq 0x30(%rbp),%r10
	movq %r10,%r15
	salq $0x4,%r15
	movq 0x48(%rbp),%r9
	movq %r9,0x0(%r13,%r15,1)
	movq %r13,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%r11,%r15,1)
	movq %r10,%r15
	salq $0x4,%r15
	movq 0x40(%rbp),%r11
	movq %r11,0x8(%r13,%r15,1)
	incq %r10
	movq %r10,0x30(%rbp)
	movq 0x38(%rbp),%r14
	movq 0x50(%rbp),%r15
	jmp loop_1842
.p2align 0x4
.long 0x51A
L_180784:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_180785
L_180786:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_180787+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_180787
.p2align 0x4
.long 0x489
L_180787:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_180785:
	movq $0xB55,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x0(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl loopDec_0
.hidden loopDec_0
loopDec_0:
L_180799:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_181140
L_180800:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_454969
L_180801:
	movq 0x10(%rbp),%r15
	movq 0x28(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r13
	movq %r13,0x30(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x38(%rbp)
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%rax
	shrq $0x1,%rax
	subq $0xE0E,%rax
	cmpq $0x9,%rax
	ja L_454920
	leaq jumpTable_608(%rip),%rbx
	jmp *(%rbx,%rax,8)
.data
.p2align 0x4
jumpTable_608:
.quad L_454963,L_454957,L_454953,L_454952,L_454951,L_454947,L_454946,L_454937,L_454925,L_454924
.text
.p2align 0x4
L_454920:
L_180802:
	movq 0x10(%r13),%r15
	movq %r15,0x18(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x20(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x40(%rbp)
	movq 0x0(%rbp),%r15
	cmpq $0x1,%r15
	je L_454923
L_180803:
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movq $0x1,0x58(%rbp)
.p2align 0x4,,0x7
L_180804:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_454922
.p2align 0x4,,0x7
L_180805:
	movq 0x50(%rbp),%r15
	movq 0x8(%r15),%r14
	movq $0x20ED,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_454921
L_180806:
	movq %r15,0x58(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	movq %r15,0x50(%rbp)
	jmp L_180804
.p2align 0x4
L_454921:
L_180807:
L_180808:
	movq $0x321D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x50(%rbp)
	addq $0x10,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_180809+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp keepAllMapi_0
.p2align 0x4
L_454922:
L_180875:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_180876+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_180876
.p2align 0x4
.long 0x809
L_180876:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	jmp L_180805
.p2align 0x4
L_454923:
L_180877:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_180808
.p2align 0x4
L_454924:
L_181080:
	movq 0x8(%r13),%r15
	movq %r15,0x20(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x38(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x30,%rbp
	leaq (L_181081+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loopDec_0
.p2align 0x4
L_454925:
L_181021:
	movq 0x0(%r13),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x129D,%r14
	je L_181023
L_181024:
	movq 0x0(%r15),%r14
	movq 0x18(%rbp),%r15
	movq 0x10(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x28(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x30(%rbp)
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x38(%rbp)
	movq 0x8(%r15),%r13
	movq %r14,0x10(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movl %r15d,%r14d
	movslq %r14d,%r11
	movq %r11,0x48(%rbp)
	cmpq %r11,%r15
	movq %r13,0x40(%rbp)
	jne L_180813
L_181026:
	testq %r11,%r11
	jz L_454934
L_181027:
	cmpq $0x7FFFFFFF,%r11
	ja L_180841
L_181028:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_181029
L_181076:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_181077+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_181077
.p2align 0x4
.long 0x24CF
L_181077:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_181029:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x158B,%rcx
	movq 0x48(%rbp),%rdx
	movq $0x80,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_181030+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_181030
.p2align 0x4
.long 0x24CF
L_181030:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq %rax,0x18(%rbp)
L_181031:
	movq $0x0,0x50(%rbp)
loop_1851:
	movq 0x48(%rbp),%r15
	cmpq %r15,0x50(%rbp)
	jl L_454931
L_181032:
	movq 0x18(%rbp),%r15
	movq $0x11B9,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x30(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x38(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	movq %r11,0x48(%rbp)
	cmpq %r11,%r15
	movq %r14,0x40(%rbp)
	jne L_454930
L_181034:
	testq %r11,%r11
	jz L_454929
L_181035:
	cmpq $0x7FFFFFFF,%r11
	ja L_454928
L_181036:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_181037
L_181050:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_181051+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_181051
.p2align 0x4
.long 0x24D0
L_181051:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_181037:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1585,%rcx
	movq 0x48(%rbp),%rdx
	movq $0x80,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_181038+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_181038
.p2align 0x4
.long 0x24D0
L_181038:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq %rax,0x30(%rbp)
L_181039:
	movq $0x0,0x50(%rbp)
loop_1852:
	movq 0x48(%rbp),%r14
	cmpq %r14,0x50(%rbp)
	jl L_454926
L_181040:
	movq 0x30(%rbp),%r14
	movq $0x3A5,0xFFFFFFFFFFFFFFF8(%r14)
	movq 0x38(%rbp),%r13
	movq 0x0(%r13),%r15
	movq $0x3A7,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x18,%r12
	movq %r14,0x8(%r13)
	movq $0x11BB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x11BD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq $0x253D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
L_181023:
	movq $0x1C2D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r13
	movq $0x155,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r15,0x0(%rbp)
	addq $0x18,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_454926:
L_181041:
	movq 0x50(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x40(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x70(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x58(%rbp)
	movq 0x10(%r13),%r11
	movq %r11,0x60(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x70,%rbp
	leaq (L_181042+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp rename_0
.p2align 0x4
L_454928:
L_180841:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_454929:
L_181053:
	movq (globalObjptr+0x4F20)(%rip),%r15
	movq %r15,0x30(%rbp)
	jmp L_181039
.p2align 0x4
L_454930:
L_180813:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_454931:
L_181054:
	movq 0x50(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x40(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x70(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x58(%rbp)
	movq 0x10(%r13),%r11
	movq %r11,0x60(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x70,%rbp
	leaq (L_181055+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp rename_0
.p2align 0x4
L_454934:
L_181079:
	movq (globalObjptr+0x4F28)(%rip),%r15
	movq %r15,0x18(%rbp)
	jmp L_181031
.p2align 0x4
L_454937:
L_180997:
	movq 0x0(%r13),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x18(%rbp)
	cmpq %r14,%rdx
	movq %r15,0x10(%rbp)
	jne L_180813
L_180999:
	testq %rdx,%rdx
	jz L_454944
L_181000:
	cmpq $0x7FFFFFFF,%rdx
	ja L_180841
L_181001:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x158F,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_181002+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_181002
.p2align 0x4
.long 0xFED
L_181002:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq %rax,0x28(%rbp)
L_181003:
	movq $0x0,0x30(%rbp)
.p2align 0x4,,0x7
loop_1850:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_454942
.p2align 0x4,,0x7
L_181004:
	movq 0x30(%rbp),%r15
	cmpq 0x18(%rbp),%r15
	jnl L_454941
L_181006:
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x10(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x38(%rbp)
	movq 0x8(%r13),%r10
	movq %r10,0x40(%rbp)
	movq 0x8(%r11),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1297,%r14
	jne L_454940
L_181007:
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	jne L_454939
L_181015:
	movq $0x1,0x48(%rbp)
.p2align 0x4,,0x7
L_181010:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_454938
.p2align 0x4,,0x7
L_181011:
	movq $0x252F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x10C3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq %r14,%r15
L_181012:
	movq $0x10C5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x40(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x28(%rbp),%r15
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x30(%rbp),%r13
	movq %r14,0x0(%r15,%r13,8)
	incq %r13
	movq %r13,0x30(%rbp)
	jmp loop_1850
.p2align 0x4
L_454938:
L_181013:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_181014+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_181014
.p2align 0x4
.long 0x24CD
L_181014:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	jmp L_181011
.p2align 0x4
L_454939:
L_181008:
	movq %r14,0x50(%rbp)
	movq $0xB53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_181009+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3884
.p2align 0x4
L_454940:
L_181016:
	movq 0x38(%rbp),%r15
	jmp L_181012
.p2align 0x4
L_454941:
L_181005:
	movq 0x28(%rbp),%r14
	movq $0x12E7,0xFFFFFFFFFFFFFFF8(%r14)
	movq $0x1C2B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq %r14,0x0(%r13)
	movq 0x8(%rbp),%r14
	movq 0x0(%r14),%r11
	movq $0x155,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r11,0x0(%r14)
	movq %r13,0x8(%r14)
	movq %r14,0x0(%rbp)
	addq $0x18,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_454942:
L_181017:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_181018+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_181018
.p2align 0x4
.long 0x24CE
L_181018:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_181004
.p2align 0x4
L_454944:
L_181020:
	movq (globalObjptr+0x4F70)(%rip),%r15
	movq %r15,0x28(%rbp)
	jmp L_181003
.p2align 0x4
L_454946:
L_180996:
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_454947:
L_180944:
	movq 0x8(%r13),%r15
	movq %r15,0x18(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x40(%rbp)
	movq 0x0(%rbp),%r15
	cmpq $0x1,%r15
	je L_454950
L_180945:
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movq $0x1,0x58(%rbp)
.p2align 0x4,,0x7
L_180946:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_454949
.p2align 0x4,,0x7
L_180947:
	movq 0x50(%rbp),%r15
	movq 0x8(%r15),%r14
	movq $0x20ED,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_454948
L_180948:
	movq %r15,0x58(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	movq %r15,0x50(%rbp)
	jmp L_180946
.p2align 0x4
L_454948:
L_180949:
L_180950:
	movq $0x321D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x48(%rbp)
	addq $0x10,%r12
	movq 0x40(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_180951+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp keepAllMapi_0
.p2align 0x4
L_454949:
L_180993:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_180994+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_180994
.p2align 0x4
.long 0x809
L_180994:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	jmp L_180947
.p2align 0x4
L_454950:
L_180995:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_180950
.p2align 0x4
L_454951:
L_180938:
	movq 0x8(%r13),%r15
	movq %r15,0x18(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x30(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x28,%rbp
	leaq (L_180939+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loopDec_0
.p2align 0x4
L_454952:
L_180937:
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_454953:
L_180918:
	movq 0x20(%r13),%r15
	movq %r15,0x10(%rbp)
	movq 0x18(%r13),%r15
	movq %r15,0x18(%rbp)
	movq 0x10(%r13),%r15
	movq %r15,0x20(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x38(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x40(%rbp)
	movq 0x0(%rbp),%r15
	cmpq $0x1,%r15
	je L_454956
L_180919:
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movq $0x1,0x58(%rbp)
.p2align 0x4,,0x7
L_180920:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_454955
.p2align 0x4,,0x7
L_180921:
	movq 0x50(%rbp),%r15
	movq 0x8(%r15),%r14
	movq $0x20ED,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_454954
L_180922:
	movq %r15,0x58(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	movq %r15,0x50(%rbp)
	jmp L_180920
.p2align 0x4
L_454954:
L_180923:
L_180924:
	movq $0x321D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x50(%rbp)
	addq $0x10,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_180925+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp keepAllMapi_0
.p2align 0x4
L_454955:
L_180934:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_180935+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_180935
.p2align 0x4
.long 0x24C4
L_180935:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	jmp L_180921
.p2align 0x4
L_454956:
L_180936:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_180924
.p2align 0x4
L_454957:
L_180900:
	movq 0x0(%r13),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	movq %r11,0x20(%rbp)
	cmpq %r11,%r14
	movq %r15,0x18(%rbp)
	jne L_180813
L_180902:
	testq %r11,%r11
	jz L_454961
L_180903:
	cmpq $0x7FFFFFFF,%r11
	ja L_180841
L_180904:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_180905
L_180914:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_180915+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_180915
.p2align 0x4
.long 0x4DF
L_180915:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_180905:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x143D,%rcx
	movq 0x20(%rbp),%rdx
	movq $0x28,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_180906+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_180906
.p2align 0x4
.long 0x4DF
L_180906:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq %rax,0x28(%rbp)
L_180907:
	movq $0x0,0x30(%rbp)
loop_1847:
	movq 0x20(%rbp),%r15
	cmpq %r15,0x30(%rbp)
	jl L_454958
L_180908:
	movq 0x28(%rbp),%r15
	movq $0xB1B,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x1C1F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r13
	movq $0x155,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r15,0x0(%rbp)
	addq $0x18,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_454958:
L_180909:
	movq 0x30(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x18(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x48(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x40,%rbp
	leaq (L_180910+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loopDec_0
.p2align 0x4
L_454961:
L_180917:
	movq (globalObjptr+0x4F58)(%rip),%r15
	movq %r15,0x28(%rbp)
	jmp L_180907
.p2align 0x4
L_454963:
L_180878:
	movq 0x0(%r13),%r15
	movq 0x8(%r14),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x20(%rbp)
	movq 0x8(%r15),%r14
	movq %r15,0x10(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	movq %r11,0x30(%rbp)
	cmpq %r11,%r15
	movq %r14,0x28(%rbp)
	jne L_180813
L_180880:
	testq %r11,%r11
	jz L_454967
L_180881:
	cmpq $0x7FFFFFFF,%r11
	ja L_180841
L_180882:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_180883
L_180896:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_180897+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_180897
.p2align 0x4
.long 0x5F6
L_180897:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_180883:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1585,%rcx
	movq 0x30(%rbp),%rdx
	movq $0x40,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_180884+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_180884
.p2align 0x4
.long 0x5F6
L_180884:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq %rax,0x38(%rbp)
L_180885:
	movq $0x0,0x40(%rbp)
loop_1846:
	movq 0x30(%rbp),%r15
	cmpq %r15,0x40(%rbp)
	jl L_454964
L_180886:
	movq 0x38(%rbp),%r15
	movq $0x3A5,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x10(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x3A7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	addq $0x18,%r12
	movq %r15,0x8(%r14)
	movq $0x1C1D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq 0x8(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x155,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x0(%rbp)
	addq $0x18,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_454964:
L_180887:
	movq 0x40(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x28(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x60(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x48(%rbp)
	movq 0x10(%r13),%r11
	movq %r11,0x50(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x60,%rbp
	leaq (L_180888+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp rename_0
.p2align 0x4
L_454967:
L_180899:
	movq (globalObjptr+0x4F20)(%rip),%r15
	movq %r15,0x38(%rbp)
	jmp L_180885
.p2align 0x4
L_454969:
L_181140:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_181141+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_181141
.p2align 0x4
.long 0x45B
L_181141:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_180801
.p2align 0x4
.long 0x102A
L_180809:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq %r15,0x50(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x50,%rbp
	leaq (L_180810+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp rename_0
.p2align 0x4
.long 0x556
L_181081:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_181082
L_181138:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_181139+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_181139
.p2align 0x4
.long 0x63C
L_181139:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_181082:
	movq 0x18(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x20(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x40(%rbp)
	movq 0x8(%r14),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movl %r15d,%r14d
	movslq %r14d,%r11
	movq %r11,0x50(%rbp)
	cmpq %r11,%r15
	movq %r13,0x48(%rbp)
	jne L_180813
L_181084:
	testq %r11,%r11
	jz L_454979
L_181085:
	cmpq $0x7FFFFFFF,%r11
	ja L_180841
L_181086:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_181087
L_181134:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_181135+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_181135
.p2align 0x4
.long 0x24D8
L_181135:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_181087:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x158B,%rcx
	movq 0x50(%rbp),%rdx
	movq $0x78,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_181088+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_181088
.p2align 0x4
.long 0x24D8
L_181088:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq %rax,0x18(%rbp)
L_181089:
	movq $0x0,0x58(%rbp)
loop_1854:
	movq 0x50(%rbp),%r15
	cmpq %r15,0x58(%rbp)
	jl L_454976
L_181090:
	movq 0x18(%rbp),%r15
	movq $0x11B9,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x38(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x40(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	movq %r11,0x50(%rbp)
	cmpq %r11,%r15
	movq %r14,0x48(%rbp)
	jne L_180813
L_181092:
	testq %r11,%r11
	jz L_454974
L_181093:
	cmpq $0x7FFFFFFF,%r11
	ja L_180841
L_181094:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_181095
L_181108:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_181109+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_181109
.p2align 0x4
.long 0x24D9
L_181109:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_181095:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1585,%rcx
	movq 0x50(%rbp),%rdx
	movq $0x78,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_181096+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_181096
.p2align 0x4
.long 0x24D9
L_181096:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq %rax,0x38(%rbp)
L_181097:
	movq $0x0,0x58(%rbp)
loop_1855:
	movq 0x50(%rbp),%r15
	cmpq %r15,0x58(%rbp)
	jl L_454971
L_181098:
	movq 0x38(%rbp),%r15
	movq $0x3A5,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x40(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x3A7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	addq $0x18,%r12
	movq %r15,0x8(%r14)
	movq $0x11BB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x11BD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq $0x1C2F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x8(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x155,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x0(%rbp)
	addq $0x18,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_454971:
L_181099:
	movq 0x58(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x48(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x78(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x60(%rbp)
	movq 0x10(%r13),%r11
	movq %r11,0x68(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x78,%rbp
	leaq (L_181100+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp rename_0
.p2align 0x4
L_454974:
L_181111:
	movq (globalObjptr+0x4F20)(%rip),%r15
	movq %r15,0x38(%rbp)
	jmp L_181097
.p2align 0x4
L_454976:
L_181112:
	movq 0x58(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x48(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x78(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x60(%rbp)
	movq 0x10(%r13),%r11
	movq %r11,0x68(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x78,%rbp
	leaq (L_181113+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp rename_0
.p2align 0x4
L_454979:
L_181137:
	movq (globalObjptr+0x4F28)(%rip),%r15
	movq %r15,0x18(%rbp)
	jmp L_181089
.p2align 0x4
.long 0x24D1
L_181042:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x70(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_181043
L_181048:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_181049+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_181049
.p2align 0x4
.long 0x24D3
L_181049:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_181043:
	movq $0xB53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x80(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_181044+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3884
.p2align 0x4
.long 0x24D1
L_181055:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x78(%rbp),%rdx
	movq %rdx,0x70(%rbp)
	movq 0x60(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x78(%rbp)
	cmpq %r14,%rdx
	jne L_180813
L_181057:
	testq %rdx,%rdx
	jz L_454988
L_181058:
	cmpq $0x7FFFFFFF,%rdx
	ja L_180841
L_181059:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x149B,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_181060+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_181060
.p2align 0x4
.long 0x24D4
L_181060:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq %rax,0x80(%rbp)
L_181061:
	movq $0x0,0x88(%rbp)
.p2align 0x4,,0x7
loop_1853:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_454986
.p2align 0x4,,0x7
L_181062:
	movq 0x88(%rbp),%r15
	cmpq 0x78(%rbp),%r15
	jnl L_454985
L_181064:
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x60(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x0(%r13),%r11
	movq 0x8(%r13),%r10
	movq %r10,0x90(%rbp)
	cmpq $0x1,%r11
	jne L_454984
L_181071:
	movq $0x1,0x98(%rbp)
.p2align 0x4,,0x7
L_181067:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_454983
.p2align 0x4,,0x7
L_181068:
	movq $0x10D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x98(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x90(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x80(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x88(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x88(%rbp)
	jmp loop_1853
.p2align 0x4
L_454983:
L_181069:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_181070+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_181070
.p2align 0x4
.long 0x24D6
L_181070:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	jmp L_181068
.p2align 0x4
L_454984:
L_181065:
	movq %r11,0xA0(%rbp)
	movq $0xB53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0xA8(%rbp)
	addq $0xA0,%rbp
	leaq (L_181066+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3884
.p2align 0x4
L_454985:
L_181063:
	movq 0x80(%rbp),%r14
	movq $0xB1D,0xFFFFFFFFFFFFFFF8(%r14)
	movq $0x10C1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x20,%r12
	movq 0x68(%rbp),%r11
	movq %r11,0x0(%r13)
	movq 0x58(%rbp),%r11
	movq %r11,0x8(%r13)
	movq %r14,0x10(%r13)
	movq 0x18(%rbp),%r14
	movq %r14,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq 0x50(%rbp),%r11
	movq %r13,0x0(%r14,%r11,8)
	incq %r11
	movq %r11,0x50(%rbp)
	jmp loop_1851
.p2align 0x4
L_454986:
L_181072:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_181073+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_181073
.p2align 0x4
.long 0x24D7
L_181073:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	jmp L_181062
.p2align 0x4
L_454988:
L_181075:
	movq (globalObjptr+0x4F30)(%rip),%r15
	movq %r15,0x80(%rbp)
	jmp L_181061
.p2align 0x4
.long 0x24CC
L_181009:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	jmp L_181010
.p2align 0x4
.long 0x636
L_180951:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq %r15,0x48(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x48,%rbp
	leaq (L_180952+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp rename_0
.p2align 0x4
.long 0x65B
L_180939:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x30,%rbp
	leaq (L_180940+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loopDec_0
.p2align 0x4
.long 0x24C0
L_180925:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq %r15,0x50(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x50,%rbp
	leaq (L_180926+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp rename_0
.p2align 0x4
.long 0x1027
L_180910:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_180911
L_180912:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_180913+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_180913
.p2align 0x4
.long 0x24BF
L_180913:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_180911:
	movq 0x28(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x30(%rbp),%r14
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r15,%r14,8)
	incq %r14
	movq %r14,0x30(%rbp)
	jmp loop_1847
.p2align 0x4
.long 0x24BB
L_180888:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_180889
L_180894:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_180895+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_180895
.p2align 0x4
.long 0x24BE
L_180895:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_180889:
	movq $0xB53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x70(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_180890+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3884
.p2align 0x4
.long 0x24B2
L_180810:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_180811
L_180873:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_180874+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_180874
.p2align 0x4
.long 0x4EF
L_180874:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_180811:
	movq 0x40(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	movq %r11,0x48(%rbp)
	cmpq %r11,%r14
	jne L_180813
L_180814:
	testq %r11,%r11
	jz L_455005
L_180815:
	cmpq $0x7FFFFFFF,%r11
	ja L_180841
L_180816:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_180817
L_180869:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_180870+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_180870
.p2align 0x4
.long 0xA9D
L_180870:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_180817:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14FB,%rcx
	movq 0x48(%rbp),%rdx
	movq $0x40,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_180818+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_180818
.p2align 0x4
.long 0xA9D
L_180818:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq %rax,0x50(%rbp)
L_180819:
	movq $0x0,0x58(%rbp)
loop_1843:
	movq 0x48(%rbp),%r15
	cmpq %r15,0x58(%rbp)
	jl L_454997
L_180820:
	movq 0x50(%rbp),%r15
	movq $0xB2D,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x18(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	movq %r11,0x40(%rbp)
	cmpq %r11,%r14
	jne L_180813
L_180822:
	testq %r11,%r11
	jz L_454995
L_180823:
	cmpq $0x7FFFFFFF,%r11
	ja L_180841
L_180824:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_180825
L_180838:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_180839+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_180839
.p2align 0x4
.long 0x2343
L_180839:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_180825:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x158D,%rcx
	movq 0x40(%rbp),%rdx
	movq $0x40,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_180826+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_180826
.p2align 0x4
.long 0x2343
L_180826:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq %rax,0x48(%rbp)
L_180827:
	movq $0x0,0x58(%rbp)
loop_1844:
	movq 0x40(%rbp),%r15
	cmpq %r15,0x58(%rbp)
	jl L_454992
L_180828:
	movq 0x48(%rbp),%r15
	movq $0xB2B,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x1C1B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x20,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x20(%rbp),%r13
	movq %r13,0x8(%r14)
	movq %r15,0x10(%r14)
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r13
	movq $0x155,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r15,0x0(%rbp)
	addq $0x18,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_454992:
L_180829:
	movq 0x58(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq %r15,%r14
	salq $0x4,%r14
	movq 0x18(%rbp),%r13
	movq 0x0(%r13,%r14,1),%r11
	movq %r11,0x60(%rbp)
	salq $0x4,%r15
	movq 0x8(%r13,%r15,1),%r14
	movq %r14,0x70(%rbp)
	movq $0xB7F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r13
	movq %r13,0x8(%r15)
	movq $0xB81,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x18(%r11)
	addq $0x28,%r12
	movq %r13,0x0(%r11)
	movq 0x30(%rbp),%r15
	movq %r15,0x8(%r11)
	movq %r14,0x10(%r11)
	movq %r11,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_180830+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3886
.p2align 0x4
L_454995:
L_180842:
	movq (globalObjptr+0x4F50)(%rip),%r15
	movq %r15,0x48(%rbp)
	jmp L_180827
.p2align 0x4
L_454997:
L_180843:
	movq 0x58(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq %r15,%r14
	salq $0x4,%r14
	movq 0x40(%rbp),%r13
	movq 0x0(%r13,%r14,1),%r11
	movq %r11,0x60(%rbp)
	salq $0x4,%r15
	movq 0x8(%r13,%r15,1),%r14
	movq 0x0(%r14),%r11
	movq %r11,0x68(%rbp)
	movq 0x8(%r14),%r11
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r15
	movl %r15d,%r14d
	movslq %r14d,%r13
	movq %r13,0x78(%rbp)
	cmpq %r15,%r13
	movq %r11,0x70(%rbp)
	jne L_180813
L_180845:
	testq %r13,%r13
	jz L_455001
L_180846:
	cmpq $0x7FFFFFFF,%r13
	ja L_180841
L_180847:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_180848
L_180865:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_180866+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_180866
.p2align 0x4
.long 0x24B5
L_180866:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_180848:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1589,%rcx
	movq 0x78(%rbp),%rdx
	movq $0x38,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_180849+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_180849
.p2align 0x4
.long 0x24B5
L_180849:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq %rax,0x80(%rbp)
L_180850:
	movq $0x0,0x88(%rbp)
loop_1845:
	movq 0x78(%rbp),%r15
	cmpq %r15,0x88(%rbp)
	jl L_454998
L_180851:
	movq 0x80(%rbp),%r15
	movq $0xB19,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x10CB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x70(%rbp)
	addq $0x18,%r12
	movq 0x68(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq 0x38(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq $0xC65,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	addq $0x20,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0x88(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_180852+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3888
.p2align 0x4
L_454998:
L_180856:
	movq 0x88(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq %r15,%r14
	salq $0x4,%r14
	movq 0x70(%rbp),%r13
	movq 0x0(%r13,%r14,1),%r11
	movq %r11,0x90(%rbp)
	salq $0x4,%r15
	movq 0x8(%r13,%r15,1),%r14
	movq %r14,0xA0(%rbp)
	movq 0x38(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq $0xC65,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	addq $0x20,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0xA8(%rbp)
	addq $0xA0,%rbp
	leaq (L_180857+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3888
.p2align 0x4
L_455001:
L_180868:
	movq (globalObjptr+0x4F40)(%rip),%r15
	movq %r15,0x80(%rbp)
	jmp L_180850
.p2align 0x4
L_455005:
L_180872:
	movq (globalObjptr+0x4F48)(%rip),%r15
	movq %r15,0x50(%rbp)
	jmp L_180819
.p2align 0x4
.long 0x24DA
L_181100:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x78(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_181101
L_181106:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_181107+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_181107
.p2align 0x4
.long 0x24DD
L_181107:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_181101:
	movq $0xB53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x88(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_181102+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3884
.p2align 0x4
.long 0x24DA
L_181113:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x80(%rbp),%rdx
	movq %rdx,0x78(%rbp)
	movq 0x68(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x80(%rbp)
	cmpq %r14,%rdx
	jne L_180813
L_181115:
	testq %rdx,%rdx
	jz L_455014
L_181116:
	cmpq $0x7FFFFFFF,%rdx
	ja L_180841
L_181117:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x149B,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_181118+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_181118
.p2align 0x4
.long 0x24DE
L_181118:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq %rax,0x88(%rbp)
L_181119:
	movq $0x0,0x90(%rbp)
.p2align 0x4,,0x7
loop_1856:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_455012
.p2align 0x4,,0x7
L_181120:
	movq 0x90(%rbp),%r15
	cmpq 0x80(%rbp),%r15
	jnl L_455011
L_181122:
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x68(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x0(%r13),%r11
	movq 0x8(%r13),%r10
	movq %r10,0x98(%rbp)
	cmpq $0x1,%r11
	jne L_455010
L_181129:
	movq $0x1,0xA0(%rbp)
.p2align 0x4,,0x7
L_181125:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_455009
.p2align 0x4,,0x7
L_181126:
	movq $0x10D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xA0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x98(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x88(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x90(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x90(%rbp)
	jmp loop_1856
.p2align 0x4
L_455009:
L_181127:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_181128+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_181128
.p2align 0x4
.long 0x24E0
L_181128:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	jmp L_181126
.p2align 0x4
L_455010:
L_181123:
	movq %r11,0xA8(%rbp)
	movq $0xB53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0xB0(%rbp)
	addq $0xA8,%rbp
	leaq (L_181124+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3884
.p2align 0x4
L_455011:
L_181121:
	movq 0x88(%rbp),%r14
	movq $0xB1D,0xFFFFFFFFFFFFFFF8(%r14)
	movq $0x10C1,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x20,%r12
	movq 0x70(%rbp),%r11
	movq %r11,0x0(%r13)
	movq 0x60(%rbp),%r11
	movq %r11,0x8(%r13)
	movq %r14,0x10(%r13)
	movq 0x18(%rbp),%r14
	movq %r14,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq 0x58(%rbp),%r11
	movq %r13,0x0(%r14,%r11,8)
	incq %r11
	movq %r11,0x58(%rbp)
	jmp loop_1854
.p2align 0x4
L_455012:
L_181130:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_181131+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_181131
.p2align 0x4
.long 0x24E1
L_181131:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	jmp L_181120
.p2align 0x4
L_455014:
L_181133:
	movq (globalObjptr+0x4F30)(%rip),%r15
	movq %r15,0x88(%rbp)
	jmp L_181119
.p2align 0x4
.long 0xA06
L_181044:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_181045
L_181046:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_181047+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_181047
.p2align 0x4
.long 0x24D2
L_181047:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_181045:
	movq $0x10C7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x50(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x50(%rbp)
	jmp loop_1852
.p2align 0x4
.long 0x24D5
L_181066:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r15
	movq %r15,0x98(%rbp)
	jmp L_181067
.p2align 0x4
.long 0x4E4
L_180952:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%rdx
	movq %rdx,0x28(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x18(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x48(%rbp)
	cmpq %r14,%rdx
	jne L_180813
L_180954:
	testq %rdx,%rdx
	jz L_455025
L_180955:
	cmpq $0x7FFFFFFF,%rdx
	ja L_180841
L_180956:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1499,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_180957+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_180957
.p2align 0x4
.long 0xA9D
L_180957:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq %rax,0x50(%rbp)
L_180958:
	movq $0x0,0x58(%rbp)
.p2align 0x4,,0x7
loop_1848:
	movq 0x58(%rbp),%r15
	cmpq 0x48(%rbp),%r15
	jnl L_455022
L_180963:
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x18(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x60(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movl %r15d,%r14d
	movslq %r14d,%r11
	movq %r11,0x68(%rbp)
	cmpq %r15,%r11
	jne L_180813
L_180965:
	testq %r11,%r11
	jnz L_455019
L_180990:
	movq (globalObjptr+0x4F68)(%rip),%r15
	movq %r15,0x70(%rbp)
.p2align 0x4,,0x7
L_180969:
	movq $0x0,0x78(%rbp)
.p2align 0x4,,0x7
loop_1849:
	movq 0x68(%rbp),%r15
	cmpq %r15,0x78(%rbp)
	jl L_455017
L_180970:
	movq 0x70(%rbp),%r15
	movq $0xB31,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x58(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x58(%rbp)
	jmp loop_1848
.p2align 0x4
L_455017:
L_180971:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_180972
L_180987:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_180988+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_180988
.p2align 0x4
.long 0x24CB
L_180988:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_180972:
	movq 0x78(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq %r15,%r14
	movq %r15,%r13
	imulq $0x18,%r14
	movq 0x60(%rbp),%r11
	movq 0x0(%r11,%r14,1),%r10
	movq %r10,0x80(%rbp)
	imulq $0x18,%r13
	movq 0x8(%r11,%r13,1),%r14
	movq %r14,0x88(%rbp)
	imulq $0x18,%r15
	movq 0x10(%r11,%r15,1),%r14
	movq %r14,0x98(%rbp)
	movq $0xB7F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r13
	movq %r13,0x8(%r15)
	movq $0xB81,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x18(%r11)
	addq $0x28,%r12
	movq %r13,0x0(%r11)
	movq 0x30(%rbp),%r15
	movq %r15,0x8(%r11)
	movq %r14,0x10(%r11)
	movq %r11,0xA0(%rbp)
	addq $0x98,%rbp
	leaq (L_180973+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3886
.p2align 0x4
L_455019:
L_180966:
	movq 0x68(%rbp),%rdx
	cmpq $0x7FFFFFFF,%rdx
	ja L_180841
L_180967:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1583,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_180968+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_180968
.p2align 0x4
.long 0x24C6
L_180968:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq %rax,0x70(%rbp)
	jmp L_180969
.p2align 0x4
L_455022:
L_180959:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_180960
L_180961:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r14d
	movl %r14d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r14
	movq %r14,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_180962+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_180962
.p2align 0x4
.long 0x24C5
L_180962:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_180960:
	movq 0x50(%rbp),%r15
	movq $0xB27,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x1C27,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r13
	movq $0x155,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r15,0x0(%rbp)
	addq $0x18,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_455025:
L_180992:
	movq (globalObjptr+0x4F60)(%rip),%r15
	movq %r15,0x50(%rbp)
	jmp L_180958
.p2align 0x4
.long 0x496
L_180940:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_180941
L_180942:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_180943+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_180943
.p2align 0x4
.long 0x63A
L_180943:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_180941:
	movq $0x1C25,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x8(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x155,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x0(%rbp)
	addq $0x18,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x24C1
L_180926:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_180927
L_180932:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_180933+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_180933
.p2align 0x4
.long 0x67D
L_180933:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_180927:
	movq $0xB53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x58(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_180928+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3884
.p2align 0x4
.long 0x24BC
L_180890:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_180891
L_180892:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_180893+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_180893
.p2align 0x4
.long 0x24BD
L_180893:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_180891:
	movq $0x10C7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x40(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x40(%rbp)
	jmp loop_1846
.p2align 0x4
.long 0x24B3
L_180830:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_180831
L_180836:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_180837+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_180837
.p2align 0x4
.long 0x24B4
L_180837:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_180831:
	movq 0x38(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq $0xC65,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	addq $0x20,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0x80(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_180832+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3888
.p2align 0x4
.long 0x24B6
L_180852:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_180853
L_180854:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_180855+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_180855
.p2align 0x4
.long 0x24B7
L_180855:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_180853:
	movq 0x50(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x58(%rbp),%r14
	movq %r14,%r11
	salq $0x4,%r11
	movq 0x60(%rbp),%r10
	movq %r10,0x0(%r15,%r11,1)
	movq %r15,%r11
	shrq $0x8,%r11
	movb $0x1,0x0(%r13,%r11,1)
	movq %r14,%r13
	salq $0x4,%r13
	movq 0x70(%rbp),%r11
	movq %r11,0x8(%r15,%r13,1)
	incq %r14
	movq %r14,0x58(%rbp)
	jmp loop_1843
.p2align 0x4
.long 0x24B8
L_180857:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r15
	movq %r15,0x98(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_180858
L_180863:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_180864+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_180864
.p2align 0x4
.long 0x24BA
L_180864:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_180858:
	movq $0xB7F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r13
	movq %r13,0x8(%r15)
	movq $0xB81,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x18(%r11)
	addq $0x28,%r12
	movq %r13,0x0(%r11)
	movq 0x30(%rbp),%r15
	movq %r15,0x8(%r11)
	movq %r14,0x10(%r11)
	movq %r11,0xB0(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0xA8(%rbp)
	addq $0xA8,%rbp
	leaq (L_180859+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3886
.p2align 0x4
.long 0x24DB
L_181102:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_181103
L_181104:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_181105+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_181105
.p2align 0x4
.long 0x24DC
L_181105:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_181103:
	movq $0x10C7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x58(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x58(%rbp)
	jmp loop_1855
.p2align 0x4
.long 0x24DF
L_181124:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0xA0(%rbp)
	jmp L_181125
.p2align 0x4
.long 0x24C7
L_180973:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x90(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_180974
L_180985:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_180986+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_180986
.p2align 0x4
.long 0x24CA
L_180986:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_180974:
	movq 0x88(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_180813
L_180976:
	movl %r13d,0xA8(%rbp)
	movq $0x373F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x20,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x40(%rbp),%r13
	movq %r13,0x8(%r14)
	movq %r15,0x10(%r14)
	movq %r14,0xA0(%rbp)
	addq $0xA0,%rbp
	leaq (L_180977+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_9
.p2align 0x4
.long 0x24C2
L_180928:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_180929
L_180930:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_180931+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_180931
.p2align 0x4
.long 0x24C3
L_180931:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_180929:
	movq $0x1C21,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x30,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x20(%r15)
	movq 0x8(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x155,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x0(%rbp)
	addq $0x18,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x234C
L_180832:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_180833
L_180834:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_180835+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_180835
.p2align 0x4
.long 0x24B4
L_180835:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_180833:
	movq 0x48(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x58(%rbp),%r14
	movq %r14,%r11
	salq $0x4,%r11
	movq 0x60(%rbp),%r10
	movq %r10,0x0(%r15,%r11,1)
	movq %r15,%r11
	shrq $0x8,%r11
	movb $0x1,0x0(%r13,%r11,1)
	movq %r14,%r13
	salq $0x4,%r13
	movq 0x68(%rbp),%r11
	movq %r11,0x8(%r15,%r13,1)
	incq %r14
	movq %r14,0x58(%rbp)
	jmp loop_1844
.p2align 0x4
.long 0x24B9
L_180859:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x90(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_180860
L_180861:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_180862+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_180862
.p2align 0x4
.long 0x24BA
L_180862:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_180860:
	movq 0x80(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x88(%rbp),%r14
	movq %r14,%r11
	salq $0x4,%r11
	movq 0x90(%rbp),%r10
	movq %r10,0x0(%r15,%r11,1)
	movq %r15,%r11
	shrq $0x8,%r11
	movb $0x1,0x0(%r13,%r11,1)
	movq %r14,%r13
	salq $0x4,%r13
	movq 0x98(%rbp),%r11
	movq %r11,0x8(%r15,%r13,1)
	incq %r14
	movq %r14,0x88(%rbp)
	jmp loop_1845
.p2align 0x4
.long 0x24C8
L_180977:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r15
	movq %r15,0x88(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_180978
L_180983:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_180984+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_180984
.p2align 0x4
.long 0x24CA
L_180984:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_180978:
	movq 0x80(%rbp),%r15
	cmpq $0x1,%r15
	je L_455039
L_180979:
	movq $0xB53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x40(%rbp),%r13
	movq %r13,0x8(%r14)
	movq %r14,0xA8(%rbp)
	movq %r15,0xA0(%rbp)
	addq $0xA0,%rbp
	leaq (L_180980+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3884
.p2align 0x4
L_455039:
L_180982:
	movq $0x1,%r14
	xchgq %r14,%r15
L_180981:
	movq 0x70(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x78(%rbp),%r13
	movq %r13,%r10
	imulq $0x18,%r10
	movq %r15,0x0(%r14,%r10,1)
	movq %r14,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,%r15
	imulq $0x18,%r15
	movq 0x88(%rbp),%r10
	movq %r10,0x8(%r14,%r15,1)
	movq %r14,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,%r15
	imulq $0x18,%r15
	movq 0x90(%rbp),%r11
	movq %r11,0x10(%r14,%r15,1)
	incq %r13
	movq %r13,0x78(%rbp)
	jmp loop_1849
.p2align 0x4
.long 0x24C9
L_180980:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r15
	movq %r15,0x80(%rbp)
	jmp L_180981
.text
.p2align 0x4
.globl rename_0
.hidden rename_0
rename_0:
L_181142:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_181143
L_181193:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_181194+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_181194
.p2align 0x4
.long 0x45B
L_181194:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_181143:
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	movq %r11,0x18(%rbp)
	cmpq %r11,%r14
	je L_455041
L_181144:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_455041:
L_181145:
	movq 0x18(%rbp),%rdx
	testq %rdx,%rdx
	jz L_455044
L_181146:
	cmpq $0x7FFFFFFF,%rdx
	ja L_455043
L_181147:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1497,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_181148+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_181148
.p2align 0x4
.long 0x813
L_181148:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq %rax,0x20(%rbp)
L_181149:
	movq $0x0,0x28(%rbp)
loop_1857:
	movq 0x18(%rbp),%r15
	cmpq %r15,0x28(%rbp)
	jl L_455042
L_181150:
	movq 0x20(%rbp),%r15
	movq $0x59,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_455042:
L_181151:
	movq 0x28(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x0(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x30(%rbp)
	movq 0x8(%r13),%r15
	movl 0x4(%r15),%r14d
	movl %r14d,0x38(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x48(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_181152+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_455043:
L_181191:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_455044:
L_181192:
	movq (globalObjptr+0x4EB8)(%rip),%r15
	movq %r15,0x20(%rbp)
	jmp L_181149
.p2align 0x4
.long 0x24E2
L_181152:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movl 0x58(%rbp),%r15d
	movl %r15d,0x3C(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_181153
L_181189:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_181190+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_181190
.p2align 0x4
.long 0x24E6
L_181190:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_181153:
	movq $0x13,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x8BD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x20,%r12
	movl 0x3C(%rbp),%r15d
	movl %r15d,0x0(%r14)
	movl 0x38(%rbp),%r15d
	movl %r15d,0x4(%r14)
	movq 0x40(%rbp),%r15
	movq %r15,0x10(%r14)
	movq $0x8BF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x50(%rbp)
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1289,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x58(%rbp)
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x30(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x8(%rbp),%r15
	cmpq $0x1,%r15
	je L_181162
L_181154:
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq $0x1,0x48(%rbp)
.p2align 0x4,,0x7
L_181155:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_455057
.p2align 0x4,,0x7
L_181156:
	movq 0x38(%rbp),%r11
	movq 0x8(%r11),%r10
	movq 0x8(%r10),%r9
	movq 0x10(%r9),%r15
	movq 0x40(%rbp),%r11
	cmpq %r15,%r11
	je L_455055
L_181157:
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	jne L_181159
L_181164:
	xorq %r13,%r13
.p2align 0x4,,0x7
vectorEqualLoop_148:
	cmpq %r14,%r13
	je L_455049
L_181165:
	movq 0x40(%rbp),%r10
	movb 0x0(%r10,%r13,1),%r11b
	cmpb %r11b,0x0(%r15,%r13,1)
	jne L_455046
L_181170:
	incq %r13
	jmp vectorEqualLoop_148
.p2align 0x4
L_455046:
L_181166:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_455048
.p2align 0x4,,0x7
L_181159:
	movq $0x20EF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_455047
L_181160:
	movq %r15,0x48(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	movq %r15,0x38(%rbp)
	jmp L_181155
.p2align 0x4
L_455047:
L_181162:
	movq 0x8(%rbp),%r15
L_181163:
	movq $0x20EF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x58(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x28(%rbp),%r14
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r15,%r14,8)
	incq %r14
	movq %r14,0x28(%rbp)
	jmp loop_1857
.p2align 0x4
L_455048:
L_181168:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_181169+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_181169
.p2align 0x4
.long 0x24E3
L_181169:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	jmp L_181159
.p2align 0x4
L_455049:
L_181171:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_181172
L_181181:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_181182+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_181182
.p2align 0x4
.long 0x24E5
L_181182:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_181172:
	movq 0x48(%rbp),%r15
	cmpq $0x1,%r15
	je L_455052
L_181173:
	movq 0x8(%r15),%r14
	movq %r14,0x8(%rbp)
	movq 0x30(%rbp),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
.p2align 0x4,,0x7
L_181174:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_455051
.p2align 0x4,,0x7
L_181175:
	movq $0x20EF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_181163
L_181176:
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x30(%rbp)
	jmp L_181174
.p2align 0x4
L_455051:
L_181178:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_181179+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_181179
.p2align 0x4
.long 0x24E4
L_181179:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	jmp L_181175
.p2align 0x4
L_455052:
L_181180:
	movq 0x30(%rbp),%r14
	xchgq %r14,%r15
	jmp L_181163
.p2align 0x4
L_455055:
L_181183:
	movq 0x48(%rbp),%r15
	cmpq $0x1,%r15
	je L_455056
L_181184:
	movq 0x8(%r15),%r14
	movq %r14,0x8(%rbp)
	movq 0x30(%rbp),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	jmp L_181174
.p2align 0x4
L_455056:
L_181185:
	movq 0x30(%rbp),%r14
	xchgq %r14,%r15
	jmp L_181163
.p2align 0x4
L_455057:
L_181186:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_181187+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_181187
.p2align 0x4
.long 0x24E3
L_181187:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	jmp L_181156
.text
.p2align 0x4
.globl loop_3887
.hidden loop_3887
loop_3887:
L_181195:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_181500
L_181196:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_455104
L_181197:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x8(%r15),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%rax
	shrq $0x1,%rax
	subq $0xDFB,%rax
	cmpq $0x11,%rax
	ja L_455060
	leaq jumpTable_609(%rip),%rbx
	jmp *(%rbx,%rax,8)
.data
.p2align 0x4
jumpTable_609:
.quad L_455103,L_455102,L_455101,L_455100,L_455099,L_455098,L_455097,L_455096,L_455094,L_455086,L_455085,L_455083,L_455082,L_455081,L_455080,L_455078,L_455072,L_455071
.text
.p2align 0x4
L_455060:
L_181198:
	movq 0x0(%r13),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%rax
	shrq $0x1,%rax
	subq $0x1283,%rax
	cmpq $0x8,%rax
	ja L_455061
	leaq jumpTable_610(%rip),%rbx
	jmp *(%rbx,%rax,8)
.data
.p2align 0x4
jumpTable_610:
.quad L_455070,L_455069,L_455068,L_455067,L_455066,L_455065,L_455064,L_455063,L_455062
.text
.p2align 0x4
L_455061:
L_181199:
	movq 0x10(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_181200+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3885
.p2align 0x4
L_455062:
L_181245:
	movq 0x10(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_181246+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3885
.p2align 0x4
L_455063:
L_181240:
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_181241+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3885
.p2align 0x4
L_455064:
L_181235:
	movq 0x10(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_181236+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3885
.p2align 0x4
L_455065:
L_181230:
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_181231+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3885
.p2align 0x4
L_455066:
L_181225:
	movq 0x10(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_181226+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3885
.p2align 0x4
L_455067:
L_181220:
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_181221+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3885
.p2align 0x4
L_455068:
L_181215:
	movq 0x10(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_181216+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3885
.p2align 0x4
L_455069:
L_181210:
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_181211+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3885
.p2align 0x4
L_455070:
L_181205:
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_181206+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3885
.p2align 0x4
L_455071:
L_181499:
	movq 0x0(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0x4EC0)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_455072:
L_181472:
	movq 0x8(%r13),%r15
	movq %r15,0x18(%rbp)
	movq 0x0(%r13),%r15
	movq 0x10(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x30(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x38(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	movq %r11,0x40(%rbp)
	cmpq %r14,%r11
	movq %r15,0x28(%rbp)
	jne L_455077
L_181474:
	testq %r11,%r11
	jz L_455076
L_181475:
	cmpq $0x7FFFFFFF,%r11
	ja L_455075
L_181476:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_181477
L_181495:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_181496+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_181496
.p2align 0x4
.long 0x516
L_181496:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_181477:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1589,%rcx
	movq 0x40(%rbp),%rdx
	movq $0x48,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_181478+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_181478
.p2align 0x4
.long 0x516
L_181478:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq %rax,0x48(%rbp)
L_181479:
	movq $0x1,%r14
	movq $0x1,%r15
	movq $0x0,0x50(%rbp)
loop_1862:
	movq $0xB55,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x58(%rbp)
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x40(%rbp),%r15
	cmpq %r15,0x50(%rbp)
	jl L_455073
L_181480:
	movq 0x48(%rbp),%r15
	movq $0xB19,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x1C17,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0x18(%rbp),%r15
	movq %r15,0x8(%r14)
	movq $0x13D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x8(%rbp)
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_455073:
L_181481:
	movq 0x50(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq %r15,%r14
	salq $0x4,%r14
	movq 0x28(%rbp),%r11
	movq 0x0(%r11,%r14,1),%r10
	movq %r10,0x60(%rbp)
	salq $0x4,%r15
	movq 0x8(%r11,%r15,1),%r14
	movq %r14,0x70(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_181482+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3889
.p2align 0x4
L_455075:
L_181333:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_455076:
L_181498:
	movq (globalObjptr+0x4EE8)(%rip),%r15
	movq %r15,0x48(%rbp)
	jmp L_181479
.p2align 0x4
L_455077:
L_181304:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_455078:
L_181465:
	movq 0x0(%r13),%r15
	movq $0xB57,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x10(%rbp)
	addq $0x10,%r12
	movq (globalObjptr+0x4EC0)(%rip),%r13
	movq %r13,0x0(%r14)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r13,%r10
	jne L_181304
L_181467:
	movl %r11d,0x38(%rbp)
	movq $0x3A83,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x10(%r13)
	addq $0x20,%r12
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	movq %r13,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_181468+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_3
.p2align 0x4
L_455080:
L_181455:
	movq 0x8(%r13),%r15
	movq %r15,0x10(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x30(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_181456+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3887
.p2align 0x4
L_455081:
L_181420:
	movq 0x8(%r13),%r15
	movq %r15,0x18(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x30(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_181421+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3887
.p2align 0x4
L_455082:
L_181410:
	movq %r14,0x40(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x10(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x38(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_181411+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loopDec_1
.p2align 0x4
L_455083:
L_181403:
	movq 0x0(%r13),%r15
	movq $0xB57,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x10(%rbp)
	addq $0x10,%r12
	movq (globalObjptr+0x4EC0)(%rip),%r13
	movq %r13,0x0(%r14)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r13,%r10
	jne L_181304
L_181405:
	movl %r11d,0x38(%rbp)
	movq $0x3A91,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x10(%r13)
	addq $0x20,%r12
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	movq %r13,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_181406+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_3
.p2align 0x4
L_455085:
L_181402:
	movq 0x0(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0x4EC0)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_455086:
L_181355:
	movq 0x0(%r13),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1295,%r14
	je L_455088
L_181395:
	movq 0x0(%r15),%r14
	movq $0xB57,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%r12
	movq (globalObjptr+0x4EC0)(%rip),%r13
	movq %r13,0x0(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r10,%r13
	jne L_181304
L_181397:
	movl %r11d,0x38(%rbp)
	movq $0x3A85,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x10(%r13)
	addq $0x20,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r13,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_181398+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_3
.p2align 0x4
L_455088:
L_181356:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x28(%rbp)
	movl %r13d,0x18(%rbp)
	cmpq %rdx,%r15
	movq %r14,0x10(%rbp)
	jne L_181304
L_181358:
	testq %rdx,%rdx
	jz L_455092
L_181359:
	cmpq $0x7FFFFFFF,%rdx
	ja L_181333
L_181360:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xA9D,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_181361+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_181361
.p2align 0x4
.long 0x10DF
L_181361:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq %rax,0x30(%rbp)
L_181362:
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_1859:
	cmpq 0x28(%rbp),%r15
	jnl L_455089
L_181392:
	movl %r15d,%r14d
	movslq %r14d,%r13
	salq $0x4,%r13
	movq 0x10(%rbp),%r14
	movq 0x8(%r14,%r13,1),%r11
	movq 0x30(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r11,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_1859
.p2align 0x4
L_455089:
L_181363:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_181364
L_181390:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_181391+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_181391
.p2align 0x4
.long 0xA2A
L_181391:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_181364:
	movq 0x30(%rbp),%r15
	movq $0xB6B,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x3A8D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x40(%rbp)
	movl 0x18(%rbp),%r15d
	movl %r15d,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_181365+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_3
.p2align 0x4
L_455092:
L_181394:
	movq (globalObjptr+0xF78)(%rip),%r15
	movq %r15,0x30(%rbp)
	jmp L_181362
.p2align 0x4
L_455094:
L_181348:
	movq 0x0(%r13),%r15
	movq $0xB57,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x10(%rbp)
	addq $0x10,%r12
	movq (globalObjptr+0x4EC0)(%rip),%r13
	movq %r13,0x0(%r14)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r13,%r10
	jne L_181304
L_181350:
	movl %r11d,0x38(%rbp)
	movq $0x3A8F,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x10(%r13)
	addq $0x20,%r12
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	movq %r13,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_181351+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_3
.p2align 0x4
L_455096:
L_181347:
	movq 0x0(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0x4EC0)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_455097:
L_181337:
	movq 0x8(%r13),%r15
	movq %r15,0x10(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x30(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_181338+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3887
.p2align 0x4
L_455098:
L_181300:
	movq 0x8(%r13),%r15
	movq %r15,0x18(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x30(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_181301+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3887
.p2align 0x4
L_455099:
L_181295:
	movq 0x0(%r13),%r15
	movq %r15,0x30(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_181296+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3887
.p2align 0x4
L_455100:
L_181280:
	movq 0x10(%r13),%r15
	movq %r15,0x10(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x18(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x30(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_181281+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3887
.p2align 0x4
L_455101:
L_181270:
	movq 0x8(%r13),%r15
	movq %r15,0x10(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x30(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_181271+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3887
.p2align 0x4
L_455102:
L_181260:
	movq 0x8(%r13),%r15
	movq %r15,0x10(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x30(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_181261+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3887
.p2align 0x4
L_455103:
L_181250:
	movq 0x8(%r13),%r15
	movq %r15,0x10(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x30(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_181251+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3887
.p2align 0x4
L_455104:
L_181500:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_181501+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_181501
.p2align 0x4
.long 0x45F
L_181501:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_181197
.p2align 0x4
.long 0x6FF
L_181200:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_181201
L_181203:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_181204+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_181204
.p2align 0x4
.long 0x4B7
L_181204:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_181201:
	movq $0x2505,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x20,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x28(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x40(%rbp),%r13
	movq %r13,0x10(%r14)
	movq 0x38(%rbp),%r15
L_181202:
	movq %r15,0x0(%rbp)
	movq $0x1BF5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x13D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x6FF
L_181246:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_181247
L_181248:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_181249+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_181249
.p2align 0x4
.long 0x4B7
L_181249:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_181247:
	movq $0x2517,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x20,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x28(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x40(%rbp),%r13
	movq %r13,0x10(%r14)
	movq 0x38(%rbp),%r15
	jmp L_181202
.p2align 0x4
.long 0x5ED
L_181241:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_181242
L_181243:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_181244+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_181244
.p2align 0x4
.long 0x5EE
L_181244:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_181242:
	movq $0x2515,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x38(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x30(%rbp),%r15
	jmp L_181202
.p2align 0x4
.long 0x6FF
L_181236:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_181237
L_181238:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_181239+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_181239
.p2align 0x4
.long 0x4B7
L_181239:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_181237:
	movq $0x2513,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x20,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x40(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x28(%rbp),%r13
	movq %r13,0x10(%r14)
	movq 0x38(%rbp),%r15
	jmp L_181202
.p2align 0x4
.long 0x5ED
L_181231:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_181232
L_181233:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_181234+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_181234
.p2align 0x4
.long 0x5EE
L_181234:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_181232:
	movq $0x2511,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x38(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x30(%rbp),%r15
	jmp L_181202
.p2align 0x4
.long 0x6FF
L_181226:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_181227
L_181228:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_181229+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_181229
.p2align 0x4
.long 0x4B7
L_181229:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_181227:
	movq $0x250F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x20,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x28(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x40(%rbp),%r13
	movq %r13,0x10(%r14)
	movq 0x38(%rbp),%r15
	jmp L_181202
.p2align 0x4
.long 0x5ED
L_181221:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_181222
L_181223:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_181224+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_181224
.p2align 0x4
.long 0x5EE
L_181224:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_181222:
	movq $0x250D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x38(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x30(%rbp),%r15
	jmp L_181202
.p2align 0x4
.long 0x6FF
L_181216:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_181217
L_181218:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_181219+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_181219
.p2align 0x4
.long 0x4B7
L_181219:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_181217:
	movq $0x250B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x20,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x28(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x40(%rbp),%r13
	movq %r13,0x10(%r14)
	movq 0x38(%rbp),%r15
	jmp L_181202
.p2align 0x4
.long 0x459
L_181211:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_181212
L_181213:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_181214+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_181214
.p2align 0x4
.long 0x4FC
L_181214:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_181212:
	movq $0x2509,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x28(%rbp),%r15
	jmp L_181202
.p2align 0x4
.long 0x5ED
L_181206:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_181207
L_181208:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_181209+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_181209
.p2align 0x4
.long 0x5EE
L_181209:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_181207:
	movq $0x2507,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x38(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x30(%rbp),%r15
	jmp L_181202
.p2align 0x4
.long 0x24F0
L_181482:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x70(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_181483
L_181493:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_181494+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_181494
.p2align 0x4
.long 0x2210
L_181494:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_181483:
	movq $0xB89,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0x88(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_181484+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3887
.p2align 0x4
.long 0x2
L_181468:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_181469
L_181470:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_181471+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_181471
.p2align 0x4
.long 0x4B1
L_181471:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_181469:
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x0(%rbp)
	movq $0x1C15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x13D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x517
L_181456:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_181457+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3887
.p2align 0x4
.long 0x8A9
L_181421:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_181422
L_181453:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_181454+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_181454
.p2align 0x4
.long 0x720
L_181454:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_181422:
	movq 0x10(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x8(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	movq %r11,0x58(%rbp)
	cmpq %r11,%r15
	movq %r14,0x50(%rbp)
	jne L_181304
L_181424:
	testq %r11,%r11
	jz L_455121
L_181425:
	cmpq $0x7FFFFFFF,%r11
	ja L_181333
L_181426:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_181427
L_181449:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_181450+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_181450
.p2align 0x4
.long 0x249E
L_181450:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_181427:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1589,%rcx
	movq 0x58(%rbp),%rdx
	movq $0x60,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_181428+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_181428
.p2align 0x4
.long 0x249E
L_181428:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq %rax,0x18(%rbp)
L_181429:
	movq $0x1,%r14
	movq $0x1,%r15
	movq $0x0,0x60(%rbp)
loop_1861:
	movq $0xB55,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x68(%rbp)
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x58(%rbp),%r15
	cmpq %r15,0x60(%rbp)
	jl L_455118
L_181430:
	movq 0x18(%rbp),%r15
	movq $0xB19,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x10CB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x48(%rbp),%r11
	movq %r11,0x0(%r14)
	movq %r15,0x8(%r14)
	movq $0x1C11,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x13D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x38(%rbp)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r13,0x48(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_181431+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp combineUp_0
.p2align 0x4
L_455118:
L_181435:
	movq 0x60(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq %r15,%r14
	salq $0x4,%r14
	movq 0x50(%rbp),%r11
	movq 0x0(%r11,%r14,1),%r10
	movq %r10,0x70(%rbp)
	salq $0x4,%r15
	movq 0x8(%r11,%r15,1),%r14
	movq %r14,0x80(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_181436+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3889
.p2align 0x4
L_455121:
L_181452:
	movq (globalObjptr+0x4EE8)(%rip),%r15
	movq %r15,0x18(%rbp)
	jmp L_181429
.p2align 0x4
.long 0x517
L_181411:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_181412+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3887
.p2align 0x4
.long 0x2
L_181406:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_181407
L_181408:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_181409+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_181409
.p2align 0x4
.long 0x4B1
L_181409:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_181407:
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x0(%rbp)
	movq $0x1C0D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x13D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x2
L_181398:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_181399
L_181400:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_181401+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_181401
.p2align 0x4
.long 0x4B1
L_181401:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_181399:
	movq 0x10(%rbp),%r13
	movq 0x0(%r13),%r15
	movq $0x252D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r14)
L_181382:
	movq %r15,0x0(%rbp)
	movq $0x1C09,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq $0x13D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x7BC
L_181365:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_181366
L_181388:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_181389+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_181389
.p2align 0x4
.long 0xA2A
L_181389:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_181366:
	movq $0xB57,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x18(%rbp)
	addq $0x10,%r12
	movq (globalObjptr+0x4EC0)(%rip),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r10,%r13
	jne L_181304
L_181368:
	movl %r11d,0x48(%rbp)
	movq $0x3A85,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x20,%r12
	movq 0x8(%rbp),%r11
	movq %r11,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	movq %r13,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_181369+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_3
.p2align 0x4
.long 0x2
L_181351:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_181352
L_181353:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_181354+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_181354
.p2align 0x4
.long 0x4B1
L_181354:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_181352:
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x0(%rbp)
	movq $0x1C07,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x13D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x8A9
L_181338:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_181339+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3885
.p2align 0x4
.long 0x8A9
L_181301:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_181302
L_181335:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_181336+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_181336
.p2align 0x4
.long 0x720
L_181336:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_181302:
	movq 0x10(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x8(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	movq %r11,0x58(%rbp)
	cmpq %r11,%r15
	movq %r14,0x50(%rbp)
	jne L_181304
L_181305:
	testq %r11,%r11
	jz L_455132
L_181306:
	cmpq $0x7FFFFFFF,%r11
	ja L_181333
L_181307:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_181308
L_181330:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_181331+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_181331
.p2align 0x4
.long 0x249E
L_181331:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_181308:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1589,%rcx
	movq 0x58(%rbp),%rdx
	movq $0x60,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_181309+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_181309
.p2align 0x4
.long 0x249E
L_181309:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq %rax,0x18(%rbp)
L_181310:
	movq $0x1,%r14
	movq $0x1,%r15
	movq $0x0,0x60(%rbp)
loop_1858:
	movq $0xB55,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x68(%rbp)
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x58(%rbp),%r15
	cmpq %r15,0x60(%rbp)
	jl L_455129
L_181311:
	movq 0x18(%rbp),%r15
	movq $0xB19,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x10CB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x48(%rbp),%r11
	movq %r11,0x0(%r14)
	movq %r15,0x8(%r14)
	movq $0x1C01,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x13D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x38(%rbp)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r13,0x48(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_181312+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp combineUp_0
.p2align 0x4
L_455129:
L_181316:
	movq 0x60(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq %r15,%r14
	salq $0x4,%r14
	movq 0x50(%rbp),%r11
	movq 0x0(%r11,%r14,1),%r10
	movq %r10,0x70(%rbp)
	salq $0x4,%r15
	movq 0x8(%r11,%r15,1),%r14
	movq %r14,0x80(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_181317+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3889
.p2align 0x4
L_455132:
L_181334:
	movq (globalObjptr+0x4EE8)(%rip),%r15
	movq %r15,0x18(%rbp)
	jmp L_181310
.p2align 0x4
.long 0x459
L_181296:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_181297
L_181298:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_181299+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_181299
.p2align 0x4
.long 0x4FC
L_181299:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_181297:
	movq $0x1BFF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x13D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4A5
L_181281:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_181282+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3887
.p2align 0x4
.long 0x517
L_181271:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_181272+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3887
.p2align 0x4
.long 0x517
L_181261:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_181262+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3887
.p2align 0x4
.long 0x517
L_181251:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_181252+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3887
.p2align 0x4
.long 0x24F1
L_181484:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x88(%rbp),%r14
	movq %r14,0x78(%rbp)
	movq %r15,0x88(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x88,%rbp
	leaq (L_181485+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp combineUp_0
.p2align 0x4
.long 0x71D
L_181457:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_181458
L_181463:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_181464+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_181464
.p2align 0x4
.long 0x5E7
L_181464:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_181458:
	movq $0x1C13,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x13D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x40(%rbp)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x30(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_181459+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp combineUp_0
.p2align 0x4
.long 0x78B
L_181431:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_181432
L_181433:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_181434+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_181434
.p2align 0x4
.long 0x78E
L_181434:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_181432:
	movq $0xB55,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x0(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x24E8
L_181436:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x80(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_181437
L_181447:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_181448+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_181448
.p2align 0x4
.long 0x24EE
L_181448:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_181437:
	movq $0xB89,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0x98(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_181438+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3887
.p2align 0x4
.long 0x71D
L_181412:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_181413
L_181418:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_181419+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_181419
.p2align 0x4
.long 0x5E7
L_181419:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_181413:
	movq $0x1C0F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x13D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x40(%rbp)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x30(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_181414+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp combineUp_0
.p2align 0x4
.long 0x80C
L_181369:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x18(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x38(%rbp)
	movq 0x30(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	movq %r10,0x40(%rbp)
	cmpq %r10,%r13
	jne L_181304
L_181371:
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r10
	cmpq %r14,%r10
	jne L_181304
L_181373:
	cmpl %r13d,%r11d
	je L_455140
L_181374:
	movq (globalObjptr+0x4E0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_455140:
L_181375:
	movq 0x40(%rbp),%rdx
	testq %rdx,%rdx
	jz L_455144
L_181376:
	cmpq $0x7FFFFFFF,%rdx
	ja L_181333
L_181377:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14D1,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_181378+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_181378
.p2align 0x4
.long 0x700
L_181378:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq %rax,0x48(%rbp)
L_181379:
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_1860:
	cmpq 0x40(%rbp),%r15
	jnl L_455141
L_181385:
	movl %r15d,%r14d
	movq %r15,%r13
	movq %r15,%r11
	movslq %r14d,%r10
	movq 0x30(%rbp),%r14
	movq 0x0(%r14,%r10,8),%r9
	movq 0x28(%rbp),%r14
	movq 0x0(%r14,%r10,8),%r8
	movq 0x48(%rbp),%r14
	movq %r14,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r10,1)
	salq $0x4,%r13
	movq %r8,0x0(%r14,%r13,1)
	movq %r14,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%rsp,%r13,1)
	salq $0x4,%r11
	movq %r9,0x8(%r14,%r11,1)
	incq %r15
	jmp loop_1860
.p2align 0x4
L_455141:
L_181380:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_181381
L_181383:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_181384+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_181384
.p2align 0x4
.long 0x24EF
L_181384:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_181381:
	movq 0x48(%rbp),%r14
	movq $0xB25,0xFFFFFFFFFFFFFFF8(%r14)
	movq $0x252B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r13
	movq %r15,%r14
	movq %r13,%r15
	jmp L_181382
.p2align 0x4
L_455144:
L_181387:
	movq (globalObjptr+0xF98)(%rip),%r15
	movq %r15,0x48(%rbp)
	jmp L_181379
.p2align 0x4
.long 0x6FF
L_181339:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_181340
L_181345:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_181346+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_181346
.p2align 0x4
.long 0x4B7
L_181346:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_181340:
	movq $0x1C03,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x13D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x48(%rbp)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x38(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_181341+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp combineUp_0
.p2align 0x4
.long 0x78B
L_181312:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_181313
L_181314:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_181315+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_181315
.p2align 0x4
.long 0x78E
L_181315:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_181313:
	movq $0xB55,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x0(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x24E8
L_181317:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x80(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_181318
L_181328:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_181329+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_181329
.p2align 0x4
.long 0x24EE
L_181329:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_181318:
	movq $0xB89,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0x98(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_181319+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3887
.p2align 0x4
.long 0xBC0
L_181282:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_181283+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3887
.p2align 0x4
.long 0x71D
L_181272:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_181273
L_181278:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_181279+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_181279
.p2align 0x4
.long 0x5E7
L_181279:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_181273:
	movq $0x1BFB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x13D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x40(%rbp)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x30(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_181274+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp combineUp_0
.p2align 0x4
.long 0x71D
L_181262:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_181263
L_181268:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_181269+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_181269
.p2align 0x4
.long 0x5E7
L_181269:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_181263:
	movq $0x1BF9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x13D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x40(%rbp)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x30(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_181264+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp combineUp_0
.p2align 0x4
.long 0x71D
L_181252:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_181253
L_181258:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_181259+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_181259
.p2align 0x4
.long 0x5E7
L_181259:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_181253:
	movq $0x1BF7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x13D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x40(%rbp)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x30(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_181254+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp combineUp_0
.p2align 0x4
.long 0x24F2
L_181485:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_181486
L_181491:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_181492+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_181492
.p2align 0x4
.long 0x24F5
L_181492:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_181486:
	movq $0xB55,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x88(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x88,%rbp
	leaq (L_181487+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp combineUp_0
.p2align 0x4
.long 0x847
L_181459:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_181460
L_181461:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_181462+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_181462
.p2align 0x4
.long 0x780
L_181462:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_181460:
	movq $0xB55,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x0(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x24E9
L_181438:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x98(%rbp),%r14
	movq %r14,0x88(%rbp)
	movq %r15,0x98(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0xA0(%rbp)
	addq $0x98,%rbp
	leaq (L_181439+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp combineUp_0
.p2align 0x4
.long 0x847
L_181414:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_181415
L_181416:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_181417+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_181417
.p2align 0x4
.long 0x780
L_181417:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_181415:
	movq $0xB55,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x0(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x90C
L_181341:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_181342
L_181343:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_181344+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_181344
.p2align 0x4
.long 0xA4D
L_181344:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_181342:
	movq $0xB55,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x0(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x24E9
L_181319:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x98(%rbp),%r14
	movq %r14,0x88(%rbp)
	movq %r15,0x98(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0xA0(%rbp)
	addq $0x98,%rbp
	leaq (L_181320+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp combineUp_0
.p2align 0x4
.long 0x5F0
L_181283:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_181284
L_181293:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_181294+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_181294
.p2align 0x4
.long 0x4AD
L_181294:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_181284:
	movq $0x1BFD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x10(%r15)
	movq $0x13D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x50(%rbp)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x40(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_181285+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp combineUp_0
.p2align 0x4
.long 0x847
L_181274:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_181275
L_181276:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_181277+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_181277
.p2align 0x4
.long 0x780
L_181277:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_181275:
	movq $0xB55,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x0(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x847
L_181264:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_181265
L_181266:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_181267+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_181267
.p2align 0x4
.long 0x780
L_181267:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_181265:
	movq $0xB55,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x0(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x847
L_181254:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_181255
L_181256:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_181257+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_181257
.p2align 0x4
.long 0x780
L_181257:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_181255:
	movq $0xB55,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x0(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x24F3
L_181487:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_181488
L_181489:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_181490+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_181490
.p2align 0x4
.long 0x24F4
L_181490:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_181488:
	movq 0x48(%rbp),%r13
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq 0x50(%rbp),%r10
	movq %r10,%r15
	salq $0x4,%r15
	movq 0x78(%rbp),%r9
	movq %r9,0x0(%r13,%r15,1)
	movq %r13,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%r11,%r15,1)
	movq %r10,%r15
	salq $0x4,%r15
	movq 0x70(%rbp),%r11
	movq %r11,0x8(%r13,%r15,1)
	incq %r10
	movq %r10,0x50(%rbp)
	movq 0x58(%rbp),%r14
	movq 0x60(%rbp),%r15
	jmp loop_1862
.p2align 0x4
.long 0x24EA
L_181439:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0x78(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_181440
L_181445:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_181446+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_181446
.p2align 0x4
.long 0x24ED
L_181446:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_181440:
	movq $0xB55,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x98(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0xA0(%rbp)
	addq $0x98,%rbp
	leaq (L_181441+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp combineUp_0
.p2align 0x4
.long 0x24EA
L_181320:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0x78(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_181321
L_181326:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_181327+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_181327
.p2align 0x4
.long 0x24ED
L_181327:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_181321:
	movq $0xB55,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x98(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0xA0(%rbp)
	addq $0x98,%rbp
	leaq (L_181322+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp combineUp_0
.p2align 0x4
.long 0x7C6
L_181285:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_181286
L_181291:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_181292+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_181292
.p2align 0x4
.long 0x24E7
L_181292:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_181286:
	movq $0xB55,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x60(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_181287+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp combineUp_0
.p2align 0x4
.long 0x24EB
L_181441:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0x70(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_181442
L_181443:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_181444+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_181444
.p2align 0x4
.long 0x24EC
L_181444:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_181442:
	movq 0x18(%rbp),%r13
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq 0x60(%rbp),%r10
	movq %r10,%r15
	salq $0x4,%r15
	movq 0x88(%rbp),%r9
	movq %r9,0x0(%r13,%r15,1)
	movq %r13,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%r11,%r15,1)
	movq %r10,%r15
	salq $0x4,%r15
	movq 0x80(%rbp),%r11
	movq %r11,0x8(%r13,%r15,1)
	incq %r10
	movq %r10,0x60(%rbp)
	movq 0x68(%rbp),%r14
	movq 0x70(%rbp),%r15
	jmp loop_1861
.p2align 0x4
.long 0x24EB
L_181322:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0x70(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_181323
L_181324:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_181325+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_181325
.p2align 0x4
.long 0x24EC
L_181325:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_181323:
	movq 0x18(%rbp),%r13
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq 0x60(%rbp),%r10
	movq %r10,%r15
	salq $0x4,%r15
	movq 0x88(%rbp),%r9
	movq %r9,0x0(%r13,%r15,1)
	movq %r13,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%r11,%r15,1)
	movq %r10,%r15
	salq $0x4,%r15
	movq 0x80(%rbp),%r11
	movq %r11,0x8(%r13,%r15,1)
	incq %r10
	movq %r10,0x60(%rbp)
	movq 0x68(%rbp),%r14
	movq 0x70(%rbp),%r15
	jmp loop_1858
.p2align 0x4
.long 0x61B
L_181287:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_181288
L_181289:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_181290+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_181290
.p2align 0x4
.long 0xEF5
L_181290:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_181288:
	movq $0xB55,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x0(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl loopDec_1
.hidden loopDec_1
loopDec_1:
L_181502:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_181742
L_181503:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_455192
L_181504:
	movq 0x10(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r11
	movq 0xFFFFFFFFFFFFFFF8(%r11),%rax
	shrq $0x1,%rax
	subq $0xE0E,%rax
	cmpq $0x9,%rax
	ja L_455168
	leaq jumpTable_611(%rip),%rbx
	jmp *(%rbx,%rax,8)
.data
.p2align 0x4
jumpTable_611:
.quad L_455191,L_455185,L_455184,L_455183,L_455182,L_455181,L_455180,L_455172,L_455170,L_455169
.text
.p2align 0x4
L_455168:
L_181505:
	movq 0x10(%r11),%r15
	movq %r15,0x18(%rbp)
	movq 0x8(%r11),%r15
	movq %r15,0x38(%rbp)
	movq 0x0(%r11),%r15
	movq %r15,0x20(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x48(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x28(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_181506+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp rename_0
.p2align 0x4
L_455169:
L_181732:
	movq 0x8(%r11),%r15
	movq %r15,0x20(%rbp)
	movq 0x0(%r11),%r15
	movq %r15,0x38(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x30,%rbp
	leaq (L_181733+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loopDec_1
.p2align 0x4
L_455170:
L_181724:
	movq 0x0(%r11),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x129D,%r14
	je L_455171
L_181727:
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_181728+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loopDatBind_0
.p2align 0x4
L_455171:
L_181725:
	movq (globalObjptr+0x4EC0)(%rip),%r13
	movq %r15,%r14
	movq %r13,%r15
L_181726:
	movq %r15,0x0(%rbp)
	movq $0x1C2D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq 0x8(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x155,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x8(%rbp)
	addq $0x18,%r12
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_455172:
L_181696:
	movq 0x0(%r11),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	movq %r11,0x18(%rbp)
	cmpq %r14,%r11
	movq %r15,0x10(%rbp)
	jne L_455179
L_181698:
	testq %r11,%r11
	jz L_455178
L_181699:
	cmpq $0x7FFFFFFF,%r11
	ja L_455177
L_181700:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_181701
L_181720:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_181721+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_181721
.p2align 0x4
.long 0x813
L_181721:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_181701:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x158F,%rcx
	movq 0x18(%rbp),%rdx
	movq $0x58,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_181702+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_181702
.p2align 0x4
.long 0x813
L_181702:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq %rax,0x20(%rbp)
L_181703:
	movq $0x1,%r14
	movq $0x1,%r15
	movq $0x0,0x28(%rbp)
loop_1869:
	movq $0xB55,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x30(%rbp)
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x18(%rbp),%r15
	cmpq %r15,0x28(%rbp)
	jl L_455173
L_181704:
	movq 0x20(%rbp),%r15
	movq $0x12E7,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x1C2B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r11
	movq $0x155,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r15,0x8(%rbp)
	addq $0x18,%r12
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_455173:
L_181705:
	movq 0x28(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x10(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r11
	movq 0x0(%r11),%r10
	movq %r10,0x38(%rbp)
	movq 0x8(%r11),%r9
	movq %r9,0x40(%rbp)
	movq 0x8(%r10),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1297,%r14
	jne L_455175
L_181706:
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_455174
L_181707:
	movq %r14,0x50(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_181708+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3885
.p2align 0x4
L_455174:
L_181718:
	movq (globalObjptr+0x4EC0)(%rip),%r14
	movq $0x1,%r15
L_181710:
	movq $0x252F,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x10,%r12
	movq 0x38(%rbp),%r11
	movq 0x0(%r11),%r15
	movq $0x10C3,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	movq %r11,%r14
L_181711:
	movq %r15,0x48(%rbp)
	movq $0x10C5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x38(%rbp)
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_181712+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp combineUp_0
.p2align 0x4
L_455175:
L_181719:
	movq (globalObjptr+0x4EC0)(%rip),%r15
	movq 0x38(%rbp),%r14
	jmp L_181711
.p2align 0x4
L_455177:
L_181547:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_455178:
L_181723:
	movq (globalObjptr+0x4F18)(%rip),%r15
	movq %r15,0x20(%rbp)
	jmp L_181703
.p2align 0x4
L_455179:
L_181509:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_455180:
L_181695:
	movq (globalObjptr+0x4EC0)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_455181:
L_181633:
	movq 0x8(%r11),%r15
	movq %r15,0x18(%rbp)
	movq 0x0(%r11),%r15
	movq %r15,0x30(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x40(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x20(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_181634+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp rename_0
.p2align 0x4
L_455182:
L_181623:
	movq 0x8(%r11),%r15
	movq %r15,0x18(%rbp)
	movq 0x0(%r11),%r15
	movq %r15,0x30(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x28,%rbp
	leaq (L_181624+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loopDec_1
.p2align 0x4
L_455183:
L_181622:
	movq (globalObjptr+0x4EC0)(%rip),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_455184:
L_181615:
	movq 0x20(%r11),%r15
	movq %r15,0x10(%rbp)
	movq 0x18(%r11),%r15
	movq %r15,0x18(%rbp)
	movq 0x10(%r11),%r15
	movq %r15,0x40(%rbp)
	movq 0x8(%r11),%r15
	movq %r15,0x20(%rbp)
	movq 0x0(%r11),%r15
	movq %r15,0x28(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x50(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x30(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_181616+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp rename_0
.p2align 0x4
L_455185:
L_181596:
	movq 0x0(%r11),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	movq %r11,0x20(%rbp)
	cmpq %r11,%r14
	movq %r15,0x18(%rbp)
	jne L_181509
L_181598:
	testq %r11,%r11
	jz L_455189
L_181599:
	cmpq $0x7FFFFFFF,%r11
	ja L_181547
L_181600:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_181601
L_181611:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_181612+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_181612
.p2align 0x4
.long 0x4DF
L_181612:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_181601:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x143D,%rcx
	movq 0x20(%rbp),%rdx
	movq $0x40,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_181602+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_181602
.p2align 0x4
.long 0x4DF
L_181602:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq %rax,0x28(%rbp)
L_181603:
	movq $0x1,%r14
	movq $0x1,%r15
	movq $0x0,0x30(%rbp)
loop_1866:
	movq $0xB55,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x38(%rbp)
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	cmpq %r15,0x30(%rbp)
	jl L_455186
L_181604:
	movq 0x28(%rbp),%r15
	movq $0xB1B,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x1C1F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq 0x8(%rbp),%r15
	movq 0x0(%r15),%r11
	movq $0x155,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r15,0x8(%rbp)
	addq $0x18,%r12
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_455186:
L_181605:
	movq 0x30(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x18(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r11
	movq %r11,0x50(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x48,%rbp
	leaq (L_181606+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loopDec_1
.p2align 0x4
L_455189:
L_181614:
	movq (globalObjptr+0x4F00)(%rip),%r15
	movq %r15,0x28(%rbp)
	jmp L_181603
.p2align 0x4
L_455191:
L_181591:
	movq %r13,0x28(%rbp)
	movq 0x0(%r11),%r15
	movq %r15,0x20(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_181592+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loopTypBind_0
.p2align 0x4
L_455192:
L_181742:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_181743+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_181743
.p2align 0x4
.long 0x45B
L_181743:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_181504
.p2align 0x4
.long 0x4E3
L_181506:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_181507
L_181589:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_181590+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_181590
.p2align 0x4
.long 0x4EB
L_181590:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_181507:
	movq 0x20(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	movq %r11,0x40(%rbp)
	cmpq %r11,%r14
	jne L_181509
L_181510:
	testq %r11,%r11
	jz L_455207
L_181511:
	cmpq $0x7FFFFFFF,%r11
	ja L_181547
L_181512:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_181513
L_181585:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_181586+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_181586
.p2align 0x4
.long 0x67D
L_181586:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_181513:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14FB,%rcx
	movq 0x40(%rbp),%rdx
	movq $0x68,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_181514+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_181514
.p2align 0x4
.long 0x67D
L_181514:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq %rax,0x48(%rbp)
L_181515:
	movq $0x1,%r14
	movq $0x1,%r15
	movq $0x0,0x50(%rbp)
loop_1863:
	movq $0xB55,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r13,0x58(%rbp)
	addq $0x18,%r12
	movq 0x40(%rbp),%r15
	cmpq %r15,0x50(%rbp)
	jl L_455199
L_181516:
	movq 0x48(%rbp),%r15
	movq $0xB2D,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x18(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	movq %r11,0x20(%rbp)
	cmpq %r14,%r11
	jne L_181509
L_181518:
	testq %r11,%r11
	jz L_455197
L_181519:
	cmpq $0x7FFFFFFF,%r11
	ja L_181547
L_181520:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_181521
L_181544:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_181545+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_181545
.p2align 0x4
.long 0x24F6
L_181545:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_181521:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x158D,%rcx
	movq 0x20(%rbp),%rdx
	movq $0x50,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_181522+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_181522
.p2align 0x4
.long 0x24F6
L_181522:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq %rax,0x40(%rbp)
L_181523:
	movq $0x1,%r14
	movq $0x1,%r15
	movq $0x0,0x50(%rbp)
loop_1864:
	movq $0xB55,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x60(%rbp)
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	cmpq %r15,0x50(%rbp)
	jl L_455194
L_181524:
	movq 0x40(%rbp),%r15
	movq $0xB2B,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x58(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq %r13,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_181525+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp combineUp_0
.p2align 0x4
L_455194:
L_181533:
	movq 0x50(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq %r15,%r14
	salq $0x4,%r14
	movq 0x18(%rbp),%r11
	movq 0x0(%r11,%r14,1),%r10
	movq %r10,0x68(%rbp)
	salq $0x4,%r15
	movq 0x8(%r11,%r15,1),%r14
	movq %r14,0x78(%rbp)
	movq $0xB87,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r11
	movq %r11,0x8(%r15)
	movq $0xB89,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x10(%r10)
	addq $0x20,%r12
	movq %r11,0x0(%r10)
	movq %r14,0x8(%r10)
	movq %r10,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_181534+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3887
.p2align 0x4
L_455197:
L_181548:
	movq (globalObjptr+0x4EF8)(%rip),%r15
	movq %r15,0x40(%rbp)
	jmp L_181523
.p2align 0x4
L_455199:
L_181549:
	movq 0x50(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq %r15,%r14
	salq $0x4,%r14
	movq 0x20(%rbp),%r13
	movq 0x0(%r13,%r14,1),%r11
	movq %r11,0x60(%rbp)
	salq $0x4,%r15
	movq 0x8(%r13,%r15,1),%r14
	movq 0x0(%r14),%r11
	movq %r11,0x68(%rbp)
	movq 0x8(%r14),%r11
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r15
	movl %r15d,%r14d
	movslq %r14d,%r13
	movq %r13,0x78(%rbp)
	cmpq %r13,%r15
	movq %r11,0x70(%rbp)
	jne L_181509
L_181551:
	testq %r13,%r13
	jz L_455203
L_181552:
	cmpq $0x7FFFFFFF,%r13
	ja L_181547
L_181553:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_181554
L_181581:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_181582+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_181582
.p2align 0x4
.long 0x2500
L_181582:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_181554:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1589,%rcx
	movq 0x78(%rbp),%rdx
	movq $0x30,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_181555+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_181555
.p2align 0x4
.long 0x2500
L_181555:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq %rax,0x80(%rbp)
L_181556:
	movq $0x1,%r14
	movq $0x1,%r15
	movq $0x0,0x88(%rbp)
loop_1865:
	movq $0xB55,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x90(%rbp)
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x78(%rbp),%r15
	cmpq %r15,0x88(%rbp)
	jl L_455200
L_181557:
	movq 0x80(%rbp),%r15
	movq $0xB19,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x10CB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x70(%rbp)
	addq $0x18,%r12
	movq 0x68(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq 0x60(%rbp),%r15
	movq %r15,0xA0(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0xA8(%rbp)
	addq $0xA0,%rbp
	leaq (L_181558+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3889
.p2align 0x4
L_455200:
L_181567:
	movq 0x88(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq %r15,%r14
	salq $0x4,%r14
	movq 0x70(%rbp),%r13
	movq 0x0(%r13,%r14,1),%r11
	movq %r11,0x98(%rbp)
	salq $0x4,%r15
	movq 0x8(%r13,%r15,1),%r14
	movq %r14,0xA8(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0xB0(%rbp)
	addq $0xA8,%rbp
	leaq (L_181568+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3889
.p2align 0x4
L_455203:
L_181584:
	movq (globalObjptr+0x4EE8)(%rip),%r15
	movq %r15,0x80(%rbp)
	jmp L_181556
.p2align 0x4
L_455207:
L_181588:
	movq (globalObjptr+0x4EF0)(%rip),%r15
	movq %r15,0x48(%rbp)
	jmp L_181515
.p2align 0x4
.long 0x556
L_181733:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x38,%rbp
	leaq (L_181734+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loopDatBind_0
.p2align 0x4
.long 0x521
L_181728:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_181729
L_181730:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_181731+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_181731
.p2align 0x4
.long 0x4E7
L_181731:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_181729:
	movq $0x253D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x10(%rbp),%r15
	jmp L_181726
.p2align 0x4
.long 0x251A
L_181708:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_181709
L_181716:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_181717+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_181717
.p2align 0x4
.long 0x2206
L_181717:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_181709:
	movq 0x48(%rbp),%r14
	movq 0x50(%rbp),%r15
	jmp L_181710
.p2align 0x4
.long 0x251B
L_181712:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_181713
L_181714:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_181715+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_181715
.p2align 0x4
.long 0x251C
L_181715:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_181713:
	movq 0x20(%rbp),%r13
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq 0x28(%rbp),%r11
	movq 0x38(%rbp),%r10
	movq %r10,0x0(%r13,%r11,8)
	incq %r11
	movq %r11,0x28(%rbp)
	movq 0x30(%rbp),%r14
	movq 0x40(%rbp),%r15
	jmp loop_1869
.p2align 0x4
.long 0x4A5
L_181634:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_181635
L_181693:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_181694+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_181694
.p2align 0x4
.long 0x4F0
L_181694:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_181635:
	movq 0x18(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	movq %r11,0x38(%rbp)
	cmpq %r11,%r14
	jne L_181509
L_181637:
	testq %r11,%r11
	jz L_455221
L_181638:
	cmpq $0x7FFFFFFF,%r11
	ja L_181547
L_181639:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_181640
L_181689:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_181690+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_181690
.p2align 0x4
.long 0x73D
L_181690:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_181640:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1499,%rcx
	movq 0x38(%rbp),%rdx
	movq $0x68,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_181641+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_181641
.p2align 0x4
.long 0x73D
L_181641:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq %rax,0x40(%rbp)
L_181642:
	movq $0x1,%r14
	movq $0x1,%r15
	movq $0x0,0x48(%rbp)
loop_1867:
	movq $0xB55,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x50(%rbp)
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x38(%rbp),%r15
	cmpq %r15,0x48(%rbp)
	jl L_455213
L_181643:
	movq 0x40(%rbp),%r15
	movq $0xB27,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x20(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x50,%rbp
	leaq (L_181644+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp finish_10
.p2align 0x4
L_455213:
L_181648:
	movq 0x48(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x18(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movl %r15d,%r14d
	movslq %r14d,%r11
	movq %r11,0x60(%rbp)
	cmpq %r15,%r11
	movq %r13,0x58(%rbp)
	jne L_181509
L_181650:
	testq %r11,%r11
	jz L_455217
L_181651:
	cmpq $0x7FFFFFFF,%r11
	ja L_181547
L_181652:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_181653
L_181685:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_181686+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_181686
.p2align 0x4
.long 0x250F
L_181686:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_181653:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1583,%rcx
	movq 0x60(%rbp),%rdx
	movq $0x50,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_181654+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_181654
.p2align 0x4
.long 0x250F
L_181654:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq %rax,0x68(%rbp)
L_181655:
	movq $0x1,%r14
	movq $0x1,%r15
	movq $0x0,0x70(%rbp)
loop_1868:
	movq $0xB55,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x78(%rbp)
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x60(%rbp),%r15
	cmpq %r15,0x70(%rbp)
	jl L_455214
L_181656:
	movq 0x68(%rbp),%r15
	movq $0xB31,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x50(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_181657+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp combineUp_0
.p2align 0x4
L_455214:
L_181661:
	movq 0x70(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq %r15,%r14
	movq %r15,%r13
	imulq $0x18,%r14
	movq 0x58(%rbp),%r11
	movq 0x0(%r11,%r14,1),%r10
	movq %r10,0x80(%rbp)
	imulq $0x18,%r13
	movq 0x8(%r11,%r13,1),%r14
	movq %r14,0x88(%rbp)
	imulq $0x18,%r15
	movq 0x10(%r11,%r15,1),%r14
	movq %r14,0x98(%rbp)
	movq $0xB87,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r13
	movq %r13,0x8(%r15)
	movq $0xB89,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x10(%r11)
	addq $0x20,%r12
	movq %r13,0x0(%r11)
	movq %r14,0x8(%r11)
	movq %r11,0xA0(%rbp)
	addq $0x98,%rbp
	leaq (L_181662+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3887
.p2align 0x4
L_455217:
L_181688:
	movq (globalObjptr+0x4F10)(%rip),%r15
	movq %r15,0x68(%rbp)
	jmp L_181655
.p2align 0x4
L_455221:
L_181692:
	movq (globalObjptr+0x4F08)(%rip),%r15
	movq %r15,0x40(%rbp)
	jmp L_181642
.p2align 0x4
.long 0x65B
L_181624:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x38,%rbp
	leaq (L_181625+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loopDec_1
.p2align 0x4
.long 0x811
L_181616:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x18(%rbp),%r14
	movq %r14,0x48(%rbp)
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_181617+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3885
.p2align 0x4
.long 0x63F
L_181606:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x50(%rbp),%r14
	movq %r14,0x48(%rbp)
	movq %r15,0x58(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_181607+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp combineUp_0
.p2align 0x4
.long 0x521
L_181592:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_181593
L_181594:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_181595+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_181595
.p2align 0x4
.long 0x4E7
L_181595:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_181593:
	movq $0x1C1D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x8(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x155,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x8(%rbp)
	addq $0x18,%r12
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x2363
L_181525:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_181526
L_181531:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_181532+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_181532
.p2align 0x4
.long 0x24F9
L_181532:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_181526:
	movq $0xB55,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x58(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x58,%rbp
	leaq (L_181527+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp finish_10
.p2align 0x4
.long 0x24FA
L_181534:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x88,%rbp
	leaq (L_181535+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3889
.p2align 0x4
.long 0x2501
L_181558:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0xA8(%rbp),%r14
	movq %r14,0x68(%rbp)
	movq %r15,0x80(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_181559+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp combineUp_0
.p2align 0x4
.long 0x2506
L_181568:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0xA0(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0xA8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_181569
L_181579:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_181580+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_181580
.p2align 0x4
.long 0x250C
L_181580:
	addq $0xFFFFFFFFFFFFFF48,%rbp
L_181569:
	movq $0xB87,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r13
	movq %r13,0x8(%r15)
	movq $0xB89,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x10(%r11)
	addq $0x20,%r12
	movq %r13,0x0(%r11)
	movq %r14,0x8(%r11)
	movq %r11,0xC0(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0xB8(%rbp)
	addq $0xB8,%rbp
	leaq (L_181570+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3887
.p2align 0x4
.long 0x785
L_181734:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_181735
L_181740:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_181741+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_181741
.p2align 0x4
.long 0x637
L_181741:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_181735:
	movq $0x1C2F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x8(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x155,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x30(%rbp)
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x18(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_181736+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp combineUp_0
.p2align 0x4
.long 0xAA7
L_181644:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_181645
L_181646:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_181647+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_181647
.p2align 0x4
.long 0xAA9
L_181647:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_181645:
	movq $0x1C27,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x8(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x155,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x8(%rbp)
	addq $0x18,%r12
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x10D1
L_181657:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_181658
L_181659:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_181660+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_181660
.p2align 0x4
.long 0x2510
L_181660:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_181658:
	movq 0x40(%rbp),%r13
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq 0x48(%rbp),%r11
	movq 0x68(%rbp),%r10
	movq %r10,0x0(%r13,%r11,8)
	incq %r11
	movq %r11,0x48(%rbp)
	movq 0x50(%rbp),%r14
	movq 0x58(%rbp),%r15
	jmp loop_1867
.p2align 0x4
.long 0x2511
L_181662:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0x98(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_181663
L_181683:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_181684+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_181684
.p2align 0x4
.long 0x2517
L_181684:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_181663:
	movq $0xB57,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xA0(%rbp)
	addq $0x10,%r12
	movq (globalObjptr+0x4EC0)(%rip),%r14
	movq %r14,0x0(%r15)
	movq 0x88(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r13,%r10
	jne L_181509
L_181665:
	movl %r11d,0xB8(%rbp)
	movq $0x373B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x20,%r12
	movq 0x30(%rbp),%r11
	movq %r11,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	movq %r13,0xB0(%rbp)
	addq $0xB0,%rbp
	leaq (L_181666+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_9
.p2align 0x4
.long 0x638
L_181625:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_181626
L_181631:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_181632+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_181632
.p2align 0x4
.long 0x637
L_181632:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_181626:
	movq $0x1C25,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x8(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x155,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x30(%rbp)
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_181627+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp combineUp_0
.p2align 0x4
.long 0xBBC
L_181617:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x50(%rbp),%r14
	movq %r14,0x40(%rbp)
	movq %r15,0x50(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x50,%rbp
	leaq (L_181618+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp finish_10
.p2align 0x4
.long 0x250D
L_181607:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_181608
L_181609:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_181610+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_181610
.p2align 0x4
.long 0x250E
L_181610:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_181608:
	movq 0x28(%rbp),%r13
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq 0x30(%rbp),%r11
	movq 0x48(%rbp),%r10
	movq %r10,0x0(%r13,%r11,8)
	incq %r11
	movq %r11,0x30(%rbp)
	movq 0x38(%rbp),%r14
	movq 0x40(%rbp),%r15
	jmp loop_1866
.p2align 0x4
.long 0x24F7
L_181527:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_181528
L_181529:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_181530+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_181530
.p2align 0x4
.long 0x24F8
L_181530:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_181528:
	movq $0x1C1B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x8(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x155,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x8(%rbp)
	addq $0x18,%r12
	movq 0x10(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x24FB
L_181535:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x90(%rbp),%r14
	movq %r14,0x80(%rbp)
	movq %r15,0x90(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x90,%rbp
	leaq (L_181536+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp combineUp_0
.p2align 0x4
.long 0x2502
L_181559:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x78(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_181560
L_181565:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_181566+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_181566
.p2align 0x4
.long 0x2505
L_181566:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_181560:
	movq $0xB55,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x80(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_181561+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp combineUp_0
.p2align 0x4
.long 0x2507
L_181570:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0x98(%rbp)
	movq 0xC0(%rbp),%r14
	movq %r14,0xB0(%rbp)
	movq %r15,0xC0(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC0,%rbp
	leaq (L_181571+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp combineUp_0
.p2align 0x4
.long 0x69B
L_181736:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_181737
L_181738:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_181739+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_181739
.p2align 0x4
.long 0x86A
L_181739:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_181737:
	movq $0xB55,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x0(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x2512
L_181666:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movq 0xB0(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0xA0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0xA8(%rbp)
	movq 0x80(%rbp),%r15
	cmpq $0x1,%r15
	je L_455237
L_181667:
	movq %r15,0xB8(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xB8,%rbp
	leaq (L_181668+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3885
.p2align 0x4
L_455237:
L_181682:
	movq (globalObjptr+0x4EC0)(%rip),%r14
	movq $0x1,0x80(%rbp)
	movq %r14,%r15
L_181669:
	movq 0xA8(%rbp),%r14
	movq %r14,0xB0(%rbp)
	movq %r15,0xA8(%rbp)
	addq $0xA8,%rbp
	leaq (L_181670+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp combineUp_0
.p2align 0x4
.long 0x69B
L_181627:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_181628
L_181629:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_181630+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_181630
.p2align 0x4
.long 0x86A
L_181630:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_181628:
	movq $0xB55,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x0(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x840
L_181618:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_181619
L_181620:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_181621+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_181621
.p2align 0x4
.long 0x19D4
L_181621:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_181619:
	movq $0x1C21,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x30,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x20(%r15)
	movq 0x8(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x155,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x8(%rbp)
	addq $0x18,%r12
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x24FC
L_181536:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0x70(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_181537
L_181542:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_181543+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_181543
.p2align 0x4
.long 0x24FF
L_181543:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_181537:
	movq $0xB55,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x90(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x90,%rbp
	leaq (L_181538+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp combineUp_0
.p2align 0x4
.long 0x2503
L_181561:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_181562
L_181563:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_181564+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_181564
.p2align 0x4
.long 0x2504
L_181564:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_181562:
	movq 0x48(%rbp),%r13
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq 0x50(%rbp),%r10
	movq %r10,%r15
	salq $0x4,%r15
	movq 0x68(%rbp),%r9
	movq %r9,0x0(%r13,%r15,1)
	movq %r13,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%r11,%r15,1)
	movq %r10,%r15
	salq $0x4,%r15
	movq 0x70(%rbp),%r11
	movq %r11,0x8(%r13,%r15,1)
	incq %r10
	movq %r10,0x50(%rbp)
	movq 0x58(%rbp),%r14
	movq 0x60(%rbp),%r15
	jmp loop_1863
.p2align 0x4
.long 0x2508
L_181571:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x98(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0xA0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_181572
L_181577:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_181578+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_181578
.p2align 0x4
.long 0x250B
L_181578:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_181572:
	movq $0xB55,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x98(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xA0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0xC0(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC0,%rbp
	leaq (L_181573+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp combineUp_0
.p2align 0x4
.long 0x2513
L_181668:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq 0xC0(%rbp),%r14
	movq %r14,0xA0(%rbp)
	movq %r14,0x80(%rbp)
	jmp L_181669
.p2align 0x4
.long 0x2514
L_181670:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0xA0(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0xA8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_181671
L_181680:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_181681+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_181681
.p2align 0x4
.long 0x2519
L_181681:
	addq $0xFFFFFFFFFFFFFF48,%rbp
L_181671:
	movq $0xB55,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xA0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xA8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0xA8(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0xB0(%rbp)
	addq $0xA8,%rbp
	leaq (L_181672+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp combineUp_0
.p2align 0x4
.long 0x24FD
L_181538:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_181539
L_181540:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_181541+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_181541
.p2align 0x4
.long 0x24FE
L_181541:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_181539:
	movq 0x40(%rbp),%r13
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq 0x50(%rbp),%r10
	movq %r10,%r15
	salq $0x4,%r15
	movq 0x80(%rbp),%r9
	movq %r9,0x0(%r13,%r15,1)
	movq %r13,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%r11,%r15,1)
	movq %r10,%r15
	salq $0x4,%r15
	movq 0x78(%rbp),%r11
	movq %r11,0x8(%r13,%r15,1)
	incq %r10
	movq %r10,0x50(%rbp)
	movq 0x60(%rbp),%r14
	movq 0x68(%rbp),%r15
	jmp loop_1864
.p2align 0x4
.long 0x2509
L_181573:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0x98(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_181574
L_181575:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_181576+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_181576
.p2align 0x4
.long 0x250A
L_181576:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_181574:
	movq 0x80(%rbp),%r13
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq 0x88(%rbp),%r10
	movq %r10,%r15
	salq $0x4,%r15
	movq 0xB0(%rbp),%r9
	movq %r9,0x0(%r13,%r15,1)
	movq %r13,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%r11,%r15,1)
	movq %r10,%r15
	salq $0x4,%r15
	movq 0xA8(%rbp),%r11
	movq %r11,0x8(%r13,%r15,1)
	incq %r10
	movq %r10,0x88(%rbp)
	movq 0x90(%rbp),%r14
	movq 0x98(%rbp),%r15
	jmp loop_1865
.p2align 0x4
.long 0x2515
L_181672:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0xA0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_181673
L_181678:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_181679+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_181679
.p2align 0x4
.long 0x2518
L_181679:
	addq $0xFFFFFFFFFFFFFF50,%rbp
L_181673:
	movq $0xB55,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x90(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xA0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0xA8(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0xB0(%rbp)
	addq $0xA8,%rbp
	leaq (L_181674+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp combineUp_0
.p2align 0x4
.long 0x2516
L_181674:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0x90(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_181675
L_181676:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_181677+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_181677
.p2align 0x4
.long 0x2517
L_181677:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_181675:
	movq 0x68(%rbp),%r13
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq 0x70(%rbp),%r10
	movq %r10,%r15
	imulq $0x18,%r15
	movq 0x80(%rbp),%r9
	movq %r9,0x0(%r13,%r15,1)
	movq %r13,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%r11,%r15,1)
	movq %r10,%r15
	imulq $0x18,%r15
	movq 0x88(%rbp),%r9
	movq %r9,0x8(%r13,%r15,1)
	movq %r13,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%r11,%r15,1)
	movq %r10,%r15
	imulq $0x18,%r15
	movq 0x98(%rbp),%r11
	movq %r11,0x10(%r13,%r15,1)
	incq %r10
	movq %r10,0x70(%rbp)
	movq 0x78(%rbp),%r14
	movq 0x90(%rbp),%r15
	jmp loop_1868
