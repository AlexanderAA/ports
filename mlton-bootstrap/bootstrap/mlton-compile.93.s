/* MLton 20130715 (built Mon Jun 13 11:54:01 AEST 2016 on ports.extensibl.com) */
/*   created this file on Mon Jun 13 12:10:30 2016. */
/* Do not edit this file. */
/* Flag settings:  */
/*    align: 8 */
/*    atMLtons: (mlton-compile, @MLton, --) */
/*    chunk: chunk per function */
/*    closureConvertGlobalize: true */
/*    closureConvertShrink: true */
/*    codegen: amd64 */
/*    contifyIntoMain: false */
/*    debug: false */
/*    defaultChar: char8 */
/*    defaultWideChar: widechar32 */
/*    defaultInt: int32 */
/*    defaultReal: real64 */
/*    defaultWord: word32 */
/*    diag passes: [] */
/*    drop passes: [] */
/*    elaborate allowConstant (default): false */
/*    elaborate allowConstant (enabled): true */
/*    elaborate allowFFI (default): false */
/*    elaborate allowFFI (enabled): true */
/*    elaborate allowPrim (default): false */
/*    elaborate allowPrim (enabled): true */
/*    elaborate allowOverload (default): false */
/*    elaborate allowOverload (enabled): true */
/*    elaborate allowRebindEquals (default): false */
/*    elaborate allowRebindEquals (enabled): true */
/*    elaborate deadCode (default): false */
/*    elaborate deadCode (enabled): true */
/*    elaborate forceUsed (default): false */
/*    elaborate forceUsed (enabled): true */
/*    elaborate ffiStr (default):  */
/*    elaborate ffiStr (enabled): true */
/*    elaborate nonexhaustiveExnMatch (default): default */
/*    elaborate nonexhaustiveExnMatch (enabled): true */
/*    elaborate nonexhaustiveMatch (default): warn */
/*    elaborate nonexhaustiveMatch (enabled): true */
/*    elaborate redundantMatch (default): warn */
/*    elaborate redundantMatch (enabled): true */
/*    elaborate resolveScope (default): strdec */
/*    elaborate resolveScope (enabled): true */
/*    elaborate sequenceNonUnit (default): warn */
/*    elaborate sequenceNonUnit (enabled): true */
/*    elaborate warnUnused (default): true */
/*    elaborate warnUnused (enabled): true */
/*    elaborate only: false */
/*    emit main: true */
/*    export header: None */
/*    exn history: false */
/*    generated output format: executable */
/*    gc check: Limit */
/*    indentation: 3 */
/*    inlineIntoMain: true */
/*    inlineLeafA: {loops = true, repeat = true, size = Some 20} */
/*    inlineLeafB: {loops = true, repeat = true, size = Some 40} */
/*    inlineNonRec: {small = 60, product = 320} */
/*    input file: mlton */
/*    keep CoreML: false */
/*    keep def use: true */
/*    keep dot: false */
/*    keep Machine: false */
/*    keep passes: [] */
/*    keep RSSA: false */
/*    keep SSA: false */
/*    keep SSA2: false */
/*    keep SXML: false */
/*    keep XML: false */
/*    extra_: false */
/*    lib dir: /usr/ports/pobj/mlton-20130715/mlton-on-20130715-release/build/lib */
/*    lib target dir: /usr/ports/pobj/mlton-20130715/mlton-on-20130715-release/build/lib/targets/self */
/*    loop passes: 1 */
/*    mark cards: true */
/*    max function size: 10000 */
/*    mlb path vars: [{var = MLTON_ROOT, path = $(LIB_MLTON_DIR)/sml}, {var = SML_LIB, path = $(LIB_MLTON_DIR)/sml}] */
/*    native commented: 0 */
/*    native live stack: false */
/*    native optimize: 1 */
/*    native move hoist: true */
/*    native copy prop: true */
/*    native copy prop cutoff: 1000 */
/*    native cutoff: 100 */
/*    native live transfer: 8 */
/*    native shuffle: true */
/*    native ieee fp: false */
/*    native split: Some 20000 */
/*    optimizationPasses: [<ssa2::default>, <ssa::default>, <sxml::default>, <xml::default>] */
/*    polyvariance: Some {hofo = true, rounds = 2, small = 30, product = 300} */
/*    prefer abs paths: false */
/*    prof passes: [] */
/*    profile: None */
/*    profile branch: false */
/*    profile C: [] */
/*    profile IL: ProfileSource */
/*    profile include/exclude: [(Seq [Star [.], Or [Seq [Seq [[$], [(], [S], [M], [L], [_], [L], [I], [B], [)]]]], Star [.]], false)] */
/*    profile raise: false */
/*    profile stack: false */
/*    profile val: false */
/*    show basis: None */
/*    show def-use: None */
/*    show types: true */
/*    target: self */
/*    target arch: AMD64 */
/*    target OS: OpenBSD */
/*    type check: false */
/*    verbosity: Pass */
/*    warn unrecognized annotation: true */
/*    warn deprecated features: true */
/*    zone cut depth: 100 */
.text
.p2align 0x4
.globl get_126
.hidden get_126
get_126:
L_282334:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_282335
L_282424:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_282425+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_282425
.p2align 0x4
.long 0x45F
L_282425:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_282335:
	movq 0x8(%rbp),%r10
	movq 0x8(%r10),%r11
	movq 0x0(%r10),%r13
	movq 0x0(%rbp),%r10
	movq 0x8(%r10),%r15
	movq (globalObjptr+0x1068)(%rip),%r10
	movq 0x0(%r10),%r14
	incq %r14
	jo L_494897
L_282337:
	movq %r14,0x0(%r10)
	movq 0x0(%r15),%r10
	cmpq $0x1,%r10
	je L_494896
L_282338:
	movq 0x8(%r10),%r14
	movq 0x0(%r10),%r10
	xorl %ecx,%ecx
	movq %r10,%r15
.p2align 0x4,,0x7
L_282340:
	movq %r15,%r10
	andq $0x3,%r10
	jnz L_494895
L_282416:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r10
	shrq $0x1,%r10
	cmpq $0xCC0,%r10
	jne L_494894
L_282417:
	movq 0x8(%r15),%r10
	cmpq %r11,0x0(%r15)
	movq %r11,(localObjptr+0x0)(%rip)
	je L_494891
L_282341:
	incl %ecx
	jo L_494890
L_282343:
	cmpq $0x1,%r14
	je L_494884
L_282344:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq (localObjptr+0x0)(%rip),%r11
	jmp L_282340
.p2align 0x4
L_494884:
L_282345:
L_282346:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_494889
L_282348:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_494887
L_282413:
	movl %ecx,0x0(%r15)
	movq %r13,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	je L_494885
L_282414:
	movq 0x0(%r13),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_494885:
L_282415:
	shrq $0x1,%r13
	movb %r13b,%dl
L_282352:
	testb %dl,%dl
	jnz L_494886
L_282353:
	movq (globalObjptr+0xDFE0)(%rip),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_282354+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_494886:
L_282383:
	movq (globalObjptr+0xDFE0)(%rip),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_282384+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_494887:
L_282349:
	movq %r13,%r14
	andq $0x1,%r14
	cmpq $0x1,%r14
	je L_494888
L_282350:
	movq 0x0(%r13),%r14
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_494888:
L_282351:
	shrq $0x1,%r13
	movb %r13b,%dl
	jmp L_282352
.p2align 0x4
L_494889:
L_282347:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_494890:
L_282342:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_494891:
L_282419:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_282347
L_282420:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_494892
L_282422:
	movl %ecx,0x0(%r15)
	movq %r10,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_494892:
L_282421:
	movq %r10,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_494894:
	movq %r11,(localObjptr+0x0)(%rip)
	jmp L_282341
.p2align 0x4
L_494895:
	movq %r11,(localObjptr+0x0)(%rip)
	jmp L_282341
.p2align 0x4
L_494896:
L_282423:
	xorl %ecx,%ecx
	jmp L_282346
.p2align 0x4
L_494897:
L_282336:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_282354:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_282355+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1
L_282384:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_282385+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4AF
L_282355:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0x10D00)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_282356+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4AF
L_282385:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0x10D00)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_282386+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5AF
L_282356:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_282357+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5AF
L_282386:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_282387+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x51E
L_282357:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_282358
L_282381:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_282382+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_282382
.p2align 0x4
.long 0x4AE
L_282382:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_282358:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_282359:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_282342
L_282360:
	cmpq $0x1,%r14
	je L_494899
L_282361:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_282359
.p2align 0x4
L_494899:
L_282362:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_282363
L_282379:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_282380+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_282380
.p2align 0x4
.long 0x4E6
L_282380:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_282363:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_494900
L_282364:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
toString_366:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	addq $0x8,%rbp
	leaq (rev_366+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_494900:
L_282378:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_366
.p2align 0x4
.long 0x51E
L_282387:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_282388
L_282411:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_282412+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_282412
.p2align 0x4
.long 0x4AE
L_282412:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_282388:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_282389:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_282342
L_282390:
	cmpq $0x1,%r14
	je L_494904
L_282391:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_282389
.p2align 0x4
L_494904:
L_282392:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_282393
L_282409:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_282410+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_282410
.p2align 0x4
.long 0x4E6
L_282410:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_282393:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_494905
L_282394:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
toString_367:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	addq $0x8,%rbp
	leaq (rev_367+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_494905:
L_282408:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_367
.p2align 0x4
.long 0x1
rev_366:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_494911
L_282365:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_282366:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_494910
.p2align 0x4,,0x7
L_282367:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_494909
L_282368:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_282366
.p2align 0x4
L_494909:
L_282370:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_282371+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_494910:
L_282375:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_282376+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_282376
.p2align 0x4
.long 0x45B
L_282376:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_282367
.p2align 0x4
L_494911:
L_282377:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_282370
.p2align 0x4
.long 0x1
rev_367:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_494914
L_282395:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_282396:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_494913
.p2align 0x4,,0x7
L_282397:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_494912
L_282398:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_282396
.p2align 0x4
L_494912:
L_282400:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_282401+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_494913:
L_282405:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_282406+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_282406
.p2align 0x4
.long 0x45B
L_282406:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_282397
.p2align 0x4
L_494914:
L_282407:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_282400
.p2align 0x4
.long 0x1
L_282371:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_282372
L_282373:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_282374+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_282374
.p2align 0x4
.long 0x451
L_282374:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_282372:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_282401:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_282402
L_282403:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_282404+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_282404
.p2align 0x4
.long 0x451
L_282404:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_282402:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl treeAt_3
.hidden treeAt_3
treeAt_3:
L_282426:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_282489
L_282427:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_494939
L_282428:
	movq 0x0(%rbp),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x10(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_494938
L_282430:
	movq %r15,0x0(%r13)
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_494937
L_282431:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movl $0x0,0x18(%rbp)
	movq %r13,%r15
.p2align 0x4,,0x7
L_282433:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_282434
L_282477:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xCCA,%r13
	jne L_282434
L_282478:
	movq 0x8(%r14),%r13
	movq %r13,0x20(%rbp)
	movq 0x8(%rbp),%r13
	cmpq %r13,0x0(%r14)
	je L_494931
L_282434:
	movl 0x18(%rbp),%r13d
	incl %r13d
	movl %r13d,0x1C(%rbp)
	jo L_494930
L_282436:
	cmpq $0x1,%r15
	je L_494917
L_282437:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movl %r13d,0x18(%rbp)
	jmp L_282433
.p2align 0x4
L_494917:
L_282438:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_282439
L_282475:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_282476+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_282476
.p2align 0x4
.long 0x813
L_282476:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_282439:
	movl 0x1C(%rbp),%ecx
L_282440:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_494928
L_282442:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_282444
L_282474:
	movl %ecx,0x0(%r15)
L_282444:
	movq $0x9C1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x1403,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x0(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1995,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x10(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r10,0x0(%r13)
	movq %r14,%r15
L_282445:
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x8(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x18(%rbp)
	cmpq $0x1,%r13
	je L_494926
L_282446:
	movq 0x8(%r13),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_282447:
	incl %ecx
	movl %ecx,0x20(%rbp)
	jo L_494925
L_282449:
	cmpq $0x1,%r15
	je L_494918
L_282450:
	movq 0x8(%r15),%r15
	jmp L_282447
.p2align 0x4
L_494918:
L_282451:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_282452
L_282471:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_282472+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_282472
.p2align 0x4
.long 0x4E1
L_282472:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_282452:
	movl 0x20(%rbp),%ecx
L_282453:
	movslq %ecx,%r15
	movq %r15,0x20(%rbp)
	testq %r15,%r15
	jz L_494923
L_282454:
	cmpq $0x7FFFFFFF,%r15
	ja L_494922
L_282455:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_282456
L_282467:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_282468+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_282468
.p2align 0x4
.long 0x4E1
L_282468:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_282456:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14E1,%rcx
	movq 0x20(%rbp),%rdx
	movq $0x18,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_282457+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_282457
.p2align 0x4
.long 0x4E1
L_282457:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq %rax,0x28(%rbp)
L_282458:
	movq 0x18(%rbp),%r15
	movq $0x0,0x18(%rbp)
loop_3376:
	movq 0x20(%rbp),%r14
	cmpq %r14,0x18(%rbp)
	jnl L_494920
L_282460:
	cmpq $0x1,%r15
	je L_494919
L_282461:
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_282462+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp treeAt_3
.p2align 0x4
L_494919:
L_282466:
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_494920:
L_282459:
	movq 0x28(%rbp),%r15
	movq $0x43,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x5335,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_494922:
L_282469:
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_494923:
L_282470:
	movq (globalObjptr+0x1420)(%rip),%r14
	movq %r14,0x28(%rbp)
	jmp L_282458
.p2align 0x4
L_494925:
L_282448:
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_494926:
L_282473:
	xorl %ecx,%ecx
	jmp L_282453
.p2align 0x4
L_494928:
L_282441:
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_494930:
L_282435:
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_494931:
L_282480:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_282481
L_282486:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_282487+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_282487
.p2align 0x4
.long 0x499
L_282487:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_282481:
	movl 0x18(%rbp),%r14d
	movslq %r14d,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_494933
L_282483:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %r14d,0x0(%r13)
	jl L_494932
L_282484:
	movq 0x20(%rbp),%r15
	jmp L_282445
.p2align 0x4
L_494932:
L_282485:
	movq (globalObjptr+0x1078)(%rip),%r14
	movl 0x18(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movq 0x20(%rbp),%r15
	jmp L_282445
.p2align 0x4
L_494933:
L_282482:
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_494937:
L_282488:
	xorl %ecx,%ecx
	jmp L_282440
.p2align 0x4
L_494938:
L_282429:
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_494939:
L_282489:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_282490+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_282490
.p2align 0x4
.long 0x45F
L_282490:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_282428
.p2align 0x4
.long 0x73A
L_282462:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_282463
L_282464:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_282465+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_282465
.p2align 0x4
.long 0x103F
L_282465:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_282463:
	movq 0x28(%rbp),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq 0x18(%rbp),%r13
	movq 0x38(%rbp),%r11
	movq %r11,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x18(%rbp)
	movq 0x30(%rbp),%r15
	jmp loop_3376
.text
.p2align 0x4
.globl loop_3961
.hidden loop_3961
loop_3961:
L_282491:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x30(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_282492
L_282524:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_282525+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_282525
.p2align 0x4
.long 0x97B
L_282525:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_282492:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x20(%rbp),%r15
	movl 0x0(%r15),%r14d
	movl %r14d,%r13d
	incl %r14d
	jo L_494942
L_282494:
	movl %r14d,0x0(%r15)
	movl %r13d,0x50(%rbp)
	leaq L_282521(%rip),%r15
	movq %r15,0x28(%rbp)
	movq %rbp,%r15
	addq $0x30,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x18(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_282495+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_494942:
L_282493:
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x8EC
L_282495:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_282496
L_282522:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_282523+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_282523
.p2align 0x4
.long 0x1A1E
L_282523:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_282496:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x10C90)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_282497+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x920
L_282521:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x8EC
L_282497:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_282498+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_126
.p2align 0x4
.long 0x4625
L_282498:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_282499
L_282519:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_282520+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_282520
.p2align 0x4
.long 0x1A1E
L_282520:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_282499:
	movq 0x38(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x50(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r14
	je L_494945
L_282500:
	movq 0x30(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_494945:
L_282501:
	cmpl $0x0,0x50(%rbp)
	jl L_494950
L_282502:
	movq $0x1,0x58(%rbp)
	movl $0x0,0x54(%rbp)
loop_3377:
	movl 0x50(%rbp),%r15d
	cmpl %r15d,0x54(%rbp)
	jl L_494949
L_282503:
	movq 0x58(%rbp),%r15
	cmpq $0x1,%r15
	je L_494948
L_282504:
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	movq $0x1,0x20(%rbp)
.p2align 0x4,,0x7
L_282505:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_494947
.p2align 0x4,,0x7
L_282506:
	movq $0x28D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_494946
L_282507:
	movq %r15,0x20(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x18(%rbp)
	jmp L_282505
.p2align 0x4
L_494946:
L_282509:
	movq $0xFCB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x20,%r12
	movq 0x40(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x48(%rbp),%r15
	movq %r15,0x10(%r14)
	movq 0x8(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x28D7,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r10,0x0(%r13)
	movq 0x30(%rbp),%r14
	movq %r14,(gcState+0x20)(%rip)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_494947:
L_282510:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_282511+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_282511
.p2align 0x4
.long 0x39C9
L_282511:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	jmp L_282506
.p2align 0x4
L_494948:
L_282512:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_282509
.p2align 0x4
L_494949:
L_282513:
	movslq 0x54(%rbp),%r15
	movq 0x38(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x68(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x8(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x68,%rbp
	leaq (L_282514+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3961
.p2align 0x4
L_494950:
L_282518:
	movq 0x30(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4626
L_282514:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_282515
L_282516:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_282517+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_282517
.p2align 0x4
.long 0x4627
L_282517:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_282515:
	movq $0xFCD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq $0x1,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x28D5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x58(%rbp),%r15
	movq %r15,0x8(%r14)
	movq %r14,0x58(%rbp)
	incl 0x54(%rbp)
	jmp loop_3377
.text
.p2align 0x4
.globl x_1839
.hidden x_1839
x_1839:
L_282526:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x38(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_282527
L_282832:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_282833+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_282833
.p2align 0x4
.long 0x976
L_282833:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_282527:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_282528+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp openOut_0
.p2align 0x4
.long 0x902
L_282528:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_282529
L_282830:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_282831+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_282831
.p2align 0x4
.long 0xC48
L_282831:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_282529:
	movq $0x3157,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x50(%rbp)
	leaq L_282602(%rip),%r15
	movq %r15,0x30(%rbp)
	movq %rbp,%r15
	addq $0x38,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movb $0x4,0x58(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x50,%rbp
	leaq (L_282530+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp outputHeader_0
.p2align 0x4
.long 0x9EE
L_282530:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_282531
L_282828:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_282829+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_282829
.p2align 0x4
.long 0x192E
L_282829:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_282531:
	movq 0x28(%rbp),%r15
	movq 0xC8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0xC0(%r15),%r13
	movq %r13,0x48(%rbp)
	movq 0xB8(%r15),%r11
	movq %r11,0x50(%rbp)
	movq 0xB0(%r15),%r11
	movq %r11,0x58(%rbp)
	movq 0xA8(%r15),%r11
	movq %r11,0x60(%rbp)
	movq 0xA0(%r15),%r11
	movq %r11,0x68(%rbp)
	movq 0x98(%r15),%r11
	movq %r11,0x70(%rbp)
	movq 0x90(%r15),%r11
	movq %r11,0x78(%rbp)
	movq 0x88(%r15),%r11
	movq %r11,0x80(%rbp)
	movq 0x80(%r15),%r11
	movq %r11,0x88(%rbp)
	movq 0x78(%r15),%r11
	movq %r11,0x90(%rbp)
	movq 0x70(%r15),%r11
	movq %r11,0x98(%rbp)
	movq 0x68(%r15),%r11
	movq %r11,0xA0(%rbp)
	movq 0x60(%r15),%r11
	movq %r11,0xA8(%rbp)
	movq 0x58(%r15),%r11
	movq %r11,0xB0(%rbp)
	movq 0x50(%r15),%r11
	movq %r11,0xB8(%rbp)
	movq 0x48(%r15),%r11
	movq %r11,0xC0(%rbp)
	movq 0x40(%r15),%r11
	movq %r11,0xC8(%rbp)
	movq 0x38(%r15),%r11
	movq %r11,0xD0(%rbp)
	movq 0x30(%r15),%r11
	movq %r11,0xD8(%rbp)
	movq 0x28(%r15),%r11
	movq %r11,0xE0(%rbp)
	movq 0x20(%r15),%r11
	movq %r11,0xE8(%rbp)
	movq 0x18(%r15),%r11
	movq %r11,0xF0(%rbp)
	movq 0x10(%r15),%r11
	movq %r11,0xF8(%rbp)
	movq 0x8(%r15),%r11
	movq %r11,0x100(%rbp)
	movq 0x0(%r15),%r11
	movq %r11,0x108(%rbp)
	movq 0x20(%rbp),%r15
	movq 0x0(%r15),%r11
	movq %r11,0x110(%rbp)
	movq 0x8(%r15),%r11
	movq %r11,0x118(%rbp)
	movq 0x10(%r15),%r10
	movq %r10,0x120(%rbp)
	movq 0x18(%r15),%r10
	movq %r10,0x128(%rbp)
	movq $0x71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x89,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r10,0x130(%rbp)
	addq $0x18,%r12
	movq %r15,0x0(%r10)
	movq %r15,0x8(%r10)
	movq $0x3251,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x10(%r10)
	movq %r15,0x18(%r10)
	addq $0x28,%r12
	movq %r14,0x0(%r10)
	movq %r13,0x8(%r10)
	movq %r10,0x140(%rbp)
	movq %r11,0x148(%rbp)
	addq $0x140,%rbp
	leaq (L_282532+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_5
.p2align 0x4
.long 0x651
L_282602:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	movq %r15,0x18(%rbp)
L_282550:
	movq 0x38(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x40(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_282551+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp closeOut_0
.p2align 0x4
.long 0x4628
L_282532:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	movq (globalObjptr+0x10C48)(%rip),%r15
	movq %r15,0x140(%rbp)
	addq $0x140,%rbp
	leaq (L_282533+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x27B9
L_282551:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4628
L_282533:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	movq 0x140(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_282534
L_282826:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x140,%rbp
	leaq (L_282827+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_282827
.p2align 0x4
.long 0x45F4
L_282827:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
L_282534:
	movq $0x3E37,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x138(%rbp)
	addq $0x10,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x9D8)(%rip),%r14
	movq %r14,0x148(%rbp)
	movq 0x28(%rbp),%r14
	movq %r14,0x150(%rbp)
	movq %r15,0x158(%rbp)
	addq $0x148,%rbp
	leaq (L_282535+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3780
.p2align 0x4
.long 0x4629
L_282535:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
	movq 0x148(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x148(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x150(%rbp)
	addq $0x148,%rbp
	leaq (L_282536+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x4629
L_282536:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_282537
L_282824:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x148,%rbp
	leaq (L_282825+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_282825
.p2align 0x4
.long 0x4666
L_282825:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
L_282537:
	movq $0x3371,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x38,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x20(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x28(%r15)
	movq %r15,0x148(%rbp)
	movq 0x128(%rbp),%r15
	movq %r15,0x150(%rbp)
	addq $0x148,%rbp
	leaq (L_282538+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_1
.p2align 0x4
.long 0x462A
L_282538:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
	movq (globalObjptr+0x10098)(%rip),%r15
	movq %r15,0x148(%rbp)
	addq $0x148,%rbp
	leaq (L_282539+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x462A
L_282539:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
	movq 0x148(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq (globalObjptr+0x9D8)(%rip),%r14
	movq %r14,0x148(%rbp)
	movq %r15,0x150(%rbp)
	movq 0x138(%rbp),%r15
	movq %r15,0x158(%rbp)
	addq $0x148,%rbp
	leaq (L_282540+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3780
.p2align 0x4
.long 0x462A
L_282540:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
	movq 0x148(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x148(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x150(%rbp)
	addq $0x148,%rbp
	leaq (L_282541+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x462A
L_282541:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_282542
L_282822:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x148,%rbp
	leaq (L_282823+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_282823
.p2align 0x4
.long 0x4665
L_282823:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
L_282542:
	movq $0x324F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x148(%rbp)
	movq 0x118(%rbp),%r15
	movq %r15,0x150(%rbp)
	addq $0x148,%rbp
	leaq (L_282543+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_5
.p2align 0x4
.long 0x462B
L_282543:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
	movq (globalObjptr+0x10C60)(%rip),%r15
	movq %r15,0x148(%rbp)
	addq $0x148,%rbp
	leaq (L_282544+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x462B
L_282544:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
	movq 0x148(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x110(%rbp),%r15
	movq %r15,0x148(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x150(%rbp)
	addq $0x148,%rbp
	leaq (L_282545+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
.long 0x462C
L_282545:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
	movq 0x148(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq %r15,0x148(%rbp)
	addq $0x148,%rbp
	leaq (L_282546+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x462C
L_282546:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
	movq 0x148(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_282547
L_282820:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x148,%rbp
	leaq (L_282821+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_282821
.p2align 0x4
.long 0x4664
L_282821:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
L_282547:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x60(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x68(%rbp)
	addq $0x18,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_282548:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_494962
L_282552:
	cmpq $0x1,%r14
	je L_494959
L_282553:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_282548
.p2align 0x4
L_494959:
L_282554:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_282555
L_282818:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x148,%rbp
	leaq (L_282819+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_282819
.p2align 0x4
.long 0x4663
L_282819:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
L_282555:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_494960
L_282556:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
x_939:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x150(%rbp)
	movq (globalObjptr+0x9D8)(%rip),%r15
	movq %r15,0x148(%rbp)
	movq 0x138(%rbp),%r15
	movq %r15,0x158(%rbp)
	addq $0x148,%rbp
	leaq (L_282557+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3780
.p2align 0x4
L_494960:
L_282817:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp x_939
.p2align 0x4
L_494962:
L_282549:
	movq $0x3,0x18(%rbp)
	jmp L_282550
.p2align 0x4
.long 0x462D
L_282557:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
	movq 0x148(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x148(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x150(%rbp)
	addq $0x148,%rbp
	leaq (L_282558+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x462D
L_282558:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
	movq (globalObjptr+0x10C68)(%rip),%r15
	movq %r15,0x148(%rbp)
	addq $0x148,%rbp
	leaq (L_282559+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x462D
L_282559:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
	movq 0x148(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq (globalObjptr+0x9D8)(%rip),%r14
	movq %r14,0x148(%rbp)
	movq %r15,0x150(%rbp)
	movq 0x138(%rbp),%r15
	movq %r15,0x158(%rbp)
	addq $0x148,%rbp
	leaq (L_282560+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3780
.p2align 0x4
.long 0x462D
L_282560:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
	movq 0x148(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x148(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x150(%rbp)
	addq $0x148,%rbp
	leaq (L_282561+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x462D
L_282561:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_282562
L_282815:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x148,%rbp
	leaq (L_282816+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_282816
.p2align 0x4
.long 0x4662
L_282816:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
L_282562:
	movq 0x120(%rbp),%r14
	cmpq $0x1,%r14
	je L_494964
L_282563:
	movq 0x8(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0x0(%r14),%r15
L_282564:
	movq 0x0(%r15),%r14
	movq 0x18(%r14),%r13
	movq %r13,0x60(%rbp)
	movq 0x20(%r14),%r13
	movq %r13,0x68(%rbp)
	movq 0x88(%rbp),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x78(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x110(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x118(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x120(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x128(%rbp)
	movq 0x10(%r14),%r13
	movq %r13,0x140(%rbp)
	movq 0x28(%r14),%r13
	movq %r13,0x148(%rbp)
	leaq L_282602(%rip),%r15
	movq %r15,0x30(%rbp)
	movq (globalObjptr+0xF1F0)(%rip),%r15
	movq %r15,0x158(%rbp)
	addq $0x158,%rbp
	leaq (L_282565+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_494964:
L_282597:
	movq 0x98(%rbp),%r15
	movl 0x0(%r15),%r14d
	testl %r14d,%r14d
	jz L_494965
L_282600:
	movq $0x41A5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x28,%r12
	movq 0xE0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xD8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x108(%rbp),%r14
	movq %r14,0x18(%r15)
	movq $0x2765,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x50(%rbp)
	addq $0x10,%r12
	leaq L_282602(%rip),%r15
	movq %r15,0x30(%rbp)
	movb $0x1,0x58(%rbp)
	movq (globalObjptr+0x10C70)(%rip),%r15
	movq %r15,0x60(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x50,%rbp
	leaq (L_282601+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp saveToFile_0
.p2align 0x4
L_494965:
L_282599:
	movq 0x38(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x40(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp closeOut_0
.p2align 0x4
.long 0x462E
L_282565:
	addq $0xFFFFFFFFFFFFFEA8,%rbp
	movq 0x158(%rbp),%r15
	movq %r15,0x150(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x160(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x168(%rbp)
	addq $0x160,%rbp
	leaq (L_282566+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
.long 0x1A69
L_282601:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_282599
.p2align 0x4
.long 0x462F
L_282566:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq %r15,0x158(%rbp)
	movq %r15,0x160(%rbp)
	addq $0x160,%rbp
	leaq (L_282567+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x462F
L_282567:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq %r15,0x158(%rbp)
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x168(%rbp)
	addq $0x168,%rbp
	leaq (L_282568+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4630
L_282568:
	addq $0xFFFFFFFFFFFFFE98,%rbp
	movq 0x168(%rbp),%r15
	movq %r15,0x160(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_282569
L_282812:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x170,%rbp
	leaq (L_282813+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_282813
.p2align 0x4
.long 0x4661
L_282813:
	addq $0xFFFFFFFFFFFFFE90,%rbp
L_282569:
	movq 0x148(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_494967
L_282572:
	movl %r13d,0x178(%rbp)
	movq $0x3C63,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x28,%r12
	movq 0x110(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x118(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x78(%rbp),%r13
	movq %r13,0x10(%r14)
	movq %r15,0x18(%r14)
	movq %r14,0x170(%rbp)
	addq $0x170,%rbp
	leaq (L_282573+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
L_494967:
L_282571:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,0x18(%rbp)
	jmp L_282550
.p2align 0x4
.long 0x4631
L_282573:
	addq $0xFFFFFFFFFFFFFE90,%rbp
	movq 0x170(%rbp),%r15
	movq %r15,0x148(%rbp)
	movq %r15,0x170(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x178(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0x180(%rbp)
	movq (globalObjptr+0xD0F8)(%rip),%r15
	movq %r15,0x188(%rbp)
	addq $0x170,%rbp
	leaq (L_282574+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
.long 0x4631
L_282574:
	addq $0xFFFFFFFFFFFFFE90,%rbp
	movq 0x170(%rbp),%r15
	movq %r15,0x148(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_282575
L_282810:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x170,%rbp
	leaq (L_282811+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_282811
.p2align 0x4
.long 0x4661
L_282811:
	addq $0xFFFFFFFFFFFFFE90,%rbp
L_282575:
	movq 0x118(%rbp),%r14
	movl 0x0(%r14),%r13d
	testl %r13d,%r13d
	jnz L_494969
L_282576:
	movq $0x1,%r15
	xorl %ecx,%ecx
L_282577:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x110(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0xAEC8)(%rip),%r15
	movq %r15,0x170(%rbp)
	addq $0x170,%rbp
	leaq (L_282578+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_494969:
L_282741:
	movq (globalObjptr+0xA160)(%rip),%r15
	movq %r15,0x170(%rbp)
	addq $0x170,%rbp
	leaq (L_282742+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4632
L_282578:
	addq $0xFFFFFFFFFFFFFE90,%rbp
	movq 0x170(%rbp),%r15
	movq %r15,0x118(%rbp)
	movq 0x120(%rbp),%r15
	movq %r15,0x170(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x178(%rbp)
	addq $0x170,%rbp
	leaq (L_282579+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
.long 0x4653
L_282742:
	addq $0xFFFFFFFFFFFFFE90,%rbp
	movq 0x170(%rbp),%r15
	movq %r15,0x118(%rbp)
	cmpq $0x1,0x140(%rbp)
	je L_494971
L_282743:
	movq (globalObjptr+0xDF50)(%rip),%r15
	movq %r15,0x170(%rbp)
	addq $0x170,%rbp
	leaq (L_282744+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_494971:
L_282805:
	movq (globalObjptr+0xDF58)(%rip),%r15
	movq %r15,0x170(%rbp)
	addq $0x170,%rbp
	leaq (L_282806+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4633
L_282579:
	addq $0xFFFFFFFFFFFFFE90,%rbp
	movq 0x170(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq %r15,0x170(%rbp)
	addq $0x170,%rbp
	leaq (L_282580+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4654
L_282744:
	addq $0xFFFFFFFFFFFFFE90,%rbp
	movq 0x170(%rbp),%r15
	movq %r15,0x168(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_282745
L_282803:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x178,%rbp
	leaq (L_282804+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_282804
.p2align 0x4
.long 0x465C
L_282804:
	addq $0xFFFFFFFFFFFFFE88,%rbp
L_282745:
	movq 0x140(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_282571
L_282747:
	movl %r13d,0x180(%rbp)
	movq $0x3B6B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x110(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x178(%rbp)
	addq $0x178,%rbp
	leaq (L_282748+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
.long 0x4660
L_282806:
	addq $0xFFFFFFFFFFFFFE90,%rbp
	movq 0x170(%rbp),%r15
	movq %r15,0x140(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_282807
L_282808:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x170,%rbp
	leaq (L_282809+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_282809
.p2align 0x4
.long 0x4661
L_282809:
	addq $0xFFFFFFFFFFFFFE90,%rbp
L_282807:
	movq 0x140(%rbp),%r15
L_282757:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x140(%rbp)
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xF1F8)(%rip),%r15
	movq %r15,0x8(%r14)
	cmpq $0x1,0x128(%rbp)
	je L_494974
L_282758:
	movq (globalObjptr+0xDF50)(%rip),%r15
	movq %r15,0x170(%rbp)
	addq $0x170,%rbp
	leaq (L_282759+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_494974:
L_282793:
	movq (globalObjptr+0xDF58)(%rip),%r15
	movq %r15,0x170(%rbp)
	addq $0x170,%rbp
	leaq (L_282794+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4633
L_282580:
	addq $0xFFFFFFFFFFFFFE90,%rbp
	movq 0x170(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq (globalObjptr+0xEAA0)(%rip),%r15
	movq %r15,0x170(%rbp)
	addq $0x170,%rbp
	leaq (L_282581+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4655
L_282748:
	addq $0xFFFFFFFFFFFFFE88,%rbp
	movq 0x178(%rbp),%r15
	movq %r15,0x140(%rbp)
	movq %r15,0x178(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x180(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0x188(%rbp)
	movq (globalObjptr+0xD0F8)(%rip),%r15
	movq %r15,0x190(%rbp)
	addq $0x178,%rbp
	leaq (L_282749+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
.long 0x4654
L_282759:
	addq $0xFFFFFFFFFFFFFE90,%rbp
	movq 0x170(%rbp),%r15
	movq %r15,0x168(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_282760
L_282791:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x178,%rbp
	leaq (L_282792+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_282792
.p2align 0x4
.long 0x465C
L_282792:
	addq $0xFFFFFFFFFFFFFE88,%rbp
L_282760:
	movq 0x128(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_282571
L_282762:
	movl %r13d,0x180(%rbp)
	movq $0x3C65,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x110(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x178(%rbp)
	addq $0x178,%rbp
	leaq (L_282763+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
.long 0x465D
L_282794:
	addq $0xFFFFFFFFFFFFFE90,%rbp
	movq 0x170(%rbp),%r15
	movq %r15,0x110(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_282795
L_282796:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x170,%rbp
	leaq (L_282797+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_282797
.p2align 0x4
.long 0x465E
L_282797:
	addq $0xFFFFFFFFFFFFFE90,%rbp
L_282795:
	movq 0x110(%rbp),%r15
L_282772:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xF090)(%rip),%r15
	movq %r15,0x8(%r14)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x140(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x170(%rbp)
	addq $0x170,%rbp
	leaq (L_282773+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp record_3
.p2align 0x4
.long 0x4634
L_282581:
	addq $0xFFFFFFFFFFFFFE90,%rbp
	movq 0x170(%rbp),%r15
	movq %r15,0x128(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_282582
L_282739:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x170,%rbp
	leaq (L_282740+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_282740
.p2align 0x4
.long 0x4652
L_282740:
	addq $0xFFFFFFFFFFFFFE90,%rbp
L_282582:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x128(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x78(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x118(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x110(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x148(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x160(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x158(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x140(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x150(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_282583:
	addl 0x0(%r15),%ecx
	movl %ecx,0x78(%rbp)
	jo L_282549
L_282584:
	cmpq $0x1,%r14
	je L_494979
L_282585:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_282583
.p2align 0x4
L_494979:
L_282586:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_282587
L_282737:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x150,%rbp
	leaq (L_282738+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_282738
.p2align 0x4
.long 0x4651
L_282738:
	addq $0xFFFFFFFFFFFFFEB0,%rbp
L_282587:
	movl 0x78(%rbp),%ecx
	testl %ecx,%ecx
	jz L_494980
L_282588:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x140(%rbp),%r14
	movq %r14,0x0(%r15)
x_940:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x150(%rbp)
	movq (globalObjptr+0x9D8)(%rip),%r15
	movq %r15,0x148(%rbp)
	movq 0x138(%rbp),%r15
	movq %r15,0x158(%rbp)
	addq $0x148,%rbp
	leaq (L_282589+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3780
.p2align 0x4
L_494980:
L_282736:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp x_940
.p2align 0x4
.long 0x4655
L_282749:
	addq $0xFFFFFFFFFFFFFE88,%rbp
	movq 0x178(%rbp),%r15
	movq %r15,0x140(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_282750
L_282801:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x178,%rbp
	leaq (L_282802+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_282802
.p2align 0x4
.long 0x465C
L_282802:
	addq $0xFFFFFFFFFFFFFE88,%rbp
L_282750:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x140(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x170(%rbp)
	addq $0x18,%r12
	movq 0x168(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_282751:
	addl 0x0(%r15),%ecx
	movl %ecx,0x140(%rbp)
	jo L_282549
L_282752:
	cmpq $0x1,%r14
	je L_494984
L_282753:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_282751
.p2align 0x4
L_494984:
L_282754:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_282755
L_282799:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x180,%rbp
	leaq (L_282800+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_282800
.p2align 0x4
.long 0x465F
L_282800:
	addq $0xFFFFFFFFFFFFFE80,%rbp
L_282755:
	movl 0x140(%rbp),%r15d
	testl %r15d,%r15d
	jz L_494985
L_282756:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x170(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,%r15
	jmp L_282757
.p2align 0x4
L_494985:
L_282798:
	movq (globalObjptr+0x9D0)(%rip),%r14
	movq %r14,%r15
	jmp L_282757
.p2align 0x4
.long 0x4656
L_282763:
	addq $0xFFFFFFFFFFFFFE88,%rbp
	movq 0x178(%rbp),%r15
	movq %r15,0x110(%rbp)
	movq %r15,0x178(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0x180(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0x188(%rbp)
	movq (globalObjptr+0xD0F8)(%rip),%r15
	movq %r15,0x190(%rbp)
	addq $0x178,%rbp
	leaq (L_282764+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
.long 0x4657
L_282773:
	addq $0xFFFFFFFFFFFFFE90,%rbp
	movq 0x170(%rbp),%r15
	movq %r15,0x110(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_282774
L_282784:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x170,%rbp
	leaq (L_282785+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_282785
.p2align 0x4
.long 0x4659
L_282785:
	addq $0xFFFFFFFFFFFFFE90,%rbp
L_282774:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x110(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x128(%rbp)
	addq $0x18,%r12
	movq 0x118(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_282775:
	addl 0x0(%r15),%ecx
	movl %ecx,0x110(%rbp)
	jo L_282549
L_282776:
	cmpq $0x1,%r14
	je L_494989
L_282777:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_282775
.p2align 0x4
L_494989:
L_282778:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_282779
L_282782:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x170,%rbp
	leaq (L_282783+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_282783
.p2align 0x4
.long 0x4658
L_282783:
	addq $0xFFFFFFFFFFFFFE90,%rbp
L_282779:
	movl 0x110(%rbp),%ecx
	testl %ecx,%ecx
	jz L_494990
L_282780:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x128(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_282577
.p2align 0x4
L_494990:
L_282781:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_282577
.p2align 0x4
.long 0x4635
L_282589:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
	movq 0x148(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x148(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x150(%rbp)
	addq $0x148,%rbp
	leaq (L_282590+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x4656
L_282764:
	addq $0xFFFFFFFFFFFFFE88,%rbp
	movq 0x178(%rbp),%r15
	movq %r15,0x110(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_282765
L_282789:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x178,%rbp
	leaq (L_282790+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_282790
.p2align 0x4
.long 0x465B
L_282790:
	addq $0xFFFFFFFFFFFFFE88,%rbp
L_282765:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x110(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x128(%rbp)
	addq $0x18,%r12
	movq 0x168(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_282766:
	addl 0x0(%r15),%ecx
	movl %ecx,0x110(%rbp)
	jo L_282549
L_282767:
	cmpq $0x1,%r14
	je L_494994
L_282768:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_282766
.p2align 0x4
L_494994:
L_282769:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_282770
L_282787:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x170,%rbp
	leaq (L_282788+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_282788
.p2align 0x4
.long 0x465A
L_282788:
	addq $0xFFFFFFFFFFFFFE90,%rbp
L_282770:
	movl 0x110(%rbp),%r15d
	testl %r15d,%r15d
	jz L_494995
L_282771:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x128(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq %r13,%r15
	jmp L_282772
.p2align 0x4
L_494995:
L_282786:
	movq (globalObjptr+0x9D0)(%rip),%r14
	movq %r14,%r15
	jmp L_282772
.p2align 0x4
.long 0x4635
L_282590:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_282591
L_282734:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x148,%rbp
	leaq (L_282735+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_282735
.p2align 0x4
.long 0x4650
L_282735:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
L_282591:
	movq $0x3467,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x90(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x148(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x150(%rbp)
	addq $0x148,%rbp
	leaq (L_282592+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_3
.p2align 0x4
.long 0x4635
L_282592:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_282593
L_282732:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x148,%rbp
	leaq (L_282733+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_282733
.p2align 0x4
.long 0x4650
L_282733:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
L_282593:
	movq 0x98(%rbp),%r14
	movl 0x0(%r14),%r13d
	testl %r13d,%r13d
	jnz L_495001
L_282594:
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_282597
L_282595:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	jmp L_282564
.p2align 0x4
L_495001:
L_282603:
	movq $0x9C1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x78(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x71,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x110(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x2CD,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x118(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0x71,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,0x128(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r11)
	movl $0x0,0x4(%r11)
	movq $0xCFD,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r10,0x140(%rbp)
	addq $0x28,%r12
	movq %r11,0x0(%r10)
	movq %r15,0x8(%r10)
	movq %r13,0x10(%r10)
	movq %r11,0x18(%r10)
	movq $0x71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0xDD3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x148(%rbp)
	addq $0x18,%r12
	movq $0x1,0x0(%r13)
	movq %r15,0x8(%r13)
	movq $0x89,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq $0x346F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x80(%r15)
	addq $0x98,%r12
	movq %r14,0x0(%r15)
	movq 0xA0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0xA8(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0xB0(%rbp),%r14
	movq %r14,0x20(%r15)
	movq 0xB8(%rbp),%r14
	movq %r14,0x28(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x30(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x38(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x40(%r15)
	movq 0xC0(%rbp),%r14
	movq %r14,0x48(%r15)
	movq 0xC8(%rbp),%r14
	movq %r14,0x50(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x58(%r15)
	movq 0x80(%rbp),%r14
	movq %r14,0x60(%r15)
	movq 0xD0(%rbp),%r14
	movq %r14,0x68(%r15)
	movq 0x130(%rbp),%r14
	movq %r14,0x70(%r15)
	movq 0xD8(%rbp),%r14
	movq %r14,0x78(%r15)
	movq %r10,0x88(%r15)
	movq %r15,0x158(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x160(%rbp)
	addq $0x158,%rbp
	leaq (L_282604+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_3
.p2align 0x4
.long 0x462E
L_282604:
	addq $0xFFFFFFFFFFFFFEA8,%rbp
	movq 0x120(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x150(%rbp)
	movq %r14,0x160(%rbp)
	movq 0x128(%rbp),%r15
	movq %r15,0x168(%rbp)
	addq $0x160,%rbp
	leaq (L_282605+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_4
.p2align 0x4
.long 0x4636
L_282605:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq %r15,0x120(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_282606
L_282730:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_282731+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_282731
.p2align 0x4
.long 0x464F
L_282731:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
L_282606:
	cmpq $0x1,0x120(%rbp)
	jne L_282608
L_282729:
	movq 0x118(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x28DD,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x150(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r13,0x0(%r15)
	movq $0x45,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0x47,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq 0x78(%rbp),%r15
	movq 0x0(%r15),%r13
	movq $0x1B7F,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r13,0x8(%r9)
	addq $0x18,%r12
	movq %r11,0x0(%r9)
	movq %r15,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%r10,%r13,1)
	movq %r9,0x0(%r15)
	movq $0x196B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x8(%r15)
	movq %r11,0x120(%rbp)
	addq $0x18,%r12
	movq 0x128(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x0(%r14),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%r10,%r15,1)
	movq %r11,0x0(%r14)
L_282608:
	movq $0x319B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x30,%r12
	movq 0x148(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x110(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x120(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0xD8(%rbp),%r14
	movq %r14,0x20(%r15)
	movq %r15,0x150(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x158(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0x160(%rbp)
	addq $0x150,%rbp
	leaq (L_282609+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutDot_0
.p2align 0x4
.long 0x4637
L_282609:
	addq $0xFFFFFFFFFFFFFEB0,%rbp
	movq 0x150(%rbp),%r15
	movq %r15,0x110(%rbp)
	movl 0x158(%rbp),%r15d
	movl %r15d,0x148(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x158(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0x160(%rbp)
	addq $0x158,%rbp
	leaq (L_282610+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
.long 0x4638
L_282610:
	addq $0xFFFFFFFFFFFFFEA8,%rbp
	movq 0x158(%rbp),%r15
	movq %r15,0x150(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_282611
L_282727:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_282728+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_282728
.p2align 0x4
.long 0x464E
L_282728:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
L_282611:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq (globalObjptr+0x10C78)(%rip),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x1E58)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xA050)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x150(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x160(%rbp)
	leaq L_282716(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x160,%rbp
	leaq (L_282612+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x4639
L_282612:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq %r15,0x158(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_282613
L_282725:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x168,%rbp
	leaq (L_282726+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_282726
.p2align 0x4
.long 0x464D
L_282726:
	addq $0xFFFFFFFFFFFFFE98,%rbp
L_282613:
	movq $0x41AB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x148(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x110(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x2765,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x160(%rbp)
	addq $0x10,%r12
	movb $0x1,0x168(%rbp)
	movq 0x158(%rbp),%r15
	movq %r15,0x170(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0x178(%rbp)
	addq $0x160,%rbp
	leaq (L_282614+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp saveToFile_0
.p2align 0x4
.long 0x651
L_282716:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_282717
L_282723:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_282724+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_282724
.p2align 0x4
.long 0x464C
L_282724:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
L_282717:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq (globalObjptr+0x10D10)(%rip),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x858)(%rip),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x160(%rbp)
	leaq L_282602(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x160,%rbp
	leaq (L_282718+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x463A
L_282614:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_282616
L_282714:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_282715+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_282715
.p2align 0x4
.long 0x464C
L_282715:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
L_282616:
	movq $0x71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0xDD5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x110(%rbp)
	addq $0x18,%r12
	movq (globalObjptr+0x1628)(%rip),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq $0x89,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq $0x3465,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x20,%r12
	movq 0xD8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x140(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0x160(%rbp)
	leaq L_282682(%rip),%r15
	movq %r15,0x30(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x168(%rbp)
	addq $0x160,%rbp
	leaq (L_282617+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_3
.p2align 0x4
.long 0x463A
L_282718:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq %r15,0x110(%rbp)
	movq %r15,0x160(%rbp)
	movq 0xF0(%rbp),%r15
	movq %r15,0x168(%rbp)
	addq $0x160,%rbp
	leaq (L_282719+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x463B
L_282617:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	leaq L_282713(%rip),%r15
	movq %r15,0x30(%rbp)
	movq 0x120(%rbp),%r15
	movq %r15,0x160(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x168(%rbp)
	addq $0x160,%rbp
	leaq (L_282618+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp dominators_0
.p2align 0x4
.long 0x651
L_282682:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
warning_2:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_282625
L_282644:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x148,%rbp
	leaq (L_282645+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_282645
.p2align 0x4
.long 0x463F
L_282645:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
L_282625:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq (globalObjptr+0x10D08)(%rip),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x858)(%rip),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x148(%rbp)
	leaq L_282602(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x148,%rbp
	leaq (L_282626+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x463A
L_282719:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_282616
L_282721:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_282722+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_282722
.p2align 0x4
.long 0x464C
L_282722:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	jmp L_282616
.p2align 0x4
.long 0x463B
L_282618:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_282619
L_282711:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_282712+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_282712
.p2align 0x4
.long 0x464B
L_282712:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
L_282619:
	movq $0x71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x140(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x78(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_495011
L_282620:
	movq 0x8(%r14),%r15
	movq %r15,0x78(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x148(%rbp)
L_282621:
	leaq L_282709(%rip),%r15
	movq %r15,0x30(%rbp)
	movq 0x148(%rbp),%r15
	movq %r15,0x160(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x168(%rbp)
	addq $0x160,%rbp
	leaq (L_282622+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_20
.p2align 0x4
L_495011:
L_282662:
	leaq warning_3(%rip),%r15
	movq %r15,0x30(%rbp)
	movq 0x120(%rbp),%r15
	movq %r15,0x160(%rbp)
	movq 0x140(%rbp),%r15
	movq %r15,0x168(%rbp)
	addq $0x160,%rbp
	leaq (L_282663+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp treeAt_3
.p2align 0x4
.long 0x651
L_282713:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp warning_2
.p2align 0x4
.long 0x463C
L_282626:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
	movq 0x148(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq %r15,0x148(%rbp)
	movq 0xF0(%rbp),%r15
	movq %r15,0x150(%rbp)
	addq $0x148,%rbp
	leaq (L_282627+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x462F
L_282622:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq %r15,0x158(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_282623
L_282707:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x168,%rbp
	leaq (L_282708+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_282708
.p2align 0x4
.long 0x464A
L_282708:
	addq $0xFFFFFFFFFFFFFE98,%rbp
L_282623:
	movq 0x158(%rbp),%r13
	cmpq $0x1,%r13
	je L_495025
	cmpq $0x2,%r13
	je L_495023
L_282624:
	movq 0x8(%r13),%r11
	movq %r11,0x160(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo warning_2
L_282646:
	movq %r15,0x0(%r13)
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_495022
L_282647:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movl $0x0,0x168(%rbp)
	movq %r13,%r15
.p2align 0x4,,0x7
L_282649:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_282650
L_282690:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xCCA,%r13
	jne L_282650
L_282691:
	movq 0x8(%r14),%r13
	movq %r13,0x170(%rbp)
	movq 0x0(%r14),%r13
	cmpq %r13,0x140(%rbp)
	je L_495017
L_282650:
	movl 0x168(%rbp),%r13d
	incl %r13d
	movl %r13d,0x16C(%rbp)
	jo warning_2
L_282651:
	cmpq $0x1,%r15
	je L_495013
L_282652:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movl %r13d,0x168(%rbp)
	jmp L_282649
.p2align 0x4
L_495013:
L_282653:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_282654
L_282688:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x178,%rbp
	leaq (L_282689+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_282689
.p2align 0x4
.long 0x4648
L_282689:
	addq $0xFFFFFFFFFFFFFE88,%rbp
L_282654:
	movl 0x16C(%rbp),%ecx
L_282655:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo warning_2
L_282656:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_282658
L_282687:
	movl %ecx,0x0(%r15)
L_282658:
	movq $0x9C1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x1403,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x158(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1995,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x140(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x160(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r10,0x0(%r13)
	movq %r14,%r15
L_282659:
	movq 0x8(%r15),%r14
	movq 0x0(%r14),%r15
	movq $0x1B7F,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x148(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
	movq 0x78(%rbp),%r15
	cmpq $0x1,%r15
	je L_282662
L_282660:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x78(%rbp)
	movq %r14,0x148(%rbp)
	jmp L_282621
.p2align 0x4
L_495017:
L_282693:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_282694
L_282698:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x180,%rbp
	leaq (L_282699+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_282699
.p2align 0x4
.long 0x4649
L_282699:
	addq $0xFFFFFFFFFFFFFE80,%rbp
L_282694:
	movl 0x168(%rbp),%r14d
	movslq %r14d,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo warning_2
L_282695:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %r14d,0x0(%r13)
	jl L_495018
L_282696:
	movq 0x170(%rbp),%r15
	jmp L_282659
.p2align 0x4
L_495018:
L_282697:
	movq (globalObjptr+0x1078)(%rip),%r14
	movl 0x168(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movq 0x170(%rbp),%r15
	jmp L_282659
.p2align 0x4
L_495022:
L_282700:
	xorl %ecx,%ecx
	jmp L_282655
.p2align 0x4
L_495023:
L_282704:
	movq 0x78(%rbp),%r15
	cmpq $0x1,%r15
	je L_282662
L_282705:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x78(%rbp)
	movq %r14,0x148(%rbp)
	jmp L_282621
.p2align 0x4
L_495025:
L_282701:
	movq 0x78(%rbp),%r15
	cmpq $0x1,%r15
	je L_282662
L_282702:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x78(%rbp)
	movq %r14,0x148(%rbp)
	jmp L_282621
.p2align 0x4
.long 0x651
L_282709:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp warning_2
.p2align 0x4
.long 0x4640
L_282663:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq %r15,0x68(%rbp)
	leaq L_282682(%rip),%r15
	movq %r15,0x30(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x160(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0x168(%rbp)
	addq $0x160,%rbp
	leaq (L_282664+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
.long 0x651
warning_3:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp warning_2
.p2align 0x4
.long 0x463C
L_282627:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_282629
L_282642:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x148,%rbp
	leaq (L_282643+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_282643
.p2align 0x4
.long 0x463F
L_282643:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
L_282629:
	movq 0x118(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_495028
L_282630:
	movq 0x8(%r14),%r15
	movq %r15,0x60(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x68(%rbp)
L_282631:
	movq 0x68(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x150(%rbp)
	movq $0x3DAF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x128(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x148(%rbp)
	addq $0x148,%rbp
	leaq (L_282632+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp remove_0
.p2align 0x4
L_495028:
L_282636:
	movq 0x118(%rbp),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq $0x1,0x0(%r14)
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_282597
L_282637:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	jmp L_282564
.p2align 0x4
.long 0x4641
L_282664:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_282665
L_282685:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_282686+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_282686
.p2align 0x4
.long 0x4647
L_282686:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
L_282665:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x1630)(%rip),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x160(%rbp)
	addq $0x160,%rbp
	leaq (L_282666+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x463D
L_282632:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
	movq 0x148(%rbp),%r15
	movq %r15,0x78(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_282633
L_282639:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x148,%rbp
	leaq (L_282640+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_282640
.p2align 0x4
.long 0x463E
L_282640:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
L_282633:
	movq 0x68(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r15
	cmpq $0x1,%r15
	je L_282636
L_282634:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x60(%rbp)
	movq %r14,0x68(%rbp)
	jmp L_282631
.p2align 0x4
.long 0x4641
L_282666:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_282667
L_282683:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_282684+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_282684
.p2align 0x4
.long 0x4647
L_282684:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
L_282667:
	movq $0x4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq %r15,0x180(%rbp)
	movq $0x186B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x78(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	leaq warning_3(%rip),%r14
	movq %r14,0x30(%rbp)
	movq 0x68(%rbp),%r14
	movq %r14,0x160(%rbp)
	movq %r15,0x168(%rbp)
	movq 0x110(%rbp),%r15
	movq %r15,0x170(%rbp)
	movq 0xF8(%rbp),%r15
	movq %r15,0x178(%rbp)
	addq $0x160,%rbp
	leaq (L_282668+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3962
.p2align 0x4
.long 0x4642
L_282668:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x78(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x170(%rbp)
	leaq L_282682(%rip),%r15
	movq %r15,0x30(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x160(%rbp)
	movq $0x1,0x168(%rbp)
	movq 0x100(%rbp),%r15
	movq %r15,0x178(%rbp)
	addq $0x160,%rbp
	leaq (L_282669+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_56
.p2align 0x4
.long 0x4643
L_282669:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq %r15,0x60(%rbp)
	movl 0x168(%rbp),%r15d
	movl %r15d,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_282670
L_282680:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_282681+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_282681
.p2align 0x4
.long 0x4646
L_282681:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
L_282670:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq (globalObjptr+0x9D80)(%rip),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x1E58)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xA050)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x150(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x148(%rbp)
	leaq L_282677(%rip),%r15
	movq %r15,0x30(%rbp)
	addq $0x148,%rbp
	leaq (L_282671+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x4644
L_282671:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
	movq 0x148(%rbp),%r15
	movq %r15,0x78(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_282672
L_282678:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x148,%rbp
	leaq (L_282679+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_282679
.p2align 0x4
.long 0x4645
L_282679:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
L_282672:
	movq $0x41AB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x68(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x2765,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x148(%rbp)
	addq $0x10,%r12
	movb $0x1,0x150(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x158(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0x160(%rbp)
	addq $0x148,%rbp
	leaq (L_282673+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp saveToFile_0
.p2align 0x4
.long 0x651
L_282677:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp warning_2
.p2align 0x4
.long 0x463C
L_282673:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_282629
L_282675:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x148,%rbp
	leaq (L_282676+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_282676
.p2align 0x4
.long 0x463F
L_282676:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
	jmp L_282629
.text
.p2align 0x4
.globl loop_3962
.hidden loop_3962
loop_3962:
L_282834:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x30(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_282835
L_282867:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_282868+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_282868
.p2align 0x4
.long 0x97B
L_282868:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_282835:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x20(%rbp),%r15
	movl 0x0(%r15),%r14d
	movl %r14d,%r13d
	incl %r14d
	jo L_495038
L_282837:
	movl %r14d,0x0(%r15)
	movl %r13d,0x50(%rbp)
	leaq L_282864(%rip),%r15
	movq %r15,0x28(%rbp)
	movq %rbp,%r15
	addq $0x30,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x18(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_282838+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_495038:
L_282836:
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x8EC
L_282838:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_282839
L_282865:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_282866+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_282866
.p2align 0x4
.long 0x1A1E
L_282866:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_282839:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x10C90)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_282840+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x920
L_282864:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x8EC
L_282840:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_282841+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_126
.p2align 0x4
.long 0x4625
L_282841:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_282842
L_282862:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_282863+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_282863
.p2align 0x4
.long 0x1A1E
L_282863:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_282842:
	movq 0x38(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x50(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	je L_495041
L_282843:
	movq 0x30(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_495041:
L_282844:
	cmpl $0x0,0x50(%rbp)
	jl L_495046
L_282845:
	movq $0x1,0x58(%rbp)
	movl $0x0,0x54(%rbp)
loop_3378:
	movl 0x50(%rbp),%r15d
	cmpl %r15d,0x54(%rbp)
	jl L_495045
L_282846:
	movq 0x58(%rbp),%r15
	cmpq $0x1,%r15
	je L_495044
L_282847:
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	movq $0x1,0x20(%rbp)
.p2align 0x4,,0x7
L_282848:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_495043
.p2align 0x4,,0x7
L_282849:
	movq $0x28D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_495042
L_282850:
	movq %r15,0x20(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x18(%rbp)
	jmp L_282848
.p2align 0x4
L_495042:
L_282852:
	movq $0xFCB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x20,%r12
	movq 0x40(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x48(%rbp),%r15
	movq %r15,0x10(%r14)
	movq 0x8(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x28D7,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r10,0x0(%r13)
	movq 0x30(%rbp),%r14
	movq %r14,(gcState+0x20)(%rip)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_495043:
L_282853:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_282854+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_282854
.p2align 0x4
.long 0x39C9
L_282854:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	jmp L_282849
.p2align 0x4
L_495044:
L_282855:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_282852
.p2align 0x4
L_495045:
L_282856:
	movslq 0x54(%rbp),%r15
	movq 0x38(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x68(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x8(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x68,%rbp
	leaq (L_282857+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3962
.p2align 0x4
L_495046:
L_282861:
	movq 0x30(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4626
L_282857:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_282858
L_282859:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_282860+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_282860
.p2align 0x4
.long 0x4627
L_282860:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_282858:
	movq $0xFCD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq $0x1,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x28D5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x58(%rbp),%r15
	movq %r15,0x8(%r14)
	movq %r14,0x58(%rbp)
	incl 0x54(%rbp)
	jmp loop_3378
.text
.p2align 0x4
.globl x_1838
.hidden x_1838
x_1838:
L_282869:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x38(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_282870
L_282972:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_282973+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_282973
.p2align 0x4
.long 0x27D1
L_282973:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_282870:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_282871+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp openOut_0
.p2align 0x4
.long 0x27CB
L_282871:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_282872
L_282970:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_282971+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_282971
.p2align 0x4
.long 0x192E
L_282971:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_282872:
	movq $0x315B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x50(%rbp)
	leaq L_282906(%rip),%r15
	movq %r15,0x30(%rbp)
	movq %rbp,%r15
	addq $0x38,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movb 0x18(%rbp),%r15b
	movb %r15b,0x58(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x50,%rbp
	leaq (L_282873+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp outputHeader_0
.p2align 0x4
.long 0x8B5
L_282873:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_282874
L_282968:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_282969+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_282969
.p2align 0x4
.long 0x1A6A
L_282969:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_282874:
	movq 0x28(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x20D3,%r15
	je L_495054
	cmpq $0x20D4,%r15
	je L_495053
	cmpq $0x20D5,%r15
	je L_495052
L_282875:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq %r13,0x18(%rbp)
	movq 0x18(%r14),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x20(%rbp)
	movq 0x10(%r14),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x48(%rbp)
	movq 0x10(%r13),%r11
	movq $0x9C1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x50(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x71,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movl $0x0,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq $0xDD5,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r10,0x58(%rbp)
	addq $0x18,%r12
	movq (globalWord64+0x150)(%rip),%r9
	movq %r9,0x0(%r10)
	movq %r13,0x8(%r10)
	movq $0x89,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r13,0x0(%r10)
	movq %r13,0x8(%r10)
	addq $0x18,%r12
	movq $0x2CD,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x60(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0x71,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r9,0x68(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r9)
	movl $0x0,0x4(%r9)
	movq $0xD57,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r8,0x70(%rbp)
	movq %r10,0x8(%r8)
	movq %r15,0x10(%r8)
	addq $0x38,%r12
	movq %r9,0x0(%r8)
	movq %r14,0x18(%r8)
	movq %r13,0x20(%r8)
	movq %r9,0x28(%r8)
	movq $0x71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0xDD3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x78(%rbp)
	addq $0x18,%r12
	movq $0x1,0x0(%r14)
	movq %r15,0x8(%r14)
	movq $0x89,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x80(%rbp)
	movq %r15,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	cmpq $0x1,%r11
	je L_495051
L_282876:
	movq 0x8(%r11),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r11),%r15
L_282877:
	movq 0x0(%r15),%r14
	movq 0x18(%r14),%r13
	movq %r13,0x98(%rbp)
	movq 0x20(%r14),%r13
	movq %r13,0x88(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0xA0(%rbp)
	addq $0x98,%rbp
	leaq (L_282878+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_97
.p2align 0x4
L_495051:
L_282891:
	movq 0x48(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x88,%rbp
	leaq (L_282892+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_97
.p2align 0x4
L_495052:
L_282967:
	movq 0x8(%r14),%r15
	movl 0x0(%r14),%ecx
L_282903:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x58(%rbp)
	movq $0x3E37,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x60(%rbp)
	movq (globalObjptr+0x9D8)(%rip),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_282904+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3780
.p2align 0x4
L_495053:
L_282966:
	movq 0x8(%r14),%r15
	movl 0x0(%r14),%ecx
	jmp L_282903
.p2align 0x4
L_495054:
L_282923:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq %r13,0x18(%rbp)
	movq 0x18(%r14),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x20(%rbp)
	movq 0x10(%r14),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x48(%rbp)
	movq 0x10(%r13),%r11
	movq $0x9C1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x50(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x71,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movl $0x0,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq $0xDD5,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r10,0x58(%rbp)
	addq $0x18,%r12
	movq (globalWord64+0x168)(%rip),%r9
	movq %r9,0x0(%r10)
	movq %r13,0x8(%r10)
	movq $0x89,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r13,0x0(%r10)
	movq %r13,0x8(%r10)
	addq $0x18,%r12
	movq $0x2CD,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x60(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0x71,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r9,0x68(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r9)
	movl $0x0,0x4(%r9)
	movq $0xD57,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r8,0x70(%rbp)
	movq %r10,0x8(%r8)
	movq %r15,0x10(%r8)
	addq $0x38,%r12
	movq %r9,0x0(%r8)
	movq %r14,0x18(%r8)
	movq %r13,0x20(%r8)
	movq %r9,0x28(%r8)
	movq $0x71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0xDD3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x78(%rbp)
	addq $0x18,%r12
	movq $0x1,0x0(%r14)
	movq %r15,0x8(%r14)
	movq $0x89,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x80(%rbp)
	movq %r15,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	cmpq $0x1,%r11
	je L_495055
L_282924:
	movq 0x8(%r11),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r11),%r15
L_282925:
	movq 0x0(%r15),%r14
	movq 0x20(%r14),%r13
	movq %r13,0x98(%rbp)
	movq 0x28(%r14),%r13
	movq %r13,0x88(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0xA0(%rbp)
	addq $0x98,%rbp
	leaq (L_282926+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_92
.p2align 0x4
L_495055:
L_282939:
	movq 0x48(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x88,%rbp
	leaq (L_282940+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_92
.p2align 0x4
.long 0x651
L_282906:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	movq %r15,0x18(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x40(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_282907+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp closeOut_0
.p2align 0x4
.long 0x4667
L_282878:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x90(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_282879
L_282920:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_282921+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_282921
.p2align 0x4
.long 0x4672
L_282921:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_282879:
	movq $0x2CD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x98(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x71,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0xA0(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x3471,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x38,%r12
	movq 0x80(%rbp),%r11
	movq %r11,0x0(%r13)
	movq 0x90(%rbp),%r11
	movq %r11,0x8(%r13)
	movq %r14,0x10(%r13)
	movq %r15,0x18(%r13)
	movq %r14,0x20(%r13)
	movq 0x70(%rbp),%r15
	movq %r15,0x28(%r13)
	movq %r13,0xB0(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0xB8(%rbp)
	addq $0xB0,%rbp
	leaq (L_282880+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_3
.p2align 0x4
.long 0x466A
L_282892:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_282893
L_282913:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_282914+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_282914
.p2align 0x4
.long 0x466F
L_282914:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_282893:
	movq $0x3195,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x28,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x18(%r15)
	movq %r15,0x78(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x78,%rbp
	leaq (L_282894+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutDot_0
.p2align 0x4
.long 0x1A69
L_282904:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x50(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_282905+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x4667
L_282926:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x90(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_282927
L_282963:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_282964+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_282964
.p2align 0x4
.long 0x4672
L_282964:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_282927:
	movq $0x2CD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x98(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x71,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0xA0(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x354F,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x38,%r12
	movq 0x80(%rbp),%r11
	movq %r11,0x0(%r13)
	movq 0x90(%rbp),%r11
	movq %r11,0x8(%r13)
	movq %r14,0x10(%r13)
	movq %r15,0x18(%r13)
	movq %r14,0x20(%r13)
	movq 0x70(%rbp),%r15
	movq %r15,0x28(%r13)
	movq %r13,0xB0(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0xB8(%rbp)
	addq $0xB0,%rbp
	leaq (L_282928+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_4
.p2align 0x4
.long 0x466A
L_282940:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_282941
L_282956:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_282957+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_282957
.p2align 0x4
.long 0x466F
L_282957:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_282941:
	movq $0x3197,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x28,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x18(%r15)
	movq %r15,0x78(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x78,%rbp
	leaq (L_282942+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutDot_0
.p2align 0x4
.long 0x27B9
L_282907:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4668
L_282880:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_282881
L_282918:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_282919+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_282919
.p2align 0x4
.long 0x4671
L_282919:
	addq $0xFFFFFFFFFFFFFF50,%rbp
L_282881:
	movq 0x98(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_495061
L_282882:
	movq 0x8(%r14),%r15
	movq %r15,0x88(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x90(%rbp)
L_282883:
	movq 0x90(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0xB8(%rbp)
	movq $0x3DC9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xA0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0xB0(%rbp)
	addq $0xB0,%rbp
	leaq (L_282884+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp remove_0
.p2align 0x4
L_495061:
L_282888:
	movq 0x98(%rbp),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq $0x1,0x0(%r14)
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_282891
L_282889:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	jmp L_282877
.p2align 0x4
.long 0x466B
L_282894:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x18(%rbp)
	movl 0x80(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_282895
L_282911:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_282912+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_282912
.p2align 0x4
.long 0x466E
L_282912:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_282895:
	movq 0x60(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_495064
L_282896:
	movq 0x8(%r14),%r15
	movq %r15,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x48(%rbp)
L_282897:
	movq 0x48(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x80(%rbp)
	movq $0x3DAF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_282898+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp remove_0
.p2align 0x4
L_495064:
L_282902:
	movq 0x60(%rbp),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq $0x1,0x0(%r14)
	movq 0x18(%rbp),%r15
	movl 0x20(%rbp),%ecx
	jmp L_282903
.p2align 0x4
.long 0x1A69
L_282905:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x40(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp closeOut_0
.p2align 0x4
.long 0x4668
L_282928:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_282929
L_282961:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_282962+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_282962
.p2align 0x4
.long 0x4671
L_282962:
	addq $0xFFFFFFFFFFFFFF50,%rbp
L_282929:
	movq 0x98(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_495066
L_282930:
	movq 0x8(%r14),%r15
	movq %r15,0x88(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x90(%rbp)
L_282931:
	movq 0x90(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0xB8(%rbp)
	movq $0x3DC9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xA0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0xB0(%rbp)
	addq $0xB0,%rbp
	leaq (L_282932+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp remove_0
.p2align 0x4
L_495066:
L_282936:
	movq 0x98(%rbp),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq $0x1,0x0(%r14)
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_282939
L_282937:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	jmp L_282925
.p2align 0x4
.long 0x466B
L_282942:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x18(%rbp)
	movl 0x80(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_282943
L_282954:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_282955+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_282955
.p2align 0x4
.long 0x466E
L_282955:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_282943:
	movq 0x60(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_495069
L_282944:
	movq 0x8(%r14),%r15
	movq %r15,0x28(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x48(%rbp)
L_282945:
	movq 0x48(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x80(%rbp)
	movq $0x3DAF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_282946+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp remove_0
.p2align 0x4
L_495069:
L_282950:
	movq 0x60(%rbp),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq $0x1,0x0(%r14)
	movq 0x18(%rbp),%r15
	movl 0x20(%rbp),%ecx
	jmp L_282903
.p2align 0x4
.long 0x4669
L_282884:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movq 0xB0(%rbp),%r15
	movq %r15,0xA8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_282885
L_282915:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_282916+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_282916
.p2align 0x4
.long 0x4670
L_282916:
	addq $0xFFFFFFFFFFFFFF48,%rbp
L_282885:
	movq 0x90(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0xA8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x88(%rbp),%r15
	cmpq $0x1,%r15
	je L_282888
L_282886:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x88(%rbp)
	movq %r14,0x90(%rbp)
	jmp L_282883
.p2align 0x4
.long 0x466C
L_282898:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_282899
L_282908:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_282909+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_282909
.p2align 0x4
.long 0x466D
L_282909:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_282899:
	movq 0x48(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_282902
L_282900:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x28(%rbp)
	movq %r14,0x48(%rbp)
	jmp L_282897
.p2align 0x4
.long 0x4669
L_282932:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movq 0xB0(%rbp),%r15
	movq %r15,0xA8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_282933
L_282958:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_282959+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_282959
.p2align 0x4
.long 0x4670
L_282959:
	addq $0xFFFFFFFFFFFFFF48,%rbp
L_282933:
	movq 0x90(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0xA8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x88(%rbp),%r15
	cmpq $0x1,%r15
	je L_282936
L_282934:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x88(%rbp)
	movq %r14,0x90(%rbp)
	jmp L_282931
.p2align 0x4
.long 0x466C
L_282946:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_282947
L_282951:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_282952+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_282952
.p2align 0x4
.long 0x466D
L_282952:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_282947:
	movq 0x48(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_282950
L_282948:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x28(%rbp)
	movq %r14,0x48(%rbp)
	jmp L_282945
.text
.p2align 0x4
.globl x_1837
.hidden x_1837
x_1837:
L_282974:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x38(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_282975
L_283008:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_283009+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_283009
.p2align 0x4
.long 0x976
L_283009:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_282975:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_282976+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp openOut_0
.p2align 0x4
.long 0x902
L_282976:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_282977
L_283006:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_283007+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_283007
.p2align 0x4
.long 0xC48
L_283007:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_282977:
	movq $0x315D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x50(%rbp)
	leaq L_282999(%rip),%r15
	movq %r15,0x30(%rbp)
	movq %rbp,%r15
	addq $0x38,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movb $0x0,0x58(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x50,%rbp
	leaq (L_282978+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp outputHeader_0
.p2align 0x4
.long 0x9EE
L_282978:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq (globalObjptr+0xFED8)(%rip),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_282979+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x651
L_282999:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	movq %r15,0x18(%rbp)
L_282984:
	movq 0x38(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x40(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_282985+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp closeOut_0
.p2align 0x4
.long 0x9EE
L_282979:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_282980
L_283004:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_283005+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_283005
.p2align 0x4
.long 0xC48
L_283005:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_282980:
	movq $0x3E37,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x48(%rbp)
	addq $0x10,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x9D8)(%rip),%r14
	movq %r14,0x58(%rbp)
	movq 0x18(%rbp),%r14
	movq %r14,0x60(%rbp)
	movq %r15,0x68(%rbp)
	addq $0x58,%rbp
	leaq (L_282981+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3780
.p2align 0x4
.long 0x27B9
L_282985:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x9C0
L_282981:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x58(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_282982+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x9C0
L_282982:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x20(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	movl %r13d,0x18(%rbp)
	cmpq %r14,%r11
	je L_495082
L_282983:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,0x18(%rbp)
	jmp L_282984
.p2align 0x4
L_495082:
L_282986:
	cmpl $0x0,0x18(%rbp)
	jl L_495085
L_282987:
	movl $0x0,0x1C(%rbp)
.p2align 0x4,,0x7
loop_3379:
	movl 0x1C(%rbp),%r15d
	cmpl 0x18(%rbp),%r15d
	jnl L_495084
L_282989:
	movslq %r15d,%r14
	movq 0x20(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	cmpq $0x1,%r13
	jne L_495083
.p2align 0x4,,0x7
L_282998:
	incl 0x1C(%rbp)
	jmp loop_3379
.p2align 0x4
L_495083:
L_282990:
	movq 0x8(%r13),%r14
	movq %r14,0x50(%rbp)
	movq 0x0(%r13),%r13
	movq %r13,%r15
L_282991:
	movq %r15,0x60(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_282992+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutDec_0
.p2align 0x4
L_495084:
L_282988:
	movq 0x38(%rbp),%r14
	movq %r14,(gcState+0x20)(%rip)
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%rbp)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%rbp)
	jmp closeOut_0
.p2align 0x4
L_495085:
L_283003:
	movq (globalObjptr+0x4F8)(%rip),%r15
	movq %r15,0x18(%rbp)
	jmp L_282984
.p2align 0x4
.long 0x4673
L_282992:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	movl 0x68(%rbp),%r15d
	movl %r15d,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_282993
L_283000:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_283001+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_283001
.p2align 0x4
.long 0x4674
L_283001:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_282993:
	movq $0xC3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x60(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x68(%rbp)
	movq (globalObjptr+0x9D8)(%rip),%r15
	movq %r15,0x60(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x60,%rbp
	leaq (L_282994+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3780
.p2align 0x4
.long 0x4673
L_282994:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x60(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_282995+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x4673
L_282995:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x50(%rbp),%r14
	cmpq $0x1,%r14
	je L_282998
L_282996:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x50(%rbp)
	jmp L_282991
.text
.p2align 0x4
.globl qsort_18
.hidden qsort_18
qsort_18:
L_283010:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb loop_3380
L_283060:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_283061+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_283061
.p2align 0x4
.long 0x4E8
L_283061:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
loop_3380:
	movl 0x0(%rbp),%r15d
	subl 0x4(%rbp),%r15d
	jo L_283012
L_283013:
	cmpl $0x14,%r15d
	jng L_495089
L_283015:
	movq (globalObjptr+0x550)(%rip),%r14
	movl 0x0(%r14),%r13d
	imull $0x19660D,%r13d
	addl $0x3C6EF35F,%r13d
	movl %r13d,0x18(%rbp)
	movl %r13d,0x0(%r14)
	incl %r15d
	movl %r15d,0x1C(%rbp)
	jo L_495088
L_283016:
	movl %r15d,0x28(%rbp)
	movl %r13d,0x2C(%rbp)
	addq $0x28,%rbp
	leaq (L_283017+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp div_0
.p2align 0x4
L_495088:
L_283012:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_495089:
L_283014:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4F4
L_283017:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl 0x28(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	movl 0x1C(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	movl 0x18(%rbp),%r15d
	movl %r15d,0x24(%rbp)
	addq $0x20,%rbp
	leaq (L_283018+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp mod_0
.p2align 0x4
.long 0x4E5
L_283018:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movl 0x20(%rbp),%r15d
	movl 0x4(%rbp),%ecx
	movl %ecx,%r14d
	addl %r15d,%r14d
	movl %r15d,0x18(%rbp)
	jo L_283012
L_283019:
	movq 0x10(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r15),%r11
	movq %r11,0x20(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movq %r15,0x28(%rbp)
	movslq %ecx,%r10
	movq %r10,0x30(%rbp)
	cmpq %r15,%r10
	jnb L_283021
L_283022:
	movq 0x0(%r13,%r10,8),%r9
	movslq %r14d,%r8
	cmpq %r15,%r8
	jnb L_283021
L_283024:
	movq 0x0(%r13,%r8,8),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r14
	movq %r14,0x38(%rbp)
	cmpq %r14,%r10
	jnb L_283021
L_283026:
	movq %r11,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r13,1)
	movq %r15,0x0(%r11,%r10,8)
	cmpq %r14,%r8
	jnb L_283021
L_283028:
	movq %r11,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%rsp,%r15,1)
	movq %r9,0x0(%r11,%r8,8)
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq %r14,0x40(%rbp)
	cmpq %r14,%r10
	jnb L_283021
L_283030:
	movq 0x0(%r15,%r10,8),%r14
	movq %r14,0x48(%rbp)
	movl 0x0(%rbp),%r15d
	incl %r15d
	jo L_283012
L_283031:
	movl %r15d,0x50(%rbp)
loop_3382:
	incl %ecx
	movl %ecx,0x54(%rbp)
	jo L_283012
L_283032:
	movslq %ecx,%r15
	movq %r15,0x58(%rbp)
	cmpq 0x40(%rbp),%r15
	jnb L_495091
L_283034:
	movq 0x48(%rbp),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x60(%rbp)
	movq 0x8(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r11
	movq 0x10(%r11),%r10
	movq %r10,0x70(%rbp)
	movq %r13,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_283035+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp LtEq_0
.p2align 0x4
L_495091:
L_283021:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4F5
L_283035:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movl 0x70(%rbp),%r15d
	movl %r15d,0x68(%rbp)
	testl %r15d,%r15d
	jnz L_495100
L_283036:
	movl 0x54(%rbp),%ecx
	jmp loop_3382
.p2align 0x4
L_495100:
L_283037:
	movl 0x50(%rbp),%ecx
loop_3383:
	decl %ecx
	movl %ecx,0x50(%rbp)
	jo L_283012
L_283038:
	movslq %ecx,%r15
	movq %r15,0x68(%rbp)
	cmpq 0x40(%rbp),%r15
	jnb L_283021
L_283040:
	movq 0x8(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x80(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_283041+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp LtEq_0
.p2align 0x4
.long 0x4F6
L_283041:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movl 0x78(%rbp),%r15d
	movl %r15d,0x70(%rbp)
	testl %r15d,%r15d
	jnz L_495103
L_283042:
	movl 0x50(%rbp),%ecx
	jmp loop_3383
.p2align 0x4
L_495103:
L_283043:
	movl 0x54(%rbp),%ecx
	cmpl %ecx,0x50(%rbp)
	jl L_495108
L_283044:
	movq 0x58(%rbp),%r15
	movq 0x28(%rbp),%r14
	cmpq %r14,%r15
	jnb L_283021
L_283046:
	movq 0x18(%rbp),%r13
	movq 0x0(%r13,%r15,8),%r11
	movq 0x68(%rbp),%r10
	cmpq %r14,%r10
	jnb L_283021
L_283048:
	movq 0x0(%r13,%r10,8),%r14
	movq 0x38(%rbp),%r13
	cmpq %r13,%r15
	jnb L_283021
L_283050:
	movq 0x20(%rbp),%r9
	movq %r9,%r8
	shrq $0x8,%r8
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r8,1)
	movq %r14,0x0(%r9,%r15,8)
	cmpq %r13,%r10
	jnb L_283021
L_283052:
	movq %r9,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%rsp,%r15,1)
	movq %r11,0x0(%r9,%r10,8)
	jmp loop_3382
.p2align 0x4
L_495108:
L_283053:
	movq 0x18(%rbp),%r15
	movq 0x30(%rbp),%r14
	movq 0x0(%r15,%r14,8),%r13
	movq 0x68(%rbp),%r11
	cmpq 0x28(%rbp),%r11
	jnb L_283021
L_283055:
	movq 0x0(%r15,%r11,8),%r10
	movq 0x20(%rbp),%r15
	movq %r15,%r9
	shrq $0x8,%r9
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r9,1)
	movq %r10,0x0(%r15,%r14,8)
	cmpq 0x38(%rbp),%r11
	jnb L_283021
L_283057:
	movq %r15,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r8,%r14,1)
	movq %r13,0x0(%r15,%r11,8)
	movl 0x50(%rbp),%r15d
	decl %r15d
	jo L_283012
L_283058:
	movl %r15d,0x60(%rbp)
	movl 0x4(%rbp),%r15d
	movl %r15d,0x64(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x60,%rbp
	leaq (L_283059+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp qsort_18
.p2align 0x4
.long 0x4F7
L_283059:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movl 0x54(%rbp),%r15d
	movl %r15d,0x4(%rbp)
	jmp loop_3380
.text
.p2align 0x4
.globl qsort_19
.hidden qsort_19
qsort_19:
L_283062:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb loop_3384
L_283112:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_283113+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_283113
.p2align 0x4
.long 0x4E8
L_283113:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
loop_3384:
	movl 0x0(%rbp),%r15d
	subl 0x4(%rbp),%r15d
	jo L_283064
L_283065:
	cmpl $0x14,%r15d
	jng L_495113
L_283067:
	movq (globalObjptr+0x550)(%rip),%r14
	movl 0x0(%r14),%r13d
	imull $0x19660D,%r13d
	addl $0x3C6EF35F,%r13d
	movl %r13d,0x18(%rbp)
	movl %r13d,0x0(%r14)
	incl %r15d
	movl %r15d,0x1C(%rbp)
	jo L_495112
L_283068:
	movl %r15d,0x28(%rbp)
	movl %r13d,0x2C(%rbp)
	addq $0x28,%rbp
	leaq (L_283069+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp div_0
.p2align 0x4
L_495112:
L_283064:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_495113:
L_283066:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4F4
L_283069:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl 0x28(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	movl 0x1C(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	movl 0x18(%rbp),%r15d
	movl %r15d,0x24(%rbp)
	addq $0x20,%rbp
	leaq (L_283070+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp mod_0
.p2align 0x4
.long 0x4E5
L_283070:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movl 0x20(%rbp),%r15d
	movl 0x4(%rbp),%ecx
	movl %ecx,%r14d
	addl %r15d,%r14d
	movl %r15d,0x18(%rbp)
	jo L_283064
L_283071:
	movq 0x10(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r15),%r11
	movq %r11,0x20(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movq %r15,0x28(%rbp)
	movslq %ecx,%r10
	movq %r10,0x30(%rbp)
	cmpq %r15,%r10
	jnb L_283073
L_283074:
	movq 0x0(%r13,%r10,8),%r9
	movslq %r14d,%r8
	cmpq %r15,%r8
	jnb L_283073
L_283076:
	movq 0x0(%r13,%r8,8),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r14
	movq %r14,0x38(%rbp)
	cmpq %r14,%r10
	jnb L_283073
L_283078:
	movq %r11,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r13,1)
	movq %r15,0x0(%r11,%r10,8)
	cmpq %r14,%r8
	jnb L_283073
L_283080:
	movq %r11,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%rsp,%r15,1)
	movq %r9,0x0(%r11,%r8,8)
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq %r14,0x40(%rbp)
	cmpq %r14,%r10
	jnb L_283073
L_283082:
	movq 0x0(%r15,%r10,8),%r14
	movq %r14,0x48(%rbp)
	movl 0x0(%rbp),%r15d
	incl %r15d
	jo L_283064
L_283083:
	movl %r15d,0x50(%rbp)
loop_3386:
	incl %ecx
	movl %ecx,0x54(%rbp)
	jo L_283064
L_283084:
	movslq %ecx,%r15
	movq %r15,0x58(%rbp)
	cmpq 0x40(%rbp),%r15
	jnb L_495115
L_283086:
	movq 0x8(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x68(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_283087+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp LtEq_0
.p2align 0x4
L_495115:
L_283073:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1DE7
L_283087:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movl 0x68(%rbp),%r15d
	movl %r15d,0x60(%rbp)
	testl %r15d,%r15d
	jnz L_495124
L_283088:
	movl 0x54(%rbp),%ecx
	jmp loop_3386
.p2align 0x4
L_495124:
L_283089:
	movl 0x50(%rbp),%ecx
loop_3387:
	decl %ecx
	movl %ecx,0x50(%rbp)
	jo L_283064
L_283090:
	movslq %ecx,%r15
	movq %r15,0x60(%rbp)
	cmpq 0x40(%rbp),%r15
	jnb L_283073
L_283092:
	movq 0x8(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x78(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_283093+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp LtEq_0
.p2align 0x4
.long 0x1DE8
L_283093:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movl 0x70(%rbp),%r15d
	movl %r15d,0x68(%rbp)
	testl %r15d,%r15d
	jnz L_495127
L_283094:
	movl 0x50(%rbp),%ecx
	jmp loop_3387
.p2align 0x4
L_495127:
L_283095:
	movl 0x54(%rbp),%ecx
	cmpl %ecx,0x50(%rbp)
	jl L_495132
L_283096:
	movq 0x58(%rbp),%r15
	movq 0x28(%rbp),%r14
	cmpq %r14,%r15
	jnb L_283073
L_283098:
	movq 0x18(%rbp),%r13
	movq 0x0(%r13,%r15,8),%r11
	movq 0x60(%rbp),%r10
	cmpq %r14,%r10
	jnb L_283073
L_283100:
	movq 0x0(%r13,%r10,8),%r14
	movq 0x38(%rbp),%r13
	cmpq %r13,%r15
	jnb L_283073
L_283102:
	movq 0x20(%rbp),%r9
	movq %r9,%r8
	shrq $0x8,%r8
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r8,1)
	movq %r14,0x0(%r9,%r15,8)
	cmpq %r13,%r10
	jnb L_283073
L_283104:
	movq %r9,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%rsp,%r15,1)
	movq %r11,0x0(%r9,%r10,8)
	jmp loop_3386
.p2align 0x4
L_495132:
L_283105:
	movq 0x18(%rbp),%r15
	movq 0x30(%rbp),%r14
	movq 0x0(%r15,%r14,8),%r13
	movq 0x60(%rbp),%r11
	cmpq 0x28(%rbp),%r11
	jnb L_283073
L_283107:
	movq 0x0(%r15,%r11,8),%r10
	movq 0x20(%rbp),%r15
	movq %r15,%r9
	shrq $0x8,%r9
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r9,1)
	movq %r10,0x0(%r15,%r14,8)
	cmpq 0x38(%rbp),%r11
	jnb L_283073
L_283109:
	movq %r15,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r8,%r14,1)
	movq %r13,0x0(%r15,%r11,8)
	movl 0x50(%rbp),%r15d
	decl %r15d
	jo L_283064
L_283110:
	movl %r15d,0x60(%rbp)
	movl 0x4(%rbp),%r15d
	movl %r15d,0x64(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x60,%rbp
	leaq (L_283111+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp qsort_19
.p2align 0x4
.long 0x4F7
L_283111:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movl 0x54(%rbp),%r15d
	movl %r15d,0x4(%rbp)
	jmp loop_3384
.text
.p2align 0x4
.globl outputContents_0
.hidden outputContents_0
outputContents_0:
L_283114:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x20(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_283115
L_283227:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_283228+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_283228
.p2align 0x4
.long 0x6FE
L_283228:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_283115:
	movq 0x10(%rbp),%r15
	movq 0x40(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_283116+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp openIn_0
.p2align 0x4
.long 0x4F9
L_283116:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb loop_3388
L_283225:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_283226+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_283226
.p2align 0x4
.long 0x1135
L_283226:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
loop_3388:
	movq 0x40(%rbp),%r15
	movl 0x0(%r15),%r14d
	movq 0x38(%rbp),%r13
	movl 0x0(%r13),%r11d
	cmpl %r11d,%r14d
	jnl L_495145
L_283209:
	movl %r11d,0x0(%r15)
	subl %r14d,%r11d
	jo L_495144
L_283211:
	movq 0x48(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r13
	movslq %r14d,%r15
	movq %r15,0x50(%rbp)
	movslq %r11d,%rdx
	movq %rdx,0x58(%rbp)
	cmpq %r15,%r13
	jb L_283223
L_283212:
	subq %r15,%r13
	cmpq %rdx,%r13
	jb L_495142
L_283213:
	testq %rdx,%rdx
	jz L_495141
L_283214:
	cmpq $0x7FFFFFFF,%rdx
	ja L_495140
L_283215:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x51,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_283216+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_283216
.p2align 0x4
.long 0x467C
L_283216:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq %rax,%r15
L_283217:
	xorq %r14,%r14
.p2align 0x4,,0x7
loop_3392:
	cmpq 0x58(%rbp),%r14
	jnl L_495137
L_283219:
	movq %r14,%r13
	addq 0x50(%rbp),%r13
	movq 0x48(%rbp),%r10
	movb 0x0(%r10,%r13,1),%r11b
	movb %r11b,0x0(%r15,%r14,1)
	incq %r14
	jmp loop_3392
.p2align 0x4
L_495137:
L_283218:
	movq $0x7,0xFFFFFFFFFFFFFFF8(%r15)
L_283120:
	cmpq %r15,(globalObjptr+0xA058)(%rip)
	je x_941
L_283121:
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	testq %r14,%r14
	jnz L_283123
L_283130:
	xorq %r13,%r13
.p2align 0x4,,0x7
vectorEqualLoop_238:
	cmpq %r13,%r14
	je x_2155
L_283131:
	movq (globalObjptr+0xA058)(%rip),%r11
	movb 0x0(%r15,%r13,1),%r10b
	cmpb %r10b,0x0(%r11,%r13,1)
	jne L_495138
L_283133:
	incq %r13
	jmp vectorEqualLoop_238
.p2align 0x4
L_495138:
L_283123:
	movq %r15,0x58(%rbp)
	leaq L_283127(%rip),%r15
	movq %r15,0x18(%rbp)
	movq %rbp,%r15
	addq $0x20,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x0(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (loop_3389+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
x_2155:
x_941:
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	jmp closeIn_0
.p2align 0x4
L_495140:
L_283220:
	movq $0x5,0x30(%rbp)
L_283128:
	movq 0x20(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x10(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_283129+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp closeIn_0
.p2align 0x4
L_495141:
L_283221:
	movq (globalObjptr+0x6F8)(%rip),%r15
	jmp L_283217
.p2align 0x4
L_495142:
L_283223:
	movq $0x6,0x30(%rbp)
	jmp L_283128
.p2align 0x4
L_495144:
L_283210:
	movq $0x3,0x30(%rbp)
	jmp L_283128
.p2align 0x4
L_495145:
L_283118:
	movq 0x8(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,%r14
	andq $0x1,%r14
	jz L_495163
L_283136:
	shrq $0x1,%r13
	movl %r13d,%r14d
	testl %r14d,%r14d
	jnz L_495162
L_283137:
	movq 0x10(%rbp),%r14
	movq 0x10(%r14),%r13
	movl 0x8(%r14),%r11d
	movl %r11d,0x50(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r14
	shrq $0x1,%r14
	cmpq $0x24B5,%r14
	je L_495149
L_283171:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r10
	movl 0x0(%r10),%r9d
	testl %r9d,%r9d
	jnz L_495148
L_283172:
	movq 0x8(%r14),%r13
	movq %r13,0x58(%rbp)
	movl 0x0(%r14),%r13d
	movl %r13d,0x54(%rbp)
	movslq %r11d,%r14
	cmpq $0x7FFFFFFF,%r14
	movq %r14,0x60(%rbp)
	ja L_495147
L_283173:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_283174
L_283204:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r14d
	movl %r14d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r14
	movq %r14,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_283205+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_283205
.p2align 0x4
.long 0x4677
L_283205:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_283174:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x51,%rcx
	movq 0x60(%rbp),%rdx
	movq $0x18,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_283175+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_283175
.p2align 0x4
.long 0x4677
L_283175:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq %rax,0x68(%rbp)
	movq $0x3E41,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x50(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl 0x54(%rbp),%r14d
	movl %r14d,0x4(%r15)
	movq %rax,0x8(%r15)
	movq %r15,0x78(%rbp)
	leaq L_283200(%rip),%r15
	movq %r15,0x18(%rbp)
	movq %rbp,%r15
	addq $0x20,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movl $0x1,0x80(%rbp)
	addq $0x78,%rbp
	leaq (x_942+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1213
.p2align 0x4
L_495147:
L_283161:
	movq $0x5,%r15
L_283141:
	movq 0x10(%rbp),%r14
	movq 0x20(%r14),%r13
	movq $0x1419,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movq (globalObjptr+0x10D18)(%rip),%r15
	movq %r15,0x8(%r14)
	movq $0x1933,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x30(%rbp)
	addq $0x10,%r12
	jmp L_283128
.p2align 0x4
L_495148:
L_283207:
	movq $0xE,%r14
	xchgq %r14,%r15
	jmp L_283141
.p2align 0x4
L_495149:
L_283138:
	movq 0x18(%r13),%r14
	movq 0x10(%r13),%r10
	movq %r10,0x58(%rbp)
	movl 0x0(%r13),%r9d
	movq 0x8(%r13),%r8
	movq %r8,0x60(%rbp)
	movq 0x20(%r13),%r8
	movl 0x0(%r8),%esp
	testl %esp,%esp
	jnz L_495161
L_283139:
	subl 0x0(%r10),%r9d
	jo L_283140
L_283142:
	cmpl %r9d,%r11d
	jl L_283144
L_283143:
	movl %r9d,0x50(%rbp)
L_283144:
	movq 0x60(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq 0x58(%rbp),%r13
	movslq 0x0(%r13),%r11
	movq %r11,0x68(%rbp)
	movslq 0x50(%rbp),%r13
	movq %r13,0x70(%rbp)
	cmpq %r11,%r14
	jb L_283167
L_283145:
	movq %r14,%r10
	subq %r11,%r10
	cmpq %r13,%r10
	jb L_495157
L_283146:
	testq %r11,%r11
	jnz L_283148
L_283163:
	cmpq %r13,%r14
	jne L_495151
L_283165:
L_283155:
	movq 0x58(%rbp),%r14
	movl 0x0(%r14),%r13d
	addl 0x50(%rbp),%r13d
	jo L_495150
L_283156:
	movl %r13d,0x0(%r14)
	jmp L_283120
.p2align 0x4
L_495150:
L_283140:
	movq $0x3,%r15
	jmp L_283141
.p2align 0x4
L_495151:
L_283148:
	movq 0x70(%rbp),%rdx
	testq %rdx,%rdx
	jz L_495155
L_283149:
	cmpq $0x7FFFFFFF,%rdx
	ja L_283161
L_283150:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x51,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_283151+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_283151
.p2align 0x4
.long 0x4675
L_283151:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq %rax,0x78(%rbp)
L_283152:
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3390:
	cmpq 0x70(%rbp),%r15
	jnl L_495152
L_283159:
	movq %r15,%r14
	addq 0x68(%rbp),%r14
	movq 0x78(%rbp),%r13
	movq 0x60(%rbp),%r10
	movb 0x0(%r10,%r14,1),%r11b
	movb %r11b,0x0(%r13,%r15,1)
	incq %r15
	jmp loop_3390
.p2align 0x4
L_495152:
L_283153:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_283154
L_283157:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_283158+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_283158
.p2align 0x4
.long 0x4676
L_283158:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_283154:
	movq 0x78(%rbp),%r15
	movq $0x7,0xFFFFFFFFFFFFFFF8(%r15)
	jmp L_283155
.p2align 0x4
L_495155:
L_283162:
	movq (globalObjptr+0x5A8)(%rip),%r15
	movq %r15,0x78(%rbp)
	jmp L_283152
.p2align 0x4
L_495157:
L_283167:
	movq $0x6,%r15
	jmp L_283141
.p2align 0x4
L_495161:
L_283170:
	movq $0x1419,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x20,%r12
	movq (globalObjptr+0xDD90)(%rip),%r14
	movq %r14,0x0(%r13)
	movq $0xE,0x10(%r13)
	movq $0x1933,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	addq $0x10,%r12
	xchgq %r14,%r15
	jmp L_283141
.p2align 0x4
L_495162:
L_283208:
	movq 0x8(%rbp),%r14
	movq (globalWord64+0x30)(%rip),%r13
	movq %r13,0x0(%r14)
	movq 0x30(%rbp),%r14
	xchgq %r14,%r15
	jmp L_283120
.p2align 0x4
L_495163:
L_283119:
	movq 0x30(%rbp),%r14
	xchgq %r14,%r15
	jmp L_283120
.p2align 0x4
.long 0x1AF5
loop_3389:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb loop_3388
L_283125:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_283126+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_283126
.p2align 0x4
.long 0x1135
L_283126:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	jmp loop_3388
.p2align 0x4
.long 0x48A
L_283127:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	movq %r15,0x30(%rbp)
	jmp L_283128
.p2align 0x4
.long 0x69B
L_283129:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4678
x_942:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x70(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_283176
L_283198:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_283199+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_283199
.p2align 0x4
.long 0x467B
L_283199:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_283176:
	movq 0x70(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%rdx
	movq %rdx,0x78(%rbp)
	cmpq %rdx,%r15
	jne L_283140
L_283178:
	cmpl 0x50(%rbp),%r14d
	je L_495171
L_283179:
	cmpq %rdx,0x60(%rbp)
	jb L_283167
L_283180:
	testq %rdx,%rdx
	jz L_495169
L_283181:
	cmpq $0x7FFFFFFF,%rdx
	ja L_283161
L_283182:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x51,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_283183+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_283183
.p2align 0x4
.long 0x4679
L_283183:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq %rax,0x50(%rbp)
L_283184:
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3391:
	cmpq 0x78(%rbp),%r15
	jnl L_495164
L_283193:
	movq 0x50(%rbp),%r14
	movq 0x68(%rbp),%r11
	movb 0x0(%r11,%r15,1),%r13b
	movb %r13b,0x0(%r14,%r15,1)
	incq %r15
	jmp loop_3391
.p2align 0x4
L_495164:
L_283185:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_283186
L_283191:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_283192+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_283192
.p2align 0x4
.long 0x467A
L_283192:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_283186:
	movq 0x50(%rbp),%r15
	movq $0x7,0xFFFFFFFFFFFFFFF8(%r15)
L_283187:
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_495166
L_283189:
	movq 0x58(%rbp),%r14
	addq 0x0(%r14),%r11
	jo L_283140
L_283190:
	movq %r11,0x0(%r14)
	jmp L_283120
.p2align 0x4
L_495166:
L_283188:
	movq (globalObjptr+0x4D8)(%rip),%r15
	jmp L_283141
.p2align 0x4
L_495169:
L_283195:
	movq (globalObjptr+0x6F8)(%rip),%r15
	movq %r15,0x50(%rbp)
	jmp L_283184
.p2align 0x4
L_495171:
L_283197:
	movq 0x68(%rbp),%r15
	movq $0x7,0xFFFFFFFFFFFFFFF8(%r15)
	jmp L_283187
.p2align 0x4
.long 0x48A
L_283200:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_283201
L_283202:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_283203+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_283203
.p2align 0x4
.long 0x101F
L_283203:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_283201:
	movq 0x30(%rbp),%r15
	jmp L_283141
.text
.p2align 0x4
.globl declareExports_0
.hidden declareExports_0
declareExports_0:
L_283229:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_283522
L_283230:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_495220
L_283231:
	movq 0x8(%rbp),%r15
	movq 0x18(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%rbp),%r15
	cmpq $0x1,%r15
	je x_2157
L_283232:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1826,%r14
	je L_495175
L_283520:
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq (globalObjptr+0x10D20)(%rip),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (x_943+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_495175:
L_283233:
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq (globalObjptr+0x10D20)(%rip),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (x_943+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
x_2157:
x_944:
	movq 0x10(%rbp),%r14
	movq 0x0(%r14),%r13
	cmpq $0x1,%r13
	je L_495190
L_283235:
	movq 0x8(%r13),%r14
	movq %r14,0x8(%rbp)
	movq 0x0(%r13),%r13
	movq %r13,%r15
L_283236:
	movb 0x0(%r15),%r14b
	movb %r14b,0x10(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movb 0x1(%r15),%r14b
	cmpb $0x1,%r14b
	je L_495189
	cmpb $0x2,%r14b
	je L_495188
L_283237:
	movq (globalObjptr+0x10D28)(%rip),%r14
	movq %r14,0x38(%rbp)
	movq (globalObjptr+0x10D30)(%rip),%r15
L_283238:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq (globalObjptr+0x1A68)(%rip),%r13
	movq %r13,0x8(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq (globalObjptr+0xA188)(%rip),%r14
	movq %r14,0x0(%r13)
	movzbq 0x10(%rbp),%rax
	subq $0x1,%rax
	cmpq $0xA,%rax
	ja L_495176
	leaq jumpTable_770(%rip),%rbx
	jmp *(%rbx,%rax,8)
.data
.p2align 0x4
jumpTable_770:
.quad L_495187,L_495186,L_495185,L_495184,L_495183,L_495182,L_495181,L_495180,L_495179,L_495178,L_495177
.text
.p2align 0x4
L_495176:
L_283239:
	movq (globalObjptr+0xDFA8)(%rip),%r11
	movq %r13,%r14
	movq %r11,%r13
L_283240:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r14,0x8(%r11)
	addq $0x18,%r12
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r11,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x10D38)(%rip),%r13
	movq %r13,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	movq %r13,0x48(%rbp)
	addq $0x18,%r12
	addq $0x48,%rbp
	leaq (L_283241+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_495177:
L_283514:
	movq (globalObjptr+0xAFD8)(%rip),%r11
	movq %r13,%r14
	movq %r11,%r13
	jmp L_283240
.p2align 0x4
L_495178:
L_283513:
	movq (globalObjptr+0xDFD0)(%rip),%r11
	movq %r13,%r14
	movq %r11,%r13
	jmp L_283240
.p2align 0x4
L_495179:
L_283512:
	movq (globalObjptr+0xDFC8)(%rip),%r11
	movq %r13,%r14
	movq %r11,%r13
	jmp L_283240
.p2align 0x4
L_495180:
L_283511:
	movq (globalObjptr+0xDFC0)(%rip),%r11
	movq %r13,%r14
	movq %r11,%r13
	jmp L_283240
.p2align 0x4
L_495181:
L_283510:
	movq (globalObjptr+0xDFB8)(%rip),%r11
	movq %r13,%r14
	movq %r11,%r13
	jmp L_283240
.p2align 0x4
L_495182:
L_283509:
	movq (globalObjptr+0xAC88)(%rip),%r11
	movq %r13,%r14
	movq %r11,%r13
	jmp L_283240
.p2align 0x4
L_495183:
L_283508:
	movq (globalObjptr+0xD080)(%rip),%r11
	movq %r13,%r14
	movq %r11,%r13
	jmp L_283240
.p2align 0x4
L_495184:
L_283507:
	movq (globalObjptr+0xD088)(%rip),%r11
	movq %r13,%r14
	movq %r11,%r13
	jmp L_283240
.p2align 0x4
L_495185:
L_283506:
	movq (globalObjptr+0xCE30)(%rip),%r11
	movq %r13,%r14
	movq %r11,%r13
	jmp L_283240
.p2align 0x4
L_495186:
L_283505:
	movq (globalObjptr+0xDFB0)(%rip),%r11
	movq %r13,%r14
	movq %r11,%r13
	jmp L_283240
.p2align 0x4
L_495187:
L_283504:
	movq (globalObjptr+0xD0F0)(%rip),%r11
	movq %r13,%r14
	movq %r11,%r13
	jmp L_283240
.p2align 0x4
L_495188:
L_283516:
	movq (globalObjptr+0x1A70)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_495189:
L_283515:
	movq (globalObjptr+0x10D70)(%rip),%r14
	movq %r14,0x38(%rbp)
	movq (globalObjptr+0x10D78)(%rip),%r15
	jmp L_283238
.p2align 0x4
L_495190:
L_283255:
	movq 0x20(%rbp),%r14
	movq 0x0(%r14),%r13
	cmpq $0x1,%r13
	je L_495219
L_283256:
	movq 0x8(%r13),%r14
	movq %r14,0x8(%rbp)
	movq 0x0(%r13),%r13
	movq %r13,%r15
L_283257:
	movb 0x6(%r15),%r14b
	movb %r14b,0x10(%rbp)
	movw 0x4(%r15),%r14w
	movw %r14w,0x12(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movl 0x0(%r15),%r14d
	movl %r14d,0x14(%rbp)
	movb 0x7(%r15),%r14b
	movb %r14b,0x11(%rbp)
	movq 0x10(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	movq %r11,0x38(%rbp)
	cmpq %r11,%r15
	movq %r14,0x30(%rbp)
	jne L_283259
L_283260:
	testq %r11,%r11
	jz L_495217
L_283261:
	cmpq $0x7FFFFFFF,%r11
	ja L_495216
L_283262:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_283263
L_283476:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_283477+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_283477
.p2align 0x4
.long 0xF30
L_283477:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_283263:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14FD,%rcx
	movq 0x38(%rbp),%rdx
	movq $0x30,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_283264+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_283264
.p2align 0x4
.long 0xF30
L_283264:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq %rax,0x40(%rbp)
L_283265:
	movq $0x0,0x48(%rbp)
loop_3393:
	movq 0x38(%rbp),%r15
	cmpq %r15,0x48(%rbp)
	jl L_495214
L_283266:
	movq 0x40(%rbp),%r15
	movq $0x18E3,0xFFFFFFFFFFFFFFF8(%r15)
	movb 0x10(%rbp),%r15b
	cmpb $0x1,%r15b
	je L_495212
	cmpb $0x2,%r15b
	je L_495211
L_283267:
	movw 0x12(%rbp),%r15w
	andw $0x1,%r15w
	jnz L_495198
L_283268:
	movq (globalObjptr+0xEE10)(%rip),%r15
	movq %r15,0x30(%rbp)
	movq (globalObjptr+0x10D28)(%rip),%r15
	movq %r15,0x38(%rbp)
	movq (globalObjptr+0x10D30)(%rip),%r15
	movq %r15,0x48(%rbp)
L_283269:
	movb 0x11(%rbp),%r14b
	cmpb $0x1,%r14b
	je L_495192
L_283270:
	testb %r14b,%r14b
	jnz L_495191
L_283271:
	movq (globalObjptr+0xE8E0)(%rip),%r15
L_283272:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xEC8)(%rip),%r15
	movq %r15,0x8(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0xEE08)(%rip),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_283273+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_495191:
L_283422:
	movq (globalObjptr+0xE950)(%rip),%r15
	jmp L_283272
.p2align 0x4
L_495192:
L_283423:
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x50(%rbp)
L_283274:
	movq 0x40(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x58(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_495197
L_283276:
	decl %r13d
	jo L_495196
L_283278:
	movl %r13d,0x5C(%rbp)
	movq $0x1,0x60(%rbp)
.p2align 0x4,,0x7
loop_3394:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_495195
.p2align 0x4,,0x7
L_283279:
	movl 0x5C(%rbp),%r15d
	cmpl $0x0,%r15d
	jl L_495193
L_283280:
	movl %r15d,%r14d
	decl %r14d
	movslq %r15d,%r13
	movl %r14d,0x5C(%rbp)
	salq $0x4,%r13
	movq 0x40(%rbp),%r15
	movq 0x8(%r15,%r13,1),%r14
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x60(%rbp)
	jmp loop_3394
.p2align 0x4
L_495193:
L_283281:
	movq 0x60(%rbp),%r14
	cmpq $0x1,%r14
	je L_495194
L_283282:
	movq 0x8(%r14),%r13
	movq %r13,0x78(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x68(%rbp)
	movq (globalObjptr+0xE1E8)(%rip),%r14
	movq %r14,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_283283+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3781
.p2align 0x4
L_495194:
L_283419:
	movq $0x1,%r13
	movq %r13,%r15
L_283285:
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_283286+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_495195:
L_283420:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_283421+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_283421
.p2align 0x4
.long 0x553
L_283421:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_283279
.p2align 0x4
L_495196:
L_283277:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_495197:
L_283259:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_495198:
L_283424:
	movw 0x12(%rbp),%r13w
	shrw $0x1,%r13w
	movb %r13b,%dl
	movq (globalObjptr+0x10D28)(%rip),%r14
	movq (globalObjptr+0x10D30)(%rip),%r15
toString_368:
	movzbq %dl,%rax
	subq $0x1,%rax
	cmpq $0xA,%rax
	ja L_495199
	leaq jumpTable_771(%rip),%rbx
	jmp *(%rbx,%rax,8)
.data
.p2align 0x4
jumpTable_771:
.quad L_495210,L_495209,L_495208,L_495207,L_495206,L_495205,L_495204,L_495203,L_495202,L_495201,L_495200
.text
.p2align 0x4
L_495199:
L_283425:
	movq %r14,0x38(%rbp)
	movq %r15,0x48(%rbp)
	movq (globalObjptr+0xDFA8)(%rip),%r15
	movq %r15,0x30(%rbp)
	jmp L_283269
.p2align 0x4
L_495200:
L_283436:
	movq %r14,0x38(%rbp)
	movq %r15,0x48(%rbp)
	movq (globalObjptr+0xAFD8)(%rip),%r15
	movq %r15,0x30(%rbp)
	jmp L_283269
.p2align 0x4
L_495201:
L_283435:
	movq %r14,0x38(%rbp)
	movq %r15,0x48(%rbp)
	movq (globalObjptr+0xDFD0)(%rip),%r15
	movq %r15,0x30(%rbp)
	jmp L_283269
.p2align 0x4
L_495202:
L_283434:
	movq %r14,0x38(%rbp)
	movq %r15,0x48(%rbp)
	movq (globalObjptr+0xDFC8)(%rip),%r15
	movq %r15,0x30(%rbp)
	jmp L_283269
.p2align 0x4
L_495203:
L_283433:
	movq %r14,0x38(%rbp)
	movq %r15,0x48(%rbp)
	movq (globalObjptr+0xDFC0)(%rip),%r15
	movq %r15,0x30(%rbp)
	jmp L_283269
.p2align 0x4
L_495204:
L_283432:
	movq %r14,0x38(%rbp)
	movq %r15,0x48(%rbp)
	movq (globalObjptr+0xDFB8)(%rip),%r15
	movq %r15,0x30(%rbp)
	jmp L_283269
.p2align 0x4
L_495205:
L_283431:
	movq %r14,0x38(%rbp)
	movq %r15,0x48(%rbp)
	movq (globalObjptr+0xAC88)(%rip),%r15
	movq %r15,0x30(%rbp)
	jmp L_283269
.p2align 0x4
L_495206:
L_283430:
	movq %r14,0x38(%rbp)
	movq %r15,0x48(%rbp)
	movq (globalObjptr+0xD080)(%rip),%r15
	movq %r15,0x30(%rbp)
	jmp L_283269
.p2align 0x4
L_495207:
L_283429:
	movq %r14,0x38(%rbp)
	movq %r15,0x48(%rbp)
	movq (globalObjptr+0xD088)(%rip),%r15
	movq %r15,0x30(%rbp)
	jmp L_283269
.p2align 0x4
L_495208:
L_283428:
	movq %r14,0x38(%rbp)
	movq %r15,0x48(%rbp)
	movq (globalObjptr+0xCE30)(%rip),%r15
	movq %r15,0x30(%rbp)
	jmp L_283269
.p2align 0x4
L_495209:
L_283427:
	movq %r14,0x38(%rbp)
	movq %r15,0x48(%rbp)
	movq (globalObjptr+0xDFB0)(%rip),%r15
	movq %r15,0x30(%rbp)
	jmp L_283269
.p2align 0x4
L_495210:
L_283426:
	movq %r14,0x38(%rbp)
	movq %r15,0x48(%rbp)
	movq (globalObjptr+0xD0F0)(%rip),%r15
	movq %r15,0x30(%rbp)
	jmp L_283269
.p2align 0x4
L_495211:
L_283440:
	movq (globalObjptr+0x1AB8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_495212:
L_283437:
	movw 0x12(%rbp),%r14w
	andw $0x1,%r14w
	jnz L_495213
L_283438:
	movq (globalObjptr+0xEE10)(%rip),%r14
	movq %r14,0x30(%rbp)
	movq (globalObjptr+0x10D70)(%rip),%r14
	movq %r14,0x38(%rbp)
	movq (globalObjptr+0x10D78)(%rip),%r14
	movq %r14,0x48(%rbp)
	jmp L_283269
.p2align 0x4
L_495213:
L_283439:
	movw 0x12(%rbp),%r13w
	shrw $0x1,%r13w
	movb %r13b,%dl
	movq (globalObjptr+0x10D70)(%rip),%r14
	movq (globalObjptr+0x10D78)(%rip),%r13
	movq %r13,%r15
	jmp toString_368
.p2align 0x4
L_495214:
L_283441:
	movq 0x48(%rbp),%r15
	movl %r15d,%r14d
	movl %r14d,0x50(%rbp)
	movslq %r14d,%r15
	movq 0x30(%rbp),%r11
	movb 0x0(%r11,%r15,1),%r13b
	movb %r13b,0x54(%rbp)
	movl %r14d,0x60(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_283442+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_495216:
L_283478:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_495217:
L_283479:
	movq (globalObjptr+0x1A78)(%rip),%r15
	movq %r15,0x40(%rbp)
	jmp L_283265
.p2align 0x4
L_495219:
L_283338:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_495220:
L_283522:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_283523+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_283523
.p2align 0x4
.long 0x45F
L_283523:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_283231
.p2align 0x4
.long 0x654
x_943:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb x_944
L_283518:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_283519+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_283519
.p2align 0x4
.long 0xBEC
L_283519:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp x_944
.p2align 0x4
.long 0x540
L_283241:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_283242
L_283502:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_283503+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_283503
.p2align 0x4
.long 0x530
L_283503:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_283242:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x0(%r14)
	movzbq 0x10(%rbp),%rax
	subq $0x1,%rax
	cmpq $0xA,%rax
	ja L_495222
	leaq jumpTable_772(%rip),%rbx
	jmp *(%rbx,%rax,8)
.data
.p2align 0x4
jumpTable_772:
.quad L_495233,L_495232,L_495231,L_495230,L_495229,L_495228,L_495227,L_495226,L_495225,L_495224,L_495223
.text
.p2align 0x4
L_495222:
L_283243:
	movq (globalObjptr+0xDFA8)(%rip),%r13
	movq %r14,%r15
	movq %r13,%r14
L_283244:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0xA188)(%rip),%r14
	movq %r14,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x38(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_283245+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_495223:
L_283501:
	movq (globalObjptr+0xAFD8)(%rip),%r13
	movq %r14,%r15
	movq %r13,%r14
	jmp L_283244
.p2align 0x4
L_495224:
L_283500:
	movq (globalObjptr+0xDFD0)(%rip),%r13
	movq %r14,%r15
	movq %r13,%r14
	jmp L_283244
.p2align 0x4
L_495225:
L_283499:
	movq (globalObjptr+0xDFC8)(%rip),%r13
	movq %r14,%r15
	movq %r13,%r14
	jmp L_283244
.p2align 0x4
L_495226:
L_283498:
	movq (globalObjptr+0xDFC0)(%rip),%r13
	movq %r14,%r15
	movq %r13,%r14
	jmp L_283244
.p2align 0x4
L_495227:
L_283497:
	movq (globalObjptr+0xDFB8)(%rip),%r13
	movq %r14,%r15
	movq %r13,%r14
	jmp L_283244
.p2align 0x4
L_495228:
L_283496:
	movq (globalObjptr+0xAC88)(%rip),%r13
	movq %r14,%r15
	movq %r13,%r14
	jmp L_283244
.p2align 0x4
L_495229:
L_283495:
	movq (globalObjptr+0xD080)(%rip),%r13
	movq %r14,%r15
	movq %r13,%r14
	jmp L_283244
.p2align 0x4
L_495230:
L_283494:
	movq (globalObjptr+0xD088)(%rip),%r13
	movq %r14,%r15
	movq %r13,%r14
	jmp L_283244
.p2align 0x4
L_495231:
L_283493:
	movq (globalObjptr+0xCE30)(%rip),%r13
	movq %r14,%r15
	movq %r13,%r14
	jmp L_283244
.p2align 0x4
L_495232:
L_283492:
	movq (globalObjptr+0xDFB0)(%rip),%r13
	movq %r14,%r15
	movq %r13,%r14
	jmp L_283244
.p2align 0x4
L_495233:
L_283491:
	movq (globalObjptr+0xD0F0)(%rip),%r13
	movq %r14,%r15
	movq %r13,%r14
	jmp L_283244
.p2align 0x4
.long 0x57A
L_283273:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	jmp L_283274
.p2align 0x4
.long 0x467D
L_283283:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_283284
L_283417:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_283418+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_283418
.p2align 0x4
.long 0xFFC
L_283418:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_283284:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	jmp L_283285
.p2align 0x4
.long 0x100E
L_283286:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_283287
L_283415:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_283416+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_283416
.p2align 0x4
.long 0x553
L_283416:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_283287:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xB10)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xED68)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x50(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_283288+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x4684
L_283442:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_283443
L_283474:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_283475+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_283475
.p2align 0x4
.long 0x468B
L_283475:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_283443:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xCE38)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_283444+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x15E1
L_283245:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_283246
L_283489:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_283490+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_283490
.p2align 0x4
.long 0x975
L_283490:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_283246:
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x1B53,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x0(%r15)
	movq (globalObjptr+0xA1A8)(%rip),%r15
	movq %r15,0x38(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_283247+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x467E
L_283288:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_283289
L_283413:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_283414+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_283414
.p2align 0x4
.long 0x4683
L_283414:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_283289:
	movl 0x58(%rbp),%r15d
	incl %r15d
	movl %r15d,0x30(%rbp)
	jo L_283277
L_283290:
	movw 0x12(%rbp),%r15w
	andw $0x1,%r15w
	jnz L_495240
L_283291:
	xorl %ecx,%ecx
L_283292:
	addl 0x30(%rbp),%ecx
	movl %ecx,0x34(%rbp)
	jo L_283277
L_283293:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x1A68)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xD0F8)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_283294+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_495240:
L_283412:
	movl $0x1,%ecx
	jmp L_283292
.p2align 0x4
.long 0x4684
L_283444:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_283445
L_283472:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_283473+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_283473
.p2align 0x4
.long 0x468B
L_283473:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_283445:
	movzbq 0x54(%rbp),%rax
	subq $0x1,%rax
	cmpq $0xA,%rax
	ja L_495243
	leaq jumpTable_773(%rip),%rbx
	jmp *(%rbx,%rax,8)
.data
.p2align 0x4
jumpTable_773:
.quad L_495254,L_495253,L_495252,L_495251,L_495250,L_495249,L_495248,L_495247,L_495246,L_495245,L_495244
.text
.p2align 0x4
L_495243:
L_283446:
	movq (globalObjptr+0xDFA8)(%rip),%r15
L_283447:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x58(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq (globalObjptr+0xA188)(%rip),%r14
	movq %r14,0x0(%r13)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r13,0x8(%r14)
	movq %r14,0x68(%rbp)
	addq $0x18,%r12
	addq $0x68,%rbp
	leaq (L_283448+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_495244:
L_283471:
	movq (globalObjptr+0xAFD8)(%rip),%r15
	jmp L_283447
.p2align 0x4
L_495245:
L_283470:
	movq (globalObjptr+0xDFD0)(%rip),%r15
	jmp L_283447
.p2align 0x4
L_495246:
L_283469:
	movq (globalObjptr+0xDFC8)(%rip),%r15
	jmp L_283447
.p2align 0x4
L_495247:
L_283468:
	movq (globalObjptr+0xDFC0)(%rip),%r15
	jmp L_283447
.p2align 0x4
L_495248:
L_283467:
	movq (globalObjptr+0xDFB8)(%rip),%r15
	jmp L_283447
.p2align 0x4
L_495249:
L_283466:
	movq (globalObjptr+0xAC88)(%rip),%r15
	jmp L_283447
.p2align 0x4
L_495250:
L_283465:
	movq (globalObjptr+0xD080)(%rip),%r15
	jmp L_283447
.p2align 0x4
L_495251:
L_283464:
	movq (globalObjptr+0xD088)(%rip),%r15
	jmp L_283447
.p2align 0x4
L_495252:
L_283463:
	movq (globalObjptr+0xCE30)(%rip),%r15
	jmp L_283447
.p2align 0x4
L_495253:
L_283462:
	movq (globalObjptr+0xDFB0)(%rip),%r15
	jmp L_283447
.p2align 0x4
L_495254:
L_283461:
	movq (globalObjptr+0xD0F0)(%rip),%r15
	jmp L_283447
.p2align 0x4
.long 0x525
L_283247:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_283248
L_283487:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_283488+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_283488
.p2align 0x4
.long 0x4DE
L_283488:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_283248:
	movq 0x0(%rbp),%r15
	cmpq $0x1,%r15
	je L_495257
L_283249:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1826,%r14
	je L_495256
L_283483:
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_283251+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_495256:
L_283250:
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_283251+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_495257:
L_283484:
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_283255
L_283485:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	xchgq %r13,%r15
	jmp L_283236
.p2align 0x4
.long 0x467F
L_283294:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_283295
L_283410:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_283411+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_283411
.p2align 0x4
.long 0x4683
L_283411:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_283295:
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x1B53,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x1A80)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_283296+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x4685
L_283448:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_283449
L_283459:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_283460+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_283460
.p2align 0x4
.long 0x468A
L_283460:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_283449:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x1AC0)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x10D80)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x68(%rbp)
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0xA5F8)(%rip),%r14
	movq %r14,0x0(%r15)
	movl 0x50(%rbp),%r15d
	incl %r15d
	jo L_283277
L_283450:
	movl %r15d,0x78(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_283451+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0x525
L_283251:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_283252
L_283481:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_283482+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_283482
.p2align 0x4
.long 0x45A
L_283482:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_283252:
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_283255
L_283253:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_283236
.p2align 0x4
.long 0x4680
L_283296:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_495266
L_283297:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x1826,%r13
	je L_495265
L_283408:
	movq 0x0(%r14),%r13
	movq %r13,0x70(%rbp)
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_283299+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_495265:
L_283298:
	movq 0x0(%r14),%r13
	movq %r13,0x70(%rbp)
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_283299+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_495266:
L_283300:
	movl 0x34(%rbp),%r15d
	movl %r15d,0x68(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_283301+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0x4686
L_283451:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_283452
L_283457:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_283458+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_283458
.p2align 0x4
.long 0x4689
L_283458:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_283452:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x10D60)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_283453+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x4680
L_283299:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	jmp L_283300
.p2align 0x4
.long 0x4680
L_283301:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_283302
L_283406:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_283407+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_283407
.p2align 0x4
.long 0x4682
L_283407:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_283302:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x1A88)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x10D40)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_283303+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x4687
L_283453:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_283454
L_283455:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_283456+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_283456
.p2align 0x4
.long 0x4688
L_283456:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_283454:
	movq 0x40(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x48(%rbp),%r14
	movq %r14,%r11
	salq $0x4,%r11
	movq 0x50(%rbp),%r10
	movq %r10,0x0(%r15,%r11,1)
	movq %r15,%r11
	shrq $0x8,%r11
	movb $0x1,0x0(%r13,%r11,1)
	movq %r14,%r13
	salq $0x4,%r13
	movq 0x60(%rbp),%r11
	movq %r11,0x8(%r15,%r13,1)
	incq %r14
	movq %r14,0x48(%rbp)
	jmp loop_3393
.p2align 0x4
.long 0x4680
L_283303:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_495271
L_283304:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x1826,%r13
	je L_495270
L_283404:
	movq 0x0(%r14),%r13
	movq %r13,0x70(%rbp)
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_283306+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_495270:
L_283305:
	movq 0x0(%r14),%r13
	movq %r13,0x70(%rbp)
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_283306+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_495271:
L_283307:
	movq (globalObjptr+0x1A90)(%rip),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_283308+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x4680
L_283306:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	jmp L_283307
.p2align 0x4
.long 0x4680
L_283308:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_495273
L_283309:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x1826,%r13
	je L_495272
L_283402:
	movq 0x0(%r14),%r13
	movq %r13,0x70(%rbp)
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_283311+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_495272:
L_283310:
	movq 0x0(%r14),%r13
	movq %r13,0x70(%rbp)
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_283311+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_495273:
L_283312:
	movl 0x14(%rbp),%r15d
	movl %r15d,0x68(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_283313+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0x4680
L_283311:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	jmp L_283312
.p2align 0x4
.long 0x4680
L_283313:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_283314
L_283400:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_283401+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_283401
.p2align 0x4
.long 0x4682
L_283401:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_283314:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x1AA0)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x10D48)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_283315+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x4680
L_283315:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_495276
L_283316:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x1826,%r13
	je L_495275
L_283398:
	movq 0x0(%r14),%r13
	movq %r13,0x70(%rbp)
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_283318+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_495275:
L_283317:
	movq 0x0(%r14),%r13
	movq %r13,0x70(%rbp)
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_283318+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_495276:
L_283319:
	cmpl $0x0,0x58(%rbp)
	jl L_495302
L_283320:
	movl $0x0,0x14(%rbp)
.p2align 0x4,,0x7
loop_3395:
	movl 0x14(%rbp),%r15d
	cmpl 0x58(%rbp),%r15d
	jnl L_495279
L_283390:
	movslq %r15d,%r14
	salq $0x4,%r14
	movq 0x40(%rbp),%r15
	movq 0x0(%r15,%r14,1),%r13
	cmpq $0x1,0x0(%rbp)
	jne L_495277
.p2align 0x4,,0x7
L_283394:
	incl 0x14(%rbp)
	jmp loop_3395
.p2align 0x4
L_495277:
L_283391:
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1826,%r14
	je L_495278
L_283395:
	movq %r13,0x68(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_283393+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_495278:
L_283392:
	movq %r13,0x68(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_283393+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_495279:
L_283321:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_283322
L_283388:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r14d
	movl %r14d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r14
	movq %r14,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_283389+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_283389
.p2align 0x4
.long 0x4681
L_283389:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_283322:
	movw 0x12(%rbp),%r15w
	movw %r15w,%r14w
	andw $0x1,%r14w
	jz L_495292
L_283358:
	shrw $0x1,%r15w
	movb %r15b,%r14b
	movzbq %r14b,%rax
	subq $0x1,%rax
	cmpq $0xA,%rax
	ja L_495280
	leaq jumpTable_774(%rip),%rbx
	jmp *(%rbx,%rax,8)
.data
.p2align 0x4
jumpTable_774:
.quad L_495291,L_495290,L_495289,L_495288,L_495287,L_495286,L_495285,L_495284,L_495283,L_495282,L_495281
.text
.p2align 0x4
L_495280:
L_283359:
	movq (globalObjptr+0xDFA8)(%rip),%r15
	movq %r15,0x20(%rbp)
L_283360:
	movl 0x30(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_283361+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_495281:
L_283387:
	movq (globalObjptr+0xAFD8)(%rip),%r15
	movq %r15,0x20(%rbp)
	jmp L_283360
.p2align 0x4
L_495282:
L_283386:
	movq (globalObjptr+0xDFD0)(%rip),%r15
	movq %r15,0x20(%rbp)
	jmp L_283360
.p2align 0x4
L_495283:
L_283385:
	movq (globalObjptr+0xDFC8)(%rip),%r15
	movq %r15,0x20(%rbp)
	jmp L_283360
.p2align 0x4
L_495284:
L_283384:
	movq (globalObjptr+0xDFC0)(%rip),%r15
	movq %r15,0x20(%rbp)
	jmp L_283360
.p2align 0x4
L_495285:
L_283383:
	movq (globalObjptr+0xDFB8)(%rip),%r15
	movq %r15,0x20(%rbp)
	jmp L_283360
.p2align 0x4
L_495286:
L_283382:
	movq (globalObjptr+0xAC88)(%rip),%r15
	movq %r15,0x20(%rbp)
	jmp L_283360
.p2align 0x4
L_495287:
L_283381:
	movq (globalObjptr+0xD080)(%rip),%r15
	movq %r15,0x20(%rbp)
	jmp L_283360
.p2align 0x4
L_495288:
L_283380:
	movq (globalObjptr+0xD088)(%rip),%r15
	movq %r15,0x20(%rbp)
	jmp L_283360
.p2align 0x4
L_495289:
L_283379:
	movq (globalObjptr+0xCE30)(%rip),%r15
	movq %r15,0x20(%rbp)
	jmp L_283360
.p2align 0x4
L_495290:
L_283378:
	movq (globalObjptr+0xDFB0)(%rip),%r15
	movq %r15,0x20(%rbp)
	jmp L_283360
.p2align 0x4
L_495291:
L_283377:
	movq (globalObjptr+0xD0F0)(%rip),%r15
	movq %r15,0x20(%rbp)
	jmp L_283360
.p2align 0x4
L_495292:
L_283324:
	movq 0x0(%rbp),%r15
	cmpq $0x1,%r15
	je L_495294
L_283325:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1826,%r14
	je L_495293
L_283356:
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq (globalObjptr+0x10D50)(%rip),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_283327+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_495293:
L_283326:
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq (globalObjptr+0x10D50)(%rip),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_283327+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_495294:
L_283329:
	movw 0x12(%rbp),%r15w
	andw $0x1,%r15w
	jz L_283331
L_283345:
	movq 0x0(%rbp),%r15
	cmpq $0x1,%r15
	je L_495296
L_283346:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1826,%r14
	je L_495295
L_283352:
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq (globalObjptr+0x10D58)(%rip),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_283348+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_495295:
L_283347:
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq (globalObjptr+0x10D58)(%rip),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_283348+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_495296:
L_283331:
	movq 0x0(%rbp),%r15
	cmpq $0x1,%r15
	je L_495298
L_283332:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1826,%r14
	je L_495297
L_283341:
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq (globalObjptr+0xED98)(%rip),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_283334+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_495297:
L_283333:
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq (globalObjptr+0xED98)(%rip),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_283334+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_495298:
L_283342:
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_283338
L_283343:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	xchgq %r13,%r15
	jmp L_283257
.p2align 0x4
L_495302:
L_283397:
	movq (globalObjptr+0x4F8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4680
L_283318:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	jmp L_283319
.p2align 0x4
.long 0x4680
L_283393:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	jmp L_283394
.p2align 0x4
.long 0x525
L_283361:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_283362
L_283375:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_283376+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_283376
.p2align 0x4
.long 0x554
L_283376:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_283362:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x1AB0)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x10D60)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0x10D68)(%rip),%r14
	movq %r14,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0xEDD8)(%rip),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_283363+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x558
L_283327:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_283329
L_283354:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_283355+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_283355
.p2align 0x4
.long 0x56D
L_283355:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_283329
.p2align 0x4
.long 0x558
L_283348:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_283331
L_283350:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_283351+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_283351
.p2align 0x4
.long 0x56D
L_283351:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_283331
.p2align 0x4
.long 0x558
L_283334:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_283335
L_283339:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_283340+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_283340
.p2align 0x4
.long 0x56D
L_283340:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_283335:
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_283338
L_283336:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_283257
.p2align 0x4
.long 0x558
L_283363:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_283364
L_283373:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_283374+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_283374
.p2align 0x4
.long 0x45A
L_283374:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_283364:
	movq 0x0(%rbp),%r15
	cmpq $0x1,%r15
	je L_283324
L_283365:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1826,%r14
	je L_495308
L_283371:
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_283367+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_495308:
L_283366:
	movq 0x0(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_283367+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x558
L_283367:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_283324
L_283369:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_283370+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_283370
.p2align 0x4
.long 0x56D
L_283370:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_283324
.text
.p2align 0x4
.globl x_1833
.hidden x_1833
x_1833:
L_283524:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x1B0(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_283714
L_283525:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_495355
L_283526:
	movq 0x48(%rbp),%r15
	movl 0x0(%r15),%r14d
	testl %r14d,%r14d
	jnz L_495312
L_283527:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_495312:
L_283528:
	movq 0x50(%rbp),%r13
	movb 0x0(%r13),%r14b
	testb %r14b,%r14b
	jnz L_283530
L_283704:
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_495313
L_283705:
	movq 0x8(%r14),%r13
	movq %r13,0x48(%rbp)
	movq 0x0(%r14),%r15
L_283706:
	movq 0x10(%r15),%r14
	movq %r14,0x1C8(%rbp)
	movq $0x3283,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x1C0(%rbp)
	leaq L_283618(%rip),%r15
	movq %r15,0x1A8(%rbp)
	movq %rbp,%r15
	addq $0x1B0,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x1C0,%rbp
	leaq (L_283707+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_7
.p2align 0x4
L_495313:
L_283530:
	movq 0x10(%rbp),%r15
	cmpq $0x1,%r15
	je L_495352
L_283531:
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x0(%r15),%r13
	movq 0x50(%rbp),%r15
	cmpb $0x7,0x0(%r15)
	je L_283539
L_283532:
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movl %r15d,%r11d
	movslq %r11d,%r10
	cmpq %r15,%r10
	jne L_283534
L_283535:
	movq 0x38(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r13
	movl %r13d,%r10d
	movslq %r10d,%r9
	cmpq %r9,%r13
	jne L_283534
L_283537:
	cmpl %r11d,%r10d
	jne L_495348
L_283540:
	movq $0x71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x58(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movl %r13d,0x60(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_283534
L_283542:
	cmpl $0x0,%r13d
	jl L_283616
L_283543:
	movl $0x0,0x64(%rbp)
.p2align 0x4,,0x7
loop_3396:
	movq (gcState+0x458)(%rip),%r15
	subq %r12,%r15
	cmpq $0x218,%r15
	jb L_495345
.p2align 0x4,,0x7
L_283544:
	movl 0x64(%rbp),%r13d
	cmpl 0x60(%rbp),%r13d
	jnl L_495327
L_283666:
	movslq %r13d,%r15
	movq 0x48(%rbp),%r13
	movq 0x0(%r13,%r15,8),%r11
	movq 0x8(%r11),%r10
	movq 0x8(%r10),%r9
	movq %r9,0x1B8(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_495326
L_283668:
	movq %r15,0x0(%r13)
	movq 0x0(%r9),%r13
	cmpq $0x1,%r13
	je L_495325
L_283669:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_283671:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_283672
L_283689:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xCAE,%r13
	jne L_283672
L_283690:
	movq 0x8(%r14),%r13
	movq 0x58(%rbp),%r11
	cmpq %r11,0x0(%r14)
	je L_495320
L_283672:
	incl %ecx
	movl %ecx,0x1C0(%rbp)
	jo L_495319
L_283674:
	cmpq $0x1,%r15
	je L_495314
L_283675:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_283671
.p2align 0x4
L_495314:
L_283676:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_495318
.p2align 0x4,,0x7
L_283677:
	movl 0x1C0(%rbp),%ecx
L_283678:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_495317
L_283680:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_283682
L_283686:
	movl %ecx,0x0(%r15)
L_283682:
	movq $0x4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x195D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x58(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq 0x1B8(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r10,0x0(%r13)
L_283683:
	movl 0x0(%r15),%r14d
	testl %r14d,%r14d
	jnz L_495315
L_283685:
	movl $0x1,0x0(%r15)
	incl 0x64(%rbp)
	jmp loop_3396
.p2align 0x4
L_495315:
L_283684:
	movq 0x1B0(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x7630)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_495317:
L_283679:
	movq 0x1B0(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x1080)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_495318:
L_283687:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1D0,%rbp
	leaq (L_283688+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_283688
.p2align 0x4
.long 0x46A7
L_283688:
	addq $0xFFFFFFFFFFFFFE30,%rbp
	jmp L_283677
.p2align 0x4
L_495319:
L_283673:
	movq 0x1B0(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_495320:
L_283692:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_283679
L_283693:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_495321
L_283695:
	movl %ecx,0x0(%r14)
	movq %r13,%r15
	jmp L_283683
.p2align 0x4
L_495321:
L_283694:
	movq %r13,%r15
	jmp L_283683
.p2align 0x4
L_495325:
L_283696:
	xorl %ecx,%ecx
	jmp L_283678
.p2align 0x4
L_495326:
L_283667:
	movq 0x1B0(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x1088)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_495327:
L_283545:
	movq $0x3287,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r15,0x48(%rbp)
L_283546:
	movq 0x38(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x58(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_283534
L_283548:
	cmpl $0x0,%r13d
	jl L_283616
L_283549:
	movl $0x0,0x5C(%rbp)
loop_3397:
	movl 0x58(%rbp),%r15d
	cmpl %r15d,0x5C(%rbp)
	jl L_495342
L_283550:
	movq 0x18(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x58(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_283534
L_283552:
	cmpl $0x0,%r13d
	jl L_283616
L_283553:
	movl $0x0,0x5C(%rbp)
loop_3398:
	movl 0x58(%rbp),%r14d
	cmpl %r14d,0x5C(%rbp)
	jl L_495339
L_283554:
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_495328
L_283555:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
L_283556:
	movq 0x0(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x60(%rbp)
	leaq L_283618(%rip),%r15
	movq %r15,0x1A8(%rbp)
	movq %rbp,%r15
	addq $0x1B0,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x7650)(%rip),%r15
	movq %r15,0x1C0(%rbp)
	addq $0x1C0,%rbp
	leaq (L_283557+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_495328:
L_283563:
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_495329
L_283564:
	movq 0x8(%r14),%r13
	movq %r13,0x8(%rbp)
	movq 0x0(%r14),%r15
L_283565:
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x58(%rbp)
	leaq L_283618(%rip),%r15
	movq %r15,0x1A8(%rbp)
	movq %rbp,%r15
	addq $0x1B0,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x7660)(%rip),%r15
	movq %r15,0x1C0(%rbp)
	addq $0x1C0,%rbp
	leaq (L_283566+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_495329:
L_283572:
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_495330
L_283573:
	movq 0x8(%r14),%r13
	movq %r13,0x28(%rbp)
	movq 0x0(%r14),%r15
L_283574:
	movq 0x0(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x60(%rbp)
	leaq L_283618(%rip),%r15
	movq %r15,0x1A8(%rbp)
	movq %rbp,%r15
	addq $0x1B0,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x7670)(%rip),%r15
	movq %r15,0x1C0(%rbp)
	addq $0x1C0,%rbp
	leaq (L_283575+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_495330:
L_283581:
	movq $0x71,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x28(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_495331
L_283582:
	movq 0x8(%r14),%r13
	movq %r13,0x58(%rbp)
	movq 0x0(%r14),%r15
L_283583:
	movq 0x10(%r15),%r14
	movq %r14,0x1C8(%rbp)
	movq $0x326B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r15,0x1C0(%rbp)
	leaq L_283618(%rip),%r15
	movq %r15,0x1A8(%rbp)
	movq %rbp,%r15
	addq $0x1B0,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x1C0,%rbp
	leaq (L_283584+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_7
.p2align 0x4
L_495331:
L_283588:
	movq $0x71,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x28(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x47B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x58(%rbp)
	addq $0x18,%r12
	movq 0xC8(%rbp),%r11
	movq %r11,0x0(%r13)
	movq %r14,0x8(%r13)
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_495332
L_283589:
	movq 0x8(%r14),%r13
	movq %r13,0x60(%rbp)
	movq 0x0(%r14),%r15
L_283590:
	movq 0x10(%r15),%r14
	movq %r14,0x1C8(%rbp)
	movq $0x3285,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r15,0x1C0(%rbp)
	leaq L_283618(%rip),%r15
	movq %r15,0x1A8(%rbp)
	movq %rbp,%r15
	addq $0x1B0,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x1C0,%rbp
	leaq (L_283591+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_7
.p2align 0x4
L_495332:
L_283595:
	movq $0xDBF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x28(%rbp)
	addq $0x98,%r12
	movq 0x138(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x130(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x38(%rbp),%r13
	movq %r13,0x10(%r14)
	movq 0x20(%rbp),%r11
	movq %r11,0x18(%r14)
	movq 0x128(%rbp),%r11
	movq %r11,0x20(%r14)
	movq 0x120(%rbp),%r11
	movq %r11,0x28(%r14)
	movq 0x118(%rbp),%r10
	movq %r10,0x30(%r14)
	movq 0x110(%rbp),%r10
	movq %r10,0x38(%r14)
	movq 0x108(%rbp),%r10
	movq %r10,0x40(%r14)
	movq 0x58(%rbp),%r10
	movq %r10,0x48(%r14)
	movq 0x100(%rbp),%r9
	movq %r9,0x50(%r14)
	movq 0xF8(%rbp),%r9
	movq %r9,0x58(%r14)
	movq 0xF0(%rbp),%r9
	movq %r9,0x60(%r14)
	movq 0x18(%rbp),%r9
	movq %r9,0x68(%r14)
	movq 0xE8(%rbp),%r9
	movq %r9,0x70(%r14)
	movq 0xE0(%rbp),%r9
	movq %r9,0x78(%r14)
	movq 0xD8(%rbp),%r9
	movq %r9,0x80(%r14)
	movq 0xD0(%rbp),%r9
	movq %r9,0x88(%r14)
	movq $0xDBD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x140(%rbp),%r8
	movq %r8,0x0(%r15)
	movq %r11,0x8(%r15)
	movq $0xDC1,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r8,0x60(%rbp)
	movq %r15,0x60(%r8)
	addq $0x78,%r12
	movq %r11,0x0(%r8)
	movq 0x168(%rbp),%rsp
	movq %rsp,0x8(%r8)
	movq 0x160(%rbp),%rsp
	movq %rsp,0x10(%r8)
	movq 0x158(%rbp),%rsp
	movq %rsp,0x18(%r8)
	movq 0x150(%rbp),%rsp
	movq %rsp,0x20(%r8)
	movq %r13,0x28(%r8)
	movq 0xC8(%rbp),%r13
	movq %r13,0x30(%r8)
	movq %r11,0x38(%r8)
	movq 0x148(%rbp),%r13
	movq %r13,0x40(%r8)
	movq %r9,0x48(%r8)
	movq %r14,0x50(%r8)
	movq %r14,0x58(%r8)
	movq %r10,0x68(%r8)
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_495333
L_283596:
	movq 0x8(%r14),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r14),%r15
L_283597:
	movq 0x10(%r15),%r14
	movq %r14,0x1C8(%rbp)
	movq $0x3269,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0xA0,%r12
	movq 0x170(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x178(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x158(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x180(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x188(%rbp),%r14
	movq %r14,0x20(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x28(%r15)
	movq 0x30(%rbp),%r13
	movq %r13,0x30(%r15)
	movq %r14,0x38(%r15)
	movq 0xE0(%rbp),%r14
	movq %r14,0x40(%r15)
	movq 0x128(%rbp),%r14
	movq %r14,0x48(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x50(%r15)
	movq 0x190(%rbp),%r14
	movq %r14,0x58(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x60(%r15)
	movq 0xD0(%rbp),%r13
	movq %r13,0x68(%r15)
	movq %r14,0x70(%r15)
	movq 0x148(%rbp),%r14
	movq %r14,0x78(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x80(%r15)
	movq 0x198(%rbp),%r14
	movq %r14,0x88(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x90(%r15)
	movq %r15,0x1C0(%rbp)
	leaq L_283618(%rip),%r15
	movq %r15,0x1A8(%rbp)
	movq %rbp,%r15
	addq $0x1B0,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x1C0,%rbp
	leaq (L_283598+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_7
.p2align 0x4
L_495333:
L_283602:
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_495334
L_283603:
	movq 0x8(%r14),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r14),%r15
L_283604:
	movq 0x10(%r15),%r14
	movq %r14,0x1C8(%rbp)
	leaq L_283618(%rip),%r15
	movq %r15,0x1A8(%rbp)
	movq %rbp,%r15
	addq $0x1B0,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x6,0x1C0(%rbp)
	addq $0x1C0,%rbp
	leaq (L_283605+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_7
.p2align 0x4
L_495334:
L_283608:
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_495338
L_283609:
	movq 0x8(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%ecx
	movslq %ecx,%r13
	cmpq %r14,%r13
	jne L_495337
L_283611:
	cmpl $0x0,%ecx
	jl L_495336
L_283612:
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_3399:
	cmpl %ecx,%ebx
	jnl L_495335
L_283614:
	movslq %ebx,%r14
	movq 0x0(%r15,%r14,8),%r13
	movq 0x8(%r13),%r11
	movq 0x8(%r11),%r10
	movq %r10,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq $0x1,0x0(%r10)
	incl %ebx
	jmp loop_3399
.p2align 0x4
L_495335:
L_283613:
	movq 0x1B0(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_495336:
L_283616:
	movq 0x1B0(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x4F8)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_495337:
L_283534:
	movq 0x1B0(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x4D8)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_495338:
L_283617:
	movq 0x1B0(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_495339:
L_283654:
	movslq 0x5C(%rbp),%r15
	movq 0x18(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq $0x3089,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq %r13,0x0(%r15)
	movq 0x88(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x1C8(%rbp)
	movq $0x3069,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	addq $0x18,%r12
	movq 0x90(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x1C0(%rbp)
	leaq L_283618(%rip),%r15
	movq %r15,0x1A8(%rbp)
	movq %rbp,%r15
	addq $0x1B0,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0xFF18)(%rip),%r15
	movq %r15,0x1D0(%rbp)
	addq $0x1C0,%rbp
	leaq (L_283655+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp check_1
.p2align 0x4
L_495342:
L_283660:
	movslq 0x5C(%rbp),%r15
	movq %r15,%r14
	salq $0x4,%r14
	movq 0x38(%rbp),%r13
	movq 0x8(%r13,%r14,1),%r11
	salq $0x4,%r15
	movl 0x4(%r13,%r15,1),%r14d
	movq $0x3079,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x38,%r12
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x68(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x70(%rbp),%r13
	movq %r13,0x10(%r15)
	movq 0x20(%rbp),%r13
	movq %r13,0x18(%r15)
	movq %r11,0x20(%r15)
	movq 0x30(%rbp),%r13
	movq %r13,0x28(%r15)
	movq %r15,0x1C8(%rbp)
	movq $0x3059,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %r14d,0x0(%r15)
	movq %r11,0x8(%r15)
	addq $0x28,%r12
	movl $0x0,0x4(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x80(%rbp),%r14
	movq %r14,0x18(%r15)
	movq %r15,0x1C0(%rbp)
	leaq L_283618(%rip),%r15
	movq %r15,0x1A8(%rbp)
	movq %rbp,%r15
	addq $0x1B0,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0xAE20)(%rip),%r15
	movq %r15,0x1D0(%rbp)
	addq $0x1C0,%rbp
	leaq (L_283661+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp check_1
.p2align 0x4
L_495345:
L_283697:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	movq $0x218,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1C0,%rbp
	leaq (L_283698+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_283698
.p2align 0x4
.long 0x46A8
L_283698:
	addq $0xFFFFFFFFFFFFFE40,%rbp
	jmp L_283544
.p2align 0x4
L_495348:
L_283539:
	movq 0x1B0(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x7638)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_495352:
L_283701:
	movq 0x50(%rbp),%r14
	cmpb $0x7,0x0(%r14)
	je L_495353
L_283702:
	movq 0x1B0(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x7640)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_495353:
L_283703:
	movq $0x1,0x48(%rbp)
	jmp L_283546
.p2align 0x4
L_495355:
L_283714:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1C0,%rbp
	leaq (L_283715+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_283715
.p2align 0x4
.long 0x46AA
L_283715:
	addq $0xFFFFFFFFFFFFFE40,%rbp
	jmp L_283526
.p2align 0x4
.long 0x46A9
L_283707:
	addq $0xFFFFFFFFFFFFFE40,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_283708
L_283711:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1C0,%rbp
	leaq (L_283712+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_283712
.p2align 0x4
.long 0x46AA
L_283712:
	addq $0xFFFFFFFFFFFFFE40,%rbp
L_283708:
	movq 0x48(%rbp),%r14
	cmpq $0x1,%r14
	je L_283530
L_283709:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x48(%rbp)
	jmp L_283706
.p2align 0x4
.long 0x4696
L_283618:
	addq $0xFFFFFFFFFFFFFE50,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
L_283619:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_283620
L_283621:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xCCD,%r14
	jne L_495359
L_283622:
	movq 0x0(%r15),%r14
	movq %r14,0x1C0(%rbp)
	movq 0x1B0(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x1C0,%rbp
	leaq (L_283623+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_51
.p2align 0x4
L_495359:
L_283620:
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq 0x1B0(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x468C
L_283557:
	addq $0xFFFFFFFFFFFFFE40,%rbp
	movq 0x1C0(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_283558
L_283651:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1C0,%rbp
	leaq (L_283652+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_283652
.p2align 0x4
.long 0x46A2
L_283652:
	addq $0xFFFFFFFFFFFFFE40,%rbp
L_283558:
	movq $0x3077,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x98(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x58(%rbp),%r13
	movq %r13,0x10(%r15)
	movq %r15,0x1C8(%rbp)
	movq $0x3057,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x28,%r12
	movq %r14,0x0(%r15)
	movq 0xA0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r13,0x10(%r15)
	movq 0xA8(%rbp),%r14
	movq %r14,0x18(%r15)
	movq %r15,0x1C0(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x1D0(%rbp)
	addq $0x1C0,%rbp
	leaq (L_283559+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp check_1
.p2align 0x4
.long 0x468E
L_283566:
	addq $0xFFFFFFFFFFFFFE40,%rbp
	movq 0x1C0(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_283567
L_283646:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1C0,%rbp
	leaq (L_283647+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_283647
.p2align 0x4
.long 0x46A0
L_283647:
	addq $0xFFFFFFFFFFFFFE40,%rbp
L_283567:
	movq $0x308B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xB0(%rbp),%r13
	movq %r13,0x8(%r15)
	movq %r15,0x1C8(%rbp)
	movq $0x306B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x28,%r12
	movq %r14,0x0(%r15)
	movq 0xA0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x78(%rbp),%r14
	movq %r14,0x18(%r15)
	movq %r15,0x1C0(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x1D0(%rbp)
	addq $0x1C0,%rbp
	leaq (L_283568+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp check_1
.p2align 0x4
.long 0x4690
L_283575:
	addq $0xFFFFFFFFFFFFFE40,%rbp
	movq 0x1C0(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_283576
L_283641:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1C0,%rbp
	leaq (L_283642+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_283642
.p2align 0x4
.long 0x469E
L_283642:
	addq $0xFFFFFFFFFFFFFE40,%rbp
L_283576:
	movq $0x3075,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0xB8(%rbp),%r11
	movq %r11,0x10(%r15)
	movq %r15,0x1C8(%rbp)
	movq $0x3055,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x28,%r12
	movq %r14,0x0(%r15)
	movq 0xA0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r13,0x10(%r15)
	movq 0xC0(%rbp),%r14
	movq %r14,0x18(%r15)
	movq %r15,0x1C0(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x1D0(%rbp)
	addq $0x1C0,%rbp
	leaq (L_283577+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp check_1
.p2align 0x4
.long 0x4692
L_283584:
	addq $0xFFFFFFFFFFFFFE40,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_283585
L_283636:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1C0,%rbp
	leaq (L_283637+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_283637
.p2align 0x4
.long 0x469C
L_283637:
	addq $0xFFFFFFFFFFFFFE40,%rbp
L_283585:
	movq 0x58(%rbp),%r14
	cmpq $0x1,%r14
	je L_283588
L_283586:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x58(%rbp)
	jmp L_283583
.p2align 0x4
.long 0x4693
L_283591:
	addq $0xFFFFFFFFFFFFFE40,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_283592
L_283633:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1C0,%rbp
	leaq (L_283634+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_283634
.p2align 0x4
.long 0x469B
L_283634:
	addq $0xFFFFFFFFFFFFFE40,%rbp
L_283592:
	movq 0x60(%rbp),%r14
	cmpq $0x1,%r14
	je L_283595
L_283593:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x60(%rbp)
	jmp L_283590
.p2align 0x4
.long 0x4694
L_283598:
	addq $0xFFFFFFFFFFFFFE40,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_283599
L_283630:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1C0,%rbp
	leaq (L_283631+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_283631
.p2align 0x4
.long 0x469A
L_283631:
	addq $0xFFFFFFFFFFFFFE40,%rbp
L_283599:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_283602
L_283600:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	jmp L_283597
.p2align 0x4
.long 0x4695
L_283605:
	addq $0xFFFFFFFFFFFFFE40,%rbp
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_283608
L_283606:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	jmp L_283604
.p2align 0x4
.long 0x46A3
L_283655:
	addq $0xFFFFFFFFFFFFFE40,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_283656
L_283657:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1C0,%rbp
	leaq (L_283658+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_283658
.p2align 0x4
.long 0x46A4
L_283658:
	addq $0xFFFFFFFFFFFFFE40,%rbp
L_283656:
	incl 0x5C(%rbp)
	jmp loop_3398
.p2align 0x4
.long 0x46A5
L_283661:
	addq $0xFFFFFFFFFFFFFE40,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_283662
L_283663:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1C0,%rbp
	leaq (L_283664+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_283664
.p2align 0x4
.long 0x46A6
L_283664:
	addq $0xFFFFFFFFFFFFFE40,%rbp
L_283662:
	incl 0x5C(%rbp)
	jmp loop_3397
.p2align 0x4
.long 0x4697
L_283623:
	addq $0xFFFFFFFFFFFFFE40,%rbp
	movq 0x1C0(%rbp),%r15
	movq %r15,0x1B8(%rbp)
	movl 0x1C8(%rbp),%r15d
	movl %r15d,0x1C0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_283624
L_283627:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1D0,%rbp
	leaq (L_283628+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_283628
.p2align 0x4
.long 0x4699
L_283628:
	addq $0xFFFFFFFFFFFFFE30,%rbp
L_283624:
	movq $0xC3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x1C0(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x1B8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x1C8(%rbp)
	movq $0x3E37,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x1A0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x1D0(%rbp)
	movq (globalObjptr+0x9D8)(%rip),%r15
	movq %r15,0x1C0(%rbp)
	addq $0x1C0,%rbp
	leaq (L_283625+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3780
.p2align 0x4
.long 0x468D
L_283559:
	addq $0xFFFFFFFFFFFFFE40,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_283560
L_283649:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1C0,%rbp
	leaq (L_283650+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_283650
.p2align 0x4
.long 0x46A1
L_283650:
	addq $0xFFFFFFFFFFFFFE40,%rbp
L_283560:
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_283563
L_283561:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_283556
.p2align 0x4
.long 0x468F
L_283568:
	addq $0xFFFFFFFFFFFFFE40,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_283569
L_283644:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1C0,%rbp
	leaq (L_283645+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_283645
.p2align 0x4
.long 0x469F
L_283645:
	addq $0xFFFFFFFFFFFFFE40,%rbp
L_283569:
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_283572
L_283570:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	jmp L_283565
.p2align 0x4
.long 0x4691
L_283577:
	addq $0xFFFFFFFFFFFFFE40,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_283578
L_283639:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1C0,%rbp
	leaq (L_283640+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_283640
.p2align 0x4
.long 0x469D
L_283640:
	addq $0xFFFFFFFFFFFFFE40,%rbp
L_283578:
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_283581
L_283579:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	jmp L_283574
.p2align 0x4
.long 0x4697
L_283625:
	addq $0xFFFFFFFFFFFFFE40,%rbp
	movq 0x1C0(%rbp),%r15
	movq %r15,0x1B8(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x1C0(%rbp)
	movq 0x1A0(%rbp),%r15
	movq %r15,0x1C8(%rbp)
	addq $0x1C0,%rbp
	leaq (L_283626+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x4698
L_283626:
	addq $0xFFFFFFFFFFFFFE40,%rbp
	movq (globalObjptr+0x7678)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl output_1
.hidden output_1
output_1:
L_283716:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_283797
L_283717:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_495398
L_283718:
	movq 0x18(%rbp),%r15
	movq 0x3D8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x3D0(%r15),%r14
	movq 0x3C8(%r15),%r13
	movq 0x3C0(%r15),%r11
	movq %r11,0x28(%rbp)
	movq 0x3B8(%r15),%r11
	movq %r11,0x30(%rbp)
	movq 0x3B0(%r15),%r11
	movq %r11,0x38(%rbp)
	movq 0x3A8(%r15),%r11
	movq %r11,0x40(%rbp)
	movq 0x3A0(%r15),%r11
	movq %r11,0x48(%rbp)
	movq 0x398(%r15),%r11
	movq %r11,0x50(%rbp)
	movq 0x390(%r15),%r11
	movq %r11,0x58(%rbp)
	movq 0x388(%r15),%r11
	movq %r11,0x60(%rbp)
	movq 0x380(%r15),%r11
	movq %r11,0x68(%rbp)
	movq 0x378(%r15),%r11
	movq %r11,0x70(%rbp)
	movq 0x370(%r15),%r11
	movq %r11,0x78(%rbp)
	movq 0x368(%r15),%r11
	movq %r11,0x80(%rbp)
	movq 0x360(%r15),%r11
	movq %r11,0x88(%rbp)
	movq 0x358(%r15),%r11
	movq %r11,0x90(%rbp)
	movq 0x350(%r15),%r11
	movq %r11,0x98(%rbp)
	movq 0x348(%r15),%r11
	movq %r11,0xA0(%rbp)
	movq 0x340(%r15),%r11
	movq %r11,0xA8(%rbp)
	movq 0x338(%r15),%r11
	movq %r11,0xB0(%rbp)
	movq 0x330(%r15),%r11
	movq %r11,0xB8(%rbp)
	movq 0x328(%r15),%r11
	movq %r11,0xC0(%rbp)
	movq 0x320(%r15),%r11
	movq %r11,0xC8(%rbp)
	movq 0x318(%r15),%r11
	movq %r11,0xD0(%rbp)
	movq 0x310(%r15),%r11
	movq %r11,0xD8(%rbp)
	movq 0x308(%r15),%r11
	movq %r11,0xE0(%rbp)
	movq 0x300(%r15),%r11
	movq %r11,0xE8(%rbp)
	movq 0x2F8(%r15),%r11
	movq %r11,0xF0(%rbp)
	movq 0x2F0(%r15),%r11
	movq %r11,0xF8(%rbp)
	movq 0x2E8(%r15),%r11
	movq %r11,0x100(%rbp)
	movq 0x2E0(%r15),%r11
	movq %r11,0x108(%rbp)
	movq 0x2D8(%r15),%r11
	movq %r11,0x110(%rbp)
	movq 0x2D0(%r15),%r11
	movq %r11,0x118(%rbp)
	movq 0x2C8(%r15),%r11
	movq %r11,0x120(%rbp)
	movq 0x2C0(%r15),%r11
	movq %r11,0x128(%rbp)
	movq 0x2B8(%r15),%r11
	movq %r11,0x130(%rbp)
	movq 0x2B0(%r15),%r11
	movq %r11,0x138(%rbp)
	movq 0x2A8(%r15),%r11
	movq %r11,0x140(%rbp)
	movq 0x2A0(%r15),%r11
	movq %r11,0x148(%rbp)
	movq 0x298(%r15),%r11
	movq %r11,0x150(%rbp)
	movq 0x290(%r15),%r11
	movq %r11,0x158(%rbp)
	movq 0x288(%r15),%r11
	movq %r11,0x160(%rbp)
	movq 0x280(%r15),%r11
	movq %r11,0x168(%rbp)
	movq 0x278(%r15),%r11
	movq %r11,0x170(%rbp)
	movq 0x270(%r15),%r11
	movq %r11,0x178(%rbp)
	movq 0x268(%r15),%r11
	movq %r11,0x180(%rbp)
	movq 0x260(%r15),%r11
	movq %r11,0x188(%rbp)
	movq 0x258(%r15),%r11
	movq %r11,0x190(%rbp)
	movq 0x250(%r15),%r11
	movq %r11,0x198(%rbp)
	movq 0x248(%r15),%r11
	movq %r11,0x1A0(%rbp)
	movq 0x240(%r15),%r11
	movq %r11,0x1A8(%rbp)
	movq 0x238(%r15),%r11
	movq %r11,0x1B0(%rbp)
	movq 0x230(%r15),%r11
	movq %r11,0x1B8(%rbp)
	movq 0x228(%r15),%r11
	movq %r11,0x1C0(%rbp)
	movq 0x220(%r15),%r11
	movq %r11,0x1C8(%rbp)
	movq 0x218(%r15),%r11
	movq %r11,0x1D0(%rbp)
	movq 0x210(%r15),%r11
	movq %r11,0x1D8(%rbp)
	movq 0x208(%r15),%r11
	movq %r11,0x1E0(%rbp)
	movq 0x200(%r15),%r11
	movq %r11,0x1E8(%rbp)
	movq 0x1F8(%r15),%r11
	movq %r11,0x1F0(%rbp)
	movq 0x1F0(%r15),%r11
	movq %r11,0x1F8(%rbp)
	movq 0x1E8(%r15),%r11
	movq %r11,0x200(%rbp)
	movq 0x1E0(%r15),%r11
	movq %r11,0x208(%rbp)
	movq 0x1D8(%r15),%r11
	movq %r11,0x210(%rbp)
	movq 0x1D0(%r15),%r11
	movq %r11,0x218(%rbp)
	movq 0x1C8(%r15),%r11
	movq %r11,0x220(%rbp)
	movq 0x1C0(%r15),%r11
	movq %r11,0x228(%rbp)
	movq 0x1B8(%r15),%r11
	movq %r11,0x230(%rbp)
	movq 0x1B0(%r15),%r11
	movq %r11,0x238(%rbp)
	movq 0x1A8(%r15),%r11
	movq %r11,0x240(%rbp)
	movq 0x1A0(%r15),%r11
	movq %r11,0x248(%rbp)
	movq 0x198(%r15),%r11
	movq %r11,0x250(%rbp)
	movq 0x190(%r15),%r11
	movq %r11,0x258(%rbp)
	movq 0x188(%r15),%r11
	movq %r11,0x260(%rbp)
	movq 0x180(%r15),%r11
	movq %r11,0x268(%rbp)
	movq 0x178(%r15),%r11
	movq %r11,0x270(%rbp)
	movq 0x170(%r15),%r11
	movq %r11,0x278(%rbp)
	movq 0x168(%r15),%r11
	movq %r11,0x280(%rbp)
	movq 0x160(%r15),%r11
	movq %r11,0x288(%rbp)
	movq 0x158(%r15),%r11
	movq %r11,0x290(%rbp)
	movq 0x150(%r15),%r11
	movq %r11,0x298(%rbp)
	movq 0x148(%r15),%r11
	movq %r11,0x2A0(%rbp)
	movq 0x140(%r15),%r11
	movq %r11,0x2A8(%rbp)
	movq 0x138(%r15),%r11
	movq %r11,0x2B0(%rbp)
	movq 0x130(%r15),%r11
	movq %r11,0x2B8(%rbp)
	movq 0x128(%r15),%r11
	movq %r11,0x2C0(%rbp)
	movq 0x120(%r15),%r11
	movq %r11,0x2C8(%rbp)
	movq 0x118(%r15),%r11
	movq %r11,0x2D0(%rbp)
	movq 0x110(%r15),%r11
	movq %r11,0x2D8(%rbp)
	movq 0x108(%r15),%r11
	movq %r11,0x2E0(%rbp)
	movq 0x100(%r15),%r11
	movq %r11,0x2E8(%rbp)
	movq 0xF8(%r15),%r11
	movq %r11,0x2F0(%rbp)
	movq 0xF0(%r15),%r11
	movq %r11,0x2F8(%rbp)
	movq 0xE8(%r15),%r11
	movq %r11,0x300(%rbp)
	movq 0xE0(%r15),%r11
	movq %r11,0x308(%rbp)
	movq 0xD8(%r15),%r11
	movq %r11,0x310(%rbp)
	movq 0xD0(%r15),%r11
	movq %r11,0x318(%rbp)
	movq 0xC8(%r15),%r11
	movq %r11,0x320(%rbp)
	movq 0xC0(%r15),%r11
	movq %r11,0x328(%rbp)
	movq 0xB8(%r15),%r11
	movq %r11,0x330(%rbp)
	movq 0xB0(%r15),%r11
	movq %r11,0x338(%rbp)
	movq 0xA8(%r15),%r11
	movq %r11,0x340(%rbp)
	movq 0xA0(%r15),%r11
	movq %r11,0x348(%rbp)
	movq 0x98(%r15),%r11
	movq %r11,0x350(%rbp)
	movq 0x90(%r15),%r11
	movq %r11,0x358(%rbp)
	movq 0x88(%r15),%r11
	movq %r11,0x360(%rbp)
	movq 0x80(%r15),%r11
	movq %r11,0x368(%rbp)
	movq 0x78(%r15),%r11
	movq %r11,0x370(%rbp)
	movq 0x70(%r15),%r11
	movq %r11,0x378(%rbp)
	movq 0x68(%r15),%r11
	movq %r11,0x380(%rbp)
	movq 0x60(%r15),%r11
	movq %r11,0x388(%rbp)
	movq 0x58(%r15),%r11
	movq %r11,0x390(%rbp)
	movq 0x50(%r15),%r11
	movq %r11,0x398(%rbp)
	movq 0x48(%r15),%r11
	movq %r11,0x3A0(%rbp)
	movq 0x40(%r15),%r11
	movq %r11,0x3A8(%rbp)
	movq 0x38(%r15),%r11
	movq %r11,0x3B0(%rbp)
	movq 0x30(%r15),%r11
	movq %r11,0x3B8(%rbp)
	movq 0x28(%r15),%r11
	movq %r11,0x3C0(%rbp)
	movq 0x20(%r15),%r11
	movq %r11,0x3C8(%rbp)
	movq 0x18(%r15),%r11
	movq %r11,0x3D0(%rbp)
	movq 0x10(%r15),%r11
	movq %r11,0x3D8(%rbp)
	movq 0x8(%r15),%r11
	movq %r11,0x3E0(%rbp)
	movq 0x0(%r15),%r11
	movq %r11,0x3E8(%rbp)
	movq 0x0(%rbp),%r15
	movq 0x30(%r15),%r11
	movq %r11,0x3F0(%rbp)
	movq 0x48(%r15),%r11
	movq %r11,0x3F8(%rbp)
	movq 0x50(%r15),%r11
	movq %r11,0x400(%rbp)
	movl 0x0(%r15),%r11d
	testl %r11d,%r11d
	jnz L_495397
L_283719:
	movl $0x0,0x18(%rbp)
	movq %r13,(localObjptr+0x8)(%rip)
	movq %r14,(localObjptr+0x0)(%rip)
L_283720:
	movq 0x0(%rbp),%r15
	movq 0x18(%r15),%r14
	cmpq $0x1,%r14
	je L_495396
L_283721:
	movq 0x20(%r14),%r15
	movq %r15,0x428(%rbp)
	movq 0x18(%r14),%r15
	movq %r15,0x420(%rbp)
	movq 0x10(%r14),%r15
	movq %r15,0x418(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x410(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x408(%rbp)
modify_0:
	movq (localObjptr+0x8)(%rip),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r13,0x430(%rbp)
	movq $0x71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x438(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x89,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x440(%rbp)
	addq $0x18,%r12
	movq %r15,0x0(%r13)
	movq %r15,0x8(%r13)
	movq $0x56B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x448(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq %r15,0x0(%r13)
	movq 0x410(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x1C(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r14
	je L_495380
L_283722:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_495380:
L_283723:
	cmpl $0x0,0x1C(%rbp)
	jl L_495395
L_283724:
	movl $0x0,0x450(%rbp)
.p2align 0x4,,0x7
loop_3400:
	movq (gcState+0x458)(%rip),%r15
	subq %r12,%r15
	cmpq $0x218,%r15
	jb L_495394
.p2align 0x4,,0x7
L_283725:
	movl 0x450(%rbp),%r13d
	cmpl 0x1C(%rbp),%r13d
	jnl L_495393
L_283762:
	movslq %r13d,%r15
	movq 0x410(%rbp),%r13
	movq 0x0(%r13,%r15,8),%r11
	movl 0x0(%r11),%r10d
	movl %r10d,0x454(%rbp)
	movq 0x8(%r11),%r10
	movq 0x8(%r10),%r9
	movq %r9,0x458(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_495392
L_283764:
	movq %r15,0x0(%r13)
	movq 0x0(%r9),%r13
	cmpq $0x1,%r13
	je L_495391
L_283765:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_283767:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_283768
L_283783:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xCAE,%r13
	jne L_283768
L_283784:
	movq 0x8(%r14),%r13
	movq 0x438(%rbp),%r11
	cmpq %r11,0x0(%r14)
	je L_495386
L_283768:
	incl %ecx
	movl %ecx,0x460(%rbp)
	jo L_495385
L_283770:
	cmpq $0x1,%r15
	je L_495381
L_283771:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_283767
.p2align 0x4
L_495381:
L_283772:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_495384
.p2align 0x4,,0x7
L_283773:
	movl 0x460(%rbp),%ecx
L_283774:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_495383
L_283776:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_283778
L_283780:
	movl %ecx,0x0(%r15)
L_283778:
	movq $0x4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl 0x454(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x195D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x438(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x458(%rbp),%r15
	movq 0x0(%r15),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq %r11,0x0(%r15)
L_283779:
	incl 0x450(%rbp)
	jmp loop_3400
.p2align 0x4
L_495383:
L_283775:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_495384:
L_283781:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x470,%rbp
	leaq (L_283782+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_283782
.p2align 0x4
.long 0x46BC
L_283782:
	addq $0xFFFFFFFFFFFFFB90,%rbp
	jmp L_283773
.p2align 0x4
L_495385:
L_283769:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_495386:
L_283786:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_283775
L_283787:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_495387
L_283790:
	movl %ecx,0x0(%r14)
	movq %r13,%r15
L_283789:
	movl 0x454(%rbp),%r14d
	movl %r14d,0x0(%r15)
	jmp L_283779
.p2align 0x4
L_495387:
L_283788:
	movq %r13,%r15
	jmp L_283789
.p2align 0x4
L_495391:
L_283791:
	xorl %ecx,%ecx
	jmp L_283774
.p2align 0x4
L_495392:
L_283763:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_495393:
L_283726:
	movq $0x56D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x56F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x438(%rbp)
	addq $0x20,%r12
	movq %r15,0x0(%r14)
	movq 0x440(%rbp),%r11
	movq %r11,0x8(%r14)
	movq 0x448(%rbp),%r11
	movq %r11,0x10(%r14)
	movq $0xDF5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x38(%r14)
	addq $0x48,%r12
	movq 0x430(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x428(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x420(%rbp),%r15
	movq %r15,0x10(%r14)
	movq 0x418(%rbp),%r15
	movq %r15,0x18(%r14)
	movq 0x408(%rbp),%r15
	movq %r15,0x20(%r14)
	movq %r11,0x28(%r14)
	movq 0x410(%rbp),%r15
	movq %r15,0x30(%r14)
	movq 0x48(%rbp),%r15
	movq 0x20(%r15),%r11
	movq %r11,0x450(%rbp)
	movq 0x18(%r15),%r11
	movq %r11,0x458(%rbp)
	movq 0x10(%r15),%r11
	movq %r11,0x460(%rbp)
	movq 0x8(%r15),%r11
	movq %r11,0x468(%rbp)
	movq 0x0(%r15),%r11
	movq %r11,0x470(%rbp)
	movq $0x30F3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x478(%rbp)
	movq %r14,0x8(%r15)
	addq $0x50,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x3F0(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x20(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x28(%r15)
	movq 0x400(%rbp),%r14
	movq %r14,0x30(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x38(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x40(%r15)
	movq $0x22B7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x480(%rbp)
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x22B7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x58(%rbp),%r11
	movq %r11,0x0(%r14)
	movq %r15,0x8(%r14)
	movq $0x22B7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x488(%rbp)
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x22B7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x68(%rbp),%r11
	movq %r11,0x0(%r14)
	movq %r15,0x8(%r14)
	movq $0x22B7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x22B7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x78(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x22B7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x80(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x22B7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x88(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x22B7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x90(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x22B7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x98(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x22B7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0xA0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x22B7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0xA8(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x22B7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0xB0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x22B7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0xB8(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x498(%rbp)
	movl $0x0,0x4A0(%rbp)
	movq $0x1,0x4A8(%rbp)
	addq $0x498,%rbp
	leaq (L_283727+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromList_39
.p2align 0x4
L_495394:
L_283792:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	movq $0x218,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x460,%rbp
	leaq (L_283793+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_283793
.p2align 0x4
.long 0x46BD
L_283793:
	addq $0xFFFFFFFFFFFFFBA0,%rbp
	jmp L_283725
.p2align 0x4
L_495395:
L_283794:
	movq (globalObjptr+0x4F8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_495396:
L_283795:
	movq (localObjptr+0x0)(%rip),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x428(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x420(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x418(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x410(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x408(%rbp)
	jmp modify_0
.p2align 0x4
L_495397:
L_283796:
	movq 0x20(%rbp),%r15
	cmpb $0x9,0x0(%r15)
	sete %al
	movzbl %al,%eax
	movl %eax,0x18(%rbp)
	movq %r14,(localObjptr+0x0)(%rip)
	movq %r13,(localObjptr+0x8)(%rip)
	jmp L_283720
.p2align 0x4
L_495398:
L_283797:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_283798+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_283798
.p2align 0x4
.long 0x4AE
L_283798:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	jmp L_283718
.p2align 0x4
.long 0x46AB
L_283727:
	addq $0xFFFFFFFFFFFFFB68,%rbp
	movl 0x498(%rbp),%r15d
	movl %r15d,0x10(%rbp)
	movq 0x4A0(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_283728
L_283760:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x498,%rbp
	leaq (L_283761+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_283761
.p2align 0x4
.long 0x46BB
L_283761:
	addq $0xFFFFFFFFFFFFFB68,%rbp
L_283728:
	movq $0x525,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x10(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xC0(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	movq 0xC8(%rbp),%r15
	movl 0x0(%r15),%r14d
	testl %r14d,%r14d
	jnz L_495400
L_283729:
	movq $0x22B7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x90(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x22B7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0xA8(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x22B7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x98(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x498(%rbp)
	movl $0x0,0x4A0(%rbp)
	movq $0x1,0x4A8(%rbp)
	addq $0x498,%rbp
	leaq (L_283730+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromList_39
.p2align 0x4
L_495400:
L_283759:
	movq $0x22B7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xB0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x22B7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x90(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x22B7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0xA8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x22B7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x98(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x498(%rbp)
	movl $0x0,0x4A0(%rbp)
	movq $0x1,0x4A8(%rbp)
	addq $0x498,%rbp
	leaq (L_283730+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromList_39
.p2align 0x4
.long 0x46AC
L_283730:
	addq $0xFFFFFFFFFFFFFB68,%rbp
	movl 0x498(%rbp),%r15d
	movl %r15d,0x10(%rbp)
	movq 0x4A0(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_283731
L_283757:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x498,%rbp
	leaq (L_283758+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_283758
.p2align 0x4
.long 0x46BA
L_283758:
	addq $0xFFFFFFFFFFFFFB68,%rbp
L_283731:
	movq $0x525,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x10(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xD0(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	movq $0x22B7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq %r15,0x498(%rbp)
	movl $0x0,0x4A0(%rbp)
	movq $0x1,0x4A8(%rbp)
	addq $0x498,%rbp
	leaq (L_283732+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromList_39
.p2align 0x4
.long 0x46AD
L_283732:
	addq $0xFFFFFFFFFFFFFB68,%rbp
	movl 0x498(%rbp),%r15d
	movl %r15d,0x10(%rbp)
	movq 0x4A0(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_283733
L_283755:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x498,%rbp
	leaq (L_283756+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_283756
.p2align 0x4
.long 0x46B9
L_283756:
	addq $0xFFFFFFFFFFFFFB68,%rbp
L_283733:
	movq $0x525,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x10(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xD8(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	movq 0x480(%rbp),%r15
	movq %r15,0x498(%rbp)
	movl $0x0,0x4A0(%rbp)
	movq $0x1,0x4A8(%rbp)
	addq $0x498,%rbp
	leaq (L_283734+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromList_39
.p2align 0x4
.long 0x46AE
L_283734:
	addq $0xFFFFFFFFFFFFFB68,%rbp
	movl 0x498(%rbp),%r15d
	movl %r15d,0x10(%rbp)
	movq 0x4A0(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_283735
L_283753:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x498,%rbp
	leaq (L_283754+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_283754
.p2align 0x4
.long 0x46B8
L_283754:
	addq $0xFFFFFFFFFFFFFB68,%rbp
L_283735:
	movq $0x525,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x10(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xE0(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	movq $0x22B7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xA0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x488(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x22B7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0xB0(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x22B7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0xB8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x488(%rbp)
	movl $0x0,0x490(%rbp)
	movq $0x1,0x498(%rbp)
	addq $0x488,%rbp
	leaq (L_283736+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromList_39
.p2align 0x4
.long 0x46AF
L_283736:
	addq $0xFFFFFFFFFFFFFB78,%rbp
	movl 0x488(%rbp),%r15d
	movl %r15d,0x10(%rbp)
	movq 0x490(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_283737
L_283751:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x488,%rbp
	leaq (L_283752+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_283752
.p2align 0x4
.long 0x46B7
L_283752:
	addq $0xFFFFFFFFFFFFFB78,%rbp
L_283737:
	movq $0x525,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x10(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xE8(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	movq $0x22B7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xB8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq %r15,0x488(%rbp)
	movl $0x0,0x490(%rbp)
	movq $0x1,0x498(%rbp)
	addq $0x488,%rbp
	leaq (L_283738+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromList_39
.p2align 0x4
.long 0x46B0
L_283738:
	addq $0xFFFFFFFFFFFFFB78,%rbp
	movl 0x488(%rbp),%r15d
	movl %r15d,0x10(%rbp)
	movq 0x490(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_283739
L_283749:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x488,%rbp
	leaq (L_283750+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_283750
.p2align 0x4
.long 0x46B6
L_283750:
	addq $0xFFFFFFFFFFFFFB78,%rbp
L_283739:
	movq $0x525,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x10(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xF0(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	movq $0x22B7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq %r15,0x488(%rbp)
	movl $0x0,0x490(%rbp)
	movq $0x1,0x498(%rbp)
	addq $0x488,%rbp
	leaq (L_283740+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromList_39
.p2align 0x4
.long 0x46B1
L_283740:
	addq $0xFFFFFFFFFFFFFB78,%rbp
	movl 0x488(%rbp),%r15d
	movl %r15d,0x10(%rbp)
	movq 0x490(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_283741
L_283747:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x488,%rbp
	leaq (L_283748+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_283748
.p2align 0x4
.long 0x46B5
L_283748:
	addq $0xFFFFFFFFFFFFFB78,%rbp
L_283741:
	movq $0x525,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x10(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xF8(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	movq $0x22B7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x88(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq %r15,0x488(%rbp)
	movl $0x0,0x490(%rbp)
	movq $0x1,0x498(%rbp)
	addq $0x488,%rbp
	leaq (L_283742+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromList_39
.p2align 0x4
.long 0x46B2
L_283742:
	addq $0xFFFFFFFFFFFFFB78,%rbp
	movl 0x488(%rbp),%r15d
	movl %r15d,0x10(%rbp)
	movq 0x490(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq (gcState+0x458)(%rip),%r15
	subq %r12,%r15
	cmpq $0x3B8,%r15
	jnb L_283743
L_283745:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	movq $0x3B8,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x488,%rbp
	leaq (L_283746+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_283746
.p2align 0x4
.long 0x46B4
L_283746:
	addq $0xFFFFFFFFFFFFFB78,%rbp
L_283743:
	movq $0x525,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x10(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x28(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x100(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	movq $0x71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x89,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq %r15,0x8(%r14)
	movq $0x567,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x18,%r12
	movq 0x108(%rbp),%r15
	movq %r15,0x8(%r13)
	movq $0x569,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq $0x71,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x30E9,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x70(%r13)
	movq %r14,0xC0(%r13)
	addq $0x338,%r12
	movl 0x18(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq 0x110(%rbp),%r15
	movq %r15,0x8(%r13)
	movq 0x8(%rbp),%r15
	movq %r15,0x10(%r13)
	movq 0x3F0(%rbp),%r15
	movq %r15,0x18(%r13)
	movq 0x20(%rbp),%r15
	movq %r15,0x20(%r13)
	movq 0x118(%rbp),%r15
	movq %r15,0x28(%r13)
	movq 0x120(%rbp),%r15
	movq %r15,0x30(%r13)
	movq 0x128(%rbp),%r15
	movq %r15,0x38(%r13)
	movq 0x130(%rbp),%r15
	movq %r15,0x40(%r13)
	movq 0x138(%rbp),%r15
	movq %r15,0x48(%r13)
	movq 0x140(%rbp),%r15
	movq %r15,0x50(%r13)
	movq 0x148(%rbp),%r15
	movq %r15,0x58(%r13)
	movq 0x150(%rbp),%r15
	movq %r15,0x60(%r13)
	movq 0x3F8(%rbp),%r15
	movq %r15,0x68(%r13)
	movq 0x158(%rbp),%r15
	movq %r15,0x78(%r13)
	movq 0x160(%rbp),%r15
	movq %r15,0x80(%r13)
	movq 0x168(%rbp),%r15
	movq %r15,0x88(%r13)
	movq 0x170(%rbp),%r15
	movq %r15,0x90(%r13)
	movq 0x178(%rbp),%r15
	movq %r15,0x98(%r13)
	movq 0x180(%rbp),%r15
	movq %r15,0xA0(%r13)
	movq 0x188(%rbp),%r15
	movq %r15,0xA8(%r13)
	movq 0x190(%rbp),%r15
	movq %r15,0xB0(%r13)
	movq 0x440(%rbp),%r15
	movq %r15,0xB8(%r13)
	movq 0x198(%rbp),%r15
	movq %r15,0xC8(%r13)
	movq 0x1A0(%rbp),%r15
	movq %r15,0xD0(%r13)
	movq 0x1A8(%rbp),%r15
	movq %r15,0xD8(%r13)
	movq 0x438(%rbp),%r15
	movq %r15,0xE0(%r13)
	movq 0x1B0(%rbp),%r15
	movq %r15,0xE8(%r13)
	movq 0x1B8(%rbp),%r15
	movq %r15,0xF0(%r13)
	movq 0x1C0(%rbp),%r15
	movq %r15,0xF8(%r13)
	movq 0x1C8(%rbp),%r15
	movq %r15,0x100(%r13)
	movq 0x1D0(%rbp),%r15
	movq %r15,0x108(%r13)
	movq 0x1D8(%rbp),%r15
	movq %r15,0x110(%r13)
	movq 0x1E0(%rbp),%r15
	movq %r15,0x118(%r13)
	movq 0x1E8(%rbp),%r15
	movq %r15,0x120(%r13)
	movq 0x400(%rbp),%r15
	movq %r15,0x128(%r13)
	movq 0x1F0(%rbp),%r15
	movq %r15,0x130(%r13)
	movq 0x1F8(%rbp),%r15
	movq %r15,0x138(%r13)
	movq 0x200(%rbp),%r15
	movq %r15,0x140(%r13)
	movq 0x208(%rbp),%r15
	movq %r15,0x148(%r13)
	movq 0x210(%rbp),%r15
	movq %r15,0x150(%r13)
	movq 0x218(%rbp),%r15
	movq %r15,0x158(%r13)
	movq 0x220(%rbp),%r15
	movq %r15,0x160(%r13)
	movq 0x228(%rbp),%r15
	movq %r15,0x168(%r13)
	movq 0x230(%rbp),%r15
	movq %r15,0x170(%r13)
	movq 0x238(%rbp),%r15
	movq %r15,0x178(%r13)
	movq 0x240(%rbp),%r15
	movq %r15,0x180(%r13)
	movq 0x248(%rbp),%r15
	movq %r15,0x188(%r13)
	movq 0x250(%rbp),%r15
	movq %r15,0x190(%r13)
	movq 0x258(%rbp),%r15
	movq %r15,0x198(%r13)
	movq 0x260(%rbp),%r15
	movq %r15,0x1A0(%r13)
	movq 0x268(%rbp),%r15
	movq %r15,0x1A8(%r13)
	movq 0x270(%rbp),%r15
	movq %r15,0x1B0(%r13)
	movq 0x278(%rbp),%r15
	movq %r15,0x1B8(%r13)
	movq 0x280(%rbp),%r15
	movq %r15,0x1C0(%r13)
	movq 0x288(%rbp),%r15
	movq %r15,0x1C8(%r13)
	movq 0x290(%rbp),%r15
	movq %r15,0x1D0(%r13)
	movq 0x298(%rbp),%r15
	movq %r15,0x1D8(%r13)
	movq 0x2A0(%rbp),%r15
	movq %r15,0x1E0(%r13)
	movq 0x2A8(%rbp),%r15
	movq %r15,0x1E8(%r13)
	movq 0x2B0(%rbp),%r15
	movq %r15,0x1F0(%r13)
	movq 0x2B8(%rbp),%r15
	movq %r15,0x1F8(%r13)
	movq 0x2C0(%rbp),%r15
	movq %r15,0x200(%r13)
	movq 0x2C8(%rbp),%r15
	movq %r15,0x208(%r13)
	movq 0x2D0(%rbp),%r15
	movq %r15,0x210(%r13)
	movq 0x2D8(%rbp),%r15
	movq %r15,0x218(%r13)
	movq 0x2E0(%rbp),%r15
	movq %r15,0x220(%r13)
	movq 0x2E8(%rbp),%r15
	movq %r15,0x228(%r13)
	movq 0x2F0(%rbp),%r15
	movq %r15,0x230(%r13)
	movq 0x2F8(%rbp),%r15
	movq %r15,0x238(%r13)
	movq 0x300(%rbp),%r15
	movq %r15,0x240(%r13)
	movq 0x308(%rbp),%r15
	movq %r15,0x248(%r13)
	movq 0x310(%rbp),%r15
	movq %r15,0x250(%r13)
	movq 0x318(%rbp),%r15
	movq %r15,0x258(%r13)
	movq 0x320(%rbp),%r15
	movq %r15,0x260(%r13)
	movq 0x328(%rbp),%r15
	movq %r15,0x268(%r13)
	movq 0x330(%rbp),%r15
	movq %r15,0x270(%r13)
	movq 0x338(%rbp),%r15
	movq %r15,0x278(%r13)
	movq 0x340(%rbp),%r15
	movq %r15,0x280(%r13)
	movq 0x348(%rbp),%r15
	movq %r15,0x288(%r13)
	movq 0x350(%rbp),%r15
	movq %r15,0x290(%r13)
	movq 0x358(%rbp),%r15
	movq %r15,0x298(%r13)
	movq 0x360(%rbp),%r15
	movq %r15,0x2A0(%r13)
	movq 0x368(%rbp),%r15
	movq %r15,0x2A8(%r13)
	movq 0x370(%rbp),%r15
	movq %r15,0x2B0(%r13)
	movq 0x378(%rbp),%r15
	movq %r15,0x2B8(%r13)
	movq 0x380(%rbp),%r15
	movq %r15,0x2C0(%r13)
	movq 0x388(%rbp),%r15
	movq %r15,0x2C8(%r13)
	movq 0x390(%rbp),%r15
	movq %r15,0x2D0(%r13)
	movq 0x398(%rbp),%r15
	movq %r15,0x2D8(%r13)
	movq 0x3A0(%rbp),%r15
	movq %r15,0x2E0(%r13)
	movq 0x3A8(%rbp),%r15
	movq %r15,0x2E8(%r13)
	movq 0x3B0(%rbp),%r15
	movq %r15,0x2F0(%r13)
	movq 0x3B8(%rbp),%r15
	movq %r15,0x2F8(%r13)
	movq 0x3C0(%rbp),%r15
	movq %r15,0x300(%r13)
	movq 0x3C8(%rbp),%r15
	movq %r15,0x308(%r13)
	movq 0x3D0(%rbp),%r15
	movq %r15,0x310(%r13)
	movq 0x3D8(%rbp),%r15
	movq %r15,0x318(%r13)
	movq 0x3E0(%rbp),%r15
	movq %r15,0x320(%r13)
	movq 0x3E8(%rbp),%r15
	movq %r15,0x328(%r13)
	movq %r13,0x4B8(%rbp)
	movq (globalObjptr+0x61A8)(%rip),%r15
	movq %r15,0x488(%rbp)
	movq 0x450(%rbp),%r15
	movq %r15,0x490(%rbp)
	movq 0x458(%rbp),%r15
	movq %r15,0x498(%rbp)
	movq 0x460(%rbp),%r15
	movq %r15,0x4A0(%rbp)
	movq 0x468(%rbp),%r15
	movq %r15,0x4A8(%rbp)
	movq 0x470(%rbp),%r15
	movq %r15,0x4B0(%rbp)
	addq $0x488,%rbp
	leaq (L_283744+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1212
.p2align 0x4
.long 0x46B3
L_283744:
	addq $0xFFFFFFFFFFFFFB78,%rbp
	movq (globalObjptr+0x61A0)(%rip),%r15
	movq %r15,0x0(%rbp)
	movq 0x450(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x458(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x460(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x468(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x470(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x478(%rbp),%r15
	movq %r15,0x30(%rbp)
	jmp x_1212
.text
.p2align 0x4
.globl fromList_39
.hidden fromList_39
fromList_39:
L_283799:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_283800
L_283880:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_283881+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_283881
.p2align 0x4
.long 0x65A
L_283881:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_283800:
	movq 0x0(%rbp),%r15
	cmpq $0x1,%r15
	je L_495441
L_283801:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x18(%rbp)
	movl 0x8(%rbp),%r15d
	movl %r15d,0x10(%rbp)
	movq %r14,0x8(%rbp)
.p2align 0x4,,0x7
L_283802:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_495440
.p2align 0x4,,0x7
L_283803:
	movq 0x18(%rbp),%r13
	cmpq $0x1,%r13
	je L_283871
L_283804:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
.p2align 0x4,,0x7
L_283805:
	movl 0x0(%r15),%r13d
	movl %r13d,0x14(%rbp)
	movq 0x8(%rbp),%r11
	movl 0x0(%r11),%r10d
	movl %r10d,0x20(%rbp)
	cmpl %r10d,%r13d
	jnl L_495434
L_283867:
	cmpq $0x1,%r14
	je L_495409
L_283868:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_283805
.p2align 0x4
L_495409:
L_283869:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_495433
.p2align 0x4,,0x7
L_283871:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_495432
L_283872:
	movl $0x0,0x20(%rbp)
	movq $0x1,0x28(%rbp)
	movl 0x10(%rbp),%r14d
	movl %r14d,0x24(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x30(%rbp)
	movq 0x0(%r15),%r15
	movq %r15,0x18(%rbp)
L_283813:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_495431
.p2align 0x4,,0x7
L_283814:
	movq 0x18(%rbp),%r15
	movl 0x0(%r15),%r14d
	movq 0x8(%rbp),%r15
	movl 0x0(%r15),%r13d
	cmpl %r13d,%r14d
	jl L_495422
L_283815:
	cmpl %r14d,%r13d
	jl L_495415
L_283816:
	movq 0x28(%rbp),%r15
	cmpq $0x1,%r15
	je L_495414
L_283817:
	movq 0x8(%r15),%r14
	movq %r14,0x8(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x18(%rbp)
L_283818:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_495413
.p2align 0x4,,0x7
L_283819:
	movq $0x22B7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_495410
L_283820:
	movq %r15,0x18(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x10(%rbp)
	jmp L_283818
.p2align 0x4
L_495410:
L_283822:
	movl 0x20(%rbp),%r14d
	addl 0x24(%rbp),%r14d
	jo L_495412
L_283824:
	movq 0x0(%rbp),%r13
	cmpq $0x1,%r13
	je L_495411
L_283825:
	movl %r14d,0x10(%rbp)
	movq %r15,0x18(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_283802
.p2align 0x4
L_495411:
L_283826:
	movl %r14d,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_495412:
L_283823:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_495413:
L_283827:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_283828+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_283828
.p2align 0x4
.long 0x4DF
L_283828:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	jmp L_283819
.p2align 0x4
L_495414:
L_283829:
	movq 0x30(%rbp),%r14
	xchgq %r14,%r15
	jmp L_283822
.p2align 0x4
L_495415:
L_283830:
	movq $0x22B7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_283836
L_283831:
	movq %r15,0x18(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x8(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x10(%rbp)
L_283832:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_495420
.p2align 0x4,,0x7
L_283833:
	movq $0x22B7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_495416
L_283834:
	movq %r15,0x18(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x10(%rbp)
	jmp L_283832
.p2align 0x4
L_495416:
L_283836:
	movl 0x20(%rbp),%r14d
	incl %r14d
	jo L_283823
L_283837:
	addl 0x24(%rbp),%r14d
	jo L_283823
L_283838:
	movq 0x0(%rbp),%r13
	cmpq $0x1,%r13
	je L_495417
L_283839:
	movl %r14d,0x10(%rbp)
	movq %r15,0x18(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_283802
.p2align 0x4
L_495417:
L_283840:
	movl %r14d,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_495420:
L_283841:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_283842+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_283842
.p2align 0x4
.long 0x4DF
L_283842:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	jmp L_283833
.p2align 0x4
L_495422:
L_283844:
	movl 0x24(%rbp),%r15d
	decl %r15d
	jo L_283823
L_283845:
	movq $0x22B7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x28(%rbp),%r13
	movq %r13,0x8(%r14)
	movl 0x20(%rbp),%r13d
	incl %r13d
	jo L_283823
L_283846:
	movq 0x10(%rbp),%r11
	cmpq $0x1,%r11
	je L_495423
L_283847:
	movl %r13d,0x20(%rbp)
	movq %r14,0x28(%rbp)
	movl %r15d,0x24(%rbp)
	movq 0x0(%r11),%r15
	movq %r15,0x18(%rbp)
	movq %r11,0x30(%rbp)
	movq 0x8(%r11),%r11
	movq %r11,0x10(%rbp)
	jmp L_283813
.p2align 0x4
L_495423:
L_283848:
	movl %r13d,0x10(%rbp)
	movq %r14,%r15
L_283849:
	movq $0x22B7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	cmpq $0x1,%r15
	je L_495428
L_283850:
	movq %r14,0x20(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x8(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
L_283851:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_495427
.p2align 0x4,,0x7
L_283852:
	movq $0x22B7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x8(%rbp),%r14
	cmpq $0x1,%r14
	je L_495424
L_283853:
	movq %r15,0x20(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x18(%rbp)
	jmp L_283851
.p2align 0x4
L_495424:
L_283855:
	movl 0x10(%rbp),%r14d
	incl %r14d
	jo L_283823
L_283856:
	movq 0x0(%rbp),%r13
	cmpq $0x1,%r13
	je L_495425
L_283857:
	movl %r14d,0x10(%rbp)
	movq %r15,0x18(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_283802
.p2align 0x4
L_495425:
L_283858:
	movl %r14d,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_495427:
L_283859:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_283860+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_283860
.p2align 0x4
.long 0x561
L_283860:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	jmp L_283852
.p2align 0x4
L_495428:
L_283861:
	movq %r14,%r15
	jmp L_283855
.p2align 0x4
L_495431:
L_283862:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_283863+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_283863
.p2align 0x4
.long 0x645
L_283863:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_283814
.p2align 0x4
L_495432:
L_283873:
	movl $0x0,0x10(%rbp)
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_283849
.p2align 0x4
L_495433:
L_283874:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_283875+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_283875
.p2align 0x4
.long 0x524
L_283875:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	jmp L_283871
.p2align 0x4
L_495434:
L_283806:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_495438
.p2align 0x4,,0x7
L_283807:
	movl 0x14(%rbp),%r15d
	cmpl %r15d,0x20(%rbp)
	jl L_495436
L_283808:
	movq 0x0(%rbp),%r15
	cmpq $0x1,%r15
	je L_495435
L_283809:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	jmp L_283802
.p2align 0x4
L_495435:
L_283810:
	movl 0x10(%rbp),%r14d
	movl %r14d,0x0(%rbp)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_495436:
L_283811:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_495437
L_283812:
	movl $0x0,0x20(%rbp)
	movq $0x1,0x28(%rbp)
	movl 0x10(%rbp),%r14d
	movl %r14d,0x24(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x30(%rbp)
	movq 0x0(%r15),%r15
	movq %r15,0x18(%rbp)
	jmp L_283813
.p2align 0x4
L_495437:
L_283864:
	movl $0x0,0x10(%rbp)
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_283849
.p2align 0x4
L_495438:
L_283865:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_283866+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_283866
.p2align 0x4
.long 0x5E1
L_283866:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	jmp L_283807
.p2align 0x4
L_495440:
L_283877:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_283878+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_283878
.p2align 0x4
.long 0x524
L_283878:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	jmp L_283803
.p2align 0x4
L_495441:
L_283879:
	movl 0x8(%rbp),%r14d
	movl %r14d,0x0(%rbp)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl output_3
.hidden output_3
output_3:
L_283882:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_283980
L_283883:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_495464
L_283884:
	movq 0x18(%rbp),%r15
	movq 0x3F0(%r15),%r14
	movq 0x3E8(%r15),%r13
	movq 0x3E0(%r15),%r11
	movq 0x3D8(%r15),%r10
	movq 0x3D0(%r15),%r9
	movq %r9,0x20(%rbp)
	movq 0x3C8(%r15),%r9
	movq %r9,0x28(%rbp)
	movq 0x3C0(%r15),%r9
	movq %r9,0x30(%rbp)
	movq 0x3B8(%r15),%r9
	movq %r9,0x38(%rbp)
	movq 0x3B0(%r15),%r9
	movq %r9,0x40(%rbp)
	movq 0x3A8(%r15),%r9
	movq %r9,0x48(%rbp)
	movq 0x3A0(%r15),%r9
	movq %r9,0x50(%rbp)
	movq 0x398(%r15),%r9
	movq %r9,0x58(%rbp)
	movq 0x390(%r15),%r9
	movq %r9,0x60(%rbp)
	movq 0x388(%r15),%r9
	movq %r9,0x68(%rbp)
	movq 0x380(%r15),%r9
	movq %r9,0x70(%rbp)
	movq 0x378(%r15),%r9
	movq %r9,0x78(%rbp)
	movq 0x370(%r15),%r9
	movq %r9,0x80(%rbp)
	movq 0x368(%r15),%r9
	movq %r9,0x88(%rbp)
	movq 0x360(%r15),%r9
	movq %r9,0x90(%rbp)
	movq 0x358(%r15),%r9
	movq %r9,0x98(%rbp)
	movq 0x350(%r15),%r9
	movq %r9,0xA0(%rbp)
	movq 0x348(%r15),%r9
	movq %r9,0xA8(%rbp)
	movq 0x340(%r15),%r9
	movq %r9,0xB0(%rbp)
	movq 0x338(%r15),%r9
	movq %r9,0xB8(%rbp)
	movq 0x330(%r15),%r9
	movq %r9,0xC0(%rbp)
	movq 0x328(%r15),%r9
	movq %r9,0xC8(%rbp)
	movq 0x320(%r15),%r9
	movq %r9,0xD0(%rbp)
	movq 0x318(%r15),%r9
	movq %r9,0xD8(%rbp)
	movq 0x310(%r15),%r9
	movq %r9,0xE0(%rbp)
	movq 0x308(%r15),%r9
	movq %r9,0xE8(%rbp)
	movq 0x300(%r15),%r9
	movq %r9,0xF0(%rbp)
	movq 0x2F8(%r15),%r9
	movq %r9,0xF8(%rbp)
	movq 0x2F0(%r15),%r9
	movq %r9,0x100(%rbp)
	movq 0x2E8(%r15),%r9
	movq %r9,0x108(%rbp)
	movq 0x2E0(%r15),%r9
	movq %r9,0x110(%rbp)
	movq 0x2D8(%r15),%r9
	movq %r9,0x118(%rbp)
	movq 0x2D0(%r15),%r9
	movq %r9,0x120(%rbp)
	movq 0x2C8(%r15),%r9
	movq %r9,0x128(%rbp)
	movq 0x2C0(%r15),%r9
	movq %r9,0x130(%rbp)
	movq 0x2B8(%r15),%r9
	movq %r9,0x138(%rbp)
	movq 0x2B0(%r15),%r9
	movq %r9,0x140(%rbp)
	movq 0x2A8(%r15),%r9
	movq %r9,0x148(%rbp)
	movq 0x2A0(%r15),%r9
	movq %r9,0x150(%rbp)
	movq 0x298(%r15),%r9
	movq %r9,0x158(%rbp)
	movq 0x290(%r15),%r9
	movq %r9,0x160(%rbp)
	movq 0x288(%r15),%r9
	movq %r9,0x168(%rbp)
	movq 0x280(%r15),%r9
	movq %r9,0x170(%rbp)
	movq 0x278(%r15),%r9
	movq %r9,0x178(%rbp)
	movq 0x270(%r15),%r9
	movq %r9,0x180(%rbp)
	movq 0x268(%r15),%r9
	movq %r9,0x188(%rbp)
	movq 0x260(%r15),%r9
	movq %r9,0x190(%rbp)
	movq 0x258(%r15),%r9
	movq %r9,0x198(%rbp)
	movq 0x250(%r15),%r9
	movq %r9,0x1A0(%rbp)
	movq 0x248(%r15),%r9
	movq %r9,0x1A8(%rbp)
	movq 0x240(%r15),%r9
	movq %r9,0x1B0(%rbp)
	movq 0x238(%r15),%r9
	movq %r9,0x1B8(%rbp)
	movq 0x230(%r15),%r9
	movq %r9,0x1C0(%rbp)
	movq 0x228(%r15),%r9
	movq %r9,0x1C8(%rbp)
	movq 0x220(%r15),%r9
	movq %r9,0x1D0(%rbp)
	movq 0x218(%r15),%r9
	movq %r9,0x1D8(%rbp)
	movq 0x210(%r15),%r9
	movq %r9,0x1E0(%rbp)
	movq 0x208(%r15),%r9
	movq %r9,0x1E8(%rbp)
	movq 0x200(%r15),%r9
	movq %r9,0x1F0(%rbp)
	movq 0x1F8(%r15),%r9
	movq %r9,0x1F8(%rbp)
	movq 0x1F0(%r15),%r9
	movq %r9,0x200(%rbp)
	movq 0x1E8(%r15),%r9
	movq %r9,0x208(%rbp)
	movq 0x1E0(%r15),%r9
	movq %r9,0x210(%rbp)
	movq 0x1D8(%r15),%r9
	movq %r9,0x218(%rbp)
	movq 0x1D0(%r15),%r9
	movq %r9,0x220(%rbp)
	movq 0x1C8(%r15),%r9
	movq %r9,0x228(%rbp)
	movq 0x1C0(%r15),%r9
	movq %r9,0x230(%rbp)
	movq 0x1B8(%r15),%r9
	movq %r9,0x238(%rbp)
	movq 0x1B0(%r15),%r9
	movq %r9,0x240(%rbp)
	movq 0x1A8(%r15),%r9
	movq %r9,0x248(%rbp)
	movq 0x1A0(%r15),%r9
	movq %r9,0x250(%rbp)
	movq 0x198(%r15),%r9
	movq %r9,0x258(%rbp)
	movq 0x190(%r15),%r9
	movq %r9,0x260(%rbp)
	movq 0x188(%r15),%r9
	movq %r9,0x268(%rbp)
	movq 0x180(%r15),%r9
	movq %r9,0x270(%rbp)
	movq 0x178(%r15),%r9
	movq %r9,0x278(%rbp)
	movq 0x170(%r15),%r9
	movq %r9,0x280(%rbp)
	movq 0x168(%r15),%r9
	movq %r9,0x288(%rbp)
	movq 0x160(%r15),%r9
	movq %r9,0x290(%rbp)
	movq 0x158(%r15),%r9
	movq %r9,0x298(%rbp)
	movq 0x150(%r15),%r9
	movq %r9,0x2A0(%rbp)
	movq 0x148(%r15),%r9
	movq %r9,0x2A8(%rbp)
	movq 0x140(%r15),%r9
	movq %r9,0x2B0(%rbp)
	movq 0x138(%r15),%r9
	movq %r9,0x2B8(%rbp)
	movq 0x130(%r15),%r9
	movq %r9,0x2C0(%rbp)
	movq 0x128(%r15),%r9
	movq %r9,0x2C8(%rbp)
	movq 0x120(%r15),%r9
	movq %r9,0x2D0(%rbp)
	movq 0x118(%r15),%r9
	movq %r9,0x2D8(%rbp)
	movq 0x110(%r15),%r9
	movq %r9,0x2E0(%rbp)
	movq 0x108(%r15),%r9
	movq %r9,0x2E8(%rbp)
	movq 0x100(%r15),%r9
	movq %r9,0x2F0(%rbp)
	movq 0xF8(%r15),%r9
	movq %r9,0x2F8(%rbp)
	movq 0xF0(%r15),%r9
	movq %r9,0x300(%rbp)
	movq 0xE8(%r15),%r9
	movq %r9,0x308(%rbp)
	movq 0xE0(%r15),%r9
	movq %r9,0x310(%rbp)
	movq 0xD8(%r15),%r9
	movq %r9,0x318(%rbp)
	movq 0xD0(%r15),%r9
	movq %r9,0x320(%rbp)
	movq 0xC8(%r15),%r9
	movq %r9,0x328(%rbp)
	movq 0xC0(%r15),%r9
	movq %r9,0x330(%rbp)
	movq 0xB8(%r15),%r9
	movq %r9,0x338(%rbp)
	movq 0xB0(%r15),%r9
	movq %r9,0x340(%rbp)
	movq 0xA8(%r15),%r9
	movq %r9,0x348(%rbp)
	movq 0xA0(%r15),%r9
	movq %r9,0x350(%rbp)
	movq 0x98(%r15),%r9
	movq %r9,0x358(%rbp)
	movq 0x90(%r15),%r9
	movq %r9,0x360(%rbp)
	movq 0x88(%r15),%r9
	movq %r9,0x368(%rbp)
	movq 0x80(%r15),%r9
	movq %r9,0x370(%rbp)
	movq 0x78(%r15),%r9
	movq %r9,0x378(%rbp)
	movq 0x70(%r15),%r9
	movq %r9,0x380(%rbp)
	movq 0x68(%r15),%r9
	movq %r9,0x388(%rbp)
	movq 0x60(%r15),%r9
	movq %r9,0x390(%rbp)
	movq 0x58(%r15),%r9
	movq %r9,0x398(%rbp)
	movq 0x50(%r15),%r9
	movq %r9,0x3A0(%rbp)
	movq 0x48(%r15),%r9
	movq %r9,0x3A8(%rbp)
	movq 0x40(%r15),%r9
	movq %r9,0x3B0(%rbp)
	movq 0x38(%r15),%r9
	movq %r9,0x3B8(%rbp)
	movq 0x30(%r15),%r9
	movq %r9,0x3C0(%rbp)
	movq 0x28(%r15),%r9
	movq %r9,0x3C8(%rbp)
	movq 0x20(%r15),%r9
	movq %r9,0x3D0(%rbp)
	movq 0x18(%r15),%r9
	movq %r9,0x3D8(%rbp)
	movq 0x10(%r15),%r9
	movq %r9,0x3E0(%rbp)
	movq 0x8(%r15),%r9
	movq %r9,0x3E8(%rbp)
	movq 0x0(%r15),%r9
	movq %r9,0x3F0(%rbp)
	movq 0x0(%rbp),%r15
	movq 0x30(%r15),%r9
	movq %r9,0x3F8(%rbp)
	movq 0x48(%r15),%r9
	movq %r9,0x400(%rbp)
	movq 0x50(%r15),%r9
	movq %r9,0x408(%rbp)
	movl 0x0(%r15),%r9d
	testl %r9d,%r9d
	jz L_495463
L_283979:
	cmpb $0x9,0x0(%r14)
	sete %al
	movzbl %al,%eax
	movl %eax,0x18(%rbp)
	movq %r10,(localObjptr+0x18)(%rip)
	movq %r13,(localObjptr+0x8)(%rip)
	movq %r11,(localObjptr+0x10)(%rip)
L_283886:
	movq (localObjptr+0x8)(%rip),%r15
	movq 0x18(%r15),%r14
	movq 0x10(%r15),%r13
	movq 0x0(%r15),%r11
	movl 0x0(%r11),%r10d
	movq 0x8(%r15),%r11
	cmpb $0x8,0x0(%r11)
	je L_495461
L_283887:
	testl %r10d,%r10d
	jz L_495460
L_283975:
	movq $0x30F7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	movq %r15,0x410(%rbp)
	addq $0x18,%r12
	movl (globalWord32+0x284)(%rip),%r15d
	movl %r15d,0x1C(%rbp)
L_283889:
	movq 0x0(%rbp),%r15
	movq 0x18(%r15),%r14
	cmpq $0x1,%r14
	je L_495459
L_283890:
	movq 0x20(%r14),%r15
	movq %r15,0x438(%rbp)
	movq 0x18(%r14),%r15
	movq %r15,0x430(%rbp)
	movq 0x10(%r14),%r15
	movq %r15,0x428(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x420(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x418(%rbp)
modify_1:
	movq (localObjptr+0x18)(%rip),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r13,0x440(%rbp)
	movq $0x71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x448(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x89,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x450(%rbp)
	addq $0x18,%r12
	movq %r15,0x0(%r13)
	movq %r15,0x8(%r13)
	movq $0x56B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x458(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq %r15,0x0(%r13)
	movq 0x420(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x460(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	je L_495443
L_283891:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_495443:
L_283892:
	cmpl $0x0,0x460(%rbp)
	jl L_495458
L_283893:
	movl $0x0,0x464(%rbp)
.p2align 0x4,,0x7
loop_3401:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_495457
.p2align 0x4,,0x7
L_283894:
	movl 0x464(%rbp),%r13d
	cmpl 0x460(%rbp),%r13d
	jnl L_495456
L_283941:
	movslq %r13d,%r15
	movq 0x420(%rbp),%r13
	movq 0x0(%r13,%r15,8),%r11
	movl 0x0(%r11),%r10d
	movl %r10d,0x468(%rbp)
	movq 0x8(%r11),%r10
	movq 0x8(%r10),%r9
	movq %r9,0x470(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_495455
L_283943:
	movq %r15,0x0(%r13)
	movq 0x0(%r9),%r13
	cmpq $0x1,%r13
	je L_495454
L_283944:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_283946:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_283947
L_283962:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xCAE,%r13
	jne L_283947
L_283963:
	movq 0x8(%r14),%r13
	movq 0x448(%rbp),%r11
	cmpq %r11,0x0(%r14)
	je L_495449
L_283947:
	incl %ecx
	movl %ecx,0x46C(%rbp)
	jo L_495448
L_283949:
	cmpq $0x1,%r15
	je L_495444
L_283950:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_283946
.p2align 0x4
L_495444:
L_283951:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_495447
.p2align 0x4,,0x7
L_283952:
	movl 0x46C(%rbp),%ecx
L_283953:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_495446
L_283955:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_283957
L_283959:
	movl %ecx,0x0(%r15)
L_283957:
	movq $0x4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl 0x468(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x195D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x448(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x470(%rbp),%r15
	movq 0x0(%r15),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq %r11,0x0(%r15)
L_283958:
	incl 0x464(%rbp)
	jmp loop_3401
.p2align 0x4
L_495446:
L_283954:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_495447:
L_283960:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x480,%rbp
	leaq (L_283961+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_283961
.p2align 0x4
.long 0x46C9
L_283961:
	addq $0xFFFFFFFFFFFFFB80,%rbp
	jmp L_283952
.p2align 0x4
L_495448:
L_283948:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_495449:
L_283965:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_283954
L_283966:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_495450
L_283969:
	movl %ecx,0x0(%r14)
	movq %r13,%r15
L_283968:
	movl 0x468(%rbp),%r14d
	movl %r14d,0x0(%r15)
	jmp L_283958
.p2align 0x4
L_495450:
L_283967:
	movq %r13,%r15
	jmp L_283968
.p2align 0x4
L_495454:
L_283970:
	xorl %ecx,%ecx
	jmp L_283953
.p2align 0x4
L_495455:
L_283942:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_495456:
L_283895:
	movq $0x56D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x56F,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,0x448(%rbp)
	addq $0x20,%r12
	movq %r15,0x0(%r11)
	movq 0x450(%rbp),%r10
	movq %r10,0x8(%r11)
	movq 0x458(%rbp),%r10
	movq %r10,0x10(%r11)
	movq $0xDF5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x38(%r14)
	addq $0x48,%r12
	movq 0x440(%rbp),%r11
	movq %r11,0x0(%r14)
	movq 0x438(%rbp),%r11
	movq %r11,0x8(%r14)
	movq 0x430(%rbp),%r11
	movq %r11,0x10(%r14)
	movq 0x428(%rbp),%r11
	movq %r11,0x18(%r14)
	movq 0x418(%rbp),%r11
	movq %r11,0x20(%r14)
	movq %r10,0x28(%r14)
	movq 0x420(%rbp),%r11
	movq %r11,0x30(%r14)
	movq 0x40(%rbp),%r11
	movq 0x20(%r11),%r10
	movq %r10,0x460(%rbp)
	movq 0x18(%r11),%r10
	movq %r10,0x468(%rbp)
	movq 0x10(%r11),%r10
	movq %r10,0x470(%rbp)
	movq 0x8(%r11),%r10
	movq %r10,0x478(%rbp)
	movq 0x0(%r11),%r10
	movq %r10,0x480(%rbp)
	movq $0x30F1,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,0x488(%rbp)
	movq %r14,0x8(%r11)
	addq $0x50,%r12
	movq 0x0(%rbp),%r10
	movq %r10,0x0(%r11)
	movq 0x10(%rbp),%r15
	movq %r15,0x10(%r11)
	movq 0x3F8(%rbp),%r10
	movq %r10,0x18(%r11)
	movq 0x20(%rbp),%r10
	movq %r10,0x20(%r11)
	movq 0x28(%rbp),%r10
	movq %r10,0x28(%r11)
	movq 0x408(%rbp),%r10
	movq %r10,0x30(%r11)
	movq 0x30(%rbp),%r10
	movq %r10,0x38(%r11)
	movq 0x38(%rbp),%r10
	movq %r10,0x40(%r11)
	movq $0x21CB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r11
	movq %r11,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x21CB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x50(%rbp),%r11
	movq %r11,0x0(%r14)
	movq $0x21CB,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,0x490(%rbp)
	movq %r14,0x8(%r11)
	addq $0x18,%r12
	movq 0x58(%rbp),%r10
	movq %r10,0x0(%r11)
	movq $0x21CB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x60(%rbp),%r10
	movq %r10,0x0(%r15)
	movq %r11,0x8(%r15)
	movq $0x21CB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x68(%rbp),%r11
	movq %r11,0x0(%r14)
	movq $0x21CB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x70(%rbp),%r11
	movq %r11,0x0(%r15)
	movq $0x21CB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x78(%rbp),%r11
	movq %r11,0x0(%r14)
	movq $0x21CB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x80(%rbp),%r11
	movq %r11,0x0(%r15)
	movq $0x21CB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x88(%rbp),%r11
	movq %r11,0x0(%r14)
	movq $0x21CB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x90(%rbp),%r11
	movq %r11,0x0(%r15)
	movq $0x21CB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x98(%rbp),%r11
	movq %r11,0x0(%r14)
	movq $0x21CB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0xA0(%rbp),%r11
	movq %r11,0x0(%r15)
	movq %r15,0x10(%rbp)
	movq 0xA8(%rbp),%r14
	movq (globalObjptr+0x5540)(%rip),%r15
L_283896:
	movq %r14,0x4A0(%rbp)
	movq %r15,0x4A8(%rbp)
	addq $0x4A0,%rbp
	leaq (L_283897+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp add_3
.p2align 0x4
L_495457:
L_283971:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x470,%rbp
	leaq (L_283972+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_283972
.p2align 0x4
.long 0x46CA
L_283972:
	addq $0xFFFFFFFFFFFFFB90,%rbp
	jmp L_283894
.p2align 0x4
L_495458:
L_283973:
	movq (globalObjptr+0x4F8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_495459:
L_283974:
	movq (localObjptr+0x10)(%rip),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x438(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x430(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x428(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x420(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x418(%rbp)
	jmp modify_1
.p2align 0x4
L_495460:
L_283888:
	movl $0x0,0x1C(%rbp)
	movq $0x1,0x410(%rbp)
	jmp L_283889
.p2align 0x4
L_495461:
L_283976:
	testl %r10d,%r10d
	jz L_495462
L_283978:
	movq $0x30F9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r13,0x8(%r15)
	movq %r15,0x410(%rbp)
	addq $0x18,%r12
	movl (globalWord32+0x140)(%rip),%r15d
	movl %r15d,0x1C(%rbp)
	jmp L_283889
.p2align 0x4
L_495462:
L_283977:
	movl $0x0,0x1C(%rbp)
	movq $0x1,0x410(%rbp)
	jmp L_283889
.p2align 0x4
L_495463:
L_283885:
	movl $0x0,0x18(%rbp)
	movq %r11,(localObjptr+0x10)(%rip)
	movq %r13,(localObjptr+0x8)(%rip)
	movq %r10,(localObjptr+0x18)(%rip)
	jmp L_283886
.p2align 0x4
L_495464:
L_283980:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_283981+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_283981
.p2align 0x4
.long 0x4AE
L_283981:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	jmp L_283884
.p2align 0x4
.long 0x46BE
L_283897:
	addq $0xFFFFFFFFFFFFFB60,%rbp
	movq 0x4A0(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_283898
L_283939:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x4A0,%rbp
	leaq (L_283940+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_283940
.p2align 0x4
.long 0x46C8
L_283940:
	addq $0xFFFFFFFFFFFFFB60,%rbp
L_283898:
	movq 0x10(%rbp),%r13
	cmpq $0x1,%r13
	je L_495466
L_283899:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movq %r13,0x10(%rbp)
	movq 0x20(%rbp),%r15
	jmp L_283896
.p2align 0x4
L_495466:
L_283900:
	movq 0xB0(%rbp),%r11
	movq %r11,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r15,1)
	movq 0x20(%rbp),%r10
	movq %r10,0x0(%r11)
	movq 0xB8(%rbp),%r11
	movl 0x0(%r11),%r10d
	testl %r10d,%r10d
	jnz L_495467
L_283901:
	movq $0x21CB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x80(%rbp),%r11
	movq %r11,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x21CB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x98(%rbp),%r11
	movq %r11,0x0(%r14)
	movq %r14,0x10(%rbp)
	movq 0x88(%rbp),%r14
	movq (globalObjptr+0x5540)(%rip),%r15
L_283902:
	movq %r14,0x4A0(%rbp)
	movq %r15,0x4A8(%rbp)
	addq $0x4A0,%rbp
	leaq (L_283903+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp add_3
.p2align 0x4
L_495467:
L_283934:
	movq $0x21CB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xA0(%rbp),%r11
	movq %r11,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x21CB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x80(%rbp),%r11
	movq %r11,0x0(%r14)
	movq $0x21CB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x98(%rbp),%r11
	movq %r11,0x0(%r15)
	movq %r15,0x10(%rbp)
	movq 0x88(%rbp),%r14
	movq (globalObjptr+0x5540)(%rip),%r15
L_283935:
	movq %r14,0x4A0(%rbp)
	movq %r15,0x4A8(%rbp)
	addq $0x4A0,%rbp
	leaq (L_283936+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp add_3
.p2align 0x4
.long 0x46BF
L_283903:
	addq $0xFFFFFFFFFFFFFB60,%rbp
	movq 0x4A0(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x10(%rbp),%r13
	cmpq $0x1,%r13
	je L_495469
L_283904:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movq %r13,0x10(%rbp)
	jmp L_283902
.p2align 0x4
L_495469:
L_283905:
L_283906:
	movq 0xC0(%rbp),%r13
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r15,0x0(%r13)
	movq $0x1,0x10(%rbp)
	movq 0x50(%rbp),%r15
	movq (globalObjptr+0x5540)(%rip),%r14
L_283907:
	movq %r15,0x4A0(%rbp)
	movq %r14,0x4A8(%rbp)
	addq $0x4A0,%rbp
	leaq (L_283908+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp add_3
.p2align 0x4
.long 0x46BF
L_283936:
	addq $0xFFFFFFFFFFFFFB60,%rbp
	movq 0x4A0(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x10(%rbp),%r13
	cmpq $0x1,%r13
	je L_283906
L_283937:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movq %r13,0x10(%rbp)
	jmp L_283935
.p2align 0x4
.long 0x46C0
L_283908:
	addq $0xFFFFFFFFFFFFFB60,%rbp
	movq 0x4A0(%rbp),%r14
	movq %r14,0x20(%rbp)
	movq 0x10(%rbp),%r13
	cmpq $0x1,%r13
	je L_495471
L_283909:
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x10(%rbp)
	jmp L_283907
.p2align 0x4
L_495471:
L_283910:
	movq 0xC8(%rbp),%r11
	movq %r11,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r15,1)
	movq %r14,0x0(%r11)
	movq $0x1,0x10(%rbp)
	movq 0x48(%rbp),%r14
	movq (globalObjptr+0x5540)(%rip),%r15
L_283911:
	movq %r14,0x4A0(%rbp)
	movq %r15,0x4A8(%rbp)
	addq $0x4A0,%rbp
	leaq (L_283912+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp add_3
.p2align 0x4
.long 0x46C1
L_283912:
	addq $0xFFFFFFFFFFFFFB60,%rbp
	movq 0x4A0(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_283913
L_283932:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x4A0,%rbp
	leaq (L_283933+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_283933
.p2align 0x4
.long 0x46C7
L_283933:
	addq $0xFFFFFFFFFFFFFB60,%rbp
L_283913:
	movq 0x10(%rbp),%r13
	cmpq $0x1,%r13
	je L_495472
L_283914:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movq %r13,0x10(%rbp)
	movq 0x20(%rbp),%r15
	jmp L_283911
.p2align 0x4
L_495472:
L_283915:
	movq 0xD0(%rbp),%r11
	movq %r11,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r15,1)
	movq 0x20(%rbp),%r10
	movq %r10,0x0(%r11)
	movq $0x21CB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x90(%rbp),%r11
	movq %r11,0x0(%r15)
	movq 0x490(%rbp),%r11
	movq %r11,0x8(%r15)
	movq $0x21CB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0xA0(%rbp),%r11
	movq %r11,0x0(%r14)
	movq %r14,0x10(%rbp)
	movq 0xA8(%rbp),%r14
	movq (globalObjptr+0x5540)(%rip),%r15
L_283916:
	movq %r14,0x498(%rbp)
	movq %r15,0x4A0(%rbp)
	addq $0x498,%rbp
	leaq (L_283917+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp add_3
.p2align 0x4
.long 0x46C2
L_283917:
	addq $0xFFFFFFFFFFFFFB68,%rbp
	movq 0x498(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x10(%rbp),%r13
	cmpq $0x1,%r13
	je L_495474
L_283918:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movq %r13,0x10(%rbp)
	jmp L_283916
.p2align 0x4
L_495474:
L_283919:
	movq 0xD8(%rbp),%r11
	movq %r11,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r14,1)
	movq %r15,0x0(%r11)
	movq $0x1,0x10(%rbp)
	movq 0xA8(%rbp),%r14
	movq (globalObjptr+0x5540)(%rip),%r15
L_283920:
	movq %r14,0x498(%rbp)
	movq %r15,0x4A0(%rbp)
	addq $0x498,%rbp
	leaq (L_283921+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp add_3
.p2align 0x4
.long 0x46C3
L_283921:
	addq $0xFFFFFFFFFFFFFB68,%rbp
	movq 0x498(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x10(%rbp),%r13
	cmpq $0x1,%r13
	je L_495475
L_283922:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movq %r13,0x10(%rbp)
	jmp L_283920
.p2align 0x4
L_495475:
L_283923:
	movq 0xE0(%rbp),%r11
	movq %r11,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r14,1)
	movq %r15,0x0(%r11)
	movq $0x1,0x10(%rbp)
	movq 0x68(%rbp),%r14
	movq (globalObjptr+0x5540)(%rip),%r15
L_283924:
	movq %r14,0x498(%rbp)
	movq %r15,0x4A0(%rbp)
	addq $0x498,%rbp
	leaq (L_283925+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp add_3
.p2align 0x4
.long 0x46C4
L_283925:
	addq $0xFFFFFFFFFFFFFB68,%rbp
	movq 0x498(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (gcState+0x458)(%rip),%r15
	subq %r12,%r15
	cmpq $0x3C0,%r15
	jnb L_283926
L_283930:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	movq $0x3C0,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x498,%rbp
	leaq (L_283931+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_283931
.p2align 0x4
.long 0x46C6
L_283931:
	addq $0xFFFFFFFFFFFFFB68,%rbp
L_283926:
	movq 0x10(%rbp),%r13
	cmpq $0x1,%r13
	je L_495476
L_283927:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movq %r13,0x10(%rbp)
	movq 0x20(%rbp),%r15
	jmp L_283924
.p2align 0x4
L_495476:
L_283928:
	movq 0xE8(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x89,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq %r15,0x8(%r14)
	movq $0x567,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	addq $0x18,%r12
	movq 0xF0(%rbp),%r15
	movq %r15,0x8(%r11)
	movq $0x569,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r11,0x8(%r15)
	addq $0x18,%r12
	movq $0x71,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x30EB,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x80(%r11)
	movq %r14,0xD0(%r11)
	addq $0x358,%r12
	movl 0x18(%rbp),%r15d
	movl %r15d,0x0(%r11)
	movl 0x1C(%rbp),%r15d
	movl %r15d,0x4(%r11)
	movq 0xF8(%rbp),%r15
	movq %r15,0x8(%r11)
	movq 0x8(%rbp),%r15
	movq %r15,0x10(%r11)
	movq 0x3F8(%rbp),%r15
	movq %r15,0x18(%r11)
	movq 0x100(%rbp),%r15
	movq %r15,0x20(%r11)
	movq 0x410(%rbp),%r15
	movq %r15,0x28(%r11)
	movq 0x108(%rbp),%r15
	movq %r15,0x30(%r11)
	movq 0x110(%rbp),%r15
	movq %r15,0x38(%r11)
	movq 0x118(%rbp),%r15
	movq %r15,0x40(%r11)
	movq 0x120(%rbp),%r15
	movq %r15,0x48(%r11)
	movq 0x128(%rbp),%r15
	movq %r15,0x50(%r11)
	movq 0x130(%rbp),%r15
	movq %r15,0x58(%r11)
	movq 0x138(%rbp),%r15
	movq %r15,0x60(%r11)
	movq 0x140(%rbp),%r15
	movq %r15,0x68(%r11)
	movq 0x148(%rbp),%r15
	movq %r15,0x70(%r11)
	movq 0x400(%rbp),%r15
	movq %r15,0x78(%r11)
	movq 0x150(%rbp),%r15
	movq %r15,0x88(%r11)
	movq 0x158(%rbp),%r15
	movq %r15,0x90(%r11)
	movq 0x160(%rbp),%r15
	movq %r15,0x98(%r11)
	movq 0x168(%rbp),%r15
	movq %r15,0xA0(%r11)
	movq 0x170(%rbp),%r15
	movq %r15,0xA8(%r11)
	movq 0x178(%rbp),%r15
	movq %r15,0xB0(%r11)
	movq 0x180(%rbp),%r15
	movq %r15,0xB8(%r11)
	movq 0x188(%rbp),%r15
	movq %r15,0xC0(%r11)
	movq 0x450(%rbp),%r15
	movq %r15,0xC8(%r11)
	movq 0x190(%rbp),%r15
	movq %r15,0xD8(%r11)
	movq 0x198(%rbp),%r15
	movq %r15,0xE0(%r11)
	movq 0x1A0(%rbp),%r15
	movq %r15,0xE8(%r11)
	movq 0x448(%rbp),%r15
	movq %r15,0xF0(%r11)
	movq 0x1A8(%rbp),%r15
	movq %r15,0xF8(%r11)
	movq 0x1B0(%rbp),%r15
	movq %r15,0x100(%r11)
	movq 0x1B8(%rbp),%r15
	movq %r15,0x108(%r11)
	movq 0x1C0(%rbp),%r15
	movq %r15,0x110(%r11)
	movq 0x1C8(%rbp),%r15
	movq %r15,0x118(%r11)
	movq 0x1D0(%rbp),%r15
	movq %r15,0x120(%r11)
	movq 0x1D8(%rbp),%r15
	movq %r15,0x128(%r11)
	movq 0x1E0(%rbp),%r15
	movq %r15,0x130(%r11)
	movq 0x408(%rbp),%r15
	movq %r15,0x138(%r11)
	movq 0x1E8(%rbp),%r15
	movq %r15,0x140(%r11)
	movq 0x1F0(%rbp),%r15
	movq %r15,0x148(%r11)
	movq 0x1F8(%rbp),%r15
	movq %r15,0x150(%r11)
	movq 0x200(%rbp),%r15
	movq %r15,0x158(%r11)
	movq 0x208(%rbp),%r15
	movq %r15,0x160(%r11)
	movq 0x210(%rbp),%r15
	movq %r15,0x168(%r11)
	movq 0x218(%rbp),%r15
	movq %r15,0x170(%r11)
	movq 0x220(%rbp),%r15
	movq %r15,0x178(%r11)
	movq 0x228(%rbp),%r15
	movq %r15,0x180(%r11)
	movq 0x230(%rbp),%r15
	movq %r15,0x188(%r11)
	movq 0x238(%rbp),%r15
	movq %r15,0x190(%r11)
	movq 0x240(%rbp),%r15
	movq %r15,0x198(%r11)
	movq 0x248(%rbp),%r15
	movq %r15,0x1A0(%r11)
	movq 0x250(%rbp),%r15
	movq %r15,0x1A8(%r11)
	movq 0x258(%rbp),%r15
	movq %r15,0x1B0(%r11)
	movq 0x260(%rbp),%r15
	movq %r15,0x1B8(%r11)
	movq 0x268(%rbp),%r15
	movq %r15,0x1C0(%r11)
	movq 0x270(%rbp),%r15
	movq %r15,0x1C8(%r11)
	movq 0x278(%rbp),%r15
	movq %r15,0x1D0(%r11)
	movq 0x280(%rbp),%r15
	movq %r15,0x1D8(%r11)
	movq 0x288(%rbp),%r15
	movq %r15,0x1E0(%r11)
	movq 0x290(%rbp),%r15
	movq %r15,0x1E8(%r11)
	movq 0x298(%rbp),%r15
	movq %r15,0x1F0(%r11)
	movq 0x2A0(%rbp),%r15
	movq %r15,0x1F8(%r11)
	movq 0x2A8(%rbp),%r15
	movq %r15,0x200(%r11)
	movq 0x2B0(%rbp),%r15
	movq %r15,0x208(%r11)
	movq 0x2B8(%rbp),%r15
	movq %r15,0x210(%r11)
	movq 0x2C0(%rbp),%r15
	movq %r15,0x218(%r11)
	movq 0x2C8(%rbp),%r15
	movq %r15,0x220(%r11)
	movq 0x2D0(%rbp),%r15
	movq %r15,0x228(%r11)
	movq 0x2D8(%rbp),%r15
	movq %r15,0x230(%r11)
	movq 0x2E0(%rbp),%r15
	movq %r15,0x238(%r11)
	movq 0x2E8(%rbp),%r15
	movq %r15,0x240(%r11)
	movq 0x2F0(%rbp),%r15
	movq %r15,0x248(%r11)
	movq 0x2F8(%rbp),%r15
	movq %r15,0x250(%r11)
	movq 0x300(%rbp),%r15
	movq %r15,0x258(%r11)
	movq 0x308(%rbp),%r15
	movq %r15,0x260(%r11)
	movq 0x310(%rbp),%r15
	movq %r15,0x268(%r11)
	movq 0x318(%rbp),%r15
	movq %r15,0x270(%r11)
	movq 0x320(%rbp),%r15
	movq %r15,0x278(%r11)
	movq 0x328(%rbp),%r15
	movq %r15,0x280(%r11)
	movq 0x330(%rbp),%r15
	movq %r15,0x288(%r11)
	movq 0x338(%rbp),%r15
	movq %r15,0x290(%r11)
	movq 0x340(%rbp),%r15
	movq %r15,0x298(%r11)
	movq 0x348(%rbp),%r15
	movq %r15,0x2A0(%r11)
	movq 0x350(%rbp),%r15
	movq %r15,0x2A8(%r11)
	movq 0x358(%rbp),%r15
	movq %r15,0x2B0(%r11)
	movq 0x360(%rbp),%r15
	movq %r15,0x2B8(%r11)
	movq 0x368(%rbp),%r15
	movq %r15,0x2C0(%r11)
	movq 0x370(%rbp),%r15
	movq %r15,0x2C8(%r11)
	movq 0x378(%rbp),%r15
	movq %r15,0x2D0(%r11)
	movq 0x380(%rbp),%r15
	movq %r15,0x2D8(%r11)
	movq 0x388(%rbp),%r15
	movq %r15,0x2E0(%r11)
	movq 0x390(%rbp),%r15
	movq %r15,0x2E8(%r11)
	movq 0x398(%rbp),%r15
	movq %r15,0x2F0(%r11)
	movq 0x3A0(%rbp),%r15
	movq %r15,0x2F8(%r11)
	movq 0x3A8(%rbp),%r15
	movq %r15,0x300(%r11)
	movq 0x3B0(%rbp),%r15
	movq %r15,0x308(%r11)
	movq 0x3B8(%rbp),%r15
	movq %r15,0x310(%r11)
	movq 0x3C0(%rbp),%r15
	movq %r15,0x318(%r11)
	movq 0x3C8(%rbp),%r15
	movq %r15,0x320(%r11)
	movq 0x3D0(%rbp),%r15
	movq %r15,0x328(%r11)
	movq 0x3D8(%rbp),%r15
	movq %r15,0x330(%r11)
	movq 0x3E0(%rbp),%r15
	movq %r15,0x338(%r11)
	movq 0x3E8(%rbp),%r15
	movq %r15,0x340(%r11)
	movq 0x3F0(%rbp),%r15
	movq %r15,0x348(%r11)
	movq %r11,0x4C8(%rbp)
	movq (globalObjptr+0x61A8)(%rip),%r15
	movq %r15,0x498(%rbp)
	movq 0x460(%rbp),%r15
	movq %r15,0x4A0(%rbp)
	movq 0x468(%rbp),%r15
	movq %r15,0x4A8(%rbp)
	movq 0x470(%rbp),%r15
	movq %r15,0x4B0(%rbp)
	movq 0x478(%rbp),%r15
	movq %r15,0x4B8(%rbp)
	movq 0x480(%rbp),%r15
	movq %r15,0x4C0(%rbp)
	addq $0x498,%rbp
	leaq (L_283929+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1212
.p2align 0x4
.long 0x46C5
L_283929:
	addq $0xFFFFFFFFFFFFFB68,%rbp
	movq (globalObjptr+0x61A0)(%rip),%r15
	movq %r15,0x0(%rbp)
	movq 0x460(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x468(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x470(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x478(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x480(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x488(%rbp),%r15
	movq %r15,0x30(%rbp)
	jmp x_1212
.text
.p2align 0x4
.globl add_3
.hidden add_3
add_3:
L_283982:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_284050
L_283983:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_495505
L_283984:
	movq 0x8(%rbp),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x10(%rbp)
	cmpq $0x1,%r11
	je L_284044
L_283985:
	movq 0x8(%r11),%r14
	movq 0x0(%r11),%r15
.p2align 0x4,,0x7
L_283986:
	movl 0x0(%r15),%r13d
	movl %r13d,0x18(%rbp)
	movq 0x0(%rbp),%r11
	movl 0x0(%r11),%r10d
	movl %r10d,0x1C(%rbp)
	cmpl %r10d,%r13d
	jnl L_495500
L_284040:
	cmpq $0x1,%r14
	je L_495478
L_284041:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_283986
.p2align 0x4
L_495478:
L_284042:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_284044
L_284047:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_284048+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_284048
.p2align 0x4
.long 0x45B
L_284048:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_284044:
	movq 0x8(%rbp),%r15
	movl 0x0(%r15),%r14d
	movq 0x10(%rbp),%r15
	cmpq $0x1,%r15
	je L_495498
L_284045:
	movl %r14d,0x1C(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x8(%rbp)
	movl $0x0,0x18(%rbp)
	movq $0x1,0x20(%rbp)
	movq %r15,0x28(%rbp)
	movq 0x0(%r15),%r15
	movq %r15,0x10(%rbp)
.p2align 0x4,,0x7
L_283992:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_495497
.p2align 0x4,,0x7
L_283993:
	movq 0x10(%rbp),%r15
	movl 0x0(%r15),%r14d
	movq 0x0(%rbp),%r13
	movl 0x0(%r13),%r11d
	cmpl %r11d,%r14d
	jnl L_495486
L_284019:
	movl 0x1C(%rbp),%r14d
	decl %r14d
	jo L_284002
L_284020:
	movq $0x21CB,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq %r15,0x0(%r13)
	movq 0x20(%rbp),%r15
	movq %r15,0x8(%r13)
	movl 0x18(%rbp),%r11d
	incl %r11d
	jo L_284002
L_284021:
	movq 0x8(%rbp),%r15
	cmpq $0x1,%r15
	je L_495479
L_284022:
	movl %r11d,0x18(%rbp)
	movq %r13,0x20(%rbp)
	movl %r14d,0x1C(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x28(%rbp)
	movq 0x8(%r15),%r15
	movq %r15,0x8(%rbp)
	jmp L_283992
.p2align 0x4
L_495479:
L_284023:
	movl %r11d,0x8(%rbp)
	xchgq %r13,%r15
L_284024:
	movq $0x21CB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x0(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	cmpq $0x1,%r15
	je L_495483
L_284025:
	movq %r14,0x20(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
.p2align 0x4,,0x7
L_284026:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_495482
.p2align 0x4,,0x7
L_284027:
	movq $0x21CB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_495480
L_284028:
	movq %r15,0x20(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	movq %r15,0x18(%rbp)
	jmp L_284026
.p2align 0x4
L_495480:
L_284030:
	movl 0x8(%rbp),%r14d
	incl %r14d
	jo L_495481
L_284031:
	movq $0x4FF,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movl %r14d,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movl $0x0,0x4(%r13)
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_495481:
L_284002:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_495482:
L_284032:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_284033+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_284033
.p2align 0x4
.long 0x4B1
L_284033:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	jmp L_284027
.p2align 0x4
L_495483:
L_284034:
	movq %r14,%r15
	jmp L_284030
.p2align 0x4
L_495486:
L_283994:
	cmpl %r14d,%r11d
	jl L_495491
L_283995:
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_495490
L_283996:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	movq 0x28(%rbp),%r14
	movq %r14,0x30(%rbp)
	movq %r13,0x28(%rbp)
.p2align 0x4,,0x7
L_283997:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_495489
.p2align 0x4,,0x7
L_283998:
	movq $0x21CB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_495487
L_283999:
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x28(%rbp)
	jmp L_283997
.p2align 0x4
L_495487:
L_284001:
	movl 0x18(%rbp),%r14d
	addl 0x1C(%rbp),%r14d
	jo L_284002
L_284003:
	movq $0x4FF,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movl %r14d,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movl $0x0,0x4(%r13)
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_495489:
L_284004:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_284005+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_284005
.p2align 0x4
.long 0x4FC
L_284005:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_283998
.p2align 0x4
L_495490:
L_284006:
	movq 0x28(%rbp),%r13
	xchgq %r13,%r15
	jmp L_284001
.p2align 0x4
L_495491:
L_284007:
	movq $0x21CB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x0(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x28(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x20(%rbp),%r13
	cmpq $0x1,%r13
	je L_495496
L_284008:
	movq %r14,0x30(%rbp)
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	movq %r13,0x20(%rbp)
	movq %r14,0x28(%rbp)
.p2align 0x4,,0x7
L_284009:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_495495
.p2align 0x4,,0x7
L_284010:
	movq $0x21CB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_495492
L_284011:
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x28(%rbp)
	jmp L_284009
.p2align 0x4
L_495492:
L_284013:
	movl 0x18(%rbp),%r14d
	incl %r14d
	jo L_284002
L_284014:
	addl 0x1C(%rbp),%r14d
	jo L_284002
L_284015:
	movq $0x4FF,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movl %r14d,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movl $0x0,0x4(%r13)
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_495495:
L_284016:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_284017+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_284017
.p2align 0x4
.long 0x4FC
L_284017:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_284010
.p2align 0x4
L_495496:
	xchgq %r14,%r15
	jmp L_284013
.p2align 0x4
L_495497:
L_284035:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_284036+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_284036
.p2align 0x4
.long 0xFCF
L_284036:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_283993
.p2align 0x4
L_495498:
L_284046:
	movl $0x0,0x8(%rbp)
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_284024
.p2align 0x4
L_495500:
L_283987:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_283988
L_284038:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_284039+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_284039
.p2align 0x4
.long 0x813
L_284039:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_283988:
	movl 0x18(%rbp),%r15d
	cmpl %r15d,0x1C(%rbp)
	jl L_495501
L_283989:
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_495501:
L_283990:
	movq 0x8(%rbp),%r15
	movl 0x0(%r15),%r14d
	movq 0x10(%rbp),%r15
	cmpq $0x1,%r15
	je L_495502
L_283991:
	movl %r14d,0x1C(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x8(%rbp)
	movl $0x0,0x18(%rbp)
	movq $0x1,0x20(%rbp)
	movq %r15,0x28(%rbp)
	movq 0x0(%r15),%r15
	movq %r15,0x10(%rbp)
	jmp L_283992
.p2align 0x4
L_495502:
L_284037:
	movl $0x0,0x8(%rbp)
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_284024
.p2align 0x4
L_495505:
L_284050:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_284051+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_284051
.p2align 0x4
.long 0x45F
L_284051:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_283984
.text
.p2align 0x4
.globl output_2
.hidden output_2
output_2:
L_284052:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_284451
L_284053:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_495531
L_284054:
	movq 0x10(%rbp),%r14
	movq 0x100(%r14),%r13
	movq %r13,0x18(%rbp)
	movq 0xF8(%r14),%r11
	movq %r11,0x20(%rbp)
	movq 0xF0(%r14),%r11
	movq %r11,0x28(%rbp)
	movq 0xE8(%r14),%r11
	movq %r11,0x30(%rbp)
	movq 0xE0(%r14),%r11
	movq %r11,0x38(%rbp)
	movq 0xD8(%r14),%r11
	movq %r11,0x40(%rbp)
	movq 0xD0(%r14),%r11
	movq %r11,0x48(%rbp)
	movq 0xC8(%r14),%r11
	movq %r11,0x50(%rbp)
	movq 0xC0(%r14),%r11
	movq %r11,0x58(%rbp)
	movq 0xB8(%r14),%r11
	movq %r11,0x60(%rbp)
	movq 0xB0(%r14),%r11
	movq %r11,0x68(%rbp)
	movq 0xA8(%r14),%r11
	movq %r11,0x70(%rbp)
	movq 0xA0(%r14),%r11
	movq %r11,0x78(%rbp)
	movq 0x98(%r14),%r11
	movq %r11,0x80(%rbp)
	movq 0x90(%r14),%r11
	movq %r11,0x88(%rbp)
	movq 0x88(%r14),%r11
	movq %r11,0x90(%rbp)
	movq 0x80(%r14),%r11
	movq %r11,0x98(%rbp)
	movq 0x78(%r14),%r11
	movq %r11,0xA0(%rbp)
	movq 0x70(%r14),%r11
	movq %r11,0xA8(%rbp)
	movq 0x68(%r14),%r11
	movq %r11,0xB0(%rbp)
	movq 0x60(%r14),%r11
	movq %r11,0xB8(%rbp)
	movq 0x58(%r14),%r11
	movq %r11,0xC0(%rbp)
	movq 0x50(%r14),%r11
	movq %r11,0xC8(%rbp)
	movq 0x48(%r14),%r11
	movq %r11,0xD0(%rbp)
	movq 0x40(%r14),%r11
	movq %r11,0xD8(%rbp)
	movq 0x38(%r14),%r11
	movq %r11,0xE0(%rbp)
	movq 0x30(%r14),%r11
	movq %r11,0xE8(%rbp)
	movq 0x28(%r14),%r11
	movq %r11,0xF0(%rbp)
	movq 0x20(%r14),%r11
	movq %r11,0xF8(%rbp)
	movq 0x18(%r14),%r11
	movq %r11,0x100(%rbp)
	movq 0x10(%r14),%r11
	movq %r11,0x108(%rbp)
	movq 0x8(%r14),%r11
	movq %r11,0x110(%rbp)
	movl 0x0(%r14),%r11d
	movl %r11d,0x118(%rbp)
	movq 0x0(%rbp),%r14
	movq 0x48(%r14),%r15
	movq 0x50(%r14),%r11
	movq %r11,0x120(%rbp)
	movq 0x30(%r14),%r10
	movq 0x0(%r10),%r9
	movq %r9,0x128(%rbp)
	movq 0x8(%r10),%r9
	movq %r9,0x130(%rbp)
	movq $0x71,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x138(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x47B,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r10,0x140(%rbp)
	addq $0x18,%r12
	movq %r13,0x0(%r10)
	movq %r14,0x8(%r10)
	movq $0x7FF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x148(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r10
	cmpq %r14,%r10
	jne L_284056
L_284057:
	movq $0x4B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x10(%rbp)
	movl %r13d,0x0(%r14)
	addq $0x10,%r12
	movl $0x0,0x4(%r14)
	cmpq $0x1,%r11
	je L_495507
L_284058:
	movq 0x8(%r11),%r14
	movq %r14,0x150(%rbp)
	movq 0x0(%r11),%r15
L_284059:
	movq 0x8(%r15),%r14
	movq 0x10(%r15),%r13
	movq %r13,0x168(%rbp)
	movq $0x3275,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x10(%r15)
	addq $0x30,%r12
	movq 0x138(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x148(%rbp),%r14
	movq %r14,0x20(%r15)
	movq %r15,0x160(%rbp)
	addq $0x160,%rbp
	leaq (L_284060+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_7
.p2align 0x4
L_495507:
L_284064:
	movq 0x148(%rbp),%r14
	movq 0x0(%r14),%r13
	movq %r13,0x10(%rbp)
	cmpq $0x1,%r13
	je L_495529
L_284065:
	movq 0x8(%r13),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_284066:
	incl %ecx
	jo L_284067
L_284068:
	cmpq $0x1,%r15
	je L_495508
L_284069:
	movq 0x8(%r15),%r15
	jmp L_284066
.p2align 0x4
L_495508:
L_284070:
L_284071:
	movslq %ecx,%rdx
	movq %rdx,0x148(%rbp)
	cmpq $0x7FFFFFFF,%rdx
	ja L_284334
L_284072:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xA8D,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x158,%rbp
	leaq (L_284073+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_284073
.p2align 0x4
.long 0x46CC
L_284073:
	addq $0xFFFFFFFFFFFFFEA8,%rbp
	movq %rax,0x150(%rbp)
	movq 0x10(%rbp),%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3402:
	cmpq 0x148(%rbp),%r15
	jnl L_495510
L_284443:
	cmpq $0x1,%r14
	je L_495509
L_284444:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq 0x150(%rbp),%r11
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r13,0x0(%r11,%r15,8)
	incq %r15
	jmp loop_3402
.p2align 0x4
L_495509:
L_284445:
	movq (globalObjptr+0x4B0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_495510:
L_284074:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_284075
L_284441:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_284442+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_284442
.p2align 0x4
.long 0x46F0
L_284442:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
L_284075:
	movq 0x148(%rbp),%r13
	movl %r13d,%r11d
	movl %r11d,0x10(%rbp)
	movslq %r11d,%r10
	movq %r10,0x158(%rbp)
	cmpq %r10,%r13
	jne L_284056
L_284077:
	testl %r11d,%r11d
	jz L_495518
L_284078:
	movq $0x1919,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x150(%rbp),%r10
	movq %r10,0x0(%r15)
	movq %r10,0x8(%r15)
	cmpq $0x0,%r13
	jna L_284080
L_284081:
	movq 0x0(%r10),%r14
	cmpl $0x0,%r11d
	jl L_495516
L_284082:
	xorl %ebx,%ebx
	xorl %ecx,%ecx
.p2align 0x4,,0x7
loop_3403:
	cmpl 0x10(%rbp),%ecx
	jnl L_495512
L_284435:
	movslq %ecx,%r13
	movq 0x150(%rbp),%r11
	movq 0x0(%r11,%r13,8),%r10
	movl 0x0(%r10),%r13d
	cmpl %r13d,0x0(%r14)
	jnl L_495511
L_284438:
	movl %ecx,(localWord32+0x0)(%rip)
	movq %r10,%r14
	movq %r15,(localObjptr+0x0)(%rip)
L_284437:
	incl %ecx
	movq (localObjptr+0x0)(%rip),%r15
	movl (localWord32+0x0)(%rip),%ebx
	jmp loop_3403
.p2align 0x4
L_495511:
	movl %ebx,(localWord32+0x0)(%rip)
	movq %r15,(localObjptr+0x0)(%rip)
	jmp L_284437
.p2align 0x4
L_495512:
L_284083:
	movl 0x10(%rbp),%r14d
	decl %r14d
	movslq %ebx,%r13
	movq 0x148(%rbp),%r11
	cmpq %r11,%r13
	jnb L_284080
L_284085:
	movq 0x150(%rbp),%r10
	movq 0x0(%r10,%r13,8),%r9
	movslq %r14d,%r8
	cmpq %r11,%r8
	jnb L_495514
L_284087:
	movq 0x0(%r10,%r8,8),%r11
	movq %r10,%rsp
	shrq $0x8,%rsp
	movq (gcState+0x3C8)(%rip),%rsi
	movq %rsp,%rax
	movb $0x1,0x0(%rsi,%rax,1)
	movq %r11,0x0(%r10,%r13,8)
	movq %r10,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%rsi,%r13,1)
	movq %r9,0x0(%r10,%r8,8)
	decl %r14d
	jo L_495513
L_284088:
	movl %r14d,0x168(%rbp)
	movq %r15,0x178(%rbp)
	movl $0x0,0x16C(%rbp)
	movq %r10,0x170(%rbp)
	addq $0x168,%rbp
	leaq (L_284089+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp qsort_35
.p2align 0x4
L_495513:
L_284067:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_495514:
L_284080:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_495516:
L_284439:
	movq (globalObjptr+0x4F8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_495518:
L_284092:
	movq 0x158(%rbp),%rdx
	testq %rdx,%rdx
	jz L_495524
L_284093:
	cmpq $0x7FFFFFFF,%rdx
	ja L_495523
L_284094:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1607,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x168,%rbp
	leaq (L_284095+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_284095
.p2align 0x4
.long 0x46CE
L_284095:
	addq $0xFFFFFFFFFFFFFE98,%rbp
	movq %rax,0x10(%rbp)
L_284096:
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3404:
	cmpq 0x158(%rbp),%r15
	jnl L_495520
L_284428:
	movl %r15d,%r14d
	movslq %r14d,%r13
	cmpq 0x148(%rbp),%r13
	jnb L_284080
L_284430:
	movq %r15,%r14
	movq %r15,%r11
	movq 0x150(%rbp),%r10
	movq 0x0(%r10,%r13,8),%r9
	movq 0x8(%r9),%r8
	salq $0x4,%r14
	movq 0x10(%rbp),%rsp
	movl 0x0(%r9),%esi
	movl %esi,0x0(%rsp,%r14,1)
	movq %rsp,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	salq $0x4,%r11
	movq %r8,0x8(%rsp,%r11,1)
	incq %r15
	jmp loop_3404
.p2align 0x4
L_495520:
L_284097:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_284098
L_284426:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x150,%rbp
	leaq (L_284427+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_284427
.p2align 0x4
.long 0x46EF
L_284427:
	addq $0xFFFFFFFFFFFFFEB0,%rbp
L_284098:
	movq 0x10(%rbp),%r15
	movq $0x935,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_495521
L_284100:
	movl %r13d,0x158(%rbp)
	movq $0x4061,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq %r14,0x150(%rbp)
	addq $0x150,%rbp
	leaq (L_284101+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_3
.p2align 0x4
L_495521:
L_284056:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_495523:
L_284334:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_495524:
L_284432:
	movq (globalObjptr+0x54B8)(%rip),%r15
	movq %r15,0x10(%rbp)
	jmp L_284096
.p2align 0x4
L_495529:
L_284447:
	xorl %ecx,%ecx
	jmp L_284071
.p2align 0x4
L_495531:
L_284451:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_284452+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_284452
.p2align 0x4
.long 0x45B
L_284452:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_284054
.p2align 0x4
.long 0x46CB
L_284060:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_284061
L_284448:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_284449+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_284449
.p2align 0x4
.long 0x46EE
L_284449:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
L_284061:
	movq 0x150(%rbp),%r14
	cmpq $0x1,%r14
	je L_284064
L_284062:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x150(%rbp)
	jmp L_284059
.p2align 0x4
.long 0x46CD
L_284089:
	addq $0xFFFFFFFFFFFFFE98,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_284090
L_284433:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x168,%rbp
	leaq (L_284434+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_284434
.p2align 0x4
.long 0x46CE
L_284434:
	addq $0xFFFFFFFFFFFFFE98,%rbp
L_284090:
	movq $0x3D35,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x150(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r15,0x168(%rbp)
	movl 0x10(%rbp),%r15d
	movl %r15d,0x170(%rbp)
	movl $0x1,0x174(%rbp)
	addq $0x168,%rbp
	leaq (L_284091+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fold_0
.p2align 0x4
.long 0x46CF
L_284101:
	addq $0xFFFFFFFFFFFFFEB0,%rbp
	movq 0x150(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_284102
L_284424:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x150,%rbp
	leaq (L_284425+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_284425
.p2align 0x4
.long 0x46EF
L_284425:
	addq $0xFFFFFFFFFFFFFEB0,%rbp
L_284102:
	movq $0x4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x71,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0xA27,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x148(%rbp)
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%r13)
	movq $0x4365,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x71,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x8CF,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x150(%rbp)
	movq %r15,0x0(%r13)
	addq $0x18,%r12
	movq %r14,0x8(%r13)
	movq $0x33C9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r15,0x160(%rbp)
	addq $0x18,%r12
	movq 0x10(%rbp),%r15
	movq %r15,0x168(%rbp)
	addq $0x160,%rbp
	leaq (L_284103+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_5
.p2align 0x4
.long 0x46CD
L_284091:
	addq $0xFFFFFFFFFFFFFE98,%rbp
	jmp L_284092
.p2align 0x4
.long 0x46CB
L_284103:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_284104
L_284422:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_284423+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_284423
.p2align 0x4
.long 0x46EE
L_284423:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
L_284104:
	movq $0xA1D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x158(%rbp)
	addq $0x20,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x150(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x30(%rbp),%r15
	cmpb $0x1,0x0(%r15)
	jne L_284106
L_284418:
	movq 0x38(%rbp),%r14
	movb 0x0(%r14),%r15b
	cmpb $0x1,%r15b
	je L_284420
	cmpb $0x8,%r15b
	je L_495538
L_284106:
	xorl %ecx,%ecx
L_284107:
	movq $0xA21,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movl %ecx,0x0(%r15)
	addq $0x20,%r12
	movl $0x0,0x4(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x10(%r15)
	movq $0xA23,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x30(%rbp)
	addq $0x20,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r13,0x8(%r14)
	movq %r15,0x10(%r14)
	movq $0xA1F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x38(%rbp)
	addq $0x48,%r12
	movq 0x88(%rbp),%r11
	movq %r11,0x0(%r14)
	movq 0x80(%rbp),%r11
	movq %r11,0x8(%r14)
	movq 0x78(%rbp),%r11
	movq %r11,0x10(%r14)
	movq 0x70(%rbp),%r11
	movq %r11,0x18(%r14)
	movq 0x68(%rbp),%r11
	movq %r11,0x20(%r14)
	movq 0x158(%rbp),%r11
	movq %r11,0x28(%r14)
	movq 0x60(%rbp),%r11
	movq %r11,0x30(%r14)
	movq 0x58(%rbp),%r11
	movq %r11,0x38(%r14)
	movq $0xA29,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,0x160(%rbp)
	movq %r15,0x10(%r11)
	addq $0x28,%r12
	movq %r13,0x0(%r11)
	movq %r14,0x8(%r11)
	movq 0x90(%rbp),%r15
	movq %r15,0x18(%r11)
	movq 0x98(%rbp),%r14
	movb 0x0(%r14),%r15b
	cmpb $0x1,%r15b
	je L_495537
L_284108:
	cmpb $0x0,%r15b
	sete %al
	movzbl %al,%eax
	movl %eax,0x40(%rbp)
L_284109:
	movq 0x130(%rbp),%r15
	movq %r15,0x170(%rbp)
	movq 0x148(%rbp),%r15
	movq %r15,0x178(%rbp)
	addq $0x170,%rbp
	leaq (L_284110+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1332
.p2align 0x4
L_495537:
L_284417:
	movl $0x1,0x40(%rbp)
	jmp L_284109
.p2align 0x4
L_495538:
L_284420:
	movl $0x1,%ecx
	jmp L_284107
.p2align 0x4
.long 0x46D0
L_284110:
	addq $0xFFFFFFFFFFFFFE90,%rbp
	movq 0x170(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x128(%rbp),%r15
	movq %r15,0x170(%rbp)
	movq 0x150(%rbp),%r15
	movq %r15,0x178(%rbp)
	addq $0x170,%rbp
	leaq (L_284111+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_33
.p2align 0x4
.long 0x46D1
L_284111:
	addq $0xFFFFFFFFFFFFFE90,%rbp
	movl 0x170(%rbp),%r15d
	movl %r15d,0x44(%rbp)
	cmpl $0x0,%r15d
	jl L_495542
L_284112:
	movl %r15d,0x170(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x178(%rbp)
	addq $0x170,%rbp
	leaq (L_284113+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_495542:
L_284411:
	negl %r15d
	jo L_284067
L_284412:
	movl %r15d,0x170(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x178(%rbp)
	addq $0x170,%rbp
	leaq (L_284413+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0x46D1
L_284113:
	addq $0xFFFFFFFFFFFFFE90,%rbp
	movq 0x170(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_284114
L_284409:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x170,%rbp
	leaq (L_284410+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_284410
.p2align 0x4
.long 0x46ED
L_284410:
	addq $0xFFFFFFFFFFFFFE90,%rbp
L_284114:
	movq (globalObjptr+0x808)(%rip),%r15
	movl 0x0(%r15),%r14d
	testl %r14d,%r14d
	jz L_495544
L_284115:
	movq 0x128(%rbp),%r15
	movq %r15,0x170(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x178(%rbp)
	addq $0x170,%rbp
	leaq (L_284116+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_495544:
L_284408:
	movq 0x50(%rbp),%r15
L_284120:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x50(%rbp)
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x187D,%r14
	je L_495545
L_284399:
	movq 0x50(%r15),%r14
	movq %r14,0x170(%rbp)
	movq 0x48(%r15),%r14
	movq %r14,0x178(%rbp)
	movq 0x40(%r15),%r14
	movq %r14,0x180(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x188(%rbp)
	movb 0x0(%r15),%r14b
	movb %r14b,0x190(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x198(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x1A0(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x1A8(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x1B0(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x1B8(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x1C0(%rbp)
	addq $0x170,%rbp
	leaq (L_284400+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1821
.p2align 0x4
L_495545:
L_284121:
	movq 0x50(%r15),%r14
	movq %r14,0x170(%rbp)
	movq 0x48(%r15),%r14
	movq %r14,0x178(%rbp)
	movq 0x40(%r15),%r14
	movq %r14,0x180(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x188(%rbp)
	movb 0x0(%r15),%r14b
	movb %r14b,0x190(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x198(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x1A0(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x1A8(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x1B0(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x1B8(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x1C0(%rbp)
	addq $0x170,%rbp
	leaq (L_284122+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1822
.p2align 0x4
.long 0x46D1
L_284413:
	addq $0xFFFFFFFFFFFFFE90,%rbp
	movq 0x170(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_284414
L_284415:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x170,%rbp
	leaq (L_284416+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_284416
.p2align 0x4
.long 0x46ED
L_284416:
	addq $0xFFFFFFFFFFFFFE90,%rbp
L_284414:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xD3C0)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x170(%rbp)
	addq $0x170,%rbp
	leaq (L_284113+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x46D2
L_284116:
	addq $0xFFFFFFFFFFFFFE90,%rbp
	movq 0x170(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_284117
L_284406:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x170,%rbp
	leaq (L_284407+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_284407
.p2align 0x4
.long 0x46EB
L_284407:
	addq $0xFFFFFFFFFFFFFE90,%rbp
L_284117:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x5480)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xEDC8)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x170(%rbp)
	addq $0x170,%rbp
	leaq (L_284118+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x46D4
L_284400:
	addq $0xFFFFFFFFFFFFFE90,%rbp
	movq 0x170(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x178(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_284401
L_284402:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x170,%rbp
	leaq (L_284403+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_284403
.p2align 0x4
.long 0x46EB
L_284403:
	addq $0xFFFFFFFFFFFFFE90,%rbp
L_284401:
	movq $0x2A1F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x3D67,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x48(%rbp)
	movq %r14,%r15
L_284124:
	movq $0x2A23,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	movq %r15,0x180(%rbp)
	addq $0x30,%r12
	movq 0x148(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x120(%rbp),%r15
	movq %r15,0x10(%r14)
	movq 0x140(%rbp),%r15
	movq %r15,0x18(%r14)
	movq 0x10(%rbp),%r15
	movq %r15,0x20(%r14)
	movq %r14,0x170(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x178(%rbp)
	movq (globalObjptr+0x54C0)(%rip),%r15
	movq %r15,0x188(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x190(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0x198(%rbp)
	addq $0x170,%rbp
	leaq (L_284125+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp outputDeclarations_0
.p2align 0x4
.long 0x46D4
L_284122:
	addq $0xFFFFFFFFFFFFFE90,%rbp
	movq 0x170(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x178(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_284123
L_284397:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x170,%rbp
	leaq (L_284398+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_284398
.p2align 0x4
.long 0x46EB
L_284398:
	addq $0xFFFFFFFFFFFFFE90,%rbp
L_284123:
	movq $0x2A1D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x3D65,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x48(%rbp)
	movq %r14,%r15
	jmp L_284124
.p2align 0x4
.long 0x46D3
L_284118:
	addq $0xFFFFFFFFFFFFFE90,%rbp
	movq 0x170(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_284119
L_284404:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x170,%rbp
	leaq (L_284405+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_284405
.p2align 0x4
.long 0x46EC
L_284405:
	addq $0xFFFFFFFFFFFFFE90,%rbp
L_284119:
	movq 0x50(%rbp),%r15
	jmp L_284120
.p2align 0x4
.long 0x46D5
L_284125:
	addq $0xFFFFFFFFFFFFFE90,%rbp
	movq 0x48(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x150E,%r14
	je L_495552
L_284396:
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x178(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x170(%rbp)
	addq $0x170,%rbp
	leaq (L_284127+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp closeOut_0
.p2align 0x4
L_495552:
L_284126:
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x178(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x170(%rbp)
	addq $0x170,%rbp
	leaq (L_284127+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp closeOut_0
.p2align 0x4
.long 0x46D6
L_284127:
	addq $0xFFFFFFFFFFFFFE90,%rbp
	movq 0x120(%rbp),%r14
	cmpq $0x1,%r14
	je L_495554
L_284128:
	movq 0x8(%r14),%r13
	movq %r13,0x10(%rbp)
	movq 0x0(%r14),%r15
L_284129:
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x187D,%r14
	je L_495553
L_284390:
	movq 0x50(%r15),%r14
	movq %r14,0x170(%rbp)
	movq 0x48(%r15),%r14
	movq %r14,0x178(%rbp)
	movq 0x40(%r15),%r14
	movq %r14,0x180(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x188(%rbp)
	movb 0x0(%r15),%r14b
	movb %r14b,0x190(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x198(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x1A0(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x1A8(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x1B0(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x1B8(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x1C0(%rbp)
	addq $0x170,%rbp
	leaq (L_284391+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1821
.p2align 0x4
L_495553:
L_284130:
	movq 0x50(%r15),%r14
	movq %r14,0x170(%rbp)
	movq 0x48(%r15),%r14
	movq %r14,0x178(%rbp)
	movq 0x40(%r15),%r14
	movq %r14,0x180(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x188(%rbp)
	movb 0x0(%r15),%r14b
	movb %r14b,0x190(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x198(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x1A0(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x1A8(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x1B0(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x1B8(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x1C0(%rbp)
	addq $0x170,%rbp
	leaq (L_284131+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1822
.p2align 0x4
L_495554:
L_284269:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x46D7
L_284391:
	addq $0xFFFFFFFFFFFFFE90,%rbp
	movq 0x170(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x178(%rbp),%r15
	movq %r15,0x98(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_284392
L_284393:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x170,%rbp
	leaq (L_284394+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_284394
.p2align 0x4
.long 0x46EA
L_284394:
	addq $0xFFFFFFFFFFFFFE90,%rbp
L_284392:
	movq $0x2A1F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x98(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x98(%rbp)
	movq $0x3D67,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x70(%rbp)
L_284133:
	movq $0x3279,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x138(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x170(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x178(%rbp)
	addq $0x170,%rbp
	leaq (L_284134+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_7
.p2align 0x4
.long 0x46D7
L_284131:
	addq $0xFFFFFFFFFFFFFE90,%rbp
	movq 0x170(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x178(%rbp),%r15
	movq %r15,0x98(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_284132
L_284388:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x170,%rbp
	leaq (L_284389+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_284389
.p2align 0x4
.long 0x46EA
L_284389:
	addq $0xFFFFFFFFFFFFFE90,%rbp
L_284132:
	movq $0x2A1D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x98(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x98(%rbp)
	movq $0x3D65,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x70(%rbp)
	jmp L_284133
.p2align 0x4
.long 0x46D8
L_284134:
	addq $0xFFFFFFFFFFFFFE90,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_284135
L_284386:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x170,%rbp
	leaq (L_284387+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_284387
.p2align 0x4
.long 0x46EA
L_284387:
	addq $0xFFFFFFFFFFFFFE90,%rbp
L_284135:
	movq $0xA25,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x50,%r12
	movl 0x40(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x60(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x30(%rbp),%r11
	movq %r11,0x10(%r15)
	movq 0x38(%rbp),%r10
	movq %r10,0x18(%r15)
	movq 0x88(%rbp),%r9
	movq %r9,0x20(%r15)
	movq 0xB8(%rbp),%r9
	movq %r9,0x28(%r15)
	movq 0xB0(%rbp),%r9
	movq %r9,0x30(%r15)
	movq 0xA8(%rbp),%r9
	movq %r9,0x38(%r15)
	movq 0x70(%rbp),%r9
	movq %r9,0x40(%r15)
	movq 0xC0(%rbp),%r8
	movq 0x8(%r8),%rsp
	movq $0xA31,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r8,0xA0(%rbp)
	movq %rsp,0x40(%r8)
	movq %r15,0xC8(%r8)
	addq $0xE8,%r12
	movl %r14d,0x0(%r8)
	movl $0x0,0x4(%r8)
	movq 0x108(%rbp),%r15
	movq %r15,0x8(%r8)
	movq 0x140(%rbp),%r15
	movq %r15,0x10(%r8)
	movq 0x28(%rbp),%r14
	movq %r14,0x18(%r8)
	movq %r9,0x20(%r8)
	movq 0x100(%rbp),%r14
	movq %r14,0x28(%r8)
	movq 0xF8(%rbp),%r14
	movq %r14,0x30(%r8)
	movq 0xF0(%rbp),%r14
	movq %r14,0x38(%r8)
	movq 0x0(%rbp),%r14
	movq %r14,0x48(%r8)
	movq 0xE8(%rbp),%r14
	movq %r14,0x50(%r8)
	movq %r13,0x58(%r8)
	movq 0x90(%rbp),%r14
	movq %r14,0x60(%r8)
	movq %r10,0x68(%r8)
	movq 0xE0(%rbp),%r14
	movq %r14,0x70(%r8)
	movq %r11,0x78(%r8)
	movq 0xD8(%rbp),%r14
	movq %r14,0x80(%r8)
	movq 0xD0(%rbp),%r14
	movq %r14,0x88(%r8)
	movq 0x160(%rbp),%r14
	movq %r14,0x90(%r8)
	movq 0xC8(%rbp),%r14
	movq %r14,0x98(%r8)
	movq 0x58(%rbp),%r14
	movq %r14,0xA0(%r8)
	movq 0x78(%rbp),%r14
	movq %r14,0xA8(%r8)
	movq 0x80(%rbp),%r14
	movq %r14,0xB0(%r8)
	movq 0x158(%rbp),%r14
	movq %r14,0xB8(%r8)
	movq 0x148(%rbp),%r14
	movq %r14,0xC0(%r8)
	movq %r15,0xD0(%r8)
	movq %r15,0xD8(%r8)
	movq 0xFFFFFFFFFFFFFFF8(%r9),%r15
	shrq $0x1,%r15
	cmpq $0x1EB2,%r15
	je L_495557
L_284385:
	movq 0x0(%r9),%r15
	movq %r15,0x178(%rbp)
	movq (globalObjptr+0x10D88)(%rip),%r15
	movq %r15,0x170(%rbp)
	addq $0x170,%rbp
	leaq (L_284137+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_495557:
L_284136:
	movq 0x0(%r9),%r15
	movq %r15,0x178(%rbp)
	movq (globalObjptr+0x10D88)(%rip),%r15
	movq %r15,0x170(%rbp)
	addq $0x170,%rbp
	leaq (L_284137+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x46D9
L_284137:
	addq $0xFFFFFFFFFFFFFE90,%rbp
	movq 0x70(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1EB2,%r15
	je L_495559
L_284384:
	movq 0x0(%r14),%r15
	movq $0x1,0x128(%rbp)
	movq (globalObjptr+0x10D90)(%rip),%r14
	movq %r14,0x130(%rbp)
L_284149:
	movq %r15,0x178(%rbp)
	movq (globalObjptr+0x10D98)(%rip),%r15
	movq %r15,0x170(%rbp)
	addq $0x170,%rbp
	leaq (L_284150+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_495559:
L_284138:
	movq 0x0(%r14),%r15
	movq $0x1,0x128(%rbp)
	movq (globalObjptr+0x10D90)(%rip),%r14
	movq %r14,0x130(%rbp)
L_284139:
	movq %r15,0x178(%rbp)
	movq (globalObjptr+0x10D98)(%rip),%r15
	movq %r15,0x170(%rbp)
	addq $0x170,%rbp
	leaq (L_284140+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x46DA
L_284150:
	addq $0xFFFFFFFFFFFFFE90,%rbp
	movq 0x130(%rbp),%r15
L_284141:
	movq 0x70(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x1EB2,%r13
	je L_495560
L_284383:
	movq %r15,0x170(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x178(%rbp)
	addq $0x170,%rbp
	leaq (L_284143+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_495560:
L_284142:
	movq %r15,0x170(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x178(%rbp)
	addq $0x170,%rbp
	leaq (L_284143+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x46DA
L_284140:
	addq $0xFFFFFFFFFFFFFE90,%rbp
	movq 0x130(%rbp),%r15
	jmp L_284141
.p2align 0x4
.long 0x46DB
L_284143:
	addq $0xFFFFFFFFFFFFFE90,%rbp
	movq 0x70(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1EB2,%r14
	je L_495561
L_284382:
	movq 0x0(%r15),%r14
	movq %r14,0x178(%rbp)
	movq (globalObjptr+0x10DA0)(%rip),%r15
	movq %r15,0x170(%rbp)
	addq $0x170,%rbp
	leaq (L_284145+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_495561:
L_284144:
	movq 0x0(%r15),%r14
	movq %r14,0x178(%rbp)
	movq (globalObjptr+0x10DA0)(%rip),%r15
	movq %r15,0x170(%rbp)
	addq $0x170,%rbp
	leaq (L_284145+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x46DB
L_284145:
	addq $0xFFFFFFFFFFFFFE90,%rbp
	movq 0x128(%rbp),%r14
	cmpq $0x1,%r14
	je L_495563
L_284146:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq 0x70(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r11
	shrq $0x1,%r11
	cmpq $0x1EB2,%r11
	je L_495562
L_284148:
	movq %r15,0x128(%rbp)
	movq %r13,0x130(%rbp)
	movq 0x0(%r14),%r15
	jmp L_284149
.p2align 0x4
L_495562:
L_284147:
	movq %r15,0x128(%rbp)
	movq %r13,0x130(%rbp)
	movq 0x0(%r14),%r15
	jmp L_284139
.p2align 0x4
L_495563:
L_284151:
	movq 0x70(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0x1EB2,%r13
	je L_495564
L_284381:
	movq 0x0(%r15),%r13
	movq %r13,0x178(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x170(%rbp)
	addq $0x170,%rbp
	leaq (L_284153+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_495564:
L_284152:
	movq 0x0(%r15),%r13
	movq %r13,0x178(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x170(%rbp)
	addq $0x170,%rbp
	leaq (L_284153+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x46D9
L_284153:
	addq $0xFFFFFFFFFFFFFE90,%rbp
	movq (globalObjptr+0x54F8)(%rip),%r14
	movq %r14,0x128(%rbp)
	movq (globalObjptr+0x54C8)(%rip),%r15
L_284154:
	movq 0x8(%r15),%r14
	movq %r14,0x130(%rbp)
	movzbq 0x0(%r15),%rax
	subq $0x1,%rax
	cmpq $0x9,%rax
	ja L_495565
	leaq jumpTable_775(%rip),%rbx
	jmp *(%rbx,%rax,8)
.data
.p2align 0x4
jumpTable_775:
.quad L_495575,L_495574,L_495573,L_495572,L_495571,L_495570,L_495569,L_495568,L_495567,L_495566
.text
.p2align 0x4
L_495565:
L_284155:
	movq (globalObjptr+0x2478)(%rip),%r14
	movq 0x0(%r14),%r15
L_284156:
	movq %r15,0x170(%rbp)
	movq 0x110(%rbp),%r15
	movq %r15,0x178(%rbp)
	addq $0x170,%rbp
	leaq (L_284157+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1197
.p2align 0x4
L_495566:
L_284380:
	movq (globalObjptr+0x2498)(%rip),%r14
	movq 0x0(%r14),%r15
	jmp L_284156
.p2align 0x4
L_495567:
L_284379:
	movq (globalObjptr+0x2448)(%rip),%r14
	movq 0x0(%r14),%r15
	jmp L_284156
.p2align 0x4
L_495568:
L_284378:
	movq (globalObjptr+0x2450)(%rip),%r14
	movq 0x0(%r14),%r15
	jmp L_284156
.p2align 0x4
L_495569:
L_284377:
	movq (globalObjptr+0x2490)(%rip),%r14
	movq 0x0(%r14),%r15
	jmp L_284156
.p2align 0x4
L_495570:
L_284376:
	movq (globalObjptr+0x2458)(%rip),%r14
	movq 0x0(%r14),%r15
	jmp L_284156
.p2align 0x4
L_495571:
L_284375:
	movq (globalObjptr+0x2488)(%rip),%r14
	movq 0x0(%r14),%r15
	jmp L_284156
.p2align 0x4
L_495572:
L_284374:
	movq (globalObjptr+0x2460)(%rip),%r14
	movq 0x0(%r14),%r15
	jmp L_284156
.p2align 0x4
L_495573:
L_284373:
	movq (globalObjptr+0x2468)(%rip),%r14
	movq 0x0(%r14),%r15
	jmp L_284156
.p2align 0x4
L_495574:
L_284372:
	movq (globalObjptr+0x2480)(%rip),%r14
	movq 0x0(%r14),%r15
	jmp L_284156
.p2align 0x4
L_495575:
L_284371:
	movq (globalObjptr+0x2470)(%rip),%r14
	movq 0x0(%r14),%r15
	jmp L_284156
.p2align 0x4
.long 0x46DA
L_284157:
	addq $0xFFFFFFFFFFFFFE90,%rbp
	movq 0x170(%rbp),%r15
	movq %r15,0x150(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_284158
L_284369:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x170,%rbp
	leaq (L_284370+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_284370
.p2align 0x4
.long 0x46E9
L_284370:
	addq $0xFFFFFFFFFFFFFE90,%rbp
L_284158:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x150(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x858)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xA188)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x130(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xFD30)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x170(%rbp)
	addq $0x170,%rbp
	leaq (L_284159+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x46DB
L_284159:
	addq $0xFFFFFFFFFFFFFE90,%rbp
	movq 0x170(%rbp),%r15
	movq %r15,0x130(%rbp)
	movq 0x70(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x1EB2,%r13
	je L_495577
L_284368:
	movq 0x0(%r14),%r13
	movq %r13,0x178(%rbp)
	movq %r15,0x170(%rbp)
	addq $0x170,%rbp
	leaq (L_284161+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_495577:
L_284160:
	movq 0x0(%r14),%r13
	movq %r13,0x178(%rbp)
	movq %r15,0x170(%rbp)
	addq $0x170,%rbp
	leaq (L_284161+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x46DB
L_284161:
	addq $0xFFFFFFFFFFFFFE90,%rbp
	movq 0x128(%rbp),%r14
	cmpq $0x1,%r14
	je L_495578
L_284162:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x128(%rbp)
	jmp L_284154
.p2align 0x4
L_495578:
L_284163:
	movq (globalObjptr+0x5500)(%rip),%r15
	movq %r15,0x170(%rbp)
	addq $0x170,%rbp
	leaq (L_284164+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x46D9
L_284164:
	addq $0xFFFFFFFFFFFFFE90,%rbp
	movq 0x170(%rbp),%r15
	movq %r15,0x128(%rbp)
	movq 0x70(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x1EB2,%r13
	je L_495579
L_284367:
	movq 0x0(%r14),%r13
	movq %r13,0x178(%rbp)
	movq %r15,0x170(%rbp)
	addq $0x170,%rbp
	leaq (L_284166+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_495579:
L_284165:
	movq 0x0(%r14),%r13
	movq %r13,0x178(%rbp)
	movq %r15,0x170(%rbp)
	addq $0x170,%rbp
	leaq (L_284166+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x46D9
L_284166:
	addq $0xFFFFFFFFFFFFFE90,%rbp
	movq (globalObjptr+0xA90)(%rip),%r14
	movb $0xB,%dl
	movq (globalObjptr+0xAFD8)(%rip),%r15
L_284167:
	movq %r14,0x128(%rbp)
	movb %dl,0x44(%rbp)
	movq %r15,0x130(%rbp)
	movq (globalObjptr+0x2548)(%rip),%r14
x_945:
	movl 0x0(%r14),%r15d
	cmpl $0x0,%r15d
	jl L_495580
L_284168:
	movl %r15d,0x170(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x178(%rbp)
	addq $0x170,%rbp
	leaq (L_284169+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_495580:
L_284361:
	negl %r15d
	jo L_284067
L_284362:
	movl %r15d,0x170(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x178(%rbp)
	addq $0x170,%rbp
	leaq (L_284363+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0x46DA
L_284169:
	addq $0xFFFFFFFFFFFFFE90,%rbp
	movq 0x170(%rbp),%r15
	movq %r15,0x150(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_284170
L_284359:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x170,%rbp
	leaq (L_284360+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_284360
.p2align 0x4
.long 0x46E9
L_284360:
	addq $0xFFFFFFFFFFFFFE90,%rbp
L_284170:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x150(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x1A88)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xA308)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x130(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq (globalObjptr+0x10DA8)(%rip),%r15
	movq %r15,0x0(%r13)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq %r14,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xAF10)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x170(%rbp)
	addq $0x170,%rbp
	leaq (L_284171+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x46DA
L_284363:
	addq $0xFFFFFFFFFFFFFE90,%rbp
	movq 0x170(%rbp),%r15
	movq %r15,0x150(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_284364
L_284365:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x170,%rbp
	leaq (L_284366+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_284366
.p2align 0x4
.long 0x46E9
L_284366:
	addq $0xFFFFFFFFFFFFFE90,%rbp
L_284364:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x150(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xD3C0)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x170(%rbp)
	addq $0x170,%rbp
	leaq (L_284169+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x46DA
L_284171:
	addq $0xFFFFFFFFFFFFFE90,%rbp
	movq 0x170(%rbp),%r15
	movq %r15,0x150(%rbp)
	movq 0x70(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x1EB2,%r13
	je L_495584
L_284358:
	movq 0x0(%r14),%r13
	movq %r13,0x178(%rbp)
	movq %r15,0x170(%rbp)
	addq $0x170,%rbp
	leaq (L_284173+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_495584:
L_284172:
	movq 0x0(%r14),%r13
	movq %r13,0x178(%rbp)
	movq %r15,0x170(%rbp)
	addq $0x170,%rbp
	leaq (L_284173+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x46DA
L_284173:
	addq $0xFFFFFFFFFFFFFE90,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_284174
L_284356:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x170,%rbp
	leaq (L_284357+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_284357
.p2align 0x4
.long 0x46E5
L_284357:
	addq $0xFFFFFFFFFFFFFE90,%rbp
L_284174:
	movzbq 0x44(%rbp),%rax
	subq $0x1,%rax
	cmpq $0xA,%rax
	ja L_495585
	leaq jumpTable_776(%rip),%rbx
	jmp *(%rbx,%rax,8)
.data
.p2align 0x4
jumpTable_776:
.quad L_495596,L_495595,L_495594,L_495593,L_495592,L_495591,L_495590,L_495589,L_495588,L_495587,L_495586
.text
.p2align 0x4
L_495585:
L_284175:
	movq (globalObjptr+0xDDC8)(%rip),%r15
L_284176:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xB00)(%rip),%r15
	movq %r15,0x8(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0x10DB0)(%rip),%r14
	movq %r14,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x130(%rbp),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0xAF10)(%rip),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x170(%rbp)
	addq $0x170,%rbp
	leaq (L_284177+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_495586:
L_284355:
	movq (globalObjptr+0xDDD8)(%rip),%r15
	jmp L_284176
.p2align 0x4
L_495587:
L_284354:
	movq (globalObjptr+0x10DE0)(%rip),%r15
	jmp L_284176
.p2align 0x4
L_495588:
L_284353:
	movq (globalObjptr+0x10DD8)(%rip),%r15
	jmp L_284176
.p2align 0x4
L_495589:
L_284352:
	movq (globalObjptr+0x10DD0)(%rip),%r15
	jmp L_284176
.p2align 0x4
L_495590:
L_284351:
	movq (globalObjptr+0x10DC8)(%rip),%r15
	jmp L_284176
.p2align 0x4
L_495591:
L_284350:
	movq (globalObjptr+0xDDD0)(%rip),%r15
	jmp L_284176
.p2align 0x4
L_495592:
L_284349:
	movq (globalObjptr+0xDDE8)(%rip),%r15
	jmp L_284176
.p2align 0x4
L_495593:
L_284348:
	movq (globalObjptr+0xDDE0)(%rip),%r15
	jmp L_284176
.p2align 0x4
L_495594:
L_284347:
	movq (globalObjptr+0xDDA0)(%rip),%r15
	jmp L_284176
.p2align 0x4
L_495595:
L_284346:
	movq (globalObjptr+0xDDB8)(%rip),%r15
	jmp L_284176
.p2align 0x4
L_495596:
L_284345:
	movq (globalObjptr+0xDDC0)(%rip),%r15
	jmp L_284176
.p2align 0x4
.long 0x46DB
L_284177:
	addq $0xFFFFFFFFFFFFFE90,%rbp
	movq 0x170(%rbp),%r15
	movq %r15,0x130(%rbp)
	movq 0x70(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x1EB2,%r13
	je L_495598
L_284344:
	movq 0x0(%r14),%r13
	movq %r13,0x178(%rbp)
	movq %r15,0x170(%rbp)
	addq $0x170,%rbp
	leaq (L_284179+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_495598:
L_284178:
	movq 0x0(%r14),%r13
	movq %r13,0x178(%rbp)
	movq %r15,0x170(%rbp)
	addq $0x170,%rbp
	leaq (L_284179+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x46DB
L_284179:
	addq $0xFFFFFFFFFFFFFE90,%rbp
	movq 0x128(%rbp),%r15
	cmpq $0x1,%r15
	je L_495611
L_284180:
	movq 0x8(%r15),%r14
	movb 0x0(%r15),%r13b
	movzbq %r13b,%rax
	subq $0x1,%rax
	cmpq $0xA,%rax
	ja L_495599
	leaq jumpTable_777(%rip),%rbx
	jmp *(%rbx,%rax,8)
.data
.p2align 0x4
jumpTable_777:
.quad L_495610,L_495609,L_495608,L_495607,L_495606,L_495605,L_495604,L_495603,L_495602,L_495601,L_495600
.text
.p2align 0x4
L_495599:
L_284181:
	movq %r14,0x128(%rbp)
	movb %r13b,0x44(%rbp)
	movq (globalObjptr+0xDFA8)(%rip),%r15
	movq %r15,0x130(%rbp)
	movq (globalObjptr+0x2518)(%rip),%r14
	jmp x_945
.p2align 0x4
L_495600:
L_284192:
	movq (globalObjptr+0xAFD8)(%rip),%r15
	movb %r13b,%dl
	jmp L_284167
.p2align 0x4
L_495601:
L_284191:
	movq %r14,0x128(%rbp)
	movb %r13b,0x44(%rbp)
	movq (globalObjptr+0xDFD0)(%rip),%r15
	movq %r15,0x130(%rbp)
	movq (globalObjptr+0x24F8)(%rip),%r14
	jmp x_945
.p2align 0x4
L_495602:
L_284190:
	movq %r14,0x128(%rbp)
	movb %r13b,0x44(%rbp)
	movq (globalObjptr+0xDFC8)(%rip),%r15
	movq %r15,0x130(%rbp)
	movq (globalObjptr+0x2540)(%rip),%r14
	jmp x_945
.p2align 0x4
L_495603:
L_284189:
	movq %r14,0x128(%rbp)
	movb %r13b,0x44(%rbp)
	movq (globalObjptr+0xDFC0)(%rip),%r15
	movq %r15,0x130(%rbp)
	movq (globalObjptr+0x2550)(%rip),%r14
	jmp x_945
.p2align 0x4
L_495604:
L_284188:
	movq %r14,0x128(%rbp)
	movb %r13b,0x44(%rbp)
	movq (globalObjptr+0xDFB8)(%rip),%r15
	movq %r15,0x130(%rbp)
	movq (globalObjptr+0x2538)(%rip),%r14
	jmp x_945
.p2align 0x4
L_495605:
L_284187:
	movq %r14,0x128(%rbp)
	movb %r13b,0x44(%rbp)
	movq (globalObjptr+0xAC88)(%rip),%r15
	movq %r15,0x130(%rbp)
	movq (globalObjptr+0x2500)(%rip),%r14
	jmp x_945
.p2align 0x4
L_495606:
L_284186:
	movq %r14,0x128(%rbp)
	movb %r13b,0x44(%rbp)
	movq (globalObjptr+0xD080)(%rip),%r15
	movq %r15,0x130(%rbp)
	movq (globalObjptr+0x2530)(%rip),%r14
	jmp x_945
.p2align 0x4
L_495607:
L_284185:
	movq %r14,0x128(%rbp)
	movb %r13b,0x44(%rbp)
	movq (globalObjptr+0xD088)(%rip),%r15
	movq %r15,0x130(%rbp)
	movq (globalObjptr+0x2508)(%rip),%r14
	jmp x_945
.p2align 0x4
L_495608:
L_284184:
	movq %r14,0x128(%rbp)
	movb %r13b,0x44(%rbp)
	movq (globalObjptr+0xCE30)(%rip),%r15
	movq %r15,0x130(%rbp)
	movq (globalObjptr+0x2528)(%rip),%r14
	jmp x_945
.p2align 0x4
L_495609:
L_284183:
	movq %r14,0x128(%rbp)
	movb %r13b,0x44(%rbp)
	movq (globalObjptr+0xDFB0)(%rip),%r15
	movq %r15,0x130(%rbp)
	movq (globalObjptr+0x2510)(%rip),%r14
	jmp x_945
.p2align 0x4
L_495610:
L_284182:
	movq %r14,0x128(%rbp)
	movb %r13b,0x44(%rbp)
	movq (globalObjptr+0xD0F0)(%rip),%r15
	movq %r15,0x130(%rbp)
	movq (globalObjptr+0x2520)(%rip),%r14
	jmp x_945
.p2align 0x4
L_495611:
L_284193:
	movq (globalObjptr+0x2558)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl $0x0,%r13d
	jl L_495612
L_284194:
	movl %r13d,0x170(%rbp)
	movq 0x20(%rbp),%r14
	movq %r14,0x178(%rbp)
	addq $0x170,%rbp
	leaq (L_284195+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
L_495612:
L_284338:
	negl %r13d
	jo L_284067
L_284339:
	movl %r13d,0x170(%rbp)
	movq 0x20(%rbp),%r14
	movq %r14,0x178(%rbp)
	addq $0x170,%rbp
	leaq (L_284340+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0x46D9
L_284195:
	addq $0xFFFFFFFFFFFFFE90,%rbp
	movq 0x170(%rbp),%r15
	movq %r15,0x128(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_284196
L_284336:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x170,%rbp
	leaq (L_284337+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_284337
.p2align 0x4
.long 0x46E4
L_284337:
	addq $0xFFFFFFFFFFFFFE90,%rbp
L_284196:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x128(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x1A88)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x10DB8)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0xAF10)(%rip),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x170(%rbp)
	addq $0x170,%rbp
	leaq (L_284197+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x46D9
L_284340:
	addq $0xFFFFFFFFFFFFFE90,%rbp
	movq 0x170(%rbp),%r15
	movq %r15,0x128(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_284341
L_284342:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x170,%rbp
	leaq (L_284343+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_284343
.p2align 0x4
.long 0x46E4
L_284343:
	addq $0xFFFFFFFFFFFFFE90,%rbp
L_284341:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x128(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xD3C0)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x170(%rbp)
	addq $0x170,%rbp
	leaq (L_284195+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x46D9
L_284197:
	addq $0xFFFFFFFFFFFFFE90,%rbp
	movq 0x170(%rbp),%r15
	movq %r15,0x128(%rbp)
	movq 0x70(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x1EB2,%r13
	je L_495616
L_284335:
	movq 0x0(%r14),%r13
	movq %r13,0x178(%rbp)
	movq %r15,0x170(%rbp)
	addq $0x170,%rbp
	leaq (L_284199+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_495616:
L_284198:
	movq 0x0(%r14),%r13
	movq %r13,0x178(%rbp)
	movq %r15,0x170(%rbp)
	addq $0x170,%rbp
	leaq (L_284199+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x46D9
L_284199:
	addq $0xFFFFFFFFFFFFFE90,%rbp
	movl 0x118(%rbp),%r15d
	movl %r15d,%r14d
	decl %r14d
	movl %r14d,0x44(%rbp)
	movslq %r15d,%rdx
	movq %rdx,0x128(%rbp)
	cmpq $0x7FFFFFFF,%rdx
	ja L_284334
L_284200:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xDB3,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x170,%rbp
	leaq (L_284201+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_284201
.p2align 0x4
.long 0x46DC
L_284201:
	addq $0xFFFFFFFFFFFFFE90,%rbp
	movq %rax,0x130(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_3405:
	cmpq 0x128(%rbp),%r15
	jnl L_495617
L_284332:
	movq 0x130(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_3405
.p2align 0x4
L_495617:
L_284202:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_284203
L_284330:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x170,%rbp
	leaq (L_284331+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_284331
.p2align 0x4
.long 0x46E8
L_284331:
	addq $0xFFFFFFFFFFFFFE90,%rbp
L_284203:
	movq $0x4B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x4B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movl 0x44(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0xDB5,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x10(%r13)
	movq %r15,0x18(%r13)
	addq $0x28,%r12
	movb $0x0,%r15b
	movzbl %r15b,%r14d
	movl %r14d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq 0x130(%rbp),%r15
	movq %r15,0x8(%r13)
	movq $0x3273,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x10(%r15)
	addq $0x20,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x170(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x178(%rbp)
	addq $0x170,%rbp
	leaq (L_284204+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_7
.p2align 0x4
.long 0x46D9
L_284204:
	addq $0xFFFFFFFFFFFFFE90,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_284205
L_284328:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x170,%rbp
	leaq (L_284329+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_284329
.p2align 0x4
.long 0x46DC
L_284329:
	addq $0xFFFFFFFFFFFFFE90,%rbp
L_284205:
	movq $0x71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x128(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x89,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq %r15,0x8(%r14)
	movq $0x327B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x140(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x170(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x178(%rbp)
	addq $0x170,%rbp
	leaq (L_284206+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_7
.p2align 0x4
.long 0x46DB
L_284206:
	addq $0xFFFFFFFFFFFFFE90,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_284207
L_284326:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x170,%rbp
	leaq (L_284327+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_284327
.p2align 0x4
.long 0x46E4
L_284327:
	addq $0xFFFFFFFFFFFFFE90,%rbp
L_284207:
	movq 0x120(%rbp),%r14
	cmpq $0x1,%r14
	je L_495621
L_284208:
	movq 0x8(%r14),%r13
	movq %r13,0x130(%rbp)
	movq 0x0(%r14),%r15
L_284209:
	movq 0x8(%r15),%r14
	movq %r14,0x150(%rbp)
	movq 0x10(%r14),%r15
	movq %r15,0x168(%rbp)
	movq %r15,0x178(%rbp)
	movq 0x128(%rbp),%r15
	movq %r15,0x180(%rbp)
	addq $0x178,%rbp
	leaq (L_284210+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_2
.p2align 0x4
L_495621:
L_284216:
	movq $0x3271,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xC8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x170(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x178(%rbp)
	addq $0x170,%rbp
	leaq (L_284217+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_7
.p2align 0x4
.long 0x46DD
L_284210:
	addq $0xFFFFFFFFFFFFFE88,%rbp
	movq 0x178(%rbp),%r15
	movq %r15,0x170(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_284211
L_284323:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x180,%rbp
	leaq (L_284324+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_284324
.p2align 0x4
.long 0x46E7
L_284324:
	addq $0xFFFFFFFFFFFFFE80,%rbp
L_284211:
	movq 0x170(%rbp),%r15
	cmpq $0x1,%r15
	je L_495625
L_284212:
x_946:
	movl 0x0(%r15),%r14d
	testl %r14d,%r14d
	jnz L_495624
L_284213:
	movq 0x130(%rbp),%r14
	cmpq $0x1,%r14
	je L_284216
L_284214:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x130(%rbp)
	jmp L_284209
.p2align 0x4
L_495624:
L_284301:
	movq 0x150(%rbp),%r15
	movq %r15,0x170(%rbp)
	movq 0x148(%rbp),%r15
	movq %r15,0x178(%rbp)
	addq $0x170,%rbp
	leaq (L_284302+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1332
.p2align 0x4
L_495625:
L_284322:
	movq $0x53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x1953,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq 0x128(%rbp),%r11
	movq %r11,0x0(%r13)
	movq %r14,0x8(%r13)
	movq 0x168(%rbp),%r11
	movq 0x0(%r11),%r10
	movq $0x28DF,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r13,0x0(%r9)
	movq %r10,0x8(%r9)
	addq $0x18,%r12
	movq %r11,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r9,0x0(%r11)
	xchgq %r14,%r15
	jmp x_946
.p2align 0x4
.long 0x46D9
L_284217:
	addq $0xFFFFFFFFFFFFFE90,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x170(%rbp)
	movq 0x148(%rbp),%r15
	movq %r15,0x178(%rbp)
	addq $0x170,%rbp
	leaq (L_284218+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1332
.p2align 0x4
.long 0x46DA
L_284302:
	addq $0xFFFFFFFFFFFFFE90,%rbp
	movq 0x170(%rbp),%r15
	movq %r15,0x150(%rbp)
	movq 0x70(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1EB2,%r14
	je L_495627
L_284321:
	movq 0x0(%r15),%r14
	movq %r14,0x178(%rbp)
	movq (globalObjptr+0x10DF8)(%rip),%r15
	movq %r15,0x170(%rbp)
	addq $0x170,%rbp
	leaq (L_284304+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_495627:
L_284303:
	movq 0x0(%r15),%r14
	movq %r14,0x178(%rbp)
	movq (globalObjptr+0x10DF8)(%rip),%r15
	movq %r15,0x170(%rbp)
	addq $0x170,%rbp
	leaq (L_284304+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x46D9
L_284218:
	addq $0xFFFFFFFFFFFFFE90,%rbp
	movq 0x170(%rbp),%r15
	movq %r15,0x128(%rbp)
	movq 0x70(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1EB2,%r14
	je L_495628
L_284300:
	movq 0x0(%r15),%r14
	movq %r14,0x178(%rbp)
	movq (globalObjptr+0x10DC0)(%rip),%r15
	movq %r15,0x170(%rbp)
	addq $0x170,%rbp
	leaq (L_284220+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_495628:
L_284219:
	movq 0x0(%r15),%r14
	movq %r14,0x178(%rbp)
	movq (globalObjptr+0x10DC0)(%rip),%r15
	movq %r15,0x170(%rbp)
	addq $0x170,%rbp
	leaq (L_284220+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x46E6
L_284304:
	addq $0xFFFFFFFFFFFFFE90,%rbp
	movq 0x70(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1EB2,%r14
	je L_495629
L_284320:
	movq 0x0(%r15),%r14
	movq %r14,0x178(%rbp)
	movq (globalObjptr+0xED68)(%rip),%r15
	movq %r15,0x170(%rbp)
	addq $0x170,%rbp
	leaq (L_284306+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_495629:
L_284305:
	movq 0x0(%r15),%r14
	movq %r14,0x178(%rbp)
	movq (globalObjptr+0xED68)(%rip),%r15
	movq %r15,0x170(%rbp)
	addq $0x170,%rbp
	leaq (L_284306+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x46DB
L_284220:
	addq $0xFFFFFFFFFFFFFE90,%rbp
	movq 0x70(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1EB2,%r14
	je L_495630
L_284299:
	movq 0x0(%r15),%r14
	movq %r14,0x178(%rbp)
	movq (globalObjptr+0xED68)(%rip),%r15
	movq %r15,0x170(%rbp)
	addq $0x170,%rbp
	leaq (L_284222+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_495630:
L_284221:
	movq 0x0(%r15),%r14
	movq %r14,0x178(%rbp)
	movq (globalObjptr+0xED68)(%rip),%r15
	movq %r15,0x170(%rbp)
	addq $0x170,%rbp
	leaq (L_284222+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x46E6
L_284306:
	addq $0xFFFFFFFFFFFFFE90,%rbp
	movq 0x70(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1EB2,%r14
	je L_495631
L_284319:
	movq 0x0(%r15),%r14
	movq %r14,0x178(%rbp)
	movq 0x150(%rbp),%r15
	movq %r15,0x170(%rbp)
	addq $0x170,%rbp
	leaq (loop_3408+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_495631:
L_284307:
	movq 0x0(%r15),%r14
	movq %r14,0x178(%rbp)
	movq 0x150(%rbp),%r15
	movq %r15,0x170(%rbp)
	addq $0x170,%rbp
	leaq (loop_3408+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x46DB
L_284222:
	addq $0xFFFFFFFFFFFFFE90,%rbp
	movq 0x70(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1EB2,%r14
	je L_495632
L_284298:
	movq 0x0(%r15),%r14
	movq %r14,0x178(%rbp)
	movq 0x128(%rbp),%r15
	movq %r15,0x170(%rbp)
	addq $0x170,%rbp
	leaq (loop_3406+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_495632:
L_284223:
	movq 0x0(%r15),%r14
	movq %r14,0x178(%rbp)
	movq 0x128(%rbp),%r15
	movq %r15,0x170(%rbp)
	addq $0x170,%rbp
	leaq (loop_3406+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x46DA
loop_3408:
	addq $0xFFFFFFFFFFFFFE90,%rbp
	movq 0x70(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1EB2,%r14
	je L_495633
L_284318:
	movq 0x0(%r15),%r14
	movq %r14,0x178(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0x170(%rbp)
	addq $0x170,%rbp
	leaq (L_284309+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_495633:
L_284308:
	movq 0x0(%r15),%r14
	movq %r14,0x178(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0x170(%rbp)
	addq $0x170,%rbp
	leaq (L_284309+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x46D9
loop_3406:
	addq $0xFFFFFFFFFFFFFE90,%rbp
	movq 0x70(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1EB2,%r14
	je L_495634
L_284297:
	movq 0x0(%r15),%r14
	movq %r14,0x178(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0x170(%rbp)
	addq $0x170,%rbp
	leaq (L_284225+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_495634:
L_284224:
	movq 0x0(%r15),%r14
	movq %r14,0x178(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0x170(%rbp)
	addq $0x170,%rbp
	leaq (L_284225+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x46DA
L_284309:
	addq $0xFFFFFFFFFFFFFE90,%rbp
	movq 0x70(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1EB2,%r14
	je L_495635
L_284317:
	movq 0x0(%r15),%r14
	movq %r14,0x178(%rbp)
	movq (globalObjptr+0xA1A8)(%rip),%r15
	movq %r15,0x170(%rbp)
	addq $0x170,%rbp
	leaq (L_284311+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_495635:
L_284310:
	movq 0x0(%r15),%r14
	movq %r14,0x178(%rbp)
	movq (globalObjptr+0xA1A8)(%rip),%r15
	movq %r15,0x170(%rbp)
	addq $0x170,%rbp
	leaq (L_284311+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x46D9
L_284225:
	addq $0xFFFFFFFFFFFFFE90,%rbp
	movq 0x70(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1EB2,%r14
	je L_495636
L_284296:
	movq 0x0(%r15),%r14
	movq %r14,0x178(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x170(%rbp)
	addq $0x170,%rbp
	leaq (L_284227+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_495636:
L_284226:
	movq 0x0(%r15),%r14
	movq %r14,0x178(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x170(%rbp)
	addq $0x170,%rbp
	leaq (L_284227+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x46DA
L_284311:
	addq $0xFFFFFFFFFFFFFE90,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_284312
L_284315:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x170,%rbp
	leaq (L_284316+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_284316
.p2align 0x4
.long 0x46E5
L_284316:
	addq $0xFFFFFFFFFFFFFE90,%rbp
L_284312:
	movq 0x130(%rbp),%r14
	cmpq $0x1,%r14
	je L_284216
L_284313:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x130(%rbp)
	jmp L_284209
.p2align 0x4
.long 0x46D9
L_284227:
	addq $0xFFFFFFFFFFFFFE90,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_284228
L_284294:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x170,%rbp
	leaq (L_284295+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_284295
.p2align 0x4
.long 0x46DC
L_284295:
	addq $0xFFFFFFFFFFFFFE90,%rbp
L_284228:
	movq (globalObjptr+0xA90)(%rip),%r15
	movb $0xB,%dl
	movq (globalObjptr+0xAFD8)(%rip),%r14
L_284229:
	movq %r15,0x128(%rbp)
	movb %dl,0x44(%rbp)
	movq (globalObjptr+0xDDD8)(%rip),%r15
L_284230:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x18,%r12
	movq (globalObjptr+0x5508)(%rip),%r15
	movq %r15,0x8(%r13)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0xA188)(%rip),%r13
	movq %r13,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0xEDD8)(%rip),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x170(%rbp)
	addq $0x170,%rbp
	leaq (L_284231+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x46DB
L_284231:
	addq $0xFFFFFFFFFFFFFE90,%rbp
	movq 0x170(%rbp),%r15
	movq %r15,0x130(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_284232
L_284292:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x170,%rbp
	leaq (L_284293+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_284293
.p2align 0x4
.long 0x46E5
L_284293:
	addq $0xFFFFFFFFFFFFFE90,%rbp
L_284232:
	movq 0x48(%rbp),%r15
	movq 0x58(%r15),%r14
	movq 0x50(%r15),%r13
	movq 0x48(%r15),%r11
	movq 0x40(%r15),%r10
	movq 0x38(%r15),%r9
	movq 0x30(%r15),%r8
	movq 0x28(%r15),%rsp
	movq 0x20(%r15),%rsi
	movq 0x18(%r15),%rdi
	movq 0x10(%r15),%rdx
	movq 0x8(%r15),%rcx
	movq 0x0(%r15),%rbx
	movzbq 0x44(%rbp),%rax
	subq $0x1,%rax
	cmpq $0xA,%rax
	ja L_495640
	leaq jumpTable_778(%rip),%r15
	jmp *(%r15,%rax,8)
.data
.p2align 0x4
jumpTable_778:
.quad L_495651,L_495650,L_495649,L_495648,L_495647,L_495646,L_495645,L_495644,L_495643,x_2159,L_495642
.text
.p2align 0x4
L_495640:
L_284233:
	movq %r8,%r15
x_947:
	movl 0x0(%r15),%r14d
	incl %r14d
	jo L_284067
L_284234:
	movl %r14d,0x178(%rbp)
	movq $0x3CD7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x130(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0x170(%rbp)
	movl $0x0,0x17C(%rbp)
	addq $0x170,%rbp
	leaq (L_284235+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fold_0
.p2align 0x4
L_495642:
L_284291:
	movq %rbx,%r15
	jmp x_947
.p2align 0x4
x_2159:
	movq %r14,%r15
	jmp x_947
.p2align 0x4
L_495643:
L_284289:
	movq %rcx,%r15
	jmp x_947
.p2align 0x4
L_495644:
L_284288:
	movq %r13,%r15
	jmp x_947
.p2align 0x4
L_495645:
L_284287:
	movq %rdx,%r15
	jmp x_947
.p2align 0x4
L_495646:
L_284286:
	movq %r11,%r15
	jmp x_947
.p2align 0x4
L_495647:
L_284285:
	movq %rdi,%r15
	jmp x_947
.p2align 0x4
L_495648:
L_284284:
	movq %r10,%r15
	jmp x_947
.p2align 0x4
L_495649:
L_284283:
	movq %rsi,%r15
	jmp x_947
.p2align 0x4
L_495650:
L_284282:
	movq %r9,%r15
	jmp x_947
.p2align 0x4
L_495651:
L_284281:
	movq %rsp,%r15
	jmp x_947
.p2align 0x4
.long 0x46DB
L_284235:
	addq $0xFFFFFFFFFFFFFE90,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_284236
L_284279:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x170,%rbp
	leaq (L_284280+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_284280
.p2align 0x4
.long 0x46E4
L_284280:
	addq $0xFFFFFFFFFFFFFE90,%rbp
L_284236:
	movq 0x128(%rbp),%r15
	cmpq $0x1,%r15
	je L_495665
L_284237:
	movq 0x8(%r15),%r14
	movb 0x0(%r15),%r13b
	movzbq %r13b,%rax
	subq $0x1,%rax
	cmpq $0xA,%rax
	ja L_495653
	leaq jumpTable_779(%rip),%rbx
	jmp *(%rbx,%rax,8)
.data
.p2align 0x4
jumpTable_779:
.quad L_495664,L_495663,L_495662,L_495661,L_495660,L_495659,L_495658,L_495657,L_495656,L_495655,L_495654
.text
.p2align 0x4
L_495653:
L_284238:
	movq %r14,0x128(%rbp)
	movb %r13b,0x44(%rbp)
	movq (globalObjptr+0xDFA8)(%rip),%r14
	movq (globalObjptr+0xDDC8)(%rip),%r15
	jmp L_284230
.p2align 0x4
L_495654:
L_284249:
	movq (globalObjptr+0xAFD8)(%rip),%r11
	movq %r14,%r15
	movq %r11,%r14
	movb %r13b,%dl
	jmp L_284229
.p2align 0x4
L_495655:
L_284248:
	movq %r14,0x128(%rbp)
	movb %r13b,0x44(%rbp)
	movq (globalObjptr+0xDFD0)(%rip),%r14
	movq (globalObjptr+0x10DE0)(%rip),%r15
	jmp L_284230
.p2align 0x4
L_495656:
L_284247:
	movq %r14,0x128(%rbp)
	movb %r13b,0x44(%rbp)
	movq (globalObjptr+0xDFC8)(%rip),%r14
	movq (globalObjptr+0x10DD8)(%rip),%r15
	jmp L_284230
.p2align 0x4
L_495657:
L_284246:
	movq %r14,0x128(%rbp)
	movb %r13b,0x44(%rbp)
	movq (globalObjptr+0xDFC0)(%rip),%r14
	movq (globalObjptr+0x10DD0)(%rip),%r15
	jmp L_284230
.p2align 0x4
L_495658:
L_284245:
	movq %r14,0x128(%rbp)
	movb %r13b,0x44(%rbp)
	movq (globalObjptr+0xDFB8)(%rip),%r14
	movq (globalObjptr+0x10DC8)(%rip),%r15
	jmp L_284230
.p2align 0x4
L_495659:
L_284244:
	movq %r14,0x128(%rbp)
	movb %r13b,0x44(%rbp)
	movq (globalObjptr+0xAC88)(%rip),%r14
	movq (globalObjptr+0xDDD0)(%rip),%r15
	jmp L_284230
.p2align 0x4
L_495660:
L_284243:
	movq %r14,0x128(%rbp)
	movb %r13b,0x44(%rbp)
	movq (globalObjptr+0xD080)(%rip),%r14
	movq (globalObjptr+0xDDE8)(%rip),%r15
	jmp L_284230
.p2align 0x4
L_495661:
L_284242:
	movq %r14,0x128(%rbp)
	movb %r13b,0x44(%rbp)
	movq (globalObjptr+0xD088)(%rip),%r14
	movq (globalObjptr+0xDDE0)(%rip),%r15
	jmp L_284230
.p2align 0x4
L_495662:
L_284241:
	movq %r14,0x128(%rbp)
	movb %r13b,0x44(%rbp)
	movq (globalObjptr+0xCE30)(%rip),%r14
	movq (globalObjptr+0xDDA0)(%rip),%r15
	jmp L_284230
.p2align 0x4
L_495663:
L_284240:
	movq %r14,0x128(%rbp)
	movb %r13b,0x44(%rbp)
	movq (globalObjptr+0xDFB0)(%rip),%r14
	movq (globalObjptr+0xDDB8)(%rip),%r15
	jmp L_284230
.p2align 0x4
L_495664:
L_284239:
	movq %r14,0x128(%rbp)
	movb %r13b,0x44(%rbp)
	movq (globalObjptr+0xD0F0)(%rip),%r14
	movq (globalObjptr+0xDDC0)(%rip),%r15
	jmp L_284230
.p2align 0x4
L_495665:
L_284250:
	movq 0x50(%rbp),%r14
	movq %r14,0x170(%rbp)
	movq 0x148(%rbp),%r14
	movq %r14,0x178(%rbp)
	addq $0x170,%rbp
	leaq (L_284251+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1332
.p2align 0x4
.long 0x46DE
L_284251:
	addq $0xFFFFFFFFFFFFFE90,%rbp
	movq 0x170(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x70(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1EB2,%r14
	je L_495667
L_284278:
	movq 0x0(%r15),%r14
	movq %r14,0x178(%rbp)
	movq (globalObjptr+0x10DE8)(%rip),%r15
	movq %r15,0x170(%rbp)
	addq $0x170,%rbp
	leaq (L_284253+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_495667:
L_284252:
	movq 0x0(%r15),%r14
	movq %r14,0x178(%rbp)
	movq (globalObjptr+0x10DE8)(%rip),%r15
	movq %r15,0x170(%rbp)
	addq $0x170,%rbp
	leaq (L_284253+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x46DF
L_284253:
	addq $0xFFFFFFFFFFFFFE90,%rbp
	movq 0x70(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1EB2,%r14
	je L_495668
L_284277:
	movq 0x0(%r15),%r14
	movq %r14,0x178(%rbp)
	movq (globalObjptr+0xED68)(%rip),%r15
	movq %r15,0x170(%rbp)
	addq $0x170,%rbp
	leaq (L_284255+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_495668:
L_284254:
	movq 0x0(%r15),%r14
	movq %r14,0x178(%rbp)
	movq (globalObjptr+0xED68)(%rip),%r15
	movq %r15,0x170(%rbp)
	addq $0x170,%rbp
	leaq (L_284255+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x46DF
L_284255:
	addq $0xFFFFFFFFFFFFFE90,%rbp
	movq 0x70(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1EB2,%r14
	je L_495669
L_284276:
	movq 0x0(%r15),%r14
	movq %r14,0x178(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x170(%rbp)
	addq $0x170,%rbp
	leaq (loop_3407+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_495669:
L_284256:
	movq 0x0(%r15),%r14
	movq %r14,0x178(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x170(%rbp)
	addq $0x170,%rbp
	leaq (loop_3407+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x46DE
loop_3407:
	addq $0xFFFFFFFFFFFFFE90,%rbp
	movq 0x70(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1EB2,%r14
	je L_495670
L_284275:
	movq 0x0(%r15),%r14
	movq %r14,0x178(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0x170(%rbp)
	addq $0x170,%rbp
	leaq (L_284258+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_495670:
L_284257:
	movq 0x0(%r15),%r14
	movq %r14,0x178(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0x170(%rbp)
	addq $0x170,%rbp
	leaq (L_284258+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x46DE
L_284258:
	addq $0xFFFFFFFFFFFFFE90,%rbp
	movq 0x70(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1EB2,%r14
	je L_495671
L_284274:
	movq 0x0(%r15),%r14
	movq %r14,0x178(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x170(%rbp)
	addq $0x170,%rbp
	leaq (L_284260+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_495671:
L_284259:
	movq 0x0(%r15),%r14
	movq %r14,0x178(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x170(%rbp)
	addq $0x170,%rbp
	leaq (L_284260+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x46DE
L_284260:
	addq $0xFFFFFFFFFFFFFE90,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_284261
L_284272:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x170,%rbp
	leaq (L_284273+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_284273
.p2align 0x4
.long 0x46E3
L_284273:
	addq $0xFFFFFFFFFFFFFE90,%rbp
L_284261:
	movq $0x327D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0xA0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x158(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x70(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0x170(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x178(%rbp)
	addq $0x170,%rbp
	leaq (L_284262+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_7
.p2align 0x4
.long 0x46E0
L_284262:
	addq $0xFFFFFFFFFFFFFE90,%rbp
	movq 0x70(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1EB2,%r14
	je L_495673
L_284271:
	movq 0x0(%r15),%r14
	movq %r14,0x178(%rbp)
	movq (globalObjptr+0x10DF0)(%rip),%r15
	movq %r15,0x170(%rbp)
	addq $0x170,%rbp
	leaq (L_284264+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
L_495673:
L_284263:
	movq 0x0(%r15),%r14
	movq %r14,0x178(%rbp)
	movq (globalObjptr+0x10DF0)(%rip),%r15
	movq %r15,0x170(%rbp)
	addq $0x170,%rbp
	leaq (L_284264+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x46E1
L_284264:
	addq $0xFFFFFFFFFFFFFE90,%rbp
	movq 0x98(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x150E,%r14
	je L_495674
L_284270:
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x178(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x170(%rbp)
	addq $0x170,%rbp
	leaq (L_284266+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp closeOut_0
.p2align 0x4
L_495674:
L_284265:
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x178(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x170(%rbp)
	addq $0x170,%rbp
	leaq (L_284266+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp closeOut_0
.p2align 0x4
.long 0x46E2
L_284266:
	addq $0xFFFFFFFFFFFFFE90,%rbp
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_284269
L_284267:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	jmp L_284129
.text
.p2align 0x4
.globl qsort_35
.hidden qsort_35
qsort_35:
L_284453:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb loop_3409
L_284501:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_284502+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_284502
.p2align 0x4
.long 0x4E8
L_284502:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
loop_3409:
	movl 0x0(%rbp),%r15d
	subl 0x4(%rbp),%r15d
	jo L_284455
L_284456:
	cmpl $0x14,%r15d
	jng L_495677
L_284458:
	movq (globalObjptr+0x550)(%rip),%r14
	movl 0x0(%r14),%r13d
	imull $0x19660D,%r13d
	addl $0x3C6EF35F,%r13d
	movl %r13d,0x18(%rbp)
	movl %r13d,0x0(%r14)
	incl %r15d
	movl %r15d,0x1C(%rbp)
	jo L_495676
L_284459:
	movl %r15d,0x28(%rbp)
	movl %r13d,0x2C(%rbp)
	addq $0x28,%rbp
	leaq (L_284460+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp div_0
.p2align 0x4
L_495676:
L_284455:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_495677:
L_284457:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4F4
L_284460:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl 0x28(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	movl 0x1C(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	movl 0x18(%rbp),%r15d
	movl %r15d,0x24(%rbp)
	addq $0x20,%rbp
	leaq (L_284461+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp mod_0
.p2align 0x4
.long 0x4E5
L_284461:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movl 0x20(%rbp),%esp
	movl %esp,0x18(%rbp)
	movl 0x4(%rbp),%ebx
	movl %ebx,%esi
	addl %esp,%esi
	jo L_284455
L_284462:
	movq 0x10(%rbp),%rsp
	movq 0x8(%rsp),%r13
	movq 0x0(%rsp),%r11
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r14
	movslq %ebx,%r15
	cmpq %r14,%r15
	jnb L_284464
L_284465:
	movq 0x0(%r13,%r15,8),%r10
	movslq %esi,%r9
	cmpq %r14,%r9
	jnb L_284464
L_284467:
	movq 0x0(%r13,%r9,8),%r8
	movq 0xFFFFFFFFFFFFFFF0(%r11),%rsp
	cmpq %rsp,%r15
	jnb L_284464
L_284469:
	movq %r11,%rsi
	shrq $0x8,%rsi
	movq (gcState+0x3C8)(%rip),%rdi
	movb $0x1,0x0(%rdi,%rsi,1)
	movq %r8,0x0(%r11,%r15,8)
	cmpq %rsp,%r9
	jnb L_284464
L_284471:
	movq %r11,%r8
	shrq $0x8,%r8
	movb $0x1,0x0(%rdi,%r8,1)
	movq %r10,0x0(%r11,%r9,8)
	movq 0x8(%rbp),%rsi
	movq 0xFFFFFFFFFFFFFFF0(%rsi),%r10
	cmpq %r10,%r15
	jnb L_284464
L_284473:
	movq 0x0(%rsi,%r15,8),%r9
	movl 0x0(%rbp),%ecx
	incl %ecx
	jo L_284455
L_284474:
	movq %rsp,%r8
.p2align 0x4,,0x7
loop_3411:
	incl %ebx
	movl %ebx,0x18(%rbp)
	jo L_284455
L_284475:
	movslq %ebx,%rsp
	cmpq %r10,%rsp
	jnb L_284464
L_284477:
	movl 0x0(%r9),%ebx
	movq 0x8(%rbp),%rsi
	movq %rsp,%rax
	movq 0x0(%rsi,%rax,8),%rsp
	cmpl %ebx,0x0(%rsp)
	jl L_495690
	xchgq %rax,%r15
	movq %r13,(localObjptr+0x0)(%rip)
	movq %r14,(localWord64+0x0)(%rip)
	movq %r8,(localWord64+0x18)(%rip)
	movq %r11,(localObjptr+0x8)(%rip)
	movq %rax,(localWord64+0x8)(%rip)
.p2align 0x4,,0x7
loop_3412:
	decl %ecx
	jo L_284455
L_284479:
	movslq %ecx,%r14
	cmpq %r10,%r14
	jnb L_284464
L_284481:
	movq 0x8(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r11
	cmpl 0x0(%r11),%ebx
	jnl L_495679
L_284499:
	jmp loop_3412
.p2align 0x4
L_495679:
L_284482:
	movl 0x18(%rbp),%ebx
	cmpl %ebx,%ecx
	jl L_495684
L_284483:
	movq (localWord64+0x0)(%rip),%rsp
	cmpq %rsp,%r15
	jnb L_284464
L_284485:
	movq (localObjptr+0x0)(%rip),%r13
	movq 0x0(%r13,%r15,8),%r11
	cmpq %rsp,%r14
	jnb L_284464
L_284487:
	movq 0x0(%r13,%r14,8),%r8
	movq (localWord64+0x18)(%rip),%rsi
	cmpq %rsi,%r15
	jnb L_284464
L_284489:
	movq (localObjptr+0x8)(%rip),%rdi
	movq %rdi,%rdx
	shrq $0x8,%rdx
	movq (gcState+0x3C8)(%rip),%rax
	movb $0x1,0x0(%rax,%rdx,1)
	movq %r8,0x0(%rdi,%r15,8)
	cmpq %rsi,%r14
	jnb L_495680
L_284491:
	movq %rdi,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%rax,%r15,1)
	movq %r11,0x0(%rdi,%r14,8)
	movq %rsp,%r14
	movq %rdi,%r11
	movq %rsi,%r8
	movq (localWord64+0x8)(%rip),%r15
	jmp loop_3411
.p2align 0x4
L_495680:
L_284464:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_495684:
L_284492:
	movq (localObjptr+0x0)(%rip),%r15
	movq (localWord64+0x8)(%rip),%r13
	movq 0x0(%r15,%r13,8),%r11
	cmpq (localWord64+0x0)(%rip),%r14
	jnb L_284464
L_284494:
	movq 0x0(%r15,%r14,8),%r10
	movq (localObjptr+0x8)(%rip),%r15
	movq %r15,%r9
	shrq $0x8,%r9
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r9,1)
	movq %r10,0x0(%r15,%r13,8)
	cmpq (localWord64+0x18)(%rip),%r14
	jnb L_284464
L_284496:
	movq %r15,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%r8,%r13,1)
	movq %r11,0x0(%r15,%r14,8)
	decl %ecx
	jo L_284455
L_284497:
	movl %ecx,0x28(%rbp)
	movl 0x4(%rbp),%r15d
	movl %r15d,0x2C(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x28,%rbp
	leaq (L_284498+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp qsort_35
.p2align 0x4
L_495690:
L_284500:
	movl 0x18(%rbp),%ebx
	jmp loop_3411
.p2align 0x4
.long 0x4F4
L_284498:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl 0x18(%rbp),%r15d
	movl %r15d,0x4(%rbp)
	jmp loop_3409
