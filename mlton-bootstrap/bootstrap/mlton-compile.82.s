/* MLton 20130715 (built Mon Jun 13 11:54:01 AEST 2016 on ports.extensibl.com) */
/*   created this file on Mon Jun 13 12:10:10 2016. */
/* Do not edit this file. */
/* Flag settings:  */
/*    align: 8 */
/*    atMLtons: (mlton-compile, @MLton, --) */
/*    chunk: chunk per function */
/*    closureConvertGlobalize: true */
/*    closureConvertShrink: true */
/*    codegen: amd64 */
/*    contifyIntoMain: false */
/*    debug: false */
/*    defaultChar: char8 */
/*    defaultWideChar: widechar32 */
/*    defaultInt: int32 */
/*    defaultReal: real64 */
/*    defaultWord: word32 */
/*    diag passes: [] */
/*    drop passes: [] */
/*    elaborate allowConstant (default): false */
/*    elaborate allowConstant (enabled): true */
/*    elaborate allowFFI (default): false */
/*    elaborate allowFFI (enabled): true */
/*    elaborate allowPrim (default): false */
/*    elaborate allowPrim (enabled): true */
/*    elaborate allowOverload (default): false */
/*    elaborate allowOverload (enabled): true */
/*    elaborate allowRebindEquals (default): false */
/*    elaborate allowRebindEquals (enabled): true */
/*    elaborate deadCode (default): false */
/*    elaborate deadCode (enabled): true */
/*    elaborate forceUsed (default): false */
/*    elaborate forceUsed (enabled): true */
/*    elaborate ffiStr (default):  */
/*    elaborate ffiStr (enabled): true */
/*    elaborate nonexhaustiveExnMatch (default): default */
/*    elaborate nonexhaustiveExnMatch (enabled): true */
/*    elaborate nonexhaustiveMatch (default): warn */
/*    elaborate nonexhaustiveMatch (enabled): true */
/*    elaborate redundantMatch (default): warn */
/*    elaborate redundantMatch (enabled): true */
/*    elaborate resolveScope (default): strdec */
/*    elaborate resolveScope (enabled): true */
/*    elaborate sequenceNonUnit (default): warn */
/*    elaborate sequenceNonUnit (enabled): true */
/*    elaborate warnUnused (default): true */
/*    elaborate warnUnused (enabled): true */
/*    elaborate only: false */
/*    emit main: true */
/*    export header: None */
/*    exn history: false */
/*    generated output format: executable */
/*    gc check: Limit */
/*    indentation: 3 */
/*    inlineIntoMain: true */
/*    inlineLeafA: {loops = true, repeat = true, size = Some 20} */
/*    inlineLeafB: {loops = true, repeat = true, size = Some 40} */
/*    inlineNonRec: {small = 60, product = 320} */
/*    input file: mlton */
/*    keep CoreML: false */
/*    keep def use: true */
/*    keep dot: false */
/*    keep Machine: false */
/*    keep passes: [] */
/*    keep RSSA: false */
/*    keep SSA: false */
/*    keep SSA2: false */
/*    keep SXML: false */
/*    keep XML: false */
/*    extra_: false */
/*    lib dir: /usr/ports/pobj/mlton-20130715/mlton-on-20130715-release/build/lib */
/*    lib target dir: /usr/ports/pobj/mlton-20130715/mlton-on-20130715-release/build/lib/targets/self */
/*    loop passes: 1 */
/*    mark cards: true */
/*    max function size: 10000 */
/*    mlb path vars: [{var = MLTON_ROOT, path = $(LIB_MLTON_DIR)/sml}, {var = SML_LIB, path = $(LIB_MLTON_DIR)/sml}] */
/*    native commented: 0 */
/*    native live stack: false */
/*    native optimize: 1 */
/*    native move hoist: true */
/*    native copy prop: true */
/*    native copy prop cutoff: 1000 */
/*    native cutoff: 100 */
/*    native live transfer: 8 */
/*    native shuffle: true */
/*    native ieee fp: false */
/*    native split: Some 20000 */
/*    optimizationPasses: [<ssa2::default>, <ssa::default>, <sxml::default>, <xml::default>] */
/*    polyvariance: Some {hofo = true, rounds = 2, small = 30, product = 300} */
/*    prefer abs paths: false */
/*    prof passes: [] */
/*    profile: None */
/*    profile branch: false */
/*    profile C: [] */
/*    profile IL: ProfileSource */
/*    profile include/exclude: [(Seq [Star [.], Or [Seq [Seq [[$], [(], [S], [M], [L], [_], [L], [I], [B], [)]]]], Star [.]], false)] */
/*    profile raise: false */
/*    profile stack: false */
/*    profile val: false */
/*    show basis: None */
/*    show def-use: None */
/*    show types: true */
/*    target: self */
/*    target arch: AMD64 */
/*    target OS: OpenBSD */
/*    type check: false */
/*    verbosity: Pass */
/*    warn unrecognized annotation: true */
/*    warn deprecated features: true */
/*    zone cut depth: 100 */
.text
.p2align 0x4
.globl qsort_29
.hidden qsort_29
qsort_29:
L_247934:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb loop_2852
L_247984:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_247985+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_247985
.p2align 0x4
.long 0x4E8
L_247985:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
loop_2852:
	movl 0x0(%rbp),%r15d
	subl 0x4(%rbp),%r15d
	jo L_247936
L_247937:
	cmpl $0x14,%r15d
	jng L_481720
L_247939:
	movq (globalObjptr+0x550)(%rip),%r14
	movl 0x0(%r14),%r13d
	imull $0x19660D,%r13d
	addl $0x3C6EF35F,%r13d
	movl %r13d,0x18(%rbp)
	movl %r13d,0x0(%r14)
	incl %r15d
	movl %r15d,0x1C(%rbp)
	jo L_481719
L_247940:
	movl %r15d,0x28(%rbp)
	movl %r13d,0x2C(%rbp)
	addq $0x28,%rbp
	leaq (L_247941+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp div_0
.p2align 0x4
L_481719:
L_247936:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481720:
L_247938:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4F4
L_247941:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl 0x28(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	movl 0x1C(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	movl 0x18(%rbp),%r15d
	movl %r15d,0x24(%rbp)
	addq $0x20,%rbp
	leaq (L_247942+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp mod_0
.p2align 0x4
.long 0x4E5
L_247942:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movl 0x20(%rbp),%r15d
	movl 0x4(%rbp),%ecx
	movl %ecx,%r14d
	addl %r15d,%r14d
	movl %r15d,0x18(%rbp)
	jo L_247936
L_247943:
	movq 0x10(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r15),%r11
	movq %r11,0x20(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movq %r15,0x28(%rbp)
	movslq %ecx,%r10
	movq %r10,0x30(%rbp)
	cmpq %r15,%r10
	jnb L_247945
L_247946:
	movq 0x0(%r13,%r10,8),%r9
	movslq %r14d,%r8
	cmpq %r15,%r8
	jnb L_247945
L_247948:
	movq 0x0(%r13,%r8,8),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r14
	movq %r14,0x38(%rbp)
	cmpq %r14,%r10
	jnb L_247945
L_247950:
	movq %r11,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r13,1)
	movq %r15,0x0(%r11,%r10,8)
	cmpq %r14,%r8
	jnb L_247945
L_247952:
	movq %r11,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%rsp,%r15,1)
	movq %r9,0x0(%r11,%r8,8)
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq %r14,0x40(%rbp)
	cmpq %r14,%r10
	jnb L_247945
L_247954:
	movq 0x0(%r15,%r10,8),%r14
	movq %r14,0x48(%rbp)
	movl 0x0(%rbp),%r15d
	incl %r15d
	jo L_247936
L_247955:
	movl %r15d,0x50(%rbp)
loop_2854:
	incl %ecx
	movl %ecx,0x54(%rbp)
	jo L_247936
L_247956:
	movslq %ecx,%r15
	movq %r15,0x58(%rbp)
	cmpq 0x40(%rbp),%r15
	jnb L_481722
L_247958:
	movq 0x48(%rbp),%r14
	movq 0x8(%r14),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x60(%rbp)
	movq 0x8(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x8(%r13),%r10
	movq 0x8(%r10),%r9
	movq %r9,0x70(%rbp)
	movq %r11,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_247959+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1216
.p2align 0x4
L_481722:
L_247945:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4F5
L_247959:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movl 0x70(%rbp),%r15d
	movl %r15d,0x68(%rbp)
	testl %r15d,%r15d
	jnz L_481731
L_247960:
	movl 0x54(%rbp),%ecx
	jmp loop_2854
.p2align 0x4
L_481731:
L_247961:
	movl 0x50(%rbp),%ecx
loop_2855:
	decl %ecx
	movl %ecx,0x50(%rbp)
	jo L_247936
L_247962:
	movslq %ecx,%r15
	movq %r15,0x68(%rbp)
	cmpq 0x40(%rbp),%r15
	jnb L_247945
L_247964:
	movq 0x8(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x8(%r13),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x80(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_247965+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1216
.p2align 0x4
.long 0x4F6
L_247965:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movl 0x78(%rbp),%r15d
	movl %r15d,0x70(%rbp)
	testl %r15d,%r15d
	jnz L_481734
L_247966:
	movl 0x50(%rbp),%ecx
	jmp loop_2855
.p2align 0x4
L_481734:
L_247967:
	movl 0x54(%rbp),%ecx
	cmpl %ecx,0x50(%rbp)
	jl L_481739
L_247968:
	movq 0x58(%rbp),%r15
	movq 0x28(%rbp),%r14
	cmpq %r14,%r15
	jnb L_247945
L_247970:
	movq 0x18(%rbp),%r13
	movq 0x0(%r13,%r15,8),%r11
	movq 0x68(%rbp),%r10
	cmpq %r14,%r10
	jnb L_247945
L_247972:
	movq 0x0(%r13,%r10,8),%r14
	movq 0x38(%rbp),%r13
	cmpq %r13,%r15
	jnb L_247945
L_247974:
	movq 0x20(%rbp),%r9
	movq %r9,%r8
	shrq $0x8,%r8
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r8,1)
	movq %r14,0x0(%r9,%r15,8)
	cmpq %r13,%r10
	jnb L_247945
L_247976:
	movq %r9,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%rsp,%r15,1)
	movq %r11,0x0(%r9,%r10,8)
	jmp loop_2854
.p2align 0x4
L_481739:
L_247977:
	movq 0x18(%rbp),%r15
	movq 0x30(%rbp),%r14
	movq 0x0(%r15,%r14,8),%r13
	movq 0x68(%rbp),%r11
	cmpq 0x28(%rbp),%r11
	jnb L_247945
L_247979:
	movq 0x0(%r15,%r11,8),%r10
	movq 0x20(%rbp),%r15
	movq %r15,%r9
	shrq $0x8,%r9
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r9,1)
	movq %r10,0x0(%r15,%r14,8)
	cmpq 0x38(%rbp),%r11
	jnb L_247945
L_247981:
	movq %r15,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r8,%r14,1)
	movq %r13,0x0(%r15,%r11,8)
	movl 0x50(%rbp),%r15d
	decl %r15d
	jo L_247936
L_247982:
	movl %r15d,0x60(%rbp)
	movl 0x4(%rbp),%r15d
	movl %r15d,0x64(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x60,%rbp
	leaq (L_247983+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp qsort_29
.p2align 0x4
.long 0x4F7
L_247983:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movl 0x54(%rbp),%r15d
	movl %r15d,0x4(%rbp)
	jmp loop_2852
.text
.p2align 0x4
.globl qsort_30
.hidden qsort_30
qsort_30:
L_247986:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb loop_2856
L_248036:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_248037+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_248037
.p2align 0x4
.long 0x4E8
L_248037:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
loop_2856:
	movl 0x0(%rbp),%r15d
	subl 0x4(%rbp),%r15d
	jo L_247988
L_247989:
	cmpl $0x14,%r15d
	jng L_481744
L_247991:
	movq (globalObjptr+0x550)(%rip),%r14
	movl 0x0(%r14),%r13d
	imull $0x19660D,%r13d
	addl $0x3C6EF35F,%r13d
	movl %r13d,0x18(%rbp)
	movl %r13d,0x0(%r14)
	incl %r15d
	movl %r15d,0x1C(%rbp)
	jo L_481743
L_247992:
	movl %r15d,0x28(%rbp)
	movl %r13d,0x2C(%rbp)
	addq $0x28,%rbp
	leaq (L_247993+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp div_0
.p2align 0x4
L_481743:
L_247988:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481744:
L_247990:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4F4
L_247993:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl 0x28(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	movl 0x1C(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	movl 0x18(%rbp),%r15d
	movl %r15d,0x24(%rbp)
	addq $0x20,%rbp
	leaq (L_247994+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp mod_0
.p2align 0x4
.long 0x4E5
L_247994:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movl 0x20(%rbp),%r15d
	movl 0x4(%rbp),%ecx
	movl %ecx,%r14d
	addl %r15d,%r14d
	movl %r15d,0x18(%rbp)
	jo L_247988
L_247995:
	movq 0x10(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r15),%r11
	movq %r11,0x20(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movq %r15,0x28(%rbp)
	movslq %ecx,%r10
	movq %r10,0x30(%rbp)
	cmpq %r15,%r10
	jnb L_247997
L_247998:
	movq 0x0(%r13,%r10,8),%r9
	movslq %r14d,%r8
	cmpq %r15,%r8
	jnb L_247997
L_248000:
	movq 0x0(%r13,%r8,8),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r14
	movq %r14,0x38(%rbp)
	cmpq %r14,%r10
	jnb L_247997
L_248002:
	movq %r11,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r13,1)
	movq %r15,0x0(%r11,%r10,8)
	cmpq %r14,%r8
	jnb L_247997
L_248004:
	movq %r11,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%rsp,%r15,1)
	movq %r9,0x0(%r11,%r8,8)
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq %r14,0x40(%rbp)
	cmpq %r14,%r10
	jnb L_247997
L_248006:
	movq 0x0(%r15,%r10,8),%r14
	movq %r14,0x48(%rbp)
	movl 0x0(%rbp),%r15d
	incl %r15d
	jo L_247988
L_248007:
	movl %r15d,0x50(%rbp)
loop_2858:
	incl %ecx
	movl %ecx,0x54(%rbp)
	jo L_247988
L_248008:
	movslq %ecx,%r15
	movq %r15,0x58(%rbp)
	cmpq 0x40(%rbp),%r15
	jnb L_481746
L_248010:
	movq 0x48(%rbp),%r14
	movq 0x8(%r14),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x60(%rbp)
	movq 0x8(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x8(%r13),%r10
	movq 0x8(%r10),%r9
	movq %r9,0x70(%rbp)
	movq %r11,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_248011+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1216
.p2align 0x4
L_481746:
L_247997:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4F5
L_248011:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movl 0x70(%rbp),%r15d
	movl %r15d,0x68(%rbp)
	testl %r15d,%r15d
	jnz L_481755
L_248012:
	movl 0x54(%rbp),%ecx
	jmp loop_2858
.p2align 0x4
L_481755:
L_248013:
	movl 0x50(%rbp),%ecx
loop_2859:
	decl %ecx
	movl %ecx,0x50(%rbp)
	jo L_247988
L_248014:
	movslq %ecx,%r15
	movq %r15,0x68(%rbp)
	cmpq 0x40(%rbp),%r15
	jnb L_247997
L_248016:
	movq 0x8(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x8(%r13),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x80(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_248017+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1216
.p2align 0x4
.long 0x4F6
L_248017:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movl 0x78(%rbp),%r15d
	movl %r15d,0x70(%rbp)
	testl %r15d,%r15d
	jnz L_481758
L_248018:
	movl 0x50(%rbp),%ecx
	jmp loop_2859
.p2align 0x4
L_481758:
L_248019:
	movl 0x54(%rbp),%ecx
	cmpl %ecx,0x50(%rbp)
	jl L_481763
L_248020:
	movq 0x58(%rbp),%r15
	movq 0x28(%rbp),%r14
	cmpq %r14,%r15
	jnb L_247997
L_248022:
	movq 0x18(%rbp),%r13
	movq 0x0(%r13,%r15,8),%r11
	movq 0x68(%rbp),%r10
	cmpq %r14,%r10
	jnb L_247997
L_248024:
	movq 0x0(%r13,%r10,8),%r14
	movq 0x38(%rbp),%r13
	cmpq %r13,%r15
	jnb L_247997
L_248026:
	movq 0x20(%rbp),%r9
	movq %r9,%r8
	shrq $0x8,%r8
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r8,1)
	movq %r14,0x0(%r9,%r15,8)
	cmpq %r13,%r10
	jnb L_247997
L_248028:
	movq %r9,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%rsp,%r15,1)
	movq %r11,0x0(%r9,%r10,8)
	jmp loop_2858
.p2align 0x4
L_481763:
L_248029:
	movq 0x18(%rbp),%r15
	movq 0x30(%rbp),%r14
	movq 0x0(%r15,%r14,8),%r13
	movq 0x68(%rbp),%r11
	cmpq 0x28(%rbp),%r11
	jnb L_247997
L_248031:
	movq 0x0(%r15,%r11,8),%r10
	movq 0x20(%rbp),%r15
	movq %r15,%r9
	shrq $0x8,%r9
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r9,1)
	movq %r10,0x0(%r15,%r14,8)
	cmpq 0x38(%rbp),%r11
	jnb L_247997
L_248033:
	movq %r15,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r8,%r14,1)
	movq %r13,0x0(%r15,%r11,8)
	movl 0x50(%rbp),%r15d
	decl %r15d
	jo L_247988
L_248034:
	movl %r15d,0x60(%rbp)
	movl 0x4(%rbp),%r15d
	movl %r15d,0x64(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x60,%rbp
	leaq (L_248035+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp qsort_30
.p2align 0x4
.long 0x4F7
L_248035:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movl 0x54(%rbp),%r15d
	movl %r15d,0x4(%rbp)
	jmp loop_2856
.text
.p2align 0x4
.globl qsort_31
.hidden qsort_31
qsort_31:
L_248038:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb loop_2860
L_248088:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_248089+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_248089
.p2align 0x4
.long 0x4E8
L_248089:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
loop_2860:
	movl 0x0(%rbp),%r15d
	subl 0x4(%rbp),%r15d
	jo L_248040
L_248041:
	cmpl $0x14,%r15d
	jng L_481768
L_248043:
	movq (globalObjptr+0x550)(%rip),%r14
	movl 0x0(%r14),%r13d
	imull $0x19660D,%r13d
	addl $0x3C6EF35F,%r13d
	movl %r13d,0x18(%rbp)
	movl %r13d,0x0(%r14)
	incl %r15d
	movl %r15d,0x1C(%rbp)
	jo L_481767
L_248044:
	movl %r15d,0x28(%rbp)
	movl %r13d,0x2C(%rbp)
	addq $0x28,%rbp
	leaq (L_248045+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp div_0
.p2align 0x4
L_481767:
L_248040:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481768:
L_248042:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4F4
L_248045:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl 0x28(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	movl 0x1C(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	movl 0x18(%rbp),%r15d
	movl %r15d,0x24(%rbp)
	addq $0x20,%rbp
	leaq (L_248046+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp mod_0
.p2align 0x4
.long 0x4E5
L_248046:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movl 0x20(%rbp),%r15d
	movl 0x4(%rbp),%ecx
	movl %ecx,%r14d
	addl %r15d,%r14d
	movl %r15d,0x18(%rbp)
	jo L_248040
L_248047:
	movq 0x10(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r15),%r11
	movq %r11,0x20(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movq %r15,0x28(%rbp)
	movslq %ecx,%r10
	movq %r10,0x30(%rbp)
	cmpq %r15,%r10
	jnb L_248049
L_248050:
	movq 0x0(%r13,%r10,8),%r9
	movslq %r14d,%r8
	cmpq %r15,%r8
	jnb L_248049
L_248052:
	movq 0x0(%r13,%r8,8),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r14
	movq %r14,0x38(%rbp)
	cmpq %r14,%r10
	jnb L_248049
L_248054:
	movq %r11,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r13,1)
	movq %r15,0x0(%r11,%r10,8)
	cmpq %r14,%r8
	jnb L_248049
L_248056:
	movq %r11,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%rsp,%r15,1)
	movq %r9,0x0(%r11,%r8,8)
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq %r14,0x40(%rbp)
	cmpq %r14,%r10
	jnb L_248049
L_248058:
	movq 0x0(%r15,%r10,8),%r14
	movq %r14,0x48(%rbp)
	movl 0x0(%rbp),%r15d
	incl %r15d
	jo L_248040
L_248059:
	movl %r15d,0x50(%rbp)
loop_2862:
	incl %ecx
	movl %ecx,0x54(%rbp)
	jo L_248040
L_248060:
	movslq %ecx,%r15
	movq %r15,0x58(%rbp)
	cmpq 0x40(%rbp),%r15
	jnb L_481770
L_248062:
	movq 0x48(%rbp),%r14
	movq 0x8(%r14),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x60(%rbp)
	movq 0x8(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x8(%r13),%r10
	movq 0x8(%r10),%r9
	movq %r9,0x70(%rbp)
	movq %r11,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_248063+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1216
.p2align 0x4
L_481770:
L_248049:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4F5
L_248063:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movl 0x70(%rbp),%r15d
	movl %r15d,0x68(%rbp)
	testl %r15d,%r15d
	jnz L_481779
L_248064:
	movl 0x54(%rbp),%ecx
	jmp loop_2862
.p2align 0x4
L_481779:
L_248065:
	movl 0x50(%rbp),%ecx
loop_2863:
	decl %ecx
	movl %ecx,0x50(%rbp)
	jo L_248040
L_248066:
	movslq %ecx,%r15
	movq %r15,0x68(%rbp)
	cmpq 0x40(%rbp),%r15
	jnb L_248049
L_248068:
	movq 0x8(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x8(%r13),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x80(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_248069+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1216
.p2align 0x4
.long 0x4F6
L_248069:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movl 0x78(%rbp),%r15d
	movl %r15d,0x70(%rbp)
	testl %r15d,%r15d
	jnz L_481782
L_248070:
	movl 0x50(%rbp),%ecx
	jmp loop_2863
.p2align 0x4
L_481782:
L_248071:
	movl 0x54(%rbp),%ecx
	cmpl %ecx,0x50(%rbp)
	jl L_481787
L_248072:
	movq 0x58(%rbp),%r15
	movq 0x28(%rbp),%r14
	cmpq %r14,%r15
	jnb L_248049
L_248074:
	movq 0x18(%rbp),%r13
	movq 0x0(%r13,%r15,8),%r11
	movq 0x68(%rbp),%r10
	cmpq %r14,%r10
	jnb L_248049
L_248076:
	movq 0x0(%r13,%r10,8),%r14
	movq 0x38(%rbp),%r13
	cmpq %r13,%r15
	jnb L_248049
L_248078:
	movq 0x20(%rbp),%r9
	movq %r9,%r8
	shrq $0x8,%r8
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r8,1)
	movq %r14,0x0(%r9,%r15,8)
	cmpq %r13,%r10
	jnb L_248049
L_248080:
	movq %r9,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%rsp,%r15,1)
	movq %r11,0x0(%r9,%r10,8)
	jmp loop_2862
.p2align 0x4
L_481787:
L_248081:
	movq 0x18(%rbp),%r15
	movq 0x30(%rbp),%r14
	movq 0x0(%r15,%r14,8),%r13
	movq 0x68(%rbp),%r11
	cmpq 0x28(%rbp),%r11
	jnb L_248049
L_248083:
	movq 0x0(%r15,%r11,8),%r10
	movq 0x20(%rbp),%r15
	movq %r15,%r9
	shrq $0x8,%r9
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r9,1)
	movq %r10,0x0(%r15,%r14,8)
	cmpq 0x38(%rbp),%r11
	jnb L_248049
L_248085:
	movq %r15,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r8,%r14,1)
	movq %r13,0x0(%r15,%r11,8)
	movl 0x50(%rbp),%r15d
	decl %r15d
	jo L_248040
L_248086:
	movl %r15d,0x60(%rbp)
	movl 0x4(%rbp),%r15d
	movl %r15d,0x64(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x60,%rbp
	leaq (L_248087+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp qsort_31
.p2align 0x4
.long 0x4F7
L_248087:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movl 0x54(%rbp),%r15d
	movl %r15d,0x4(%rbp)
	jmp loop_2860
.text
.p2align 0x4
.globl x_2004
.hidden x_2004
x_2004:
L_248090:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_248191
L_248091:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_481793
L_248092:
	movq 0x28(%rbp),%rsp
	movq 0x10(%rsp),%rax
	movq 0x158(%rax),%r13
	movq 0x150(%rax),%r14
	movq 0x148(%rax),%r15
	movq 0x140(%rax),%rdx
	movq 0x138(%rax),%r10
	movq 0x130(%rax),%r11
	movq %r11,0x30(%rbp)
	movq 0x128(%rax),%r11
	movq %r11,0x38(%rbp)
	movq 0x120(%rax),%rdi
	movq 0x118(%rax),%r11
	movq 0x110(%rax),%rcx
	movq 0x108(%rax),%r9
	movq 0x100(%rax),%r8
	movq 0xF8(%rax),%rbx
	movq 0xD8(%rax),%rsi
	movq %rsi,0x40(%rbp)
	movq 0xD0(%rax),%rsi
	movq %r13,(localObjptr+0x10)(%rip)
	movq 0xC8(%rax),%r13
	movq %r14,(localObjptr+0x18)(%rip)
	movq 0xC0(%rax),%r14
	movq %r15,(localObjptr+0x20)(%rip)
	movq 0xB8(%rax),%r15
	movq %rdx,(localObjptr+0x28)(%rip)
	movq 0xB0(%rax),%rdx
	movq %r10,(localObjptr+0x30)(%rip)
	movq 0xA8(%rax),%r10
	movq %rdi,(localObjptr+0x38)(%rip)
	movq 0x90(%rax),%rdi
	movq %rdi,0x48(%rbp)
	movq 0x88(%rax),%rdi
	movq %rdi,0x50(%rbp)
	movq 0x80(%rax),%rdi
	movq %rdi,0x58(%rbp)
	movq 0x78(%rax),%rdi
	movq %rdi,0x60(%rbp)
	movq 0x70(%rax),%rdi
	movq %rdi,0x68(%rbp)
	movq 0x68(%rax),%rdi
	movq %rdi,0x70(%rbp)
	movq 0x58(%rax),%rdi
	movq %rdi,0x78(%rbp)
	movq 0x50(%rax),%rdi
	movq %rdi,0x80(%rbp)
	movq 0x48(%rax),%rdi
	movq %rdi,0x88(%rbp)
	movq 0x40(%rax),%rdi
	movq %rdi,0x90(%rbp)
	movq 0x38(%rax),%rdi
	movq %rdi,0x98(%rbp)
	movq 0x30(%rax),%rdi
	movq %rdi,0xA0(%rbp)
	movq 0x28(%rax),%rdi
	movq %r11,(localObjptr+0x40)(%rip)
	movq 0x20(%rax),%r11
	movq %r11,0xA8(%rbp)
	movq 0x18(%rax),%r11
	movq %r11,0xB0(%rbp)
	movq 0x8(%rbp),%r11
	movq %rcx,(localObjptr+0x48)(%rip)
	movq 0x8(%r11),%rcx
	movq %rcx,0xB8(%rbp)
	movl 0x0(%r11),%ecx
	movl %ecx,0xC0(%rbp)
	movl 0x4(%r11),%ecx
	movq 0x160(%rax),%r11
	movq %r9,(localObjptr+0x50)(%rip)
	movq 0x10(%r11),%r9
	movq 0x0(%r9),%rsp
	movl 0x0(%rsp),%eax
	incl %eax
	jo L_481792
L_248094:
	movq $0x1F5,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movl %eax,0x0(%r11)
	addq $0x18,%r12
	movl $0x0,0x4(%r11)
	movq $0x2,0x8(%r11)
	movq %r9,%rsp
	shrq $0x8,%rsp
	movq (gcState+0x3C8)(%rip),%rax
	xchgq %rsp,%r12
	movb $0x1,0x0(%rax,%r12,1)
	movq %r11,0x0(%r9)
	testl %ecx,%ecx
	jnz L_481791
L_248095:
	movq (globalObjptr+0xA458)(%rip),%rax
	movq %rax,0x8(%rbp)
	movq %rsp,%r12
	movq %r15,%r11
	movq %r14,%r9
	xchgq %r13,%r8
	movq (localObjptr+0x20)(%rip),%r15
	movq (localObjptr+0x18)(%rip),%r14
	movq (localObjptr+0x10)(%rip),%rsp
	xchgq %rsp,%r13
	movq (localObjptr+0x30)(%rip),%rax
	xchgq %rax,%r10
	movq (localObjptr+0x38)(%rip),%rcx
	xchgq %rcx,%rdi
	movq %rdx,(localObjptr+0x88)(%rip)
	movq (localObjptr+0x28)(%rip),%rdx
	movq %rcx,(localObjptr+0x98)(%rip)
	movq (localObjptr+0x48)(%rip),%rcx
	movq %rsp,(localObjptr+0x58)(%rip)
	movq %rax,(localObjptr+0x90)(%rip)
L_248096:
	movq $0x40EB,0x0(%r12)
	movq %r12,%rsp
	addq $0x8,%rsp
	movq %r13,0x0(%rsp)
	movq %r14,0x8(%rsp)
	addq $0x28,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x10(%rsp)
	movq 0x20(%rbp),%r14
	movq %r14,0x18(%rsp)
	movq $0x1EF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x28(%rbp)
	movq %rsp,0x0(%r14)
	addq $0x10,%r12
	movq $0x1811,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0xC8(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0xF13,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r10,0x20(%r13)
	addq $0x40,%r12
	movq 0x38(%rbp),%r10
	movq %r10,0x0(%r13)
	movq 0x8(%rbp),%rsp
	movq %rsp,0x8(%r13)
	movq 0x30(%rbp),%rax
	movq %rax,0x10(%r13)
	movq %r14,0x18(%r13)
	movq %rdx,0x28(%r13)
	movq %r15,0x30(%r13)
	movq 0x8(%rdi),%rax
	movq $0x1813,0x0(%r12)
	movq %r12,%rdi
	addq $0x8,%rdi
	movq %rdi,0xD0(%rbp)
	movq %r11,0x0(%rdi)
	movq %r9,0x18(%rdi)
	movq %r8,0x20(%rdi)
	movq %rsi,0x28(%rdi)
	movq %rcx,0x60(%rdi)
	addq $0x78,%r12
	movq %r10,0x8(%rdi)
	movq 0x0(%rbp),%r11
	movq %r11,0x10(%rdi)
	movq 0x40(%rbp),%r9
	movq %r9,0x30(%rdi)
	movq %rsp,0x38(%rdi)
	movq %r14,0x40(%rdi)
	movq %rbx,0x48(%rdi)
	movq (localObjptr+0x58)(%rip),%r14
	movq %r14,0x50(%rdi)
	movq (localObjptr+0x50)(%rip),%r9
	movq %r9,0x58(%rdi)
	movq (localObjptr+0x40)(%rip),%r8
	movq %r8,0x68(%rdi)
	movq $0x1815,0x0(%r12)
	movq %r12,%rsp
	addq $0x8,%rsp
	movq %rsp,0xD8(%rbp)
	movq %r8,0x8(%rsp)
	movq %rbx,0x18(%rsp)
	movq %r14,0x20(%rsp)
	movq %r9,0x28(%rsp)
	movq %r13,0x30(%rsp)
	movq %rax,0x38(%rsp)
	movq (localObjptr+0x90)(%rip),%r14
	movq %r14,0x48(%rsp)
	movq %r15,0x50(%rsp)
	movq %rdx,0x58(%rsp)
	movq (localObjptr+0x88)(%rip),%r15
	movq %r15,0x60(%rsp)
	addq $0x70,%r12
	movq %rdi,0x0(%rsp)
	movq %r10,0x10(%rsp)
	movq %r11,0x40(%rsp)
	movq $0x2CD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xE0(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xE8(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq (localObjptr+0x98)(%rip),%r15
	movq 0x10(%r15),%r14
	movq 0x18(%r14),%r13
	movq %r13,0x120(%rbp)
	movq 0x10(%r14),%r13
	movq %r13,0x118(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0xF0(%rbp)
	movq $0x1731,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xF8(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x108(%rbp)
	movq %r15,0x110(%rbp)
	addq $0x108,%rbp
	leaq (L_248097+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3814
.p2align 0x4
L_481791:
L_248190:
	movq (globalObjptr+0x105E8)(%rip),%rax
	movq %rax,0x8(%rbp)
	movq %rsp,%r12
	movq %r15,%r11
	movq %r14,%r9
	xchgq %r13,%r8
	movq (localObjptr+0x20)(%rip),%r15
	movq (localObjptr+0x18)(%rip),%r14
	movq (localObjptr+0x10)(%rip),%rsp
	xchgq %rsp,%r13
	movq (localObjptr+0x30)(%rip),%rax
	xchgq %rax,%r10
	movq (localObjptr+0x38)(%rip),%rcx
	xchgq %rcx,%rdi
	movq %rdx,(localObjptr+0x88)(%rip)
	movq (localObjptr+0x28)(%rip),%rdx
	movq %rcx,(localObjptr+0x98)(%rip)
	movq (localObjptr+0x48)(%rip),%rcx
	movq %rsp,(localObjptr+0x58)(%rip)
	movq %rax,(localObjptr+0x90)(%rip)
	jmp L_248096
.p2align 0x4
L_481792:
L_248093:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481793:
L_248191:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_248192+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_248192
.p2align 0x4
.long 0x4DE
L_248192:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_248092
.p2align 0x4
.long 0x3CE8
L_248097:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
	movq 0x108(%rbp),%r13
	movq %r13,0x20(%rbp)
	movq 0xF8(%rbp),%r13
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_248102
L_248098:
	movq 0x0(%r11),%r14
	movq 0x8(%r11),%r11
	movq %r11,%r15
.p2align 0x4,,0x7
L_248099:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x0(%r14)
	cmpq $0x1,%r15
	je L_481795
L_248100:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_248099
.p2align 0x4
L_481795:
L_248102:
	movq 0xF0(%rbp),%r13
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_248107
L_248103:
	movq 0x0(%r11),%r14
	movq 0x8(%r11),%r11
	movq %r11,%r15
.p2align 0x4,,0x7
L_248104:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x0(%r14)
	cmpq $0x1,%r15
	je L_481796
L_248105:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_248104
.p2align 0x4
L_481796:
L_248107:
	movq 0xF0(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq $0x1,0x0(%r15)
	movq 0x20(%rbp),%r15
	movq %r15,0xF8(%rbp)
	addq $0xF8,%rbp
	leaq (L_248108+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_8
.p2align 0x4
.long 0x3CE9
L_248108:
	addq $0xFFFFFFFFFFFFFF08,%rbp
	movq 0xF8(%rbp),%r15
	movq %r15,0xF0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_248109
L_248186:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x100,%rbp
	leaq (L_248187+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_248187
.p2align 0x4
.long 0x3CFA
L_248187:
	addq $0xFFFFFFFFFFFFFF00,%rbp
L_248109:
	movq 0xF0(%rbp),%r14
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x145C,%r14
	jne L_481800
L_248111:
	movq 0x8(%r15),%r14
	movq 0x30(%r14),%r13
	movq %r13,0xF0(%rbp)
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_481799
L_248112:
L_248113:
	movq %r15,0x108(%rbp)
	movq $0x1,0xF8(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x100(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0x110(%rbp)
	addq $0xF8,%rbp
	leaq (L_248114+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3946
.p2align 0x4
L_481799:
L_248160:
	movq $0x2CD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xF8(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x71,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x100(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x2CD,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x108(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0x71,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,0x110(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r11)
	movl $0x0,0x4(%r11)
	movl $0x0,0x120(%rbp)
	movq 0x20(%rbp),%r10
	movq %r10,0x128(%rbp)
	movq %r15,0x130(%rbp)
	movq %r14,0x138(%rbp)
	movq %r11,0x140(%rbp)
	movq %r13,0x148(%rbp)
	addq $0x120,%rbp
	leaq (L_248161+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3813
.p2align 0x4
L_481800:
L_248110:
	movq (globalObjptr+0x1500)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3CEA
L_248114:
	addq $0xFFFFFFFFFFFFFF08,%rbp
	movq $0x1,0xF8(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x100(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x108(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0x110(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0x118(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0x120(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0x128(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x130(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x138(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x140(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x148(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x150(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x158(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x160(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x168(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x170(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0x178(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x180(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x188(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x190(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x198(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x1A0(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x1A8(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0x1B0(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0x1B8(%rbp)
	addq $0xF8,%rbp
	leaq (L_248115+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp cut_0
.p2align 0x4
.long 0x3CF3
L_248161:
	addq $0xFFFFFFFFFFFFFEE0,%rbp
	movq 0x120(%rbp),%r15
	movq %r15,0x118(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_248162
L_248184:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x128,%rbp
	leaq (L_248185+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_248185
.p2align 0x4
.long 0x3CF9
L_248185:
	addq $0xFFFFFFFFFFFFFED8,%rbp
L_248162:
	movq 0xF8(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_481802
L_248163:
	movq 0x8(%r14),%r15
	movq %r15,0x120(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x128(%rbp)
L_248164:
	movq 0x128(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x140(%rbp)
	movq $0x3DEB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x100(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x138(%rbp)
	addq $0x138,%rbp
	leaq (L_248165+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp remove_0
.p2align 0x4
L_481802:
L_248169:
	movq 0xF8(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq $0x1,0x0(%r15)
	movq 0x108(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_481803
L_248170:
	movq 0x8(%r14),%r15
	movq %r15,0xF8(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x100(%rbp)
L_248171:
	movq 0x100(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x130(%rbp)
	movq $0x3DCF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x110(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x128(%rbp)
	addq $0x128,%rbp
	leaq (L_248172+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp remove_0
.p2align 0x4
L_481803:
L_248176:
	movq 0x108(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq $0x1,0x0(%r15)
	movq 0x118(%rbp),%r15
	movq %r15,0x100(%rbp)
	addq $0x100,%rbp
	leaq (L_248177+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp collapse_0
.p2align 0x4
.long 0x3CEB
L_248115:
	addq $0xFFFFFFFFFFFFFF08,%rbp
	movq 0xF8(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_248116
L_248158:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF8,%rbp
	leaq (L_248159+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_248159
.p2align 0x4
.long 0x3CF2
L_248159:
	addq $0xFFFFFFFFFFFFFF08,%rbp
L_248116:
	movq 0xE0(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_481805
L_248117:
	movq 0x8(%r14),%r15
	movq %r15,0x20(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x28(%rbp)
L_248118:
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x100(%rbp)
	movq $0x3DED,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xE8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0xF8(%rbp)
	addq $0xF8,%rbp
	leaq (L_248119+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp remove_0
.p2align 0x4
L_481805:
L_248123:
	movq 0xE0(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq $0x1,0x0(%r15)
	movq 0xC8(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_481808
L_248124:
	movq $0x20CF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movl 0xC0(%rbp),%r14d
	testl %r14d,%r14d
	jnz L_481806
L_248125:
	movq %r15,0x0(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481806:
L_248126:
	movq %r15,0x20(%rbp)
L_248127:
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r14d
	testl %r14d,%r14d
	jz L_481807
L_248128:
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481807:
L_248129:
	movq 0xB8(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0xD0(%rbp)
	addq $0xC0,%rbp
	leaq (L_248130+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1221
.p2align 0x4
L_481808:
L_248152:
	movl 0xC0(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_481809
L_248153:
	movq $0x1,0x0(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481809:
L_248154:
	movq $0x1,0x20(%rbp)
	jmp L_248127
.p2align 0x4
.long 0x3CF4
L_248165:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
	movq 0x138(%rbp),%r15
	movq %r15,0x130(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_248166
L_248181:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x140,%rbp
	leaq (L_248182+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_248182
.p2align 0x4
.long 0x3CF8
L_248182:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
L_248166:
	movq 0x128(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x130(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x120(%rbp),%r15
	cmpq $0x1,%r15
	je L_248169
L_248167:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x120(%rbp)
	movq %r14,0x128(%rbp)
	jmp L_248164
.p2align 0x4
.long 0x3CF5
L_248172:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movq 0x128(%rbp),%r15
	movq %r15,0x120(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_248173
L_248178:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x130,%rbp
	leaq (L_248179+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_248179
.p2align 0x4
.long 0x3CF7
L_248179:
	addq $0xFFFFFFFFFFFFFED0,%rbp
L_248173:
	movq 0x100(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x120(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xF8(%rbp),%r15
	cmpq $0x1,%r15
	je L_248176
L_248174:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0xF8(%rbp)
	movq %r14,0x100(%rbp)
	jmp L_248171
.p2align 0x4
.long 0x3CF6
L_248177:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0xF8(%rbp)
	movq 0xF0(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp L_248113
.p2align 0x4
.long 0x3CEC
L_248119:
	addq $0xFFFFFFFFFFFFFF08,%rbp
	movq 0xF8(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_248120
L_248155:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF8,%rbp
	leaq (L_248156+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_248156
.p2align 0x4
.long 0x3CF1
L_248156:
	addq $0xFFFFFFFFFFFFFF08,%rbp
L_248120:
	movq 0x28(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r15
	cmpq $0x1,%r15
	je L_248123
L_248121:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x20(%rbp)
	movq %r14,0x28(%rbp)
	jmp L_248118
.p2align 0x4
.long 0x3CED
L_248130:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_248131
L_248150:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_248151+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_248151
.p2align 0x4
.long 0x3CF0
L_248151:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_248131:
	movq $0x2A6F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xA8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0xD0(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC0,%rbp
	leaq (L_248132+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3937
.p2align 0x4
.long 0x3CEE
L_248132:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_248133
L_248148:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_248149+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_248149
.p2align 0x4
.long 0x3CEF
L_248149:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_248133:
	movq $0x2CD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x28(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x71,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x38(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x30(%rbp),%r13
	movq %r13,0x48(%rbp)
	movq 0x18(%rbp),%r13
	movq %r13,0x50(%rbp)
	movq 0xB0(%rbp),%r13
	movq %r13,0x58(%rbp)
	movq %r15,0x60(%rbp)
	movq %r14,0x68(%rbp)
	addq $0x48,%rbp
	leaq (L_248134+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp replace_4
.p2align 0x4
.long 0x511
L_248134:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_248135
L_248146:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_248147+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_248147
.p2align 0x4
.long 0x5EE
L_248147:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_248135:
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_481819
L_248136:
	movq 0x8(%r14),%r15
	movq %r15,0x40(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x48(%rbp)
L_248137:
	movq 0x48(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x60(%rbp)
	movq $0x3D8F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_248138+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp remove_0
.p2align 0x4
L_481819:
L_248142:
	movq 0x28(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq $0x1,0x0(%r15)
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x767
L_248138:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_248139
L_248143:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_248144+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_248144
.p2align 0x4
.long 0x7AC
L_248144:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_248139:
	movq 0x48(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r15
	cmpq $0x1,%r15
	je L_248142
L_248140:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x40(%rbp)
	movq %r14,0x48(%rbp)
	jmp L_248137
.text
.p2align 0x4
.globl loop_3946
.hidden loop_3946
loop_3946:
L_248193:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_248194
L_248266:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_248267+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_248267
.p2align 0x4
.long 0x4AE
L_248267:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_248194:
	movq 0x10(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x30(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x38(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movl %r13d,0x40(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r15
	jne L_248196
L_248197:
	cmpl $0x0,%r13d
	jl L_248247
L_248198:
	movl $0x0,0x8(%rbp)
	movl $0x0,0xC(%rbp)
loop_2864:
	movl 0x40(%rbp),%r15d
	cmpl %r15d,0xC(%rbp)
	jl L_481832
L_248199:
	movq 0x20(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x8(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_248196
L_248201:
	cmpl $0x0,%r13d
	jl L_481830
L_248202:
	xorl %ecx,%ecx
	movl $0x0,0xC(%rbp)
loop_2865:
	movl 0xC(%rbp),%r15d
	cmpl 0x8(%rbp),%r15d
	jnl L_481829
L_248204:
	movslq %r15d,%r14
	movq %r14,%r15
	salq $0x4,%r15
	movq 0x20(%rbp),%r13
	movq 0x0(%r13,%r15,1),%r11
	movq %r11,0x10(%rbp)
	salq $0x4,%r14
	movq 0x8(%r13,%r14,1),%r15
	movq %r15,0x28(%rbp)
	movl %ecx,%ebx
.p2align 0x4,,0x7
loop_2866:
	movq 0x30(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_481828
L_248206:
	cmpl %ebx,%r13d
	je L_481827
L_248207:
	movslq %ebx,%r13
	cmpq %r14,%r13
	jnb L_481826
L_248210:
	movq 0x0(%r15,%r13,8),%r14
	movq 0x10(%r14),%r11
	movq 0x18(%r14),%r10
	movq 0x8(%r10),%r9
	movq 0x28(%rbp),%r8
	movq 0x8(%r8),%rsp
	movq 0x8(%rsp),%rsi
	cmpq %rsi,0x8(%r9)
	je L_481824
L_248211:
	incl %ebx
	jo L_481823
L_248213:
	jmp loop_2866
.p2align 0x4
L_481823:
L_248212:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481824:
L_248214:
	incl %ebx
	jo L_248212
L_248215:
	movq %r11,0x38(%rbp)
	movl %ebx,0x40(%rbp)
L_248216:
	movq 0x10(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_248217+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_7
.p2align 0x4
L_481826:
L_248209:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481827:
L_248245:
	movl %ecx,0x40(%rbp)
	movq $0x1,0x38(%rbp)
	jmp L_248216
.p2align 0x4
L_481828:
L_248196:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481829:
L_248203:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481830:
L_248247:
	movq (globalObjptr+0x4F8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481832:
L_248248:
	movslq 0xC(%rbp),%r15
	movq %r15,%r14
	salq $0x4,%r14
	movq 0x28(%rbp),%r13
	movq 0x0(%r13,%r14,1),%r11
	movq %r11,0x10(%rbp)
	salq $0x4,%r15
	movq 0x8(%r13,%r15,1),%r14
	movq %r14,0x48(%rbp)
	movl 0x8(%rbp),%r15d
	movl %r15d,0x44(%rbp)
.p2align 0x4,,0x7
loop_2867:
	movq 0x38(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_248196
L_248250:
	movl 0x44(%rbp),%r11d
	cmpl %r11d,%r13d
	je L_481838
L_248251:
	movslq %r11d,%r13
	cmpq %r14,%r13
	jnb L_248209
L_248253:
	movq 0x0(%r15,%r13,8),%r14
	movq 0x10(%r14),%r10
	movq %r10,0x50(%rbp)
	movq 0x48(%rbp),%r10
	movq 0x8(%r10),%r9
	movq 0x18(%r14),%r8
	movq 0x8(%r8),%rsp
	movq 0x8(%rsp),%rsi
	cmpq %rsi,0x8(%r9)
	je L_481834
L_248254:
	incl %r11d
	jo L_248212
L_248255:
	movl %r11d,0x44(%rbp)
	jmp loop_2867
.p2align 0x4
L_481834:
L_248256:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_248257
L_248261:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_248262+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_248262
.p2align 0x4
.long 0x9D1
L_248262:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_248257:
	movl 0x44(%rbp),%r15d
	incl %r15d
	movl %r15d,0x8(%rbp)
	jo L_248212
L_248258:
	movq $0x1BD3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x50(%rbp),%r14
	movq %r14,0x58(%rbp)
	movq %r15,0x50(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x50,%rbp
	leaq (L_248259+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3946
.p2align 0x4
L_481838:
L_248263:
	movq 0x10(%rbp),%r14
	movq %r14,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_248264+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp allNone_1
.p2align 0x4
.long 0x3CFB
L_248217:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r14
	movq %r14,0x48(%rbp)
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x144A,%r14
	jne L_481847
L_248219:
	movq 0x8(%r15),%r14
	movq 0x0(%r14),%r13
	movl 0xC(%r14),%ecx
	movq 0x30(%r14),%r11
	movb 0x0(%r11),%dl
	cmpq $0x1,0x38(%rbp)
	je L_481846
L_248220:
	testl %ecx,%ecx
	jnz L_481843
L_248221:
	xorl %ecx,%ecx
	movq %r13,%r15
L_248222:
	movl %ecx,0x50(%rbp)
	movq %r15,0x58(%rbp)
	movb %dl,0x60(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x50,%rbp
	leaq (L_248223+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp isPlausible_0
.p2align 0x4
L_481843:
L_248240:
	movq 0x38(%rbp),%r14
	movq 0x8(%r14),%r11
	movq 0xFFFFFFFFFFFFFFF8(%r11),%r15
	shrq $0x1,%r15
	cmpq $0x1051,%r15
	je L_481845
	cmpq $0x1052,%r15
	je L_481844
L_248241:
	xorl %ecx,%ecx
	movq %r13,%r15
	jmp L_248222
.p2align 0x4
L_481844:
L_248243:
	xorl %ecx,%ecx
	movq %r13,%r15
	jmp L_248222
.p2align 0x4
L_481845:
L_248242:
	movl $0x1,%ecx
	movq %r13,%r15
	jmp L_248222
.p2align 0x4
L_481846:
L_248225:
	movq $0x1,0x28(%rbp)
L_248226:
	movq 0x10(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_248227+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_7
.p2align 0x4
L_481847:
L_248218:
	movq (globalObjptr+0x1500)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x9D0
L_248259:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movl 0x8(%rbp),%ecx
L_248260:
	movl %ecx,0x8(%rbp)
	incl 0xC(%rbp)
	jmp loop_2864
.p2align 0x4
.long 0x9D0
L_248264:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movl 0x8(%rbp),%ecx
	jmp L_248260
.p2align 0x4
.long 0x3CFC
L_248223:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movl 0x50(%rbp),%r15d
	testl %r15d,%r15d
	movl %r15d,0x28(%rbp)
	jz L_248225
L_248239:
	movq 0x38(%rbp),%r15
	movq %r15,0x28(%rbp)
	jmp L_248226
.p2align 0x4
.long 0x3CFD
L_248227:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_248228
L_248237:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_248238+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_248238
.p2align 0x4
.long 0x3CFE
L_248238:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_248228:
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x144A,%r15
	jne L_248218
L_248229:
	movq 0x8(%r14),%r15
	movq 0x20(%r15),%r13
	movq 0x0(%r13),%r15
L_248230:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_248231
L_248232:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xD5C,%r14
	jne L_481850
L_248233:
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	jne L_481849
L_248236:
	movq $0x20BF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1AB9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r14,0x0(%r13)
	incl 0xC(%rbp)
	movl 0x40(%rbp),%ecx
	jmp loop_2865
.p2align 0x4
L_481849:
L_248234:
L_248235:
	movq (globalObjptr+0x4D68)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481850:
L_248231:
	movq (globalObjptr+0x4D38)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl isPlausible_0
.hidden isPlausible_0
isPlausible_0:
L_248268:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x40(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_248794
L_248269:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_481856
L_248270:
	movq 0x30(%rbp),%r15
	movq 0x40(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x68(%r15),%r14
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq 0x28(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x90(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1051,%r15
	je L_481855
	cmpq $0x1052,%r15
	je L_481854
L_248271:
	movq %r13,0xA8(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0xA0(%rbp)
	addq $0xA0,%rbp
	leaq (L_248272+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1232
.p2align 0x4
L_481854:
L_248789:
	movq %r13,0xA8(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0xA0(%rbp)
	addq $0xA0,%rbp
	leaq (L_248790+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1232
.p2align 0x4
L_481855:
L_248743:
	movq 0x0(%r14),%r15
	movq %r15,0xA8(%rbp)
	movq 0x10(%r11),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r13,0xB0(%rbp)
	movq $0x3EDF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0xA0(%rbp)
	addq $0x10,%r12
	addq $0xA0,%rbp
	leaq (L_248744+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp instantiateP_0
.p2align 0x4
L_481856:
L_248794:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_248795+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_248795
.p2align 0x4
.long 0xB24
L_248795:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_248270
.p2align 0x4
.long 0x3CFF
L_248272:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x10(%r15),%r14
	movb 0x0(%r14),%dl
	movb 0x10(%rbp),%r15b
	cmpb $0x1,%r15b
	je L_248275
	cmpb $0x2,%r15b
	je L_481868
L_248274:
	cmpb $0x1,%dl
	je L_481863
L_248275:
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	andq $0x1,%r14
	jnz L_481860
L_248276:
	movq 0x8(%rbp),%r15
	andq $0x1,%r15
	jz L_481858
L_248277:
	movq (globalObjptr+0xE440)(%rip),%r15
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_248278+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_481858:
L_248341:
	movl 0x0(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_481859
L_248342:
	movl $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481859:
L_248343:
	movq (globalObjptr+0xE440)(%rip),%r15
	movq %r15,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_248344+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_481860:
L_248394:
	movq 0x10(%rbp),%r15
	shrq $0x1,%r15
	movl %r15d,%r14d
	movq 0x8(%rbp),%r15
	movq %r15,%r13
	andq $0x1,%r13
	cmpq $0x1,%r13
	jne L_248277
L_248395:
	shrq $0x1,%r15
	movl %r15d,%r13d
	cmpl %r14d,%r13d
	je L_248341
	jmp L_248277
.p2align 0x4
L_481863:
L_248399:
	movq 0x48(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	cmpq $0x1,%r14
	je L_481867
	cmpq $0x2,%r14
	je L_481866
L_248400:
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x2,0x0(%r15)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x2075,%r15
	je L_481865
	cmpq $0x2076,%r15
	je L_481864
L_248401:
	movq 0x8(%r14),%r15
	movq %r15,0xA8(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0xA0(%rbp)
	leaq L_248734(%rip),%r15
	movq %r15,0x38(%rbp)
	movq %rbp,%r15
	addq $0x40,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0xA0,%rbp
	leaq (L_248402+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp setTyconNames_0
.p2align 0x4
L_481864:
L_248736:
	movq 0x8(%r14),%r15
	movq %r15,0xA8(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0xA0(%rbp)
	leaq L_248734(%rip),%r15
	movq %r15,0x38(%rbp)
	movq %rbp,%r15
	addq $0x40,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0xA0,%rbp
	leaq (L_248402+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp setTyconNames_0
.p2align 0x4
L_481865:
L_248735:
	movq 0x18(%r14),%r15
	movq %r15,0xA0(%rbp)
	movq 0x10(%r14),%r15
	movq %r15,0xA8(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0xB0(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0xB8(%rbp)
	leaq L_248734(%rip),%r15
	movq %r15,0x38(%rbp)
	movq %rbp,%r15
	addq $0x40,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0xA0,%rbp
	leaq (L_248402+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1230
.p2align 0x4
L_481866:
L_248738:
	movq $0x12,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481867:
L_248403:
	movq 0x40(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0xE440)(%rip),%r15
	movq %r15,0xA0(%rbp)
	addq $0xA0,%rbp
	leaq (L_248404+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_481868:
L_248741:
	cmpb $0x2,%dl
	je L_248275
	jmp L_248399
.p2align 0x4
.long 0x3CFF
L_248790:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x10(%r15),%r14
	movb 0x0(%r14),%dl
	movb 0x10(%rbp),%r15b
	cmpb $0x1,%r15b
	je L_248275
	cmpb $0x2,%r15b
	je L_248741
	jmp L_248274
.p2align 0x4
.long 0x3CFF
L_248744:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0xA8(%rbp),%r14
	movq %r14,0x98(%rbp)
	movq %r15,0xA0(%rbp)
	addq $0xA0,%rbp
	leaq (L_248745+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_0
.p2align 0x4
.long 0x3D00
L_248278:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_248279+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3D0D
L_248344:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_248345+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3D17
L_248402:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq $0x1,0x0(%r15)
	jmp L_248403
.p2align 0x4
.long 0xA1C
L_248734:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3D18
L_248404:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0xA0(%rbp)
	addq $0xA0,%rbp
	leaq (L_248405+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3CFF
L_248745:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1448,%r14
	jne L_481884
L_248746:
	movq 0x8(%r15),%r14
	movq 0x18(%r14),%r13
	cmpq $0x1,%r13
	je L_248760
	cmpq $0x2,%r13
	je L_248755
L_248747:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE73,%r15
	je L_481876
L_248764:
	movq 0x0(%r13),%r15
L_248765:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x23E0,%r14
	je L_481875
	cmpq $0x23E1,%r14
	je L_481874
	cmpq $0x23E2,%r14
	je L_481873
L_248766:
	movq 0x10(%r15),%r14
	movq %r14,0xA8(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	addq $0xA0,%rbp
	leaq (L_248767+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1232
.p2align 0x4
L_481873:
L_248786:
	movq 0x8(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xA8(%rbp)
	addq $0xA0,%rbp
	leaq (loop_2872+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1233
.p2align 0x4
L_481874:
L_248785:
	movq 0x8(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xA8(%rbp)
	addq $0xA0,%rbp
	leaq (loop_2872+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1234
.p2align 0x4
L_481875:
L_248779:
	movq 0x8(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xA8(%rbp)
	addq $0xA0,%rbp
	leaq (loop_2872+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1235
.p2align 0x4
L_481876:
L_248748:
	movq 0x0(%r13),%r15
x_847:
	movq 0x0(%r15),%r14
	movq %r14,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	jne L_481880
L_248753:
	shrq $0x1,%r14
	movl %r14d,%r15d
	testl %r15d,%r15d
	jnz L_481878
L_248755:
	cmpb $0x1,0x10(%rbp)
	je L_248275
	jmp L_248399
.p2align 0x4
L_481878:
L_248760:
	cmpb $0x2,0x10(%rbp)
	je L_248399
	jmp L_248275
.p2align 0x4
L_481880:
L_248749:
	cmpb $0x2,0x10(%rbp)
	je L_248399
	jmp L_248275
.p2align 0x4
L_481884:
L_248573:
	movq (globalObjptr+0x1500)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3D01
L_248279:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_248280
L_248338:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_248339+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_248339
.p2align 0x4
.long 0x3D0B
L_248339:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_248280:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_481885
L_248281:
	movq 0x8(%r14),%r13
	movq %r13,0x18(%rbp)
	movq 0x0(%r14),%r13
	movq %r15,0x20(%rbp)
	movq %r13,%r15
L_248282:
	movq 0x8(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_248283+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_481885:
L_248337:
	movq 0x18(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq $0x1,0x18(%rbp)
L_248287:
	movq (globalObjptr+0xA050)(%rip),%r15
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_248288+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3D0E
L_248345:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_248346
L_248392:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_248393+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_248393
.p2align 0x4
.long 0x3D16
L_248393:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_248346:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_481887
L_248347:
	movq %r15,0x48(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x30(%rbp)
	movq 0x0(%r14),%r15
L_248348:
	movq 0x8(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_248349+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_481887:
L_248391:
	movq 0x30(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq $0x1,0x30(%rbp)
L_248353:
	movq (globalObjptr+0xA050)(%rip),%r15
	movq %r15,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_248354+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3D19
L_248405:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_248406
L_248732:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_248733+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_248733
.p2align 0x4
.long 0x3D56
L_248733:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_248406:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_481889
L_248407:
	movq %r15,0x48(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x30(%rbp)
	movq 0x0(%r14),%r15
L_248408:
	movq 0x8(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0xA0(%rbp)
	addq $0xA0,%rbp
	leaq (L_248409+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_481889:
L_248731:
	movq 0x30(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq $0x1,0x30(%rbp)
L_248413:
	movq (globalObjptr+0xA050)(%rip),%r15
	movq %r15,0xA0(%rbp)
	addq $0xA0,%rbp
	leaq (L_248414+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3D57
L_248767:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r14
	movq %r14,0x98(%rbp)
	movq 0x10(%r14),%r11
	movb 0x0(%r11),%r13b
	cmpb $0x1,%r13b
	je L_481895
	cmpb $0x2,%r13b
	je L_481894
L_248768:
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_248760
	cmpq $0x2,%r14
	je L_248755
L_248769:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xE73,%r15
	je L_481891
L_248771:
	movq 0x0(%r14),%r15
	jmp L_248765
.p2align 0x4
L_481891:
L_248770:
	movq 0x0(%r14),%r15
	jmp x_847
.p2align 0x4
L_481894:
L_248692:
	movq (globalObjptr+0x1B08)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481895:
L_248774:
	cmpb $0x1,0x10(%rbp)
	je L_248275
	jmp L_248399
.p2align 0x4
.long 0x3CFF
loop_2872:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r14
	movq %r14,0x30(%rbp)
	cmpq $0x1,%r14
	je L_248760
	cmpq $0x2,%r14
	je L_248755
L_248780:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xE73,%r15
	je L_481897
L_248782:
	movq 0x0(%r14),%r15
	jmp L_248765
.p2align 0x4
L_481897:
L_248781:
	movq 0x0(%r14),%r15
	jmp x_847
.p2align 0x4
.long 0x3D02
L_248283:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_248284
L_248335:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_248336+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_248336
.p2align 0x4
.long 0x3D0C
L_248336:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_248284:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_481900
L_248285:
	movq %r15,0x20(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	jmp L_248282
.p2align 0x4
L_481900:
L_248286:
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x20(%rbp)
	jmp L_248287
.p2align 0x4
.long 0x3D02
L_248288:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x18(%rbp),%r14
	movq %r14,0x98(%rbp)
	movq %r15,0xA0(%rbp)
	addq $0x98,%rbp
	leaq (L_248289+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3787
.p2align 0x4
.long 0x3D0F
L_248349:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_248350
L_248389:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_248390+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_248390
.p2align 0x4
.long 0x3D13
L_248390:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_248350:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_481902
L_248351:
	movq %r15,0x48(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	jmp L_248348
.p2align 0x4
L_481902:
L_248352:
	movq 0x48(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x48(%rbp)
	jmp L_248353
.p2align 0x4
.long 0x3D0F
L_248354:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x30(%rbp),%r14
	movq %r14,0x90(%rbp)
	movq %r15,0x98(%rbp)
	addq $0x90,%rbp
	leaq (L_248355+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3787
.p2align 0x4
.long 0x3D1A
L_248409:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r15
	movq %r15,0x88(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_248410
L_248729:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_248730+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_248730
.p2align 0x4
.long 0x3D53
L_248730:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_248410:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x88(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x30(%rbp),%r14
	cmpq $0x1,%r14
	je L_481904
L_248411:
	movq %r15,0x48(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x30(%rbp)
	jmp L_248408
.p2align 0x4
L_481904:
L_248412:
	movq 0x48(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x48(%rbp)
	jmp L_248413
.p2align 0x4
.long 0x3D1A
L_248414:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0x30(%rbp),%r14
	movq %r14,0xA0(%rbp)
	movq %r15,0xA8(%rbp)
	addq $0xA0,%rbp
	leaq (L_248415+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3787
.p2align 0x4
.long 0x3D01
L_248289:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_248290
L_248333:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_248334+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_248334
.p2align 0x4
.long 0x3D0B
L_248334:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_248290:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x30(%rbp)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%r13)
	movq 0x18(%rbp),%r14
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_248291:
	addl 0x0(%r15),%ecx
	movl %ecx,0x18(%rbp)
	jo L_481909
L_248293:
	cmpq $0x1,%r14
	je L_481906
L_248294:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_248291
.p2align 0x4
L_481906:
L_248295:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_248296
L_248331:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_248332+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_248332
.p2align 0x4
.long 0x3D0A
L_248332:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_248296:
	movl 0x18(%rbp),%ecx
	testl %ecx,%ecx
	jz L_481907
L_248297:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
L_248298:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x18(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x10568)(%rip),%r15
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_248299+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_481907:
L_248330:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_248298
.p2align 0x4
L_481909:
L_248292:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3D10
L_248355:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_248356
L_248387:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_248388+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_248388
.p2align 0x4
.long 0x3D15
L_248388:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_248356:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x58(%rbp)
	addq $0x18,%r12
	movq 0x48(%rbp),%r15
	movq %r15,0x0(%r13)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_248357:
	addl 0x0(%r15),%ecx
	movl %ecx,0x30(%rbp)
	jo L_248292
L_248358:
	cmpq $0x1,%r14
	je L_481911
L_248359:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_248357
.p2align 0x4
L_481911:
L_248360:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_248361
L_248385:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_248386+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_248386
.p2align 0x4
.long 0x3D14
L_248386:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_248361:
	movl 0x30(%rbp),%ecx
	testl %ecx,%ecx
	jz L_481912
L_248362:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
L_248363:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x30(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x105F8)(%rip),%r15
	movq %r15,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_248364+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_481912:
L_248384:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_248363
.p2align 0x4
.long 0x3D1B
L_248415:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_248416
L_248727:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_248728+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_248728
.p2align 0x4
.long 0x3D55
L_248728:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_248416:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x88(%rbp)
	addq $0x18,%r12
	movq 0x48(%rbp),%r15
	movq %r15,0x0(%r13)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_248417:
	addl 0x0(%r15),%ecx
	movl %ecx,0x30(%rbp)
	jo L_248292
L_248418:
	cmpq $0x1,%r14
	je L_481916
L_248419:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_248417
.p2align 0x4
L_481916:
L_248420:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_248421
L_248725:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_248726+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_248726
.p2align 0x4
.long 0x3D54
L_248726:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_248421:
	movl 0x30(%rbp),%ecx
	testl %ecx,%ecx
	jz L_481917
L_248422:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x88(%rbp),%r14
	movq %r14,0x0(%r15)
L_248423:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x30(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x10600)(%rip),%r15
	movq %r15,0xA0(%rbp)
	addq $0xA0,%rbp
	leaq (L_248424+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_481917:
L_248724:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_248423
.p2align 0x4
.long 0x3D03
L_248299:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x10(%rbp),%r15
	andq $0x1,%r15
	jnz L_481921
L_248300:
	movq (globalObjptr+0x10570)(%rip),%r15
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_248301+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_481921:
L_248328:
	movq 0x10(%rbp),%r15
	shrq $0x1,%r15
	movl %r15d,%r14d
	movl %r14d,0x98(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0xA0(%rbp)
	addq $0x98,%rbp
	leaq (L_248329+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0x3D11
L_248364:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_248365+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3D1C
L_248424:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0xA0(%rbp)
	addq $0xA0,%rbp
	leaq (L_248425+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3D02
L_248301:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0x105F0)(%rip),%r15
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_248302+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3D02
L_248329:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_248301+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3D12
L_248365:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq (globalObjptr+0xAC30)(%rip),%r15
	movq %r15,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_248366+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3D1D
L_248425:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq (globalObjptr+0xAC30)(%rip),%r15
	movq %r15,0xA0(%rbp)
	addq $0xA0,%rbp
	leaq (L_248426+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3D04
L_248302:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x8(%rbp),%r15
	andq $0x1,%r15
	jnz L_481922
L_248303:
	movq (globalObjptr+0x10570)(%rip),%r15
	movq %r15,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_248304+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_481922:
L_248326:
	movq 0x8(%rbp),%r15
	shrq $0x1,%r15
	movl %r15d,%r14d
	movl %r14d,0x90(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x90,%rbp
	leaq (L_248327+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0x3D0F
L_248366:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_248367
L_248382:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_248383+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_248383
.p2align 0x4
.long 0x3D13
L_248383:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_248367:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x60(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_248368:
	addl 0x0(%r15),%ecx
	movl %ecx,0x48(%rbp)
	jo L_248292
L_248369:
	cmpq $0x1,%r14
	je L_481923
L_248370:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_248368
.p2align 0x4
L_481923:
L_248371:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_248372
L_248380:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_248381+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_248381
.p2align 0x4
.long 0x3D08
L_248381:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_248372:
	movl 0x48(%rbp),%ecx
	testl %ecx,%ecx
	jz L_481925
L_248373:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
L_248374:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_248292
L_248375:
	movl %r13d,0x0(%r15)
	movq %r14,0x58(%rbp)
	movq (globalObjptr+0x9D0)(%rip),%r15
	movq %r15,0x50(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x68(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x50,%rbp
	leaq (L_248376+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_481925:
L_248379:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_248374
.p2align 0x4
.long 0x3D1A
L_248426:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r15
	movq %r15,0x88(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_248427
L_248722:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_248723+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_248723
.p2align 0x4
.long 0x3D53
L_248723:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_248427:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x88(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x98(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_248428:
	addl 0x0(%r15),%ecx
	movl %ecx,0x48(%rbp)
	jo L_248292
L_248429:
	cmpq $0x1,%r14
	je L_481929
L_248430:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_248428
.p2align 0x4
L_481929:
L_248431:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_248432
L_248720:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_248721+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_248721
.p2align 0x4
.long 0x3D52
L_248721:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_248432:
	movl 0x48(%rbp),%ecx
	testl %ecx,%ecx
	jz L_481930
L_248433:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x98(%rbp),%r14
	movq %r14,0x0(%r15)
L_248434:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x48(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x10608)(%rip),%r15
	movq %r15,0xA0(%rbp)
	addq $0xA0,%rbp
	leaq (L_248435+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_481930:
L_248719:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_248434
.p2align 0x4
.long 0x3D05
L_248304:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq (globalObjptr+0xF368)(%rip),%r15
	movq %r15,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_248305+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3D05
L_248327:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq %r15,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_248304+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x281B
L_248376:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq (globalObjptr+0x1610)(%rip),%r15
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_481934
L_248318:
	movl $0x0,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481934:
L_248320:
	movq (globalObjptr+0x1618)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3D1E
L_248435:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_248436
L_248717:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_248718+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_248718
.p2align 0x4
.long 0x3D51
L_248718:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_248436:
	movq 0x90(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1051,%r14
	je L_481942
	cmpq $0x1052,%r14
	je L_481936
L_248437:
	movq 0x70(%rbp),%r14
	movq 0x0(%r14),%r13
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r11
	movq %r11,0x58(%rbp)
	movq 0x18(%r14),%r10
	movq 0x0(%r11),%r15
	cmpq $0x1,%r15
	jne L_481935
L_248459:
	movq %r10,0x90(%rbp)
	movq %r13,0x98(%rbp)
	addq $0x90,%rbp
	leaq (L_248460+0x0)(%rip),%r14
	movq %r14,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unique_0
.p2align 0x4
L_481935:
L_248438:
L_248439:
	movq %r15,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_248440+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_481936:
L_248544:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	movq %r11,0x88(%rbp)
	cmpq %r11,%r15
	movq %r14,0x70(%rbp)
	jne L_481941
L_248546:
	testq %r11,%r11
	jz L_481940
L_248547:
	cmpq $0x7FFFFFFF,%r11
	ja L_481939
L_248548:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_248549
L_248713:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_248714+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_248714
.p2align 0x4
.long 0x3D33
L_248714:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_248549:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x15A7,%rcx
	movq 0x88(%rbp),%rdx
	movq $0x40,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_248550+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_248550
.p2align 0x4
.long 0x3D33
L_248550:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq %rax,0x90(%rbp)
L_248551:
	movl $0x0,0x98(%rbp)
	movq $0x0,0xA0(%rbp)
loop_2869:
	movq 0x88(%rbp),%r15
	cmpq %r15,0xA0(%rbp)
	jl L_481937
L_248552:
	movq 0x90(%rbp),%r15
	movq $0xC71,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x4B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0xC73,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq $0x3703,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r15,0x90(%rbp)
	addq $0x18,%r12
	addq $0x90,%rbp
	leaq (toList_17+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_15
.p2align 0x4
L_481937:
L_248566:
	movq 0xA0(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq %r15,%r14
	salq $0x5,%r14
	movq 0x70(%rbp),%r13
	movq 0x8(%r13,%r14,1),%r11
	movq %r11,0xC0(%rbp)
	salq $0x5,%r15
	movq 0x10(%r13,%r15,1),%r14
	movq %r14,0xA8(%rbp)
	movq 0x58(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq %r11,0xC8(%rbp)
	movq $0x3EE3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r15,0xB8(%rbp)
	addq $0x10,%r12
	addq $0xB8,%rbp
	leaq (L_248567+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp instantiateP_0
.p2align 0x4
L_481939:
L_248715:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481940:
L_248716:
	movq (globalObjptr+0x4DC0)(%rip),%r15
	movq %r15,0x90(%rbp)
	jmp L_248551
.p2align 0x4
L_481941:
L_248469:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481942:
L_248461:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xE7F,%r15
	je L_481943
L_248543:
	movq 0x18(%r14),%r15
	movq %r15,0x58(%rbp)
explainDoesNotAdmitEquality_0:
	movq 0x68(%rbp),%r15
	movq 0x70(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x68(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x60(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x58(%r15),%r14
	movq %r14,0x90(%rbp)
	movq 0x40(%r15),%r14
	movq %r14,0x98(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0xA8(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0xB0(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0xB8(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0xC0(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0xC8(%rbp)
	movq (globalObjptr+0xAF18)(%rip),%r15
	movq %r15,0xD8(%rbp)
	addq $0xD8,%rbp
	leaq (L_248463+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_481943:
L_248462:
	movq 0x0(%r14),%r15
	movq %r15,0x58(%rbp)
	jmp explainDoesNotAdmitEquality_0
.p2align 0x4
.long 0x3D06
L_248305:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_248306+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3D22
L_248460:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x58(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp L_248439
.p2align 0x4
.long 0x3D1F
L_248440:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_248441
L_248457:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_248458+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_248458
.p2align 0x4
.long 0x3D21
L_248458:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_248441:
	movq 0x58(%rbp),%r15
L_248442:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x58(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x50(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r14,%r15
	movq %r11,%r14
.p2align 0x4,,0x7
L_248443:
	addl 0x0(%r14),%ecx
	movl %ecx,0x50(%rbp)
	jo L_248292
L_248444:
	cmpq $0x1,%r15
	je L_481945
L_248445:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_248443
.p2align 0x4
L_481945:
L_248446:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_248447
L_248455:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_248456+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_248456
.p2align 0x4
.long 0x3D20
L_248456:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_248447:
	movl 0x50(%rbp),%ecx
	testl %ecx,%ecx
	jz L_481947
L_248448:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
L_248449:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_248292
L_248450:
	movl %r13d,0x0(%r15)
	movq %r14,0x50(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x68(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x50,%rbp
	leaq (L_248451+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_481947:
L_248454:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_248449
.p2align 0x4
.long 0x3D1F
toList_17:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_248553
L_248564:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_248565+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_248565
.p2align 0x4
.long 0x3D21
L_248565:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_248553:
	movq 0x58(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_248469
L_248555:
	movl %r13d,0x98(%rbp)
	movq $0x3BE9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq %r14,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_248556+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
.long 0x3D35
L_248567:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0xB0(%rbp)
	movq 0xC0(%rbp),%r14
	movq %r14,0xB8(%rbp)
	movq %r15,0xB8(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xB8,%rbp
	leaq (L_248568+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp deArrowOpt_0
.p2align 0x4
.long 0x3D23
L_248463:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_248464
L_248541:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_248542+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_248542
.p2align 0x4
.long 0x3D32
L_248542:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_248464:
	movq $0x619,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xD0(%rbp)
	addq $0x18,%r12
	movq (globalObjptr+0xCB0)(%rip),%r14
	movq %r14,0x0(%r15)
	movq 0x68(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1817,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0xD8(%rbp)
	addq $0x20,%r12
	movq %r15,0x0(%r14)
	movq 0x70(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x60(%rbp),%r11
	movq %r11,0x10(%r14)
	movq $0x1819,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0xE0(%rbp)
	addq $0x28,%r12
	movq 0x90(%rbp),%r10
	movq %r10,0x0(%r14)
	movq %r15,0x8(%r14)
	movq 0x88(%rbp),%r15
	movq %r15,0x10(%r14)
	movq %r13,0x18(%r14)
	movq (globalObjptr+0xF28)(%rip),%r14
	movq $0xC5B,0xFFFFFFFFFFFFFFF8(%r14)
	movq %r15,0xF0(%rbp)
	movq %r11,0xF8(%rbp)
	addq $0xF0,%rbp
	leaq (L_248465+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1232
.p2align 0x4
.long 0x3D07
L_248306:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_248307
L_248324:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_248325+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_248325
.p2align 0x4
.long 0x3D09
L_248325:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_248307:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x58(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x30(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x60(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x28(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_248308:
	addl 0x0(%r15),%ecx
	movl %ecx,0x48(%rbp)
	jo L_248292
L_248309:
	cmpq $0x1,%r14
	je L_481954
L_248310:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_248308
.p2align 0x4
L_481954:
L_248311:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_248312
L_248322:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_248323+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_248323
.p2align 0x4
.long 0x3D08
L_248323:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_248312:
	movl 0x48(%rbp),%ecx
	testl %ecx,%ecx
	jz L_481956
L_248313:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
L_248314:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_248292
L_248315:
	movl %r13d,0x0(%r15)
	movq %r14,0x58(%rbp)
	movq (globalObjptr+0x9D0)(%rip),%r15
	movq %r15,0x50(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x68(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x50,%rbp
	leaq (L_248316+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_481956:
L_248321:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_248314
.p2align 0x4
.long 0x281B
L_248451:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq (globalObjptr+0x1608)(%rip),%r15
	movq (globalObjptr+0x1610)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_248320
	jmp L_248318
.p2align 0x4
.long 0x3D1F
L_248556:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq %r15,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_248557+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3782
.p2align 0x4
.long 0x3D35
L_248568:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0xB0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_248569
L_248711:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_248712+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_248712
.p2align 0x4
.long 0x3D50
L_248712:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_248569:
	movq 0xB0(%rbp),%r15
	cmpq $0x1,%r15
	je L_481961
L_248570:
	movq 0x0(%r15),%r14
	movq %r14,0xB8(%rbp)
	movq %r14,0xC8(%rbp)
	addq $0xC8,%rbp
	leaq (L_248571+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_0
.p2align 0x4
L_481961:
L_248678:
	movl 0x98(%rbp),%ecx
	movq $0x1,%r15
L_248578:
	movl %ecx,0x98(%rbp)
	movq 0x90(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0xA0(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0xA0(%rbp)
	jmp loop_2869
.p2align 0x4
.long 0x3D24
L_248465:
	addq $0xFFFFFFFFFFFFFF10,%rbp
	movq 0xF0(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_248466
L_248539:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF0,%rbp
	leaq (L_248540+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_248540
.p2align 0x4
.long 0x3D31
L_248540:
	addq $0xFFFFFFFFFFFFFF10,%rbp
L_248466:
	movq 0x60(%rbp),%r13
	movq 0x10(%r13),%r11
	movb 0x0(%r11),%r14b
	cmpb $0x1,%r14b
	je L_481971
	cmpb $0x2,%r14b
	je L_248515
L_248467:
	movq (globalObjptr+0xF28)(%rip),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r14d
	movl %r14d,0x60(%rbp)
	movslq %r14d,%r13
	cmpq %r15,%r13
	jne L_248469
L_248470:
	xorl %ecx,%ecx
.p2align 0x4,,0x7
loop_2868:
	cmpl 0x60(%rbp),%ecx
	je L_481967
L_248471:
	movslq %ecx,%r14
	cmpq %r15,%r14
	jnb L_481966
L_248474:
	movq (globalObjptr+0xF28)(%rip),%r13
	cmpq $0x1,0x0(%r13,%r14,8)
	jne L_481964
L_248511:
	incl %ecx
	jo L_248292
L_248512:
	jmp loop_2868
.p2align 0x4
L_481964:
L_248475:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_248476
L_248509:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF0,%rbp
	leaq (L_248510+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_248510
.p2align 0x4
.long 0x3D2B
L_248510:
	addq $0xFFFFFFFFFFFFFF10,%rbp
L_248476:
	movq $0x3765,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movl $0x1,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0xD0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq (globalObjptr+0xF28)(%rip),%r14
	movq %r14,0x10(%r15)
	movq %r15,0xF0(%rbp)
	movl 0x60(%rbp),%r15d
	movl %r15d,0xF8(%rbp)
	addq $0xF0,%rbp
	leaq (L_248477+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_12
.p2align 0x4
L_481966:
L_248473:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_481967:
L_248513:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_248515
L_248516:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF0,%rbp
	leaq (L_248517+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_248517
.p2align 0x4
.long 0x3D2C
L_248517:
	addq $0xFFFFFFFFFFFFFF10,%rbp
L_248515:
	movq $0x1,%r15
L_248480:
	movq $0x2CD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x60(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x4123,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq $0xE,0x0(%r13)
	movq %r14,0x8(%r13)
	movq $0x71,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x68(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x607,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	addq $0x18,%r12
	movq %r14,0x8(%r11)
	movq %r11,0xF0(%rbp)
	movq $0x2CD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x70(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x71,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x88(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq 0x98(%rbp),%r11
	movq %r11,0xD0(%rbp)
	movq 0xD8(%rbp),%r11
	movq %r11,0xE8(%rbp)
	movq %r15,0xD8(%rbp)
	movq %r14,0xF8(%rbp)
	movq %r13,0x100(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x98(%rbp)
	movq 0xC8(%rbp),%r15
	movq 0xA0(%rbp),%r14
	movq %r14,0xC8(%rbp)
	movq %r15,0xA0(%rbp)
	movq 0xA8(%rbp),%r15
	movq 0xC0(%rbp),%r14
	movq %r14,0xA8(%rbp)
	movq %r15,0xC0(%rbp)
	movq 0xB8(%rbp),%r15
	movq 0xB0(%rbp),%r14
	movq %r14,0xB8(%rbp)
	movq %r15,0xB0(%rbp)
	addq $0x98,%rbp
	leaq (L_248481+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_123
.p2align 0x4
L_481971:
L_248518:
	movq (globalObjptr+0xF28)(%rip),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r10
	movl %r10d,%r9d
	movslq %r9d,%r8
	cmpq %r10,%r8
	jne L_248469
L_248520:
	movl %r9d,0xF8(%rbp)
	movq $0x3765,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	addq $0x20,%r12
	movl $0x0,0x0(%r10)
	movl $0x0,0x4(%r10)
	movq 0xD0(%rbp),%r9
	movq %r9,0x8(%r10)
	movq %r15,0x10(%r10)
	movq %r10,0xF0(%rbp)
	addq $0xF0,%rbp
	leaq (L_248521+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_12
.p2align 0x4
.long 0x281B
L_248316:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq (globalObjptr+0x1610)(%rip),%r15
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_248320
	jmp L_248318
.p2align 0x4
.long 0x3D1F
L_248557:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movl 0x90(%rbp),%r15d
	movl %r15d,0x58(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_248558
L_248562:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_248563+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_248563
.p2align 0x4
.long 0x3D34
L_248563:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_248558:
	movl 0x58(%rbp),%r14d
	testl %r14d,%r14d
	jz L_481976
L_248559:
	decl %r14d
	jo L_248292
L_248560:
	movq $0x1B67,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl $0x1,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x60(%rbp),%r13
	movq %r13,0x8(%r15)
	movq $0xC3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movl %r14d,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movl $0x0,0x4(%r13)
	movq %r13,%r15
	jmp L_248442
.p2align 0x4
L_481976:
L_248561:
	movq (globalObjptr+0x9D0)(%rip),%r15
	jmp L_248442
.p2align 0x4
.long 0x3D36
L_248571:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0xB0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_248572
L_248708:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_248709+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_248709
.p2align 0x4
.long 0x3D41
L_248709:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_248572:
	movq 0xB0(%rbp),%r14
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1448,%r14
	jne L_248573
L_248574:
	movq 0x8(%r15),%r14
	movq 0x18(%r14),%r13
	cmpq $0x1,%r13
	je L_248678
	cmpq $0x2,%r13
	je x_846
L_248575:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE73,%r15
	je L_481981
L_248679:
	movq 0x0(%r13),%r15
L_248680:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x23E0,%r14
	je L_481980
	cmpq $0x23E1,%r14
	je L_481979
	cmpq $0x23E2,%r14
	je L_481978
L_248681:
	movq 0x10(%r15),%r14
	movq %r14,0xD0(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0xC8(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xB0(%rbp)
	addq $0xC8,%rbp
	leaq (L_248682+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1232
.p2align 0x4
L_481978:
L_248705:
	movq 0x8(%r15),%r14
	movq %r14,0xC8(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xD0(%rbp)
	addq $0xC8,%rbp
	leaq (loop_2871+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1233
.p2align 0x4
L_481979:
L_248704:
	movq 0x8(%r15),%r14
	movq %r14,0xC8(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xD0(%rbp)
	addq $0xC8,%rbp
	leaq (loop_2871+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1234
.p2align 0x4
L_481980:
L_248695:
	movq 0x8(%r15),%r14
	movq %r14,0xC8(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xD0(%rbp)
	addq $0xC8,%rbp
	leaq (loop_2871+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1235
.p2align 0x4
L_481981:
L_248576:
	movq 0x0(%r13),%r15
x_845:
	movq 0x0(%r15),%r14
	movq %r14,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	jne L_481983
L_248579:
	shrq $0x1,%r14
	movl %r14d,%r15d
	testl %r15d,%r15d
	jnz L_248678
x_846:
	movq 0xA8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0xC8(%rbp)
	addq $0xC8,%rbp
	leaq (L_248581+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_481983:
L_248577:
	movl 0x98(%rbp),%ecx
	movq $0x1,%r15
	jmp L_248578
.p2align 0x4
.long 0x3D25
L_248477:
	addq $0xFFFFFFFFFFFFFF10,%rbp
	movq 0xF0(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq %r15,0xF0(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0xF8(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x100(%rbp)
	addq $0xF0,%rbp
	leaq (L_248478+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutApp_1
.p2align 0x4
.long 0x3D27
L_248481:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_248482
L_248505:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_248506+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_248506
.p2align 0x4
.long 0x25A1
L_248506:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_248482:
	movq 0x60(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_481987
L_248483:
	movq 0x8(%r14),%r15
	movq %r15,0x90(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x98(%rbp)
L_248484:
	movq 0x98(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0xB0(%rbp)
	movq $0x3DAB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0xA8(%rbp)
	addq $0xA8,%rbp
	leaq (L_248485+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp remove_0
.p2align 0x4
L_481987:
L_248489:
	movq 0x60(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq $0x1,0x0(%r15)
	movq 0x70(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_481988
L_248490:
	movq 0x8(%r14),%r15
	movq %r15,0x60(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x68(%rbp)
L_248491:
	movq 0x68(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq $0x3D93,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x88(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_248492+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp remove_0
.p2align 0x4
L_481988:
L_248496:
	movq 0x70(%rbp),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq $0x1,0x0(%r14)
	movq 0x58(%rbp),%r14
	cmpq $0x1,%r14
	je L_481989
L_248497:
	movq 0x8(%r14),%r15
	jmp L_248442
.p2align 0x4
L_481989:
L_248498:
	movq (globalObjptr+0xDD48)(%rip),%r15
	movq %r15,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_248440+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3D25
L_248521:
	addq $0xFFFFFFFFFFFFFF10,%rbp
	movq 0xF0(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq %r15,0xF0(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0xF8(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x100(%rbp)
	addq $0xF0,%rbp
	leaq (L_248522+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutApp_1
.p2align 0x4
.long 0x3D4E
L_248682:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0xC0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_248683
L_248693:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_248694+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_248694
.p2align 0x4
.long 0x3D4F
L_248694:
	addq $0xFFFFFFFFFFFFFF30,%rbp
L_248683:
	movq 0xC0(%rbp),%r13
	movq 0x10(%r13),%r11
	movb 0x0(%r11),%r14b
	cmpb $0x1,%r14b
	je x_846
	cmpb $0x2,%r14b
	je L_248692
L_248684:
	movq 0xB0(%rbp),%r14
	cmpq $0x1,%r14
	je L_248678
	cmpq $0x2,%r14
	je x_846
L_248685:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xE73,%r15
	je L_481991
L_248687:
	movq 0x0(%r14),%r15
	jmp L_248680
.p2align 0x4
L_481991:
L_248686:
	movq 0x0(%r14),%r15
	jmp x_845
.p2align 0x4
.long 0x3D36
loop_2871:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0xB0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_248696
L_248702:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_248703+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_248703
.p2align 0x4
.long 0x3D41
L_248703:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_248696:
	movq 0xB0(%rbp),%r14
	cmpq $0x1,%r14
	je L_248678
	cmpq $0x2,%r14
	je x_846
L_248697:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xE73,%r15
	je L_481995
L_248699:
	movq 0x0(%r14),%r15
	jmp L_248680
.p2align 0x4
L_481995:
L_248698:
	movq 0x0(%r14),%r15
	jmp x_845
.p2align 0x4
.long 0x3D37
L_248581:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0xA8(%rbp)
	movq (globalObjptr+0xDF68)(%rip),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC8,%rbp
	leaq (L_248582+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3D26
L_248478:
	addq $0xFFFFFFFFFFFFFF10,%rbp
	movq 0xF0(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_248479
L_248507:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF0,%rbp
	leaq (L_248508+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_248508
.p2align 0x4
.long 0x3D2A
L_248508:
	addq $0xFFFFFFFFFFFFFF10,%rbp
L_248479:
	movq 0x60(%rbp),%r15
	jmp L_248480
.p2align 0x4
.long 0x7E1
L_248485:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0xA0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_248486
L_248502:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_248503+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_248503
.p2align 0x4
.long 0x3D29
L_248503:
	addq $0xFFFFFFFFFFFFFF50,%rbp
L_248486:
	movq 0x98(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0xA0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x90(%rbp),%r15
	cmpq $0x1,%r15
	je L_248489
L_248487:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x90(%rbp)
	movq %r14,0x98(%rbp)
	jmp L_248484
.p2align 0x4
.long 0x2CAF
L_248492:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x90(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_248493
L_248499:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_248500+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_248500
.p2align 0x4
.long 0x3D28
L_248500:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_248493:
	movq 0x68(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x90(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r15
	cmpq $0x1,%r15
	je L_248496
L_248494:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x60(%rbp)
	movq %r14,0x68(%rbp)
	jmp L_248491
.p2align 0x4
.long 0x3D26
L_248522:
	addq $0xFFFFFFFFFFFFFF10,%rbp
	movq 0xF0(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x68(%rbp)
	movq (globalObjptr+0xDD28)(%rip),%r15
	movq %r15,0xF0(%rbp)
	addq $0xF0,%rbp
	leaq (L_248523+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3D36
L_248582:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq 0xC8(%rbp),%r15
	movq %r15,0xB0(%rbp)
	movq 0x68(%rbp),%r15
	movq 0x70(%r15),%r14
	movq %r14,0xC0(%rbp)
	movq 0x68(%r15),%r14
	movq %r14,0xC8(%rbp)
	movq 0x60(%r15),%r14
	movq %r14,0xD0(%rbp)
	movq 0x58(%r15),%r14
	movq %r14,0xD8(%rbp)
	movq 0x40(%r15),%r14
	movq %r14,0xE0(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0xE8(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0xF0(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0xF8(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x100(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x108(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x110(%rbp)
	movq (globalObjptr+0xAF18)(%rip),%r15
	movq %r15,0x120(%rbp)
	addq $0x120,%rbp
	leaq (L_248583+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3D2D
L_248523:
	addq $0xFFFFFFFFFFFFFF10,%rbp
	movq 0xF0(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq (globalObjptr+0x9F40)(%rip),%r15
	movq %r15,0xF0(%rbp)
	addq $0xF0,%rbp
	leaq (L_248524+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3D38
L_248583:
	addq $0xFFFFFFFFFFFFFEE0,%rbp
	movq 0x120(%rbp),%r15
	movq %r15,0x118(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_248584
L_248675:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x128,%rbp
	leaq (L_248676+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_248676
.p2align 0x4
.long 0x3D4D
L_248676:
	addq $0xFFFFFFFFFFFFFED8,%rbp
L_248584:
	movq $0x619,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x120(%rbp)
	addq $0x18,%r12
	movq (globalObjptr+0xCB0)(%rip),%r14
	movq %r14,0x0(%r15)
	movq 0x118(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1817,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x128(%rbp)
	addq $0x20,%r12
	movq %r15,0x0(%r14)
	movq 0xC8(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0xC0(%rbp),%r11
	movq %r11,0x10(%r14)
	movq $0x1819,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x130(%rbp)
	addq $0x28,%r12
	movq 0xD8(%rbp),%r10
	movq %r10,0x0(%r14)
	movq %r15,0x8(%r14)
	movq 0xD0(%rbp),%r15
	movq %r15,0x10(%r14)
	movq %r13,0x18(%r14)
	movq (globalObjptr+0xF28)(%rip),%r14
	movq $0xC5B,0xFFFFFFFFFFFFFFF8(%r14)
	movq %r15,0x140(%rbp)
	movq %r11,0x148(%rbp)
	addq $0x140,%rbp
	leaq (L_248585+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1232
.p2align 0x4
.long 0x3D2E
L_248524:
	addq $0xFFFFFFFFFFFFFF10,%rbp
	movq 0xF0(%rbp),%r15
	movq %r15,0x70(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_248525
L_248536:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF0,%rbp
	leaq (L_248537+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_248537
.p2align 0x4
.long 0x3D30
L_248537:
	addq $0xFFFFFFFFFFFFFF10,%rbp
L_248525:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x70(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x68(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x88(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x60(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_248526:
	addl 0x0(%r15),%ecx
	movl %ecx,0x60(%rbp)
	jo L_248292
L_248527:
	cmpq $0x1,%r14
	je L_482004
L_248528:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_248526
.p2align 0x4
L_482004:
L_248529:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_248530
L_248534:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF0,%rbp
	leaq (L_248535+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_248535
.p2align 0x4
.long 0x3D2F
L_248535:
	addq $0xFFFFFFFFFFFFFF10,%rbp
L_248530:
	movl 0x60(%rbp),%ecx
	testl %ecx,%ecx
	jz L_482005
L_248531:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x88(%rbp),%r14
	movq %r14,0x0(%r15)
L_248532:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x619,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0xCB0)(%rip),%r14
	movq %r14,0x0(%r15)
	jmp L_248480
.p2align 0x4
L_482005:
L_248533:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_248532
.p2align 0x4
.long 0x3D39
L_248585:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	movq 0x140(%rbp),%r15
	movq %r15,0xC0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_248586
L_248673:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x140,%rbp
	leaq (L_248674+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_248674
.p2align 0x4
.long 0x3D4C
L_248674:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
L_248586:
	movq 0xC0(%rbp),%r13
	movq 0x10(%r13),%r11
	movb 0x0(%r11),%r14b
	cmpb $0x1,%r14b
	je L_482017
	cmpb $0x2,%r14b
	je L_248649
L_248587:
	movq (globalObjptr+0xF28)(%rip),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r14d
	movl %r14d,0x9C(%rbp)
	movslq %r14d,%r13
	cmpq %r13,%r15
	jne L_248469
L_248589:
	xorl %ecx,%ecx
.p2align 0x4,,0x7
loop_2870:
	cmpl %ecx,0x9C(%rbp)
	je L_482013
L_248590:
	movslq %ecx,%r14
	cmpq %r15,%r14
	jnb L_248473
L_248592:
	movq (globalObjptr+0xF28)(%rip),%r13
	cmpq $0x1,0x0(%r13,%r14,8)
	jne L_482010
L_248645:
	incl %ecx
	jo L_248292
L_248646:
	jmp loop_2870
.p2align 0x4
L_482010:
L_248593:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_248594
L_248643:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x140,%rbp
	leaq (L_248644+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_248644
.p2align 0x4
.long 0x3D46
L_248644:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
L_248594:
	movq $0x3765,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movl $0x1,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x120(%rbp),%r14
	movq %r14,0x8(%r15)
	movq (globalObjptr+0xF28)(%rip),%r14
	movq %r14,0x10(%r15)
	movq %r15,0x140(%rbp)
	movl 0x9C(%rbp),%r15d
	movl %r15d,0x148(%rbp)
	addq $0x140,%rbp
	leaq (L_248595+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_12
.p2align 0x4
L_482013:
L_248647:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_248649
L_248650:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x140,%rbp
	leaq (L_248651+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_248651
.p2align 0x4
.long 0x3D47
L_248651:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
L_248649:
	movq $0x1,%r15
L_248598:
	movq $0x2CD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0xC0(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x4123,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq $0xE,0x0(%r13)
	movq %r14,0x8(%r13)
	movq $0x71,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0xC8(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x607,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	addq $0x18,%r12
	movq %r14,0x8(%r11)
	movq %r11,0x140(%rbp)
	movq $0x2CD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0xD0(%rbp)
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x71,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0xD8(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq 0xE8(%rbp),%r11
	movq %r11,0x118(%rbp)
	movq 0xE0(%rbp),%r11
	movq %r11,0x120(%rbp)
	movq 0x128(%rbp),%r11
	movq %r11,0x138(%rbp)
	movq %r15,0x128(%rbp)
	movq %r14,0x148(%rbp)
	movq %r13,0x150(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0xE8(%rbp)
	movq 0x110(%rbp),%r15
	movq 0xF0(%rbp),%r14
	movq %r14,0x110(%rbp)
	movq %r15,0xF0(%rbp)
	movq 0xF8(%rbp),%r15
	movq 0x108(%rbp),%r14
	movq %r14,0xF8(%rbp)
	movq %r15,0x108(%rbp)
	addq $0xE8,%rbp
	leaq (L_248599+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_123
.p2align 0x4
L_482017:
L_248652:
	movq (globalObjptr+0xF28)(%rip),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r10
	movl %r10d,%r9d
	movslq %r9d,%r8
	cmpq %r10,%r8
	jne L_248469
L_248654:
	movl %r9d,0x148(%rbp)
	movq $0x3765,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	addq $0x20,%r12
	movl $0x0,0x0(%r10)
	movl $0x0,0x4(%r10)
	movq 0x120(%rbp),%r9
	movq %r9,0x8(%r10)
	movq %r15,0x10(%r10)
	movq %r10,0x140(%rbp)
	addq $0x140,%rbp
	leaq (L_248655+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_12
.p2align 0x4
.long 0x3D3A
L_248595:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	movq 0x140(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq %r15,0x140(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0x148(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0x150(%rbp)
	addq $0x140,%rbp
	leaq (L_248596+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutApp_1
.p2align 0x4
.long 0x3D3C
L_248599:
	addq $0xFFFFFFFFFFFFFF18,%rbp
	movq 0xE8(%rbp),%r15
	movq %r15,0xB8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_248600
L_248639:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE8,%rbp
	leaq (L_248640+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_248640
.p2align 0x4
.long 0x3D44
L_248640:
	addq $0xFFFFFFFFFFFFFF18,%rbp
L_248600:
	movq 0xC0(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_482020
L_248601:
	movq 0x8(%r14),%r15
	movq %r15,0xE0(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0xE8(%rbp)
L_248602:
	movq 0xE8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x100(%rbp)
	movq $0x3DAB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xC8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0xF8(%rbp)
	addq $0xF8,%rbp
	leaq (L_248603+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp remove_0
.p2align 0x4
L_482020:
L_248607:
	movq 0xC0(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq $0x1,0x0(%r15)
	movq 0xD0(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_482021
L_248608:
	movq 0x8(%r14),%r15
	movq %r15,0xC0(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0xC8(%rbp)
L_248609:
	movq 0xC8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0xF0(%rbp)
	movq $0x3D93,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xD8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0xE8(%rbp)
	addq $0xE8,%rbp
	leaq (L_248610+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp remove_0
.p2align 0x4
L_482021:
L_248614:
	movq 0xD0(%rbp),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq $0x1,0x0(%r14)
	movq 0xB8(%rbp),%r14
	cmpq $0x1,%r14
	je L_482027
L_248615:
	movq 0x8(%r14),%r15
L_248616:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0xB0(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0xB8(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0xA8(%rbp),%r14
	movq %r14,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_248617:
	addl 0x0(%r14),%ecx
	movl %ecx,0x9C(%rbp)
	jo L_248292
L_248618:
	cmpq $0x1,%r15
	je L_482022
L_248619:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_248617
.p2align 0x4
L_482022:
L_248620:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_248621
L_248626:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_248627+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_248627
.p2align 0x4
.long 0x3D3F
L_248627:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_248621:
	movl 0x9C(%rbp),%ecx
	testl %ecx,%ecx
	jz L_482024
L_248622:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xB8(%rbp),%r14
	movq %r14,0x0(%r15)
L_248623:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movl 0x98(%rbp),%ecx
	incl %ecx
	jo L_248292
L_248624:
	movq %r14,%r15
	jmp L_248578
.p2align 0x4
L_482024:
L_248625:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_248623
.p2align 0x4
L_482027:
L_248628:
	movq (globalObjptr+0xDD48)(%rip),%r15
	movq %r15,0xC0(%rbp)
	addq $0xC0,%rbp
	leaq (L_248629+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3D3A
L_248655:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	movq 0x140(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq %r15,0x140(%rbp)
	movq 0xD0(%rbp),%r15
	movq %r15,0x148(%rbp)
	movq 0xC8(%rbp),%r15
	movq %r15,0x150(%rbp)
	addq $0x140,%rbp
	leaq (L_248656+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutApp_1
.p2align 0x4
.long 0x3D3B
L_248596:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	movq 0x140(%rbp),%r15
	movq %r15,0xC0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_248597
L_248641:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x140,%rbp
	leaq (L_248642+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_248642
.p2align 0x4
.long 0x3D45
L_248642:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
L_248597:
	movq 0xC0(%rbp),%r15
	jmp L_248598
.p2align 0x4
.long 0x3D3D
L_248603:
	addq $0xFFFFFFFFFFFFFF08,%rbp
	movq 0xF8(%rbp),%r15
	movq %r15,0xF0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_248604
L_248636:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x100,%rbp
	leaq (L_248637+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_248637
.p2align 0x4
.long 0x3D43
L_248637:
	addq $0xFFFFFFFFFFFFFF00,%rbp
L_248604:
	movq 0xE8(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0xF0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xE0(%rbp),%r15
	cmpq $0x1,%r15
	je L_248607
L_248605:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0xE0(%rbp)
	movq %r14,0xE8(%rbp)
	jmp L_248602
.p2align 0x4
.long 0x3D3E
L_248610:
	addq $0xFFFFFFFFFFFFFF18,%rbp
	movq 0xE8(%rbp),%r15
	movq %r15,0xE0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_248611
L_248633:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF0,%rbp
	leaq (L_248634+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_248634
.p2align 0x4
.long 0x3D42
L_248634:
	addq $0xFFFFFFFFFFFFFF10,%rbp
L_248611:
	movq 0xC8(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0xE0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xC0(%rbp),%r15
	cmpq $0x1,%r15
	je L_248614
L_248612:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0xC0(%rbp)
	movq %r14,0xC8(%rbp)
	jmp L_248609
.p2align 0x4
.long 0x3D40
L_248629:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0xB8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_248630
L_248631:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_248632+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_248632
.p2align 0x4
.long 0x3D41
L_248632:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_248630:
	movq 0xB8(%rbp),%r15
	jmp L_248616
.p2align 0x4
.long 0x3D3B
L_248656:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	movq 0x140(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0xC8(%rbp)
	movq (globalObjptr+0xDD28)(%rip),%r15
	movq %r15,0x140(%rbp)
	addq $0x140,%rbp
	leaq (L_248657+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3D48
L_248657:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	movq 0x140(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq (globalObjptr+0x9F40)(%rip),%r15
	movq %r15,0x140(%rbp)
	addq $0x140,%rbp
	leaq (L_248658+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3D49
L_248658:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	movq 0x140(%rbp),%r15
	movq %r15,0xD0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_248659
L_248670:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x140,%rbp
	leaq (L_248671+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_248671
.p2align 0x4
.long 0x3D4B
L_248671:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
L_248659:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xD0(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0xC8(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0xD8(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0xC0(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_248660:
	addl 0x0(%r15),%ecx
	movl %ecx,0x9C(%rbp)
	jo L_248292
L_248661:
	cmpq $0x1,%r14
	je L_482035
L_248662:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_248660
.p2align 0x4
L_482035:
L_248663:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_248664
L_248668:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x140,%rbp
	leaq (L_248669+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_248669
.p2align 0x4
.long 0x3D4A
L_248669:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
L_248664:
	movl 0x9C(%rbp),%ecx
	testl %ecx,%ecx
	jz L_482036
L_248665:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xD8(%rbp),%r14
	movq %r14,0x0(%r15)
L_248666:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x619,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0xCB0)(%rip),%r14
	movq %r14,0x0(%r15)
	jmp L_248598
.p2align 0x4
L_482036:
L_248667:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_248666
.text
.p2align 0x4
.globl get_123
.hidden get_123
get_123:
L_248796:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_248797
L_249318:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_249319+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_249319
.p2align 0x4
.long 0x677
L_249319:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_248797:
	movq 0x0(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x78,%rbp
	leaq (L_248798+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_0
.p2align 0x4
.long 0x65F
L_248798:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r13
	movq 0x0(%r13),%r15
	movq %r13,0x70(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1448,%r14
	jne L_482051
L_248800:
	movq 0x8(%r15),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x70(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_482050
L_248802:
	movq %r15,0x0(%r13)
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_482049
L_248803:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_248805:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_248806
L_249310:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xD5B,%r13
	jne L_248806
L_249311:
	movq 0x8(%r14),%r13
	movq 0x68(%rbp),%r11
	cmpq %r11,0x0(%r14)
	je L_482044
L_248806:
	incl %ecx
	jo L_482043
L_248808:
	cmpq $0x1,%r15
	je L_482041
L_248809:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_248805
.p2align 0x4
L_482041:
L_248810:
L_248811:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_482042
L_248813:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl x_848
L_249309:
	movl %ecx,0x0(%r15)
x_848:
	movq 0x0(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_248815+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_0
.p2align 0x4
L_482042:
L_248812:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_482043:
L_248807:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_482044:
L_249313:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_248812
L_249314:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_482045
L_249316:
	movl %ecx,0x0(%r15)
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_482045:
L_249315:
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_482049:
L_249317:
	xorl %ecx,%ecx
	jmp L_248811
.p2align 0x4
L_482050:
L_248801:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_482051:
L_248799:
	movq (globalObjptr+0x1500)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x8C2
L_248815:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x78(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_248816
L_249307:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_249308+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_249308
.p2align 0x4
.long 0x8DF
L_249308:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_248816:
	movq 0x78(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1448,%r15
	jne L_248799
L_248817:
	movq 0x8(%r14),%r15
	movq 0x10(%r15),%r13
	movq 0x60(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x28DD,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r14,0x8(%r11)
	addq $0x18,%r12
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq %r11,0x0(%r15)
	movq 0x0(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_248818+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_12
.p2align 0x4
.long 0x8C2
L_248818:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x78(%rbp)
	movb 0x0(%r15),%r14b
	cmpb $0x1,%r14b
	je L_482055
	cmpb $0x2,%r14b
	je L_482054
L_248819:
	movb $0x2,0x0(%r15)
	movq 0x0(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_248820+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_0
.p2align 0x4
L_482054:
L_249306:
	movq (globalObjptr+0x1BC0)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_482055:
L_249305:
	movq (globalObjptr+0x1AE0)(%rip),%r13
	movq %r13,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xF63
L_248820:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x80(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_248821
L_249303:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_249304+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_249304
.p2align 0x4
.long 0xF6E
L_249304:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_248821:
	movq 0x80(%rbp),%r14
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1448,%r14
	jne L_248799
L_248822:
	movq 0x8(%r15),%r14
	movq 0x0(%r14),%r13
	movq %r13,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	je L_482130
L_248823:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE77,%r15
	je L_482129
	cmpq $0xE78,%r15
	je L_482065
	cmpq $0xE79,%r15
	je L_482063
	cmpq $0xE7A,%r15
	je L_482061
	cmpq $0xE7B,%r15
	je L_482056
L_248824:
	movq $0x1,%r15
L_248825:
	movq 0x78(%rbp),%r14
	movb $0x1,0x0(%r14)
	movq $0x1AB7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	movq %r15,0x0(%rbp)
	addq $0x18,%r12
	movq 0x68(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x70(%rbp),%r15
	movq 0x0(%r15),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq %r11,0x0(%r15)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_482056:
L_249155:
	movq 0x8(%r13),%r15
	movq 0x0(%r13),%r14
	movq %r14,0x88(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x90(%rbp)
	cmpq %r14,%rdx
	movq %r15,0x80(%rbp)
	jne L_482060
L_249157:
	testq %rdx,%rdx
	jz L_482059
L_249158:
	cmpq $0x7FFFFFFF,%rdx
	ja L_482058
L_249159:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14C9,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_249160+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_249160
.p2align 0x4
.long 0x19C4
L_249160:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq %rax,0x98(%rbp)
L_249161:
	movq $0x0,0xA0(%rbp)
loop_2887:
	movq 0x90(%rbp),%r15
	cmpq %r15,0xA0(%rbp)
	jl L_482057
L_249162:
	movq 0x98(%rbp),%r15
	movq $0xC5B,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0x50(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0xB0(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0xA8(%rbp)
	addq $0xA8,%rbp
	leaq (L_249163+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1232
.p2align 0x4
L_482057:
L_249209:
	movq 0xA0(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x80(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0xB0(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0xD0(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0xD8(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0xE0(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0xE8(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0xF0(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0xF8(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x100(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x108(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x110(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x118(%rbp)
	addq $0xB0,%rbp
	leaq (L_249210+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_123
.p2align 0x4
L_482058:
L_248959:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_482059:
L_249212:
	movq (globalObjptr+0x4D10)(%rip),%r15
	movq %r15,0x98(%rbp)
	jmp L_249161
.p2align 0x4
L_482060:
L_248830:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_482061:
L_249105:
	movq 0x8(%r13),%r14
	movq %r14,0x80(%rbp)
	movq 0x0(%r13),%r14
	cmpq $0x1,%r14
	je L_482062
L_249106:
	movq 0x8(%r14),%r13
	movq %r13,0x88(%rbp)
	movq 0x0(%r14),%r14
	movq $0x1,0x90(%rbp)
	movq %r14,%r15
L_249107:
	movq 0x0(%r15),%r14
	movq %r14,0xA8(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x98(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0xB0(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0xD0(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0xD8(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0xE0(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0xE8(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0xF0(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0xF8(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x100(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x108(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x110(%rbp)
	addq $0xA8,%rbp
	leaq (L_249108+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_123
.p2align 0x4
L_482062:
L_249154:
	movq $0x1,0x50(%rbp)
L_249112:
	movq 0x80(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_249113+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_1
.p2align 0x4
L_482063:
L_249023:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r11
	movq %r11,0x80(%rbp)
	cmpq $0x1,%r14
	je L_482064
L_249024:
	movq 0x8(%r14),%r13
	movq %r13,0x88(%rbp)
	movq 0x0(%r14),%r14
	movq $0x1,0x90(%rbp)
	movq %r14,%r15
L_249025:
	movq 0x0(%r15),%r14
	movq %r14,0xA8(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x98(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0xB0(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0xD0(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0xD8(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0xE0(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0xE8(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0xF0(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0xF8(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x100(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x108(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x110(%rbp)
	addq $0xA8,%rbp
	leaq (L_249026+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_123
.p2align 0x4
L_482064:
L_249104:
	movq $0x1,0x50(%rbp)
L_249030:
	movq 0x80(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_249031+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp extra_0
.p2align 0x4
L_482065:
L_248827:
	movq 0x0(%r13),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x127F,%r14
	je L_482124
L_248998:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x88(%rbp)
	cmpq %rdx,%r15
	movq %r14,0x80(%rbp)
	jne L_248830
L_249000:
	testq %rdx,%rdx
	jz L_482122
L_249001:
	cmpq $0x7FFFFFFF,%rdx
	ja L_248959
L_249002:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14C9,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_249003+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_249003
.p2align 0x4
.long 0x19CB
L_249003:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq %rax,0x90(%rbp)
L_249004:
	movq $0x0,0x98(%rbp)
loop_2882:
	movq 0x88(%rbp),%r15
	cmpq %r15,0x98(%rbp)
	jl L_482120
L_249005:
	movq 0x90(%rbp),%r15
	movq $0xC5B,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x50(%rbp)
	cmpq %r14,%rdx
	jne L_248830
L_249007:
	testq %rdx,%rdx
	jz L_482118
L_249008:
	cmpq $0x7FFFFFFF,%rdx
	ja L_248959
L_249009:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xAB1,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_249010+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_249010
.p2align 0x4
.long 0x3D67
L_249010:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq %rax,0x58(%rbp)
L_249011:
	movq $0x0,0x60(%rbp)
.p2align 0x4,,0x7
loop_2883:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_482116
.p2align 0x4,,0x7
L_249012:
	movq 0x60(%rbp),%r15
	cmpq 0x50(%rbp),%r15
	jnl L_482066
L_249014:
	movl %r15d,%r14d
	movslq %r14d,%r13
	movq 0x90(%rbp),%r11
	movq 0x0(%r11,%r13,8),%r10
	movl %r14d,%r13d
	shlq $0x1,%r13
	orq $0x1,%r13
	movq $0x103D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r10,0x0(%r14)
	movq %r13,0x8(%r14)
	addq $0x18,%r12
	movq 0x58(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r14,0x0(%r13,%r15,8)
	incq %r15
	movq %r15,0x60(%rbp)
	jmp loop_2883
.p2align 0x4
L_482066:
L_249013:
	movq 0x58(%rbp),%r14
	movq $0xAF5,0xFFFFFFFFFFFFFFF8(%r14)
	movq %r14,0x80(%rbp)
	movq 0x48(%rbp),%r14
	xchgq %r14,%r15
x_849:
	movq 0x18(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x90(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x98(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xA0(%rbp)
	movq 0x80(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r15d
	movslq %r15d,%rdx
	movq %rdx,0xB0(%rbp)
	cmpq %r14,%rdx
	movq %r14,0xA8(%rbp)
	jne L_248830
L_248838:
	cmpq $0x7FFFFFFF,%rdx
	ja L_248959
L_248839:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xAB1,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_248840+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_248840
.p2align 0x4
.long 0x3D58
L_248840:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq %rax,0xB8(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2874:
	cmpq 0xB0(%rbp),%r15
	jnl L_482068
L_248987:
	movl %r15d,%r14d
	movslq %r14d,%r13
	cmpq 0xA8(%rbp),%r13
	jnb L_482067
L_248989:
	movq 0x80(%rbp),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq 0xB8(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r11,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_2874
.p2align 0x4
L_482067:
L_248847:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_482068:
L_248841:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_248842
L_248985:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_248986+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_248986
.p2align 0x4
.long 0x3D5A
L_248986:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_248842:
	movq 0xB0(%rbp),%r15
	movl %r15d,%r14d
	movl %r14d,0x80(%rbp)
	movslq %r14d,%r13
	movq %r13,0xA8(%rbp)
	cmpq %r13,%r15
	jne L_248830
L_248844:
	testl %r14d,%r14d
	jz L_482079
L_248845:
	movq $0x181B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0xC0(%rbp)
	addq $0x18,%r12
	movq 0xB8(%rbp),%r11
	movq %r11,0x0(%r13)
	movq %r11,0x8(%r13)
	cmpq $0x0,%r15
	jna L_248847
L_248848:
	movq 0x0(%r11),%r15
	cmpl $0x0,%r14d
	jl L_482077
L_248849:
	movq %r15,0xC8(%rbp)
	movl $0x0,0x84(%rbp)
	movl $0x0,0xD0(%rbp)
.p2align 0x4,,0x7
loop_2875:
	movl 0xD0(%rbp),%ecx
	cmpl 0x80(%rbp),%ecx
	jnl L_482073
L_248968:
	movslq %ecx,%r15
	movq 0xB8(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0xD8(%rbp)
	movq 0x8(%r13),%r14
	movq 0xC8(%rbp),%r11
	movq 0x8(%r11),%r10
	movq %r14,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	je L_482070
L_248969:
	movq %r10,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	jne L_482069
L_248976:
	movq %r13,%r15
.p2align 0x4,,0x7
L_248974:
	movq %r15,0xC8(%rbp)
	movl %ecx,0x84(%rbp)
	incl 0xD0(%rbp)
	jmp loop_2875
.p2align 0x4
L_482069:
L_248970:
	movq %r10,0xE8(%rbp)
	movq %r14,0xF0(%rbp)
	addq $0xE8,%rbp
	leaq (L_248971+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1216
.p2align 0x4
L_482070:
L_248977:
	shrq $0x1,%r14
	movl %r14d,%r11d
	movq %r10,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	jne L_482072
L_248979:
	shrq $0x1,%r10
	movl %r10d,%r14d
	cmpl %r11d,%r14d
	jl L_482071
L_248980:
	movq 0xC8(%rbp),%r15
	movl 0x84(%rbp),%r14d
	xchgl %r14d,%ecx
	jmp L_248974
.p2align 0x4
L_482071:
.p2align 0x4,,0x7
L_248973:
	movq 0xD8(%rbp),%r15
	movl 0xD0(%rbp),%ecx
	jmp L_248974
.p2align 0x4
L_482072:
L_248978:
	movq 0xC8(%rbp),%r15
	movl 0x84(%rbp),%r14d
	xchgl %r14d,%ecx
	jmp L_248974
.p2align 0x4
L_482073:
L_248850:
	movl 0x80(%rbp),%r15d
	decl %r15d
	movslq 0x84(%rbp),%r14
	movq 0xB0(%rbp),%r13
	cmpq %r13,%r14
	jnb L_248847
L_248852:
	movq 0xB8(%rbp),%r11
	movq 0x0(%r11,%r14,8),%r10
	movslq %r15d,%r9
	cmpq %r13,%r9
	jnb L_248847
L_248854:
	movq 0x0(%r11,%r9,8),%r13
	movq %r11,%r8
	shrq $0x8,%r8
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r8,1)
	movq %r13,0x0(%r11,%r14,8)
	movq %r11,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%rsp,%r14,1)
	movq %r10,0x0(%r11,%r9,8)
	decl %r15d
	jo L_248807
L_248855:
	movl %r15d,0xC8(%rbp)
	movl $0x0,0xCC(%rbp)
	movb $0x1,0xD0(%rbp)
	movq %r11,0xD8(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0xE0(%rbp)
	addq $0xC8,%rbp
	leaq (L_248856+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp qsort_32
.p2align 0x4
L_482077:
L_248983:
	movq (globalObjptr+0x4F8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_482079:
L_248859:
	movq 0xA8(%rbp),%rdx
	testq %rdx,%rdx
	jz L_482111
L_248860:
	cmpq $0x7FFFFFFF,%rdx
	ja L_248959
L_248861:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xAB1,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_248862+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_248862
.p2align 0x4
.long 0x3D5A
L_248862:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	movq %rax,0x80(%rbp)
L_248863:
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2876:
	cmpq 0xA8(%rbp),%r15
	jnl L_482081
L_248961:
	movl %r15d,%r14d
	movslq %r14d,%r13
	cmpq 0xB0(%rbp),%r13
	jnb L_248847
L_248963:
	movq 0xB8(%rbp),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq 0x80(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r13,1)
	movq %r11,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_2876
.p2align 0x4
L_482081:
L_248864:
	movq 0x80(%rbp),%r14
	movq $0xAF5,0xFFFFFFFFFFFFFFF8(%r14)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%ecx
	movslq %ecx,%r14
	movq %r14,0xA8(%rbp)
	cmpq %r15,%r14
	jne L_248830
L_248866:
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_2877:
	cmpl %ebx,%ecx
	je L_482097
L_248867:
	movslq %ebx,%r14
	cmpq %r15,%r14
	jnb L_248847
L_248869:
	movq 0x80(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r11
	movq 0x8(%r11),%r10
	movq %r10,%r14
	andq $0x1,%r14
	cmpq $0x1,%r14
	jne L_248870
L_248925:
	shrq $0x1,%r10
	movl %r10d,%r14d
	cmpl %r14d,%ebx
	jne L_482083
L_248927:
	incl %ebx
	jo L_248807
L_248928:
	jmp loop_2877
.p2align 0x4
L_482083:
L_248870:
	movq 0x80(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%ecx
	movslq %ecx,%r14
	cmpq %r15,%r14
	jne L_248830
L_248872:
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_2878:
	cmpl %ecx,%ebx
	je L_482092
L_248873:
	movslq %ebx,%r14
	cmpq %r15,%r14
	jnb L_248847
L_248875:
	movq 0x80(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r11
	cmpq $0x1,0x0(%r11)
	jne L_482085
L_248918:
	incl %ebx
	jo L_248807
L_248919:
	jmp loop_2878
.p2align 0x4
L_482085:
L_248876:
	movq 0x80(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%ecx
	movslq %ecx,%r14
	cmpq %r14,%r15
	jne L_248830
L_248878:
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_2879:
	cmpl %ebx,%ecx
	je L_482089
L_248879:
	movslq %ebx,%r14
	cmpq %r15,%r14
	jnb L_248847
L_248881:
	movq 0x80(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r11
	cmpq $0x1,0x0(%r11)
	je L_482087
L_248882:
	incl %ebx
	jo L_248807
L_248883:
	jmp loop_2879
.p2align 0x4
L_482087:
L_248884:
	movq (globalObjptr+0xDD68)(%rip),%r15
	movq %r15,0x88(%rbp)
L_248885:
	movq (globalObjptr+0xDD60)(%rip),%r15
	movq %r15,0xB0(%rbp)
	addq $0xB0,%rbp
	leaq (L_248886+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_482089:
L_248917:
	movq (globalObjptr+0xA2F0)(%rip),%r15
	movq %r15,0x88(%rbp)
	jmp L_248885
.p2align 0x4
L_482092:
L_248920:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_248922
L_248923:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_248924+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_248924
.p2align 0x4
.long 0x10DE
L_248924:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_248922:
	movq $0x1,%r15
	jmp L_248825
.p2align 0x4
L_482097:
L_248929:
	movq 0xA8(%rbp),%rdx
	testq %rdx,%rdx
	jz L_482108
L_248930:
	cmpq $0x7FFFFFFF,%rdx
	ja L_248959
L_248931:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14C9,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_248932+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_248932
.p2align 0x4
.long 0x3D61
L_248932:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq %rax,0xA0(%rbp)
L_248933:
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2880:
	cmpq 0xA8(%rbp),%r15
	jnl L_482098
L_248957:
	movl %r15d,%r14d
	movslq %r14d,%r13
	movq 0x80(%rbp),%r14
	movq 0x0(%r14,%r13,8),%r11
	movq 0x0(%r11),%r10
	movq 0xA0(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r10,0x0(%r14,%r15,8)
	incq %r15
	jmp loop_2880
.p2align 0x4
L_482098:
L_248934:
	movq 0xA0(%rbp),%r14
	movq $0xC5B,0xFFFFFFFFFFFFFFF8(%r14)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%ecx
	movslq %ecx,%r14
	cmpq %r15,%r14
	jne L_248830
L_248936:
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_2881:
	cmpl %ebx,%ecx
	je L_482104
L_248937:
	movslq %ebx,%r14
	cmpq %r15,%r14
	jnb L_248847
L_248939:
	movq 0xA0(%rbp),%r13
	cmpq $0x1,0x0(%r13,%r14,8)
	jne L_482100
L_248951:
	incl %ebx
	jo L_248807
L_248952:
	jmp loop_2881
.p2align 0x4
L_482100:
L_248940:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_248941
L_248949:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_248950+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_248950
.p2align 0x4
.long 0x3D63
L_248950:
	addq $0xFFFFFFFFFFFFFF50,%rbp
L_248941:
	movq 0xA0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_248830
L_248943:
	movl %r13d,0xA8(%rbp)
	movq $0x374F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x98(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0xA0(%rbp)
	addq $0xA0,%rbp
	leaq (L_248944+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_12
.p2align 0x4
L_482104:
L_248953:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_248922
L_248955:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_248956+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_248956
.p2align 0x4
.long 0x10DE
L_248956:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	jmp L_248922
.p2align 0x4
L_482108:
L_248960:
	movq (globalObjptr+0x4D08)(%rip),%r15
	movq %r15,0xA0(%rbp)
	jmp L_248933
.p2align 0x4
L_482111:
L_248965:
	movq (globalObjptr+0x1018)(%rip),%r15
	movq %r15,0x80(%rbp)
	jmp L_248863
.p2align 0x4
L_482116:
L_249015:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_249016+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_249016
.p2align 0x4
.long 0x3D68
L_249016:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	jmp L_249012
.p2align 0x4
L_482118:
L_249018:
	movq (globalObjptr+0x16E0)(%rip),%r15
	movq %r15,0x58(%rbp)
	jmp L_249011
.p2align 0x4
L_482120:
L_249019:
	movq 0x98(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x80(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0xA8(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0xB0(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0xD0(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0xD8(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0xE0(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0xE8(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0xF0(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0xF8(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x100(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x108(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x110(%rbp)
	addq $0xA8,%rbp
	leaq (L_249020+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_123
.p2align 0x4
L_482122:
L_249022:
	movq (globalObjptr+0x4D00)(%rip),%r15
	movq %r15,0x90(%rbp)
	jmp L_249004
.p2align 0x4
L_482124:
L_248828:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x88(%rbp)
	cmpq %r15,%rdx
	movq %r14,0x80(%rbp)
	jne L_248830
L_248831:
	testq %rdx,%rdx
	jz L_482127
L_248832:
	cmpq $0x7FFFFFFF,%rdx
	ja L_248959
L_248833:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xAB1,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_248834+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_248834
.p2align 0x4
.long 0x19CB
L_248834:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq %rax,0x90(%rbp)
L_248835:
	movq $0x0,0x98(%rbp)
loop_2873:
	movq 0x88(%rbp),%r14
	cmpq %r14,0x98(%rbp)
	jl L_482125
L_248836:
	movq 0x90(%rbp),%r14
	movq $0xAF5,0xFFFFFFFFFFFFFFF8(%r14)
	movq %r14,0x80(%rbp)
	movq 0x48(%rbp),%r15
	jmp x_849
.p2align 0x4
L_482125:
L_248991:
	movq 0x98(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x80(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x0(%r13),%r11
	movq %r11,0xB0(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0xA0(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0xD0(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0xD8(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0xE0(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0xE8(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0xF0(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0xF8(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x100(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x108(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x110(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x118(%rbp)
	addq $0xB0,%rbp
	leaq (L_248992+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_123
.p2align 0x4
L_482127:
L_248997:
	movq (globalObjptr+0x4CF8)(%rip),%r15
	movq %r15,0x90(%rbp)
	jmp L_248835
.p2align 0x4
L_482129:
L_248826:
	movq 0x40(%rbp),%r15
	jmp L_248825
.p2align 0x4
L_482130:
L_249213:
	shrq $0x1,%r13
	movb %r13b,%r15b
	movb %r15b,0x40(%rbp)
	cmpb $0x1,%r15b
	je L_482137
	cmpb $0x2,%r15b
	je L_482136
	cmpb $0x3,%r15b
	je L_482131
L_249214:
	movq 0x20(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_249215+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp defaultWord_0
.p2align 0x4
L_482131:
L_249291:
	movq 0x38(%rbp),%r10
	movq 0x8(%r10),%r14
	movq 0x0(%r10),%r9
	movq 0x0(%r9),%r15
	cmpq %r15,(globalObjptr+0xCA68)(%rip)
	je L_482135
L_249292:
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r13
	cmpq $0x5,%r13
	jne L_249294
L_249295:
	xorq %r11,%r11
.p2align 0x4,,0x7
vectorEqualLoop_198:
	cmpq %r13,%r11
	je L_482133
L_249296:
	movq (globalObjptr+0xCA68)(%rip),%r9
	movb 0x0(%r9,%r11,1),%r10b
	cmpb %r10b,0x0(%r15,%r11,1)
	jne L_482132
L_249298:
	incq %r11
	jmp vectorEqualLoop_198
.p2align 0x4
L_482132:
L_249294:
	movq (globalObjptr+0x18C8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_482133:
	movq %r14,%r15
L_249300:
	movq 0x0(%r15),%r14
	movq %r14,0x18(%rbp)
	movq $0x1,0x88(%rbp)
	movl $0x0,0x90(%rbp)
	addq $0x88,%rbp
	leaq (L_249301+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_1
.p2align 0x4
L_482135:
	movq %r14,%r15
	jmp L_249300
.p2align 0x4
L_482136:
L_249288:
	movq 0x18(%rbp),%r14
	movq %r14,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_249289+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp defaultInt_0
.p2align 0x4
L_482137:
L_249266:
	movq 0x28(%rbp),%r10
	movq 0x8(%r10),%r14
	movq 0x0(%r10),%r9
	movq 0x0(%r9),%r8
	cmpq %r8,(globalObjptr+0xCA98)(%rip)
	je L_482143
L_249267:
	movq 0xFFFFFFFFFFFFFFF0(%r8),%r13
	cmpq $0x6,%r13
	sete %cl
	movzbl %cl,%ecx
	jne vectorEqual_247
L_249281:
	xorq %r11,%r11
	movq %r8,%r15
.p2align 0x4,,0x7
vectorEqualLoop_197:
	cmpq %r13,%r11
	je L_482142
L_249282:
	movq (globalObjptr+0xCA98)(%rip),%r10
	movb 0x0(%r15,%r11,1),%r9b
	cmpb %r9b,0x0(%r10,%r11,1)
	jne vectorEqual_246
L_249284:
	incq %r11
	jmp vectorEqualLoop_197
.p2align 0x4
vectorEqual_246:
vectorEqual_75:
	cmpq (globalObjptr+0xD6E8)(%rip),%r15
	je L_249277
L_249269:
	testl %ecx,%ecx
	jz L_249271
L_249272:
	xorq %r11,%r11
.p2align 0x4,,0x7
vectorEqualLoop_196:
	cmpq %r13,%r11
	je L_482139
L_249273:
	movq (globalObjptr+0xD6E8)(%rip),%r10
	movb 0x0(%r15,%r11,1),%r9b
	cmpb %r9b,0x0(%r10,%r11,1)
	jne L_482138
L_249275:
	incq %r11
	jmp vectorEqualLoop_196
.p2align 0x4
L_482138:
L_249271:
	movq (globalObjptr+0x1AD0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_482139:
L_249277:
	movq 0x0(%r14),%r15
	movq %r15,0x18(%rbp)
L_249278:
	movq $0x1,0x88(%rbp)
	movl $0x0,0x90(%rbp)
	addq $0x88,%rbp
	leaq (L_249279+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_1
.p2align 0x4
L_482142:
	movq %r14,%r15
L_249286:
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	jmp L_249278
.p2align 0x4
vectorEqual_247:
	movq %r8,%r15
	jmp vectorEqual_75
.p2align 0x4
L_482143:
	movq %r14,%r15
	jmp L_249286
.p2align 0x4
.long 0x3D72
L_249163:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x80(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_249164
L_249207:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_249208+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_249208
.p2align 0x4
.long 0x2CB4
L_249208:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_249164:
	movq 0x80(%rbp),%r13
	movq 0x10(%r13),%r11
	movb 0x0(%r11),%r14b
	cmpb $0x1,%r14b
	je L_482154
	cmpb $0x2,%r14b
	je L_248922
L_249165:
	movq 0x98(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r14d
	movl %r14d,0x80(%rbp)
	movslq %r14d,%r13
	cmpq %r15,%r13
	jne L_248830
L_249167:
	xorl %ecx,%ecx
.p2align 0x4,,0x7
loop_2888:
	cmpl %ecx,0x80(%rbp)
	je L_482150
L_249168:
	movslq %ecx,%r14
	cmpq %r15,%r14
	jnb L_248847
L_249170:
	movq 0x98(%rbp),%r13
	cmpq $0x1,0x0(%r13,%r14,8)
	jne L_482147
L_249180:
	incl %ecx
	jo L_248807
L_249181:
	jmp loop_2888
.p2align 0x4
L_482147:
L_249171:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_249172
L_249178:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_249179+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_249179
.p2align 0x4
.long 0x3D74
L_249179:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_249172:
	movq $0x3765,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movl $0x1,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x98(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0x98(%rbp)
	movl 0x80(%rbp),%r15d
	movl %r15d,0xA0(%rbp)
	addq $0x98,%rbp
	leaq (L_249173+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_12
.p2align 0x4
L_482150:
L_249182:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_248922
L_249184:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_249185+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_249185
.p2align 0x4
.long 0x10DE
L_249185:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	jmp L_248922
.p2align 0x4
L_482154:
L_249186:
	movq 0x98(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r10
	movl %r10d,%r9d
	movslq %r9d,%r8
	cmpq %r10,%r8
	jne L_248830
L_249188:
	movl %r9d,0xA0(%rbp)
	movq $0x3765,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	addq $0x20,%r12
	movl $0x0,0x0(%r10)
	movl $0x0,0x4(%r10)
	movq 0x60(%rbp),%r9
	movq %r9,0x8(%r10)
	movq %r15,0x10(%r10)
	movq %r10,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_249189+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_12
.p2align 0x4
.long 0x3D77
L_249210:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movq 0xB0(%rbp),%r15
	movq %r15,0xA8(%rbp)
	movq 0x98(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0xA0(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0xA0(%rbp)
	jmp loop_2887
.p2align 0x4
.long 0x1302
L_249108:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0xA0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_249109
L_249152:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_249153+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_249153
.p2align 0x4
.long 0x2272
L_249153:
	addq $0xFFFFFFFFFFFFFF50,%rbp
L_249109:
	movq $0x103D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xA0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x98(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x283B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x90(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x88(%rbp),%r13
	cmpq $0x1,%r13
	je L_482157
L_249110:
	movq %r14,0x90(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x88(%rbp)
	jmp L_249107
.p2align 0x4
L_482157:
L_249111:
	movq %r14,0x50(%rbp)
	jmp L_249112
.p2align 0x4
.long 0x3D70
L_249113:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x8(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1446,%r15
	jne L_248799
L_249114:
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r13
	movl 0x0(%r13),%r11d
	testl %r11d,%r11d
	jnz L_482159
L_249115:
	movq 0x80(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_249116+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_1
.p2align 0x4
L_482159:
L_249151:
	movq (globalObjptr+0x1BC8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1302
L_249026:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0xA0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_249027
L_249102:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_249103+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_249103
.p2align 0x4
.long 0x2272
L_249103:
	addq $0xFFFFFFFFFFFFFF50,%rbp
L_249027:
	movq $0x103D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xA0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x98(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x283B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x90(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x88(%rbp),%r13
	cmpq $0x1,%r13
	je L_482161
L_249028:
	movq %r14,0x90(%rbp)
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	movq %r13,0x88(%rbp)
	jmp L_249025
.p2align 0x4
L_482161:
L_249029:
	movq %r14,0x50(%rbp)
	jmp L_249030
.p2align 0x4
.long 0x3D6A
L_249031:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq $0x1,%r15
	je L_482188
L_249032:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r15
	movq %r15,0x58(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq %r14,0x50(%rbp)
.p2align 0x4,,0x7
L_249033:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_482187
.p2align 0x4,,0x7
L_249034:
	movq 0x58(%rbp),%r15
	movq 0x8(%r15),%r14
	movq $0x103D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq $0x1,0x0(%r15)
	movq $0x283B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x60(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x50(%rbp),%r15
	cmpq $0x1,%r15
	je L_482163
L_249035:
	movq %r14,0x60(%rbp)
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x50(%rbp)
	movq %r14,0x58(%rbp)
	jmp L_249033
.p2align 0x4
L_482163:
L_249036:
	xchgq %r14,%r15
L_249037:
	cmpq $0x1,%r15
	je L_482186
L_249038:
	movq %r15,%r14
	movq 0x8(%r15),%r15
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_249039:
	incl %ecx
	jo L_248807
L_249040:
	cmpq $0x1,%r15
	je L_482164
L_249041:
	movq 0x8(%r15),%r15
	jmp L_249039
.p2align 0x4
L_482164:
L_249042:
	movq %r14,0x50(%rbp)
L_249043:
	movslq %ecx,%rdx
	movq %rdx,0x58(%rbp)
	cmpq $0x7FFFFFFF,%rdx
	ja L_248959
L_249044:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xAB1,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_249045+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_249045
.p2align 0x4
.long 0x3D6B
L_249045:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq %rax,0x60(%rbp)
	movq 0x50(%rbp),%r14
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2884:
	cmpq 0x58(%rbp),%r15
	jnl L_482166
L_249094:
	cmpq $0x1,%r14
	je L_482165
L_249095:
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r14
	movq 0x60(%rbp),%r11
	movq %r11,%r10
	shrq $0x8,%r10
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r10,1)
	movq %r13,0x0(%r11,%r15,8)
	incq %r15
	jmp loop_2884
.p2align 0x4
L_482165:
L_249096:
	movq (globalObjptr+0x4B0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_482166:
L_249046:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_249047
L_249092:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_249093+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_249093
.p2align 0x4
.long 0x3D6F
L_249093:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_249047:
	movq 0x58(%rbp),%r15
	movl %r15d,%r14d
	movl %r14d,0x50(%rbp)
	movslq %r14d,%r13
	movq %r13,0x80(%rbp)
	cmpq %r13,%r15
	jne L_248830
L_249049:
	testl %r14d,%r14d
	jz L_482177
L_249050:
	movq $0x181B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x88(%rbp)
	addq $0x18,%r12
	movq 0x60(%rbp),%r11
	movq %r11,0x0(%r13)
	movq %r11,0x8(%r13)
	cmpq $0x0,%r15
	jna L_248847
L_249052:
	movq 0x0(%r11),%r15
	cmpl $0x0,%r14d
	jl L_248983
L_249053:
	movq %r15,0x90(%rbp)
	movl $0x0,0x54(%rbp)
	movl $0x0,0x98(%rbp)
.p2align 0x4,,0x7
loop_2885:
	movl 0x98(%rbp),%ecx
	cmpl 0x50(%rbp),%ecx
	jnl L_482171
L_249076:
	movslq %ecx,%r15
	movq 0x60(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0xA0(%rbp)
	movq 0x8(%r13),%r14
	movq 0x90(%rbp),%r11
	movq 0x8(%r11),%r10
	movq %r14,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	je L_482168
L_249077:
	movq %r10,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	jne L_482167
L_249084:
	movq %r13,%r15
.p2align 0x4,,0x7
L_249082:
	movq %r15,0x90(%rbp)
	movl %ecx,0x54(%rbp)
	incl 0x98(%rbp)
	jmp loop_2885
.p2align 0x4
L_482167:
L_249078:
	movq %r10,0xB0(%rbp)
	movq %r14,0xB8(%rbp)
	addq $0xB0,%rbp
	leaq (L_249079+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1216
.p2align 0x4
L_482168:
L_249085:
	shrq $0x1,%r14
	movl %r14d,%r11d
	movq %r10,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	jne L_482170
L_249087:
	shrq $0x1,%r10
	movl %r10d,%r14d
	cmpl %r11d,%r14d
	jl L_482169
L_249088:
	movq 0x90(%rbp),%r15
	movl 0x54(%rbp),%r14d
	xchgl %r14d,%ecx
	jmp L_249082
.p2align 0x4
L_482169:
.p2align 0x4,,0x7
L_249081:
	movq 0xA0(%rbp),%r15
	movl 0x98(%rbp),%ecx
	jmp L_249082
.p2align 0x4
L_482170:
L_249086:
	movq 0x90(%rbp),%r15
	movl 0x54(%rbp),%r14d
	xchgl %r14d,%ecx
	jmp L_249082
.p2align 0x4
L_482171:
L_249054:
	movl 0x50(%rbp),%r15d
	decl %r15d
	movslq 0x54(%rbp),%r14
	movq 0x58(%rbp),%r13
	cmpq %r13,%r14
	jnb L_248847
L_249056:
	movq 0x60(%rbp),%r11
	movq 0x0(%r11,%r14,8),%r10
	movslq %r15d,%r9
	cmpq %r13,%r9
	jnb L_248847
L_249058:
	movq 0x0(%r11,%r9,8),%r13
	movq %r11,%r8
	shrq $0x8,%r8
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r8,1)
	movq %r13,0x0(%r11,%r14,8)
	movq %r11,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%rsp,%r14,1)
	movq %r10,0x0(%r11,%r9,8)
	decl %r15d
	jo L_248807
L_249059:
	movl %r15d,0x90(%rbp)
	movl $0x0,0x94(%rbp)
	movb $0x0,0x98(%rbp)
	movq %r11,0xA0(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0xA8(%rbp)
	addq $0x90,%rbp
	leaq (L_249060+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp qsort_32
.p2align 0x4
L_482177:
L_249063:
	movq 0x80(%rbp),%rdx
	testq %rdx,%rdx
	jz L_482181
L_249064:
	cmpq $0x7FFFFFFF,%rdx
	ja L_248959
L_249065:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0xAB1,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_249066+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_249066
.p2align 0x4
.long 0x3D6D
L_249066:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq %rax,%r15
L_249067:
	xorq %r14,%r14
.p2align 0x4,,0x7
loop_2886:
	cmpq 0x80(%rbp),%r14
	jnl L_482179
L_249069:
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq 0x58(%rbp),%r11
	jnb L_248847
L_249071:
	movq 0x60(%rbp),%r13
	movq 0x0(%r13,%r11,8),%r10
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r10,0x0(%r15,%r14,8)
	incq %r14
	jmp loop_2886
.p2align 0x4
L_482179:
L_249068:
	movq $0xAF5,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x80(%rbp)
	movq 0x48(%rbp),%r15
	jmp x_849
.p2align 0x4
L_482181:
L_249073:
	movq (globalObjptr+0x1018)(%rip),%r15
	jmp L_249067
.p2align 0x4
L_482186:
L_249098:
	movq %r15,0x50(%rbp)
	xorl %ecx,%ecx
	jmp L_249043
.p2align 0x4
L_482187:
L_249099:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_249100+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_249100
.p2align 0x4
.long 0x259A
L_249100:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	jmp L_249034
.p2align 0x4
L_482188:
L_249101:
	movq 0x50(%rbp),%r14
	xchgq %r14,%r15
	jmp L_249037
.p2align 0x4
.long 0x3D64
L_248971:
	addq $0xFFFFFFFFFFFFFF18,%rbp
	movl 0xE8(%rbp),%r14d
	movl %r14d,0xD4(%rbp)
	testl %r14d,%r14d
	jz L_248973
L_248975:
	movq 0xC8(%rbp),%r15
	movl 0x84(%rbp),%ecx
	jmp L_248974
.p2align 0x4
.long 0x3D59
L_248856:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_248857
L_248966:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC8,%rbp
	leaq (L_248967+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_248967
.p2align 0x4
.long 0x3D5A
L_248967:
	addq $0xFFFFFFFFFFFFFF38,%rbp
L_248857:
	movq $0x3D0B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movb $0x1,%r14b
	movzbl %r14b,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0xB8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r14,0x10(%r15)
	movq %r15,0xC8(%rbp)
	movl 0x80(%rbp),%r15d
	movl %r15d,0xD0(%rbp)
	movl $0x1,0xD4(%rbp)
	addq $0xC8,%rbp
	leaq (L_248858+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fold_0
.p2align 0x4
.long 0x3D5B
L_248886:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movq 0xB0(%rbp),%r15
	movq %r15,0x90(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_248887
L_248915:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_248916+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_248916
.p2align 0x4
.long 0x3D60
L_248916:
	addq $0xFFFFFFFFFFFFFF50,%rbp
L_248887:
	movq 0x80(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_248830
L_248889:
	movl %r13d,0xA8(%rbp)
	movq $0x3C8D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0xA0(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0xA0(%rbp)
	addq $0xA0,%rbp
	leaq (L_248890+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
.long 0x3D5C
L_248944:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0x88(%rbp),%r14
	movq %r14,0x98(%rbp)
	movq %r15,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_248945+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutApp_1
.p2align 0x4
.long 0x3D69
L_249020:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0xA0(%rbp)
	movq 0x90(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x98(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x98(%rbp)
	jmp loop_2882
.p2align 0x4
.long 0x3D65
L_248992:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movq 0xB0(%rbp),%r15
	movq %r15,0xA8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_248993
L_248994:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_248995+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_248995
.p2align 0x4
.long 0x3D66
L_248995:
	addq $0xFFFFFFFFFFFFFF48,%rbp
L_248993:
	movq $0x103D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xA8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xA0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x90(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x98(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x98(%rbp)
	jmp loop_2873
.p2align 0x4
.long 0x3D78
L_249215:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq $0x1,0x88(%rbp)
	movl $0x0,0x90(%rbp)
	addq $0x88,%rbp
	leaq (L_249216+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_1
.p2align 0x4
.long 0x3D79
L_249301:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq %r15,0x88(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x88,%rbp
	leaq (L_249217+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp con_2
.p2align 0x4
.long 0x3D78
L_249289:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq $0x1,0x88(%rbp)
	movl $0x0,0x90(%rbp)
	addq $0x88,%rbp
	leaq (L_249290+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_1
.p2align 0x4
.long 0x3D79
L_249279:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq %r15,0x88(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x88,%rbp
	leaq (L_249217+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp con_2
.p2align 0x4
.long 0x3D73
L_249173:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x88(%rbp),%r14
	movq %r14,0x90(%rbp)
	movq 0x58(%rbp),%r14
	movq %r14,0x98(%rbp)
	movq %r15,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_249174+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutApp_1
.p2align 0x4
.long 0x3D73
L_249189:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x88(%rbp),%r14
	movq %r14,0x90(%rbp)
	movq 0x58(%rbp),%r14
	movq %r14,0x98(%rbp)
	movq %r15,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_249190+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutApp_1
.p2align 0x4
.long 0x3D71
L_249116:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r15,0x58(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1446,%r15
	jne L_248799
L_249117:
	movq 0x8(%r14),%r15
	movq 0x8(%r15),%r13
	cmpq $0x1,%r13
	je L_482206
L_249118:
	movq 0x8(%r13),%r15
	movq %r15,0x58(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x60(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x80(%rbp)
.p2align 0x4,,0x7
L_249119:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_482205
.p2align 0x4,,0x7
L_249120:
	movq 0x50(%rbp),%r13
	cmpq $0x1,%r13
	je L_249129
L_249121:
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r15
.p2align 0x4,,0x7
L_249122:
	movq 0x8(%r15),%r13
	movq 0x60(%rbp),%r15
	movq %r15,%r11
	andq $0x1,%r11
	cmpq $0x1,%r11
	je L_482201
L_249123:
L_249124:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_249125
L_249137:
	movq 0x8(%r13),%r11
	cmpq %r11,0x8(%r15)
	je L_482198
L_249125:
	cmpq $0x1,%r14
	je L_482194
L_249126:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_249122
.p2align 0x4
L_482194:
L_249127:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_482197
.p2align 0x4,,0x7
L_249129:
	movq $0x103D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x283B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x80(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0x58(%rbp),%r15
	cmpq $0x1,%r15
	je L_482195
L_249130:
	movq %r14,0x80(%rbp)
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x58(%rbp)
	movq %r14,0x60(%rbp)
	jmp L_249119
.p2align 0x4
L_482195:
L_249131:
	xchgq %r14,%r15
L_249132:
	cmpq $0x1,%r15
	je L_482196
L_249133:
	movq %r15,%r14
	movq 0x8(%r15),%r15
	xorl %ecx,%ecx
	jmp L_249039
.p2align 0x4
L_482196:
L_249134:
	movq %r15,0x50(%rbp)
	xorl %ecx,%ecx
	jmp L_249043
.p2align 0x4
L_482197:
L_249135:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_249136+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_249136
.p2align 0x4
.long 0xB98
L_249136:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	jmp L_249129
.p2align 0x4
L_482198:
L_249140:
	movq 0x58(%rbp),%r15
	cmpq $0x1,%r15
	je L_482199
L_249141:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x58(%rbp)
	movq %r14,0x60(%rbp)
	jmp L_249119
.p2align 0x4
L_482199:
L_249142:
	movq 0x80(%rbp),%r14
	xchgq %r14,%r15
	jmp L_249132
.p2align 0x4
L_482201:
L_249143:
	shrq $0x1,%r15
	movl %r15d,%r11d
	movq %r13,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	jne L_249125
L_249144:
	shrq $0x1,%r13
	movl %r13d,%r15d
	cmpl %r11d,%r15d
	je L_249140
	jmp L_249125
.p2align 0x4
L_482205:
L_249148:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_249149+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_249149
.p2align 0x4
.long 0xB98
L_249149:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	jmp L_249120
.p2align 0x4
L_482206:
L_249150:
	movq 0x50(%rbp),%r15
	jmp L_249132
.p2align 0x4
.long 0x3D6E
L_249079:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movl 0xB0(%rbp),%r14d
	movl %r14d,0x9C(%rbp)
	testl %r14d,%r14d
	jz L_249081
L_249083:
	movq 0x90(%rbp),%r15
	movl 0x54(%rbp),%ecx
	jmp L_249082
.p2align 0x4
.long 0x3D6C
L_249060:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_249061
L_249074:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_249075+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_249075
.p2align 0x4
.long 0x3D6D
L_249075:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_249061:
	movq $0x3D0B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movb $0x0,%r14b
	movzbl %r14b,%r13d
	movl %r13d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x60(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r14,0x10(%r15)
	movq %r15,0x90(%rbp)
	movl 0x50(%rbp),%r15d
	movl %r15d,0x98(%rbp)
	movl $0x1,0x9C(%rbp)
	addq $0x90,%rbp
	leaq (L_249062+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fold_0
.p2align 0x4
.long 0x3D59
L_248858:
	addq $0xFFFFFFFFFFFFFF38,%rbp
	jmp L_248859
.p2align 0x4
.long 0x3D5C
L_248890:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r14
	movq %r14,0xA0(%rbp)
	movq %r15,0xA8(%rbp)
	addq $0xA0,%rbp
	leaq (L_248891+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp separateRight_0
.p2align 0x4
.long 0x10DC
L_248945:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x80(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_248946
L_248947:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_248948+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_248948
.p2align 0x4
.long 0x3D62
L_248948:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_248946:
	movq 0x80(%rbp),%r15
	jmp L_248825
.p2align 0x4
.long 0x3D79
L_249216:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq %r15,0x88(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x88,%rbp
	leaq (L_249217+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp con_2
.p2align 0x4
.long 0x3D7A
L_249217:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq $0xA,0x88(%rbp)
	movq 0x0(%rbp),%r14
	movq %r14,0x90(%rbp)
	movq %r15,0x98(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0xA0(%rbp)
	addq $0x88,%rbp
	leaq (L_249218+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unify_1
.p2align 0x4
.long 0x3D79
L_249290:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq %r15,0x88(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x88,%rbp
	leaq (L_249217+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp con_2
.p2align 0x4
.long 0x10DC
L_249174:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x80(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_249175
L_249176:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_249177+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_249177
.p2align 0x4
.long 0x3D62
L_249177:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_249175:
	movq 0x80(%rbp),%r15
	jmp L_248825
.p2align 0x4
.long 0x10DC
L_249190:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x88(%rbp)
	movq (globalObjptr+0xDD28)(%rip),%r15
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_249191+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3D6C
L_249062:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	jmp L_249063
.p2align 0x4
.long 0x3D5C
L_248891:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq %r15,0xA0(%rbp)
	addq $0xA0,%rbp
	leaq (L_248892+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3782
.p2align 0x4
.long 0x3D7B
L_249218:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x10(%rbp)
	movb 0x40(%rbp),%r15b
	movb %r15b,0x88(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x88,%rbp
	leaq (L_249219+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp defaultTycon_0
.p2align 0x4
.long 0x3D75
L_249191:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq (globalObjptr+0x9F40)(%rip),%r15
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_249192+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3D5C
L_248892:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movl 0xA0(%rbp),%r15d
	movl %r15d,0x80(%rbp)
	movq 0xA8(%rbp),%r15
	movq %r15,0x98(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_248893
L_248913:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_248914+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_248914
.p2align 0x4
.long 0x3D5F
L_248914:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_248893:
	movl 0x80(%rbp),%ecx
	testl %ecx,%ecx
	jz L_482213
L_248894:
	decl %ecx
	jo L_248807
L_248895:
	movq $0x1B67,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x98(%rbp),%r14
	movq %r14,0x8(%r15)
L_248896:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x80(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq 0x88(%rbp),%r15
	movq %r15,0xA0(%rbp)
	addq $0xA0,%rbp
	leaq (L_248897+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_482213:
L_248912:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_248896
.p2align 0x4
.long 0x3D7C
L_249219:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq (globalObjptr+0xF28)(%rip),%r14
	movq $0xC5B,0xFFFFFFFFFFFFFFF8(%r14)
	movq 0x50(%rbp),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x98(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x60(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x80(%rbp)
	movq %r15,0x90(%rbp)
	addq $0x90,%rbp
	leaq (L_249220+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1232
.p2align 0x4
.long 0x3D76
L_249192:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x90(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_249193
L_249204:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_249205+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_249205
.p2align 0x4
.long 0x1396
L_249205:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_249193:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x90(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x88(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x98(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x80(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_249194:
	addl 0x0(%r15),%ecx
	movl %ecx,0x80(%rbp)
	jo L_248807
L_249195:
	cmpq $0x1,%r14
	je L_482215
L_249196:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_249194
.p2align 0x4
L_482215:
L_249197:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_249198
L_249202:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_249203+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_249203
.p2align 0x4
.long 0x3D5E
L_249203:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_249198:
	movl 0x80(%rbp),%ecx
	testl %ecx,%ecx
	jz L_482216
L_249199:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x98(%rbp),%r14
	movq %r14,0x0(%r15)
L_249200:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x619,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0xCB0)(%rip),%r14
	movq %r14,0x0(%r15)
	jmp L_248825
.p2align 0x4
L_482216:
L_249201:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_249200
.p2align 0x4
.long 0x3D5D
L_248897:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r15
	movq %r15,0x88(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_248898
L_248910:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_248911+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_248911
.p2align 0x4
.long 0x1396
L_248911:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_248898:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x88(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x80(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x98(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x90(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_248899:
	addl 0x0(%r15),%ecx
	movl %ecx,0x80(%rbp)
	jo L_248807
L_248900:
	cmpq $0x1,%r14
	je L_482220
L_248901:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_248899
.p2align 0x4
L_482220:
L_248902:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_248903
L_248908:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_248909+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_248909
.p2align 0x4
.long 0x3D5E
L_248909:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_248903:
	movl 0x80(%rbp),%ecx
	testl %ecx,%ecx
	jz L_482221
L_248904:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x98(%rbp),%r14
	movq %r14,0x0(%r15)
L_248905:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x619,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0xCB0)(%rip),%r14
	movq %r14,0x0(%r15)
	jmp L_248825
.p2align 0x4
L_482221:
L_248907:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_248905
.p2align 0x4
.long 0x3D7D
L_249220:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x88(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_249221
L_249264:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_249265+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_249265
.p2align 0x4
.long 0x3D80
L_249265:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_249221:
	movq 0x88(%rbp),%r13
	movq 0x10(%r13),%r11
	movb 0x0(%r11),%r14b
	cmpb $0x1,%r14b
	je L_482233
	cmpb $0x2,%r14b
	je L_248922
L_249222:
	movq (globalObjptr+0xF28)(%rip),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r14d
	movl %r14d,0x88(%rbp)
	movslq %r14d,%r13
	cmpq %r15,%r13
	jne L_248830
L_249224:
	xorl %ecx,%ecx
.p2align 0x4,,0x7
loop_2889:
	cmpl %ecx,0x88(%rbp)
	je L_482229
L_249225:
	movslq %ecx,%r14
	cmpq %r15,%r14
	jnb L_248847
L_249227:
	movq (globalObjptr+0xF28)(%rip),%r13
	cmpq $0x1,0x0(%r13,%r14,8)
	jne L_482226
L_249237:
	incl %ecx
	jo L_248807
L_249238:
	jmp loop_2889
.p2align 0x4
L_482226:
L_249228:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_249229
L_249235:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_249236+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_249236
.p2align 0x4
.long 0x3D7F
L_249236:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_249229:
	movq $0x3765,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movl $0x1,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x80(%rbp),%r14
	movq %r14,0x8(%r15)
	movq (globalObjptr+0xF28)(%rip),%r14
	movq %r14,0x10(%r15)
	movl 0x88(%rbp),%r14d
	movl %r14d,0x90(%rbp)
	movq %r15,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_249230+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_12
.p2align 0x4
L_482229:
L_249239:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_248922
L_249241:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_249242+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_249242
.p2align 0x4
.long 0x10DE
L_249242:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	jmp L_248922
.p2align 0x4
L_482233:
L_249243:
	movq (globalObjptr+0xF28)(%rip),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r10
	movl %r10d,%r9d
	movslq %r9d,%r8
	cmpq %r8,%r10
	jne L_248830
L_249245:
	movl %r9d,0x90(%rbp)
	movq $0x3765,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	addq $0x20,%r12
	movl $0x0,0x0(%r10)
	movl $0x0,0x4(%r10)
	movq 0x80(%rbp),%r9
	movq %r9,0x8(%r10)
	movq %r15,0x10(%r10)
	movq %r10,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_249246+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_12
.p2align 0x4
.long 0x3D7E
L_249230:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq %r15,0x88(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x88,%rbp
	leaq (L_249231+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutApp_1
.p2align 0x4
.long 0x3D7E
L_249246:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq %r15,0x88(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x90(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x88,%rbp
	leaq (L_249247+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutApp_1
.p2align 0x4
.long 0x10DC
L_249231:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x80(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_249232
L_249233:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_249234+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_249234
.p2align 0x4
.long 0x3D62
L_249234:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_249232:
	movq 0x80(%rbp),%r15
	jmp L_248825
.p2align 0x4
.long 0x10DC
L_249247:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x88(%rbp)
	movq (globalObjptr+0xDD28)(%rip),%r15
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_249248+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3D75
L_249248:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq (globalObjptr+0x9F40)(%rip),%r15
	movq %r15,0x98(%rbp)
	addq $0x98,%rbp
	leaq (L_249249+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3D76
L_249249:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x90(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_249250
L_249261:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_249262+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_249262
.p2align 0x4
.long 0x1396
L_249262:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_249250:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x90(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x88(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x98(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x80(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_249251:
	addl 0x0(%r15),%ecx
	movl %ecx,0x80(%rbp)
	jo L_248807
L_249252:
	cmpq $0x1,%r14
	je L_482237
L_249253:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_249251
.p2align 0x4
L_482237:
L_249254:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_249255
L_249259:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_249260+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_249260
.p2align 0x4
.long 0x3D5E
L_249260:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_249255:
	movl 0x80(%rbp),%ecx
	testl %ecx,%ecx
	jz L_482238
L_249256:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x98(%rbp),%r14
	movq %r14,0x0(%r15)
L_249257:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x619,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0xCB0)(%rip),%r14
	movq %r14,0x0(%r15)
	jmp L_248825
.p2align 0x4
L_482238:
L_249258:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_249257
.text
.p2align 0x4
.globl qsort_32
.hidden qsort_32
qsort_32:
L_249320:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb loop_2890
L_249410:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_249411+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_249411
.p2align 0x4
.long 0x2C
L_249411:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
loop_2890:
	movl 0x0(%rbp),%r15d
	subl 0x4(%rbp),%r15d
	jo L_249322
L_249323:
	cmpl $0x14,%r15d
	jng L_482243
L_249325:
	movq (globalObjptr+0x550)(%rip),%r14
	movl 0x0(%r14),%r13d
	imull $0x19660D,%r13d
	addl $0x3C6EF35F,%r13d
	movl %r13d,0xC(%rbp)
	movl %r13d,0x0(%r14)
	incl %r15d
	movl %r15d,0x20(%rbp)
	jo L_482242
L_249326:
	movl %r15d,0x30(%rbp)
	movl %r13d,0x34(%rbp)
	addq $0x30,%rbp
	leaq (L_249327+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp div_0
.p2align 0x4
L_482242:
L_249322:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_482243:
L_249324:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x609
L_249327:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movl 0x30(%rbp),%r15d
	movl %r15d,0x24(%rbp)
	movl 0x20(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	movl 0xC(%rbp),%r15d
	movl %r15d,0x2C(%rbp)
	addq $0x28,%rbp
	leaq (L_249328+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp mod_0
.p2align 0x4
.long 0x490
L_249328:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movl 0x28(%rbp),%r15d
	movl 0x4(%rbp),%ecx
	movl %ecx,%r14d
	addl %r15d,%r14d
	movl %r15d,0xC(%rbp)
	jo L_249322
L_249329:
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x0(%r15),%r11
	movq %r11,0x28(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movq %r15,0x30(%rbp)
	movslq %ecx,%r10
	movq %r10,0x38(%rbp)
	cmpq %r15,%r10
	jnb L_249331
L_249332:
	movq 0x0(%r13,%r10,8),%r9
	movslq %r14d,%r8
	cmpq %r15,%r8
	jnb L_249331
L_249334:
	movq 0x0(%r13,%r8,8),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r14
	movq %r14,0x40(%rbp)
	cmpq %r14,%r10
	jnb L_249331
L_249336:
	movq %r11,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r13,1)
	movq %r15,0x0(%r11,%r10,8)
	cmpq %r14,%r8
	jnb L_249331
L_249338:
	movq %r11,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%rsp,%r15,1)
	movq %r9,0x0(%r11,%r8,8)
	movq 0x10(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq %r14,0x48(%rbp)
	cmpq %r14,%r10
	jnb L_249331
L_249340:
	movq 0x0(%r15,%r10,8),%r14
	movq %r14,0x50(%rbp)
	movl 0x0(%rbp),%r15d
	incl %r15d
	jo L_249322
L_249341:
	movl %r15d,0xC(%rbp)
.p2align 0x4,,0x7
loop_2892:
	incl %ecx
	movl %ecx,0x58(%rbp)
	jo L_249322
L_249342:
	movslq %ecx,%r15
	movq %r15,0x60(%rbp)
	cmpq 0x48(%rbp),%r15
	jnb L_249331
L_249344:
	movq 0x10(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movb 0x8(%rbp),%r15b
	testb %r15b,%r15b
	jnz L_482268
L_249345:
	movq 0x50(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x8(%r13),%r15
	movq %r14,%r13
	andq $0x1,%r13
	cmpq $0x1,%r13
	je L_482246
L_249346:
	movq %r15,%r13
	andq $0x1,%r13
	cmpq $0x1,%r13
	jne L_482245
L_249395:
	jmp loop_2892
.p2align 0x4
L_482245:
L_249347:
	movq %r15,0x70(%rbp)
	movq %r14,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_249348+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1216
.p2align 0x4
L_482246:
L_249396:
	shrq $0x1,%r14
	movl %r14d,%r13d
	movq %r15,%r14
	andq $0x1,%r14
	cmpq $0x1,%r14
	jne L_482267
L_249398:
	shrq $0x1,%r15
	movl %r15d,%r14d
	cmpl %r13d,%r14d
	jl L_482266
.p2align 0x4,,0x7
L_249352:
	movl 0xC(%rbp),%ecx
.p2align 0x4,,0x7
loop_2893:
	decl %ecx
	movl %ecx,0xC(%rbp)
	jo L_249322
L_249353:
	movslq %ecx,%r15
	movq %r15,0x68(%rbp)
	cmpq 0x48(%rbp),%r15
	jnb L_249331
L_249355:
	movq 0x10(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movb 0x8(%rbp),%r15b
	testb %r15b,%r15b
	jnz L_482259
L_249356:
	movq 0x8(%r13),%r15
	movq 0x50(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r15,%r14
	andq $0x1,%r14
	cmpq $0x1,%r14
	je L_482248
L_249357:
	movq %r13,%r14
	andq $0x1,%r14
	cmpq $0x1,%r14
	jne L_482247
L_249380:
	jmp loop_2893
.p2align 0x4
L_482247:
L_249358:
	movq %r13,0x78(%rbp)
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_249359+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1216
.p2align 0x4
L_482248:
L_249381:
	shrq $0x1,%r15
	movl %r15d,%r14d
	movq %r13,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	jne L_249363
L_249383:
	shrq $0x1,%r13
	movl %r13d,%r15d
	cmpl %r14d,%r15d
	jl L_482257
.p2align 0x4,,0x7
L_249363:
	movl 0x58(%rbp),%ecx
	cmpl %ecx,0xC(%rbp)
	jl L_482253
L_249364:
	movq 0x60(%rbp),%r15
	movq 0x30(%rbp),%r14
	cmpq %r14,%r15
	jnb L_249331
L_249366:
	movq 0x20(%rbp),%r13
	movq 0x0(%r13,%r15,8),%r11
	movq 0x68(%rbp),%r10
	cmpq %r14,%r10
	jnb L_249331
L_249368:
	movq 0x0(%r13,%r10,8),%r14
	movq 0x40(%rbp),%r13
	cmpq %r13,%r15
	jnb L_249331
L_249370:
	movq 0x28(%rbp),%r9
	movq %r9,%r8
	shrq $0x8,%r8
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r8,1)
	movq %r14,0x0(%r9,%r15,8)
	cmpq %r13,%r10
	jnb L_482249
L_249372:
	movq %r9,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%rsp,%r15,1)
	movq %r11,0x0(%r9,%r10,8)
	jmp loop_2892
.p2align 0x4
L_482249:
L_249331:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_482253:
L_249373:
	movq 0x20(%rbp),%r15
	movq 0x38(%rbp),%r14
	movq 0x0(%r15,%r14,8),%r13
	movq 0x68(%rbp),%r11
	cmpq 0x30(%rbp),%r11
	jnb L_249331
L_249375:
	movq 0x0(%r15,%r11,8),%r10
	movq 0x28(%rbp),%r15
	movq %r15,%r9
	shrq $0x8,%r9
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r9,1)
	movq %r10,0x0(%r15,%r14,8)
	cmpq 0x40(%rbp),%r11
	jnb L_249331
L_249377:
	movq %r15,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r8,%r14,1)
	movq %r13,0x0(%r15,%r11,8)
	movl 0xC(%rbp),%r15d
	decl %r15d
	jo L_249322
L_249378:
	movl %r15d,0x68(%rbp)
	movl 0x4(%rbp),%r15d
	movl %r15d,0x6C(%rbp)
	movb 0x8(%rbp),%r15b
	movb %r15b,0x70(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x68,%rbp
	leaq (L_249379+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp qsort_32
.p2align 0x4
L_482257:
.p2align 0x4,,0x7
L_249361:
	movl 0xC(%rbp),%ecx
	jmp loop_2893
.p2align 0x4
L_482259:
L_249386:
	movq 0x8(%r13),%r15
	movq 0x50(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r15,%r14
	andq $0x1,%r14
	cmpq $0x1,%r14
	je L_482261
L_249387:
	movq %r13,%r14
	andq $0x1,%r14
	cmpq $0x1,%r14
	jne L_482260
L_249389:
	jmp loop_2893
.p2align 0x4
L_482260:
L_249388:
	movq %r13,0x78(%rbp)
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_249359+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1216
.p2align 0x4
L_482261:
L_249390:
	shrq $0x1,%r15
	movl %r15d,%r14d
	movq %r13,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	jne L_249363
L_249392:
	shrq $0x1,%r13
	movl %r13d,%r15d
	cmpl %r14d,%r15d
	jnl L_249363
L_249394:
	jmp loop_2893
.p2align 0x4
L_482266:
.p2align 0x4,,0x7
L_249350:
	movl 0x58(%rbp),%ecx
	jmp loop_2892
.p2align 0x4
L_482267:
L_249397:
	movl 0xC(%rbp),%r15d
	xchgl %r15d,%ecx
	jmp loop_2893
.p2align 0x4
L_482268:
L_249401:
	movq 0x50(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x8(%r13),%r15
	movq %r14,%r13
	andq $0x1,%r13
	cmpq $0x1,%r13
	je L_482270
L_249402:
	movq %r15,%r13
	andq $0x1,%r13
	cmpq $0x1,%r13
	jne L_482269
L_249404:
	jmp loop_2892
.p2align 0x4
L_482269:
L_249403:
	movq %r15,0x70(%rbp)
	movq %r14,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_249348+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1216
.p2align 0x4
L_482270:
L_249405:
	shrq $0x1,%r14
	movl %r14d,%r13d
	movq %r15,%r14
	andq $0x1,%r14
	cmpq $0x1,%r14
	jne L_482272
L_249407:
	shrq $0x1,%r15
	movl %r15d,%r14d
	cmpl %r13d,%r14d
	jl loop_2892
L_249408:
	movl 0xC(%rbp),%r15d
	xchgl %r15d,%ecx
	jmp loop_2893
.p2align 0x4
L_482272:
L_249406:
	movl 0xC(%rbp),%r15d
	xchgl %r15d,%ecx
	jmp loop_2893
.p2align 0x4
.long 0x60A
L_249348:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movl 0x70(%rbp),%r15d
	movl %r15d,0x5C(%rbp)
	testl %r15d,%r15d
	jnz L_249352
	jmp L_249350
.p2align 0x4
.long 0x60B
L_249359:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movl 0x78(%rbp),%r15d
	movl %r15d,0x5C(%rbp)
	testl %r15d,%r15d
	jnz L_249363
	jmp L_249361
.p2align 0x4
.long 0x60C
L_249379:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movl 0x58(%rbp),%r15d
	movl %r15d,0x4(%rbp)
	jmp loop_2890
.text
.p2align 0x4
.globl allNone_1
.hidden allNone_1
allNone_1:
L_249412:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_249413
L_249444:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_249445+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_249445
.p2align 0x4
.long 0x451
L_249445:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_249413:
	movq 0x0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x8(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movl %r13d,0x18(%rbp)
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_249415
L_249416:
	cmpl $0x0,%r13d
	jl L_249440
L_249417:
	movl $0x0,0x1C(%rbp)
loop_2894:
	movl 0x18(%rbp),%r15d
	cmpl %r15d,0x1C(%rbp)
	jl L_482287
L_249418:
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x10(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_482286
L_249420:
	cmpl $0x0,%r13d
	jl L_482285
L_249421:
	movl $0x0,0x14(%rbp)
loop_2895:
	movl 0x10(%rbp),%r15d
	cmpl %r15d,0x14(%rbp)
	jl L_482284
L_249422:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_482284:
L_249423:
	movslq 0x14(%rbp),%r15
	salq $0x4,%r15
	movq 0x8(%rbp),%r14
	movq 0x0(%r14,%r15,1),%r13
	movq %r13,0x18(%rbp)
	movq %r13,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_249424+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_7
.p2align 0x4
L_482285:
L_249440:
	movq (globalObjptr+0x4F8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_482286:
L_249415:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_482287:
L_249441:
	movslq 0x1C(%rbp),%r15
	salq $0x4,%r15
	movq 0x10(%rbp),%r14
	movq 0x0(%r14,%r15,1),%r13
	movq %r13,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_249442+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp allNone_1
.p2align 0x4
.long 0x4E0
L_249424:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	movq %r15,0x20(%rbp)
	shrq $0x1,%r13
	cmpq $0x144A,%r13
	jne L_482291
L_249426:
	movq 0x18(%rbp),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_249427+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_7
.p2align 0x4
L_482291:
L_249425:
	movq (globalObjptr+0x1500)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4F4
L_249442:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	incl 0x1C(%rbp)
	jmp loop_2894
.p2align 0x4
.long 0xB25
L_249427:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_249428
L_249437:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_249438+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_249438
.p2align 0x4
.long 0x522
L_249438:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_249428:
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x144A,%r15
	jne L_249425
L_249429:
	movq 0x8(%r14),%r15
	movq 0x20(%r15),%r13
	movq 0x0(%r13),%r15
L_249430:
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_249431
L_249432:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xD5C,%r14
	jne L_482293
L_249433:
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	jne L_482292
L_249436:
	movq $0x20BF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x1AB9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r14,0x0(%r13)
	incl 0x14(%rbp)
	jmp loop_2895
.p2align 0x4
L_482292:
L_249434:
L_249435:
	movq (globalObjptr+0x4D68)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_482293:
L_249431:
	movq (globalObjptr+0x4D38)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl cut_0
.hidden cut_0
cut_0:
L_249446:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0xD0(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_250513
L_249447:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_482310
L_249448:
	movq 0x10(%rbp),%r13
	movq 0x18(%r13),%r11
	movq %r11,0xD8(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_482309
L_249450:
	movq %r15,0x0(%r13)
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_482308
L_249451:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_249453:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_249454
L_250505:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xD62,%r13
	jne L_249454
L_250506:
	movq 0x8(%r14),%r13
	movq 0xC0(%rbp),%r11
	cmpq %r11,0x0(%r14)
	je L_482303
L_249454:
	incl %ecx
	movl %ecx,0xE0(%rbp)
	jo L_482302
L_249456:
	cmpq $0x1,%r15
	je L_482297
L_249457:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_249453
.p2align 0x4
L_482297:
L_249458:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_249459
L_250503:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF0,%rbp
	leaq (L_250504+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250504
.p2align 0x4
.long 0x3E28
L_250504:
	addq $0xFFFFFFFFFFFFFF10,%rbp
L_249459:
	movl 0xE0(%rbp),%ecx
L_249460:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_482300
L_249462:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_249464
L_250502:
	movl %ecx,0x0(%r15)
L_249464:
	movq 0xB8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x28DD,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0xD8(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r13,0x0(%r15)
	movq $0x1359,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x1AC5,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq 0xC0(%rbp),%r11
	movq %r11,0x0(%r13)
	movq %r15,0x8(%r13)
	movq 0x0(%r14),%r11
	movq $0x28DF,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r13,0x0(%r9)
	movq %r11,0x8(%r9)
	addq $0x18,%r12
	movq %r14,%r13
	shrq $0x8,%r13
	movb $0x1,0x0(%r10,%r13,1)
	movq %r9,0x0(%r14)
	movq %r15,0xD8(%rbp)
L_249465:
	movq 0xD8(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_482298
L_249466:
	movq 0x8(%r14),%r15
	movq %r15,0xE0(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0xE8(%rbp)
L_249467:
	movq 0xE8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0xF0(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x100(%rbp)
	addq $0x100,%rbp
	leaq (L_249468+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_8
.p2align 0x4
L_482298:
L_249473:
	movq 0x10(%rbp),%r15
	movq 0x20(%r15),%r14
	movq %r14,0xE0(%rbp)
	cmpq $0x1,%r14
	je really_1
L_249474:
	movq 0x8(%rbp),%r15
	movq %r15,0xF0(%rbp)
	addq $0xF0,%rbp
	leaq (L_249475+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_8
.p2align 0x4
really_1:
really_0:
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0xE0(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0xE8(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0xF0(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x100(%rbp)
	addq $0x100,%rbp
	leaq (L_249479+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_8
.p2align 0x4
L_482300:
L_249461:
	movq 0xD0(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x1080)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_482302:
L_249455:
	movq 0xD0(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_482303:
L_250508:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_249461
L_250509:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_482304
L_250511:
	movl %ecx,0x0(%r15)
	movq %r13,0xD8(%rbp)
	jmp L_249465
.p2align 0x4
L_482304:
L_250510:
	movq %r13,0xD8(%rbp)
	jmp L_249465
.p2align 0x4
L_482308:
L_250512:
	xorl %ecx,%ecx
	jmp L_249460
.p2align 0x4
L_482309:
L_249449:
	movq 0xD0(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x1088)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_482310:
L_250513:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xE0,%rbp
	leaq (L_250514+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250514
.p2align 0x4
.long 0x3E29
L_250514:
	addq $0xFFFFFFFFFFFFFF20,%rbp
	jmp L_249448
.p2align 0x4
.long 0x3D81
L_249468:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq %r15,0xF8(%rbp)
	movq 0xF0(%rbp),%r15
	movq %r15,0x108(%rbp)
	addq $0x108,%rbp
	leaq (L_249469+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_8
.p2align 0x4
.long 0x3D83
L_249475:
	addq $0xFFFFFFFFFFFFFF10,%rbp
	movq 0xF0(%rbp),%r15
	movq %r15,0xE8(%rbp)
	movq 0xE0(%rbp),%r15
	movq %r15,0xF8(%rbp)
	addq $0xF8,%rbp
	leaq (L_249476+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_8
.p2align 0x4
.long 0x3D85
L_249479:
	addq $0xFFFFFFFFFFFFFF00,%rbp
	movq 0x100(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r15,0x10(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x145C,%r15
	jne L_482342
L_249481:
	movq 0x8(%r14),%r15
	movq 0x8(%r15),%r13
	movq %r13,0x10(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0xF8(%rbp)
	movq 0x18(%r15),%r13
	movq %r13,0x100(%rbp)
	movq 0xF0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r15d
	movslq %r15d,%r11
	movl %r15d,0x110(%rbp)
	cmpq %r14,%r11
	movq %r14,0x108(%rbp)
	jne L_249483
L_249484:
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movl %r15d,%r14d
	movslq %r14d,%rdx
	movq %rdx,0x118(%rbp)
	cmpq %rdx,%r15
	jne L_249483
L_249486:
	cmpq $0x7FFFFFFF,%rdx
	ja L_250024
L_249487:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x29,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x128,%rbp
	leaq (L_249488+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_249488
.p2align 0x4
.long 0x3D86
L_249488:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movq %rax,0x120(%rbp)
	movl $0x0,0x114(%rbp)
	movq $0x0,0x128(%rbp)
loop_2896:
	movq 0x118(%rbp),%r15
	cmpq %r15,0x128(%rbp)
	jl L_482332
L_249489:
	movq 0xE8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r15d
	movslq %r15d,%r13
	movl %r15d,0xB8(%rbp)
	cmpq %r13,%r14
	movq %r14,0x98(%rbp)
	jne L_249483
L_249491:
	movq 0xF8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0xC0(%rbp)
	cmpq %r14,%rdx
	jne L_249483
L_249493:
	cmpq $0x7FFFFFFF,%rdx
	ja L_250024
L_249494:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x6CD,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x130,%rbp
	leaq (L_249495+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_249495
.p2align 0x4
.long 0x3D87
L_249495:
	addq $0xFFFFFFFFFFFFFED0,%rbp
	movq %rax,0xF0(%rbp)
	movl $0x0,0xBC(%rbp)
	movq $0x0,0x100(%rbp)
loop_2897:
	movq 0xC0(%rbp),%r15
	cmpq %r15,0x100(%rbp)
	jl L_482323
L_249496:
	movq 0xE0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r15d
	movslq %r15d,%r13
	movl %r15d,0x88(%rbp)
	cmpq %r13,%r14
	movq %r14,0x80(%rbp)
	jne L_249483
L_249498:
	movq 0x10(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	movq %r11,0x98(%rbp)
	cmpq %r14,%r11
	jne L_482321
L_249500:
	cmpq $0x7FFFFFFF,%r11
	ja L_482320
L_249501:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_249502
L_250021:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x130,%rbp
	leaq (L_250022+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250022
.p2align 0x4
.long 0x3D88
L_250022:
	addq $0xFFFFFFFFFFFFFED0,%rbp
L_249502:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x6CF,%rcx
	movq 0x98(%rbp),%rdx
	movq $0x70,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x130,%rbp
	leaq (L_249503+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_249503
.p2align 0x4
.long 0x3D88
L_249503:
	addq $0xFFFFFFFFFFFFFED0,%rbp
	movq %rax,0xB8(%rbp)
	movl $0x0,0x8C(%rbp)
	movq $0x0,0xC0(%rbp)
loop_2898:
	movq 0x98(%rbp),%r14
	cmpq %r14,0xC0(%rbp)
	jl L_482312
L_249504:
	movq $0x13,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x6D1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x18(%r14)
	addq $0x30,%r12
	movq 0xB8(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0xF0(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x120(%rbp),%r13
	movq %r13,0x10(%r14)
	movq 0x8(%rbp),%r13
	movq %r13,0x20(%r14)
	movq %r14,%r15
L_249505:
	movq $0x1125,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r15,0x0(%rbp)
	addq $0x18,%r12
	movq 0x8(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0xD8(%rbp),%r15
	movq 0x0(%r15),%r13
	movq $0x268D,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq %r11,0x0(%r15)
	movq 0xD0(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_482312:
L_249506:
	movq 0xC0(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq %r15,%r14
	salq $0x4,%r14
	movq 0x10(%rbp),%r13
	movq 0x0(%r13,%r14,1),%r11
	movq %r11,0xE8(%rbp)
	salq $0x4,%r15
	movq 0x8(%r13,%r15,1),%r14
	movq %r14,0xF8(%rbp)
	movl 0x8C(%rbp),%r15d
	movl %r15d,0x100(%rbp)
.p2align 0x4,,0x7
loop_2899:
	movl 0x100(%rbp),%r15d
	cmpl 0x88(%rbp),%r15d
	je L_482318
L_249507:
	movslq %r15d,%r14
	cmpq 0x80(%rbp),%r14
	jnb L_482317
L_249510:
	movq 0xE0(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x108(%rbp)
	movl 0x0(%r11),%r10d
	movl %r10d,0x104(%rbp)
	movq 0x10(%r11),%r10
	movq %r10,0x110(%rbp)
	movq 0x18(%r11),%r10
	movq %r10,0x118(%rbp)
	movq 0xF8(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x128(%rbp)
	movq 0x8(%r10),%r14
	movq 0x8(%r14),%r11
	cmpq %r11,0x8(%r13)
	je L_482314
L_249511:
	incl %r15d
	jo L_249455
L_249512:
	movl %r15d,0x100(%rbp)
	jmp loop_2899
.p2align 0x4
L_482314:
L_249513:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_249514
L_249924:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r14d
	movl %r14d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r14
	movq %r14,%rdi
	xorq %rax,%rax
	addq $0x138,%rbp
	leaq (L_249925+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_249925
.p2align 0x4
.long 0x3DC2
L_249925:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
L_249514:
	movl 0x100(%rbp),%r15d
	incl %r15d
	movl %r15d,0x8C(%rbp)
	jo L_249455
L_249515:
	movq 0x110(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x130(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x138(%rbp)
	movq 0xE8(%rbp),%r14
	movb 0x0(%r14),%r15b
	movb %r15b,0x100(%rbp)
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x140(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x160(%rbp)
	movq $0x71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x148(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x68(%rbp),%r15
	movq 0x28(%r15),%r14
	movq 0x20(%r15),%r13
	movq 0x18(%r15),%r11
	movq $0x71,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r10,0x150(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r10)
	movl $0x0,0x4(%r10)
	movq $0x9E5,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r11,0x0(%r9)
	movq %r13,0x8(%r9)
	movq %r14,0x10(%r9)
	addq $0x30,%r12
	movq %r10,0x18(%r9)
	movq %r15,0x20(%r9)
	movq %r9,0x168(%rbp)
	leaq L_249908(%rip),%r15
	movq %r15,0xC8(%rbp)
	movq %rbp,%r15
	addq $0xD0,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x160,%rbp
	leaq (L_249516+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3798
.p2align 0x4
L_482317:
L_249509:
	movq 0xD0(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_482318:
L_249926:
	movq 0xD0(%rbp),%r14
	movq %r14,(gcState+0x20)(%rip)
	movq (globalObjptr+0x4DE8)(%rip),%r14
	movq %r14,0x130(%rbp)
	addq $0x130,%rbp
	leaq (L_249927+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_482320:
L_250024:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_482321:
L_249483:
	movq 0xD0(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x4D8)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_482323:
L_250025:
	movq 0x100(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0xF8(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x108(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x110(%rbp)
	movl 0xBC(%rbp),%ecx
.p2align 0x4,,0x7
loop_2902:
	cmpl %ecx,0xB8(%rbp)
	je L_482328
L_250026:
	movslq %ecx,%r15
	cmpq 0x98(%rbp),%r15
	jnb L_249509
L_250028:
	movq 0xE8(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x118(%rbp)
	movl 0x0(%r13),%r11d
	movl %r11d,0x128(%rbp)
	movq 0x10(%r13),%r11
	movq %r11,0x130(%rbp)
	movq 0x18(%r13),%r11
	movq %r11,0x138(%rbp)
	movq 0x8(%r11),%r15
	movq 0x110(%rbp),%r14
	movq 0x8(%r14),%r13
	movq 0x8(%r13),%r10
	cmpq %r10,0x8(%r15)
	je L_482325
L_250029:
	incl %ecx
	jo L_249455
L_250030:
	jmp loop_2902
.p2align 0x4
L_482325:
L_250031:
	incl %ecx
	movl %ecx,0xBC(%rbp)
	jo L_249455
L_250032:
	movq 0x80(%rbp),%r15
	movq 0x60(%r15),%r14
	movq %r14,0x1B0(%rbp)
	movq 0x58(%r15),%r14
	movq %r14,0x140(%rbp)
	movq 0x50(%r15),%r14
	movq %r14,0x148(%rbp)
	movq 0x48(%r15),%r14
	movq %r14,0x150(%rbp)
	movq 0x40(%r15),%r14
	movq %r14,0x158(%rbp)
	movq 0x38(%r15),%r14
	movq %r14,0x160(%rbp)
	movq 0x30(%r15),%r14
	movq %r14,0x168(%rbp)
	movq 0x28(%r15),%r14
	movq %r14,0x170(%rbp)
	movq 0x20(%r15),%r14
	movq %r14,0x178(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x180(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x188(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x190(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x198(%rbp)
	movq 0x108(%rbp),%r15
	movq %r15,0x1A8(%rbp)
	addq $0x1A8,%rbp
	leaq (L_250033+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp typeStrToEnv_0
.p2align 0x4
L_482328:
L_250360:
	movq (globalObjptr+0x1730)(%rip),%r15
	movq %r15,0x130(%rbp)
	addq $0x130,%rbp
	leaq (L_250361+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_482332:
L_250423:
	movq 0x128(%rbp),%r15
	movl %r15d,%r14d
	movslq %r14d,%r15
	movq 0x100(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq 0x0(%r13),%r11
	movq %r11,0x130(%rbp)
	movq 0x8(%r13),%r11
	movq %r11,0x138(%rbp)
	movl 0x114(%rbp),%r15d
	movl %r15d,0x140(%rbp)
.p2align 0x4,,0x7
loop_2913:
	movl 0x140(%rbp),%r15d
	cmpl 0x110(%rbp),%r15d
	je L_482338
L_250424:
	movslq %r15d,%r14
	cmpq 0x108(%rbp),%r14
	jnb L_249509
L_250426:
	movq 0xF0(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r11
	movq 0x8(%r11),%r10
	movq %r10,0x148(%rbp)
	movl 0x0(%r11),%r10d
	movl %r10d,0x144(%rbp)
	movq 0x10(%r11),%r10
	movq %r10,0x150(%rbp)
	movq 0x18(%r11),%r10
	movq %r10,0x158(%rbp)
	movq 0x138(%rbp),%r14
	movq 0x8(%r14),%r13
	movq 0x8(%r10),%r11
	movq 0x8(%r11),%r9
	cmpq %r9,0x8(%r13)
	je L_482334
L_250427:
	incl %r15d
	jo L_249455
L_250428:
	movl %r15d,0x140(%rbp)
	jmp loop_2913
.p2align 0x4
L_482334:
L_250429:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_250430
L_250437:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r14d
	movl %r14d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r14
	movq %r14,%rdi
	xorq %rax,%rax
	addq $0x168,%rbp
	leaq (L_250438+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250438
.p2align 0x4
.long 0x3E19
L_250438:
	addq $0xFFFFFFFFFFFFFE98,%rbp
L_250430:
	movl 0x140(%rbp),%r15d
	incl %r15d
	movl %r15d,0x114(%rbp)
	jo L_249455
L_250431:
	movq $0x1BD3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x138(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x168(%rbp)
	movq 0x130(%rbp),%r15
	movq %r15,0x170(%rbp)
	movq 0x150(%rbp),%r15
	movq %r15,0x178(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x180(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x188(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x190(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x198(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x1A0(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x1A8(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x1B0(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x1B8(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x1C0(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x1C8(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x1D0(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x1D8(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x1E0(%rbp)
	movq 0x80(%rbp),%r15
	movq %r15,0x1E8(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x1F0(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0x1F8(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0x200(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0x208(%rbp)
	movq 0xA8(%rbp),%r15
	movq %r15,0x210(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0x218(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0x220(%rbp)
	movq 0xC0(%rbp),%r15
	movq %r15,0x228(%rbp)
	addq $0x168,%rbp
	leaq (L_250432+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp cut_0
.p2align 0x4
L_482338:
L_250439:
	movq (globalObjptr+0x1798)(%rip),%r14
	movq %r14,0x148(%rbp)
	addq $0x148,%rbp
	leaq (L_250440+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_482342:
L_249480:
	movq (globalObjptr+0x1500)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3D82
L_249469:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
	movq 0x108(%rbp),%r15
	movq %r15,0xF0(%rbp)
	cmpq %r15,0xF8(%rbp)
	je L_482344
L_249470:
	movq 0xE0(%rbp),%r15
	cmpq $0x1,%r15
	je L_249473
L_249471:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0xE0(%rbp)
	movq %r14,0xE8(%rbp)
	jmp L_249467
.p2align 0x4
L_482344:
L_250500:
	movq 0xE8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3D84
L_249476:
	addq $0xFFFFFFFFFFFFFF08,%rbp
	movq 0xF8(%rbp),%r15
	movq %r15,0xE0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_249477
L_250497:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xF8,%rbp
	leaq (L_250498+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250498
.p2align 0x4
.long 0x3E27
L_250498:
	addq $0xFFFFFFFFFFFFFF08,%rbp
L_249477:
	movq 0xE0(%rbp),%r14
	cmpq %r14,0xE8(%rbp)
	jne really_0
L_250496:
	movq 0x10(%rbp),%r15
	jmp L_249505
.p2align 0x4
.long 0x3D89
L_249516:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq %r15,0xE8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_249517
L_249906:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x150,%rbp
	leaq (L_249907+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_249907
.p2align 0x4
.long 0x3DC0
L_249907:
	addq $0xFFFFFFFFFFFFFEB0,%rbp
L_249517:
	movq 0x140(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_482366
L_249519:
	testl %r13d,%r13d
	jz L_482365
L_249520:
	movq $0x47BD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq $0x1D01,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x30,%r12
	movl $0x1,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq $0x1,0x10(%r13)
	movq 0xE8(%rbp),%r14
	movq %r14,0x18(%r13)
	movq %r15,0x20(%r13)
	movq %r13,%r15
L_249522:
	movq 0x130(%rbp),%r14
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_482364
L_249526:
	movq %r15,0x110(%rbp)
	movq %r14,0xE8(%rbp)
L_249528:
	movq 0x110(%rbp),%r15
	andq $0x3,%r15
	jz L_482346
L_249529:
	movq $0x1,%r15
	movq 0x138(%rbp),%r14
L_249524:
	movq $0x5C9,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movl 0x8C(%rbp),%ecx
	movq 0x108(%rbp),%r15
	movl 0x104(%rbp),%ebx
	movq 0x118(%rbp),%r11
	movq %r13,%r14
	movq %r11,%r13
L_249525:
	movl %ecx,0x8C(%rbp)
	movq $0x111D,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movl %ebx,0x0(%r11)
	movq %r15,0x8(%r11)
	movq %r14,0x10(%r11)
	movq %r13,0x18(%r11)
	addq $0x28,%r12
	movl $0x0,0x4(%r11)
	movq 0xB8(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0xC0(%rbp),%r14
	movq %r11,0x0(%r15,%r14,8)
	incq %r14
	movq %r14,0xC0(%rbp)
	jmp loop_2898
.p2align 0x4
L_482346:
L_249530:
	movq 0x110(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xE7F,%r15
	je L_482363
L_249898:
	movq 0x8(%r14),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x23DD,%r15
	je L_482362
L_249904:
	movq 0x0(%r13),%r13
	movq %r13,%r15
L_249901:
	movq 0x110(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xE7F,%r13
	je L_482361
L_249903:
	movq %r15,0x140(%rbp)
	movq 0x18(%r14),%r15
	movq %r15,0x130(%rbp)
L_249532:
	movq 0x60(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x148(%rbp)
	movq 0x140(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x150(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_249483
L_249534:
	cmpl $0x0,%r13d
	jl L_482359
L_249535:
	movl $0x0,0x154(%rbp)
.p2align 0x4,,0x7
loop_2900:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_482358
.p2align 0x4,,0x7
L_249536:
	movl 0x154(%rbp),%r13d
	cmpl 0x150(%rbp),%r13d
	jnl L_482357
L_249872:
	movslq %r13d,%r15
	movq 0x58(%rbp),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x158(%rbp)
	movq 0x140(%rbp),%r13
	movq 0x0(%r13,%r15,8),%r11
	movq 0x8(%r11),%r10
	movq 0x8(%r10),%r9
	movq %r9,0x160(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_249449
L_249873:
	movq %r15,0x0(%r13)
	movq 0x0(%r9),%r13
	cmpq $0x1,%r13
	je L_482355
L_249874:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_249876:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_249877
L_249889:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xCCF,%r13
	je L_482351
L_249877:
	incl %ecx
	movl %ecx,0x168(%rbp)
	jo L_249455
L_249878:
	cmpq $0x1,%r15
	je L_482347
L_249879:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_249876
.p2align 0x4
L_482347:
L_249880:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_482349
.p2align 0x4,,0x7
L_249881:
	movl 0x168(%rbp),%ecx
L_249882:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_249461
L_249883:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl now_3
L_249886:
	movl %ecx,0x0(%r15)
now_3:
	movq 0x158(%rbp),%r14
	movq 0x0(%r14),%r15
	movq $0x1F7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x199F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq 0x160(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r10,0x0(%r13)
	movq %r14,%r15
L_249885:
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x148(%rbp),%r14
	movq %r14,0x0(%r15)
	incl 0x154(%rbp)
	jmp loop_2900
.p2align 0x4
L_482349:
L_249887:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x178,%rbp
	leaq (L_249888+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_249888
.p2align 0x4
.long 0x3DBE
L_249888:
	addq $0xFFFFFFFFFFFFFE88,%rbp
	jmp L_249881
.p2align 0x4
L_482351:
L_249890:
	movq 0x0(%r14),%r15
	movslq %ecx,%r14
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r14
	jo L_249461
L_249891:
	movq %r14,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_249885
L_249893:
	movl %ecx,0x0(%r14)
	jmp L_249885
.p2align 0x4
L_482355:
L_249894:
	xorl %ecx,%ecx
	jmp L_249882
.p2align 0x4
L_482357:
L_249537:
	movq 0x50(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r14),%r11
	movq 0x0(%r14),%r10
	movq %r10,0x170(%rbp)
	movq $0x3EE3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r11,0x0(%r15)
	movq %r15,0x160(%rbp)
	addq $0x10,%r12
	movq 0xD0(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0xE8(%rbp),%r15
	movq %r15,0x168(%rbp)
	addq $0x160,%rbp
	leaq (L_249538+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp instantiateP_0
.p2align 0x4
L_482358:
L_249895:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_249896+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_249896
.p2align 0x4
.long 0x3DBF
L_249896:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	jmp L_249536
.p2align 0x4
L_482359:
L_249897:
	movq 0xD0(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x4F8)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_482361:
L_249902:
	movq %r15,0x140(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x130(%rbp)
	jmp L_249532
.p2align 0x4
L_482362:
L_249899:
	movq 0x8(%r13),%r15
	movq 0x0(%r13),%r14
	movq $0x443,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	movq %r13,0x148(%rbp)
	addq $0x18,%r12
	movq 0xD0(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x148,%rbp
	leaq (L_249900+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bound_0
.p2align 0x4
L_482363:
L_249531:
	movq 0x0(%r14),%r15
	movq %r15,0x130(%rbp)
	movq (globalObjptr+0xEF8)(%rip),%r15
	movq $0x59,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x140(%rbp)
	jmp L_249532
.p2align 0x4
L_482364:
L_249523:
	movq $0x1,%r15
	movq 0x138(%rbp),%r14
	jmp L_249524
.p2align 0x4
L_482365:
L_249905:
	movq $0x1CFF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0xE8(%rbp),%r13
	movq %r13,0x0(%r14)
	xchgq %r14,%r15
	jmp L_249522
.p2align 0x4
L_482366:
L_249518:
	movq 0xD0(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x4D8)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3DB5
L_249908:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	movq %r15,0xE8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_249910
L_249922:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_249923+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_249923
.p2align 0x4
.long 0x3DC1
L_249923:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
L_249910:
	movq 0xE8(%rbp),%r15
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_249911
L_249912:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xD5E,%r14
	je L_482372
	cmpq $0xD5F,%r14
	je L_482368
L_249911:
	movq 0xD0(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0xE8(%rbp),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_482368:
L_249919:
	movq 0xE8(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq %r14,0x150(%rbp)
	je L_482369
L_249920:
	movq 0xD0(%rbp),%r14
	movq %r14,(gcState+0x20)(%rip)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r14,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_482369:
L_249921:
	movq $0x1ABD,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq 0x148(%rbp),%r14
	movq %r14,0x0(%r13)
	movq $0x1,0x8(%r13)
	movq $0x1,%r11
	xchgq %r14,%r15
	xchgq %r13,%r14
	xchgq %r11,%r13
L_249914:
	cmpq %r15,0x148(%rbp)
	je L_482370
L_249915:
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq 0xD0(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_482370:
L_249917:
	movq 0x130(%rbp),%r15
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_249523
L_249918:
	movq %r13,0x110(%rbp)
	movq %r15,0xE8(%rbp)
	jmp L_249528
.p2align 0x4
L_482372:
L_249913:
	movq 0xE8(%rbp),%r14
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r15
	jmp L_249914
.p2align 0x4
.long 0x3DC3
L_249927:
	addq $0xFFFFFFFFFFFFFED0,%rbp
	movq 0x130(%rbp),%r15
	movq %r15,0x100(%rbp)
	movq %r15,0x130(%rbp)
	addq $0x130,%rbp
	leaq (L_249928+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3DD1
L_250033:
	addq $0xFFFFFFFFFFFFFE58,%rbp
	movq 0x1A8(%rbp),%r15
	movq %r15,0x108(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_250034
L_250358:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1A8,%rbp
	leaq (L_250359+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250359
.p2align 0x4
.long 0x3E0B
L_250359:
	addq $0xFFFFFFFFFFFFFE58,%rbp
L_250034:
	movq 0x108(%rbp),%r14
	cmpq $0x1,%r14
	je L_482380
L_250035:
	movq $0xF11,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x28,%r12
	movq 0x150(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x148(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x140(%rbp),%r13
	movq %r13,0x10(%r15)
	movq 0x130(%rbp),%r13
	movq %r13,0x18(%r15)
	movq $0xF15,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	addq $0x58,%r12
	movq 0x180(%rbp),%r10
	movq %r10,0x0(%r11)
	movq 0x178(%rbp),%r10
	movq %r10,0x8(%r11)
	movq 0x170(%rbp),%r10
	movq %r10,0x10(%r11)
	movq 0x168(%rbp),%r10
	movq %r10,0x18(%r11)
	movq 0x160(%rbp),%r10
	movq %r10,0x20(%r11)
	movq 0x158(%rbp),%r10
	movq %r10,0x28(%r11)
	movq 0x110(%rbp),%r10
	movq %r10,0x30(%r11)
	movq 0x0(%rbp),%r10
	movq %r10,0x38(%r11)
	movq %r15,0x40(%r11)
	movq %r13,0x48(%r11)
	movq 0x8(%r14),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r10
	shrq $0x1,%r10
	cmpq $0x1051,%r10
	je L_482379
	cmpq $0x1052,%r10
	je L_482377
L_250036:
	movq 0x0(%r13),%r10
	movq $0x2A5D,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r11,0x8(%r9)
	movq %r10,0x10(%r9)
	movq %r15,0x18(%r9)
	addq $0x28,%r12
	movq %r14,0x0(%r9)
	movq %r9,0x140(%rbp)
	movl $0x0,0x12C(%rbp)
	movq %r13,%r15
L_250037:
	movq 0x190(%rbp),%r14
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1051,%r14
	je L_482376
	cmpq $0x1052,%r14
	je L_482375
L_250038:
	movq %r13,0x1B0(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x1A8(%rbp)
	addq $0x1A8,%rbp
	leaq (L_250039+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1232
.p2align 0x4
L_482375:
L_250351:
	movq %r13,0x1B0(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x1A8(%rbp)
	addq $0x1A8,%rbp
	leaq (L_250352+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1232
.p2align 0x4
L_482376:
L_250317:
	movq 0x0(%r15),%r14
	movq %r14,0x1B0(%rbp)
	movq 0x10(%r11),%r15
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r13
	movq %r13,0x1B8(%rbp)
	movq $0x3EDF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0x1A8(%rbp)
	addq $0x10,%r12
	addq $0x1A8,%rbp
	leaq (L_250318+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp instantiateP_0
.p2align 0x4
L_482377:
L_250354:
	movq 0x0(%r13),%r15
	movq 0x130(%rbp),%r11
	movq 0x8(%r11),%r10
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r9
	shrq $0x1,%r9
	cmpq $0x1052,%r9
	jne L_482378
L_250356:
	movq 0x0(%r10),%r9
	movq $0x2A5B,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x30(%r10)
	movq %r9,0x38(%r10)
	addq $0x48,%r12
	movq %r11,0x0(%r10)
	movq 0x188(%rbp),%r11
	movq %r11,0x8(%r10)
	movq 0x110(%rbp),%r11
	movq %r11,0x10(%r10)
	movq 0x168(%rbp),%r11
	movq %r11,0x18(%r10)
	movq 0x158(%rbp),%r11
	movq %r11,0x20(%r10)
	movq 0x0(%rbp),%r11
	movq %r11,0x28(%r10)
	movq %r10,0x140(%rbp)
	movl $0x0,0x12C(%rbp)
	movq %r13,%r15
	jmp L_250037
.p2align 0x4
L_482378:
L_250355:
	movq $0x2A59,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r14,0x0(%r15)
	movq %r15,0x140(%rbp)
	movl $0x1,0x12C(%rbp)
	movq %r13,%r15
	jmp L_250037
.p2align 0x4
L_482379:
L_250353:
	movq 0x0(%r13),%r15
	movq $0x2A57,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x8(%r10)
	movq %r11,0x10(%r10)
	addq $0x20,%r12
	movq %r14,0x0(%r10)
	movq %r10,0x140(%rbp)
	movl $0x0,0x12C(%rbp)
	movq %r13,%r15
	jmp L_250037
.p2align 0x4
L_482380:
L_250357:
	movl 0xBC(%rbp),%ecx
	movq 0x118(%rbp),%r15
	movl 0x128(%rbp),%ebx
	movq 0x130(%rbp),%r13
	movq 0x138(%rbp),%r11
	xchgq %r11,%r14
L_250044:
	movl %ecx,0xBC(%rbp)
	movq $0x1115,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movl %ebx,0x0(%r11)
	movq %r15,0x8(%r11)
	movq %r13,0x10(%r11)
	movq %r14,0x18(%r11)
	addq $0x28,%r12
	movl $0x0,0x4(%r11)
	movq 0xF0(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x100(%rbp),%r14
	movq %r11,0x0(%r15,%r14,8)
	incq %r14
	movq %r14,0x100(%rbp)
	jmp loop_2897
.p2align 0x4
.long 0x3E0C
L_250361:
	addq $0xFFFFFFFFFFFFFED0,%rbp
	movq 0x130(%rbp),%r15
	movq %r15,0x118(%rbp)
	movq %r15,0x130(%rbp)
	addq $0x130,%rbp
	leaq (L_250362+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3E17
L_250432:
	addq $0xFFFFFFFFFFFFFE98,%rbp
	movq 0x168(%rbp),%r15
	movq %r15,0x130(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_250433
L_250435:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x168,%rbp
	leaq (L_250436+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250436
.p2align 0x4
.long 0x3E18
L_250436:
	addq $0xFFFFFFFFFFFFFE98,%rbp
L_250433:
	movl 0x114(%rbp),%ecx
	movq 0x148(%rbp),%r13
	movl 0x144(%rbp),%ebx
	movq 0x130(%rbp),%r14
	movq 0x158(%rbp),%r15
L_250434:
	movl %ecx,0x114(%rbp)
	movq $0x111F,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movl %ebx,0x0(%r11)
	movq %r13,0x8(%r11)
	movq %r14,0x10(%r11)
	movq %r15,0x18(%r11)
	addq $0x28,%r12
	movl $0x0,0x4(%r11)
	movq 0x120(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x128(%rbp),%r14
	movq %r11,0x0(%r15,%r14,8)
	incq %r14
	movq %r14,0x128(%rbp)
	jmp loop_2896
.p2align 0x4
.long 0x3E1A
L_250440:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
	movq 0x148(%rbp),%r15
	movq %r15,0x140(%rbp)
	movq %r15,0x148(%rbp)
	addq $0x148,%rbp
	leaq (L_250441+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3D8A
L_249538:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq %r15,0xE8(%rbp)
	movq 0x168(%rbp),%r15
	movq %r15,0x158(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_249539
L_249870:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x168,%rbp
	leaq (L_249871+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_249871
.p2align 0x4
.long 0x3DBD
L_249871:
	addq $0xFFFFFFFFFFFFFE98,%rbp
L_249539:
	movq $0x3049,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x168(%rbp)
	movq 0x130(%rbp),%r15
	movq %r15,0x170(%rbp)
	movq 0xE8(%rbp),%r15
	movq %r15,0x178(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x180(%rbp)
	addq $0x168,%rbp
	leaq (L_249540+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unify_1
.p2align 0x4
.long 0x3DA1
L_249900:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
	movq 0x148(%rbp),%r15
	movq %r15,0x130(%rbp)
	jmp L_249901
.p2align 0x4
.long 0x3DC3
L_249928:
	addq $0xFFFFFFFFFFFFFED0,%rbp
	movq 0x130(%rbp),%r15
	movq %r15,0x100(%rbp)
	movq 0xF8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x130(%rbp)
	addq $0x130,%rbp
	leaq (L_249929+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3DD2
L_250039:
	addq $0xFFFFFFFFFFFFFE58,%rbp
	movq 0x1A8(%rbp),%r15
	movq %r15,0x148(%rbp)
	movq 0x10(%r15),%r14
	movb 0x0(%r14),%dl
L_250040:
	movb %dl,0x160(%rbp)
	movq 0x108(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x158(%rbp)
	movl 0x12C(%rbp),%r15d
	movl %r15d,0x150(%rbp)
	movq 0x110(%rbp),%r15
	movq %r15,0x168(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x170(%rbp)
	movq 0x130(%rbp),%r15
	movq %r15,0x178(%rbp)
	movq 0x198(%rbp),%r15
	movq %r15,0x180(%rbp)
	addq $0x150,%rbp
	leaq (L_250041+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp isPlausible_0
.p2align 0x4
.long 0x3DD2
L_250352:
	addq $0xFFFFFFFFFFFFFE58,%rbp
	movq 0x1A8(%rbp),%r15
	movq %r15,0x148(%rbp)
	movq 0x10(%r15),%r14
	movb 0x0(%r14),%dl
	jmp L_250040
.p2align 0x4
.long 0x3DD2
L_250318:
	addq $0xFFFFFFFFFFFFFE58,%rbp
	movq 0x1A8(%rbp),%r15
	movq %r15,0x148(%rbp)
	movq 0x1B0(%rbp),%r14
	movq %r14,0x150(%rbp)
	movq %r15,0x1A8(%rbp)
	addq $0x1A8,%rbp
	leaq (L_250319+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_0
.p2align 0x4
.long 0x3E0C
L_250362:
	addq $0xFFFFFFFFFFFFFED0,%rbp
	movq 0x130(%rbp),%r15
	movq %r15,0x118(%rbp)
	movq 0x110(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x130(%rbp)
	addq $0x130,%rbp
	leaq (L_250363+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3E1A
L_250441:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
	movq 0x148(%rbp),%r15
	movq %r15,0x140(%rbp)
	movq 0x138(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x150(%rbp)
	addq $0x150,%rbp
	leaq (L_250442+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3D8B
L_249540:
	addq $0xFFFFFFFFFFFFFE98,%rbp
	movq 0x168(%rbp),%r15
	movq %r15,0x130(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_249541
L_249868:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x168,%rbp
	leaq (L_249869+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_249869
.p2align 0x4
.long 0x3DBD
L_249869:
	addq $0xFFFFFFFFFFFFFE98,%rbp
L_249541:
	movq 0x130(%rbp),%r15
	cmpq $0x1,%r15
	je L_482384
L_249542:
	movq 0x8(%r15),%r14
	movq %r14,0x160(%rbp)
	movq 0x0(%r15),%r14
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x168(%rbp)
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq (globalObjptr+0x10610)(%rip),%r15
	movq %r15,0x178(%rbp)
	addq $0x178,%rbp
	leaq (L_249543+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_482384:
L_249605:
	movq $0x321F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x148(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x168(%rbp)
	movq 0x140(%rbp),%r15
	movq %r15,0x170(%rbp)
	addq $0x168,%rbp
	leaq (L_249606+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp keepAllMapi_0
.p2align 0x4
.long 0x3DC4
L_249929:
	addq $0xFFFFFFFFFFFFFED0,%rbp
	movq 0x130(%rbp),%r15
	movq %r15,0x108(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_249930
L_250019:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x130,%rbp
	leaq (L_250020+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250020
.p2align 0x4
.long 0x3DCB
L_250020:
	addq $0xFFFFFFFFFFFFFED0,%rbp
L_249930:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x108(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_482386
L_249931:
	movq %r15,0x110(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x108(%rbp)
	movq 0x0(%r14),%r15
L_249932:
	movq 0x8(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x130(%rbp)
	addq $0x130,%rbp
	leaq (L_249933+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_482386:
L_250018:
	movq 0x108(%rbp),%r15
	movq %r15,0x110(%rbp)
	movq $0x1,0x108(%rbp)
L_249937:
	movq (globalObjptr+0xA050)(%rip),%r15
	movq %r15,0x130(%rbp)
	addq $0x130,%rbp
	leaq (L_249938+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3DD3
L_250041:
	addq $0xFFFFFFFFFFFFFEB0,%rbp
	movl 0x150(%rbp),%r15d
	movl %r15d,0x110(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_250042
L_250315:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x150,%rbp
	leaq (L_250316+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250316
.p2align 0x4
.long 0x3E09
L_250316:
	addq $0xFFFFFFFFFFFFFEB0,%rbp
L_250042:
	movl 0x110(%rbp),%r11d
	testl %r11d,%r11d
	jnz L_482388
L_250043:
	movl 0xBC(%rbp),%ecx
	movq 0x118(%rbp),%r15
	movl 0x128(%rbp),%ebx
	movq 0x108(%rbp),%r13
	movq 0x138(%rbp),%r14
	jmp L_250044
.p2align 0x4
L_482388:
L_250045:
	movq 0x140(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x152C,%r14
	je L_482434
	cmpq $0x152D,%r14
	je L_482396
	cmpq $0x152E,%r14
	je L_482389
L_250046:
	movq 0x10(%r15),%r14
	movq %r14,0x150(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x148(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x108(%rbp)
	addq $0x148,%rbp
	leaq (L_250047+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp checkScheme_0
.p2align 0x4
L_482389:
L_250279:
	movq 0x10(%r15),%r14
	movq %r14,0x108(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x110(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x130(%rbp)
	movq 0x18(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x148(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x150(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x158(%rbp)
	movq 0x18(%r14),%r13
	movq 0x0(%r13),%r11
	movq %r11,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	jne L_482395
L_250281:
	shrq $0x1,%r11
	movl %r11d,%r15d
	movslq %r15d,%r14
	movq %r14,0x140(%rbp)
	testq %r14,%r14
	jz L_482394
L_250282:
	cmpq $0x7FFFFFFF,%r14
	ja L_250024
L_250283:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_250284
L_250311:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x168,%rbp
	leaq (L_250312+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250312
.p2align 0x4
.long 0x3DFE
L_250312:
	addq $0xFFFFFFFFFFFFFE98,%rbp
L_250284:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1497,%rcx
	movq 0x140(%rbp),%rdx
	movq $0x18,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x168,%rbp
	leaq (L_250285+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250285
.p2align 0x4
.long 0x3DFE
L_250285:
	addq $0xFFFFFFFFFFFFFE98,%rbp
	movq %rax,0x160(%rbp)
L_250286:
	movq $0x0,0x168(%rbp)
loop_2911:
	movq 0x140(%rbp),%r15
	cmpq %r15,0x168(%rbp)
	jl L_482391
L_250287:
	movq 0x160(%rbp),%r15
	movq $0x59,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x12C(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_249483
L_250289:
	movq $0x3ED3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x150(%rbp),%r11
	movq %r11,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x170(%rbp)
	movl %r13d,0x178(%rbp)
	addq $0x170,%rbp
	leaq (L_250290+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_1
.p2align 0x4
L_482391:
L_250302:
	movq 0x148(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x170(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x178(%rbp)
	movq (globalObjptr+0xD330)(%rip),%r15
	movq %r15,0x188(%rbp)
	movq (globalObjptr+0xD338)(%rip),%r15
	movq %r15,0x190(%rbp)
	addq $0x188,%rbp
	leaq (L_250303+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_482394:
L_250314:
	movq (globalObjptr+0x4DD0)(%rip),%r15
	movq %r15,0x160(%rbp)
	jmp L_250286
.p2align 0x4
L_482395:
L_250280:
	movq (globalObjptr+0x4DC8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_482396:
L_250052:
	movq 0x38(%r15),%r14
	movq 0x30(%r15),%r13
	movq %r13,0x110(%rbp)
	movq 0x28(%r15),%r13
	movq %r13,0x130(%rbp)
	movq 0x20(%r15),%r13
	movq %r13,0x148(%rbp)
	movq 0x18(%r15),%r13
	movq %r13,0x150(%rbp)
	movq 0x10(%r15),%r13
	movq %r13,0x158(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x160(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x168(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movq %r14,0x108(%rbp)
	movl %r15d,%r14d
	movslq %r14d,%rdx
	movq %rdx,0x178(%rbp)
	movl %r14d,0x12C(%rbp)
	cmpq %rdx,%r15
	movq %r15,0x170(%rbp)
	jne L_249483
L_250054:
	testq %rdx,%rdx
	jz L_482432
L_250055:
	cmpq $0x7FFFFFFF,%rdx
	ja L_250024
L_250056:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x15D3,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x188,%rbp
	leaq (L_250057+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250057
.p2align 0x4
.long 0x3DD6
L_250057:
	addq $0xFFFFFFFFFFFFFE78,%rbp
	movq %rax,0x140(%rbp)
L_250058:
	movl $0x0,0x180(%rbp)
	movq $0x0,0x188(%rbp)
.p2align 0x4,,0x7
loop_2903:
	movq 0x188(%rbp),%r14
	cmpq 0x178(%rbp),%r14
	jnl L_482404
L_250261:
	movl %r14d,%ebx
	movslq %ebx,%r15
	movq %r15,%r14
	salq $0x5,%r14
	movq 0x108(%rbp),%r13
	movq 0x8(%r13,%r14,1),%r11
	movq %r11,0x190(%rbp)
	salq $0x5,%r15
	movq 0x10(%r13,%r15,1),%r14
	movq %r14,0x198(%rbp)
	movq 0x110(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%ecx
	movslq %ecx,%r14
	cmpq %r14,%r15
	jne L_249483
L_250263:
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_2910:
	cmpl %ebx,%ecx
	je L_482401
L_250264:
	movslq %ebx,%r14
	cmpq %r15,%r14
	jnb L_249509
L_250266:
	movq %r14,%r13
	salq $0x5,%r13
	movq 0x110(%rbp),%r11
	movq 0x8(%r11,%r13,1),%r10
	movq %r10,0x1A0(%rbp)
	salq $0x5,%r14
	movq 0x198(%rbp),%r13
	movq 0x8(%r13),%r10
	movq 0x10(%r11,%r14,1),%r9
	movq 0x8(%r9),%r8
	movq 0x8(%r8),%rsp
	cmpq %rsp,0x8(%r10)
	je L_482398
L_250267:
	incl %ebx
	jo L_249455
L_250268:
	jmp loop_2910
.p2align 0x4
L_482398:
L_250269:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_250270
L_250273:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1B0,%rbp
	leaq (L_250274+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250274
.p2align 0x4
.long 0x3DFD
L_250274:
	addq $0xFFFFFFFFFFFFFE50,%rbp
L_250270:
	movq $0x2A5F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x198(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x130(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x148(%rbp),%r14
	movq %r14,0x198(%rbp)
	movq (globalObjptr+0x10650)(%rip),%r14
	movq %r14,0x1A8(%rbp)
	movq (globalObjptr+0xA450)(%rip),%r14
	movq %r14,0x1B0(%rbp)
	movq 0x1A0(%rbp),%r14
	movq %r14,0x1B8(%rbp)
	movq %r15,0x1A0(%rbp)
	movq 0x190(%rbp),%r15
	movq %r15,0x1C0(%rbp)
	movq 0x150(%rbp),%r15
	movq %r15,0x1C8(%rbp)
	addq $0x198,%rbp
	leaq (L_250271+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equalSchemes_0
.p2align 0x4
L_482401:
L_250275:
	movl 0x180(%rbp),%ecx
	incl %ecx
	jo L_249455
L_250276:
	movq 0x198(%rbp),%r15
.p2align 0x4,,0x7
L_250272:
	movl %ecx,0x180(%rbp)
	movq 0x140(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x188(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x188(%rbp)
	jmp loop_2903
.p2align 0x4
L_482404:
L_250059:
	movq 0x140(%rbp),%r15
	movq $0x181D,0xFFFFFFFFFFFFFFF8(%r15)
	movslq 0x180(%rbp),%rdx
	movq %rdx,0x150(%rbp)
	testq %rdx,%rdx
	jz L_482430
L_250060:
	cmpq $0x7FFFFFFF,%rdx
	ja L_250024
L_250061:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14F9,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x180,%rbp
	leaq (L_250062+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250062
.p2align 0x4
.long 0x3DD7
L_250062:
	addq $0xFFFFFFFFFFFFFE80,%rbp
	movq %rax,0x178(%rbp)
L_250063:
	xorl %ecx,%ecx
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2904:
	cmpq 0x150(%rbp),%r15
	jnl L_482408
.p2align 0x4,,0x7
loop_2909:
	movslq %ecx,%r14
	movq 0x140(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r11
	cmpq $0x1,%r11
	jne L_482406
L_250257:
	incl %ecx
	jo L_249455
L_250258:
	jmp loop_2909
.p2align 0x4
L_482406:
L_250255:
	incl %ecx
	jo L_249455
L_250256:
	movq %r15,%r14
	movq %r15,%r13
	movq 0x0(%r11),%r10
	movq 0x8(%r11),%r9
	movq 0x178(%rbp),%r11
	movq %r11,%r8
	shrq $0x8,%r8
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r8,1)
	salq $0x4,%r14
	movq %r10,0x0(%r11,%r14,1)
	movq %r11,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%rsp,%r14,1)
	salq $0x4,%r13
	movq %r9,0x8(%r11,%r13,1)
	incq %r15
	jmp loop_2904
.p2align 0x4
L_482408:
L_250064:
	movq 0x178(%rbp),%r15
	movq $0xAED,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x140(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_249483
L_250066:
	testl %r13d,%r13d
	jz L_482409
L_250067:
	movq (globalObjptr+0xE440)(%rip),%r15
	movq %r15,0x188(%rbp)
	addq $0x188,%rbp
	leaq (L_250068+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_482409:
L_250115:
	movq 0x110(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%rdx
	movq %rdx,0x140(%rbp)
	cmpq %rdx,%r14
	jne L_249483
L_250117:
	testq %rdx,%rdx
	jz L_482426
L_250118:
	cmpq $0x7FFFFFFF,%rdx
	ja L_250024
L_250119:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x15D3,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x180,%rbp
	leaq (L_250120+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250120
.p2align 0x4
.long 0x3DE1
L_250120:
	addq $0xFFFFFFFFFFFFFE80,%rbp
	movq %rax,0x150(%rbp)
L_250121:
	xorl %ecx,%ecx
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2905:
	cmpq 0x140(%rbp),%r15
	jnl L_482415
L_250217:
	movl %r15d,%r13d
	movslq %r13d,%r14
	salq $0x5,%r14
	movq 0x110(%rbp),%r13
	movq 0x10(%r13,%r14,1),%r11
	xorl %r13d,%r13d
	movq %r11,%r14
	xchgl %r13d,%ecx
	movl %r13d,(localWord32+0x0)(%rip)
.p2align 0x4,,0x7
loop_2908:
	cmpl %ecx,0x12C(%rbp)
	je L_482413
L_250218:
	movslq %ecx,%r13
	cmpq 0x170(%rbp),%r13
	jnb L_249509
L_250220:
	salq $0x5,%r13
	movq 0x8(%r14),%r11
	movq 0x108(%rbp),%r10
	movq 0x10(%r10,%r13,1),%r9
	movq 0x8(%r9),%r8
	movq 0x8(%r8),%rsp
	cmpq %rsp,0x8(%r11)
	je L_482411
L_250221:
	incl %ecx
	jo L_249455
L_250222:
	jmp loop_2908
.p2align 0x4
L_482411:
L_250223:
	movq $0x1,%r14
L_250224:
	movq 0x150(%rbp),%r13
	movq %r13,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r14,0x0(%r13,%r15,8)
	incq %r15
	movl (localWord32+0x0)(%rip),%ecx
	jmp loop_2905
.p2align 0x4
L_482413:
L_250225:
	movl (localWord32+0x0)(%rip),%r13d
	incl %r13d
	jo L_249455
L_250226:
	movl %r13d,(localWord32+0x0)(%rip)
	jmp L_250224
.p2align 0x4
L_482415:
L_250122:
	movq 0x150(%rbp),%r15
	movq $0x181D,0xFFFFFFFFFFFFFFF8(%r15)
	movslq %ecx,%rdx
	movq %rdx,0x108(%rbp)
	testq %rdx,%rdx
	jz L_482424
L_250123:
	cmpq $0x7FFFFFFF,%rdx
	ja L_250024
L_250124:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x14F9,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x178,%rbp
	leaq (L_250125+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250125
.p2align 0x4
.long 0x3DE2
L_250125:
	addq $0xFFFFFFFFFFFFFE88,%rbp
	movq %rax,0x110(%rbp)
L_250126:
	xorl %ecx,%ecx
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2906:
	cmpq 0x108(%rbp),%r15
	jnl L_482419
.p2align 0x4,,0x7
loop_2907:
	movslq %ecx,%r14
	movq 0x150(%rbp),%r13
	movq 0x0(%r13,%r14,8),%r11
	cmpq $0x1,%r11
	jne L_482417
L_250213:
	incl %ecx
	jo L_249455
L_250214:
	jmp loop_2907
.p2align 0x4
L_482417:
L_250211:
	incl %ecx
	jo L_249455
L_250212:
	movq %r15,%r14
	movq %r15,%r13
	movq 0x0(%r11),%r10
	movq 0x8(%r11),%r9
	movq 0x110(%rbp),%r11
	movq %r11,%r8
	shrq $0x8,%r8
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r8,1)
	salq $0x4,%r14
	movq %r10,0x0(%r11,%r14,1)
	movq %r11,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%rsp,%r14,1)
	salq $0x4,%r13
	movq %r9,0x8(%r11,%r13,1)
	incq %r15
	jmp loop_2906
.p2align 0x4
L_482419:
L_250127:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_250128
L_250208:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x178,%rbp
	leaq (L_250209+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250209
.p2align 0x4
.long 0x3DF5
L_250209:
	addq $0xFFFFFFFFFFFFFE88,%rbp
L_250128:
	movq 0x110(%rbp),%r15
	movq $0xAED,0xFFFFFFFFFFFFFFF8(%r15)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x108(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_249483
L_250130:
	testl %r13d,%r13d
	jz L_482420
L_250131:
	movq (globalObjptr+0xE440)(%rip),%r15
	movq %r15,0x178(%rbp)
	addq $0x178,%rbp
	leaq (L_250132+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_482420:
L_250180:
	movl 0xBC(%rbp),%ecx
	movq 0x118(%rbp),%r15
	movl 0x128(%rbp),%ebx
	movq 0x168(%rbp),%r13
	movq 0x138(%rbp),%r14
	jmp L_250044
.p2align 0x4
L_482424:
L_250216:
	movq (globalObjptr+0x4E10)(%rip),%r15
	movq %r15,0x110(%rbp)
	jmp L_250126
.p2align 0x4
L_482426:
L_250228:
	movq (globalObjptr+0x4E08)(%rip),%r15
	movq %r15,0x150(%rbp)
	jmp L_250121
.p2align 0x4
L_482430:
L_250260:
	movq (globalObjptr+0x4E00)(%rip),%r15
	movq %r15,0x178(%rbp)
	jmp L_250063
.p2align 0x4
L_482432:
L_250278:
	movq (globalObjptr+0x4DF8)(%rip),%r15
	movq %r15,0x140(%rbp)
	jmp L_250058
.p2align 0x4
L_482434:
L_250051:
	movq 0x0(%r15),%r13
	movl 0xBC(%rbp),%ecx
	movl 0x128(%rbp),%ebx
	movq 0x138(%rbp),%r14
	movq 0x118(%rbp),%r15
	jmp L_250044
.p2align 0x4
.long 0x3DD2
L_250319:
	addq $0xFFFFFFFFFFFFFE58,%rbp
	movq 0x1A8(%rbp),%r14
	movq %r14,0x148(%rbp)
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1448,%r14
	jne L_249480
L_250320:
	movq 0x8(%r15),%r14
	movq 0x18(%r14),%r13
	cmpq $0x1,%r13
	je L_250328
	cmpq $0x2,%r13
	je L_250326
L_250321:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xE73,%r15
	je L_482439
L_250329:
	movq 0x0(%r13),%r15
L_250330:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x23E0,%r14
	je L_482438
	cmpq $0x23E1,%r14
	je L_482437
	cmpq $0x23E2,%r14
	je L_482436
L_250331:
	movq 0x10(%r15),%r14
	movq %r14,0x1B0(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x1A8(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x148(%rbp)
	addq $0x1A8,%rbp
	leaq (L_250332+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1232
.p2align 0x4
L_482436:
L_250348:
	movq 0x8(%r15),%r14
	movq %r14,0x1A8(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x1B0(%rbp)
	addq $0x1A8,%rbp
	leaq (loop_2912+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1233
.p2align 0x4
L_482437:
L_250347:
	movq 0x8(%r15),%r14
	movq %r14,0x1A8(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x1B0(%rbp)
	addq $0x1A8,%rbp
	leaq (loop_2912+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1234
.p2align 0x4
L_482438:
L_250341:
	movq 0x8(%r15),%r14
	movq %r14,0x1A8(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x1B0(%rbp)
	addq $0x1A8,%rbp
	leaq (loop_2912+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1235
.p2align 0x4
L_482439:
L_250322:
	movq 0x0(%r13),%r15
x_850:
	movq 0x0(%r15),%r14
	movq %r14,%r15
	andq $0x1,%r15
	cmpq $0x1,%r15
	jne L_482441
L_250324:
	shrq $0x1,%r14
	movl %r14d,%r15d
	testl %r15d,%r15d
	jnz L_482440
L_250326:
	movb $0x1,%dl
	jmp L_250040
.p2align 0x4
L_482440:
L_250328:
	xorb %dl,%dl
	jmp L_250040
.p2align 0x4
L_482441:
L_250323:
	xorb %dl,%dl
	jmp L_250040
.p2align 0x4
.long 0x3E0D
L_250363:
	addq $0xFFFFFFFFFFFFFED0,%rbp
	movq 0x130(%rbp),%r15
	movq %r15,0x128(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_250364
L_250420:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x138,%rbp
	leaq (L_250421+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250421
.p2align 0x4
.long 0x3E12
L_250421:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
L_250364:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x128(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_482445
L_250365:
	movq %r15,0x130(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x128(%rbp)
	movq 0x0(%r14),%r15
L_250366:
	movq 0x8(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x140(%rbp)
	addq $0x140,%rbp
	leaq (L_250367+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_482445:
L_250419:
	movq 0x128(%rbp),%r15
	movq %r15,0x130(%rbp)
	movq $0x1,0x128(%rbp)
L_250371:
	movq (globalObjptr+0xA050)(%rip),%r15
	movq %r15,0x140(%rbp)
	addq $0x140,%rbp
	leaq (L_250372+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3E1B
L_250442:
	addq $0xFFFFFFFFFFFFFEB0,%rbp
	movq 0x150(%rbp),%r15
	movq %r15,0x148(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_250443
L_250493:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x158,%rbp
	leaq (L_250494+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250494
.p2align 0x4
.long 0x3E26
L_250494:
	addq $0xFFFFFFFFFFFFFEA8,%rbp
L_250443:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x148(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_482447
L_250444:
	movq %r15,0x150(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x148(%rbp)
	movq 0x0(%r14),%r15
L_250445:
	movq 0x8(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x160(%rbp)
	addq $0x160,%rbp
	leaq (L_250446+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_482447:
L_250492:
	movq 0x148(%rbp),%r15
	movq %r15,0x150(%rbp)
	movq $0x1,0x148(%rbp)
L_250450:
	movq (globalObjptr+0xA050)(%rip),%r15
	movq %r15,0x160(%rbp)
	addq $0x160,%rbp
	leaq (L_250451+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3D8C
L_249543:
	addq $0xFFFFFFFFFFFFFE88,%rbp
	movq 0x178(%rbp),%r15
	movq %r15,0x130(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_249544
L_249865:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x178,%rbp
	leaq (L_249866+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_249866
.p2align 0x4
.long 0x3DBA
L_249866:
	addq $0xFFFFFFFFFFFFFE88,%rbp
L_249544:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x170(%rbp)
	addq $0x18,%r12
	movq 0x130(%rbp),%r15
	movq %r15,0x0(%r13)
	movq 0x168(%rbp),%r14
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_249545:
	addl 0x0(%r15),%ecx
	movl %ecx,0x130(%rbp)
	jo L_249455
L_249546:
	cmpq $0x1,%r14
	je L_482449
L_249547:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_249545
.p2align 0x4
L_482449:
L_249548:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_249549
L_249863:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x180,%rbp
	leaq (L_249864+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_249864
.p2align 0x4
.long 0x3DBC
L_249864:
	addq $0xFFFFFFFFFFFFFE80,%rbp
L_249549:
	movl 0x130(%rbp),%ecx
	testl %ecx,%ecx
	jz L_482450
L_249550:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x170(%rbp),%r14
	movq %r14,0x0(%r15)
L_249551:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x130(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x168(%rbp)
	addq $0x18,%r12
	movq 0x160(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq (globalObjptr+0x10618)(%rip),%r15
	movq %r15,0x178(%rbp)
	addq $0x178,%rbp
	leaq (L_249552+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_482450:
L_249862:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_249551
.p2align 0x4
.long 0x3D92
L_249606:
	addq $0xFFFFFFFFFFFFFE98,%rbp
	movq 0x168(%rbp),%r15
	movq %r15,0x130(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x148(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_249483
L_249608:
	testl %r13d,%r13d
	jz L_482458
L_249609:
	movq 0x48(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x160(%rbp)
	cmpq $0x1,%r14
	je L_482457
	cmpq $0x2,%r14
	je L_482456
L_249610:
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x2,0x0(%r15)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x2075,%r15
	je L_482455
	cmpq $0x2076,%r15
	je L_482454
L_249611:
	movq 0x8(%r14),%r15
	movq %r15,0x178(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x170(%rbp)
	leaq L_249824(%rip),%r15
	movq %r15,0xC8(%rbp)
	movq %rbp,%r15
	addq $0xD0,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x170,%rbp
	leaq (L_249612+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp setTyconNames_0
.p2align 0x4
L_482454:
L_249826:
	movq 0x8(%r14),%r15
	movq %r15,0x178(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x170(%rbp)
	leaq L_249824(%rip),%r15
	movq %r15,0xC8(%rbp)
	movq %rbp,%r15
	addq $0xD0,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x170,%rbp
	leaq (L_249612+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp setTyconNames_0
.p2align 0x4
L_482455:
L_249825:
	movq 0x18(%r14),%r15
	movq %r15,0x170(%rbp)
	movq 0x10(%r14),%r15
	movq %r15,0x178(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x180(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x188(%rbp)
	leaq L_249824(%rip),%r15
	movq %r15,0xC8(%rbp)
	movq %rbp,%r15
	addq $0xD0,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x170,%rbp
	leaq (L_249612+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1230
.p2align 0x4
L_482456:
L_249828:
	movq $0x12,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_482457:
L_249613:
	movq 0xD0(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x10630)(%rip),%r15
	movq %r15,0x168(%rbp)
	addq $0x168,%rbp
	leaq (L_249614+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_482458:
L_249690:
	movq 0x158(%rbp),%r15
	cmpq $0x1,%r15
	je L_482459
L_249691:
	movq 0x20(%r15),%r14
	movq %r14,0x160(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x168(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x170(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x178(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x180(%rbp)
	addq $0x160,%rbp
	leaq (L_249692+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp args_0
.p2align 0x4
L_482459:
L_249780:
	movq $0x1,0x160(%rbp)
	movl $0x0,0x168(%rbp)
	addq $0x160,%rbp
	leaq (L_249692+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unfoldi_1
.p2align 0x4
.long 0x3DC5
L_249933:
	addq $0xFFFFFFFFFFFFFED0,%rbp
	movq 0x130(%rbp),%r15
	movq %r15,0x118(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_249934
L_250016:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x130,%rbp
	leaq (L_250017+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250017
.p2align 0x4
.long 0x3DD0
L_250017:
	addq $0xFFFFFFFFFFFFFED0,%rbp
L_249934:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x118(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x110(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x108(%rbp),%r14
	cmpq $0x1,%r14
	je L_482461
L_249935:
	movq %r15,0x110(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x108(%rbp)
	jmp L_249932
.p2align 0x4
L_482461:
L_249936:
	movq 0x110(%rbp),%r15
	movq %r15,0x108(%rbp)
	movq 0x118(%rbp),%r15
	movq %r15,0x110(%rbp)
	jmp L_249937
.p2align 0x4
.long 0x3DC5
L_249938:
	addq $0xFFFFFFFFFFFFFED0,%rbp
	movq 0x130(%rbp),%r15
	movq %r15,0x118(%rbp)
	movq 0x108(%rbp),%r14
	movq %r14,0x130(%rbp)
	movq %r15,0x138(%rbp)
	addq $0x130,%rbp
	leaq (L_249939+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3787
.p2align 0x4
.long 0x3DD4
L_250047:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_250048
L_250049:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x148,%rbp
	leaq (L_250050+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250050
.p2align 0x4
.long 0x3DD5
L_250050:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
L_250048:
	movl 0xBC(%rbp),%ecx
	movq 0x118(%rbp),%r15
	movl 0x128(%rbp),%ebx
	movq 0x108(%rbp),%r13
	movq 0x138(%rbp),%r14
	jmp L_250044
.p2align 0x4
.long 0x3DFF
L_250290:
	addq $0xFFFFFFFFFFFFFE90,%rbp
	movq 0x170(%rbp),%r15
	movq %r15,0x140(%rbp)
	movq %r15,0x170(%rbp)
	movq 0x108(%rbp),%r15
	movq %r15,0x178(%rbp)
	movq 0x158(%rbp),%r15
	movq %r15,0x180(%rbp)
	addq $0x170,%rbp
	leaq (L_250291+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp con_2
.p2align 0x4
.long 0x3E04
L_250303:
	addq $0xFFFFFFFFFFFFFE78,%rbp
	movq 0x188(%rbp),%r15
	movq %r15,0x180(%rbp)
	movq (globalObjptr+0x570)(%rip),%r15
	movl 0x0(%r15),%r14d
	movl %r14d,%r13d
	incl %r14d
	jo L_249455
L_250304:
	movl %r14d,0x0(%r15)
	movl %r13d,0x190(%rbp)
	movq 0x170(%rbp),%r15
	movq %r15,0x198(%rbp)
	addq $0x190,%rbp
	leaq (L_250305+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1189
.p2align 0x4
.long 0x3DFC
L_250271:
	addq $0xFFFFFFFFFFFFFE68,%rbp
	movl 0x180(%rbp),%ecx
	movq $0x1,%r15
	jmp L_250272
.p2align 0x4
.long 0x3DD8
L_250068:
	addq $0xFFFFFFFFFFFFFE78,%rbp
	movq 0x188(%rbp),%r15
	movq %r15,0x150(%rbp)
	movq 0x158(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x188(%rbp)
	addq $0x188,%rbp
	leaq (L_250069+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3DE3
L_250132:
	addq $0xFFFFFFFFFFFFFE88,%rbp
	movq 0x178(%rbp),%r15
	movq %r15,0x140(%rbp)
	movq 0x158(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x178(%rbp)
	addq $0x178,%rbp
	leaq (L_250133+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3E0A
L_250332:
	addq $0xFFFFFFFFFFFFFE58,%rbp
	movq 0x1A8(%rbp),%r14
	movq %r14,0x150(%rbp)
	movq 0x10(%r14),%r11
	movb 0x0(%r11),%r13b
	cmpb $0x1,%r13b
	je L_250326
	cmpb $0x2,%r13b
	je L_482468
L_250333:
	movq 0x148(%rbp),%r14
	cmpq $0x1,%r14
	je L_250328
	cmpq $0x2,%r14
	je L_250326
L_250334:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xE73,%r15
	je L_482465
L_250336:
	movq 0x0(%r14),%r15
	jmp L_250330
.p2align 0x4
L_482465:
L_250335:
	movq 0x0(%r14),%r15
	jmp x_850
.p2align 0x4
L_482468:
L_250340:
	movq (globalObjptr+0x1B08)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3DD2
loop_2912:
	addq $0xFFFFFFFFFFFFFE58,%rbp
	movq 0x1A8(%rbp),%r14
	movq %r14,0x148(%rbp)
	cmpq $0x1,%r14
	je L_250328
	cmpq $0x2,%r14
	je L_250326
L_250342:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xE73,%r15
	je L_482470
L_250344:
	movq 0x0(%r14),%r15
	jmp L_250330
.p2align 0x4
L_482470:
L_250343:
	movq 0x0(%r14),%r15
	jmp x_850
.p2align 0x4
.long 0x3E0E
L_250367:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	movq 0x140(%rbp),%r15
	movq %r15,0x138(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_250368
L_250417:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x148,%rbp
	leaq (L_250418+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250418
.p2align 0x4
.long 0x3E16
L_250418:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
L_250368:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x138(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x130(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x128(%rbp),%r14
	cmpq $0x1,%r14
	je L_482473
L_250369:
	movq %r15,0x130(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x128(%rbp)
	jmp L_250366
.p2align 0x4
L_482473:
L_250370:
	movq 0x130(%rbp),%r15
	movq %r15,0x128(%rbp)
	movq 0x138(%rbp),%r15
	movq %r15,0x130(%rbp)
	jmp L_250371
.p2align 0x4
.long 0x3E0E
L_250372:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	movq 0x140(%rbp),%r15
	movq %r15,0x138(%rbp)
	movq 0x128(%rbp),%r14
	movq %r14,0x140(%rbp)
	movq %r15,0x148(%rbp)
	addq $0x140,%rbp
	leaq (L_250373+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3787
.p2align 0x4
.long 0x3E1C
L_250446:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq %r15,0x158(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_250447
L_250490:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x168,%rbp
	leaq (L_250491+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250491
.p2align 0x4
.long 0x3E25
L_250491:
	addq $0xFFFFFFFFFFFFFE98,%rbp
L_250447:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x158(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x150(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x148(%rbp),%r14
	cmpq $0x1,%r14
	je L_482475
L_250448:
	movq %r15,0x150(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x148(%rbp)
	jmp L_250445
.p2align 0x4
L_482475:
L_250449:
	movq 0x150(%rbp),%r15
	movq %r15,0x148(%rbp)
	movq 0x158(%rbp),%r15
	movq %r15,0x150(%rbp)
	jmp L_250450
.p2align 0x4
.long 0x3E1C
L_250451:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq %r15,0x158(%rbp)
	movq 0x148(%rbp),%r14
	movq %r14,0x160(%rbp)
	movq %r15,0x168(%rbp)
	addq $0x160,%rbp
	leaq (L_250452+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3787
.p2align 0x4
.long 0x3D8D
L_249552:
	addq $0xFFFFFFFFFFFFFE88,%rbp
	movq 0x178(%rbp),%r15
	movq %r15,0x160(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_249553
L_249860:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x178,%rbp
	leaq (L_249861+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_249861
.p2align 0x4
.long 0x3DBA
L_249861:
	addq $0xFFFFFFFFFFFFFE88,%rbp
L_249553:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x170(%rbp)
	addq $0x18,%r12
	movq 0x160(%rbp),%r15
	movq %r15,0x0(%r13)
	movq 0x168(%rbp),%r14
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_249554:
	addl 0x0(%r15),%ecx
	movl %ecx,0x154(%rbp)
	jo L_249455
L_249555:
	cmpq $0x1,%r14
	je L_482477
L_249556:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_249554
.p2align 0x4
L_482477:
L_249557:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_249558
L_249858:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x180,%rbp
	leaq (L_249859+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_249859
.p2align 0x4
.long 0x3DBB
L_249859:
	addq $0xFFFFFFFFFFFFFE80,%rbp
L_249558:
	movl 0x154(%rbp),%ecx
	testl %ecx,%ecx
	jz L_482478
L_249559:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x170(%rbp),%r14
	movq %r14,0x0(%r15)
L_249560:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x130(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x168(%rbp)
	addq $0x168,%rbp
	leaq (L_249561+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3782
.p2align 0x4
L_482478:
L_249857:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_249560
.p2align 0x4
.long 0x3D93
L_249612:
	addq $0xFFFFFFFFFFFFFE90,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq $0x1,0x0(%r15)
	jmp L_249613
.p2align 0x4
.long 0x3DB5
L_249824:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq 0x160(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xD0(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3D94
L_249614:
	addq $0xFFFFFFFFFFFFFE98,%rbp
	movq 0x168(%rbp),%r15
	movq %r15,0x160(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_249615
L_249822:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x170,%rbp
	leaq (L_249823+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_249823
.p2align 0x4
.long 0x3DB4
L_249823:
	addq $0xFFFFFFFFFFFFFE90,%rbp
L_249615:
	movq $0x3B3F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x130(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x170(%rbp)
	movl 0x148(%rbp),%r15d
	movl %r15d,0x178(%rbp)
	addq $0x170,%rbp
	leaq (L_249616+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
.long 0x3D9A
L_249692:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq %r15,0xF8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_249693
L_249778:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_249779+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_249779
.p2align 0x4
.long 0x3DAA
L_249779:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
L_249693:
	movq 0x138(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x104D,%r14
	je L_482494
	cmpq $0x104E,%r14
	je L_482491
	cmpq $0x104F,%r14
	je L_482488
L_249694:
	movq 0x0(%r15),%r14
	movb 0x100(%rbp),%r13b
	cmpb $0x1,%r13b
	je L_482487
	cmpb $0x2,%r13b
	je L_482486
L_249695:
	cmpl $0x0,0x150(%rbp)
	jg L_482485
L_249696:
	movq 0xF8(%rbp),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r11
	movl %r11d,%r10d
	movslq %r10d,%r9
	cmpq %r9,%r11
	jne L_249483
L_249698:
	cmpl $0x0,%r10d
	jg L_482483
L_249699:
L_249700:
	movq 0x110(%rbp),%r13
	movq %r15,%r14
	movq %r13,%r15
	jmp L_249524
.p2align 0x4
L_482483:
	xchgq %r14,%r15
L_249702:
	movq 0x18(%r15),%r14
	movq %r14,0x128(%rbp)
	movq $0x4793,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x478D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xF8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1D11,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r13,0xF8(%rbp)
	addq $0x18,%r12
addDec_0:
	movq 0x30(%rbp),%r15
	movq %r15,0x150(%rbp)
	addq $0x150,%rbp
	leaq (L_249703+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_482485:
	xchgq %r14,%r15
	jmp L_249702
.p2align 0x4
L_482486:
L_249765:
	movq (globalObjptr+0xA450)(%rip),%r13
	movq (globalObjptr+0xAC28)(%rip),%r14
	xchgq %r13,%r15
L_249715:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq 0xB0(%rbp),%r11
	movq %r11,0x0(%r13)
	movq (globalObjptr+0xA18)(%rip),%r11
	movq %r11,0x8(%r13)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq (globalObjptr+0xF368)(%rip),%r13
	movq %r13,0x0(%r11)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r11,0x8(%r13)
	addq $0x18,%r12
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x8(%r15)
	addq $0x18,%r12
	movq (globalObjptr+0x10638)(%rip),%r13
	movq %r13,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r13,0x148(%rbp)
	addq $0x18,%r12
	addq $0x148,%rbp
	leaq (L_249716+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_482487:
L_249714:
	movq (globalObjptr+0xA490)(%rip),%r11
	movq (globalObjptr+0xAC28)(%rip),%r14
	xchgq %r11,%r15
	jmp L_249715
.p2align 0x4
L_482488:
L_249774:
	movq 0x0(%r15),%r14
	movb 0x100(%rbp),%r13b
	cmpb $0x1,%r13b
	je L_482490
	cmpb $0x2,%r13b
	je L_482489
	movq %r14,%r15
con_0:
	movq 0x18(%r15),%r14
	movq %r14,0x128(%rbp)
	movq $0x1D27,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0xF8(%rbp),%r15
	movq %r15,0x8(%r14)
	movq %r14,0xF8(%rbp)
	jmp addDec_0
.p2align 0x4
L_482489:
L_249777:
	movq 0x138(%rbp),%r15
	jmp L_249700
.p2align 0x4
L_482490:
L_249776:
	movq (globalObjptr+0xA490)(%rip),%r15
	movq (globalObjptr+0xA450)(%rip),%r14
	jmp L_249715
.p2align 0x4
L_482491:
L_249770:
	movq 0x0(%r15),%r14
	movb 0x100(%rbp),%r13b
	cmpb $0x1,%r13b
	je L_482493
	cmpb $0x2,%r13b
	je L_482492
	movq %r14,%r15
	jmp con_0
.p2align 0x4
L_482492:
L_249773:
	movq (globalObjptr+0xA450)(%rip),%r15
	movq (globalObjptr+0xA490)(%rip),%r14
	jmp L_249715
.p2align 0x4
L_482493:
L_249772:
	movq 0x138(%rbp),%r15
	jmp L_249700
.p2align 0x4
L_482494:
L_249766:
	movb 0x100(%rbp),%r13b
	cmpb $0x1,%r13b
	je L_482496
	cmpb $0x2,%r13b
	je L_482495
L_249767:
	movq (globalObjptr+0xAC28)(%rip),%r13
	movq (globalObjptr+0x10640)(%rip),%r14
	xchgq %r13,%r15
	jmp L_249715
.p2align 0x4
L_482495:
L_249769:
	movq (globalObjptr+0xA450)(%rip),%r13
	movq (globalObjptr+0x10640)(%rip),%r14
	xchgq %r13,%r15
	jmp L_249715
.p2align 0x4
L_482496:
L_249768:
	movq (globalObjptr+0xA490)(%rip),%r11
	movq (globalObjptr+0x10640)(%rip),%r14
	xchgq %r11,%r15
	jmp L_249715
.p2align 0x4
.long 0x3DC6
L_249939:
	addq $0xFFFFFFFFFFFFFED0,%rbp
	movq 0x130(%rbp),%r15
	movq %r15,0x108(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_249940
L_250014:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x130,%rbp
	leaq (L_250015+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250015
.p2align 0x4
.long 0x3DCE
L_250015:
	addq $0xFFFFFFFFFFFFFED0,%rbp
L_249940:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x118(%rbp)
	addq $0x18,%r12
	movq 0x110(%rbp),%r15
	movq %r15,0x0(%r13)
	movq 0x108(%rbp),%r14
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_249941:
	addl 0x0(%r15),%ecx
	movl %ecx,0x108(%rbp)
	jo L_249455
L_249942:
	cmpq $0x1,%r14
	je L_482498
L_249943:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_249941
.p2align 0x4
L_482498:
L_249944:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_249945
L_250012:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x130,%rbp
	leaq (L_250013+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250013
.p2align 0x4
.long 0x3DCF
L_250013:
	addq $0xFFFFFFFFFFFFFED0,%rbp
L_249945:
	movl 0x108(%rbp),%ecx
	testl %ecx,%ecx
	jz L_482499
L_249946:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x118(%rbp),%r14
	movq %r14,0x0(%r15)
L_249947:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x108(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xB0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x4DF0)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xF368)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x130(%rbp)
	addq $0x130,%rbp
	leaq (L_249948+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_482499:
L_250011:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_249947
.p2align 0x4
.long 0x3E00
L_250291:
	addq $0xFFFFFFFFFFFFFE90,%rbp
	movq 0x170(%rbp),%r15
	movq %r15,0x108(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_250292
L_250300:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x170,%rbp
	leaq (L_250301+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250301
.p2align 0x4
.long 0x3E03
L_250301:
	addq $0xFFFFFFFFFFFFFE90,%rbp
L_250292:
	movl 0x12C(%rbp),%r15d
	testl %r15d,%r15d
	jz L_482503
L_250293:
	movq $0x47BD,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x160(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1D01,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x30,%r12
	movl $0x1,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq $0x1,0x10(%r13)
	movq 0x108(%rbp),%r11
	movq %r11,0x18(%r13)
	movq %r14,0x20(%r13)
	movq %r13,%r15
L_250294:
	movq %r15,0x148(%rbp)
	movq 0x110(%rbp),%r15
	movq %r15,0x150(%rbp)
	addq $0x148,%rbp
	leaq (L_250295+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp checkScheme_0
.p2align 0x4
L_482503:
L_250299:
	movq $0x1CFF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x108(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_250294
.p2align 0x4
.long 0x3E05
L_250305:
	addq $0xFFFFFFFFFFFFFE70,%rbp
	movq 0x190(%rbp),%r15
	movq %r15,0x170(%rbp)
	movq %r15,0x188(%rbp)
	movq 0x180(%rbp),%r15
	movq %r15,0x190(%rbp)
	addq $0x188,%rbp
	leaq (L_250306+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x3DD9
L_250069:
	addq $0xFFFFFFFFFFFFFE78,%rbp
	movq 0x188(%rbp),%r15
	movq %r15,0x180(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_250070
L_250251:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x190,%rbp
	leaq (L_250252+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250252
.p2align 0x4
.long 0x3DFB
L_250252:
	addq $0xFFFFFFFFFFFFFE70,%rbp
L_250070:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x180(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq 0x130(%rbp),%r14
	cmpq $0x1,%r14
	je L_482505
L_250071:
	movq %r15,0x188(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x180(%rbp)
	movq 0x0(%r14),%r15
L_250072:
	movq 0x8(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x198(%rbp)
	addq $0x198,%rbp
	leaq (L_250073+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_482505:
L_250250:
	movq 0x180(%rbp),%r15
	movq %r15,0x188(%rbp)
	movq $0x1,0x180(%rbp)
L_250077:
	movq (globalObjptr+0xA050)(%rip),%r15
	movq %r15,0x198(%rbp)
	addq $0x198,%rbp
	leaq (L_250078+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3DE4
L_250133:
	addq $0xFFFFFFFFFFFFFE88,%rbp
	movq 0x178(%rbp),%r15
	movq %r15,0x150(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_250134
L_250205:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x178,%rbp
	leaq (L_250206+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250206
.p2align 0x4
.long 0x3DF4
L_250206:
	addq $0xFFFFFFFFFFFFFE88,%rbp
L_250134:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x150(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq 0x130(%rbp),%r14
	cmpq $0x1,%r14
	je L_482507
L_250135:
	movq %r15,0x158(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0x150(%rbp)
	movq 0x0(%r14),%r15
L_250136:
	movq 0x8(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x178(%rbp)
	addq $0x178,%rbp
	leaq (L_250137+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_482507:
L_250204:
	movq 0x150(%rbp),%r15
	movq %r15,0x158(%rbp)
	movq $0x1,0x150(%rbp)
L_250141:
	movq (globalObjptr+0xA050)(%rip),%r15
	movq %r15,0x178(%rbp)
	addq $0x178,%rbp
	leaq (L_250142+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3E0F
L_250373:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
	movq 0x140(%rbp),%r15
	movq %r15,0x128(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_250374
L_250415:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x140,%rbp
	leaq (L_250416+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250416
.p2align 0x4
.long 0x3E14
L_250416:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
L_250374:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x138(%rbp)
	addq $0x18,%r12
	movq 0x130(%rbp),%r15
	movq %r15,0x0(%r13)
	movq 0x128(%rbp),%r14
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_250375:
	addl 0x0(%r15),%ecx
	movl %ecx,0x128(%rbp)
	jo L_249455
L_250376:
	cmpq $0x1,%r14
	je L_482509
L_250377:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_250375
.p2align 0x4
L_482509:
L_250378:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_250379
L_250413:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x148,%rbp
	leaq (L_250414+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250414
.p2align 0x4
.long 0x3E15
L_250414:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
L_250379:
	movl 0x128(%rbp),%ecx
	testl %ecx,%ecx
	jz L_482510
L_250380:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x138(%rbp),%r14
	movq %r14,0x0(%r15)
L_250381:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x128(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xB0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x4DF0)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xF368)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x138(%rbp)
	addq $0x138,%rbp
	leaq (L_250382+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_482510:
L_250412:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_250381
.p2align 0x4
.long 0x3E1D
L_250452:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq 0x160(%rbp),%r15
	movq %r15,0x148(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_250453
L_250488:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_250489+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250489
.p2align 0x4
.long 0x3E23
L_250489:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
L_250453:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x158(%rbp)
	addq $0x18,%r12
	movq 0x150(%rbp),%r15
	movq %r15,0x0(%r13)
	movq 0x148(%rbp),%r14
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_250454:
	addl 0x0(%r15),%ecx
	movl %ecx,0x148(%rbp)
	jo L_249455
L_250455:
	cmpq $0x1,%r14
	je L_482514
L_250456:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_250454
.p2align 0x4
L_482514:
L_250457:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_250458
L_250486:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x168,%rbp
	leaq (L_250487+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250487
.p2align 0x4
.long 0x3E24
L_250487:
	addq $0xFFFFFFFFFFFFFE98,%rbp
L_250458:
	movl 0x148(%rbp),%ecx
	testl %ecx,%ecx
	jz L_482515
L_250459:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x158(%rbp),%r14
	movq %r14,0x0(%r15)
L_250460:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x148(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xB0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x4DF0)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xF368)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x158(%rbp)
	addq $0x158,%rbp
	leaq (L_250461+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_482515:
L_250485:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_250460
.p2align 0x4
.long 0x3D8B
L_249561:
	addq $0xFFFFFFFFFFFFFE98,%rbp
	movl 0x168(%rbp),%r15d
	movl %r15d,0x130(%rbp)
	movq 0x170(%rbp),%r15
	movq %r15,0x160(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_249562
L_249855:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x170,%rbp
	leaq (L_249856+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_249856
.p2align 0x4
.long 0x3DB2
L_249856:
	addq $0xFFFFFFFFFFFFFE90,%rbp
L_249562:
	movl 0x130(%rbp),%ecx
	testl %ecx,%ecx
	jz L_482520
L_249563:
	decl %ecx
	jo L_249455
L_249564:
	movq $0x1B67,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl $0x1,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x160(%rbp),%r14
	movq %r14,0x8(%r15)
error_8:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x130(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x10620)(%rip),%r15
	movq %r15,0x168(%rbp)
	addq $0x168,%rbp
	leaq (L_249565+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_482520:
L_249854:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp error_8
.p2align 0x4
.long 0x3D95
L_249616:
	addq $0xFFFFFFFFFFFFFE90,%rbp
	movq 0x170(%rbp),%r15
	movq %r15,0x130(%rbp)
	movq (globalObjptr+0xE1E8)(%rip),%r15
	movq %r15,0x170(%rbp)
	addq $0x170,%rbp
	leaq (L_249617+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3D9B
L_249703:
	addq $0xFFFFFFFFFFFFFEB0,%rbp
	movl 0x150(%rbp),%r15d
	movl %r15d,0x100(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_249704
L_249711:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x150,%rbp
	leaq (L_249712+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_249712
.p2align 0x4
.long 0x3D9E
L_249712:
	addq $0xFFFFFFFFFFFFFEB0,%rbp
L_249704:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0x100(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq 0x128(%rbp),%r15
	movq %r15,0x18(%r13)
	movq $0x16D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xE8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xF8(%rbp),%r11
	movq %r11,0x8(%r15)
	movq %r15,0x138(%rbp)
	movq 0x28(%rbp),%r11
	movq 0x10(%r11),%r10
	movb 0x0(%r10),%r15b
	movb %r15b,0x148(%rbp)
	movq 0x20(%rbp),%r11
	movq 0x10(%r11),%r10
	movb 0x0(%r10),%r15b
	movb %r15b,0x149(%rbp)
	movq (globalObjptr+0x4DE0)(%rip),%r15
	movq $0xB33,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x1D03,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r13,0x0(%r15)
	movq %r13,0x130(%rbp)
	movq $0x605,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq %r12,(gcState+0x0)(%rip)
	movq %r14,0x0(%r13)
	movq %r13,0x150(%rbp)
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x163D,%rcx
	movq $0x1,%rdx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_249705+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_249705
.p2align 0x4
.long 0x3D9C
L_249705:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
	movq %rax,0xE8(%rbp)
	xorq %r15,%r15
.p2align 0x4,,0x7
loop_2901:
	cmpq $0x1,%r15
	jnl L_482522
L_249710:
	movq %r15,%r14
	movq %r15,%r13
	movq %r15,%r11
	movq %r15,%r10
	movq %r15,%r9
	movq 0xE8(%rbp),%r8
	movq %r8,%rsp
	shrq $0x8,%rsp
	movq (gcState+0x3C8)(%rip),%rsi
	movq %rsp,%rax
	movb $0x1,0x0(%rsi,%rax,1)
	imulq $0x28,%r14
	movq 0xA8(%rbp),%rsp
	movq %rsp,0x0(%r8,%r14,1)
	movq %r8,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%rsi,%r14,1)
	imulq $0x28,%r13
	movq 0x150(%rbp),%r14
	movq %r14,0x8(%r8,%r13,1)
	movq %r8,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%rsi,%r14,1)
	imulq $0x28,%r11
	movq $0x1,0x10(%r8,%r11,1)
	movq %r8,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%rsi,%r14,1)
	imulq $0x28,%r10
	movq $0x1,0x18(%r8,%r10,1)
	movq %r8,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%rsi,%r14,1)
	imulq $0x28,%r9
	movq 0x138(%rbp),%r14
	movq %r14,0x20(%r8,%r9,1)
	incq %r15
	jmp loop_2901
.p2align 0x4
L_482522:
L_249706:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_249707
L_249708:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x158,%rbp
	leaq (L_249709+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_249709
.p2align 0x4
.long 0x3D9D
L_249709:
	addq $0xFFFFFFFFFFFFFEA8,%rbp
L_249707:
	movq 0xE8(%rbp),%r15
	movq $0xB0B,0xFFFFFFFFFFFFFFF8(%r15)
	movq $0x448B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x140(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x20C5,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movzbl 0x148(%rbp),%r14d
	movzbl 0x149(%rbp),%r11d
	shll $0x8,%r11d
	orl %r11d,%r14d
	movl %r14d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0x4DE0)(%rip),%r14
	movq %r14,0x8(%r13)
	movq %r15,0x18(%r13)
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x2379,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r14,0x8(%r11)
	addq $0x18,%r12
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq %r11,0x0(%r15)
	movq $0x2099,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x130(%rbp),%r14
	movq %r14,0x0(%r15)
	jmp L_249700
.p2align 0x4
.long 0x3D9F
L_249716:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
	movq 0x148(%rbp),%r15
	movq %r15,0xE8(%rbp)
	movq %r15,0x148(%rbp)
	addq $0x148,%rbp
	leaq (L_249717+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3DC7
L_249948:
	addq $0xFFFFFFFFFFFFFED0,%rbp
	movq 0x130(%rbp),%r15
	movq %r15,0x110(%rbp)
	movq %r15,0x130(%rbp)
	addq $0x130,%rbp
	leaq (L_249949+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3E01
L_250295:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_250296
L_250297:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x148,%rbp
	leaq (L_250298+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250298
.p2align 0x4
.long 0x3E02
L_250298:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
L_250296:
	movl 0xBC(%rbp),%ecx
	movq 0x118(%rbp),%r15
	movl 0x128(%rbp),%ebx
	movq 0x130(%rbp),%r13
	movq 0x138(%rbp),%r14
	jmp L_250044
.p2align 0x4
.long 0x3E06
L_250306:
	addq $0xFFFFFFFFFFFFFE78,%rbp
	movq 0x188(%rbp),%r15
	movq %r15,0x170(%rbp)
	movq 0x178(%rbp),%r15
	movq %r15,0x180(%rbp)
	addq $0x180,%rbp
	leaq (L_250307+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x3DDA
L_250073:
	addq $0xFFFFFFFFFFFFFE68,%rbp
	movq 0x198(%rbp),%r15
	movq %r15,0x190(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_250074
L_250248:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1A0,%rbp
	leaq (L_250249+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250249
.p2align 0x4
.long 0x3DFA
L_250249:
	addq $0xFFFFFFFFFFFFFE60,%rbp
L_250074:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x190(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x188(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x180(%rbp),%r14
	cmpq $0x1,%r14
	je L_482526
L_250075:
	movq %r15,0x188(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x180(%rbp)
	jmp L_250072
.p2align 0x4
L_482526:
L_250076:
	movq 0x188(%rbp),%r15
	movq %r15,0x180(%rbp)
	movq 0x190(%rbp),%r15
	movq %r15,0x188(%rbp)
	jmp L_250077
.p2align 0x4
.long 0x3DDA
L_250078:
	addq $0xFFFFFFFFFFFFFE68,%rbp
	movq 0x198(%rbp),%r15
	movq %r15,0x190(%rbp)
	movq 0x180(%rbp),%r14
	movq %r14,0x198(%rbp)
	movq %r15,0x1A0(%rbp)
	addq $0x198,%rbp
	leaq (L_250079+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3787
.p2align 0x4
.long 0x3DE5
L_250137:
	addq $0xFFFFFFFFFFFFFE88,%rbp
	movq 0x178(%rbp),%r15
	movq %r15,0x170(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_250138
L_250202:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x180,%rbp
	leaq (L_250203+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250203
.p2align 0x4
.long 0x3DF3
L_250203:
	addq $0xFFFFFFFFFFFFFE80,%rbp
L_250138:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x170(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x158(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x150(%rbp),%r14
	cmpq $0x1,%r14
	je L_482528
L_250139:
	movq %r15,0x158(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x150(%rbp)
	jmp L_250136
.p2align 0x4
L_482528:
L_250140:
	movq 0x158(%rbp),%r15
	movq %r15,0x150(%rbp)
	movq 0x170(%rbp),%r15
	movq %r15,0x158(%rbp)
	jmp L_250141
.p2align 0x4
.long 0x3DE5
L_250142:
	addq $0xFFFFFFFFFFFFFE88,%rbp
	movq 0x178(%rbp),%r15
	movq %r15,0x170(%rbp)
	movq 0x150(%rbp),%r14
	movq %r14,0x178(%rbp)
	movq %r15,0x180(%rbp)
	addq $0x178,%rbp
	leaq (L_250143+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3787
.p2align 0x4
.long 0x3E10
L_250382:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
	movq 0x138(%rbp),%r15
	movq %r15,0x130(%rbp)
	movq %r15,0x138(%rbp)
	addq $0x138,%rbp
	leaq (L_250383+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3E1E
L_250461:
	addq $0xFFFFFFFFFFFFFEA8,%rbp
	movq 0x158(%rbp),%r15
	movq %r15,0x150(%rbp)
	movq %r15,0x158(%rbp)
	addq $0x158,%rbp
	leaq (L_250462+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3D8E
L_249565:
	addq $0xFFFFFFFFFFFFFE98,%rbp
	movq 0x168(%rbp),%r15
	movq %r15,0x160(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0x170(%rbp)
	addq $0x170,%rbp
	leaq (L_249566+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3D93
L_249617:
	addq $0xFFFFFFFFFFFFFE90,%rbp
	movq 0x170(%rbp),%r15
	movq %r15,0x148(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_249618
L_249820:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x170,%rbp
	leaq (L_249821+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_249821
.p2align 0x4
.long 0x3DAD
L_249821:
	addq $0xFFFFFFFFFFFFFE90,%rbp
L_249618:
	movq 0x130(%rbp),%r15
	cmpq $0x1,%r15
	je L_482530
L_249619:
	movq 0x8(%r15),%r14
	movq %r14,0x178(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x168(%rbp)
	movq 0x148(%rbp),%r15
	movq %r15,0x180(%rbp)
	addq $0x178,%rbp
	leaq (L_249620+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3948
.p2align 0x4
L_482530:
L_249819:
	movq $0x1,%r14
	xorl %ecx,%ecx
	xchgq %r14,%r15
L_249627:
	testl %ecx,%ecx
	jz L_482535
L_249628:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
L_249629:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x130(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x160(%rbp),%r14
	movq %r14,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_249630:
	addl 0x0(%r14),%ecx
	movl %ecx,0x148(%rbp)
	jo L_249455
L_249631:
	cmpq $0x1,%r15
	je L_482531
L_249632:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_249630
.p2align 0x4
L_482531:
L_249633:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_249634
L_249812:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x168,%rbp
	leaq (L_249813+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_249813
.p2align 0x4
.long 0x3DB1
L_249813:
	addq $0xFFFFFFFFFFFFFE98,%rbp
L_249634:
	movl 0x148(%rbp),%ecx
	testl %ecx,%ecx
	jz L_482532
L_249635:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x130(%rbp),%r14
	movq %r14,0x0(%r15)
L_249636:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x130(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x10618)(%rip),%r15
	movq %r15,0x168(%rbp)
	addq $0x168,%rbp
	leaq (L_249637+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_482532:
L_249811:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_249636
.p2align 0x4
L_482535:
L_249814:
	movq $0x1,%r15
	xorl %ecx,%ecx
	jmp L_249629
.p2align 0x4
.long 0x3D9F
L_249717:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
	movq 0x148(%rbp),%r15
	movq %r15,0xE8(%rbp)
	movq 0x128(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x148(%rbp)
	addq $0x148,%rbp
	leaq (L_249718+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3DC7
L_249949:
	addq $0xFFFFFFFFFFFFFED0,%rbp
	movq 0x130(%rbp),%r15
	movq %r15,0x110(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_249950
L_250009:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x130,%rbp
	leaq (L_250010+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250010
.p2align 0x4
.long 0x3DCE
L_250010:
	addq $0xFFFFFFFFFFFFFED0,%rbp
L_249950:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x110(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x108(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x118(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x100(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_249951:
	addl 0x0(%r15),%ecx
	movl %ecx,0x100(%rbp)
	jo L_249455
L_249952:
	cmpq $0x1,%r14
	je L_482537
L_249953:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_249951
.p2align 0x4
L_482537:
L_249954:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_249955
L_250007:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x130,%rbp
	leaq (L_250008+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250008
.p2align 0x4
.long 0x3DCD
L_250008:
	addq $0xFFFFFFFFFFFFFED0,%rbp
L_249955:
	movl 0x100(%rbp),%ecx
	testl %ecx,%ecx
	jz L_482539
L_249956:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x118(%rbp),%r14
	movq %r14,0x0(%r15)
L_249957:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_249455
L_249958:
	movl %r13d,0x0(%r15)
	movq %r14,0x138(%rbp)
	movq (globalObjptr+0x9D0)(%rip),%r15
	movq %r15,0x130(%rbp)
	movq 0xA8(%rbp),%r15
	movq %r15,0x140(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x148(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0x150(%rbp)
	addq $0x130,%rbp
	leaq (L_249959+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_482539:
L_250006:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_249957
.p2align 0x4
.long 0x3E07
L_250307:
	addq $0xFFFFFFFFFFFFFE80,%rbp
	movl 0x180(%rbp),%r15d
	movl %r15d,0x12C(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_250308
L_250309:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x180,%rbp
	leaq (L_250310+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250310
.p2align 0x4
.long 0x3E08
L_250310:
	addq $0xFFFFFFFFFFFFFE80,%rbp
L_250308:
	movq $0x13,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x8BD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x20,%r12
	movl 0x12C(%rbp),%r15d
	movl %r15d,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq 0x170(%rbp),%r15
	movq %r15,0x10(%r14)
	movq $0x8BF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq $0x1,0x0(%r15)
	movq 0x160(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x168(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x168(%rbp)
	jmp loop_2911
.p2align 0x4
.long 0x3DDB
L_250079:
	addq $0xFFFFFFFFFFFFFE68,%rbp
	movq 0x198(%rbp),%r15
	movq %r15,0x180(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_250080
L_250246:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x198,%rbp
	leaq (L_250247+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250247
.p2align 0x4
.long 0x3DF6
L_250247:
	addq $0xFFFFFFFFFFFFFE68,%rbp
L_250080:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x190(%rbp)
	addq $0x18,%r12
	movq 0x188(%rbp),%r15
	movq %r15,0x0(%r13)
	movq 0x180(%rbp),%r14
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_250081:
	addl 0x0(%r15),%ecx
	movl %ecx,0x144(%rbp)
	jo L_249455
L_250082:
	cmpq $0x1,%r14
	je L_482544
L_250083:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_250081
.p2align 0x4
L_482544:
L_250084:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_250085
L_250244:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1A0,%rbp
	leaq (L_250245+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250245
.p2align 0x4
.long 0x3DF9
L_250245:
	addq $0xFFFFFFFFFFFFFE60,%rbp
L_250085:
	movl 0x144(%rbp),%ecx
	testl %ecx,%ecx
	jz L_482545
L_250086:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x190(%rbp),%r14
	movq %r14,0x0(%r15)
L_250087:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x180(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq (globalObjptr+0xA460)(%rip),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x4DD8)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x10648)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x190(%rbp)
	addq $0x190,%rbp
	leaq (L_250088+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_482545:
L_250243:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_250087
.p2align 0x4
.long 0x3DE6
L_250143:
	addq $0xFFFFFFFFFFFFFE88,%rbp
	movq 0x178(%rbp),%r15
	movq %r15,0x150(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_250144
L_250200:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x178,%rbp
	leaq (L_250201+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250201
.p2align 0x4
.long 0x3DF1
L_250201:
	addq $0xFFFFFFFFFFFFFE88,%rbp
L_250144:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x170(%rbp)
	addq $0x18,%r12
	movq 0x158(%rbp),%r15
	movq %r15,0x0(%r13)
	movq 0x150(%rbp),%r14
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_250145:
	addl 0x0(%r15),%ecx
	movl %ecx,0x10C(%rbp)
	jo L_249455
L_250146:
	cmpq $0x1,%r14
	je L_482549
L_250147:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_250145
.p2align 0x4
L_482549:
L_250148:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_250149
L_250198:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x180,%rbp
	leaq (L_250199+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250199
.p2align 0x4
.long 0x3DF2
L_250199:
	addq $0xFFFFFFFFFFFFFE80,%rbp
L_250149:
	movl 0x10C(%rbp),%ecx
	testl %ecx,%ecx
	jz L_482550
L_250150:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x170(%rbp),%r14
	movq %r14,0x0(%r15)
L_250151:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x150(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq (globalObjptr+0xA458)(%rip),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x4DD8)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0x10648)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x178(%rbp)
	addq $0x178,%rbp
	leaq (L_250152+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_482550:
L_250197:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_250151
.p2align 0x4
.long 0x3E10
L_250383:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
	movq 0x138(%rbp),%r15
	movq %r15,0x130(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_250384
L_250410:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x140,%rbp
	leaq (L_250411+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250411
.p2align 0x4
.long 0x3E14
L_250411:
	addq $0xFFFFFFFFFFFFFEC0,%rbp
L_250384:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x130(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x128(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x138(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x118(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_250385:
	addl 0x0(%r15),%ecx
	movl %ecx,0x118(%rbp)
	jo L_249455
L_250386:
	cmpq $0x1,%r14
	je L_482554
L_250387:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_250385
.p2align 0x4
L_482554:
L_250388:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_250389
L_250408:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x148,%rbp
	leaq (L_250409+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250409
.p2align 0x4
.long 0x3E13
L_250409:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
L_250389:
	movl 0x118(%rbp),%ecx
	testl %ecx,%ecx
	jz L_482556
L_250390:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x138(%rbp),%r14
	movq %r14,0x0(%r15)
L_250391:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_249455
L_250392:
	movl %r13d,0x0(%r15)
	movq %r14,0x138(%rbp)
	movq (globalObjptr+0x9D0)(%rip),%r15
	movq %r15,0x130(%rbp)
	movq 0xA8(%rbp),%r15
	movq %r15,0x140(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x148(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0x150(%rbp)
	addq $0x130,%rbp
	leaq (L_250393+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_482556:
L_250407:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_250391
.p2align 0x4
.long 0x3E1E
L_250462:
	addq $0xFFFFFFFFFFFFFEA8,%rbp
	movq 0x158(%rbp),%r15
	movq %r15,0x150(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_250463
L_250483:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x160,%rbp
	leaq (L_250484+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250484
.p2align 0x4
.long 0x3E23
L_250484:
	addq $0xFFFFFFFFFFFFFEA0,%rbp
L_250463:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x150(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x148(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x158(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x140(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_250464:
	addl 0x0(%r15),%ecx
	movl %ecx,0x140(%rbp)
	jo L_249455
L_250465:
	cmpq $0x1,%r14
	je L_482560
L_250466:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_250464
.p2align 0x4
L_482560:
L_250467:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_250468
L_250481:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x168,%rbp
	leaq (L_250482+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250482
.p2align 0x4
.long 0x3E22
L_250482:
	addq $0xFFFFFFFFFFFFFE98,%rbp
L_250468:
	movl 0x140(%rbp),%ecx
	testl %ecx,%ecx
	jz L_482562
L_250469:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x158(%rbp),%r14
	movq %r14,0x0(%r15)
L_250470:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_249455
L_250471:
	movl %r13d,0x0(%r15)
	movq %r14,0x150(%rbp)
	movq (globalObjptr+0x9D0)(%rip),%r15
	movq %r15,0x148(%rbp)
	movq 0xA8(%rbp),%r15
	movq %r15,0x158(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x160(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0x168(%rbp)
	addq $0x148,%rbp
	leaq (L_250472+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_482562:
L_250480:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_250470
.p2align 0x4
.long 0x3D8F
L_249566:
	addq $0xFFFFFFFFFFFFFE90,%rbp
	movq 0x170(%rbp),%r15
	movq %r15,0x168(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_249567
L_249852:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x178,%rbp
	leaq (L_249853+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_249853
.p2align 0x4
.long 0x3DBA
L_249853:
	addq $0xFFFFFFFFFFFFFE88,%rbp
L_249567:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x168(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x170(%rbp)
	addq $0x18,%r12
	movq 0x160(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_249568:
	addl 0x0(%r15),%ecx
	movl %ecx,0x154(%rbp)
	jo L_249455
L_249569:
	cmpq $0x1,%r14
	je L_482566
L_249570:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_249568
.p2align 0x4
L_482566:
L_249571:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_249572
L_249850:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x180,%rbp
	leaq (L_249851+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_249851
.p2align 0x4
.long 0x3DBB
L_249851:
	addq $0xFFFFFFFFFFFFFE80,%rbp
L_249572:
	movl 0x154(%rbp),%ecx
	testl %ecx,%ecx
	jz L_482567
L_249573:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x170(%rbp),%r14
	movq %r14,0x0(%r15)
L_249574:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x160(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x168(%rbp)
	addq $0x18,%r12
	movq 0x130(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq (globalObjptr+0x10628)(%rip),%r15
	movq %r15,0x178(%rbp)
	addq $0x178,%rbp
	leaq (L_249575+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_482567:
L_249849:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_249574
.p2align 0x4
.long 0x3D96
L_249620:
	addq $0xFFFFFFFFFFFFFE88,%rbp
	movq 0x178(%rbp),%r15
	movq %r15,0x130(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_249621
L_249817:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x178,%rbp
	leaq (L_249818+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_249818
.p2align 0x4
.long 0x3DB3
L_249818:
	addq $0xFFFFFFFFFFFFFE88,%rbp
L_249621:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x148(%rbp)
	addq $0x18,%r12
	movq 0x168(%rbp),%r15
	movq %r15,0x0(%r13)
	movq 0x130(%rbp),%r14
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_249622:
	addl 0x0(%r15),%ecx
	movl %ecx,0x130(%rbp)
	jo L_249455
L_249623:
	cmpq $0x1,%r14
	je L_482571
L_249624:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_249622
.p2align 0x4
L_482571:
L_249625:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_249626
L_249815:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x170,%rbp
	leaq (L_249816+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_249816
.p2align 0x4
.long 0x3DB2
L_249816:
	addq $0xFFFFFFFFFFFFFE90,%rbp
L_249626:
	movq 0x148(%rbp),%r15
	movl 0x130(%rbp),%ecx
	jmp L_249627
.p2align 0x4
.long 0x3D94
L_249637:
	addq $0xFFFFFFFFFFFFFE98,%rbp
	movq 0x168(%rbp),%r15
	movq %r15,0x148(%rbp)
	movq 0x110(%rbp),%r15
	movq %r15,0x168(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x170(%rbp)
	addq $0x168,%rbp
	leaq (L_249638+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layoutPretty_1
.p2align 0x4
.long 0x3DA0
L_249718:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
	movq 0x148(%rbp),%r15
	movq %r15,0xF8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_249719
L_249763:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x148,%rbp
	leaq (L_249764+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_249764
.p2align 0x4
.long 0x3DA9
L_249764:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
L_249719:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xF8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_482575
L_249720:
	movq %r15,0x128(%rbp)
	movq 0x8(%r14),%r13
	movq %r13,0xF8(%rbp)
	movq 0x0(%r14),%r15
L_249721:
	movq 0x8(%r15),%r14
	movq 0x10(%r14),%r13
	movq %r13,0x148(%rbp)
	addq $0x148,%rbp
	leaq (L_249722+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_482575:
L_249762:
	movq 0xF8(%rbp),%r15
	movq %r15,0x128(%rbp)
	movq $0x1,0xF8(%rbp)
L_249726:
	movq (globalObjptr+0xA050)(%rip),%r15
	movq %r15,0x148(%rbp)
	addq $0x148,%rbp
	leaq (L_249727+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3DC3
L_249959:
	addq $0xFFFFFFFFFFFFFED0,%rbp
	movq (globalObjptr+0x1608)(%rip),%r15
	movq (globalObjptr+0x1610)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_482579
L_249960:
	movq 0xE8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x100(%rbp)
	movb 0x0(%r15),%r14b
	cmpb $0x1,%r14b
	je L_482578
	cmpb $0x2,%r14b
	je L_482577
L_249961:
	movq 0x70(%rbp),%r15
	movq %r15,0x130(%rbp)
	addq $0x130,%rbp
	leaq (L_249962+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_482577:
L_250000:
	movq 0x78(%rbp),%r15
	movq %r15,0x130(%rbp)
	addq $0x130,%rbp
	leaq (L_250001+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_482578:
L_249995:
	movq 0x78(%rbp),%r13
	movq %r13,0x130(%rbp)
	addq $0x130,%rbp
	leaq (L_249996+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_482579:
L_249749:
	movq (globalObjptr+0x1618)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3DDC
L_250088:
	addq $0xFFFFFFFFFFFFFE70,%rbp
	movq 0x190(%rbp),%r15
	movq %r15,0x188(%rbp)
	movq %r15,0x190(%rbp)
	addq $0x190,%rbp
	leaq (L_250089+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3DE7
L_250152:
	addq $0xFFFFFFFFFFFFFE88,%rbp
	movq 0x178(%rbp),%r15
	movq %r15,0x158(%rbp)
	movq %r15,0x178(%rbp)
	addq $0x178,%rbp
	leaq (L_250153+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3E0C
L_250393:
	addq $0xFFFFFFFFFFFFFED0,%rbp
	movq (globalObjptr+0x1608)(%rip),%r15
	movq (globalObjptr+0x1610)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_249749
L_250394:
	movq 0x88(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x138(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x118(%rbp)
	movq 0x108(%rbp),%r15
	movq %r15,0x130(%rbp)
	addq $0x130,%rbp
	leaq (L_250395+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp typeStrToEnv_0
.p2align 0x4
.long 0x3E1A
L_250472:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
	movq (globalObjptr+0x1610)(%rip),%r15
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_249749
L_250473:
	movq (globalObjptr+0xA058)(%rip),%r15
	movq %r15,0x148(%rbp)
	movq 0x130(%rbp),%r15
	movq %r15,0x150(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0x158(%rbp)
	addq $0x148,%rbp
	leaq (L_250474+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1221
.p2align 0x4
.long 0x3D8C
L_249575:
	addq $0xFFFFFFFFFFFFFE88,%rbp
	movq 0x178(%rbp),%r15
	movq %r15,0x130(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_249576
L_249847:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x178,%rbp
	leaq (L_249848+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_249848
.p2align 0x4
.long 0x3DBA
L_249848:
	addq $0xFFFFFFFFFFFFFE88,%rbp
L_249576:
	movq 0x0(%rbp),%r15
	cmpq $0x1,%r15
	je L_482587
L_249577:
	movq 0x8(%r15),%r14
	movq %r14,0x170(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x178(%rbp)
	movq $0x1,0x180(%rbp)
.p2align 0x4,,0x7
L_249578:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_482586
.p2align 0x4,,0x7
L_249579:
	movq $0x1BD3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x178(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x180(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x170(%rbp),%r14
	cmpq $0x1,%r14
	je L_482582
L_249580:
	movq %r15,0x180(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x170(%rbp)
	movq %r15,0x178(%rbp)
	jmp L_249578
.p2align 0x4
L_482582:
L_249582:
	movq $0x143,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0xF8(%rbp),%r13
	movq %r13,0x8(%r14)
	cmpq $0x1,%r15
	je L_482585
L_249583:
	movq 0x0(%r15),%r11
	movq 0x0(%r11),%r10
	movq 0x0(%r13),%r15
	cmpq $0x1,%r10
	je L_482584
L_249584:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r15
	je L_482583
L_249585:
	movq 0x8(%r15),%r11
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r13,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r14,%r15
	movq %r10,%r14
L_249586:
	movq $0x145,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r13,0x178(%rbp)
	addq $0x18,%r12
	addq $0x178,%rbp
	leaq (L_249587+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_31
.p2align 0x4
L_482583:
L_249841:
	movq %r14,%r15
	movq %r10,%r14
	jmp L_249586
.p2align 0x4
L_482584:
L_249842:
	xchgq %r14,%r15
	jmp L_249586
.p2align 0x4
L_482585:
L_249843:
	movq 0x0(%r13),%r11
	movq %r14,%r15
	movq %r11,%r14
	jmp L_249586
.p2align 0x4
L_482586:
L_249844:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x190,%rbp
	leaq (L_249845+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_249845
.p2align 0x4
.long 0x3DB9
L_249845:
	addq $0xFFFFFFFFFFFFFE70,%rbp
	jmp L_249579
.p2align 0x4
L_482587:
L_249846:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_249582
.p2align 0x4
.long 0x3D8E
L_249638:
	addq $0xFFFFFFFFFFFFFE98,%rbp
	movq 0x168(%rbp),%r15
	movq %r15,0x160(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_249639
L_249809:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x170,%rbp
	leaq (L_249810+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_249810
.p2align 0x4
.long 0x3DAD
L_249810:
	addq $0xFFFFFFFFFFFFFE90,%rbp
L_249639:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x160(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x168(%rbp)
	addq $0x18,%r12
	movq 0x148(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_249640:
	addl 0x0(%r15),%ecx
	movl %ecx,0x148(%rbp)
	jo L_249455
L_249641:
	cmpq $0x1,%r14
	je L_482589
L_249642:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_249640
.p2align 0x4
L_482589:
L_249643:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_249644
L_249807:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x178,%rbp
	leaq (L_249808+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_249808
.p2align 0x4
.long 0x3DAF
L_249808:
	addq $0xFFFFFFFFFFFFFE88,%rbp
L_249644:
	movl 0x148(%rbp),%ecx
	testl %ecx,%ecx
	jz L_482590
L_249645:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x168(%rbp),%r14
	movq %r14,0x0(%r15)
L_249646:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x130(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x168(%rbp)
	addq $0x168,%rbp
	leaq (L_249647+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3782
.p2align 0x4
L_482590:
L_249806:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_249646
.p2align 0x4
.long 0x3DA1
L_249722:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
	movq 0x148(%rbp),%r15
	movq %r15,0x130(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_249723
L_249760:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x148,%rbp
	leaq (L_249761+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_249761
.p2align 0x4
.long 0x3DA8
L_249761:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
L_249723:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x130(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x128(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0xF8(%rbp),%r14
	cmpq $0x1,%r14
	je L_482594
L_249724:
	movq %r15,0x128(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0xF8(%rbp)
	jmp L_249721
.p2align 0x4
L_482594:
L_249725:
	movq 0x128(%rbp),%r15
	movq %r15,0xF8(%rbp)
	movq 0x130(%rbp),%r15
	movq %r15,0x128(%rbp)
	jmp L_249726
.p2align 0x4
.long 0x3DA1
L_249727:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
	movq 0x148(%rbp),%r15
	movq %r15,0x130(%rbp)
	movq 0xF8(%rbp),%r14
	movq %r14,0x148(%rbp)
	movq %r15,0x150(%rbp)
	addq $0x148,%rbp
	leaq (L_249728+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3787
.p2align 0x4
.long 0x3DC8
L_249962:
	addq $0xFFFFFFFFFFFFFED0,%rbp
	movl 0x130(%rbp),%r15d
	movl %r15d,0xE8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_249963
L_249993:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x130,%rbp
	leaq (L_249994+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_249994
.p2align 0x4
.long 0x3DCA
L_249994:
	addq $0xFFFFFFFFFFFFFED0,%rbp
L_249963:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0xE8(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xCE38)(%rip),%r15
	movq %r15,0x18(%r13)
	movq $0x2099,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r15,0xE8(%rbp)
	addq $0x10,%r12
L_249964:
	movq 0x100(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x108(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x130(%rbp)
	movq $0x71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x110(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x68(%rbp),%r15
	movq 0x28(%r15),%r14
	movq 0x20(%r15),%r13
	movq 0x18(%r15),%r11
	movq $0x71,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r10,0x118(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r10)
	movl $0x0,0x4(%r10)
	movq $0x9E5,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r11,0x0(%r9)
	movq %r13,0x8(%r9)
	movq %r14,0x10(%r9)
	addq $0x30,%r12
	movq %r10,0x18(%r9)
	movq %r15,0x20(%r9)
	movq %r9,0x138(%rbp)
	leaq L_249979(%rip),%r15
	movq %r15,0xC8(%rbp)
	movq %rbp,%r15
	addq $0xD0,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x130,%rbp
	leaq (L_249965+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3798
.p2align 0x4
.long 0x3DC8
L_250001:
	addq $0xFFFFFFFFFFFFFED0,%rbp
	movl 0x130(%rbp),%r15d
	movl %r15d,0xE8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_250002
L_250003:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x130,%rbp
	leaq (L_250004+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250004
.p2align 0x4
.long 0x3DCA
L_250004:
	addq $0xFFFFFFFFFFFFFED0,%rbp
L_250002:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0xE8(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xE3A0)(%rip),%r15
	movq %r15,0x18(%r13)
	movq $0x209F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r15,0xE8(%rbp)
	addq $0x10,%r12
	jmp L_249964
.p2align 0x4
.long 0x3DC8
L_249996:
	addq $0xFFFFFFFFFFFFFED0,%rbp
	movl 0x130(%rbp),%r15d
	movl %r15d,0xE8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_249997
L_249998:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x130,%rbp
	leaq (L_249999+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_249999
.p2align 0x4
.long 0x3DCA
L_249999:
	addq $0xFFFFFFFFFFFFFED0,%rbp
L_249997:
	movq $0x15,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x17,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	movq %r14,0x10(%r13)
	addq $0x28,%r12
	movl 0xE8(%rbp),%r15d
	movl %r15d,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq (globalObjptr+0xE3A0)(%rip),%r15
	movq %r15,0x18(%r13)
	movq $0x209D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r13,0x0(%r15)
	movq %r15,0xE8(%rbp)
	addq $0x10,%r12
	jmp L_249964
.p2align 0x4
.long 0x3DDC
L_250089:
	addq $0xFFFFFFFFFFFFFE70,%rbp
	movq 0x190(%rbp),%r15
	movq %r15,0x188(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_250090
L_250241:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x198,%rbp
	leaq (L_250242+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250242
.p2align 0x4
.long 0x3DF6
L_250242:
	addq $0xFFFFFFFFFFFFFE68,%rbp
L_250090:
	movq $0x3C97,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x130(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x178(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x198(%rbp)
	movl 0x140(%rbp),%r15d
	movl %r15d,0x1A0(%rbp)
	addq $0x198,%rbp
	leaq (L_250091+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
.long 0x3DE7
L_250153:
	addq $0xFFFFFFFFFFFFFE88,%rbp
	movq 0x178(%rbp),%r15
	movq %r15,0x158(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_250154
L_250195:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x178,%rbp
	leaq (L_250196+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250196
.p2align 0x4
.long 0x3DF1
L_250196:
	addq $0xFFFFFFFFFFFFFE88,%rbp
L_250154:
	movq $0x3C97,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x130(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x110(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x178(%rbp)
	movl 0x108(%rbp),%r15d
	movl %r15d,0x180(%rbp)
	addq $0x178,%rbp
	leaq (L_250155+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
.long 0x3E0D
L_250395:
	addq $0xFFFFFFFFFFFFFED0,%rbp
	movq 0x130(%rbp),%r15
	movq %r15,0x128(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_250396
L_250404:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x138,%rbp
	leaq (L_250405+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250405
.p2align 0x4
.long 0x3E12
L_250405:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
L_250396:
	movq 0x128(%rbp),%r15
	cmpq $0x1,%r15
	je L_482601
L_250397:
	movq %r15,0x108(%rbp)
L_250398:
	movq 0x90(%rbp),%r15
	movq %r15,0x130(%rbp)
	addq $0x130,%rbp
	leaq (L_250399+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_482601:
L_250403:
	movq 0x108(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x20A1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x118(%rbp),%r11
	movq %r11,0x0(%r14)
	movq $0x6D7,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r14,0x8(%r11)
	movq %r11,0x108(%rbp)
	addq $0x18,%r12
	jmp L_250398
.p2align 0x4
.long 0x3E1F
L_250474:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
	movq 0x148(%rbp),%r15
	movq %r15,0x130(%rbp)
	movq 0x150(%rbp),%r15
	movq %r15,0x140(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0x150(%rbp)
	addq $0x150,%rbp
	leaq (L_250475+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
.long 0x3D90
L_249587:
	addq $0xFFFFFFFFFFFFFE88,%rbp
	movq 0x178(%rbp),%r15
	movq %r15,0x170(%rbp)
	movl 0x180(%rbp),%r15d
	movl %r15d,0x154(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_249588
L_249839:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x180,%rbp
	leaq (L_249840+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_249840
.p2align 0x4
.long 0x3DB8
L_249840:
	addq $0xFFFFFFFFFFFFFE80,%rbp
L_249588:
	movq $0xC3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x154(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x170(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x178(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x130(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_249589:
	addl 0x0(%r15),%ecx
	movl %ecx,0x130(%rbp)
	jo L_249455
L_249590:
	cmpq $0x1,%r14
	je L_482603
L_249591:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_249589
.p2align 0x4
L_482603:
L_249592:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_249593
L_249837:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x188,%rbp
	leaq (L_249838+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_249838
.p2align 0x4
.long 0x3DB7
L_249838:
	addq $0xFFFFFFFFFFFFFE78,%rbp
L_249593:
	movl 0x130(%rbp),%ecx
	testl %ecx,%ecx
	jz L_482604
L_249594:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x178(%rbp),%r14
	movq %r14,0x0(%r15)
L_249595:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x168(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x170(%rbp)
	addq $0x170,%rbp
	leaq (L_249596+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3782
.p2align 0x4
L_482604:
L_249836:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_249595
.p2align 0x4
.long 0x3D92
L_249647:
	addq $0xFFFFFFFFFFFFFE98,%rbp
	movl 0x168(%rbp),%r15d
	movl %r15d,0x130(%rbp)
	movq 0x170(%rbp),%r15
	movq %r15,0x148(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_249648
L_249804:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x168,%rbp
	leaq (L_249805+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_249805
.p2align 0x4
.long 0x3DB0
L_249805:
	addq $0xFFFFFFFFFFFFFE98,%rbp
L_249648:
	movl 0x130(%rbp),%ecx
	testl %ecx,%ecx
	jz L_482609
L_249649:
	decl %ecx
	jo L_249455
L_249650:
	movq $0x1B67,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl $0x1,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x148(%rbp),%r14
	movq %r14,0x8(%r15)
error_9:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x130(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x10620)(%rip),%r15
	movq %r15,0x168(%rbp)
	addq $0x168,%rbp
	leaq (L_249651+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_482609:
L_249803:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp error_9
.p2align 0x4
.long 0x3DA2
L_249728:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
	movq 0x148(%rbp),%r15
	movq %r15,0xF8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_249729
L_249758:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x148,%rbp
	leaq (L_249759+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_249759
.p2align 0x4
.long 0x3DA7
L_249759:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
L_249729:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x130(%rbp)
	addq $0x18,%r12
	movq 0x128(%rbp),%r15
	movq %r15,0x0(%r13)
	movq 0xF8(%rbp),%r14
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_249730:
	addl 0x0(%r15),%ecx
	movl %ecx,0xF8(%rbp)
	jo L_249455
L_249731:
	cmpq $0x1,%r14
	je L_482611
L_249732:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_249730
.p2align 0x4
L_482611:
L_249733:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_249734
L_249756:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x148,%rbp
	leaq (L_249757+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_249757
.p2align 0x4
.long 0x3DA6
L_249757:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
L_249734:
	movl 0xF8(%rbp),%ecx
	testl %ecx,%ecx
	jz L_482617
L_249735:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x130(%rbp),%r14
	movq %r14,0x0(%r15)
L_249736:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0xF8(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0xE8(%rbp),%r14
	movq %r14,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_249737:
	addl 0x0(%r14),%ecx
	movl %ecx,0xE8(%rbp)
	jo L_249455
L_249738:
	cmpq $0x1,%r15
	je L_482612
L_249739:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_249737
.p2align 0x4
L_482612:
L_249740:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_249741
L_249753:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x148,%rbp
	leaq (L_249754+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_249754
.p2align 0x4
.long 0x3DA5
L_249754:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
L_249741:
	movl 0xE8(%rbp),%ecx
	testl %ecx,%ecx
	jz L_482614
L_249742:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xF8(%rbp),%r14
	movq %r14,0x0(%r15)
L_249743:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_249455
L_249744:
	movl %r13d,0x0(%r15)
	movq %r14,0x150(%rbp)
	movq (globalObjptr+0x9D0)(%rip),%r15
	movq %r15,0x148(%rbp)
	movq 0xA8(%rbp),%r15
	movq %r15,0x158(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x160(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0x168(%rbp)
	addq $0x148,%rbp
	leaq (L_249745+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_482614:
L_249752:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_249743
.p2align 0x4
L_482617:
L_249755:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_249736
.p2align 0x4
.long 0x3DC9
L_249965:
	addq $0xFFFFFFFFFFFFFED0,%rbp
	movq 0x130(%rbp),%r15
	movq %r15,0x100(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_249966
L_249977:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x130,%rbp
	leaq (L_249978+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_249978
.p2align 0x4
.long 0x3DCB
L_249978:
	addq $0xFFFFFFFFFFFFFED0,%rbp
L_249966:
	movq 0x108(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_482622
L_249968:
	testl %r13d,%r13d
	jz L_482621
L_249969:
	movq $0x47BD,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq $0x1D01,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x30,%r12
	movl $0x1,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq $0x1,0x10(%r13)
	movq 0x100(%rbp),%r14
	movq %r14,0x18(%r13)
	movq %r15,0x20(%r13)
	movq %r13,%r15
L_249971:
	movq $0x5C9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x100(%rbp)
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0xE8(%rbp),%r15
	movq %r15,0x8(%r14)
	movq 0xD0(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x90(%rbp),%r15
	movq %r15,0x130(%rbp)
	addq $0x130,%rbp
	leaq (L_249972+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1184
.p2align 0x4
L_482621:
L_249976:
	movq $0x1CFF,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x100(%rbp),%r13
	movq %r13,0x0(%r14)
	xchgq %r14,%r15
	jmp L_249971
.p2align 0x4
L_482622:
L_249967:
	movq 0xD0(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x4D8)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x3DB5
L_249979:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r15
	movq %r15,0x100(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_249981
L_249991:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x130,%rbp
	leaq (L_249992+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_249992
.p2align 0x4
.long 0x3DCC
L_249992:
	addq $0xFFFFFFFFFFFFFED0,%rbp
L_249981:
	movq 0x100(%rbp),%r15
	movq %r15,%r14
	andq $0x3,%r14
	jnz L_249982
L_249983:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xD5E,%r14
	je L_482627
	cmpq $0xD5F,%r14
	je L_482624
L_249982:
	movq 0xD0(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x100(%rbp),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_482624:
L_249988:
	movq 0x100(%rbp),%r15
	movq 0x118(%rbp),%r14
	cmpq %r14,0x0(%r15)
	je L_482625
L_249989:
	movq 0xD0(%rbp),%r14
	movq %r14,(gcState+0x20)(%rip)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r14,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_482625:
L_249990:
	movq $0x1ABD,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq 0x110(%rbp),%r14
	movq %r14,0x0(%r13)
	movq $0x1,0x8(%r13)
	movq $0x1,%r11
	xchgq %r14,%r15
	xchgq %r13,%r14
	xchgq %r11,%r13
L_249985:
	cmpq %r15,0x110(%rbp)
	je L_482626
L_249986:
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq 0xD0(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_482626:
	movq %r13,%r15
	jmp L_249971
.p2align 0x4
L_482627:
L_249984:
	movq 0x100(%rbp),%r14
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r15
	jmp L_249985
.p2align 0x4
.long 0x3DDD
L_250091:
	addq $0xFFFFFFFFFFFFFE68,%rbp
	movq 0x198(%rbp),%r15
	movq %r15,0x140(%rbp)
	movq (globalObjptr+0xE1E8)(%rip),%r15
	movq %r15,0x198(%rbp)
	addq $0x198,%rbp
	leaq (L_250092+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3DE8
L_250155:
	addq $0xFFFFFFFFFFFFFE88,%rbp
	movq 0x178(%rbp),%r15
	movq %r15,0x108(%rbp)
	movq (globalObjptr+0xE1E8)(%rip),%r15
	movq %r15,0x178(%rbp)
	addq $0x178,%rbp
	leaq (L_250156+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3E0C
L_250399:
	addq $0xFFFFFFFFFFFFFED0,%rbp
	movl 0x130(%rbp),%r15d
	movl %r15d,0x118(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_250400
L_250401:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x130,%rbp
	leaq (L_250402+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250402
.p2align 0x4
.long 0x3E11
L_250402:
	addq $0xFFFFFFFFFFFFFED0,%rbp
L_250400:
	movq $0x53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x6D9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movl 0xBC(%rbp),%ecx
	movl 0x118(%rbp),%ebx
	movq 0x108(%rbp),%r13
	movq 0x110(%rbp),%r11
	movq %r14,%r15
	movq %r11,%r14
	jmp L_250044
.p2align 0x4
.long 0x3E20
L_250475:
	addq $0xFFFFFFFFFFFFFEB0,%rbp
	movl 0x150(%rbp),%r15d
	movl %r15d,0x130(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_250476
L_250477:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x150,%rbp
	leaq (L_250478+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250478
.p2align 0x4
.long 0x3E21
L_250478:
	addq $0xFFFFFFFFFFFFFEB0,%rbp
L_250476:
	movq $0x53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x6DB,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	addq $0x18,%r12
	movq $0x1,0x8(%r13)
	movl 0x114(%rbp),%ecx
	movl 0x130(%rbp),%ebx
	movq 0x140(%rbp),%r14
	movq 0x138(%rbp),%r15
	jmp L_250434
.p2align 0x4
.long 0x3D91
L_249596:
	addq $0xFFFFFFFFFFFFFE90,%rbp
	movl 0x170(%rbp),%r15d
	movl %r15d,0x130(%rbp)
	movq 0x178(%rbp),%r15
	movq %r15,0x168(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_249597
L_249834:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x178,%rbp
	leaq (L_249835+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_249835
.p2align 0x4
.long 0x3DB6
L_249835:
	addq $0xFFFFFFFFFFFFFE88,%rbp
L_249597:
	movl 0x130(%rbp),%ecx
	testl %ecx,%ecx
	jz L_482634
L_249598:
	decl %ecx
	jo L_249455
L_249599:
	movq $0x1B67,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl $0x1,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x168(%rbp),%r14
	movq %r14,0x8(%r15)
L_249600:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_249455
L_249601:
	movl %r13d,0x0(%r15)
	movq %r14,0x168(%rbp)
	movq 0x160(%rbp),%r15
	movq %r15,0x170(%rbp)
	movq 0xA8(%rbp),%r15
	movq %r15,0x178(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x180(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0x188(%rbp)
	addq $0x168,%rbp
	leaq (L_249602+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_482634:
L_249833:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_249600
.p2align 0x4
.long 0x3D94
L_249651:
	addq $0xFFFFFFFFFFFFFE98,%rbp
	movq 0x168(%rbp),%r15
	movq %r15,0x148(%rbp)
	movq 0xB0(%rbp),%r15
	movq %r15,0x168(%rbp)
	addq $0x168,%rbp
	leaq (L_249652+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x3DA3
L_249745:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_249746
L_249750:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x148,%rbp
	leaq (L_249751+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_249751
.p2align 0x4
.long 0x3DA4
L_249751:
	addq $0xFFFFFFFFFFFFFEB8,%rbp
L_249746:
	movq (globalObjptr+0x1608)(%rip),%r14
	movq (globalObjptr+0x1610)(%rip),%r13
	movl 0x0(%r13),%r11d
	cmpl %r11d,0x0(%r14)
	je L_249749
L_249747:
	movq 0x138(%rbp),%r15
	jmp L_249700
.p2align 0x4
.long 0x3DC8
L_249972:
	addq $0xFFFFFFFFFFFFFED0,%rbp
	movl 0x130(%rbp),%r15d
	movl %r15d,0xE8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_249973
L_249974:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x130,%rbp
	leaq (L_249975+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_249975
.p2align 0x4
.long 0x3DCA
L_249975:
	addq $0xFFFFFFFFFFFFFED0,%rbp
L_249973:
	movq $0x5CB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x5CD,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movl 0x8C(%rbp),%ecx
	movl 0xE8(%rbp),%ebx
	movq 0x100(%rbp),%r14
	movq 0xF8(%rbp),%r11
	movq %r13,%r15
	movq %r11,%r13
	jmp L_249525
.p2align 0x4
.long 0x3DDE
L_250092:
	addq $0xFFFFFFFFFFFFFE68,%rbp
	movq 0x198(%rbp),%r15
	movq %r15,0x178(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_250093
L_250239:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x198,%rbp
	leaq (L_250240+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250240
.p2align 0x4
.long 0x3DF8
L_250240:
	addq $0xFFFFFFFFFFFFFE68,%rbp
L_250093:
	movq 0x140(%rbp),%r15
	cmpq $0x1,%r15
	je L_482639
L_250094:
	movq 0x8(%r15),%r14
	movq %r14,0x1A0(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x190(%rbp)
	movq 0x178(%rbp),%r15
	movq %r15,0x1A8(%rbp)
	addq $0x1A0,%rbp
	leaq (L_250095+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3948
.p2align 0x4
L_482639:
L_250238:
	movq $0x1,%r14
	xorl %ecx,%ecx
	xchgq %r14,%r15
L_250102:
	testl %ecx,%ecx
	jz L_482645
L_250103:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
L_250104:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x188(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x180(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x140(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x150(%rbp),%r14
	movq %r14,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_250105:
	addl 0x0(%r14),%ecx
	movl %ecx,0x150(%rbp)
	jo L_249455
L_250106:
	cmpq $0x1,%r15
	je L_482640
L_250107:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_250105
.p2align 0x4
L_482640:
L_250108:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_250109
L_250231:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x180,%rbp
	leaq (L_250232+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250232
.p2align 0x4
.long 0x3DD7
L_250232:
	addq $0xFFFFFFFFFFFFFE80,%rbp
L_250109:
	movl 0x150(%rbp),%ecx
	testl %ecx,%ecx
	jz L_482642
L_250110:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x140(%rbp),%r14
	movq %r14,0x0(%r15)
L_250111:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_249455
L_250112:
	movl %r13d,0x0(%r15)
	movq %r14,0x188(%rbp)
	movq (globalObjptr+0x9D0)(%rip),%r15
	movq %r15,0x180(%rbp)
	movq 0x148(%rbp),%r15
	movq %r15,0x190(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x198(%rbp)
	movq 0x160(%rbp),%r15
	movq %r15,0x1A0(%rbp)
	addq $0x180,%rbp
	leaq (L_250113+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_482642:
L_250230:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_250111
.p2align 0x4
L_482645:
L_250233:
	movq $0x1,%r15
	xorl %ecx,%ecx
	jmp L_250104
.p2align 0x4
.long 0x3DE9
L_250156:
	addq $0xFFFFFFFFFFFFFE88,%rbp
	movq 0x178(%rbp),%r15
	movq %r15,0x110(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_250157
L_250193:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x178,%rbp
	leaq (L_250194+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250194
.p2align 0x4
.long 0x3DF0
L_250194:
	addq $0xFFFFFFFFFFFFFE88,%rbp
L_250157:
	movq 0x108(%rbp),%r15
	cmpq $0x1,%r15
	je L_482647
L_250158:
	movq 0x8(%r15),%r14
	movq %r14,0x178(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x130(%rbp)
	movq 0x110(%rbp),%r15
	movq %r15,0x180(%rbp)
	addq $0x178,%rbp
	leaq (L_250159+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3948
.p2align 0x4
L_482647:
L_250192:
	movq $0x1,%r14
	xorl %ecx,%ecx
	xchgq %r14,%r15
L_250166:
	testl %ecx,%ecx
	jz L_482653
L_250167:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
L_250168:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x158(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x150(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x108(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x140(%rbp),%r14
	movq %r14,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_250169:
	addl 0x0(%r14),%ecx
	movl %ecx,0x110(%rbp)
	jo L_249455
L_250170:
	cmpq $0x1,%r15
	je L_482648
L_250171:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_250169
.p2align 0x4
L_482648:
L_250172:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_250173
L_250185:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x178,%rbp
	leaq (L_250186+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250186
.p2align 0x4
.long 0x3DED
L_250186:
	addq $0xFFFFFFFFFFFFFE88,%rbp
L_250173:
	movl 0x110(%rbp),%ecx
	testl %ecx,%ecx
	jz L_482650
L_250174:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x108(%rbp),%r14
	movq %r14,0x0(%r15)
L_250175:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_249455
L_250176:
	movl %r13d,0x0(%r15)
	movq %r14,0x180(%rbp)
	movq (globalObjptr+0x9D0)(%rip),%r15
	movq %r15,0x178(%rbp)
	movq 0x148(%rbp),%r15
	movq %r15,0x188(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x190(%rbp)
	movq 0x160(%rbp),%r15
	movq %r15,0x198(%rbp)
	addq $0x178,%rbp
	leaq (L_250177+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_482650:
L_250184:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_250175
.p2align 0x4
L_482653:
L_250187:
	movq $0x1,%r15
	xorl %ecx,%ecx
	jmp L_250168
.p2align 0x4
.long 0x3D8B
L_249602:
	addq $0xFFFFFFFFFFFFFE98,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_249603
L_249831:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x168,%rbp
	leaq (L_249832+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_249832
.p2align 0x4
.long 0x3DB0
L_249832:
	addq $0xFFFFFFFFFFFFFE98,%rbp
L_249603:
	movq (globalObjptr+0x1610)(%rip),%r15
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_249749
	jmp L_249605
.p2align 0x4
.long 0x3D8E
L_249652:
	addq $0xFFFFFFFFFFFFFE98,%rbp
	movq 0x168(%rbp),%r15
	movq %r15,0x160(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_249653
L_249801:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x170,%rbp
	leaq (L_249802+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_249802
.p2align 0x4
.long 0x3DAD
L_249802:
	addq $0xFFFFFFFFFFFFFE90,%rbp
L_249653:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x160(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x168(%rbp)
	addq $0x18,%r12
	movq 0x148(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_249654:
	addl 0x0(%r15),%ecx
	movl %ecx,0x148(%rbp)
	jo L_249455
L_249655:
	cmpq $0x1,%r14
	je L_482657
L_249656:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_249654
.p2align 0x4
L_482657:
L_249657:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_249658
L_249799:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x178,%rbp
	leaq (L_249800+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_249800
.p2align 0x4
.long 0x3DAF
L_249800:
	addq $0xFFFFFFFFFFFFFE88,%rbp
L_249658:
	movl 0x148(%rbp),%ecx
	testl %ecx,%ecx
	jz L_482658
L_249659:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x168(%rbp),%r14
	movq %r14,0x0(%r15)
L_249660:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x148(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x160(%rbp)
	addq $0x18,%r12
	movq 0x130(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq (globalObjptr+0x10628)(%rip),%r15
	movq %r15,0x170(%rbp)
	addq $0x170,%rbp
	leaq (L_249661+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_482658:
L_249798:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_249660
.p2align 0x4
.long 0x3DDF
L_250095:
	addq $0xFFFFFFFFFFFFFE60,%rbp
	movq 0x1A0(%rbp),%r15
	movq %r15,0x140(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_250096
L_250236:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x1A0,%rbp
	leaq (L_250237+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250237
.p2align 0x4
.long 0x3DF7
L_250237:
	addq $0xFFFFFFFFFFFFFE60,%rbp
L_250096:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x178(%rbp)
	addq $0x18,%r12
	movq 0x190(%rbp),%r15
	movq %r15,0x0(%r13)
	movq 0x140(%rbp),%r14
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_250097:
	addl 0x0(%r15),%ecx
	movl %ecx,0x140(%rbp)
	jo L_249455
L_250098:
	cmpq $0x1,%r14
	je L_482662
L_250099:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_250097
.p2align 0x4
L_482662:
L_250100:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_250101
L_250234:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x198,%rbp
	leaq (L_250235+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250235
.p2align 0x4
.long 0x3DF6
L_250235:
	addq $0xFFFFFFFFFFFFFE68,%rbp
L_250101:
	movq 0x178(%rbp),%r15
	movl 0x140(%rbp),%ecx
	jmp L_250102
.p2align 0x4
.long 0x3DE0
L_250113:
	addq $0xFFFFFFFFFFFFFE80,%rbp
	movq (globalObjptr+0x1610)(%rip),%r15
	movq (globalObjptr+0x1608)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_249749
	jmp L_250115
.p2align 0x4
.long 0x3DEA
L_250159:
	addq $0xFFFFFFFFFFFFFE88,%rbp
	movq 0x178(%rbp),%r15
	movq %r15,0x108(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_250160
L_250190:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x178,%rbp
	leaq (L_250191+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250191
.p2align 0x4
.long 0x3DEF
L_250191:
	addq $0xFFFFFFFFFFFFFE88,%rbp
L_250160:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x110(%rbp)
	addq $0x18,%r12
	movq 0x130(%rbp),%r15
	movq %r15,0x0(%r13)
	movq 0x108(%rbp),%r14
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_250161:
	addl 0x0(%r15),%ecx
	movl %ecx,0x108(%rbp)
	jo L_249455
L_250162:
	cmpq $0x1,%r14
	je L_482667
L_250163:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_250161
.p2align 0x4
L_482667:
L_250164:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_250165
L_250188:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x178,%rbp
	leaq (L_250189+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250189
.p2align 0x4
.long 0x3DEE
L_250189:
	addq $0xFFFFFFFFFFFFFE88,%rbp
L_250165:
	movq 0x110(%rbp),%r15
	movl 0x108(%rbp),%ecx
	jmp L_250166
.p2align 0x4
.long 0x3DEB
L_250177:
	addq $0xFFFFFFFFFFFFFE88,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_250178
L_250182:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x178,%rbp
	leaq (L_250183+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_250183
.p2align 0x4
.long 0x3DEC
L_250183:
	addq $0xFFFFFFFFFFFFFE88,%rbp
L_250178:
	movq (globalObjptr+0x1608)(%rip),%r15
	movq (globalObjptr+0x1610)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_249749
	jmp L_250180
.p2align 0x4
.long 0x3D91
L_249661:
	addq $0xFFFFFFFFFFFFFE90,%rbp
	movq 0x170(%rbp),%r15
	movq %r15,0x130(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_249662
L_249796:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x170,%rbp
	leaq (L_249797+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_249797
.p2align 0x4
.long 0x3DAD
L_249797:
	addq $0xFFFFFFFFFFFFFE90,%rbp
L_249662:
	movq 0x0(%rbp),%r15
	cmpq $0x1,%r15
	je L_482678
L_249663:
	movq 0x8(%r15),%r14
	movq %r14,0x168(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x170(%rbp)
	movq $0x1,0x178(%rbp)
.p2align 0x4,,0x7
L_249664:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_482677
.p2align 0x4,,0x7
L_249665:
	movq $0x1BD3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x170(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x178(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x168(%rbp),%r14
	cmpq $0x1,%r14
	je L_482673
L_249666:
	movq %r15,0x178(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x168(%rbp)
	movq %r15,0x170(%rbp)
	jmp L_249664
.p2align 0x4
L_482673:
L_249668:
	movq $0x143,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq %r15,0x0(%r14)
	movq 0xF8(%rbp),%r13
	movq %r13,0x8(%r14)
	cmpq $0x1,%r15
	je L_482676
L_249669:
	movq 0x0(%r15),%r11
	movq 0x0(%r11),%r10
	movq 0x0(%r13),%r15
	cmpq $0x1,%r10
	je L_482675
L_249670:
	movq 0x0(%r10),%r13
	cmpq $0x1,%r15
	je L_482674
L_249671:
	movq 0x8(%r15),%r11
	movq $0x1BBB,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r13,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r14,%r15
	movq %r10,%r14
L_249672:
	movq $0x145,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq %r13,0x170(%rbp)
	addq $0x18,%r12
	addq $0x170,%rbp
	leaq (L_249673+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_31
.p2align 0x4
L_482674:
L_249790:
	movq %r14,%r15
	movq %r10,%r14
	jmp L_249672
.p2align 0x4
L_482675:
L_249791:
	xchgq %r14,%r15
	jmp L_249672
.p2align 0x4
L_482676:
L_249792:
	movq 0x0(%r13),%r11
	movq %r14,%r15
	movq %r11,%r14
	jmp L_249672
.p2align 0x4
L_482677:
L_249793:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x188,%rbp
	leaq (L_249794+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_249794
.p2align 0x4
.long 0x3DAE
L_249794:
	addq $0xFFFFFFFFFFFFFE78,%rbp
	jmp L_249665
.p2align 0x4
L_482678:
L_249795:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_249668
.p2align 0x4
.long 0x3D97
L_249673:
	addq $0xFFFFFFFFFFFFFE90,%rbp
	movq 0x170(%rbp),%r15
	movq %r15,0xF8(%rbp)
	movl 0x178(%rbp),%r15d
	movl %r15d,0x154(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_249674
L_249788:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x170,%rbp
	leaq (L_249789+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_249789
.p2align 0x4
.long 0x3DAD
L_249789:
	addq $0xFFFFFFFFFFFFFE90,%rbp
L_249674:
	movq $0xC3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl 0x154(%rbp),%r14d
	movl %r14d,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0xF8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x168(%rbp)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x130(%rbp),%r15
	movq %r15,0x0(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_249675:
	addl 0x0(%r15),%ecx
	movl %ecx,0xF8(%rbp)
	jo L_249455
L_249676:
	cmpq $0x1,%r14
	je L_482680
L_249677:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_249675
.p2align 0x4
L_482680:
L_249678:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_249679
L_249786:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x178,%rbp
	leaq (L_249787+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_249787
.p2align 0x4
.long 0x3DAC
L_249787:
	addq $0xFFFFFFFFFFFFFE88,%rbp
L_249679:
	movl 0xF8(%rbp),%ecx
	testl %ecx,%ecx
	jz L_482681
L_249680:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x168(%rbp),%r14
	movq %r14,0x0(%r15)
L_249681:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x18,%r12
	movq 0x160(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0x168(%rbp)
	addq $0x168,%rbp
	leaq (L_249682+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3782
.p2align 0x4
L_482681:
L_249785:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_249681
.p2align 0x4
.long 0x3D98
L_249682:
	addq $0xFFFFFFFFFFFFFE98,%rbp
	movl 0x168(%rbp),%r15d
	movl %r15d,0xF8(%rbp)
	movq 0x170(%rbp),%r15
	movq %r15,0x130(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_249683
L_249783:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x168,%rbp
	leaq (L_249784+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_249784
.p2align 0x4
.long 0x3DAB
L_249784:
	addq $0xFFFFFFFFFFFFFE98,%rbp
L_249683:
	movl 0xF8(%rbp),%ecx
	testl %ecx,%ecx
	jz L_482687
L_249684:
	decl %ecx
	jo L_249455
L_249685:
	movq $0x1B67,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movl $0x1,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq 0x130(%rbp),%r14
	movq %r14,0x8(%r15)
L_249686:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq (globalObjptr+0x1608)(%rip),%r15
	movl 0x0(%r15),%r13d
	incl %r13d
	jo L_249455
L_249687:
	movl %r13d,0x0(%r15)
	movq %r14,0x168(%rbp)
	movq 0x148(%rbp),%r15
	movq %r15,0x170(%rbp)
	movq 0xA8(%rbp),%r15
	movq %r15,0x178(%rbp)
	movq (globalObjptr+0xE250)(%rip),%r15
	movq %r15,0x180(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0x188(%rbp)
	addq $0x168,%rbp
	leaq (L_249688+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp msg_0
.p2align 0x4
L_482687:
L_249782:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_249686
.p2align 0x4
.long 0x3D99
L_249688:
	addq $0xFFFFFFFFFFFFFE98,%rbp
	movq (globalObjptr+0x1608)(%rip),%r15
	movq (globalObjptr+0x1610)(%rip),%r14
	movl 0x0(%r14),%r13d
	cmpl %r13d,0x0(%r15)
	je L_249749
	jmp L_249690
