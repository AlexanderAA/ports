/* MLton 20130715 (built Mon Jun 13 11:54:01 AEST 2016 on ports.extensibl.com) */
/*   created this file on Mon Jun 13 12:08:56 2016. */
/* Do not edit this file. */
/* Flag settings:  */
/*    align: 8 */
/*    atMLtons: (mlton-compile, @MLton, --) */
/*    chunk: chunk per function */
/*    closureConvertGlobalize: true */
/*    closureConvertShrink: true */
/*    codegen: amd64 */
/*    contifyIntoMain: false */
/*    debug: false */
/*    defaultChar: char8 */
/*    defaultWideChar: widechar32 */
/*    defaultInt: int32 */
/*    defaultReal: real64 */
/*    defaultWord: word32 */
/*    diag passes: [] */
/*    drop passes: [] */
/*    elaborate allowConstant (default): false */
/*    elaborate allowConstant (enabled): true */
/*    elaborate allowFFI (default): false */
/*    elaborate allowFFI (enabled): true */
/*    elaborate allowPrim (default): false */
/*    elaborate allowPrim (enabled): true */
/*    elaborate allowOverload (default): false */
/*    elaborate allowOverload (enabled): true */
/*    elaborate allowRebindEquals (default): false */
/*    elaborate allowRebindEquals (enabled): true */
/*    elaborate deadCode (default): false */
/*    elaborate deadCode (enabled): true */
/*    elaborate forceUsed (default): false */
/*    elaborate forceUsed (enabled): true */
/*    elaborate ffiStr (default):  */
/*    elaborate ffiStr (enabled): true */
/*    elaborate nonexhaustiveExnMatch (default): default */
/*    elaborate nonexhaustiveExnMatch (enabled): true */
/*    elaborate nonexhaustiveMatch (default): warn */
/*    elaborate nonexhaustiveMatch (enabled): true */
/*    elaborate redundantMatch (default): warn */
/*    elaborate redundantMatch (enabled): true */
/*    elaborate resolveScope (default): strdec */
/*    elaborate resolveScope (enabled): true */
/*    elaborate sequenceNonUnit (default): warn */
/*    elaborate sequenceNonUnit (enabled): true */
/*    elaborate warnUnused (default): true */
/*    elaborate warnUnused (enabled): true */
/*    elaborate only: false */
/*    emit main: true */
/*    export header: None */
/*    exn history: false */
/*    generated output format: executable */
/*    gc check: Limit */
/*    indentation: 3 */
/*    inlineIntoMain: true */
/*    inlineLeafA: {loops = true, repeat = true, size = Some 20} */
/*    inlineLeafB: {loops = true, repeat = true, size = Some 40} */
/*    inlineNonRec: {small = 60, product = 320} */
/*    input file: mlton */
/*    keep CoreML: false */
/*    keep def use: true */
/*    keep dot: false */
/*    keep Machine: false */
/*    keep passes: [] */
/*    keep RSSA: false */
/*    keep SSA: false */
/*    keep SSA2: false */
/*    keep SXML: false */
/*    keep XML: false */
/*    extra_: false */
/*    lib dir: /usr/ports/pobj/mlton-20130715/mlton-on-20130715-release/build/lib */
/*    lib target dir: /usr/ports/pobj/mlton-20130715/mlton-on-20130715-release/build/lib/targets/self */
/*    loop passes: 1 */
/*    mark cards: true */
/*    max function size: 10000 */
/*    mlb path vars: [{var = MLTON_ROOT, path = $(LIB_MLTON_DIR)/sml}, {var = SML_LIB, path = $(LIB_MLTON_DIR)/sml}] */
/*    native commented: 0 */
/*    native live stack: false */
/*    native optimize: 1 */
/*    native move hoist: true */
/*    native copy prop: true */
/*    native copy prop cutoff: 1000 */
/*    native cutoff: 100 */
/*    native live transfer: 8 */
/*    native shuffle: true */
/*    native ieee fp: false */
/*    native split: Some 20000 */
/*    optimizationPasses: [<ssa2::default>, <ssa::default>, <sxml::default>, <xml::default>] */
/*    polyvariance: Some {hofo = true, rounds = 2, small = 30, product = 300} */
/*    prefer abs paths: false */
/*    prof passes: [] */
/*    profile: None */
/*    profile branch: false */
/*    profile C: [] */
/*    profile IL: ProfileSource */
/*    profile include/exclude: [(Seq [Star [.], Or [Seq [Seq [[$], [(], [S], [M], [L], [_], [L], [I], [B], [)]]]], Star [.]], false)] */
/*    profile raise: false */
/*    profile stack: false */
/*    profile val: false */
/*    show basis: None */
/*    show def-use: None */
/*    show types: true */
/*    target: self */
/*    target arch: AMD64 */
/*    target OS: OpenBSD */
/*    type check: false */
/*    verbosity: Pass */
/*    warn unrecognized annotation: true */
/*    warn deprecated features: true */
/*    zone cut depth: 100 */
.text
.p2align 0x4
.globl sideEffect_0
.hidden sideEffect_0
sideEffect_0:
L_76341:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_76342
L_76360:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_76361+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_76361
.p2align 0x4
.long 0x45F
L_76361:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_76342:
	movq 0x0(%rbp),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_76343+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_13
.p2align 0x4
.long 0x521
L_76343:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1444,%r15
	jne L_405545
L_76345:
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xEE5,%r15
	je L_405544
	cmpq $0xEE6,%r15
	je L_405540
	cmpq $0xEE7,%r15
	je L_405539
	cmpq $0xEE8,%r15
	je L_405538
	cmpq $0xEE9,%r15
	je L_405537
	cmpq $0xEEA,%r15
	je L_405536
L_76346:
	movq 0x0(%r13),%r15
	movq %r15,0x0(%rbp)
	jmp makeUnknown_2
.p2align 0x4
L_405536:
L_76359:
	movq 0x8(%r13),%r15
	movq %r15,0x0(%rbp)
	jmp makeUnknown_2
.p2align 0x4
L_405537:
L_76358:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405538:
L_76357:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405539:
L_76356:
	movq 0x0(%r13),%r15
	movq %r15,0x0(%rbp)
	jmp makeUnknown_2
.p2align 0x4
L_405540:
L_76348:
	movq 0x0(%r13),%r15
	movq %r15,0x10(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x18(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	je L_405541
L_76349:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405541:
L_76350:
	cmpl $0x0,0x18(%rbp)
	jl L_405543
L_76351:
	movl $0x0,0x1C(%rbp)
loop_909:
	movl 0x18(%rbp),%r15d
	cmpl %r15d,0x1C(%rbp)
	jl L_405542
L_76352:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405542:
L_76353:
	movslq 0x1C(%rbp),%r15
	movq 0x10(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x28(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_76354+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sideEffect_0
.p2align 0x4
L_405543:
L_76355:
	movq (globalObjptr+0x4F8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405544:
L_76347:
	movq 0x0(%r13),%r15
	movq %r15,0x0(%rbp)
	jmp makeUnknown_2
.p2align 0x4
L_405545:
L_76344:
	movq (globalObjptr+0x1500)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4F4
L_76354:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	incl 0x1C(%rbp)
	jmp loop_909
.text
.p2align 0x4
.globl makeUnknown_2
.hidden makeUnknown_2
makeUnknown_2:
loopS_8:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_76362
L_76385:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_76386+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_76386
.p2align 0x4
.long 0x45F
L_76386:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_76362:
	movq 0x0(%rbp),%r15
loop_910:
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_76363+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_13
.p2align 0x4
.long 0x521
L_76363:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_76364
L_76383:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_76384+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_76384
.p2align 0x4
.long 0x4E8
L_76384:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_76364:
	movq 0x10(%rbp),%r14
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0x1444,%r14
	jne L_405556
L_76366:
	movq 0x8(%r15),%r14
	movq 0x0(%r14),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xEE5,%r15
	je L_405555
	cmpq $0xEE6,%r15
	je L_405551
	cmpq $0xEE7,%r15
	je L_405550
	cmpq $0xEE8,%r15
	je L_405549
	cmpq $0xEE9,%r15
	je L_405548
	cmpq $0xEEA,%r15
	je L_405547
L_76367:
	movq 0x0(%r13),%r15
	jmp loop_910
.p2align 0x4
L_405547:
L_76381:
	movq 0x10(%r13),%r15
	movq %r15,0x20(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x10(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_76382+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp makeUnknown_2
.p2align 0x4
L_405548:
L_76380:
	movq 0x8(%r13),%r15
	movq 0x0(%r13),%r14
	movq $0x1081,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	movq %r13,0x0(%rbp)
	addq $0x18,%r12
	jmp makeUnknown_3
.p2align 0x4
L_405549:
L_76379:
	movq 0x10(%r13),%r15
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r11
	movq $0x108B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	movq %r11,0x10(%r13)
	movq %r13,0x0(%rbp)
	addq $0x20,%r12
	jmp makeDataUnknown_0
.p2align 0x4
L_405550:
L_76378:
	movq 0x0(%r13),%r15
	jmp loop_910
.p2align 0x4
L_405551:
L_76370:
	movq 0x0(%r13),%r15
	movq %r15,0x10(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x18(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r14
	je L_405552
L_76371:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405552:
L_76372:
	cmpl $0x0,0x18(%rbp)
	jl L_405554
L_76373:
	movl $0x0,0x1C(%rbp)
loop_911:
	movl 0x18(%rbp),%r15d
	cmpl %r15d,0x1C(%rbp)
	jl L_405553
L_76374:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405553:
L_76375:
	movslq 0x1C(%rbp),%r15
	movq 0x10(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x28(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_76376+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp makeUnknown_2
.p2align 0x4
L_405554:
L_76377:
	movq (globalObjptr+0x4F8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405555:
L_76368:
	movq 0x8(%r13),%r15
	movq %r15,0x20(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x10(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_76369+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp makeUnknown_2
.p2align 0x4
L_405556:
L_76365:
	movq (globalObjptr+0x1500)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4E5
L_76382:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x10(%rbp),%r15
	jmp loop_910
.p2align 0x4
.long 0x4F4
L_76376:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	incl 0x1C(%rbp)
	jmp loop_911
.p2align 0x4
.long 0x4E5
L_76369:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x10(%rbp),%r15
	jmp loop_910
.text
.p2align 0x4
.globl makeDataUnknown_0
.hidden makeDataUnknown_0
makeDataUnknown_0:
L_76387:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_76388
L_76419:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_76420+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_76420
.p2align 0x4
.long 0x45F
L_76420:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_76388:
	movq 0x8(%rbp),%r14
	movq 0x80(%r14),%r13
	movq %r13,0x10(%rbp)
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r13
	movq %r13,0x18(%rbp)
	movq 0x10(%r14),%r13
	movq %r13,0x20(%rbp)
	cmpq $0x1,0x0(%r15)
	je L_405560
doit_15:
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq $0x1,0x0(%r15)
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_405558
L_76390:
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,%r15
L_76391:
	movq %r15,0x38(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_76392+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp makeDataUnknown_0
.p2align 0x4
L_405558:
L_76395:
	movq 0x20(%rbp),%r14
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq $0x1,0x0(%r14)
	movq 0x18(%rbp),%r14
	movq 0x0(%r14),%r13
	cmpq $0x1,%r13
	je L_405559
L_76396:
	movq 0x8(%r13),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r13),%r13
	movq %r13,%r15
L_76397:
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (L_76398+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1441
.p2align 0x4
L_405559:
L_76411:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405560:
L_76417:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4E3
L_76392:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_76395
L_76393:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	jmp L_76391
.p2align 0x4
.long 0x4A5
L_76398:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x30(%rbp)
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_76400
L_76401:
	movq 0x20(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%ecx
	movslq %ecx,%r11
	cmpq %r11,%r14
	jne L_405567
L_76403:
	cmpl %r13d,%ecx
	jne L_76405
L_76406:
	cmpl $0x0,%r13d
	jl L_405565
L_76407:
	xorl %ecx,%ecx
loop_912:
	cmpl 0x30(%rbp),%ecx
	jnl L_405563
L_76412:
	movl %ecx,%r15d
	incl %r15d
	movl %r15d,0x34(%rbp)
	movslq %ecx,%r15
	movq 0x28(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x48(%rbp)
	movq 0x20(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x40(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x40,%rbp
	leaq (L_76413+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp coerce_3
.p2align 0x4
L_405563:
L_76408:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_76411
L_76409:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	jmp L_76397
.p2align 0x4
L_405565:
L_76405:
	movq (globalObjptr+0xCF8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405567:
L_76400:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xF79
L_76413:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movl 0x34(%rbp),%ecx
	jmp loop_912
.text
.p2align 0x4
.globl x_1441
.hidden x_1441
x_1441:
L_76421:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_76422
L_76480:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_76481+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_76481
.p2align 0x4
.long 0x45F
L_76481:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_76422:
	movq 0x8(%rbp),%r10
	movq 0x8(%r10),%r11
	movq 0x0(%r10),%r13
	movq 0x0(%rbp),%r10
	movq 0x10(%r10),%r15
	movq (globalObjptr+0x1068)(%rip),%r10
	movq 0x0(%r10),%r14
	incq %r14
	jo L_405579
L_76424:
	movq %r14,0x0(%r10)
	movq 0x0(%r15),%r10
	cmpq $0x1,%r10
	je L_405578
L_76425:
	movq 0x8(%r10),%r14
	movq 0x0(%r10),%r10
	xorl %ecx,%ecx
	movq %r10,%r15
.p2align 0x4,,0x7
L_76427:
	movq %r15,%r10
	andq $0x3,%r10
	jnz L_405577
L_76471:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r10
	shrq $0x1,%r10
	cmpq $0xCFE,%r10
	jne L_405576
L_76472:
	movq 0x8(%r15),%r10
	cmpq 0x0(%r15),%r11
	movq %r11,(localObjptr+0x0)(%rip)
	je L_405573
L_76428:
	incl %ecx
	jo L_405572
L_76430:
	cmpq $0x1,%r14
	je L_405569
L_76431:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq (localObjptr+0x0)(%rip),%r11
	jmp L_76427
.p2align 0x4
L_405569:
L_76432:
L_76433:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_405571
L_76435:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl x_216
L_76470:
	movl %ecx,0x0(%r15)
x_216:
	movq 0x0(%r13),%r15
	movq 0x0(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x8(%rbp)
	movq 0x18(%r14),%r11
	movq 0x0(%r13),%r14
	cmpq $0x1,%r14
	jne L_405570
L_76468:
	movq %r11,0x18(%rbp)
	movq %r15,0x20(%rbp)
	addq $0x18,%rbp
	leaq (L_76469+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unique_0
.p2align 0x4
L_405570:
L_76437:
	movq %r14,%r15
L_76438:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_76439+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_405571:
L_76434:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405572:
L_76429:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405573:
L_76474:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_76434
L_76475:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_405574
L_76478:
	movl %ecx,0x0(%r14)
	movq %r10,%r15
L_76477:
	movq 0x0(%r15),%r14
	movq %r14,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405574:
L_76476:
	movq %r10,%r15
	jmp L_76477
.p2align 0x4
L_405576:
	movq %r11,(localObjptr+0x0)(%rip)
	jmp L_76428
.p2align 0x4
L_405577:
	movq %r11,(localObjptr+0x0)(%rip)
	jmp L_76428
.p2align 0x4
L_405578:
L_76479:
	xorl %ecx,%ecx
	jmp L_76433
.p2align 0x4
L_405579:
L_76423:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x521
L_76469:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x8(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp L_76438
.p2align 0x4
.long 0x1
L_76439:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_76440+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4AF
L_76440:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xEB80)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_76441+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5AF
L_76441:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_76442+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x51E
L_76442:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_76443
L_76466:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_76467+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_76467
.p2align 0x4
.long 0x4AE
L_76467:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_76443:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_76444:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_76429
L_76445:
	cmpq $0x1,%r14
	je L_405581
L_76446:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_76444
.p2align 0x4
L_405581:
L_76447:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_76448
L_76464:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_76465+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_76465
.p2align 0x4
.long 0x4E6
L_76465:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_76448:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_405582
L_76449:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
toString_84:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	addq $0x8,%rbp
	leaq (rev_84+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_405582:
L_76463:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_84
.p2align 0x4
.long 0x1
rev_84:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_405588
L_76450:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_76451:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_405587
.p2align 0x4,,0x7
L_76452:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_405586
L_76453:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_76451
.p2align 0x4
L_405586:
L_76455:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_76456+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_405587:
L_76460:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_76461+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_76461
.p2align 0x4
.long 0x45B
L_76461:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_76452
.p2align 0x4
L_405588:
L_76462:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_76455
.p2align 0x4
.long 0x1
L_76456:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_76457
L_76458:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_76459+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_76459
.p2align 0x4
.long 0x451
L_76459:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_76457:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl coerce_3
.hidden coerce_3
coerce_3:
L_76482:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_76483
L_76580:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_76581+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_76581
.p2align 0x4
.long 0x45B
L_76581:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_76483:
	movq 0x0(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x20(%rbp)
loop_913:
	movq 0x10(%rbp),%r15
	movq 0x48(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x40(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_76484+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_13
.p2align 0x4
.long 0x4A8
L_76484:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_76485+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_13
.p2align 0x4
.long 0x8BA
L_76485:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	cmpq 0x40(%rbp),%r15
	movq %r15,0x48(%rbp)
	je L_405591
L_76486:
	movq 0x20(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_76487+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_13
.p2align 0x4
L_405591:
L_76579:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4A8
L_76487:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r15,0x40(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1444,%r15
	jne L_405592
L_76489:
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x40(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_76490+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_13
.p2align 0x4
L_405592:
L_76488:
	movq (globalObjptr+0x1500)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x8BA
L_76490:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_76491
L_76577:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_76578+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_76578
.p2align 0x4
.long 0x859
L_76578:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_76491:
	movq 0x48(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1444,%r15
	jne L_76488
L_76492:
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r13
	movq 0x40(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xEE5,%r14
	je L_405617
	cmpq $0xEE6,%r14
	je L_405611
	cmpq $0xEE7,%r14
	je L_405607
	cmpq $0xEE8,%r14
	je L_405604
	cmpq $0xEE9,%r14
	je L_405597
	cmpq $0xEEA,%r14
	je L_405593
L_76493:
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xEE4,%r15
	jne x_1443
L_76520:
	movq %r14,0x8(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x0(%rbp)
	jmp unify_6
.p2align 0x4
x_1443:
x_217:
	movq 0x20(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (toString_85+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_18
.p2align 0x4
L_405593:
L_76567:
	movq 0x10(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xEEA,%r15
	jne x_217
L_76568:
	movq 0x10(%r13),%r15
	movq %r15,0x18(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x20(%rbp)
	movq 0x0(%r13),%r15
	movq 0x0(%r14),%r13
	movq 0x8(%r14),%r11
	cmpq 0x0(%r15),%r13
	je L_76572
L_76569:
	movq 0x0(%r13),%r14
	cmpq $0x1,%r14
	je L_405595
	cmpq $0x2,%r14
	je L_405594
L_76570:
	movq %r14,0x48(%rbp)
	movq 0x0(%r11),%r14
	movq $0x27CD,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	movq %r15,0x40(%rbp)
	addq $0x18,%r12
	movq %r11,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r14
	movb $0x1,0x0(%r14,%r15,1)
	movq %r13,0x0(%r11)
	addq $0x40,%rbp
	leaq (L_76571+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3842
.p2align 0x4
L_405594:
L_76575:
	movq 0x0(%r11),%r14
	movq $0x27CD,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq %r11,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r14
	movb $0x1,0x0(%r14,%r15,1)
	movq %r13,0x0(%r11)
L_76572:
	movq 0x18(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x40,%rbp
	leaq (L_76573+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp coerce_3
.p2align 0x4
L_405595:
L_76574:
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_76571+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp makeUnknown_1
.p2align 0x4
L_405597:
L_76553:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r11
	movq 0x0(%r14),%r15
L_76554:
	movq %r15,%r10
	andq $0x3,%r10
	jnz L_405603
L_76562:
	movq 0x0(%r15),%r10
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xEE5,%r15
	je L_405602
	cmpq $0xEE9,%r15
	je L_405598
	jmp x_217
.p2align 0x4
L_405598:
L_76566:
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	xchgq %r13,%r15
	xchgq %r13,%r14
x_218:
	movq $0x1081,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r14,0x8(%r10)
	addq $0x18,%r12
	movq %r15,0x0(%r10)
	movq 0x30(%rbp),%r14
	movq 0x10(%r14),%r9
	movq 0x10(%r9),%r8
	cmpq %r13,%r15
	je L_405601
L_76557:
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_405600
	cmpq $0x2,%r15
	je L_405599
L_76558:
	movq %r8,0x8(%rbp)
	movq %r15,0x10(%rbp)
	movq 0x0(%r11),%r15
	movq $0x27C9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r10,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r10,0x0(%rbp)
	addq $0x18,%r12
	movq %r11,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r14,0x0(%r11)
	jmp loop_3843
.p2align 0x4
L_405599:
L_76560:
	movq 0x0(%r11),%r15
	movq $0x27C9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r10,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq %r11,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r14,0x0(%r11)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405600:
L_76559:
	movq %r10,0x0(%rbp)
	jmp makeUnknown_3
.p2align 0x4
L_405601:
L_76561:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405602:
L_76563:
	movq %r10,0x38(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x18(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xAD58)(%rip),%r15
	movq %r15,0x30(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x30,%rbp
	leaq (L_76564+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp constToEltLength_0
.p2align 0x4
L_405603:
L_76555:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xEE9,%r15
	jne x_217
L_76556:
	movq 0x0(%r13),%r15
	movq 0x8(%r13),%r13
	xchgq %r13,%r15
	xchgq %r13,%r14
	jmp x_218
.p2align 0x4
L_405604:
L_76548:
	movq 0x10(%r15),%r14
	movq 0x0(%r15),%r11
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xEE8,%r15
	jne x_217
L_76549:
	movq 0x10(%r13),%r15
	movq 0x8(%r13),%r10
	movq 0x0(%r13),%r9
	movq $0x108B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x0(%r13)
	movq %r10,0x8(%r13)
	movq %r9,0x10(%r13)
	addq $0x20,%r12
	movq 0x0(%r14),%r15
	cmpq $0x1,%r15
	je L_405606
	cmpq $0x2,%r15
	je L_405605
L_76550:
	movq 0x10(%r15),%r14
	movq 0x8(%r15),%r10
	movq 0x0(%r15),%r9
	movq 0x0(%r11),%r15
	movq $0x27C5,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r13,0x0(%r8)
	movq %r15,0x8(%r8)
	movq %r13,0x0(%rbp)
	movq %r13,0x28(%rbp)
	addq $0x18,%r12
	movq %r11,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r8,0x0(%r11)
	movq $0x1DD7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r9,0x0(%r15)
	movq %r14,0x10(%r15)
	movq %r14,0x8(%rbp)
	movq %r9,0x18(%rbp)
	addq $0x20,%r12
	movq %r10,0x8(%r15)
	movq %r15,0x30(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq %r10,0x10(%rbp)
	jmp loop_3844
.p2align 0x4
L_405605:
L_76552:
	movq 0x0(%r11),%r15
	movq $0x27C5,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq %r11,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r14,0x0(%r11)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405606:
L_76551:
	movq %r13,0x0(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp makeDataUnknown_0
.p2align 0x4
L_405607:
L_76539:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r11
	movq %r11,0x28(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xEE7,%r15
	jne x_217
L_76540:
	movq 0x8(%r13),%r15
	movq 0x0(%r13),%r11
	movq %r11,0x18(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,%r11
	movq 0x8(%r14),%r13
	cmpq %r11,0x0(%r15)
	je L_76544
L_76541:
	movq 0x0(%r11),%r14
	cmpq $0x1,%r14
	je L_405609
	cmpq $0x2,%r14
	je L_405608
L_76542:
	movq 0x8(%r14),%r11
	movq %r11,0x40(%rbp)
	movq 0x0(%r14),%r11
	movq %r11,0x48(%rbp)
	movq 0x0(%r13),%r14
	movq $0x27CF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r14,0x8(%r11)
	movq %r15,0x38(%rbp)
	addq $0x18,%r12
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r14
	movb $0x1,0x0(%r14,%r15,1)
	movq %r11,0x0(%r13)
	addq $0x38,%rbp
	leaq (L_76543+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3841
.p2align 0x4
L_405608:
L_76546:
	movq 0x0(%r13),%r14
	movq $0x27CF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r14,0x8(%r11)
	addq $0x18,%r12
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r14
	movb $0x1,0x0(%r14,%r15,1)
	movq %r11,0x0(%r13)
L_76544:
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp unify_6
.p2align 0x4
L_405609:
L_76545:
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_76543+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp makeUnknown_0
.p2align 0x4
L_405611:
L_76524:
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xEE6,%r15
	jne x_217
L_76525:
	movq 0x0(%r13),%r15
	movq %r15,0x18(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movl %r11d,0x20(%rbp)
	movslq %r11d,%r10
	cmpq %r10,%r13
	jne L_76527
L_76528:
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%ecx
	movslq %ecx,%r13
	cmpq %r13,%r14
	jne L_405615
L_76530:
	cmpl %r11d,%ecx
	jne L_76532
L_76533:
	cmpl $0x0,%r11d
	jl L_405613
L_76534:
	xorl %ecx,%ecx
loop_914:
	cmpl 0x20(%rbp),%ecx
	jnl L_405612
L_76536:
	movl %ecx,%r15d
	incl %r15d
	movl %r15d,0x24(%rbp)
	movslq %ecx,%r15
	movq 0x28(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x40(%rbp)
	movq 0x18(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x38(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x38,%rbp
	leaq (L_76537+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp coerce_3
.p2align 0x4
L_405612:
L_76535:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405613:
L_76532:
	movq (globalObjptr+0xCF8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405615:
L_76527:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405617:
L_76521:
	movq 0x8(%r15),%r14
	movq 0x0(%r15),%r11
	movq %r11,0x28(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0xEE5,%r15
	jne x_217
L_76522:
	movq %r14,0x40(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x38(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x18(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x38,%rbp
	leaq (L_76523+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp coerce_3
.p2align 0x4
.long 0x603
toString_85:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq $0x1,0x48(%rbp)
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (rev_85+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x4A7
L_76571:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_76572
.p2align 0x4
.long 0xA9E
L_76573:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp unify_6
.p2align 0x4
.long 0x8A9
L_76564:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x20(%rbp),%r14
	movq %r14,0x38(%rbp)
	movq %r15,0x40(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x38,%rbp
	leaq (L_76565+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp coerce_3
.p2align 0x4
.long 0x4E2
L_76543:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_76544
.p2align 0x4
.long 0x4E2
L_76537:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movl 0x24(%rbp),%ecx
	jmp loop_914
.p2align 0x4
.long 0x4E2
L_76523:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	jmp loop_913
.p2align 0x4
.long 0x603
rev_85:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq $0x1,%r15
	je L_405622
L_76494:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x20(%rbp)
	movq %r14,0x28(%rbp)
	movq $0x1,0x30(%rbp)
.p2align 0x4,,0x7
L_76495:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_405621
.p2align 0x4,,0x7
L_76496:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x30(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r14
	cmpq $0x1,%r14
	je L_405620
L_76497:
	movq %r15,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x28(%rbp)
	jmp L_76495
.p2align 0x4
L_405620:
L_76499:
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_76500+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_405621:
L_76517:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_76518+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_76518
.p2align 0x4
.long 0x5E7
L_76518:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_76496
.p2align 0x4
L_405622:
L_76519:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_76499
.p2align 0x4
.long 0x4E2
L_76565:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	jmp loop_913
.p2align 0x4
.long 0x603
L_76500:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (toString_86+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp layout_18
.p2align 0x4
.long 0x459
toString_86:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq $0x1,0x30(%rbp)
	movq %r15,0x38(%rbp)
	addq $0x30,%rbp
	leaq (rev_86+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
.long 0x459
rev_86:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq $0x1,%r15
	je L_405625
L_76501:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x28(%rbp)
	movq %r14,0x30(%rbp)
	movq $0x1,0x38(%rbp)
.p2align 0x4,,0x7
L_76502:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_405624
.p2align 0x4,,0x7
L_76503:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_405623
L_76504:
	movq %r15,0x38(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	movq %r15,0x30(%rbp)
	jmp L_76502
.p2align 0x4
L_405623:
L_76506:
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_76507+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_405624:
L_76514:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_76515+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_76515
.p2align 0x4
.long 0x5EE
L_76515:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_76503
.p2align 0x4
L_405625:
L_76516:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_76506
.p2align 0x4
.long 0x459
L_76507:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_76508
L_76512:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_76513+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_76513
.p2align 0x4
.long 0x508
L_76513:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_76508:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xF050)(%rip),%r15
	movq %r15,0x0(%r14)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xF058)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_162+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x1
bug_162:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_76509
L_76510:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_76511+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_76511
.p2align 0x4
.long 0x451
L_76511:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_76509:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl unify_6
.hidden unify_6
unify_6:
L_76582:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_76583
L_76729:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_76730+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_76730
.p2align 0x4
.long 0x45B
L_76730:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_76583:
	movq 0x0(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x20(%rbp)
loop_915:
	movq 0x10(%rbp),%r15
	movq 0x68(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_76584+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_13
.p2align 0x4
.long 0x4A6
L_76584:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_76585+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_13
.p2align 0x4
.long 0x4A7
L_76585:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	cmpq %r15,0x30(%rbp)
	movq %r15,0x38(%rbp)
	je L_405629
L_76586:
	movq 0x20(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_76587+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_13
.p2align 0x4
L_405629:
L_76728:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4A6
L_76587:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r15,0x30(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1444,%r15
	jne L_405630
L_76589:
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x30(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_76590+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_13
.p2align 0x4
L_405630:
L_76588:
	movq (globalObjptr+0x1500)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4A7
L_76590:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r15,0x38(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1444,%r15
	jne L_76588
L_76591:
	movq 0x8(%r14),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x38(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_76592+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_13
.p2align 0x4
.long 0xAA1
L_76592:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_76593+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_13
.p2align 0x4
.long 0x1046
L_76593:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_76594
L_76726:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_76727+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_76727
.p2align 0x4
.long 0x4B0
L_76727:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_76594:
	movq 0x18(%rbp),%r14
	movq 0x20(%rbp),%r13
	cmpq %r13,%r14
	je L_76601
L_76595:
	movq 0x0(%r13),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r11
	shrq $0x1,%r11
	cmpq $0x1444,%r11
	jne L_76596
L_76597:
	movl 0x0(%r15),%r11d
	movq 0x0(%r14),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r10
	shrq $0x1,%r10
	cmpq $0x1444,%r10
	jne L_76596
L_76598:
	movl 0x0(%r15),%r10d
	cmpl %r10d,%r11d
	jl L_405682
L_76599:
	movq $0x288B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r13,0x0(%r15)
	movq %r14,%r9
	shrq $0x8,%r9
	movq (gcState+0x3C8)(%rip),%r8
	movb $0x1,0x0(%r8,%r9,1)
	movq %r15,0x0(%r14)
	cmpl %r10d,%r11d
	jne L_405675
L_76704:
	movq 0x0(%r13),%r14
	movq %r14,%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r11
	movq %r11,%r10
	shrq $0x1,%r10
	cmpq $0x1444,%r10
	jne L_405674
L_76705:
	movl 0x0(%r15),%r11d
	incl %r11d
	jo L_405673
L_76707:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1444,%r15
	jne L_405672
L_76709:
	movq 0x8(%r14),%r15
	movq $0x2889,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %r11d,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r13,%r15
	shrq $0x8,%r15
	movb $0x1,0x0(%r8,%r15,1)
	movq %r14,0x0(%r13)
	movq 0x30(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xEE5,%r15
	je L_405670
	cmpq $0xEE6,%r15
	je L_405663
	cmpq $0xEE7,%r15
	je L_405655
	cmpq $0xEE8,%r15
	je L_405649
	cmpq $0xEE9,%r15
	je L_405641
	cmpq $0xEEA,%r15
	je L_405633
L_76710:
	movq 0x0(%r14),%r15
L_76603:
	movq 0x38(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xEE4,%r13
	jne L_405632
L_76605:
	movq %r15,0x20(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x18(%rbp)
	jmp loop_915
.p2align 0x4
L_405632:
L_76604:
	movq (globalObjptr+0x1F90)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405633:
L_76716:
	movq 0x10(%r14),%r15
	movq %r15,0x18(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x20(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x28(%rbp)
L_76684:
	movq 0x38(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xEEA,%r14
	jne L_76604
L_76685:
	movq 0x10(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r11
	movq 0x0(%r14),%r15
	movq %r15,0x50(%rbp)
	cmpq %r15,%r13
	sete %al
	movzbl %al,%eax
	movl %eax,0x58(%rbp)
	je L_76690
L_76686:
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_405638
	cmpq $0x2,%r15
	je L_405634
L_76687:
	movq %r15,0x70(%rbp)
	movq 0x0(%r11),%r15
	movq $0x27CD,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq %r14,0x0(%r13)
	movq %r11,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r15,1)
	movq %r13,0x0(%r11)
	movq %r14,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_76688+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3842
.p2align 0x4
L_405634:
L_76702:
	movq 0x0(%r11),%r15
	movq $0x27CD,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq %r14,0x0(%r13)
	movq %r11,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r14
	movb $0x1,0x0(%r14,%r15,1)
	movq %r13,0x0(%r11)
L_76690:
	movq 0x48(%rbp),%r15
	movq 0x8(%r15),%r14
	movl 0x58(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_76694
L_76691:
	movq 0x50(%rbp),%r15
	movq 0x0(%r15),%r13
	cmpq $0x1,%r13
	je L_405636
	cmpq $0x2,%r13
	je L_405635
L_76692:
	movq %r13,0x58(%rbp)
	movq 0x0(%r14),%r15
	movq $0x27CD,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r13,0x0(%r14)
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_76693+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3842
.p2align 0x4
L_405635:
L_76697:
	movq 0x0(%r14),%r15
	movq $0x27CD,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
L_76694:
	movq 0x30(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x50,%rbp
	leaq (L_76695+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unify_6
.p2align 0x4
L_405636:
L_76696:
	movq 0x28(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_76693+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp makeUnknown_1
.p2align 0x4
L_405638:
L_76701:
	movq %r14,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_76688+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp makeUnknown_1
.p2align 0x4
L_405641:
L_76715:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r15
	movq %r13,%r14
L_76661:
	movq $0x1081,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x30(%rbp)
	addq $0x18,%r12
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	movq 0x38(%rbp),%r13
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xEE9,%r11
	jne L_76604
L_76662:
	movq 0x8(%r13),%r11
	movq %r11,0x40(%rbp)
	movq 0x0(%r13),%r10
	movq %r10,0x48(%rbp)
	movq $0x1081,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x18,%r12
	movq %r11,0x0(%r13)
	movq %r10,0x8(%r13)
	movq 0x28(%rbp),%r10
	movq 0x10(%r10),%r9
	movq 0x10(%r9),%r8
	movq %r8,0x50(%rbp)
	cmpq %r11,%r14
	sete %al
	movzbl %al,%eax
	movl %eax,0x58(%rbp)
	je L_405646
L_76663:
	movq 0x0(%r14),%r11
	cmpq $0x1,%r11
	je L_405645
	cmpq $0x2,%r11
	je L_405642
L_76664:
	movq %r11,0x78(%rbp)
	movq 0x0(%r15),%r14
	movq $0x27C9,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r14,0x8(%r11)
	movq %r13,0x68(%rbp)
	addq $0x18,%r12
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq %r11,0x0(%r15)
	movq %r8,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_76665+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3843
.p2align 0x4
L_405642:
L_76681:
	movq 0x0(%r15),%r14
	movq $0x27C9,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r13,0x0(%r11)
	movq %r14,0x8(%r11)
	addq $0x18,%r12
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq %r11,0x0(%r15)
L_76669:
	movq 0x40(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_405644
	cmpq $0x2,%r14
	je L_405643
L_76670:
	movq %r14,0x10(%rbp)
	movq 0x48(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x27C9,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r13,0x0(%r15)
	movq %r14,0x0(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp loop_3843
.p2align 0x4
L_405643:
L_76672:
	movq 0x48(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x27C9,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x0(%r15)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405644:
L_76671:
	movq 0x30(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp makeUnknown_3
.p2align 0x4
L_405645:
L_76676:
	movq %r13,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_76677+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp makeUnknown_3
.p2align 0x4
L_405646:
L_76667:
	movl 0x58(%rbp),%r15d
	testl %r15d,%r15d
	jz L_76669
L_76673:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405649:
L_76714:
	movq 0x10(%r14),%r13
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r11
	movq %r11,%r14
L_76647:
	movq $0x108B,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,0x18(%rbp)
	movq %r15,0x8(%r11)
	addq $0x20,%r12
	movq %r13,0x0(%r11)
	movq %r14,0x10(%r11)
	movq 0x38(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r11
	shrq $0x1,%r11
	cmpq $0xEE8,%r11
	jne L_76604
L_76648:
	movq 0x10(%r15),%r11
	movq %r11,0x20(%rbp)
	movq 0x8(%r15),%r10
	movq 0x0(%r15),%r9
	movq %r9,0x28(%rbp)
	movq $0x108B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r10,0x8(%r15)
	addq $0x20,%r12
	movq %r11,0x0(%r15)
	movq %r9,0x10(%r15)
	movq 0x0(%r13),%r11
	cmpq $0x1,%r11
	je L_405653
	cmpq $0x2,%r11
	je L_405650
L_76649:
	movq 0x10(%r11),%r13
	movq 0x8(%r11),%r10
	movq 0x0(%r11),%r9
	movq 0x0(%r14),%r11
	movq $0x27C5,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r15,0x0(%r8)
	movq %r11,0x8(%r8)
	movq %r15,0x38(%rbp)
	movq %r15,0x60(%rbp)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r8,0x0(%r14)
	movq $0x1DD7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r9,0x0(%r15)
	movq %r10,0x8(%r15)
	movq %r13,0x10(%r15)
	movq %r13,0x40(%rbp)
	movq %r10,0x48(%rbp)
	movq %r9,0x50(%rbp)
	movq %r15,0x68(%rbp)
	addq $0x20,%r12
	movq 0x10(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x38,%rbp
	leaq (L_76650+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3844
.p2align 0x4
L_405650:
L_76659:
	movq 0x0(%r14),%r13
	movq $0x27C5,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r15,1)
	movq %r11,0x0(%r14)
L_76652:
	movq 0x20(%rbp),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_405652
	cmpq $0x2,%r14
	je L_405651
L_76653:
	movq 0x10(%r14),%r15
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq 0x28(%rbp),%r14
	movq 0x0(%r14),%r10
	movq $0x27C5,0x0(%r12)
	movq %r12,%r9
	addq $0x8,%r9
	movq %r10,0x8(%r9)
	addq $0x18,%r12
	movq 0x18(%rbp),%r10
	movq %r10,0x0(%r9)
	movq %r14,%r8
	shrq $0x8,%r8
	movq (gcState+0x3C8)(%rip),%rsp
	movb $0x1,0x0(%rsp,%r8,1)
	movq %r9,0x0(%r14)
	movq $0x1DD7,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x10(%r14)
	movq %r15,0x8(%rbp)
	addq $0x20,%r12
	movq %r11,0x0(%r14)
	movq %r13,0x8(%r14)
	movq %r14,0x30(%rbp)
	movq %r10,0x0(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq %r13,0x10(%rbp)
	movq %r10,0x28(%rbp)
	movq %r11,0x18(%rbp)
	jmp loop_3844
.p2align 0x4
L_405651:
L_76655:
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r14
	movq $0x27C5,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x0(%r13)
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r13,0x0(%r15)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405652:
L_76654:
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp makeDataUnknown_0
.p2align 0x4
L_405653:
L_76658:
	movq %r15,0x38(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x38,%rbp
	leaq (L_76650+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp makeDataUnknown_0
.p2align 0x4
L_405655:
L_76713:
	movq 0x8(%r14),%r15
	movq %r15,0x18(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x20(%rbp)
L_76627:
	movq 0x38(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xEE7,%r14
	jne L_76604
L_76628:
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x30(%rbp)
	movq 0x18(%rbp),%r15
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r11
	movq 0x0(%r14),%r15
	movq %r15,0x40(%rbp)
	cmpq %r15,%r13
	sete %al
	movzbl %al,%eax
	movl %eax,0x48(%rbp)
	je L_76633
L_76629:
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_405660
	cmpq $0x2,%r15
	je L_405656
L_76630:
	movq 0x8(%r15),%r13
	movq %r13,0x60(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x68(%rbp)
	movq 0x0(%r11),%r15
	movq $0x27CF,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq %r14,0x0(%r13)
	movq %r11,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r15,1)
	movq %r13,0x0(%r11)
	movq %r14,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_76631+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3841
.p2align 0x4
L_405656:
L_76644:
	movq 0x0(%r11),%r15
	movq $0x27CF,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq %r14,0x0(%r13)
	movq %r11,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r14
	movb $0x1,0x0(%r14,%r15,1)
	movq %r13,0x0(%r11)
L_76633:
	movq 0x28(%rbp),%r15
	movq 0x8(%r15),%r14
	movl 0x48(%rbp),%r15d
	testl %r15d,%r15d
	jnz L_76637
L_76634:
	movq 0x40(%rbp),%r15
	movq 0x0(%r15),%r13
	cmpq $0x1,%r13
	je L_405658
	cmpq $0x2,%r13
	je L_405657
L_76635:
	movq 0x8(%r13),%r15
	movq %r15,0x48(%rbp)
	movq 0x0(%r13),%r15
	movq %r15,0x50(%rbp)
	movq 0x0(%r14),%r15
	movq $0x27CF,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r13,0x0(%r14)
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_76636+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3841
.p2align 0x4
L_405657:
L_76639:
	movq 0x0(%r14),%r15
	movq $0x27CF,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x18(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r13,0x0(%r14)
L_76637:
	movq 0x30(%rbp),%r15
	movq %r15,0x18(%rbp)
	jmp loop_915
.p2align 0x4
L_405658:
L_76638:
	movq 0x18(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_76636+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp makeUnknown_0
.p2align 0x4
L_405660:
L_76643:
	movq %r14,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_76631+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp makeUnknown_0
.p2align 0x4
L_405663:
L_76712:
	movq 0x0(%r14),%r15
	movq %r15,0x18(%rbp)
L_76611:
	movq 0x38(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r14
	shrq $0x1,%r14
	cmpq $0xEE6,%r14
	jne L_76604
L_76612:
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x18(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r13
	movl %r13d,%r11d
	movl %r11d,0x28(%rbp)
	movslq %r11d,%r10
	cmpq %r13,%r10
	jne L_76614
L_76615:
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%ecx
	movslq %ecx,%r13
	cmpq %r13,%r15
	jne L_405667
L_76617:
	cmpl %ecx,%r11d
	jne L_76619
L_76620:
	cmpl $0x0,%r11d
	jl L_405665
L_76621:
	xorl %ecx,%ecx
loop_916:
	cmpl 0x28(%rbp),%ecx
	jnl L_405664
L_76623:
	movl %ecx,%r15d
	incl %r15d
	movl %r15d,0x2C(%rbp)
	movslq %ecx,%r15
	movq 0x18(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x40(%rbp)
	movq 0x20(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x38(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x38,%rbp
	leaq (L_76624+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unify_6
.p2align 0x4
L_405664:
L_76622:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405665:
L_76619:
	movq (globalObjptr+0xCF8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405667:
L_76614:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405670:
L_76711:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq %r13,0x18(%rbp)
L_76607:
	movq 0x38(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xEE5,%r13
	jne L_76604
L_76608:
	movq 0x8(%r14),%r13
	movq %r13,0x30(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x38(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x30,%rbp
	leaq (L_76609+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unify_6
.p2align 0x4
L_405672:
L_76708:
	movq (globalObjptr+0x1508)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405673:
L_76706:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405674:
L_76596:
	movq (globalObjptr+0x1688)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405675:
L_76601:
	movq 0x30(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xEE5,%r15
	je L_405681
	cmpq $0xEE6,%r15
	je L_405680
	cmpq $0xEE7,%r15
	je L_405679
	cmpq $0xEE8,%r15
	je L_405678
	cmpq $0xEE9,%r15
	je L_405677
	cmpq $0xEEA,%r15
	je L_405676
L_76602:
	movq 0x0(%r14),%r15
	jmp L_76603
.p2align 0x4
L_405676:
L_76683:
	movq 0x10(%r14),%r15
	movq %r15,0x18(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x20(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x28(%rbp)
	jmp L_76684
.p2align 0x4
L_405677:
L_76660:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r15
	movq %r13,%r14
	jmp L_76661
.p2align 0x4
L_405678:
L_76646:
	movq 0x10(%r14),%r13
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r11
	movq %r11,%r14
	jmp L_76647
.p2align 0x4
L_405679:
L_76626:
	movq 0x8(%r14),%r15
	movq %r15,0x18(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x20(%rbp)
	jmp L_76627
.p2align 0x4
L_405680:
L_76610:
	movq 0x0(%r14),%r15
	movq %r15,0x18(%rbp)
	jmp L_76611
.p2align 0x4
L_405681:
L_76606:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq %r13,0x18(%rbp)
	jmp L_76607
.p2align 0x4
L_405682:
L_76717:
	movq $0x288B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r14,0x0(%r15)
	movq %r13,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq %r15,0x0(%r13)
	movq 0x30(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xEE5,%r15
	je L_405688
	cmpq $0xEE6,%r15
	je L_405687
	cmpq $0xEE7,%r15
	je L_405686
	cmpq $0xEE8,%r15
	je L_405685
	cmpq $0xEE9,%r15
	je L_405684
	cmpq $0xEEA,%r15
	je L_405683
L_76718:
	movq 0x0(%r14),%r15
	jmp L_76603
.p2align 0x4
L_405683:
L_76724:
	movq 0x10(%r14),%r15
	movq %r15,0x18(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x20(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x28(%rbp)
	jmp L_76684
.p2align 0x4
L_405684:
L_76723:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r15
	movq %r13,%r14
	jmp L_76661
.p2align 0x4
L_405685:
L_76722:
	movq 0x10(%r14),%r13
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r11
	movq %r11,%r14
	jmp L_76647
.p2align 0x4
L_405686:
L_76721:
	movq 0x8(%r14),%r15
	movq %r15,0x18(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x20(%rbp)
	jmp L_76627
.p2align 0x4
L_405687:
L_76720:
	movq 0x0(%r14),%r15
	movq %r15,0x18(%rbp)
	jmp L_76611
.p2align 0x4
L_405688:
L_76719:
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r13
	movq %r13,0x18(%rbp)
	jmp L_76607
.p2align 0x4
.long 0x104B
L_76688:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_76690
L_76699:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_76700+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_76700
.p2align 0x4
.long 0x104D
L_76700:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	jmp L_76690
.p2align 0x4
.long 0xB66
L_76693:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_76694
.p2align 0x4
.long 0x104C
L_76695:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x18(%rbp)
	jmp loop_915
.p2align 0x4
.long 0x1049
L_76665:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_76667
L_76674:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_76675+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_76675
.p2align 0x4
.long 0x104A
L_76675:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	jmp L_76667
.p2align 0x4
.long 0x1049
L_76677:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_76667
L_76679:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_76680+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_76680
.p2align 0x4
.long 0x104A
L_76680:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	jmp L_76667
.p2align 0x4
.long 0x4A6
L_76650:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_76652
L_76656:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_76657+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_76657
.p2align 0x4
.long 0x51F
L_76657:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	jmp L_76652
.p2align 0x4
.long 0x1047
L_76631:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_76633
L_76641:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_76642+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_76642
.p2align 0x4
.long 0x1048
L_76642:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	jmp L_76633
.p2align 0x4
.long 0xA9E
L_76636:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_76637
.p2align 0x4
.long 0x64E
L_76624:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movl 0x2C(%rbp),%ecx
	jmp loop_916
.p2align 0x4
.long 0x8A9
L_76609:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x20(%rbp),%r15
	movq 0x18(%rbp),%r14
	movq %r14,0x20(%rbp)
	movq %r15,0x18(%rbp)
	jmp loop_915
.text
.p2align 0x4
.globl loop_3841
.hidden loop_3841
loop_3841:
L_76731:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_76746
L_76732:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_405702
L_76733:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r14),%r15
	cmpq $0x1,%r15
	je L_405701
	cmpq $0x2,%r15
	je L_405699
L_76734:
	movq 0x8(%rbp),%r11
	cmpq %r11,0x8(%r15)
	je L_405698
L_76735:
	jmp makeUnknown_0
.p2align 0x4
L_405698:
L_76736:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405699:
L_76738:
	movq $0x27D1,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x10(%rbp),%r11
	movq %r11,0x0(%r15)
	movq 0x8(%rbp),%r11
	movq %r11,0x8(%r15)
	movq %r14,%r11
	shrq $0x8,%r11
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r11,1)
	movq %r15,0x0(%r14)
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_405700
L_76739:
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,%r15
L_76740:
	movq %r15,0x28(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x28,%rbp
	leaq (L_76741+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3841
.p2align 0x4
L_405700:
L_76744:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405701:
L_76737:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405702:
L_76746:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_76747+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_76747
.p2align 0x4
.long 0x45B
L_76747:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_76733
.p2align 0x4
.long 0x5EF
L_76741:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_76744
L_76742:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	jmp L_76740
.text
.p2align 0x4
.globl makeUnknown_0
.hidden makeUnknown_0
makeUnknown_0:
L_76748:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_76749
L_76760:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_76761+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_76761
.p2align 0x4
.long 0x451
L_76761:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_76749:
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r13
	movq %r13,0x8(%rbp)
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_405706
L_76750:
L_76751:
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq $0x1,0x0(%r15)
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_405705
L_76752:
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,%r15
L_76753:
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_76754+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp makeUnknown_0
.p2align 0x4
L_405705:
L_76757:
	movq 0x8(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq $0x1,0x0(%r15)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405706:
L_76759:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4E5
L_76754:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_76757
L_76755:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	jmp L_76753
.text
.p2align 0x4
.globl loop_3844
.hidden loop_3844
loop_3844:
L_76762:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_76763
L_76807:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_76808+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_76808
.p2align 0x4
.long 0x646
L_76808:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_76763:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movq %r13,0x38(%rbp)
	movq 0x10(%r15),%r13
	movq 0x0(%r14),%r15
	cmpq $0x1,%r15
	je L_405724
	cmpq $0x2,%r15
	je L_405713
L_76764:
	movq 0x8(%r15),%r13
	movq 0x8(%rbp),%r11
	cmpq %r11,0x10(%r15)
	je L_76774
L_76765:
	movq 0x10(%rbp),%r15
	movq 0x10(%r13),%r11
	cmpq %r11,0x10(%r15)
	jne L_76767
L_76768:
	movq 0x18(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r10,%r13
	jne L_405710
L_76771:
	testl %r11d,%r11d
	jz L_405709
L_76767:
	movq 0x28(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp makeDataUnknown_0
.p2align 0x4
L_405709:
L_76774:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405710:
L_76770:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405713:
L_76777:
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq 0x30(%rbp),%r11
	movq %r11,0x0(%r14)
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_405714
L_76778:
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,%r15
L_76779:
	movq %r15,0x50(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x68(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x70(%rbp)
	movq 0x28(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x50,%rbp
	leaq (L_76780+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3844
.p2align 0x4
L_405714:
L_76783:
	movq 0x38(%rbp),%r14
	movq 0x0(%r14),%r13
	cmpq $0x1,%r13
	je L_76789
L_76784:
	movq 0x8(%r13),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r13),%r13
	movq %r13,%r15
.p2align 0x4,,0x7
L_76785:
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x10(%rbp),%r14
	movq 0x0(%r15),%r13
	movq 0x10(%r13),%r11
	cmpq %r11,0x10(%r14)
	je L_405716
L_76786:
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_405715
L_76787:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	jmp L_76785
.p2align 0x4
L_405715:
L_76789:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405716:
L_76790:
	movq 0x18(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x38(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_76770
L_76792:
	movq 0x30(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%ecx
	movslq %ecx,%r11
	cmpq %r14,%r11
	jne L_76770
L_76794:
	cmpl %r13d,%ecx
	jne L_76796
L_76797:
	cmpl $0x0,%r13d
	jl L_405719
L_76798:
	xorl %ecx,%ecx
.p2align 0x4,,0x7
loop_917:
	cmpl 0x38(%rbp),%ecx
	jl L_405718
L_76799:
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_76789
L_76800:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x28(%rbp)
	jmp L_76785
.p2align 0x4
L_405718:
L_76802:
	movl %ecx,%r15d
	incl %r15d
	movl %r15d,0x3C(%rbp)
	movslq %ecx,%r15
	movq 0x18(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x50(%rbp)
	movq 0x30(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	movq %r13,0x48(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x48,%rbp
	leaq (L_76803+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp coerce_3
.p2align 0x4
L_405719:
L_76796:
	movq (globalObjptr+0xCF8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405724:
L_76776:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x67A
L_76780:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x40(%rbp),%r14
	cmpq $0x1,%r14
	je L_76783
L_76781:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x40(%rbp)
	jmp L_76779
.p2align 0x4
.long 0x903
L_76803:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movl 0x3C(%rbp),%ecx
	jmp loop_917
.text
.p2align 0x4
.globl loop_3843
.hidden loop_3843
loop_3843:
L_76809:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_76810
L_76830:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_76831+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_76831
.p2align 0x4
.long 0x45B
L_76831:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
L_76810:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r14),%r15
L_76811:
	movq 0x10(%rbp),%r11
	andq $0x3,%r11
	jz L_405729
L_76812:
	cmpq $0x1,%r15
	je L_405728
	cmpq $0x2,%r15
	je x_1450
L_76813:
	jmp makeUnknown_3
.p2align 0x4
x_1450:
x_219:
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq 0x10(%rbp),%r11
	movq %r11,0x0(%r14)
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_405727
L_76816:
	movq 0x8(%r15),%r14
	movq %r14,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,%r15
L_76817:
	movq %r15,0x28(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x28,%rbp
	leaq (L_76818+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3843
.p2align 0x4
L_405727:
L_76821:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405728:
L_76814:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405729:
L_76823:
	movq 0x10(%rbp),%r11
	movq 0x0(%r11),%r10
	cmpq $0x1,%r15
	je L_405730
	cmpq $0x2,%r15
	je x_219
L_76824:
	movq %r10,0x18(%rbp)
	movq 0x0(%r15),%r11
	movq %r11,0x10(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x20(%rbp)
	addq $0x10,%rbp
	leaq (L_76825+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1405
.p2align 0x4
L_405730:
L_76828:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x5EF
L_76818:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_76821
L_76819:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x18(%rbp)
	jmp L_76817
.p2align 0x4
.long 0x4AF
L_76825:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movl 0x10(%rbp),%r15d
	movl %r15d,0x8(%rbp)
	testl %r15d,%r15d
	jnz L_405733
L_76826:
	jmp makeUnknown_3
.p2align 0x4
L_405733:
L_76827:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl makeUnknown_3
.hidden makeUnknown_3
makeUnknown_3:
L_76832:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_76833
L_76844:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_76845+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_76845
.p2align 0x4
.long 0x451
L_76845:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_76833:
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r13
	movq %r13,0x8(%rbp)
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_405735
L_76834:
L_76835:
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq $0x1,0x0(%r15)
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_405734
L_76836:
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,%r15
L_76837:
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_76838+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp makeUnknown_3
.p2align 0x4
L_405734:
L_76841:
	movq 0x8(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq $0x1,0x0(%r15)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405735:
L_76843:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4E5
L_76838:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_76841
L_76839:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	jmp L_76837
.text
.p2align 0x4
.globl loop_3842
.hidden loop_3842
loop_3842:
L_76846:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_76847
L_76860:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_76861+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_76861
.p2align 0x4
.long 0x45F
L_76861:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_76847:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r14),%r15
	cmpq $0x1,%r15
	je L_405741
	cmpq $0x2,%r15
	je L_405739
L_76848:
	cmpq 0x8(%rbp),%r15
	je L_405738
L_76849:
	jmp makeUnknown_1
.p2align 0x4
L_405738:
L_76850:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405739:
L_76852:
	movq %r14,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq 0x8(%rbp),%r11
	movq %r11,0x0(%r14)
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_405740
L_76853:
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,%r15
L_76854:
	movq %r15,0x20(%rbp)
	movq 0x8(%rbp),%r15
	movq %r15,0x28(%rbp)
	addq $0x20,%rbp
	leaq (L_76855+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3842
.p2align 0x4
L_405740:
L_76858:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405741:
L_76851:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4E5
L_76855:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_76858
L_76856:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	jmp L_76854
.text
.p2align 0x4
.globl makeUnknown_1
.hidden makeUnknown_1
makeUnknown_1:
L_76862:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_76863
L_76874:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_76875+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_76875
.p2align 0x4
.long 0x451
L_76875:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_76863:
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r13
	movq %r13,0x8(%rbp)
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_405745
L_76864:
L_76865:
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r14,1)
	movq $0x1,0x0(%r15)
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_405744
L_76866:
	movq 0x8(%r15),%r14
	movq %r14,0x10(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,%r15
L_76867:
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_76868+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp makeUnknown_1
.p2align 0x4
L_405744:
L_76871:
	movq 0x8(%rbp),%r15
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq $0x1,0x0(%r15)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405745:
L_76873:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4E5
L_76868:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x10(%rbp),%r14
	cmpq $0x1,%r14
	je L_76871
L_76869:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x10(%rbp)
	jmp L_76867
.text
.p2align 0x4
.globl constToEltLength_0
.hidden constToEltLength_0
constToEltLength_0:
L_76876:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_76943
L_76877:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_405751
L_76878:
	movq 0x10(%rbp),%r15
	movq 0x18(%r15),%r14
	movq 0x10(%r15),%r13
	movq %r13,0x18(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x20(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x28(%rbp)
L_76879:
	movq 0x8(%rbp),%r15
	movq %r15,%r13
	andq $0x3,%r13
	jnz L_76880
L_76881:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0xE49,%r13
	jne L_405749
L_76882:
	movq 0x8(%r15),%r13
	movq %r13,0x10(%rbp)
	movq 0x0(%r15),%r11
	movq %r11,0x30(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movq %r15,0x38(%rbp)
	movl %r15d,%r13d
	movl %r13d,0x40(%rbp)
	movslq %r13d,%r10
	movq %r10,0x48(%rbp)
	cmpq %r10,%r15
	jne L_405748
L_76884:
	movq 0x8(%r14),%r15
	movq %r15,0x50(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0x58(%rbp)
	movq %r11,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_76885+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_405748:
L_76883:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405749:
L_76880:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405751:
L_76943:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_76944+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_76944
.p2align 0x4
.long 0x45B
L_76944:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_76878
.p2align 0x4
.long 0x104E
L_76885:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movl 0x68(%rbp),%r15d
	movl %r15d,0x44(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_76886
L_76941:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_76942+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_76942
.p2align 0x4
.long 0x1053
L_76942:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_76886:
	movslq 0x44(%rbp),%r15
	movq 0x58(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_405754
L_76889:
	movq 0x0(%r14,%r15,8),%r13
	cmpq $0x1,%r13
	je L_405753
L_76890:
	movl 0x0(%r13),%r15d
	movl %r15d,0x60(%rbp)
	movq $0x1D5F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x58(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x58,%rbp
	leaq (L_76891+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lookup_1
.p2align 0x4
L_405753:
L_76940:
	movq $0x9,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405754:
L_76888:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x104F
L_76891:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_76892
L_76938:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_76939+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_76939
.p2align 0x4
.long 0x1057
L_76939:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_76892:
	movl 0x40(%rbp),%r15d
	testl %r15d,%r15d
	jz L_405759
L_76893:
	cmpq $0x0,0x38(%rbp)
	jna L_76888
L_76895:
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movl $0x0,0x44(%rbp)
loop_918:
	movl 0x44(%rbp),%r15d
	cmpl %r15d,0x40(%rbp)
	je L_405757
L_76896:
	movslq %r15d,%r14
	cmpq 0x38(%rbp),%r14
	jnb L_76888
L_76898:
	movq 0x10(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	movq %r13,0x58(%rbp)
	movq 0x50(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_76899+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp equals_0
.p2align 0x4
L_405757:
L_76932:
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1DC7,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r14,0x58(%rbp)
	addq $0x10,%r12
	movq $0x107F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	addq $0x10,%r12
	movq $0x107D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0x1DD3,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r11,0x30(%rbp)
	movq %r13,0x0(%r11)
	movq %r14,0x8(%r11)
	addq $0x18,%r12
	movq 0x18(%rbp),%r14
	movq %r14,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_76933+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp ofConst_0
.p2align 0x4
L_405759:
L_76937:
	movq $0x107F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x107D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x1DD3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq $0x1003,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x2,0x0(%r15)
	movq $0x1005,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x8(%r14)
	movq $0x2889,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0xA55,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x30(%rbp)
	addq $0x10,%r12
L_76903:
	movq 0x48(%rbp),%r15
	shlq $0x1,%r15
	orq $0x1,%r15
	movq %r15,0x38(%rbp)
	movq 0x20(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r13),%r11
	movq 0x8(%r13),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_405760
L_76904:
	movq %r14,0x50(%rbp)
	movq 0x0(%r9),%r15
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_76905+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_405760:
L_76916:
	movq %r11,0x8(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_76917+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x104E
L_76899:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movl 0x68(%rbp),%r15d
	movl %r15d,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_76900
L_76930:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_76931+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_76931
.p2align 0x4
.long 0x1054
L_76931:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_76900:
	movl 0x60(%rbp),%r15d
	testl %r15d,%r15d
	jz L_76902
L_76921:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_76922
L_76928:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_76929+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_76929
.p2align 0x4
.long 0x1053
L_76929:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_76922:
	movq (c_stackP+0x0)(%rip),%rsp
	movq 0x50(%rbp),%r15
	movq 0x0(%r15),%rsi
	movq 0x58(%rbp),%r15
	movq 0x0(%r15),%rdi
	xorq %rax,%rax
	call IntInf_equal
L_76923:
	testl %eax,%eax
	jz L_405763
L_76925:
	movl 0x44(%rbp),%r15d
	incl %r15d
	jo L_405762
L_76927:
	movl %r15d,0x44(%rbp)
	jmp loop_918
.p2align 0x4
L_405762:
L_76926:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405763:
L_76902:
	movq $0x107F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x107D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x1DD3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq $0x1003,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x2,0x0(%r15)
	movq $0x1005,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r13,0x0(%r14)
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x8(%r14)
	movq $0x2889,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0xA55,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x30(%rbp)
	addq $0x10,%r12
	jmp L_76903
.p2align 0x4
.long 0x1055
L_76933:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_76934
L_76935:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_76936+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_76936
.p2align 0x4
.long 0x1056
L_76936:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_76934:
	movq $0x1003,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x2,0x0(%r15)
	movq $0x1005,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x38(%rbp),%r15
	movq %r15,0x8(%r14)
	movq $0x2889,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0xA55,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x30(%rbp)
	addq $0x10,%r12
	jmp L_76903
.p2align 0x4
.long 0x1050
L_76905:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x28(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x40(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x48(%rbp)
	movq %r15,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_76906+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp sextdToWord32_0
.p2align 0x4
.long 0x1
L_76917:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0x8(%rbp)
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (bug_163+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x1051
L_76906:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movl 0x58(%rbp),%r15d
	movl %r15d,0x28(%rbp)
	movl %r15d,0x58(%rbp)
	movq $0x3,0x60(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x58,%rbp
	leaq (L_76907+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1199
.p2align 0x4
.long 0x1
bug_163:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_76918
L_76919:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_76920+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_76920
.p2align 0x4
.long 0x451
L_76920:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_76918:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1052
L_76907:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x28(%rbp)
	movq %r15,0x40(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x48(%rbp)
	addq $0x40,%rbp
	leaq (L_76908+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp bigMod_0
.p2align 0x4
.long 0x80C
L_76908:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_76909
L_76914:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_76915+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_76915
.p2align 0x4
.long 0x71F
L_76915:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_76909:
	movq $0x2D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq $0x1C95,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x1DC7,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r14,0x48(%rbp)
	addq $0x10,%r12
	movq $0x107F,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq $0x107D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x1DD3,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x38(%rbp)
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	addq $0x18,%r12
	movq 0x18(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_76910+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp ofConst_0
.p2align 0x4
.long 0x7BF
L_76910:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_76911
L_76912:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_76913+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_76913
.p2align 0x4
.long 0x86A
L_76913:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_76911:
	movq $0x1003,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x2,0x0(%r15)
	movq $0x1005,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x10(%r14)
	addq $0x20,%r12
	movq 0x38(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x40(%rbp),%r15
	movq %r15,0x8(%r14)
	movq $0x2889,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0xA55,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	movq %r14,0x0(%rbp)
	addq $0x10,%r12
	movq 0x30(%rbp),%r15
	movq %r15,0x8(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl isSmall_0
.hidden isSmall_0
isSmall_0:
loopS_9:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_76945
L_76965:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_76966+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_76966
.p2align 0x4
.long 0x451
L_76966:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_76945:
	movq 0x0(%rbp),%r15
.p2align 0x4,,0x7
loop_919:
	movq 0x8(%r15),%r14
L_76946:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_76947
L_76948:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xEB1,%r15
	je L_76950
	cmpq $0xEB2,%r15
	je L_405774
	cmpq $0xEB3,%r15
	je L_405773
	cmpq $0xEB4,%r15
	je L_76950
	cmpq $0xEB5,%r15
	je L_405771
L_76947:
	movl $0x1,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405771:
L_76950:
	movl $0x0,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405773:
L_76962:
	movq 0x0(%r14),%r15
	jmp loop_919
.p2align 0x4
L_405774:
L_76951:
	movq 0x0(%r14),%r15
	movq %r15,0x0(%rbp)
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq %r14,0x8(%rbp)
	movl %r14d,%r15d
	movl %r15d,0x10(%rbp)
	movslq %r15d,%r13
	cmpq %r14,%r13
	je L_405775
L_76952:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405775:
L_76953:
	movl $0x0,0x14(%rbp)
loop_920:
	movl 0x14(%rbp),%r15d
	cmpl %r15d,0x10(%rbp)
	je L_76947
L_76954:
	movslq %r15d,%r14
	cmpq 0x8(%rbp),%r14
	jnb L_405776
L_76956:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	movq %r13,0x20(%rbp)
	addq $0x20,%rbp
	leaq (not_8+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp isSmall_0
.p2align 0x4
L_405776:
L_76955:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1058
not_8:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movl 0x20(%rbp),%r15d
	movl %r15d,0x18(%rbp)
	testl %r15d,%r15d
	jz L_76950
L_76958:
	movl 0x14(%rbp),%r15d
	incl %r15d
	jo L_405781
L_76960:
	movl %r15d,0x14(%rbp)
	jmp loop_920
.p2align 0x4
L_405781:
L_76959:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl primApp_4
.hidden primApp_4
primApp_4:
L_76967:
	movq (gcState+0x20)(%rip),%r15
	movq %r15,0x30(%rbp)
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_78604
L_76968:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_405784
L_76969:
	movq 0x20(%rbp),%r15
	movq 0x90(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x88(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x80(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x78(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x70(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x68(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x60(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x58(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x50(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x48(%r15),%r14
	movq %r14,0x80(%rbp)
	movq 0x40(%r15),%r14
	movq %r14,0x88(%rbp)
	movq 0x30(%r15),%r14
	movq 0x10(%r15),%r13
	movq %r13,0x90(%rbp)
	movq 0x8(%r15),%r13
	movq %r13,0x98(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0xA0(%rbp)
	movq $0x71,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0xA8(%rbp)
	addq $0x10,%r12
	movl $0x0,0x0(%r15)
	movl $0x0,0x4(%r15)
	movq $0x19D9,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0xB0(%rbp)
	addq $0x10,%r12
	movq %r15,0x0(%r13)
	movq 0x40(%r14),%r15
	movq %r15,0xB8(%rbp)
	movq 0x38(%r14),%r15
	movq %r15,0xC0(%rbp)
	movq 0x30(%r14),%r15
	movq %r15,0xC8(%rbp)
	movq 0x28(%r14),%r15
	movq %r15,0xD0(%rbp)
	movq 0x20(%r14),%r15
	movq %r15,0xD8(%rbp)
	movq 0x18(%r14),%r15
	movq %r15,0xE0(%rbp)
	movq 0x10(%r14),%r15
	movq %r15,0xE8(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0xF0(%rbp)
	movq 0x0(%r14),%r15
	movq %r15,0xF8(%rbp)
	movq 0x48(%r14),%r15
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r11
	movq 0x0(%r11),%r10
	movq 0x8(%r11),%r9
	movq 0x0(%r9),%r8
	cmpq $0x1,%r8
	je L_405783
L_76970:
	movq %r13,0x110(%rbp)
	movq 0x0(%r8),%r15
	movq %r15,0x108(%rbp)
	leaq L_77098(%rip),%r15
	movq %r15,0x28(%rbp)
	movq %rbp,%r15
	addq $0x30,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	addq $0x108,%rbp
	leaq (L_76971+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_405783:
L_78599:
	movq %r10,0xB8(%rbp)
	leaq L_77098(%rip),%r15
	movq %r15,0x28(%rbp)
	movq %rbp,%r15
	addq $0x30,%r15
	subq (gcState+0x560)(%rip),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0xC0(%rbp)
	addq $0xB8,%rbp
	leaq (L_78600+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
L_405784:
L_78604:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_78605+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_78605
.p2align 0x4
.long 0x97B
L_78605:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_76969
.p2align 0x4
.long 0x1059
L_76971:
	addq $0xFFFFFFFFFFFFFEF8,%rbp
	movq 0x108(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x88(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x100(%rbp)
	movq 0x0(%r14),%r13
	movq %r13,0x108(%rbp)
	movq %r15,0x118(%rbp)
	addq $0x118,%rbp
	leaq (L_76972+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
.long 0x920
L_77098:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq (globalObjptrNonRoot+0x0)(%rip),%r14
L_77099:
	movq %r14,%r15
	andq $0x3,%r15
	jnz L_405788
L_77101:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0xCEC,%r15
	jne L_405787
L_77102:
	movq %r14,%r13
	movq 0x0(%r14),%r14
	movq %r14,%r15
	movq %r13,%r14
L_77103:
	cmpq %r15,0xA8(%rbp)
	je L_405786
L_77104:
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq 0x30(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405786:
L_77054:
	movq 0x30(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x10(%rbp),%r15
	movq %r15,0xB0(%rbp)
	movq 0x90(%rbp),%r15
	movq %r15,0xB8(%rbp)
	addq $0xB0,%rbp
	leaq (L_77055+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_545
.p2align 0x4
L_405787:
	movq %r14,%r15
L_77100:
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq 0x30(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405788:
	movq %r14,%r15
	jmp L_77100
.p2align 0x4
.long 0x10AF
L_78600:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0xB8(%rbp)
	movq %r15,0xC0(%rbp)
	addq $0xB8,%rbp
	leaq (bug_169+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x105A
L_76972:
	addq $0xFFFFFFFFFFFFFEE8,%rbp
	movl 0x118(%rbp),%r15d
	movl %r15d,0x88(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_76973
L_78597:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x118,%rbp
	leaq (L_78598+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_78598
.p2align 0x4
.long 0x10B6
L_78598:
	addq $0xFFFFFFFFFFFFFEE8,%rbp
L_76973:
	movq 0x108(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movq %r14,0x110(%rbp)
	movslq 0x88(%rbp),%r13
	cmpq %r14,%r13
	jnb L_405790
L_76976:
	movq 0x0(%r15,%r13,8),%r14
	cmpq $0x1,%r14
	je L_405789
L_76977:
	movl 0x0(%r14),%r15d
	movl %r15d,0x128(%rbp)
	movq $0x1D5F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x120(%rbp)
	movq 0x100(%rbp),%r15
	movq %r15,0x130(%rbp)
	addq $0x120,%rbp
	leaq (L_76978+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lookup_1
.p2align 0x4
L_405789:
L_77107:
	movq 0x30(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x9,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405790:
L_76975:
	movq 0x30(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x106E
L_77055:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movq 0xB0(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq %r15,0xB0(%rbp)
	addq $0xB0,%rbp
	leaq (L_77056+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x10AF
bug_169:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_78601
L_78602:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_78603+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_78603
.p2align 0x4
.long 0x10B0
L_78603:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_78601:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq 0x30(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x105B
L_76978:
	addq $0xFFFFFFFFFFFFFEE0,%rbp
	movq 0x120(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0xB8(%rbp),%r15
	movq %r15,0x120(%rbp)
	addq $0x120,%rbp
	leaq (L_76979+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
.long 0x106E
L_77056:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movq 0xB0(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_77057
L_77083:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_77084+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_77084
.p2align 0x4
.long 0x1072
L_77084:
	addq $0xFFFFFFFFFFFFFF50,%rbp
L_77057:
	movq 0x18(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_405793
L_77059:
	movl %r13d,0xB8(%rbp)
	movq $0x3C41,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x98(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0xB0(%rbp)
	addq $0xB0,%rbp
	leaq (L_77060+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldDown_0
.p2align 0x4
L_405793:
L_77058:
	movq (globalObjptr+0x4D8)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x105C
L_76979:
	addq $0xFFFFFFFFFFFFFEE0,%rbp
	movl 0x120(%rbp),%r15d
	movl %r15d,0x88(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_76980
L_78594:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x120,%rbp
	leaq (L_78595+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_78595
.p2align 0x4
.long 0x10B5
L_78595:
	addq $0xFFFFFFFFFFFFFEE0,%rbp
L_76980:
	movslq 0x88(%rbp),%r15
	cmpq 0x110(%rbp),%r15
	jnb L_76975
L_76982:
	movq 0x108(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	cmpq $0x1,%r13
	je L_77107
L_76983:
	movl 0x0(%r13),%r15d
	movl %r15d,0x128(%rbp)
	movq $0x1D5F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xB8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x120(%rbp)
	movq 0x100(%rbp),%r15
	movq %r15,0x130(%rbp)
	addq $0x120,%rbp
	leaq (L_76984+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lookup_1
.p2align 0x4
.long 0x106F
L_77060:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movq 0xB0(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq %r15,0xB0(%rbp)
	movq (globalObjptr+0xA300)(%rip),%r15
	movq %r15,0xB8(%rbp)
	movq (globalObjptr+0xA1B8)(%rip),%r15
	movq %r15,0xC0(%rbp)
	movq (globalObjptr+0xD0F8)(%rip),%r15
	movq %r15,0xC8(%rbp)
	addq $0xB0,%rbp
	leaq (L_77061+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1218
.p2align 0x4
.long 0x105D
L_76984:
	addq $0xFFFFFFFFFFFFFEE0,%rbp
	movq 0x120(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0xC0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r13),%r11
	movq 0x8(%r13),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_405798
L_76985:
	movq %r14,0x128(%rbp)
	movq 0x0(%r9),%r15
	movq %r15,0x120(%rbp)
	addq $0x120,%rbp
	leaq (L_76986+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_405798:
L_78588:
	movq %r11,0xB8(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0xC0(%rbp)
	addq $0xB8,%rbp
	leaq (L_78589+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x106F
L_77061:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movq 0xB0(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_77062
L_77081:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_77082+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_77082
.p2align 0x4
.long 0x1071
L_77082:
	addq $0xFFFFFFFFFFFFFF50,%rbp
L_77062:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1,0x8(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x40(%rbp)
	addq $0x18,%r12
	movq 0x20(%rbp),%r15
	movq %r15,0x0(%r13)
	movq %r14,0x8(%r13)
	xorl %ecx,%ecx
.p2align 0x4,,0x7
L_77063:
	addl 0x0(%r15),%ecx
	movl %ecx,0x38(%rbp)
	jo L_405802
L_77065:
	cmpq $0x1,%r14
	je L_405799
L_77066:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_77063
.p2align 0x4
L_405799:
L_77067:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_77068
L_77079:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_77080+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_77080
.p2align 0x4
.long 0x1070
L_77080:
	addq $0xFFFFFFFFFFFFFF50,%rbp
L_77068:
	movl 0x38(%rbp),%ecx
	testl %ecx,%ecx
	jz L_405800
L_77069:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x40(%rbp),%r14
	movq %r14,0x0(%r15)
L_77070:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x38(%rbp)
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq 0xA0(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq (globalObjptr+0xF060)(%rip),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x858)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xA808)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x58(%rbp)
	addq $0x58,%rbp
	leaq (L_77071+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_405800:
L_77078:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp L_77070
.p2align 0x4
L_405802:
L_77064:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x105E
L_76986:
	addq $0xFFFFFFFFFFFFFEE0,%rbp
	movq 0x120(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq %r15,0x120(%rbp)
	addq $0x120,%rbp
	leaq (L_76987+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
.long 0x10AF
L_78589:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0xB8(%rbp)
	movq %r15,0xC0(%rbp)
	addq $0xB8,%rbp
	leaq (bug_168+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x9B0
L_77071:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq %r15,0x58(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_77072+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x105F
L_76987:
	addq $0xFFFFFFFFFFFFFEE0,%rbp
	movl 0x120(%rbp),%r15d
	movl %r15d,0xC0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_76988
L_78586:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x120,%rbp
	leaq (L_78587+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_78587
.p2align 0x4
.long 0x10B4
L_78587:
	addq $0xFFFFFFFFFFFFFEE0,%rbp
L_76988:
	movslq 0xC0(%rbp),%r15
	cmpq 0x110(%rbp),%r15
	jnb L_76975
L_76990:
	movq 0x108(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	cmpq $0x1,%r13
	je L_77107
L_76991:
	movl 0x0(%r13),%r15d
	movl %r15d,0x128(%rbp)
	movq $0x1D5F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xB8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x120(%rbp)
	movq 0x100(%rbp),%r15
	movq %r15,0x130(%rbp)
	addq $0x120,%rbp
	leaq (L_76992+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lookup_1
.p2align 0x4
.long 0x10AF
bug_168:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_78590
L_78591:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_78592+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_78592
.p2align 0x4
.long 0x10B0
L_78592:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_78590:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq 0x30(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x9B0
L_77072:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_77073
L_77076:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_77077+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_77077
.p2align 0x4
.long 0x78E
L_77077:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_77073:
	movq $0x3E37,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x60(%rbp)
	movq (globalObjptr+0x9D8)(%rip),%r15
	movq %r15,0x50(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_77074+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3780
.p2align 0x4
.long 0x105E
L_76992:
	addq $0xFFFFFFFFFFFFFEE0,%rbp
	movq 0x120(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq 0xC8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r13),%r11
	movq 0x8(%r13),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_405809
L_76993:
	movq %r14,0x128(%rbp)
	movq 0x0(%r9),%r15
	movq %r15,0x120(%rbp)
	addq $0x120,%rbp
	leaq (L_76994+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_405809:
L_78580:
	movq %r11,0xB8(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0xC0(%rbp)
	addq $0xB8,%rbp
	leaq (L_78581+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x847
L_77074:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_77075+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x1060
L_76994:
	addq $0xFFFFFFFFFFFFFEE0,%rbp
	movq 0x120(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq %r15,0x120(%rbp)
	addq $0x120,%rbp
	leaq (L_76995+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
.long 0x10AF
L_78581:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0xB8(%rbp)
	movq %r15,0xC0(%rbp)
	addq $0xB8,%rbp
	leaq (bug_167+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0xA1C
L_77075:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq $0x15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1061
L_76995:
	addq $0xFFFFFFFFFFFFFEE0,%rbp
	movl 0x120(%rbp),%r15d
	movl %r15d,0xC8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_76996
L_78578:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x120,%rbp
	leaq (L_78579+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_78579
.p2align 0x4
.long 0x10B3
L_78579:
	addq $0xFFFFFFFFFFFFFEE0,%rbp
L_76996:
	movslq 0xC8(%rbp),%r15
	cmpq 0x110(%rbp),%r15
	jnb L_76975
L_76998:
	movq 0x108(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	cmpq $0x1,%r13
	je L_77107
L_76999:
	movl 0x0(%r13),%r15d
	movl %r15d,0x128(%rbp)
	movq $0x1D5F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xC0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x120(%rbp)
	movq 0x100(%rbp),%r15
	movq %r15,0x130(%rbp)
	addq $0x120,%rbp
	leaq (L_77000+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lookup_1
.p2align 0x4
.long 0x10AF
bug_167:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_78582
L_78583:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_78584+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_78584
.p2align 0x4
.long 0x10B0
L_78584:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_78582:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq 0x30(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1060
L_77000:
	addq $0xFFFFFFFFFFFFFEE0,%rbp
	movq 0x120(%rbp),%r15
	movq %r15,0xC0(%rbp)
	movq 0xD0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r13),%r11
	movq 0x8(%r13),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_405814
L_77001:
	movq %r14,0x128(%rbp)
	movq 0x0(%r9),%r15
	movq %r15,0x120(%rbp)
	addq $0x120,%rbp
	leaq (L_77002+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_405814:
L_78572:
	movq %r11,0xB8(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0xC0(%rbp)
	addq $0xB8,%rbp
	leaq (L_78573+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x1062
L_77002:
	addq $0xFFFFFFFFFFFFFEE0,%rbp
	movq 0x120(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq %r15,0x120(%rbp)
	addq $0x120,%rbp
	leaq (L_77003+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
.long 0x10AF
L_78573:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0xB8(%rbp)
	movq %r15,0xC0(%rbp)
	addq $0xB8,%rbp
	leaq (bug_166+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x1063
L_77003:
	addq $0xFFFFFFFFFFFFFEE0,%rbp
	movl 0x120(%rbp),%r15d
	movl %r15d,0xD0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_77004
L_78570:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x120,%rbp
	leaq (L_78571+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_78571
.p2align 0x4
.long 0x10B2
L_78571:
	addq $0xFFFFFFFFFFFFFEE0,%rbp
L_77004:
	movslq 0xD0(%rbp),%r15
	cmpq 0x110(%rbp),%r15
	jnb L_76975
L_77006:
	movq 0x108(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	cmpq $0x1,%r13
	je L_77107
L_77007:
	movl 0x0(%r13),%r15d
	movl %r15d,0x128(%rbp)
	movq $0x1D5F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xC8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x120(%rbp)
	movq 0x100(%rbp),%r15
	movq %r15,0x130(%rbp)
	addq $0x120,%rbp
	leaq (L_77008+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lookup_1
.p2align 0x4
.long 0x10AF
bug_166:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_78574
L_78575:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_78576+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_78576
.p2align 0x4
.long 0x10B0
L_78576:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_78574:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq 0x30(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1062
L_77008:
	addq $0xFFFFFFFFFFFFFEE0,%rbp
	movq 0x120(%rbp),%r15
	movq %r15,0xC8(%rbp)
	movq 0xD8(%rbp),%r15
	movq %r15,0x120(%rbp)
	addq $0x120,%rbp
	leaq (L_77009+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
.long 0x1063
L_77009:
	addq $0xFFFFFFFFFFFFFEE0,%rbp
	movl 0x120(%rbp),%r15d
	movl %r15d,0xD0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_77010
L_78567:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x120,%rbp
	leaq (L_78568+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_78568
.p2align 0x4
.long 0x10B2
L_78568:
	addq $0xFFFFFFFFFFFFFEE0,%rbp
L_77010:
	movslq 0xD0(%rbp),%r15
	cmpq 0x110(%rbp),%r15
	jnb L_76975
L_77012:
	movq 0x108(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	cmpq $0x1,%r13
	je L_77107
L_77013:
	movl 0x0(%r13),%r15d
	movl %r15d,0x128(%rbp)
	movq $0x1D5F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xD8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x120(%rbp)
	movq 0x100(%rbp),%r15
	movq %r15,0x130(%rbp)
	addq $0x120,%rbp
	leaq (L_77014+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lookup_1
.p2align 0x4
.long 0x1064
L_77014:
	addq $0xFFFFFFFFFFFFFEE0,%rbp
	movq 0x120(%rbp),%r15
	movq %r15,0xD0(%rbp)
	movq 0xE0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r13),%r11
	movq 0x8(%r13),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_405822
L_77015:
	movq %r14,0x128(%rbp)
	movq 0x0(%r9),%r15
	movq %r15,0x120(%rbp)
	addq $0x120,%rbp
	leaq (L_77016+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_405822:
L_78561:
	movq %r11,0xB8(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0xC0(%rbp)
	addq $0xB8,%rbp
	leaq (L_78562+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x1065
L_77016:
	addq $0xFFFFFFFFFFFFFEE0,%rbp
	movq 0x120(%rbp),%r15
	movq %r15,0xD8(%rbp)
	movq %r15,0x120(%rbp)
	addq $0x120,%rbp
	leaq (L_77017+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
.long 0x10AF
L_78562:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0xB8(%rbp)
	movq %r15,0xC0(%rbp)
	addq $0xB8,%rbp
	leaq (bug_165+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x1066
L_77017:
	addq $0xFFFFFFFFFFFFFEE0,%rbp
	movl 0x120(%rbp),%r15d
	movl %r15d,0xE0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_77018
L_78559:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x120,%rbp
	leaq (L_78560+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_78560
.p2align 0x4
.long 0x10B1
L_78560:
	addq $0xFFFFFFFFFFFFFEE0,%rbp
L_77018:
	movslq 0xE0(%rbp),%r15
	cmpq 0x110(%rbp),%r15
	jnb L_76975
L_77020:
	movq 0x108(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	cmpq $0x1,%r13
	je L_77107
L_77021:
	movl 0x0(%r13),%r15d
	movl %r15d,0x128(%rbp)
	movq $0x1D5F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xD8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x120(%rbp)
	movq 0x100(%rbp),%r15
	movq %r15,0x130(%rbp)
	addq $0x120,%rbp
	leaq (L_77022+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lookup_1
.p2align 0x4
.long 0x10AF
bug_165:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_78563
L_78564:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_78565+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_78565
.p2align 0x4
.long 0x10B0
L_78565:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_78563:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq 0x30(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1065
L_77022:
	addq $0xFFFFFFFFFFFFFEE0,%rbp
	movq 0x120(%rbp),%r15
	movq %r15,0xD8(%rbp)
	movq 0xE8(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x0(%r13),%r11
	movq 0x8(%r13),%r10
	movq 0x0(%r10),%r9
	cmpq $0x1,%r9
	je L_405827
L_77023:
	movq %r14,0x128(%rbp)
	movq 0x0(%r9),%r15
	movq %r15,0x120(%rbp)
	addq $0x120,%rbp
	leaq (L_77024+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp fromBits_5
.p2align 0x4
L_405827:
L_78553:
	movq %r11,0xB8(%rbp)
	movq (globalObjptr+0xD098)(%rip),%r15
	movq %r15,0xC0(%rbp)
	addq $0xB8,%rbp
	leaq (L_78554+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x1067
L_77024:
	addq $0xFFFFFFFFFFFFFEE0,%rbp
	movq 0x120(%rbp),%r15
	movq %r15,0xE0(%rbp)
	movq %r15,0x120(%rbp)
	addq $0x120,%rbp
	leaq (L_77025+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
.long 0x10AF
L_78554:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq (globalObjptr+0xD0A0)(%rip),%r14
	movq %r14,0xB8(%rbp)
	movq %r15,0xC0(%rbp)
	addq $0xB8,%rbp
	leaq (bug_164+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp append_0
.p2align 0x4
.long 0x1068
L_77025:
	addq $0xFFFFFFFFFFFFFEE0,%rbp
	movl 0x120(%rbp),%r15d
	movl %r15d,0xE8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_77026
L_78551:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x120,%rbp
	leaq (L_78552+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_78552
.p2align 0x4
.long 0x10AE
L_78552:
	addq $0xFFFFFFFFFFFFFEE0,%rbp
L_77026:
	movslq 0xE8(%rbp),%r15
	cmpq 0x110(%rbp),%r15
	jnb L_76975
L_77028:
	movq 0x108(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	cmpq $0x1,%r13
	je L_77107
L_77029:
	movl 0x0(%r13),%r15d
	movl %r15d,0x128(%rbp)
	movq $0x1D5F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xE0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x120(%rbp)
	movq 0x100(%rbp),%r15
	movq %r15,0x130(%rbp)
	addq $0x120,%rbp
	leaq (L_77030+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lookup_1
.p2align 0x4
.long 0x10AF
bug_164:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_78555
L_78556:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_78557+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_78557
.p2align 0x4
.long 0x10B0
L_78557:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_78555:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq 0x30(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1067
L_77030:
	addq $0xFFFFFFFFFFFFFEE0,%rbp
	movq 0x120(%rbp),%r15
	movq %r15,0xE0(%rbp)
	movq 0xF0(%rbp),%r15
	movq %r15,0x120(%rbp)
	addq $0x120,%rbp
	leaq (L_77031+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
.long 0x1068
L_77031:
	addq $0xFFFFFFFFFFFFFEE0,%rbp
	movl 0x120(%rbp),%r15d
	movl %r15d,0xE8(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_77032
L_78548:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x120,%rbp
	leaq (L_78549+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_78549
.p2align 0x4
.long 0x10AE
L_78549:
	addq $0xFFFFFFFFFFFFFEE0,%rbp
L_77032:
	movslq 0xE8(%rbp),%r15
	cmpq 0x110(%rbp),%r15
	jnb L_76975
L_77034:
	movq 0x108(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	cmpq $0x1,%r13
	je L_77107
L_77035:
	movl 0x0(%r13),%r15d
	movl %r15d,0x128(%rbp)
	movq $0x1D5F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xF0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x120(%rbp)
	movq 0x100(%rbp),%r15
	movq %r15,0x130(%rbp)
	addq $0x120,%rbp
	leaq (L_77036+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lookup_1
.p2align 0x4
.long 0x1069
L_77036:
	addq $0xFFFFFFFFFFFFFEE0,%rbp
	movq 0x120(%rbp),%r15
	movq %r15,0xE8(%rbp)
	movq 0xF8(%rbp),%r15
	movq %r15,0x120(%rbp)
	addq $0x120,%rbp
	leaq (L_77037+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
.long 0x106A
L_77037:
	addq $0xFFFFFFFFFFFFFEE0,%rbp
	movl 0x120(%rbp),%r15d
	movl %r15d,0xF0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_77038
L_78545:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x120,%rbp
	leaq (L_78546+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_78546
.p2align 0x4
.long 0x10AD
L_78546:
	addq $0xFFFFFFFFFFFFFEE0,%rbp
L_77038:
	movslq 0xF0(%rbp),%r15
	cmpq 0x110(%rbp),%r15
	jnb L_76975
L_77040:
	movq 0x108(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	cmpq $0x1,%r13
	je L_77107
L_77041:
	movl 0x0(%r13),%r15d
	movl %r15d,0x128(%rbp)
	movq $0x1D5F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xF8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x120(%rbp)
	movq 0x100(%rbp),%r15
	movq %r15,0x130(%rbp)
	addq $0x120,%rbp
	leaq (L_77042+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lookup_1
.p2align 0x4
.long 0x106B
L_77042:
	addq $0xFFFFFFFFFFFFFEE0,%rbp
	movq 0x120(%rbp),%r15
	movq %r15,0xF0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_77043
L_78542:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x120,%rbp
	leaq (L_78543+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_78543
.p2align 0x4
.long 0x10AC
L_78543:
	addq $0xFFFFFFFFFFFFFEE0,%rbp
L_77043:
	movq 0x38(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0xF8(%rbp)
	movl 0x0(%r15),%r13d
	movl %r13d,0x118(%rbp)
	movq 0xE8(%rbp),%r15
	movl 0x0(%r15),%r11d
	movl %r11d,0x11C(%rbp)
	xorl %r11d,%r13d
	movl %r13d,0x130(%rbp)
	movq $0x1D6B,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq %r15,0x0(%r13)
	movq %r13,0x128(%rbp)
	movq %r14,0x138(%rbp)
	addq $0x128,%rbp
	leaq (L_77044+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lookup_1
.p2align 0x4
.long 0x106C
L_77044:
	addq $0xFFFFFFFFFFFFFED8,%rbp
	movq 0x128(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_77045
L_78540:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x128,%rbp
	leaq (L_78541+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_78541
.p2align 0x4
.long 0x10AB
L_78541:
	addq $0xFFFFFFFFFFFFFED8,%rbp
L_77045:
	movq 0x78(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x120(%rbp)
	movl 0x0(%r15),%r13d
	movl %r13d,0x128(%rbp)
	movl 0x11C(%rbp),%r15d
	xorl %r13d,%r15d
	movl %r15d,0x140(%rbp)
	movq $0x1D63,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xE8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq %r15,0x138(%rbp)
	movq %r14,0x148(%rbp)
	addq $0x138,%rbp
	leaq (L_77046+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lookup_1
.p2align 0x4
.long 0x106D
L_77046:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
	movq 0x138(%rbp),%r15
	movq %r15,0x78(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_77047
L_78538:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x138,%rbp
	leaq (L_78539+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_78539
.p2align 0x4
.long 0x10AA
L_78539:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
L_77047:
	movq 0x10(%rbp),%rax
	andq $0xFF,%rax
	subq $0x1,%rax
	cmpq $0x88,%rax
	ja L_405840
	leaq jumpTable_196(%rip),%rbx
	jmp *(%rbx,%rax,8)
.data
.p2align 0x4
jumpTable_196:
.quad L_406293,L_406289,L_406285,L_77048,L_406280,L_406276,L_406272,L_77048,L_406269,L_406266,L_406263,L_77048,L_406255,L_406252,L_406248,L_77048,L_406245,L_406242,L_406238,L_77048,L_406235,L_406227,L_406218,L_77048,L_406210,L_406206,L_406200,L_77048,intInfBinary_0,intInfBinary_0,intInfShift_0,L_77048,L_406197,L_406194,intInfBinary_0,L_77048,intInfShift_3,intInfBinary_0,intInfUnary_0,L_77048,intInfUnary_11,intInfBinary_0,intInfBinary_0,L_77048,intInfBinary_0,intInfBinary_0,L_406187,L_77048,L_406184,L_406176,intInfBinary_3,L_77048,L_406167,L_406159,L_406150,L_77048,L_406146,L_406142,L_406134,L_77048,L_406125,L_406119,L_406110,L_77048,L_406101,L_406092,L_406083,L_77048,L_406079,L_406075,L_406071,L_77048,L_406063,L_406057,L_406051,L_77048,L_406045,L_406037,L_406031,L_77048,L_406025,L_406017,L_406014,L_77048,L_406011,L_406008,L_406005,L_77048,L_406001,L_405997,L_405993,L_77048,L_405989,L_405985,L_405977,L_77048,L_405974,L_405966,L_405958,L_77048,L_405954,L_405950,L_405949,L_77048,L_405948,L_405947,L_405946,L_77048,L_405945,L_405944,L_405943,L_77048,L_405942,L_405941,L_405940,L_77048,L_405939,L_405938,L_405937,L_77048,L_405936,L_405935,L_405931,L_77048,L_405930,L_405929,L_405928,L_77048,L_405927,L_405923,L_405922,L_77048,L_405920,L_405918,L_405916,L_77048,L_405912
.text
.p2align 0x4
L_405840:
L_77048:
	movq 0x10(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%rax
	shrq $0x1,%rax
	subq $0xEF5,%rax
	cmpq $0x1E,%rax
	ja L_405841
	leaq jumpTable_197(%rip),%rbx
	jmp *(%rbx,%rax,8)
.data
.p2align 0x4
jumpTable_197:
.quad L_405909,L_405906,L_405905,L_405904,L_405903,L_405902,L_405901,L_405900,L_405897,L_405896,L_405895,L_405894,L_405893,L_405892,L_405891,L_405890,L_405889,L_405888,L_405885,L_405882,L_405881,L_405878,L_405877,L_405876,L_405875,L_405871,L_405867,L_405861,L_405850,L_405847,L_405844
.text
.p2align 0x4
L_405841:
L_77049:
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r13,%r10
	jne L_405843
L_77052:
	testl %r11d,%r11d
	jnz L_77054
L_77085:
	movq $0x1771,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x38(%rbp)
	addq $0x18,%r12
	movq 0xC8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x78(%rbp),%r13
	movq %r13,0x8(%r15)
	movq %r14,0x120(%rbp)
	addq $0x120,%rbp
	leaq (L_77086+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_405843:
L_77051:
	movq 0x30(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq (globalObjptr+0x4D8)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405844:
L_77462:
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r10,%r13
	jne L_77051
L_77464:
	testl %r11d,%r11d
	jnz L_77054
L_77466:
	movq $0x1771,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x38(%rbp)
	addq $0x18,%r12
	movq 0xC0(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x48(%rbp),%r13
	movq %r13,0x8(%r15)
	movq %r14,0x120(%rbp)
	addq $0x120,%rbp
	leaq (L_77467+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_405847:
L_77440:
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r10,%r13
	jne L_77051
L_77442:
	testl %r11d,%r11d
	jnz L_77054
L_77444:
	movq %r14,0x120(%rbp)
	addq $0x120,%rbp
	leaq (L_77445+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_405850:
L_77419:
	movq 0x10(%rbp),%r11
	movq 0x18(%r11),%r14
	movq 0x8(%r11),%r15
	movq 0x0(%rbp),%r11
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r10
	movl %r10d,%ecx
	movslq %ecx,%r13
	cmpq %r10,%r13
	jne L_77051
L_77421:
	testl %ecx,%ecx
	jnz L_77054
L_77423:
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r13
	movl %r13d,%ecx
	movslq %ecx,%r11
	cmpq %r13,%r11
	jne L_77051
L_77425:
	movq 0x18(%rbp),%r11
	movq 0xFFFFFFFFFFFFFFF0(%r11),%r10
	movl %r10d,%ebx
	movslq %ebx,%r9
	cmpq %r10,%r9
	jne L_77051
L_77427:
	cmpl %ecx,%ebx
	jne L_77054
L_77429:
	xorl %ebx,%ebx
.p2align 0x4,,0x7
loop_921:
	cmpl %ecx,%ebx
	je L_405854
L_77430:
	movslq %ebx,%r11
	cmpq %r13,%r11
	jnb L_76975
L_77432:
	movq 0x18(%rbp),%r10
	movq 0x0(%r10,%r11,8),%r9
	movq 0x0(%r15,%r11,8),%r8
	movq 0x10(%r8),%rsp
	cmpq %rsp,0x10(%r9)
	jne L_77054
L_77434:
	incl %ebx
	jo L_405851
L_77436:
	jmp loop_921
.p2align 0x4
L_405851:
L_77435:
	movq 0x30(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq %r15,%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405854:
L_77437:
	movq 0x8(%rbp),%r15
	movq 0x10(%r14),%r13
	cmpq %r13,0x10(%r15)
	jne L_77054
L_77097:
	movq 0x30(%rbp),%r15
	movq %r15,(gcState+0x20)(%rip)
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_405861:
L_77408:
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_77051
L_77410:
	testl %r13d,%r13d
	jnz L_77054
L_77412:
	movq 0x18(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_77051
L_77414:
	testl %r13d,%r13d
	jnz L_77054
L_77416:
	movq 0x48(%rbp),%r15
	movq 0x8(%rbp),%r14
	movq 0x10(%r14),%r13
	cmpq %r13,0x10(%r15)
	je L_77097
	jmp L_77054
.p2align 0x4
L_405867:
L_77380:
	movq 0x10(%rbp),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x20(%rbp)
	movb 0x0(%r13),%dl
	movq 0x0(%rbp),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r11
	movl %r11d,%r10d
	movslq %r10d,%r15
	cmpq %r11,%r15
	jne L_77051
L_77382:
	testl %r10d,%r10d
	jnz L_77054
L_77384:
	movq 0x60(%rbp),%r13
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r11
	movq 0x8(%r11),%r15
	movq 0x0(%r11),%r10
	testb %dl,%dl
	jnz L_405868
L_77385:
L_77386:
	movq %r14,0x130(%rbp)
	movl 0x0(%r15),%r14d
	movl %r14d,0x128(%rbp)
	movzbq %dl,%r15
	shlq $0x3,%r15
	orq $0x5,%r15
	movq %r15,0x120(%rbp)
	addq $0x120,%rbp
	leaq (L_77387+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lookup_1
.p2align 0x4
L_405868:
L_77407:
	movq %r10,%r15
	jmp L_77386
.p2align 0x4
L_405871:
L_77352:
	movq 0x10(%rbp),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x20(%rbp)
	movb 0x4(%r13),%dl
	movq 0x0(%rbp),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r11
	movl %r11d,%r10d
	movslq %r10d,%r15
	cmpq %r15,%r11
	jne L_77051
L_77354:
	testl %r10d,%r10d
	jnz L_77054
L_77356:
	movq 0x60(%rbp),%r13
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r11
	movq 0x8(%r11),%r15
	movq 0x0(%r11),%r10
	testb %dl,%dl
	jnz L_405872
L_77357:
L_77358:
	movq %r14,0x130(%rbp)
	movl 0x0(%r15),%r14d
	movl %r14d,0x128(%rbp)
	movzbq %dl,%r15
	shlq $0x3,%r15
	orq $0x5,%r15
	movq %r15,0x120(%rbp)
	addq $0x120,%rbp
	leaq (L_77359+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lookup_1
.p2align 0x4
L_405872:
L_77379:
	movq %r10,%r15
	jmp L_77358
.p2align 0x4
L_405875:
L_77351:
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
x_220:
	movq 0x20(%rbp),%r15
	movq %r15,0x120(%rbp)
	addq $0x120,%rbp
	leaq (L_77152+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_405876:
L_77350:
	movq 0x10(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	jmp x_220
.p2align 0x4
L_405877:
L_77349:
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	jmp x_220
.p2align 0x4
L_405878:
L_77321:
	movq 0x10(%rbp),%r14
	movb 0x0(%r14),%r15b
	movb %r15b,0x20(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x38(%rbp)
	movq 0x0(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r13,%r10
	jne L_77051
L_77323:
	testl %r11d,%r11d
	jnz L_77054
L_77325:
	movq %r15,0x120(%rbp)
	addq $0x120,%rbp
	leaq (L_77326+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_405881:
L_77320:
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
x_222:
	movq 0x20(%rbp),%r15
	movq %r15,0x120(%rbp)
	addq $0x120,%rbp
	leaq (L_77265+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_405882:
L_77287:
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x20(%rbp)
	movq 0x10(%r14),%r13
	movq %r13,0x38(%rbp)
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r11d
	movslq %r11d,%r10
	cmpq %r14,%r10
	jne L_77051
L_77289:
	testl %r11d,%r11d
	jnz L_77054
L_77291:
	movq %r13,0x120(%rbp)
	addq $0x120,%rbp
	leaq (L_77292+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_405885:
L_77286:
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
wordShift_0:
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_77051
L_77177:
	testl %r13d,%r13d
	jnz L_77054
L_77179:
	movq 0x20(%rbp),%r15
	movq %r15,0x120(%rbp)
	addq $0x120,%rbp
	leaq (L_77180+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_405888:
L_77264:
	movq 0x10(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	jmp x_222
.p2align 0x4
L_405889:
L_77263:
	movq 0x10(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	jmp x_220
.p2align 0x4
L_405890:
L_77262:
	movq 0x10(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	jmp x_220
.p2align 0x4
L_405891:
L_77261:
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
x_221:
	movq 0x20(%rbp),%r15
	movq %r15,0x120(%rbp)
	addq $0x120,%rbp
	leaq (L_77237+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_405892:
L_77260:
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	jmp x_221
.p2align 0x4
L_405893:
L_77236:
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	jmp x_221
.p2align 0x4
L_405894:
L_77235:
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	jmp x_220
.p2align 0x4
L_405895:
L_77234:
	movq 0x10(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	jmp x_220
.p2align 0x4
L_405896:
L_77233:
	movq 0x10(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	jmp x_220
.p2align 0x4
L_405897:
L_77205:
	movq 0x10(%rbp),%r14
	movb 0x4(%r14),%r15b
	movb %r15b,0x20(%rbp)
	movq 0x8(%r14),%r15
	movq %r15,0x38(%rbp)
	movq 0x0(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r10,%r13
	jne L_77051
L_77207:
	testl %r11d,%r11d
	jnz L_77054
L_77209:
	movq %r15,0x120(%rbp)
	addq $0x120,%rbp
	leaq (L_77210+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_405900:
L_77204:
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	jmp wordShift_0
.p2align 0x4
L_405901:
L_77203:
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	jmp wordShift_0
.p2align 0x4
L_405902:
L_77175:
	movq 0x10(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	jmp wordShift_0
.p2align 0x4
L_405903:
L_77174:
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	jmp x_220
.p2align 0x4
L_405904:
L_77173:
	movq 0x10(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x20(%rbp)
	jmp x_220
.p2align 0x4
L_405905:
L_77151:
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	jmp x_220
.p2align 0x4
L_405906:
L_77132:
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r10,%r13
	jne L_77051
L_77134:
	testl %r11d,%r11d
	jnz L_77054
L_77136:
	movq $0x1771,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x40(%rbp)
	addq $0x18,%r12
	movq 0xC8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x38(%rbp),%r13
	movq %r13,0x8(%r15)
	movq %r14,0x120(%rbp)
	addq $0x120,%rbp
	leaq (L_77137+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_405909:
L_77110:
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r13,%r10
	jne L_77051
L_77112:
	testl %r11d,%r11d
	jnz L_77054
L_77114:
	movq %r14,0x120(%rbp)
	addq $0x120,%rbp
	leaq (L_77115+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
L_405912:
L_78515:
	movq 0x10(%rbp),%r14
	movq %r14,%r15
	shrq $0x10,%r15
	movb %r15b,0x20(%rbp)
	shrq $0x8,%r14
	movb %r14b,%dl
	movq 0x0(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movslq %r11d,%r15
	cmpq %r13,%r15
	jne L_77051
L_78517:
	testl %r11d,%r11d
	jnz L_77054
L_78519:
	movq 0x60(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x38(%rbp)
	movq 0x0(%r14),%r13
	movq 0x8(%r13),%r15
	movq %r15,0x40(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x48(%rbp)
	testb %dl,%dl
	jnz L_405913
L_78520:
L_78521:
	movl 0x0(%r15),%r14d
	movl %r14d,0xC0(%rbp)
	movzbq %dl,%r15
	shlq $0x3,%r15
	orq $0x5,%r15
	movq %r15,0xB8(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xB8,%rbp
	leaq (L_78522+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lookup_1
.p2align 0x4
L_405913:
L_78537:
	movq 0x48(%rbp),%r14
	xchgq %r14,%r15
	jmp L_78521
.p2align 0x4
L_405916:
L_78514:
	movq 0x10(%rbp),%r15
	shrq $0x8,%r15
	movb %r15b,%dl
x_224:
	movq 0x60(%rbp),%r13
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r11
	movq 0x8(%r11),%r15
	movq 0x0(%r11),%r10
	testb %dl,%dl
	jnz L_405917
L_78414:
L_78415:
	movq %r14,0xC8(%rbp)
	movl 0x0(%r15),%r14d
	movl %r14d,0xC0(%rbp)
	movzbq %dl,%r15
	shlq $0x3,%r15
	orq $0x5,%r15
	movq %r15,0xB8(%rbp)
	addq $0xB8,%rbp
	leaq (L_78416+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lookup_1
.p2align 0x4
L_405917:
L_78429:
	movq %r10,%r15
	jmp L_78415
.p2align 0x4
L_405918:
L_78513:
	movq 0x10(%rbp),%r15
	shrq $0x8,%r15
	movb %r15b,%dl
x_223:
	movq 0x60(%rbp),%r13
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r11
	movq 0x8(%r11),%r15
	movq 0x0(%r11),%r10
	testb %dl,%dl
	jnz L_405919
L_78393:
L_78394:
	movq %r14,0xC8(%rbp)
	movl 0x0(%r15),%r14d
	movl %r14d,0xC0(%rbp)
	movzbq %dl,%r15
	shlq $0x3,%r15
	orq $0x5,%r15
	movq %r15,0xB8(%rbp)
	addq $0xB8,%rbp
	leaq (L_78395+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lookup_1
.p2align 0x4
L_405919:
L_78410:
	movq %r10,%r15
	jmp L_78394
.p2align 0x4
L_405920:
L_78512:
	movq 0x10(%rbp),%r15
	shrq $0x8,%r15
	movb %r15b,%dl
x_225:
	movq 0x60(%rbp),%r13
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r11
	movq 0x8(%r11),%r15
	movq 0x0(%r11),%r10
	testb %dl,%dl
	jnz L_405921
L_78441:
L_78442:
	movq %r14,0xC8(%rbp)
	movl 0x0(%r15),%r14d
	movl %r14d,0xC0(%rbp)
	movzbq %dl,%r15
	shlq $0x3,%r15
	orq $0x5,%r15
	movq %r15,0xB8(%rbp)
	addq $0xB8,%rbp
	leaq (L_78443+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lookup_1
.p2align 0x4
L_405921:
L_78456:
	movq %r10,%r15
	jmp L_78442
.p2align 0x4
L_405922:
L_78511:
	movq 0x10(%rbp),%r15
	shrq $0x8,%r15
	movb %r15b,%dl
	jmp x_223
.p2align 0x4
L_405923:
L_78510:
	movq 0x10(%rbp),%r15
	shrq $0x8,%r15
	movb %r15b,%r14b
	movb %r14b,0x20(%rbp)
realTernary_0:
	movq 0x0(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movslq %r11d,%r15
	cmpq %r13,%r15
	jne L_77051
L_78483:
	testl %r11d,%r11d
	jnz L_77054
L_78485:
	movq 0x60(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x38(%rbp)
	movq 0x0(%r14),%r13
	movq 0x8(%r13),%r15
	movq %r15,0x40(%rbp)
	movq 0x0(%r13),%r11
	movq %r11,0x48(%rbp)
	movb 0x20(%rbp),%r14b
	testb %r14b,%r14b
	jnz L_405924
L_78486:
L_78487:
	movl 0x0(%r15),%r14d
	movl %r14d,0xC0(%rbp)
	movzbq 0x20(%rbp),%r15
	shlq $0x3,%r15
	orq $0x5,%r15
	movq %r15,0x50(%rbp)
	movq %r15,0xB8(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xB8,%rbp
	leaq (L_78488+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lookup_1
.p2align 0x4
L_405924:
L_78509:
	movq 0x48(%rbp),%r14
	xchgq %r14,%r15
	jmp L_78487
.p2align 0x4
L_405927:
L_78481:
	movq 0x10(%rbp),%r15
	shrq $0x8,%r15
	movb %r15b,%r14b
	movb %r14b,0x20(%rbp)
	jmp realTernary_0
.p2align 0x4
L_405928:
L_78480:
	movq 0x10(%rbp),%r15
	shrq $0x8,%r15
	movb %r15b,%dl
	jmp x_224
.p2align 0x4
L_405929:
L_78479:
	movq 0x10(%rbp),%r15
	shrq $0x8,%r15
	movb %r15b,%dl
	jmp x_225
.p2align 0x4
L_405930:
L_78478:
	movq 0x10(%rbp),%r15
	shrq $0x8,%r15
	movb %r15b,%dl
	jmp x_225
.p2align 0x4
L_405931:
L_78457:
	movq 0x10(%rbp),%r15
	shrq $0x8,%r15
	movb %r15b,%r14b
	movb %r14b,0x38(%rbp)
	movq 0x0(%rbp),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r11
	movl %r11d,%r10d
	movslq %r10d,%r15
	cmpq %r15,%r11
	jne L_77051
L_78459:
	testl %r10d,%r10d
	jnz L_77054
L_78461:
	movq 0x60(%rbp),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x40(%rbp)
	movq 0x0(%r13),%r11
	movq 0x8(%r11),%r15
	movq %r15,0x48(%rbp)
	movq 0x0(%r11),%r10
	movq %r10,0x50(%rbp)
	testb %r14b,%r14b
	jnz L_405932
L_78462:
L_78463:
	movl 0x0(%r15),%r14d
	movl %r14d,0xC0(%rbp)
	movzbq 0x38(%rbp),%r15
	shlq $0x3,%r15
	orq $0x5,%r15
	movq %r15,0x58(%rbp)
	movq %r15,0xB8(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xB8,%rbp
	leaq (L_78464+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lookup_1
.p2align 0x4
L_405932:
L_78477:
	movq 0x50(%rbp),%r14
	xchgq %r14,%r15
	jmp L_78463
.p2align 0x4
L_405935:
L_78440:
	movq 0x10(%rbp),%r15
	shrq $0x8,%r15
	movb %r15b,%dl
	jmp x_225
.p2align 0x4
L_405936:
L_78439:
	movq 0x10(%rbp),%r15
	shrq $0x8,%r15
	movb %r15b,%dl
	jmp x_224
.p2align 0x4
L_405937:
L_78438:
	movq 0x10(%rbp),%r15
	shrq $0x8,%r15
	movb %r15b,%dl
	jmp x_224
.p2align 0x4
L_405938:
L_78437:
	movq 0x10(%rbp),%r15
	shrq $0x8,%r15
	movb %r15b,%dl
	jmp x_223
.p2align 0x4
L_405939:
L_78436:
	movq 0x10(%rbp),%r15
	shrq $0x8,%r15
	movb %r15b,%dl
	jmp x_223
.p2align 0x4
L_405940:
L_78435:
	movq 0x10(%rbp),%r15
	shrq $0x8,%r15
	movb %r15b,%dl
	jmp x_223
.p2align 0x4
L_405941:
L_78434:
	movq 0x10(%rbp),%r15
	shrq $0x8,%r15
	movb %r15b,%dl
	jmp x_223
.p2align 0x4
L_405942:
L_78433:
	movq 0x10(%rbp),%r15
	shrq $0x8,%r15
	movb %r15b,%dl
	jmp x_223
.p2align 0x4
L_405943:
L_78432:
	movq 0x10(%rbp),%r15
	shrq $0x8,%r15
	movb %r15b,%dl
	jmp x_223
.p2align 0x4
L_405944:
L_78431:
	movq 0x10(%rbp),%r15
	shrq $0x8,%r15
	movb %r15b,%dl
	jmp x_223
.p2align 0x4
L_405945:
L_78430:
	movq 0x10(%rbp),%r15
	shrq $0x8,%r15
	movb %r15b,%dl
	jmp x_223
.p2align 0x4
L_405946:
L_78413:
	movq 0x10(%rbp),%r15
	shrq $0x8,%r15
	movb %r15b,%dl
	jmp x_224
.p2align 0x4
L_405947:
L_78412:
	movq 0x10(%rbp),%r15
	shrq $0x8,%r15
	movb %r15b,%dl
	jmp x_223
.p2align 0x4
L_405948:
L_78411:
	movq 0x10(%rbp),%r15
	shrq $0x8,%r15
	movb %r15b,%dl
	jmp x_223
.p2align 0x4
L_405949:
L_78392:
	movq 0x10(%rbp),%r15
	shrq $0x8,%r15
	movb %r15b,%dl
	jmp x_223
.p2align 0x4
L_405950:
L_78375:
	movq 0x10(%rbp),%r15
	shrq $0x8,%r15
	movb %r15b,%dl
	movq 0x0(%rbp),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r11
	movl %r11d,%r10d
	movslq %r10d,%r15
	cmpq %r11,%r15
	jne L_77051
L_78377:
	testl %r10d,%r10d
	jnz L_77054
L_78379:
	movq 0x60(%rbp),%r13
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r11
	movq 0x8(%r11),%r15
	movq 0x0(%r11),%r10
	testb %dl,%dl
	jnz L_405951
L_78380:
L_78381:
	movq %r14,0xE0(%rbp)
	movl 0x0(%r15),%r14d
	movl %r14d,0xD8(%rbp)
	movzbq %dl,%r15
	shlq $0x3,%r15
	orq $0x5,%r15
	movq %r15,0xD0(%rbp)
	addq $0xD0,%rbp
	leaq (L_78382+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lookup_1
.p2align 0x4
L_405951:
L_78391:
	movq %r10,%r15
	jmp L_78381
.p2align 0x4
L_405954:
L_78361:
	movq 0x10(%rbp),%r15
	shrq $0x8,%r15
	movb %r15b,%dl
	movq 0x0(%rbp),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r11
	movl %r11d,%r10d
	movslq %r10d,%r15
	cmpq %r11,%r15
	jne L_77051
L_78363:
	testl %r10d,%r10d
	jnz L_77054
L_78365:
	movq $0x1771,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	addq $0x18,%r12
	movq 0xC0(%rbp),%r11
	movq %r11,0x0(%r13)
	movq 0x48(%rbp),%r11
	movq %r11,0x8(%r13)
	movq 0x60(%rbp),%r13
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r11
	movq 0x8(%r11),%r15
	movq 0x0(%r11),%r10
	testb %dl,%dl
	jnz L_405955
L_78366:
L_78367:
	movq %r14,0xC8(%rbp)
	movl 0x0(%r15),%r14d
	movl %r14d,0xC0(%rbp)
	movzbq %dl,%r15
	shlq $0x3,%r15
	orq $0x5,%r15
	movq %r15,0xB8(%rbp)
	addq $0xB8,%rbp
	leaq (L_78368+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lookup_1
.p2align 0x4
L_405955:
L_78374:
	movq %r10,%r15
	jmp L_78367
.p2align 0x4
L_405958:
L_78346:
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_77051
L_78348:
	testl %r13d,%r13d
	jnz L_77054
L_78350:
	movq 0x18(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_77051
L_78352:
	cmpl $0x1,%r13d
	jne L_77054
L_78354:
	cmpq $0x0,%r14
	jna L_76975
L_78356:
	movq 0x0(%r15),%r14
	movq 0x78(%rbp),%r13
	movq 0x10(%r13),%r11
	cmpq %r11,0x10(%r14)
	jne L_77054
L_78358:
	movq 0x8(%rbp),%r15
	movq 0x50(%rbp),%r14
	movq 0x10(%r14),%r13
	cmpq %r13,0x10(%r15)
	je L_77097
	jmp L_77054
.p2align 0x4
L_405966:
L_78331:
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_77051
L_78333:
	testl %r13d,%r13d
	jnz L_77054
L_78335:
	movq 0x18(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_77051
L_78337:
	cmpl $0x1,%r13d
	jne L_77054
L_78339:
	cmpq $0x0,%r14
	jna L_76975
L_78341:
	movq 0x78(%rbp),%r14
	movq 0x10(%r14),%r13
	movq 0x0(%r15),%r14
	cmpq 0x10(%r14),%r13
	jne L_77054
L_78343:
	movq 0x8(%rbp),%r15
	cmpq 0x10(%r15),%r13
	je L_77097
	jmp L_77054
.p2align 0x4
L_405974:
L_78315:
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_77051
L_78317:
	testl %r13d,%r13d
	jnz L_77054
L_78319:
	movq 0xD8(%rbp),%r15
	movl 0x0(%r15),%r14d
	xorl 0x128(%rbp),%r14d
	movl %r14d,0xC0(%rbp)
	movq $0x1D63,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq %r14,0xB8(%rbp)
	movq 0x120(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xB8,%rbp
	leaq (L_78320+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lookup_1
.p2align 0x4
L_405977:
L_78300:
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_77051
L_78302:
	testl %r13d,%r13d
	jnz L_77054
L_78304:
	movq 0x18(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_77051
L_78306:
	cmpl $0x1,%r13d
	jne L_77054
L_78308:
	cmpq $0x0,%r14
	jna L_76975
L_78310:
	movq 0xE0(%rbp),%r14
	movq 0x0(%r15),%r13
	movq 0x10(%r13),%r11
	cmpq %r11,0x10(%r14)
	jne L_77054
L_78312:
	movq 0x8(%rbp),%r15
	movq 0x58(%rbp),%r14
	movq 0x10(%r14),%r13
	cmpq %r13,0x10(%r15)
	je L_77097
	jmp L_77054
.p2align 0x4
L_405985:
L_78282:
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_77051
L_78284:
	cmpl $0x1,%r13d
	jne L_77054
L_78286:
	cmpq $0x0,%r14
	jna L_76975
L_78288:
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x80(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0xC8(%rbp)
	movl 0x0(%r15),%r13d
	xorl 0x0(%r14),%r13d
	movl %r13d,0xC0(%rbp)
	movq $0x1D61,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r14,0x0(%r15)
	movq %r15,0xB8(%rbp)
	addq $0xB8,%rbp
	leaq (L_78289+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lookup_1
.p2align 0x4
L_405989:
L_78264:
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_77051
L_78266:
	cmpl $0x1,%r13d
	jne L_77054
L_78268:
	cmpq $0x0,%r14
	jna L_76975
L_78270:
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x80(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0xC8(%rbp)
	movl 0x0(%r15),%r13d
	xorl 0x0(%r14),%r13d
	movl %r13d,0xC0(%rbp)
	movq $0x1D61,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r14,0x0(%r15)
	movq %r15,0xB8(%rbp)
	addq $0xB8,%rbp
	leaq (L_78271+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lookup_1
.p2align 0x4
L_405993:
L_78246:
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_77051
L_78248:
	cmpl $0x1,%r13d
	jne L_77054
L_78250:
	cmpq $0x0,%r14
	jna L_76975
L_78252:
	movq 0x0(%r15),%r14
	movq 0x80(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0xC8(%rbp)
	movl 0x0(%r15),%r13d
	xorl 0x0(%r14),%r13d
	movl %r13d,0xC0(%rbp)
	movq $0x1D61,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0xB8(%rbp)
	addq $0x10,%r12
	addq $0xB8,%rbp
	leaq (L_78253+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lookup_1
.p2align 0x4
L_405997:
L_78230:
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_77051
L_78232:
	cmpl $0x1,%r13d
	jne L_77054
L_78234:
	cmpq $0x0,%r14
	jna L_76975
L_78236:
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movl 0x0(%r14),%r15d
	xorl 0x128(%rbp),%r15d
	movl %r15d,0xE0(%rbp)
	movq $0x1D63,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r14,0x0(%r15)
	movq %r15,0xD8(%rbp)
	movq 0x120(%rbp),%r15
	movq %r15,0xE8(%rbp)
	addq $0xD8,%rbp
	leaq (L_78237+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lookup_1
.p2align 0x4
L_406001:
L_78212:
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_77051
L_78214:
	cmpl $0x1,%r13d
	jne L_77054
L_78216:
	cmpq $0x0,%r14
	jna L_76975
L_78218:
	movq 0x0(%r15),%r14
	movl 0x0(%r14),%r15d
	xorl 0x128(%rbp),%r15d
	movl %r15d,0xE0(%rbp)
	movq $0x1D63,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0xD8(%rbp)
	addq $0x10,%r12
	movq 0x120(%rbp),%r15
	movq %r15,0xE8(%rbp)
	addq $0xD8,%rbp
	leaq (L_78219+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lookup_1
.p2align 0x4
L_406005:
L_78207:
	movq 0x0(%rbp),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r11
	movl %r11d,%r10d
	movslq %r10d,%r15
	cmpq %r15,%r11
	jne L_77051
L_78209:
	testl %r10d,%r10d
	jnz L_77054
L_78211:
	movq 0xA8(%rbp),%r15
	movq 0xB0(%rbp),%r14
	jmp L_77103
.p2align 0x4
L_406008:
L_78202:
	movq 0x0(%rbp),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r11
	movl %r11d,%r10d
	movslq %r10d,%r15
	cmpq %r15,%r11
	jne L_77051
L_78204:
	testl %r10d,%r10d
	jnz L_77054
L_78206:
	movq 0xA8(%rbp),%r15
	movq 0xB0(%rbp),%r14
	jmp L_77103
.p2align 0x4
L_406011:
L_78197:
	movq 0x0(%rbp),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r11
	movl %r11d,%r10d
	movslq %r10d,%r15
	cmpq %r11,%r15
	jne L_77051
L_78199:
	testl %r10d,%r10d
	jnz L_77054
L_78201:
	movq 0xA8(%rbp),%r15
	movq 0xB0(%rbp),%r14
	jmp L_77103
.p2align 0x4
L_406014:
L_78192:
	movq 0x0(%rbp),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r11
	movl %r11d,%r10d
	movslq %r10d,%r15
	cmpq %r11,%r15
	jne L_77051
L_78194:
	testl %r10d,%r10d
	jnz L_77054
L_78196:
	movq 0xA8(%rbp),%r15
	movq 0xB0(%rbp),%r14
	jmp L_77103
.p2align 0x4
L_406017:
L_78177:
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_77051
L_78179:
	testl %r13d,%r13d
	jnz L_77054
L_78181:
	movq 0x18(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_77051
L_78183:
	cmpl $0x1,%r13d
	jne L_77054
L_78185:
	cmpq $0x0,%r14
	jna L_76975
L_78187:
	movq 0x70(%rbp),%r14
	movq 0x0(%r15),%r13
	movq 0x10(%r13),%r11
	cmpq %r11,0x10(%r14)
	jne L_77054
L_78189:
	movq 0x8(%rbp),%r15
	movq 0x50(%rbp),%r14
	movq 0x10(%r14),%r13
	cmpq %r13,0x10(%r15)
	je L_77097
	jmp L_77054
.p2align 0x4
L_406025:
L_78166:
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_77051
L_78168:
	testl %r13d,%r13d
	jnz L_77054
L_78170:
	movq 0x18(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_77051
L_78172:
	testl %r13d,%r13d
	jnz L_77054
L_78174:
	movq 0x8(%rbp),%r15
	movq 0x50(%rbp),%r14
	movq 0x10(%r14),%r13
	cmpq %r13,0x10(%r15)
	je L_77097
	jmp L_77054
.p2align 0x4
L_406031:
L_78155:
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_77051
L_78157:
	testl %r13d,%r13d
	jnz L_77054
L_78159:
	movq 0x18(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_77051
L_78161:
	testl %r13d,%r13d
	jnz L_77054
L_78163:
	movq 0x50(%rbp),%r15
	movq 0x8(%rbp),%r14
	movq 0x10(%r14),%r13
	cmpq %r13,0x10(%r15)
	je L_77097
	jmp L_77054
.p2align 0x4
L_406037:
L_78140:
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_77051
L_78142:
	testl %r13d,%r13d
	jnz L_77054
L_78144:
	movq 0x18(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_77051
L_78146:
	cmpl $0x1,%r13d
	jne L_77054
L_78148:
	cmpq $0x0,%r14
	jna L_76975
L_78150:
	movq 0x70(%rbp),%r14
	movq 0x10(%r14),%r13
	movq 0x0(%r15),%r14
	cmpq %r13,0x10(%r14)
	jne L_77054
L_78152:
	movq 0x8(%rbp),%r15
	cmpq 0x10(%r15),%r13
	je L_77097
	jmp L_77054
.p2align 0x4
L_406045:
L_78129:
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_77051
L_78131:
	testl %r13d,%r13d
	jnz L_77054
L_78133:
	movq 0x18(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_77051
L_78135:
	testl %r13d,%r13d
	jnz L_77054
L_78137:
	movq 0x8(%rbp),%r15
	movq 0xF0(%rbp),%r14
	movq 0x10(%r14),%r13
	cmpq %r13,0x10(%r15)
	je L_77097
	jmp L_77054
.p2align 0x4
L_406051:
L_78118:
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_77051
L_78120:
	testl %r13d,%r13d
	jnz L_77054
L_78122:
	movq 0x18(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_77051
L_78124:
	testl %r13d,%r13d
	jnz L_77054
L_78126:
	movq 0x8(%rbp),%r15
	movq 0x50(%rbp),%r14
	movq 0x10(%r14),%r13
	cmpq %r13,0x10(%r15)
	je L_77097
	jmp L_77054
.p2align 0x4
L_406057:
L_78107:
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_77051
L_78109:
	testl %r13d,%r13d
	jnz L_77054
L_78111:
	movq 0x18(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_77051
L_78113:
	testl %r13d,%r13d
	jnz L_77054
L_78115:
	movq 0x50(%rbp),%r15
	movq 0x8(%rbp),%r14
	movq 0x10(%r14),%r13
	cmpq %r13,0x10(%r15)
	je L_77097
	jmp L_77054
.p2align 0x4
L_406063:
L_78092:
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_77051
L_78094:
	testl %r13d,%r13d
	jnz L_77054
L_78096:
	movq 0x18(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_77051
L_78098:
	cmpl $0x1,%r13d
	jne L_77054
L_78100:
	cmpq $0x0,%r14
	jna L_76975
L_78102:
	movq 0x78(%rbp),%r14
	movq 0x10(%r14),%r13
	movq 0x0(%r15),%r14
	cmpq 0x10(%r14),%r13
	jne L_77054
L_78104:
	movq 0x8(%rbp),%r15
	cmpq 0x10(%r15),%r13
	je L_77097
	jmp L_77054
.p2align 0x4
L_406071:
L_78074:
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_77051
L_78076:
	cmpl $0x1,%r13d
	jne L_77054
L_78078:
	cmpq $0x0,%r14
	jna L_76975
L_78080:
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x68(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0xC8(%rbp)
	movl 0x0(%r15),%r13d
	xorl 0x0(%r14),%r13d
	movl %r13d,0xC0(%rbp)
	movq $0x1D67,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r14,0x0(%r15)
	movq %r15,0xB8(%rbp)
	addq $0xB8,%rbp
	leaq (L_78081+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lookup_1
.p2align 0x4
L_406075:
L_78056:
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_77051
L_78058:
	cmpl $0x1,%r13d
	jne L_77054
L_78060:
	cmpq $0x0,%r14
	jna L_76975
L_78062:
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x68(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0xC8(%rbp)
	movl 0x0(%r15),%r13d
	xorl 0x0(%r14),%r13d
	movl %r13d,0xC0(%rbp)
	movq $0x1D67,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r14,0x0(%r15)
	movq %r15,0xB8(%rbp)
	addq $0xB8,%rbp
	leaq (L_78063+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lookup_1
.p2align 0x4
L_406079:
L_78040:
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_77051
L_78042:
	cmpl $0x1,%r13d
	jne L_77054
L_78044:
	cmpq $0x0,%r14
	jna L_76975
L_78046:
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x68(%rbp),%r15
	movq 0x8(%r15),%r13
	movq %r13,0xC8(%rbp)
	movl 0x0(%r15),%r13d
	xorl 0x0(%r14),%r13d
	movl %r13d,0xC0(%rbp)
	movq $0x1D67,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r14,0x0(%r15)
	movq %r15,0xB8(%rbp)
	addq $0xB8,%rbp
	leaq (L_78047+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lookup_1
.p2align 0x4
L_406083:
L_78023:
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_77051
L_78025:
	cmpl $0x1,%r13d
	jne L_77054
L_78027:
	cmpq $0x0,%r14
	jna L_76975
L_78029:
	movq 0x0(%r15),%r14
	movq 0x18(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r13,%r10
	jne L_77051
L_78031:
	cmpl $0x1,%r11d
	jne L_77054
L_78033:
	cmpq $0x0,%r13
	jna L_76975
L_78035:
	movq 0x0(%r15),%r13
	movq 0x10(%r13),%r11
	cmpq %r11,0x10(%r14)
	jne L_77054
L_78037:
	movq 0x8(%rbp),%r15
	movq 0x50(%rbp),%r14
	movq 0x10(%r14),%r13
	cmpq %r13,0x10(%r15)
	je L_77097
	jmp L_77054
.p2align 0x4
L_406092:
L_78006:
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_77051
L_78008:
	cmpl $0x1,%r13d
	jne L_77054
L_78010:
	cmpq $0x0,%r14
	jna L_76975
L_78012:
	movq 0x0(%r15),%r14
	movq 0x18(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r13,%r10
	jne L_77051
L_78014:
	cmpl $0x1,%r11d
	jne L_77054
L_78016:
	cmpq $0x0,%r13
	jna L_76975
L_78018:
	movq 0x0(%r15),%r13
	movq 0x10(%r13),%r11
	cmpq %r11,0x10(%r14)
	jne L_77054
L_78020:
	movq 0x8(%rbp),%r15
	movq 0xB8(%rbp),%r14
	movq 0x10(%r14),%r13
	cmpq %r13,0x10(%r15)
	je L_77097
	jmp L_77054
.p2align 0x4
L_406101:
L_77989:
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_77051
L_77991:
	cmpl $0x1,%r13d
	jne L_77054
L_77993:
	cmpq $0x0,%r14
	jna L_76975
L_77995:
	movq 0x0(%r15),%r14
	movq 0x18(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r10,%r13
	jne L_77051
L_77997:
	cmpl $0x1,%r11d
	jne L_77054
L_77999:
	cmpq $0x0,%r13
	jna L_76975
L_78001:
	movq 0x0(%r15),%r13
	movq 0x10(%r14),%r11
	cmpq %r11,0x10(%r13)
	jne L_77054
L_78003:
	movq 0x8(%rbp),%r15
	movq 0x50(%rbp),%r14
	movq 0x10(%r14),%r13
	cmpq %r13,0x10(%r15)
	je L_77097
	jmp L_77054
.p2align 0x4
L_406110:
L_77972:
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_77051
L_77974:
	cmpl $0x1,%r13d
	jne L_77054
L_77976:
	cmpq $0x0,%r14
	jna L_76975
L_77978:
	movq 0x0(%r15),%r14
	movq 0x18(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r13,%r10
	jne L_77051
L_77980:
	cmpl $0x1,%r11d
	jne L_77054
L_77982:
	cmpq $0x0,%r13
	jna L_76975
L_77984:
	movq 0x0(%r15),%r13
	movq 0x10(%r13),%r11
	cmpq %r11,0x10(%r14)
	jne L_77054
L_77986:
	movq 0x8(%rbp),%r15
	movq 0x78(%rbp),%r14
	movq 0x10(%r14),%r13
	cmpq %r13,0x10(%r15)
	je L_77097
	jmp L_77054
.p2align 0x4
L_406119:
L_77961:
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_77051
L_77963:
	testl %r13d,%r13d
	jnz L_77054
L_77965:
	movq 0x18(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_77051
L_77967:
	testl %r13d,%r13d
	jnz L_77054
L_77969:
	movq 0x50(%rbp),%r15
	movq 0x8(%rbp),%r14
	movq 0x10(%r14),%r13
	cmpq %r13,0x10(%r15)
	je L_77097
	jmp L_77054
.p2align 0x4
L_406125:
L_77944:
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_77051
L_77946:
	cmpl $0x1,%r13d
	jne L_77054
L_77948:
	cmpq $0x0,%r14
	jna L_76975
L_77950:
	movq 0x0(%r15),%r14
	movq 0x18(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r10,%r13
	jne L_77051
L_77952:
	cmpl $0x1,%r11d
	jne L_77054
L_77954:
	cmpq $0x0,%r13
	jna L_76975
L_77956:
	movq 0x0(%r15),%r13
	movq 0x10(%r13),%r11
	cmpq %r11,0x10(%r14)
	jne L_77054
L_77958:
	movq 0xF0(%rbp),%r15
	movq 0x8(%rbp),%r14
	movq 0x10(%r14),%r13
	cmpq %r13,0x10(%r15)
	je L_77097
	jmp L_77054
.p2align 0x4
L_406134:
L_77929:
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_77051
L_77931:
	testl %r13d,%r13d
	jnz L_77054
L_77933:
	movq 0x18(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_77051
L_77935:
	cmpl $0x1,%r13d
	jne L_77054
L_77937:
	cmpq $0x0,%r14
	jna L_76975
L_77939:
	movq 0x0(%r15),%r14
	movq 0x20(%rbp),%r13
	movq 0x10(%r13),%r11
	cmpq %r11,0x10(%r14)
	jne L_77054
L_77941:
	movq 0x8(%rbp),%r15
	movq 0x50(%rbp),%r14
	movq 0x10(%r14),%r13
	cmpq %r13,0x10(%r15)
	je L_77097
	jmp L_77054
.p2align 0x4
L_406142:
L_77917:
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_77051
L_77919:
	cmpl $0x1,%r13d
	jne L_77054
L_77921:
	cmpq $0x0,%r14
	jna L_76975
L_77923:
	movq 0x0(%r15),%r14
	movq $0x1771,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r15,0xB8(%rbp)
	addq $0x18,%r12
	movq 0x18(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xB8,%rbp
	leaq (L_77924+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1452
.p2align 0x4
L_406146:
L_77905:
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_77051
L_77907:
	cmpl $0x1,%r13d
	jne L_77054
L_77909:
	cmpq $0x0,%r14
	jna L_76975
L_77911:
	movq 0x0(%r15),%r14
	movq $0x1771,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r15,0xB8(%rbp)
	addq $0x18,%r12
	movq 0x18(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xB8,%rbp
	leaq (L_77912+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1452
.p2align 0x4
L_406150:
L_77888:
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_77051
L_77890:
	cmpl $0x1,%r13d
	jne L_77054
L_77892:
	cmpq $0x0,%r14
	jna L_76975
L_77894:
	movq 0x0(%r15),%r14
	movq 0x18(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r10,%r13
	jne L_77051
L_77896:
	cmpl $0x1,%r11d
	jne L_77054
L_77898:
	cmpq $0x0,%r13
	jna L_76975
L_77900:
	movq 0x0(%r15),%r13
	movq 0x78(%rbp),%r11
	movq 0x10(%r11),%r10
	cmpq %r10,0x10(%r13)
	jne L_77054
L_77902:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r13
	cmpq %r13,0x10(%r14)
	je L_77097
	jmp L_77054
.p2align 0x4
L_406159:
L_77873:
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_77051
L_77875:
	testl %r13d,%r13d
	jnz L_77054
L_77877:
	movq 0x18(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_77051
L_77879:
	cmpl $0x1,%r13d
	jne L_77054
L_77881:
	cmpq $0x0,%r14
	jna L_76975
L_77883:
	movq 0x0(%r15),%r14
	movq 0x78(%rbp),%r13
	movq 0x10(%r13),%r11
	cmpq %r11,0x10(%r14)
	jne L_77054
L_77885:
	movq 0x8(%rbp),%r15
	movq 0x50(%rbp),%r14
	movq 0x10(%r14),%r13
	cmpq %r13,0x10(%r15)
	je L_77097
	jmp L_77054
.p2align 0x4
L_406167:
L_77860:
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_77051
L_77862:
	cmpl $0x1,%r13d
	jne L_77054
L_77864:
	cmpq $0x0,%r14
	jna L_76975
L_77866:
	movq 0x0(%r15),%r14
	movq 0x18(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r13,%r10
	jne L_77051
L_77868:
	testl %r11d,%r11d
	jnz L_77054
L_77870:
	movq 0x8(%rbp),%r15
	movq 0x10(%r15),%r13
	cmpq %r13,0x10(%r14)
	je L_77097
	jmp L_77054
.p2align 0x4
intInfBinary_3:
intInfBinary_0:
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_77051
L_77761:
	testl %r13d,%r13d
	jnz L_77054
L_77763:
	movq $0x1773,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0xB8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r14,0x10(%r15)
	movq %r15,0xB8(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xB8,%rbp
	leaq (L_77764+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1453
.p2align 0x4
L_406176:
L_77844:
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_77051
L_77846:
	testl %r13d,%r13d
	jnz L_77054
L_77848:
	movq 0x18(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_77051
L_77850:
	cmpl $0x1,%r13d
	jne L_77054
L_77852:
	cmpq $0x0,%r14
	jna L_76975
L_77854:
	movq 0x58(%rbp),%r14
	movq 0x0(%r15),%r13
	movq 0x10(%r13),%r11
	cmpq %r11,0x10(%r14)
	jne L_77054
L_77856:
	movq 0x8(%rbp),%r15
	movq 0xE0(%rbp),%r14
	movq 0x10(%r14),%r13
	cmpq %r13,0x10(%r15)
	je L_77097
	jmp L_77054
.p2align 0x4
L_406184:
L_77828:
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_77051
L_77830:
	testl %r13d,%r13d
	jnz L_77054
L_77832:
	movq 0xD8(%rbp),%r15
	movl 0x0(%r15),%r14d
	xorl 0x128(%rbp),%r14d
	movl %r14d,0xC0(%rbp)
	movq $0x1D63,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq %r15,0x0(%r14)
	movq %r14,0xB8(%rbp)
	movq 0x120(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xB8,%rbp
	leaq (L_77833+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lookup_1
.p2align 0x4
L_406187:
L_77818:
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_77051
L_77820:
	testl %r13d,%r13d
	jnz L_77054
L_77822:
	movq $0x1773,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0xB8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xF0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0xB8(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xB8,%rbp
	leaq (L_77823+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1453
.p2align 0x4
intInfUnary_11:
intInfUnary_0:
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_77051
L_77805:
	testl %r13d,%r13d
	jnz L_77054
L_77807:
	movq $0x1771,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xB8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0xB8(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xB8,%rbp
	leaq (L_77808+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1452
.p2align 0x4
intInfShift_3:
intInfShift_0:
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_77051
L_77772:
	testl %r13d,%r13d
	jnz L_77054
L_77774:
	movq $0x1773,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0xB8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xD0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x58(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0xB8(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xB8,%rbp
	leaq (L_77775+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1453
.p2align 0x4
L_406194:
L_77790:
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_77051
L_77792:
	testl %r13d,%r13d
	jnz L_77054
L_77794:
	movq $0x1771,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r15,0xB8(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xB8,%rbp
	leaq (L_77795+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1452
.p2align 0x4
L_406197:
L_77780:
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_77051
L_77782:
	testl %r13d,%r13d
	jnz L_77054
L_77784:
	movq $0x1771,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r15,0xB8(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xB8,%rbp
	leaq (L_77785+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1452
.p2align 0x4
L_406200:
L_77748:
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_77051
L_77750:
	testl %r13d,%r13d
	jnz L_77054
L_77752:
	movq 0x18(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_77051
L_77754:
	testl %r13d,%r13d
	jnz L_77054
L_77756:
	movq 0x8(%rbp),%r15
	movq 0x50(%rbp),%r14
	movq 0x10(%r14),%r13
	cmpq %r13,0x10(%r15)
	je L_77097
	jmp L_77054
.p2align 0x4
L_406206:
L_77741:
	movq 0x0(%rbp),%r13
	movq 0xFFFFFFFFFFFFFFF0(%r13),%r15
	movl %r15d,%r13d
	movslq %r13d,%r14
	cmpq %r15,%r14
	jne L_77051
L_77743:
	cmpl $0x1,%r13d
	jne L_77054
L_77745:
	cmpq $0x0,%r15
	jna L_76975
L_77747:
	movq 0xA8(%rbp),%r15
	movq 0xB0(%rbp),%r14
	jmp L_77103
.p2align 0x4
L_406210:
L_77726:
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_77051
L_77728:
	testl %r13d,%r13d
	jnz L_77054
L_77730:
	movq 0x18(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_77051
L_77732:
	cmpl $0x1,%r13d
	jne L_77054
L_77734:
	cmpq $0x0,%r14
	jna L_76975
L_77736:
	movq 0x0(%r15),%r14
	movq 0x50(%rbp),%r13
	movq 0x10(%r13),%r11
	cmpq %r11,0x10(%r14)
	jne L_77054
L_77738:
	movq 0x78(%rbp),%r15
	movq 0x8(%rbp),%r14
	movq 0x10(%r14),%r13
	cmpq %r13,0x10(%r15)
	je L_77097
	jmp L_77054
.p2align 0x4
L_406218:
L_77709:
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_77051
L_77711:
	cmpl $0x1,%r13d
	jne L_77054
L_77713:
	cmpq $0x0,%r14
	jna L_76975
L_77715:
	movq 0x0(%r15),%r14
	movq 0x18(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r10,%r13
	jne L_77051
L_77717:
	cmpl $0x1,%r11d
	jne L_77054
L_77719:
	cmpq $0x0,%r13
	jna L_76975
L_77721:
	movq 0x50(%rbp),%r13
	movq 0x0(%r15),%r11
	movq 0x10(%r11),%r10
	cmpq %r10,0x10(%r13)
	jne L_77054
L_77723:
	movq 0x8(%rbp),%r15
	movq 0x10(%r14),%r13
	cmpq %r13,0x10(%r15)
	je L_77097
	jmp L_77054
.p2align 0x4
L_406227:
L_77694:
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_77051
L_77696:
	testl %r13d,%r13d
	jnz L_77054
L_77698:
	movq 0x18(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_77051
L_77700:
	cmpl $0x1,%r13d
	jne L_77054
L_77702:
	cmpq $0x0,%r14
	jna L_76975
L_77704:
	movq 0x48(%rbp),%r14
	movq 0x0(%r15),%r13
	movq 0x10(%r13),%r11
	cmpq %r11,0x10(%r14)
	jne L_77054
L_77706:
	movq 0xB8(%rbp),%r15
	movq 0x8(%rbp),%r14
	movq 0x10(%r14),%r13
	cmpq %r13,0x10(%r15)
	je L_77097
	jmp L_77054
.p2align 0x4
L_406235:
L_77684:
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_77051
L_77686:
	testl %r13d,%r13d
	jnz L_77054
L_77688:
	movq $0x1771,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xC0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0xB8(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xB8,%rbp
	leaq (L_77689+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1452
.p2align 0x4
L_406238:
L_77672:
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_77051
L_77674:
	cmpl $0x1,%r13d
	jne L_77054
L_77676:
	cmpq $0x0,%r14
	jna L_76975
L_77678:
	movq 0x0(%r15),%r14
	movq $0x1773,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	addq $0x20,%r12
	movq 0xC0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0xB8(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xB8,%rbp
	leaq (L_77679+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1453
.p2align 0x4
L_406242:
L_77662:
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_77051
L_77664:
	testl %r13d,%r13d
	jnz L_77054
L_77666:
	movq $0x1773,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xC0(%rbp),%r13
	movq %r13,0x8(%r15)
	movq %r14,0x10(%r15)
	movq %r15,0xB8(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xB8,%rbp
	leaq (L_77667+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1453
.p2align 0x4
L_406245:
L_77652:
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_77051
L_77654:
	testl %r13d,%r13d
	jnz L_77054
L_77656:
	movq $0x1771,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r15,0xB8(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xB8,%rbp
	leaq (L_77657+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1452
.p2align 0x4
L_406248:
L_77640:
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_77051
L_77642:
	cmpl $0x1,%r13d
	jne L_77054
L_77644:
	cmpq $0x0,%r14
	jna L_76975
L_77646:
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq $0x1771,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xC0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0xB8(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xB8,%rbp
	leaq (L_77647+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1452
.p2align 0x4
L_406252:
L_77630:
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_77051
L_77632:
	testl %r13d,%r13d
	jnz L_77054
L_77634:
	movq $0x1771,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xC0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0xB8(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xB8,%rbp
	leaq (L_77635+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1452
.p2align 0x4
L_406255:
L_77615:
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_77051
L_77617:
	testl %r13d,%r13d
	jnz L_77054
L_77619:
	movq 0x18(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_77051
L_77621:
	cmpl $0x1,%r13d
	jne L_77054
L_77623:
	cmpq $0x0,%r14
	jna L_76975
L_77625:
	movq 0x0(%r15),%r14
	movq 0xB8(%rbp),%r13
	movq 0x10(%r13),%r11
	cmpq %r11,0x10(%r14)
	jne L_77054
L_77627:
	movq 0x48(%rbp),%r15
	movq 0x8(%rbp),%r14
	movq 0x10(%r14),%r13
	cmpq %r13,0x10(%r15)
	je L_77097
	jmp L_77054
.p2align 0x4
L_406263:
L_77605:
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_77051
L_77607:
	testl %r13d,%r13d
	jnz L_77054
L_77609:
	movq $0x1771,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r15,0xB8(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xB8,%rbp
	leaq (L_77610+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1452
.p2align 0x4
L_406266:
L_77595:
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_77051
L_77597:
	testl %r13d,%r13d
	jnz L_77054
L_77599:
	movq $0x1771,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r15,0xD0(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0xD8(%rbp)
	addq $0xD0,%rbp
	leaq (L_77600+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1452
.p2align 0x4
L_406269:
L_77585:
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_77051
L_77587:
	testl %r13d,%r13d
	jnz L_77054
L_77589:
	movq $0x1771,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xC0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0xB8(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xB8,%rbp
	leaq (L_77590+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1452
.p2align 0x4
L_406272:
L_77569:
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_77051
L_77571:
	cmpl $0x1,%r13d
	jne L_77054
L_77573:
	cmpq $0x0,%r14
	jna L_76975
L_77575:
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movl 0x0(%r14),%r15d
	xorl 0x118(%rbp),%r15d
	movl %r15d,0xE0(%rbp)
	movq $0x1D6B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r14,0x0(%r15)
	movq %r15,0xD8(%rbp)
	movq 0xF8(%rbp),%r15
	movq %r15,0xE8(%rbp)
	addq $0xD8,%rbp
	leaq (L_77576+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lookup_1
.p2align 0x4
L_406276:
L_77547:
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_77051
L_77549:
	cmpl $0x1,%r13d
	jne L_77054
L_77551:
	cmpq $0x0,%r14
	jna L_76975
L_77553:
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movl 0x0(%r14),%r15d
	movl %r15d,0x38(%rbp)
	movl 0x118(%rbp),%r13d
	xorl %r15d,%r13d
	movl %r13d,0x140(%rbp)
	movq $0x1D6B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r14,0x0(%r15)
	movq %r15,0x138(%rbp)
	movq 0xF8(%rbp),%r15
	movq %r15,0x148(%rbp)
	addq $0x138,%rbp
	leaq (L_77554+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lookup_1
.p2align 0x4
L_406280:
L_77531:
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_77051
L_77533:
	cmpl $0x1,%r13d
	jne L_77054
L_77535:
	cmpq $0x0,%r14
	jna L_76975
L_77537:
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movl 0x0(%r14),%r15d
	xorl 0x118(%rbp),%r15d
	movl %r15d,0xE0(%rbp)
	movq $0x1D6B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq %r14,0x0(%r15)
	movq %r15,0xD8(%rbp)
	movq 0xF8(%rbp),%r15
	movq %r15,0xE8(%rbp)
	addq $0xD8,%rbp
	leaq (L_77538+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lookup_1
.p2align 0x4
L_406285:
L_77513:
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_77051
L_77515:
	cmpl $0x1,%r13d
	jne L_77054
L_77517:
	cmpq $0x0,%r14
	jna L_76975
L_77519:
	movq 0x0(%r15),%r14
	movl 0x0(%r14),%r15d
	xorl 0x118(%rbp),%r15d
	movl %r15d,0xE0(%rbp)
	movq $0x1D6B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0xD8(%rbp)
	addq $0x10,%r12
	movq 0xF8(%rbp),%r15
	movq %r15,0xE8(%rbp)
	addq $0xD8,%rbp
	leaq (L_77520+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lookup_1
.p2align 0x4
L_406289:
L_77499:
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_77051
L_77501:
	cmpl $0x1,%r13d
	jne L_77054
L_77503:
	cmpq $0x0,%r14
	jna L_76975
L_77505:
	movq 0x0(%r15),%r14
	movl 0x0(%r14),%r15d
	xorl 0x118(%rbp),%r15d
	movl %r15d,0xC0(%rbp)
	movq $0x1D6B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0xB8(%rbp)
	addq $0x10,%r12
	movq 0xF8(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xB8,%rbp
	leaq (L_77506+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lookup_1
.p2align 0x4
L_406293:
L_77481:
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_77051
L_77483:
	cmpl $0x1,%r13d
	jne L_77054
L_77485:
	cmpq $0x0,%r14
	jna L_76975
L_77487:
	movq 0x0(%r15),%r14
	movl 0x0(%r14),%r15d
	xorl 0x118(%rbp),%r15d
	movl %r15d,0xE0(%rbp)
	movq $0x1D6B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r15,0xD8(%rbp)
	addq $0x10,%r12
	movq 0xF8(%rbp),%r15
	movq %r15,0xE8(%rbp)
	addq $0xD8,%rbp
	leaq (L_77488+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lookup_1
.p2align 0x4
.long 0x1073
L_77086:
	addq $0xFFFFFFFFFFFFFEE0,%rbp
	movl 0x120(%rbp),%r15d
	movl %r15d,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_77087
L_77108:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x120,%rbp
	leaq (L_77109+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_77109
.p2align 0x4
.long 0x1076
L_77109:
	addq $0xFFFFFFFFFFFFFEE0,%rbp
L_77087:
	movslq 0x40(%rbp),%r15
	cmpq 0x110(%rbp),%r15
	jnb L_76975
L_77089:
	movq 0x108(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	cmpq $0x1,%r13
	je L_77107
L_77090:
	movl 0x0(%r13),%r15d
	movl %r15d,0xC0(%rbp)
	movq $0x1D5F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0xB8(%rbp)
	movq 0x100(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xB8,%rbp
	leaq (L_77091+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lookup_1
.p2align 0x4
.long 0x1073
L_77467:
	addq $0xFFFFFFFFFFFFFEE0,%rbp
	movl 0x120(%rbp),%r15d
	movl %r15d,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_77468
L_77479:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x120,%rbp
	leaq (L_77480+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_77480
.p2align 0x4
.long 0x1076
L_77480:
	addq $0xFFFFFFFFFFFFFEE0,%rbp
L_77468:
	movslq 0x40(%rbp),%r15
	cmpq 0x110(%rbp),%r15
	jnb L_76975
L_77470:
	movq 0x108(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	cmpq $0x1,%r13
	je L_77107
L_77471:
	movl 0x0(%r13),%r15d
	movl %r15d,0xC0(%rbp)
	movq $0x1D5F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0xB8(%rbp)
	movq 0x100(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xB8,%rbp
	leaq (L_77472+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lookup_1
.p2align 0x4
.long 0x1091
L_77445:
	addq $0xFFFFFFFFFFFFFEE0,%rbp
	movl 0x120(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_77446
L_77460:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x120,%rbp
	leaq (L_77461+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_77461
.p2align 0x4
.long 0x1094
L_77461:
	addq $0xFFFFFFFFFFFFFEE0,%rbp
L_77446:
	movslq 0x38(%rbp),%r15
	cmpq 0x110(%rbp),%r15
	jnb L_76975
L_77448:
	movq 0x108(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	cmpq $0x1,%r13
	je L_77107
L_77449:
	movl 0x0(%r13),%r15d
	movl %r15d,0xD8(%rbp)
	movq $0x1D5F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0xD0(%rbp)
	movq 0x100(%rbp),%r15
	movq %r15,0xE0(%rbp)
	addq $0xD0,%rbp
	leaq (L_77450+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lookup_1
.p2align 0x4
.long 0x1090
L_77387:
	addq $0xFFFFFFFFFFFFFEE0,%rbp
	movq 0x120(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x120(%rbp)
	addq $0x120,%rbp
	leaq (L_77388+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
.long 0x1090
L_77359:
	addq $0xFFFFFFFFFFFFFEE0,%rbp
	movq 0x120(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x120(%rbp)
	addq $0x120,%rbp
	leaq (L_77360+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
.long 0x107F
L_77152:
	addq $0xFFFFFFFFFFFFFEE0,%rbp
	movl 0x120(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_77153
L_77171:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x120,%rbp
	leaq (L_77172+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_77172
.p2align 0x4
.long 0x1082
L_77172:
	addq $0xFFFFFFFFFFFFFEE0,%rbp
L_77153:
	movslq 0x38(%rbp),%r15
	cmpq 0x110(%rbp),%r15
	jnb L_76975
L_77155:
	movq 0x108(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	cmpq $0x1,%r13
	je L_77107
L_77156:
	movl 0x0(%r13),%r15d
	movl %r15d,0xC0(%rbp)
	movq $0x1D5F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0xB8(%rbp)
	movq 0x100(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xB8,%rbp
	leaq (L_77157+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lookup_1
.p2align 0x4
.long 0x1089
L_77326:
	addq $0xFFFFFFFFFFFFFEE0,%rbp
	movl 0x120(%rbp),%r15d
	movl %r15d,0x24(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_77327
L_77347:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x120,%rbp
	leaq (L_77348+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_77348
.p2align 0x4
.long 0x108B
L_77348:
	addq $0xFFFFFFFFFFFFFEE0,%rbp
L_77327:
	movslq 0x24(%rbp),%r15
	cmpq 0x110(%rbp),%r15
	jnb L_76975
L_77329:
	movq 0x108(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	cmpq $0x1,%r13
	je L_77107
L_77330:
	movl 0x0(%r13),%r15d
	movl %r15d,0xC0(%rbp)
	movq $0x1D5F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0xB8(%rbp)
	movq 0x100(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xB8,%rbp
	leaq (L_77331+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lookup_1
.p2align 0x4
.long 0x108C
L_77265:
	addq $0xFFFFFFFFFFFFFEE0,%rbp
	movl 0x120(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_77266
L_77284:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x120,%rbp
	leaq (L_77285+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_77285
.p2align 0x4
.long 0x108F
L_77285:
	addq $0xFFFFFFFFFFFFFEE0,%rbp
L_77266:
	movslq 0x38(%rbp),%r15
	cmpq 0x110(%rbp),%r15
	jnb L_76975
L_77268:
	movq 0x108(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	cmpq $0x1,%r13
	je L_77107
L_77269:
	movl 0x0(%r13),%r15d
	movl %r15d,0xC0(%rbp)
	movq $0x1D5F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0xB8(%rbp)
	movq 0x100(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xB8,%rbp
	leaq (L_77270+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lookup_1
.p2align 0x4
.long 0x1073
L_77292:
	addq $0xFFFFFFFFFFFFFEE0,%rbp
	movl 0x120(%rbp),%r15d
	movl %r15d,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_77293
L_77318:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x120,%rbp
	leaq (L_77319+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_77319
.p2align 0x4
.long 0x1076
L_77319:
	addq $0xFFFFFFFFFFFFFEE0,%rbp
L_77293:
	movslq 0x40(%rbp),%r15
	cmpq 0x110(%rbp),%r15
	jnb L_76975
L_77295:
	movq 0x108(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	cmpq $0x1,%r13
	je L_77107
L_77296:
	movl 0x0(%r13),%r15d
	movl %r15d,0x128(%rbp)
	movq $0x1D5F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x120(%rbp)
	movq 0x100(%rbp),%r15
	movq %r15,0x130(%rbp)
	addq $0x120,%rbp
	leaq (L_77297+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lookup_1
.p2align 0x4
.long 0x1083
L_77180:
	addq $0xFFFFFFFFFFFFFEE0,%rbp
	movl 0x120(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_77181
L_77201:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x120,%rbp
	leaq (L_77202+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_77202
.p2align 0x4
.long 0x1088
L_77202:
	addq $0xFFFFFFFFFFFFFEE0,%rbp
L_77181:
	movslq 0x38(%rbp),%r15
	cmpq 0x110(%rbp),%r15
	jnb L_76975
L_77183:
	movq 0x108(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	cmpq $0x1,%r13
	je L_77107
L_77184:
	movl 0x0(%r13),%r15d
	movl %r15d,0x128(%rbp)
	movq $0x1D5F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x38(%rbp)
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x120(%rbp)
	movq 0x100(%rbp),%r15
	movq %r15,0x130(%rbp)
	addq $0x120,%rbp
	leaq (L_77185+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lookup_1
.p2align 0x4
.long 0x107F
L_77237:
	addq $0xFFFFFFFFFFFFFEE0,%rbp
	movl 0x120(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_77238
L_77258:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x120,%rbp
	leaq (L_77259+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_77259
.p2align 0x4
.long 0x1082
L_77259:
	addq $0xFFFFFFFFFFFFFEE0,%rbp
L_77238:
	movslq 0x38(%rbp),%r15
	cmpq 0x110(%rbp),%r15
	jnb L_76975
L_77240:
	movq 0x108(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	cmpq $0x1,%r13
	je L_77107
L_77241:
	movl 0x0(%r13),%r15d
	movl %r15d,0xC0(%rbp)
	movq $0x1D5F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0xB8(%rbp)
	movq 0x100(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xB8,%rbp
	leaq (L_77242+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lookup_1
.p2align 0x4
.long 0x1089
L_77210:
	addq $0xFFFFFFFFFFFFFEE0,%rbp
	movl 0x120(%rbp),%r15d
	movl %r15d,0x24(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_77211
L_77231:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x120,%rbp
	leaq (L_77232+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_77232
.p2align 0x4
.long 0x108B
L_77232:
	addq $0xFFFFFFFFFFFFFEE0,%rbp
L_77211:
	movslq 0x24(%rbp),%r15
	cmpq 0x110(%rbp),%r15
	jnb L_76975
L_77213:
	movq 0x108(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	cmpq $0x1,%r13
	je L_77107
L_77214:
	movl 0x0(%r13),%r15d
	movl %r15d,0xC0(%rbp)
	movq $0x1D5F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0xB8(%rbp)
	movq 0x100(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xB8,%rbp
	leaq (L_77215+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lookup_1
.p2align 0x4
.long 0x107C
L_77137:
	addq $0xFFFFFFFFFFFFFEE0,%rbp
	movl 0x120(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_77138
L_77149:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x120,%rbp
	leaq (L_77150+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_77150
.p2align 0x4
.long 0x107E
L_77150:
	addq $0xFFFFFFFFFFFFFEE0,%rbp
L_77138:
	movslq 0x38(%rbp),%r15
	cmpq 0x110(%rbp),%r15
	jnb L_76975
L_77140:
	movq 0x108(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	cmpq $0x1,%r13
	je L_77107
L_77141:
	movl 0x0(%r13),%r15d
	movl %r15d,0xC0(%rbp)
	movq $0x1D5F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0xB8(%rbp)
	movq 0x100(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xB8,%rbp
	leaq (L_77142+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lookup_1
.p2align 0x4
.long 0x1077
L_77115:
	addq $0xFFFFFFFFFFFFFEE0,%rbp
	movl 0x120(%rbp),%r15d
	movl %r15d,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_77116
L_77130:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x120,%rbp
	leaq (L_77131+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_77131
.p2align 0x4
.long 0x107B
L_77131:
	addq $0xFFFFFFFFFFFFFEE0,%rbp
L_77116:
	movslq 0x40(%rbp),%r15
	cmpq 0x110(%rbp),%r15
	jnb L_76975
L_77118:
	movq 0x108(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	cmpq $0x1,%r13
	je L_77107
L_77119:
	movl 0x0(%r13),%r15d
	movl %r15d,0xE0(%rbp)
	movq $0x1D5F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0xD8(%rbp)
	movq 0x100(%rbp),%r15
	movq %r15,0xE8(%rbp)
	addq $0xD8,%rbp
	leaq (L_77120+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lookup_1
.p2align 0x4
.long 0x10A5
L_78522:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r14
	movq %r14,0x50(%rbp)
	movb 0x20(%rbp),%r14b
	testb %r14b,%r14b
	jnz L_406334
L_78523:
	movq 0x40(%rbp),%r15
L_78524:
	movl 0x0(%r15),%r14d
	movl %r14d,0xC0(%rbp)
	movzbq 0x20(%rbp),%r15
	shlq $0x3,%r15
	orq $0x5,%r15
	movq %r15,0xB8(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xB8,%rbp
	leaq (L_78525+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lookup_1
.p2align 0x4
L_406334:
L_78536:
	movq 0x48(%rbp),%r15
	jmp L_78524
.p2align 0x4
.long 0x1080
L_78416:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_78417
L_78427:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_78428+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_78428
.p2align 0x4
.long 0x1081
L_78428:
	addq $0xFFFFFFFFFFFFFF48,%rbp
L_78417:
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_77051
L_78419:
	testl %r13d,%r13d
	jnz L_77054
L_78421:
	movq $0x1771,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r15,0xB8(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xB8,%rbp
	leaq (L_78422+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1452
.p2align 0x4
.long 0x1080
L_78395:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x0(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r13,%r10
	jne L_77051
L_78397:
	testl %r11d,%r11d
	jnz L_77054
L_78399:
	movq 0x18(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r10,%r13
	jne L_77051
L_78401:
	cmpl $0x1,%r11d
	jne L_77054
L_78403:
	cmpq $0x0,%r13
	jna L_76975
L_78405:
	movq 0x10(%r15),%r13
	movq 0x0(%r14),%r15
	cmpq 0x10(%r15),%r13
	jne L_77054
L_78407:
	movq 0x8(%rbp),%r15
	cmpq 0x10(%r15),%r13
	je L_77097
	jmp L_77054
.p2align 0x4
.long 0x108D
L_78443:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_78444
L_78454:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_78455+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_78455
.p2align 0x4
.long 0x108E
L_78455:
	addq $0xFFFFFFFFFFFFFF48,%rbp
L_78444:
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_77051
L_78446:
	testl %r13d,%r13d
	jnz L_77054
L_78448:
	movq $0x1771,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r15,0xB8(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xB8,%rbp
	leaq (L_78449+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1452
.p2align 0x4
.long 0x10A5
L_78488:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r14
	movq %r14,0x58(%rbp)
	movb 0x20(%rbp),%r14b
	testb %r14b,%r14b
	jnz L_406348
L_78489:
	movq 0x40(%rbp),%r15
L_78490:
	movl 0x0(%r15),%r14d
	movl %r14d,0xC0(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xB8,%rbp
	leaq (L_78491+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lookup_1
.p2align 0x4
L_406348:
L_78508:
	movq 0x48(%rbp),%r15
	jmp L_78490
.p2align 0x4
.long 0x10A2
L_78464:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_78465
L_78475:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_78476+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_78476
.p2align 0x4
.long 0x10A4
L_78476:
	addq $0xFFFFFFFFFFFFFF48,%rbp
L_78465:
	movq $0x1771,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x68(%rbp)
	addq $0x18,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x60(%rbp),%r13
	movq %r13,0x8(%r14)
	movb 0x38(%rbp),%r14b
	testb %r14b,%r14b
	jnz L_406349
L_78466:
	movq 0x48(%rbp),%r15
L_78467:
	movl 0x0(%r15),%r14d
	movl %r14d,0xC0(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xB8,%rbp
	leaq (L_78468+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lookup_1
.p2align 0x4
L_406349:
L_78474:
	movq 0x50(%rbp),%r15
	jmp L_78467
.p2align 0x4
.long 0x1092
L_78382:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movq 0xD0(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_78383
L_78389:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_78390+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_78390
.p2align 0x4
.long 0x1093
L_78390:
	addq $0xFFFFFFFFFFFFFF30,%rbp
L_78383:
	movq $0x1773,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xC0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0xB8(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xB8,%rbp
	leaq (L_78384+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1453
.p2align 0x4
.long 0x1075
L_78368:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xB8,%rbp
	leaq (L_78369+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1452
.p2align 0x4
.long 0x109D
L_78320:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x18(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r10,%r13
	jne L_77051
L_78322:
	cmpl $0x1,%r11d
	jne L_77054
L_78324:
	cmpq $0x0,%r13
	jna L_76975
L_78326:
	movq 0x0(%r14),%r13
	movq 0x10(%r13),%r11
	cmpq %r11,0x10(%r15)
	jne L_77054
L_78328:
	movq 0x58(%rbp),%r15
	movq 0x8(%rbp),%r14
	movq 0x10(%r14),%r13
	cmpq %r13,0x10(%r15)
	je L_77097
	jmp L_77054
.p2align 0x4
.long 0x1075
L_78289:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x18(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r10,%r13
	jne L_77051
L_78291:
	cmpl $0x1,%r11d
	jne L_77054
L_78293:
	cmpq $0x0,%r13
	jna L_76975
L_78295:
	movq 0x0(%r14),%r13
	movq 0x20(%rbp),%r11
	movq 0x10(%r11),%r10
	cmpq %r10,0x10(%r13)
	jne L_77054
L_78297:
	movq 0x8(%rbp),%r14
	movq 0x10(%r14),%r13
	cmpq %r13,0x10(%r15)
	je L_77097
	jmp L_77054
.p2align 0x4
.long 0x1075
L_78271:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x18(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r10,%r13
	jne L_77051
L_78273:
	cmpl $0x1,%r11d
	jne L_77054
L_78275:
	cmpq $0x0,%r13
	jna L_76975
L_78277:
	movq 0x0(%r14),%r13
	movq 0x10(%r13),%r11
	cmpq %r11,0x10(%r15)
	jne L_77054
L_78279:
	movq 0x20(%rbp),%r15
	movq 0x8(%rbp),%r14
	movq 0x10(%r14),%r13
	cmpq %r13,0x10(%r15)
	je L_77097
	jmp L_77054
.p2align 0x4
.long 0x107D
L_78253:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x18(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r13,%r10
	jne L_77051
L_78255:
	cmpl $0x1,%r11d
	jne L_77054
L_78257:
	cmpq $0x0,%r13
	jna L_76975
L_78259:
	movq 0x0(%r14),%r13
	movq 0x10(%r13),%r11
	cmpq %r11,0x10(%r15)
	jne L_77054
L_78261:
	movq 0x8(%rbp),%r15
	movq 0x40(%rbp),%r14
	movq 0x10(%r14),%r13
	cmpq %r13,0x10(%r15)
	je L_77097
	jmp L_77054
.p2align 0x4
.long 0x1097
L_78237:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_78238
L_78244:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_78245+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_78245
.p2align 0x4
.long 0x1098
L_78245:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_78238:
	movq $0x1771,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xC8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0xB8(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xB8,%rbp
	leaq (L_78239+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1452
.p2align 0x4
.long 0x1095
L_78219:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x18(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r10,%r13
	jne L_77051
L_78221:
	cmpl $0x1,%r11d
	jne L_77054
L_78223:
	cmpq $0x0,%r13
	jna L_76975
L_78225:
	movq 0x0(%r14),%r13
	movq 0x10(%r13),%r11
	cmpq %r11,0x10(%r15)
	jne L_77054
L_78227:
	movq 0x8(%rbp),%r15
	movq 0xC8(%rbp),%r14
	movq 0x10(%r14),%r13
	cmpq %r13,0x10(%r15)
	je L_77097
	jmp L_77054
.p2align 0x4
.long 0x1075
L_78081:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x18(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r13,%r10
	jne L_77051
L_78083:
	cmpl $0x1,%r11d
	jne L_77054
L_78085:
	cmpq $0x0,%r13
	jna L_76975
L_78087:
	movq 0x20(%rbp),%r13
	movq 0x0(%r14),%r11
	movq 0x10(%r11),%r10
	cmpq %r10,0x10(%r13)
	jne L_77054
L_78089:
	movq 0x8(%rbp),%r14
	movq 0x10(%r14),%r13
	cmpq %r13,0x10(%r15)
	je L_77097
	jmp L_77054
.p2align 0x4
.long 0x1075
L_78063:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x18(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r13,%r10
	jne L_77051
L_78065:
	cmpl $0x1,%r11d
	jne L_77054
L_78067:
	cmpq $0x0,%r13
	jna L_76975
L_78069:
	movq 0x0(%r14),%r13
	movq 0x10(%r15),%r11
	cmpq %r11,0x10(%r13)
	jne L_77054
L_78071:
	movq 0x20(%rbp),%r15
	movq 0x8(%rbp),%r14
	movq 0x10(%r14),%r13
	cmpq %r13,0x10(%r15)
	je L_77097
	jmp L_77054
.p2align 0x4
.long 0x10A0
L_78047:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_78048
L_78054:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_78055+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_78055
.p2align 0x4
.long 0x10A1
L_78055:
	addq $0xFFFFFFFFFFFFFF48,%rbp
L_78048:
	movq $0x1771,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0xB8(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xB8,%rbp
	leaq (L_78049+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1452
.p2align 0x4
.long 0x107D
L_77924:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movl 0xB8(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	testl %r15d,%r15d
	jz L_77054
L_77926:
	movq 0x8(%rbp),%r15
	movq 0x40(%rbp),%r14
	movq 0x10(%r14),%r13
	cmpq %r13,0x10(%r15)
	je L_77097
	jmp L_77054
.p2align 0x4
.long 0x107D
L_77912:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movl 0xB8(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	testl %r15d,%r15d
	jz L_77054
L_77914:
	movq 0x40(%rbp),%r15
	movq 0x8(%rbp),%r14
	movq 0x10(%r14),%r13
	cmpq %r13,0x10(%r15)
	je L_77097
	jmp L_77054
.p2align 0x4
.long 0x109D
L_77764:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movl 0xB8(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	testl %r15d,%r15d
	jz L_77054
L_77766:
	movq 0x58(%rbp),%r15
	movq 0x8(%rbp),%r14
	movq 0x10(%r14),%r13
	cmpq %r13,0x10(%r15)
	je L_77097
	jmp L_77054
.p2align 0x4
.long 0x109D
L_77833:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x18(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r10,%r13
	jne L_77051
L_77835:
	cmpl $0x1,%r11d
	jne L_77054
L_77837:
	cmpq $0x0,%r13
	jna L_76975
L_77839:
	movq 0x58(%rbp),%r13
	movq 0x0(%r14),%r11
	movq 0x10(%r11),%r10
	cmpq %r10,0x10(%r13)
	jne L_77054
L_77841:
	movq 0x8(%rbp),%r14
	movq 0x10(%r15),%r13
	cmpq %r13,0x10(%r14)
	je L_77097
	jmp L_77054
.p2align 0x4
.long 0x109F
L_77823:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movl 0xB8(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	testl %r15d,%r15d
	jz L_77054
L_77825:
	movq 0x78(%rbp),%r15
	movq 0x8(%rbp),%r14
	movq 0x10(%r14),%r13
	cmpq %r13,0x10(%r15)
	je L_77097
	jmp L_77054
.p2align 0x4
.long 0x109D
L_77808:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movl 0xB8(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	testl %r15d,%r15d
	jz L_77054
L_77810:
	movq 0x8(%rbp),%r15
	movq 0x58(%rbp),%r14
	movq 0x10(%r14),%r13
	cmpq %r13,0x10(%r15)
	je L_77097
	jmp L_77054
.p2align 0x4
.long 0x109D
L_77775:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movl 0xB8(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	testl %r15d,%r15d
	jz L_77054
L_77777:
	movq 0x8(%rbp),%r15
	movq 0x58(%rbp),%r14
	movq 0x10(%r14),%r13
	cmpq %r13,0x10(%r15)
	je L_77097
	jmp L_77054
.p2align 0x4
.long 0x107D
L_77795:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movl 0xB8(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	testl %r15d,%r15d
	jz L_77054
L_77797:
	movq 0x40(%rbp),%r15
	movq 0x8(%rbp),%r14
	movq 0x10(%r14),%r13
	cmpq %r13,0x10(%r15)
	je L_77097
	jmp L_77054
.p2align 0x4
.long 0x109E
L_77785:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movl 0xB8(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	testl %r15d,%r15d
	jz L_77054
L_77787:
	movq 0x88(%rbp),%r15
	movq 0x8(%rbp),%r14
	movq 0x10(%r14),%r13
	cmpq %r13,0x10(%r15)
	je L_77097
	jmp L_77054
.p2align 0x4
.long 0x1086
L_77689:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movl 0xB8(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	testl %r15d,%r15d
	jz L_77054
L_77691:
	movq 0x48(%rbp),%r15
	movq 0x8(%rbp),%r14
	movq 0x10(%r14),%r13
	cmpq %r13,0x10(%r15)
	je L_77097
	jmp L_77054
.p2align 0x4
.long 0x1079
L_77679:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movl 0xB8(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	testl %r15d,%r15d
	jz L_77054
L_77681:
	movq 0x50(%rbp),%r15
	movq 0x8(%rbp),%r14
	movq 0x10(%r14),%r13
	cmpq %r13,0x10(%r15)
	je L_77097
	jmp L_77054
.p2align 0x4
.long 0x1079
L_77667:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movl 0xB8(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	testl %r15d,%r15d
	jz L_77054
L_77669:
	movq 0x8(%rbp),%r15
	movq 0x50(%rbp),%r14
	movq 0x10(%r14),%r13
	cmpq %r13,0x10(%r15)
	je L_77097
	jmp L_77054
.p2align 0x4
.long 0x107D
L_77657:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movl 0xB8(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	testl %r15d,%r15d
	jz L_77054
L_77659:
	movq 0x8(%rbp),%r15
	movq 0x40(%rbp),%r14
	movq 0x10(%r14),%r13
	cmpq %r13,0x10(%r15)
	je L_77097
	jmp L_77054
.p2align 0x4
.long 0x1075
L_77647:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movl 0xB8(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	testl %r15d,%r15d
	jz L_77054
L_77649:
	movq 0x8(%rbp),%r15
	movq 0x20(%rbp),%r14
	movq 0x10(%r14),%r13
	cmpq %r13,0x10(%r15)
	je L_77097
	jmp L_77054
.p2align 0x4
.long 0x1086
L_77635:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movl 0xB8(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	testl %r15d,%r15d
	jz L_77054
L_77637:
	movq 0x8(%rbp),%r15
	movq 0x48(%rbp),%r14
	movq 0x10(%r14),%r13
	cmpq %r13,0x10(%r15)
	je L_77097
	jmp L_77054
.p2align 0x4
.long 0x107D
L_77610:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movl 0xB8(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	testl %r15d,%r15d
	jz L_77054
L_77612:
	movq 0x40(%rbp),%r15
	movq 0x8(%rbp),%r14
	movq 0x10(%r14),%r13
	cmpq %r13,0x10(%r15)
	je L_77097
	jmp L_77054
.p2align 0x4
.long 0x109C
L_77600:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movl 0xD0(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	testl %r15d,%r15d
	jz L_77054
L_77602:
	movq 0x8(%rbp),%r15
	movq 0xC0(%rbp),%r14
	movq 0x10(%r14),%r13
	cmpq %r13,0x10(%r15)
	je L_77097
	jmp L_77054
.p2align 0x4
.long 0x1086
L_77590:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movl 0xB8(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	testl %r15d,%r15d
	jz L_77054
L_77592:
	movq 0x8(%rbp),%r15
	movq 0x48(%rbp),%r14
	movq 0x10(%r14),%r13
	cmpq %r13,0x10(%r15)
	je L_77097
	jmp L_77054
.p2align 0x4
.long 0x109B
L_77576:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_77577
L_77583:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_77584+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_77584
.p2align 0x4
.long 0x107A
L_77584:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_77577:
	movq $0x1773,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xC8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0xB8(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xB8,%rbp
	leaq (L_77578+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1453
.p2align 0x4
.long 0x1099
L_77554:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
	movq 0x138(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_77555
L_77567:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x138,%rbp
	leaq (L_77568+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_77568
.p2align 0x4
.long 0x109A
L_77568:
	addq $0xFFFFFFFFFFFFFEC8,%rbp
L_77555:
	movl 0x38(%rbp),%r15d
	xorl 0x128(%rbp),%r15d
	movl %r15d,0xC0(%rbp)
	movq $0x1D63,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0xB8(%rbp)
	movq 0x120(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xB8,%rbp
	leaq (L_77556+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lookup_1
.p2align 0x4
.long 0x1097
L_77538:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_77539
L_77545:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_77546+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_77546
.p2align 0x4
.long 0x1098
L_77546:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_77539:
	movq $0x1771,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0xC8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq %r15,0xB8(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xB8,%rbp
	leaq (L_77540+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1452
.p2align 0x4
.long 0x1095
L_77520:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x18(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r10,%r13
	jne L_77051
L_77522:
	cmpl $0x1,%r11d
	jne L_77054
L_77524:
	cmpq $0x0,%r13
	jna L_76975
L_77526:
	movq 0x0(%r14),%r13
	movq 0x10(%r13),%r11
	cmpq %r11,0x10(%r15)
	jne L_77054
L_77528:
	movq 0xC8(%rbp),%r15
	movq 0x8(%rbp),%r14
	movq 0x10(%r14),%r13
	cmpq %r13,0x10(%r15)
	je L_77097
	jmp L_77054
.p2align 0x4
.long 0x1096
L_77506:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x18(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r13,%r10
	jne L_77051
L_77508:
	testl %r11d,%r11d
	jnz L_77054
L_77510:
	movq 0x8(%rbp),%r14
	movq 0x10(%r15),%r13
	cmpq %r13,0x10(%r14)
	je L_77097
	jmp L_77054
.p2align 0x4
.long 0x1095
L_77488:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x18(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r13,%r10
	jne L_77051
L_77490:
	cmpl $0x1,%r11d
	jne L_77054
L_77492:
	cmpq $0x0,%r13
	jna L_76975
L_77494:
	movq 0x0(%r14),%r13
	movq 0xC8(%rbp),%r11
	movq 0x10(%r11),%r10
	cmpq %r10,0x10(%r13)
	jne L_77054
L_77496:
	movq 0x8(%rbp),%r14
	movq 0x10(%r14),%r13
	cmpq %r13,0x10(%r15)
	je L_77097
	jmp L_77054
.p2align 0x4
.long 0x1074
L_77091:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xB8,%rbp
	leaq (L_77092+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1452
.p2align 0x4
.long 0x1074
L_77472:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xB8,%rbp
	leaq (L_77473+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1452
.p2align 0x4
.long 0x1092
L_77450:
	addq $0xFFFFFFFFFFFFFF30,%rbp
	movq 0xD0(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_77451
L_77457:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD0,%rbp
	leaq (L_77458+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_77458
.p2align 0x4
.long 0x1093
L_77458:
	addq $0xFFFFFFFFFFFFFF30,%rbp
L_77451:
	movq $0x1773,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xC0(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x48(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0xB8(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xB8,%rbp
	leaq (L_77452+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1453
.p2align 0x4
.long 0x1073
L_77388:
	addq $0xFFFFFFFFFFFFFEE0,%rbp
	movl 0x120(%rbp),%r15d
	movl %r15d,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_77389
L_77405:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x120,%rbp
	leaq (L_77406+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_77406
.p2align 0x4
.long 0x1076
L_77406:
	addq $0xFFFFFFFFFFFFFEE0,%rbp
L_77389:
	movslq 0x40(%rbp),%r15
	cmpq 0x110(%rbp),%r15
	jnb L_76975
L_77391:
	movq 0x108(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	cmpq $0x1,%r13
	je L_77107
L_77392:
	movl 0x0(%r13),%r15d
	movl %r15d,0xC0(%rbp)
	movq $0x1D5F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0xB8(%rbp)
	movq 0x100(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xB8,%rbp
	leaq (L_77393+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lookup_1
.p2align 0x4
.long 0x1073
L_77360:
	addq $0xFFFFFFFFFFFFFEE0,%rbp
	movl 0x120(%rbp),%r15d
	movl %r15d,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_77361
L_77377:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x120,%rbp
	leaq (L_77378+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_77378
.p2align 0x4
.long 0x1076
L_77378:
	addq $0xFFFFFFFFFFFFFEE0,%rbp
L_77361:
	movslq 0x40(%rbp),%r15
	cmpq 0x110(%rbp),%r15
	jnb L_76975
L_77363:
	movq 0x108(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	cmpq $0x1,%r13
	je L_77107
L_77364:
	movl 0x0(%r13),%r15d
	movl %r15d,0xC0(%rbp)
	movq $0x1D5F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0xB8(%rbp)
	movq 0x100(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xB8,%rbp
	leaq (L_77365+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lookup_1
.p2align 0x4
.long 0x1080
L_77157:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_77158
L_77168:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_77169+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_77169
.p2align 0x4
.long 0x1081
L_77169:
	addq $0xFFFFFFFFFFFFFF48,%rbp
L_77158:
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_77051
L_77160:
	testl %r13d,%r13d
	jnz L_77054
L_77162:
	movq $0x1771,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r15,0xB8(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xB8,%rbp
	leaq (L_77163+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1452
.p2align 0x4
.long 0x108A
L_77331:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r13
	movq %r13,0x38(%rbp)
	movq 0x60(%rbp),%r13
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r11
	movq 0x8(%r11),%r15
	movq 0x0(%r11),%r10
	movb 0x20(%rbp),%r13b
	testb %r13b,%r13b
	jnz L_406454
L_77332:
L_77333:
	movq %r14,0xC8(%rbp)
	movl 0x0(%r15),%r14d
	movl %r14d,0xC0(%rbp)
	movzbq 0x20(%rbp),%r15
	shlq $0x3,%r15
	orq $0x5,%r15
	movq %r15,0xB8(%rbp)
	addq $0xB8,%rbp
	leaq (L_77334+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lookup_1
.p2align 0x4
L_406454:
L_77345:
	movq %r10,%r15
	jmp L_77333
.p2align 0x4
.long 0x108D
L_77270:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_77271
L_77281:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_77282+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_77282
.p2align 0x4
.long 0x108E
L_77282:
	addq $0xFFFFFFFFFFFFFF48,%rbp
L_77271:
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_77051
L_77273:
	testl %r13d,%r13d
	jnz L_77054
L_77275:
	movq $0x1771,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r14,0x8(%r15)
	movq %r15,0xB8(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xB8,%rbp
	leaq (L_77276+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1452
.p2align 0x4
.long 0x1090
L_77297:
	addq $0xFFFFFFFFFFFFFEE0,%rbp
	movq 0x120(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x120(%rbp)
	addq $0x120,%rbp
	leaq (L_77298+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
.long 0x1084
L_77185:
	addq $0xFFFFFFFFFFFFFEE0,%rbp
	movq 0x120(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_77186
L_77198:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x120,%rbp
	leaq (L_77199+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_77199
.p2align 0x4
.long 0x1087
L_77199:
	addq $0xFFFFFFFFFFFFFEE0,%rbp
L_77186:
	movq $0x1771,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x48(%rbp)
	addq $0x18,%r12
	movq 0xD0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x20(%rbp),%r15
	movq %r15,0x120(%rbp)
	addq $0x120,%rbp
	leaq (L_77187+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
.long 0x1080
L_77242:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x0(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r10,%r13
	jne L_77051
L_77244:
	testl %r11d,%r11d
	jnz L_77054
L_77246:
	movq 0x18(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r13,%r10
	jne L_77051
L_77248:
	cmpl $0x1,%r11d
	jne L_77054
L_77250:
	cmpq $0x0,%r13
	jna L_76975
L_77252:
	movq 0x10(%r15),%r13
	movq 0x0(%r14),%r15
	cmpq %r13,0x10(%r15)
	jne L_77054
L_77254:
	movq 0x8(%rbp),%r15
	cmpq %r13,0x10(%r15)
	je L_77097
	jmp L_77054
.p2align 0x4
.long 0x108A
L_77215:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r13
	movq %r13,0x38(%rbp)
	movq 0x60(%rbp),%r13
	movq 0x8(%r13),%r14
	movq 0x0(%r13),%r11
	movq 0x8(%r11),%r15
	movq 0x0(%r11),%r10
	movb 0x20(%rbp),%r13b
	testb %r13b,%r13b
	jnz L_406466
L_77216:
L_77217:
	movq %r14,0xC8(%rbp)
	movl 0x0(%r15),%r14d
	movl %r14d,0xC0(%rbp)
	movzbq 0x20(%rbp),%r15
	shlq $0x3,%r15
	orq $0x5,%r15
	movq %r15,0xB8(%rbp)
	addq $0xB8,%rbp
	leaq (L_77218+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lookup_1
.p2align 0x4
L_406466:
L_77229:
	movq %r10,%r15
	jmp L_77217
.p2align 0x4
.long 0x107D
L_77142:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xB8,%rbp
	leaq (L_77143+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1452
.p2align 0x4
.long 0x1078
L_77120:
	addq $0xFFFFFFFFFFFFFF28,%rbp
	movq 0xD8(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_77121
L_77127:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xD8,%rbp
	leaq (L_77128+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_77128
.p2align 0x4
.long 0x107A
L_77128:
	addq $0xFFFFFFFFFFFFFF28,%rbp
L_77121:
	movq $0x1773,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x20,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0xC8(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x10(%r15)
	movq %r15,0xB8(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xB8,%rbp
	leaq (L_77122+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1453
.p2align 0x4
.long 0x1079
L_78525:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x18(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r13,%r10
	jne L_77051
L_78527:
	cmpl $0x1,%r11d
	jne L_77054
L_78529:
	cmpq $0x0,%r13
	jna L_76975
L_78531:
	movq 0x0(%r14),%r13
	movq 0x50(%rbp),%r11
	movq 0x10(%r11),%r10
	cmpq %r10,0x10(%r13)
	jne L_77054
L_78533:
	movq 0x8(%rbp),%r14
	movq 0x10(%r14),%r13
	cmpq %r13,0x10(%r15)
	je L_77097
	jmp L_77054
.p2align 0x4
.long 0x1075
L_78422:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movl 0xB8(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	testl %r15d,%r15d
	jz L_77054
L_78424:
	movq 0x20(%rbp),%r15
	movq 0x8(%rbp),%r14
	movq 0x10(%r14),%r13
	cmpq %r13,0x10(%r15)
	je L_77097
	jmp L_77054
.p2align 0x4
.long 0x107D
L_78449:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movl 0xB8(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	testl %r15d,%r15d
	jz L_77054
L_78451:
	movq 0x40(%rbp),%r15
	movq 0x8(%rbp),%r14
	movq 0x10(%r14),%r13
	cmpq %r13,0x10(%r15)
	je L_77097
	jmp L_77054
.p2align 0x4
.long 0x10A6
L_78491:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r14
	movq %r14,0x60(%rbp)
	movb 0x20(%rbp),%r14b
	testb %r14b,%r14b
	jnz L_406477
L_78492:
	movq 0x40(%rbp),%r15
L_78493:
	movl 0x0(%r15),%r14d
	movl %r14d,0xC0(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xB8,%rbp
	leaq (L_78494+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lookup_1
.p2align 0x4
L_406477:
L_78507:
	movq 0x48(%rbp),%r15
	jmp L_78493
.p2align 0x4
.long 0x10A3
L_78468:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xB8,%rbp
	leaq (L_78469+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1452
.p2align 0x4
.long 0x1079
L_78384:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movl 0xB8(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	testl %r15d,%r15d
	jz L_77054
L_78386:
	movq 0x50(%rbp),%r15
	movq 0x8(%rbp),%r14
	movq 0x10(%r14),%r13
	cmpq %r13,0x10(%r15)
	je L_77097
	jmp L_77054
.p2align 0x4
.long 0x1074
L_78369:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movl 0xB8(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	testl %r15d,%r15d
	jz L_77054
L_78371:
	movq 0x38(%rbp),%r15
	movq 0x8(%rbp),%r14
	movq 0x10(%r14),%r13
	cmpq %r13,0x10(%r15)
	je L_77097
	jmp L_77054
.p2align 0x4
.long 0x1075
L_78239:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movl 0xB8(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	testl %r15d,%r15d
	jz L_77054
L_78241:
	movq 0x20(%rbp),%r15
	movq 0x8(%rbp),%r14
	movq 0x10(%r14),%r13
	cmpq %r13,0x10(%r15)
	je L_77097
	jmp L_77054
.p2align 0x4
.long 0x1079
L_78049:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movl 0xB8(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	testl %r15d,%r15d
	jz L_77054
L_78051:
	movq 0x8(%rbp),%r15
	movq 0x50(%rbp),%r14
	movq 0x10(%r14),%r13
	cmpq %r13,0x10(%r15)
	je L_77097
	jmp L_77054
.p2align 0x4
.long 0x1079
L_77578:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movl 0xB8(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	testl %r15d,%r15d
	jz L_77054
L_77580:
	movq 0x50(%rbp),%r15
	movq 0x8(%rbp),%r14
	movq 0x10(%r14),%r13
	cmpq %r13,0x10(%r15)
	je L_77097
	jmp L_77054
.p2align 0x4
.long 0x107D
L_77556:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x18(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r13,%r10
	jne L_77051
L_77558:
	cmpl $0x1,%r11d
	jne L_77054
L_77560:
	cmpq $0x0,%r13
	jna L_76975
L_77562:
	movq 0x40(%rbp),%r13
	movq 0x0(%r14),%r11
	movq 0x10(%r11),%r10
	cmpq %r10,0x10(%r13)
	jne L_77054
L_77564:
	movq 0x8(%rbp),%r14
	movq 0x10(%r14),%r13
	cmpq %r13,0x10(%r15)
	je L_77097
	jmp L_77054
.p2align 0x4
.long 0x1075
L_77540:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movl 0xB8(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	testl %r15d,%r15d
	jz L_77054
L_77542:
	movq 0x8(%rbp),%r15
	movq 0x20(%rbp),%r14
	movq 0x10(%r14),%r13
	cmpq %r13,0x10(%r15)
	je L_77097
	jmp L_77054
.p2align 0x4
.long 0x1075
L_77092:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movl 0xB8(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	testl %r15d,%r15d
	jz L_77054
L_77094:
	movq 0x20(%rbp),%r15
	movq 0x8(%rbp),%r14
	movq 0x10(%r14),%r13
	cmpq %r13,0x10(%r15)
	je L_77097
	jmp L_77054
.p2align 0x4
.long 0x1075
L_77473:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movl 0xB8(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	testl %r15d,%r15d
	jz L_77054
L_77475:
	movq 0x8(%rbp),%r15
	movq 0x20(%rbp),%r14
	movq 0x10(%r14),%r13
	cmpq %r13,0x10(%r15)
	je L_77097
	jmp L_77054
.p2align 0x4
.long 0x1079
L_77452:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movl 0xB8(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	testl %r15d,%r15d
	jz L_77054
L_77454:
	movq 0x50(%rbp),%r15
	movq 0x8(%rbp),%r14
	movq 0x10(%r14),%r13
	cmpq %r13,0x10(%r15)
	je L_77097
	jmp L_77054
.p2align 0x4
.long 0x1074
L_77393:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x18(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r10,%r13
	jne L_77051
L_77395:
	cmpl $0x1,%r11d
	jne L_77054
L_77397:
	cmpq $0x0,%r13
	jna L_76975
L_77399:
	movq 0x38(%rbp),%r13
	movq 0x0(%r14),%r11
	movq 0x10(%r11),%r10
	cmpq %r10,0x10(%r13)
	jne L_77054
L_77401:
	movq 0x8(%rbp),%r14
	movq 0x10(%r15),%r13
	cmpq %r13,0x10(%r14)
	je L_77097
	jmp L_77054
.p2align 0x4
.long 0x1074
L_77365:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x18(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r10,%r13
	jne L_77051
L_77367:
	cmpl $0x1,%r11d
	jne L_77054
L_77369:
	cmpq $0x0,%r13
	jna L_76975
L_77371:
	movq 0x0(%r14),%r13
	movq 0x38(%rbp),%r11
	movq 0x10(%r11),%r10
	cmpq %r10,0x10(%r13)
	jne L_77054
L_77373:
	movq 0x8(%rbp),%r14
	movq 0x10(%r14),%r13
	cmpq %r13,0x10(%r15)
	je L_77097
	jmp L_77054
.p2align 0x4
.long 0x1075
L_77163:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movl 0xB8(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	testl %r15d,%r15d
	jz L_77054
L_77165:
	movq 0x8(%rbp),%r15
	movq 0x20(%rbp),%r14
	movq 0x10(%r14),%r13
	cmpq %r13,0x10(%r15)
	je L_77097
	jmp L_77054
.p2align 0x4
.long 0x1074
L_77334:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x18(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r13,%r10
	jne L_77051
L_77336:
	cmpl $0x1,%r11d
	jne L_77054
L_77338:
	cmpq $0x0,%r13
	jna L_76975
L_77340:
	movq 0x0(%r14),%r13
	movq 0x38(%rbp),%r11
	movq 0x10(%r11),%r10
	cmpq %r10,0x10(%r13)
	jne L_77054
L_77342:
	movq 0x8(%rbp),%r14
	movq 0x10(%r15),%r13
	cmpq %r13,0x10(%r14)
	je L_77097
	jmp L_77054
.p2align 0x4
.long 0x107D
L_77276:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movl 0xB8(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	testl %r15d,%r15d
	jz L_77054
L_77278:
	movq 0x40(%rbp),%r15
	movq 0x8(%rbp),%r14
	movq 0x10(%r14),%r13
	cmpq %r13,0x10(%r15)
	je L_77097
	jmp L_77054
.p2align 0x4
.long 0x1073
L_77298:
	addq $0xFFFFFFFFFFFFFEE0,%rbp
	movl 0x120(%rbp),%r15d
	movl %r15d,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_77299
L_77315:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x120,%rbp
	leaq (L_77316+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_77316
.p2align 0x4
.long 0x1076
L_77316:
	addq $0xFFFFFFFFFFFFFEE0,%rbp
L_77299:
	movslq 0x40(%rbp),%r15
	cmpq 0x110(%rbp),%r15
	jnb L_76975
L_77301:
	movq 0x108(%rbp),%r14
	movq 0x0(%r14,%r15,8),%r13
	cmpq $0x1,%r13
	je L_77107
L_77302:
	movl 0x0(%r13),%r15d
	movl %r15d,0xC0(%rbp)
	movq $0x1D5F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0xB8(%rbp)
	movq 0x100(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xB8,%rbp
	leaq (L_77303+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lookup_1
.p2align 0x4
.long 0x1085
L_77187:
	addq $0xFFFFFFFFFFFFFEE0,%rbp
	movl 0x120(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	movslq %r15d,%r14
	cmpq 0x110(%rbp),%r14
	jnb L_76975
L_77189:
	movq 0x108(%rbp),%r15
	movq 0x0(%r15,%r14,8),%r13
	cmpq $0x1,%r13
	je L_77107
L_77190:
	movl 0x0(%r13),%r15d
	movl %r15d,0xC0(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq 0x100(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xB8,%rbp
	leaq (L_77191+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lookup_1
.p2align 0x4
.long 0x1074
L_77218:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x18(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r10,%r13
	jne L_77051
L_77220:
	cmpl $0x1,%r11d
	jne L_77054
L_77222:
	cmpq $0x0,%r13
	jna L_76975
L_77224:
	movq 0x38(%rbp),%r13
	movq 0x0(%r14),%r11
	movq 0x10(%r11),%r10
	cmpq %r10,0x10(%r13)
	jne L_77054
L_77226:
	movq 0x8(%rbp),%r14
	movq 0x10(%r14),%r13
	cmpq %r13,0x10(%r15)
	je L_77097
	jmp L_77054
.p2align 0x4
.long 0x1075
L_77143:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movl 0xB8(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	testl %r15d,%r15d
	jz L_77054
L_77145:
	movq 0x20(%rbp),%r15
	movq 0x8(%rbp),%r14
	movq 0x10(%r14),%r13
	cmpq %r13,0x10(%r15)
	je L_77097
	jmp L_77054
.p2align 0x4
.long 0x1079
L_77122:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movl 0xB8(%rbp),%r15d
	movl %r15d,0x20(%rbp)
	testl %r15d,%r15d
	jz L_77054
L_77124:
	movq 0x8(%rbp),%r15
	movq 0x50(%rbp),%r14
	movq 0x10(%r14),%r13
	cmpq %r13,0x10(%r15)
	je L_77097
	jmp L_77054
.p2align 0x4
.long 0x10A7
L_78494:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_78495
L_78505:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB8,%rbp
	leaq (L_78506+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_78506
.p2align 0x4
.long 0x10A9
L_78506:
	addq $0xFFFFFFFFFFFFFF48,%rbp
L_78495:
	movq $0x1773,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r14,0x70(%rbp)
	addq $0x20,%r12
	movq 0x68(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x60(%rbp),%r13
	movq %r13,0x8(%r14)
	movq 0x58(%rbp),%r13
	movq %r13,0x10(%r14)
	movb 0x20(%rbp),%r14b
	testb %r14b,%r14b
	jnz L_406534
L_78496:
	movq 0x40(%rbp),%r15
L_78497:
	movl 0x0(%r15),%r14d
	movl %r14d,0xC0(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xB8,%rbp
	leaq (L_78498+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lookup_1
.p2align 0x4
L_406534:
L_78504:
	movq 0x48(%rbp),%r15
	jmp L_78497
.p2align 0x4
.long 0x1075
L_78469:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movl 0xB8(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	testl %r15d,%r15d
	jz L_77054
L_78471:
	movq 0x20(%rbp),%r15
	movq 0x8(%rbp),%r14
	movq 0x10(%r14),%r13
	cmpq %r13,0x10(%r15)
	je L_77097
	jmp L_77054
.p2align 0x4
.long 0x1074
L_77303:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x18(%rbp),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r13
	movl %r13d,%r11d
	movslq %r11d,%r10
	cmpq %r13,%r10
	jne L_77051
L_77305:
	cmpl $0x1,%r11d
	jne L_77054
L_77307:
	cmpq $0x0,%r13
	jna L_76975
L_77309:
	movq 0x38(%rbp),%r13
	movq 0x0(%r14),%r11
	movq 0x10(%r11),%r10
	cmpq %r10,0x10(%r13)
	jne L_77054
L_77311:
	movq 0x8(%rbp),%r14
	movq 0x10(%r15),%r13
	cmpq %r13,0x10(%r14)
	je L_77097
	jmp L_77054
.p2align 0x4
.long 0x1086
L_77191:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xB8,%rbp
	leaq (L_77192+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1452
.p2align 0x4
.long 0x10A8
L_78498:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0x20(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xB8,%rbp
	leaq (L_78499+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1453
.p2align 0x4
.long 0x1075
L_77192:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movl 0xB8(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	testl %r15d,%r15d
	jz L_77054
L_77194:
	movq 0x20(%rbp),%r15
	movq 0x8(%rbp),%r14
	movq 0x10(%r14),%r13
	cmpq %r13,0x10(%r15)
	je L_77097
	jmp L_77054
.p2align 0x4
.long 0x1075
L_78499:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movl 0xB8(%rbp),%r15d
	movl %r15d,0x38(%rbp)
	testl %r15d,%r15d
	jz L_77054
L_78501:
	movq 0x8(%rbp),%r15
	movq 0x20(%rbp),%r14
	movq 0x10(%r14),%r13
	cmpq %r13,0x10(%r15)
	je L_77097
	jmp L_77054
.text
.p2align 0x4
.globl x_1452
.hidden x_1452
x_1452:
L_78606:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_78607
L_78620:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_78621+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_78621
.p2align 0x4
.long 0x45F
L_78621:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_78607:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r11
	movl %r11d,%r10d
	movslq %r10d,%r9
	cmpq %r11,%r9
	jne L_406551
L_78609:
	cmpl $0x2,%r10d
	jne L_78611
L_78612:
	cmpq $0x0,%r11
	jna L_78614
L_78615:
	movq 0x0(%r15),%r10
	movq 0x10(%r10),%r9
	cmpq %r9,0x10(%r13)
	jne L_406548
L_78617:
	cmpq $0x1,%r11
	jna L_406547
L_78619:
	movq 0x8(%r15),%r13
	movq 0x10(%r13),%r11
	cmpq %r11,0x10(%r14)
	sete %al
	movzbl %al,%eax
	movl %eax,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_406547:
L_78614:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_406548:
L_78611:
	movl $0x0,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_406551:
L_78608:
	movq (globalObjptr+0x4D8)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl x_1453
.hidden x_1453
x_1453:
L_78622:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_78623
L_78640:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_78641+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_78641
.p2align 0x4
.long 0x45F
L_78641:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_78623:
	movq 0x0(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r13
	movq 0x10(%r15),%r11
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r10
	movl %r10d,%r9d
	movslq %r9d,%r8
	cmpq %r10,%r8
	jne L_406559
L_78625:
	cmpl $0x3,%r9d
	jne L_78627
L_78628:
	cmpq $0x0,%r10
	jna L_78630
L_78631:
	movq 0x0(%r15),%r9
	movq 0x10(%r9),%r8
	cmpq %r8,0x10(%r11)
	jne L_78627
L_78633:
	cmpq $0x1,%r10
	jna L_78630
L_78635:
	movq 0x8(%r15),%r11
	movq 0x10(%r13),%r9
	cmpq %r9,0x10(%r11)
	jne L_406554
L_78637:
	cmpq $0x2,%r10
	jna L_406553
L_78639:
	movq 0x10(%r15),%r13
	movq 0x10(%r13),%r11
	cmpq %r11,0x10(%r14)
	sete %al
	movzbl %al,%eax
	movl %eax,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_406553:
L_78630:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_406554:
L_78627:
	movl $0x0,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_406559:
L_78624:
	movq (globalObjptr+0x4D8)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl tabulate_23
.hidden tabulate_23
tabulate_23:
L_78642:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_78643
L_78675:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_78676+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_78676
.p2align 0x4
.long 0x457
L_78676:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_78643:
	movslq 0x8(%rbp),%rdx
	movq %rdx,0x10(%rbp)
	testq %rdx,%rdx
	jz L_406575
L_78644:
	cmpq $0x7FFFFFFF,%rdx
	ja L_406574
L_78645:
	movq (c_stackP+0x0)(%rip),%rsp
	movq $0x1467,%rcx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_78646+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_arrayAllocate
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_78646
.p2align 0x4
.long 0x452
L_78646:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq %rax,0x8(%rbp)
L_78647:
	movq $0x0,0x18(%rbp)
.p2align 0x4,,0x7
loop_922:
	movq 0x18(%rbp),%r13
	cmpq 0x10(%rbp),%r13
	jnl L_406573
L_78649:
	movl %r13d,%r11d
	movq 0x0(%rbp),%r13
	cmpq $0x1,%r13
	je L_406572
L_78650:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r15
	shrq $0x1,%r15
	cmpq $0x1C8D,%r15
	je L_406571
	cmpq $0x1C8E,%r15
	je L_406570
	cmpq $0x1C8F,%r15
	je L_406568
	cmpq $0x1C90,%r15
	je L_406567
	cmpq $0x1C91,%r15
	je L_406566
	cmpq $0x1C92,%r15
	je L_406563
L_78651:
	movslq %r11d,%r15
	movq 0x8(%r13),%r11
	movq 0x0(%r11,%r15,8),%r14
	movq 0x0(%r13),%r11
	movq 0x8(%r11),%r15
	movq 0x0(%r11),%r10
	movq %r14,%r13
	andq $0x1,%r13
	cmpq $0x1,%r13
	jne L_406562
L_78656:
	shrq $0x1,%r14
	movl %r14d,%r13d
	movslq %r13d,%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	jnb L_406561
L_78659:
	movq 0x0(%r15,%r14,8),%r13
	movq 0x8(%r13),%r13
	movq %r13,%r15
	movq %r10,%r14
L_78653:
	movq %r15,0x28(%rbp)
	movq %r14,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_78654+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1388
.p2align 0x4
L_406561:
L_78658:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_406562:
L_78652:
	movq %r14,%r15
	movq %r10,%r14
	jmp L_78653
.p2align 0x4
L_406563:
L_78667:
	movslq %r11d,%r15
	movq 0x8(%r13),%r14
	movq 0x0(%r14,%r15,8),%r11
	movq 0x0(%r13),%r14
	movq 0x8(%r14),%r15
	movq 0x0(%r14),%r10
	movq %r11,%r14
	andq $0x1,%r14
	cmpq $0x1,%r14
	jne L_406565
L_78669:
	shrq $0x1,%r11
	movl %r11d,%r14d
	movslq %r14d,%r13
	cmpq 0xFFFFFFFFFFFFFFF0(%r15),%r13
	jnb L_78658
L_78671:
	movq 0x0(%r15,%r13,8),%r14
	movq %r14,%r15
.p2align 0x4,,0x7
L_78655:
	movq 0x8(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq 0x18(%rbp),%r13
	movq %r15,0x0(%r14,%r13,8)
	incq %r13
	movq %r13,0x18(%rbp)
	jmp loop_922
.p2align 0x4
L_406565:
L_78668:
	movq %r11,0x28(%rbp)
	movq %r10,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_78654+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1388
.p2align 0x4
L_406566:
L_78666:
	movq 0x0(%r13),%r15
	movq %r15,0x30(%rbp)
	movslq %r11d,%r15
	movq 0x8(%r13),%r14
	movq 0x0(%r14,%r15,8),%r11
	movq %r11,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_78654+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1388
.p2align 0x4
L_406567:
L_78665:
	movq 0x0(%r13),%r15
	jmp L_78655
.p2align 0x4
L_406568:
L_78662:
	movq 0x0(%r13),%r15
	movq 0x0(%r15),%r14
	cmpq $0x1,%r14
	je L_406569
L_78663:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r10
	movb $0x1,0x0(%r10,%r14,1)
	movq %r13,0x0(%r15)
	movq %r11,%r15
	jmp L_78655
.p2align 0x4
L_406569:
L_78664:
	movq (globalObjptr+0x4B0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_406570:
L_78661:
	movq 0x0(%r13),%r15
	movq %r15,0x30(%rbp)
	movslq %r11d,%r15
	movq 0x8(%r13),%r14
	movq 0x0(%r14,%r15,8),%r11
	movq %r11,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_78654+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1388
.p2align 0x4
L_406571:
L_78660:
	movq 0x0(%r13),%r15
	movq %r15,0x30(%rbp)
	movslq %r11d,%r15
	movq 0x8(%r13),%r14
	movq 0x0(%r14,%r15,8),%r11
	movq %r11,0x28(%rbp)
	addq $0x28,%rbp
	leaq (L_78654+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1388
.p2align 0x4
L_406572:
L_78672:
	movq (globalObjptr+0x4A0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_406573:
L_78648:
	movq 0x8(%rbp),%r15
	movq $0x8DF,0xFFFFFFFFFFFFFFF8(%r15)
	movq %r15,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_406574:
L_78673:
	movq $0x5,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_406575:
L_78674:
	movq (globalObjptr+0xBD8)(%rip),%r15
	movq %r15,0x8(%rbp)
	jmp L_78647
.p2align 0x4
.long 0x5F8
L_78654:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	movq 0x28(%rbp),%r15
	movq %r15,0x20(%rbp)
	jmp L_78655
.text
.p2align 0x4
.globl coerces_0
.hidden coerces_0
coerces_0:
L_78677:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_78780
L_78678:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_406594
L_78679:
	movq 0x8(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movl %r13d,0x18(%rbp)
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_78681
L_78682:
	movq 0x0(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%ecx
	movslq %ecx,%r11
	cmpq %r11,%r14
	jne L_406592
L_78684:
	cmpl %ecx,%r13d
	jne L_78686
L_78687:
	cmpl $0x0,%r13d
	jl L_406590
L_78688:
	xorl %ecx,%ecx
loop_923:
	cmpl 0x18(%rbp),%ecx
	jnl L_406589
L_78690:
	movl %ecx,%r11d
	incl %r11d
	movl %r11d,0x1C(%rbp)
	movslq %ecx,%r15
	movq 0x0(%rbp),%r11
	movq 0x0(%r11,%r15,8),%r10
	movq %r10,0x20(%rbp)
	movq 0x10(%rbp),%r11
	movq 0x8(%r11),%r14
	movq 0x0(%r11),%r10
	movq %r10,0x28(%rbp)
	movq 0x8(%rbp),%r11
	movq 0x0(%r11,%r15,8),%r10
	movq 0x10(%r10),%r9
	movq %r9,0x30(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r11
	movq 0x0(%r11),%r15
	incq %r15
	jo L_406588
L_78692:
	movq %r15,0x0(%r11)
	movq 0x0(%r9),%r11
	cmpq $0x1,%r11
	je L_406587
L_78693:
	movq 0x0(%r11),%r13
	movq 0x8(%r11),%r11
	xorl %ecx,%ecx
	movq %r11,%r15
.p2align 0x4,,0x7
L_78695:
	movq %r13,%r11
	andq $0x3,%r11
	jnz L_406586
L_78771:
	movq 0xFFFFFFFFFFFFFFF8(%r13),%r11
	shrq $0x1,%r11
	cmpq $0xD05,%r11
	jne L_406585
L_78772:
	movq 0x8(%r13),%r11
	cmpq 0x0(%r13),%r14
	movq %r14,(localObjptr+0x8)(%rip)
	je L_406582
L_78696:
	incl %ecx
	movl %ecx,0x38(%rbp)
	jo L_406581
L_78698:
	cmpq $0x1,%r15
	je L_406577
L_78699:
	movq 0x0(%r15),%r13
	movq 0x8(%r15),%r15
	movq (localObjptr+0x8)(%rip),%r14
	jmp L_78695
.p2align 0x4
L_406577:
L_78700:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_78701
L_78769:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_78770+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_78770
.p2align 0x4
.long 0x10BA
L_78770:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_78701:
	movl 0x38(%rbp),%ecx
L_78702:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_406579
L_78704:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_78706
L_78768:
	movl %ecx,0x0(%r15)
L_78706:
	movq $0x27BB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x28A1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x72B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x38(%rbp)
	movq %r14,0x0(%r15)
	addq $0x10,%r12
	movq %r15,0x48(%rbp)
	addq $0x48,%rbp
	leaq (L_78707+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_3
.p2align 0x4
L_406579:
L_78703:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_406581:
L_78697:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_406582:
L_78774:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_78703
L_78775:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_406583
L_78777:
	movl %ecx,0x0(%r14)
	movq %r11,%r15
L_78719:
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq %r14,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_78720+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_3
.p2align 0x4
L_406583:
L_78776:
	movq %r11,%r15
	jmp L_78719
.p2align 0x4
L_406585:
	movq %r14,(localObjptr+0x8)(%rip)
	jmp L_78696
.p2align 0x4
L_406586:
	movq %r14,(localObjptr+0x8)(%rip)
	jmp L_78696
.p2align 0x4
L_406587:
L_78778:
	xorl %ecx,%ecx
	jmp L_78702
.p2align 0x4
L_406588:
L_78691:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_406589:
L_78689:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_406590:
L_78686:
	movq (globalObjptr+0xCF8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_406592:
L_78681:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_406594:
L_78780:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_78781+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_78781
.p2align 0x4
.long 0x45B
L_78781:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_78679
.p2align 0x4
.long 0xFB0
L_78707:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	movq 0x48(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_78708
L_78766:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_78767+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_78767
.p2align 0x4
.long 0x10B9
L_78767:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
L_78708:
	movq 0x40(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1450,%r15
	jne L_406597
L_78710:
	movq 0x8(%r14),%r15
	movq %r15,0x40(%rbp)
	cmpq $0x1,%r15
	je L_406596
L_78711:
	movq 0x38(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_78712+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_3
.p2align 0x4
L_406596:
L_78718:
	movq $0x13C9,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x13CB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq 0x38(%rbp),%r13
	movq %r13,0x8(%r14)
	movq $0x1A0B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x28(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x30(%rbp),%r13
	movq 0x0(%r13),%r11
	movq $0x28DF,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r15,0x0(%r10)
	movq %r11,0x8(%r10)
	addq $0x18,%r12
	movq %r13,%r15
	shrq $0x8,%r15
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r15,1)
	movq %r10,0x0(%r13)
	movq %r14,%r15
	jmp L_78719
.p2align 0x4
L_406597:
L_78709:
	movq (globalObjptr+0x1500)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xB9B
L_78720:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_78721+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_3
.p2align 0x4
.long 0x10B7
L_78712:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_78713
L_78763:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x58,%rbp
	leaq (L_78764+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_78764
.p2align 0x4
.long 0x10B8
L_78764:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
L_78713:
	movq 0x48(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x1450,%r13
	jne L_406599
L_78715:
	movl 0x0(%r14),%r13d
	movq $0x28A1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %r13d,0x0(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1,0x8(%r14)
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	movb $0xD,0x50(%rbp)
	addq $0x48,%rbp
	leaq (L_78716+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3819
.p2align 0x4
L_406599:
L_78714:
	movq (globalObjptr+0x1508)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x103B
L_78721:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_78722
L_78759:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_78760+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_78760
.p2align 0x4
.long 0xFB9
L_78760:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_78722:
	movq 0x38(%rbp),%r15
	cmpq %r15,0x30(%rbp)
	je L_406601
L_78723:
	movq 0x28(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_78724+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_3
.p2align 0x4
L_406601:
L_78734:
	movl 0x1C(%rbp),%ecx
	jmp loop_923
.p2align 0x4
.long 0xFB0
L_78716:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_78718
L_78761:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_78762+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_78762
.p2align 0x4
.long 0xFB9
L_78762:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
	jmp L_78718
.p2align 0x4
.long 0xB9D
L_78724:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r15,0x28(%rbp)
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1450,%r15
	jne L_78709
L_78725:
	movq 0x8(%r14),%r15
	movq %r15,0x28(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_78726+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_3
.p2align 0x4
.long 0xB9B
L_78726:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x30(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_78727
L_78756:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_78757+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_78757
.p2align 0x4
.long 0x103C
L_78757:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_78727:
	movq 0x30(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1450,%r15
	jne L_78709
L_78728:
	movq 0x8(%r14),%r15
	movq 0x28(%rbp),%r14
	cmpq $0x1,%r14
	je L_406607
L_78729:
	cmpq $0x1,%r15
	je L_78734
L_78730:
	movq 0x0(%r14),%r15
	cmpq $0x1,%r15
	je L_406605
L_78731:
L_78732:
	movq $0x41DB,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq 0x20(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x2729,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r14,0x0(%r13)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq %r13,%r15
L_78733:
	movq 0x28(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp L_78734
.p2align 0x4
L_406605:
L_78735:
	movq $0x41DB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq $0x2727,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x10,%r12
	movq %r14,%r15
	jmp L_78733
.p2align 0x4
L_406607:
L_78737:
	cmpq $0x1,%r15
	je L_78734
L_78738:
	movq 0x20(%rbp),%r15
	movq %r15,0x30(%rbp)
	addq $0x30,%rbp
	leaq (L_78739+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_3
.p2align 0x4
.long 0xB9D
L_78739:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
	movq 0x30(%rbp),%r15
	movq %r15,0x28(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_78740
L_78753:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_78754+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_78754
.p2align 0x4
.long 0xFCF
L_78754:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_78740:
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r15
	shrq $0x1,%r15
	cmpq $0x1450,%r15
	jne L_78709
L_78741:
	movq 0x8(%r14),%r15
	movq %r15,0x28(%rbp)
	cmpq $0x1,%r15
	je L_78734
L_78742:
	movq 0x20(%rbp),%r15
	movq %r15,0x38(%rbp)
	addq $0x38,%rbp
	leaq (L_78743+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp root_3
.p2align 0x4
.long 0x643
L_78743:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
	movq 0x38(%rbp),%r15
	movq %r15,0x20(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_78744
L_78750:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_78751+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_78751
.p2align 0x4
.long 0xFCF
L_78751:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_78744:
	movq 0x20(%rbp),%r15
	movq 0x0(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0x1450,%r13
	jne L_78714
L_78745:
	movl 0x0(%r14),%r13d
	movq $0x28A1,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %r13d,0x0(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq $0x1,0x8(%r14)
	movq %r15,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r14,0x0(%r15)
	movq 0x28(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x28(%rbp)
	movb $0xD,0x30(%rbp)
	addq $0x28,%rbp
	leaq (L_78746+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3819
.p2align 0x4
.long 0xB9C
L_78746:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_78734
L_78748:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_78749+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_78749
.p2align 0x4
.long 0x813
L_78749:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
	jmp L_78734
.text
.p2align 0x4
.globl nonSelect_0
.hidden nonSelect_0
nonSelect_0:
L_78782:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_78783
L_78793:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_78794+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_78794
.p2align 0x4
.long 0x451
L_78794:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_78783:
	movq 0x0(%rbp),%r14
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r13
	movl 0x0(%r15),%r14d
	testl %r14d,%r14d
	jz L_406618
L_78785:
	movl $0x0,0x0(%r15)
	movq 0x0(%r13),%r15
	cmpq $0x1,%r15
	je L_406617
L_78786:
	movq 0x8(%r15),%r14
	movq %r14,0x0(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,%r15
L_78787:
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_78788+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp nonSelect_0
.p2align 0x4
L_406617:
L_78791:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_406618:
L_78784:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x4AF
L_78788:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_78791
L_78789:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	jmp L_78787
.text
.p2align 0x4
.globl x_1434
.hidden x_1434
x_1434:
L_78795:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_78796
L_78853:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_78854+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_78854
.p2align 0x4
.long 0x45F
L_78854:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_78796:
	movq 0x8(%rbp),%r10
	movq 0x8(%r10),%r9
	movq 0x8(%r9),%r11
	movq 0x0(%r9),%r13
	movq 0x0(%rbp),%r10
	movq 0x10(%r10),%r15
	movq (globalObjptr+0x1068)(%rip),%r10
	movq 0x0(%r10),%r14
	incq %r14
	jo L_406631
L_78798:
	movq %r14,0x0(%r10)
	movq 0x0(%r15),%r10
	cmpq $0x1,%r10
	je L_406630
L_78799:
	movq 0x0(%r10),%r14
	movq 0x8(%r10),%r10
	xorl %ecx,%ecx
	movq %r10,%r15
.p2align 0x4,,0x7
L_78801:
	movq %r14,%r10
	andq $0x3,%r10
	jnz L_406629
L_78845:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r10
	shrq $0x1,%r10
	cmpq $0xD2B,%r10
	jne L_406628
L_78846:
	movq 0x8(%r14),%r10
	cmpq 0x0(%r14),%r11
	movq %r11,(localObjptr+0x8)(%rip)
	je L_406625
L_78802:
	incl %ecx
	jo L_406624
L_78804:
	cmpq $0x1,%r15
	je L_406621
L_78805:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq (localObjptr+0x8)(%rip),%r11
	jmp L_78801
.p2align 0x4
L_406621:
L_78806:
L_78807:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_406623
L_78809:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl x_226
L_78844:
	movl %ecx,0x0(%r15)
x_226:
	movq 0x0(%r13),%r15
	movq 0x0(%rbp),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x8(%rbp)
	movq 0x18(%r14),%r11
	movq 0x0(%r13),%r14
	cmpq $0x1,%r14
	jne L_406622
L_78842:
	movq %r11,0x18(%rbp)
	movq %r15,0x20(%rbp)
	addq $0x18,%rbp
	leaq (L_78843+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp unique_0
.p2align 0x4
L_406622:
L_78811:
	movq %r14,%r15
L_78812:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_78813+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
L_406623:
L_78808:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_406624:
L_78803:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_406625:
L_78848:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_78808
L_78849:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_406626
L_78851:
	movl %ecx,0x0(%r15)
	movq %r10,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_406626:
L_78850:
	movq %r10,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_406628:
	movq %r11,(localObjptr+0x8)(%rip)
	jmp L_78802
.p2align 0x4
L_406629:
	movq %r11,(localObjptr+0x8)(%rip)
	jmp L_78802
.p2align 0x4
L_406630:
L_78852:
	xorl %ecx,%ecx
	jmp L_78807
.p2align 0x4
L_406631:
L_78797:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x521
L_78843:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq 0x8(%rbp),%r14
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq %r15,0x0(%r14)
	jmp L_78812
.p2align 0x4
.long 0x1
L_78813:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_78814+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4AF
L_78814:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xF068)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_78815+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5AF
L_78815:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_78816+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x51E
L_78816:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_78817
L_78840:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_78841+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_78841
.p2align 0x4
.long 0x4AE
L_78841:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_78817:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_78818:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_78803
L_78819:
	cmpq $0x1,%r14
	je L_406633
L_78820:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_78818
.p2align 0x4
L_406633:
L_78821:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_78822
L_78838:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_78839+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_78839
.p2align 0x4
.long 0x4E6
L_78839:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_78822:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_406634
L_78823:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
toString_87:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	addq $0x8,%rbp
	leaq (rev_87+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_406634:
L_78837:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_87
.p2align 0x4
.long 0x1
rev_87:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_406640
L_78824:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_78825:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_406639
.p2align 0x4,,0x7
L_78826:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_406638
L_78827:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_78825
.p2align 0x4
L_406638:
L_78829:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_78830+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_406639:
L_78834:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_78835+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_78835
.p2align 0x4
.long 0x45B
L_78835:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_78826
.p2align 0x4
L_406640:
L_78836:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_78829
.p2align 0x4
.long 0x1
L_78830:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_78831
L_78832:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_78833+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_78833
.p2align 0x4
.long 0x451
L_78833:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_78831:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl x_1424
.hidden x_1424
x_1424:
L_78855:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_78856
L_78901:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_78902+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_78902
.p2align 0x4
.long 0x63C
L_78902:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_78856:
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x18(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x58(%rbp)
	movq %r14,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_78857+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_4
.p2align 0x4
.long 0xFDC
L_78857:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_78858
L_78899:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_78900+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_78900
.p2align 0x4
.long 0x9E0
L_78900:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_78858:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_406643
L_78859:
L_78860:
	movq %r15,0x50(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_78861+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1427
.p2align 0x4
L_406643:
L_78898:
	movq $0x45,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x13,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0x47,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x1B7F,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r13,0x8(%r10)
	addq $0x18,%r12
	movq %r11,0x0(%r10)
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r13,1)
	movq %r10,0x0(%r14)
	movq $0x196B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r11,0x8(%r14)
	addq $0x18,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x58(%rbp),%r13
	movq 0x0(%r13),%r10
	movq $0x28DF,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r14,0x0(%r8)
	movq %r10,0x8(%r8)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r9,%r14,1)
	movq %r8,0x0(%r13)
	xchgq %r11,%r15
	jmp L_78860
.p2align 0x4
.long 0xFDD
L_78861:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x48(%rbp)
	movq %r14,0x58(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_78862+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_73
.p2align 0x4
.long 0xBBA
L_78862:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq 0x10(%r15),%r14
	cmpq $0x1,0x8(%r14)
	movq %r15,0x30(%rbp)
	je L_406645
L_78863:
	movq 0x28(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_78864+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_73
.p2align 0x4
L_406645:
L_78897:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xFDE
L_78864:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_78865
L_78895:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_78896+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_78896
.p2align 0x4
.long 0xFE7
L_78896:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_78865:
	movq 0x18(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_406648
L_78866:
	cmpq $0x1,%r15
	je L_406646
L_78867:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x8(%r14)
	movl $0x0,0x0(%r14)
	movq 0x0(%r15),%r14
	movq %r14,0x70(%rbp)
	movb $0x7,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_78868+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3819
.p2align 0x4
L_406646:
L_78870:
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_406647
L_78871:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x8(%r14)
	movl $0x0,0x0(%r14)
	movq 0x0(%r15),%r14
	movq %r14,0x70(%rbp)
	movb $0xF,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_78872+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3819
.p2align 0x4
L_406647:
L_78874:
	movq $0x3401,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x68(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_78875+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_2
.p2align 0x4
L_406648:
L_78881:
	movq $0x36B5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x28,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x8(%rbp),%r14
	movq %r14,0x18(%r15)
	movq %r15,0x8(%rbp)
	movq $0x2A,0x0(%rbp)
	movq $0x26,0x10(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	jmp foreachFuncLabelVar_1
.p2align 0x4
.long 0xFDF
L_78868:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_78870
L_78891:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_78892+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_78892
.p2align 0x4
.long 0xFE7
L_78892:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_78870
.p2align 0x4
.long 0xFDE
L_78872:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_78874
L_78888:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_78889+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_78889
.p2align 0x4
.long 0xFE6
L_78889:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_78874
.p2align 0x4
.long 0xFE0
L_78875:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_78876
L_78886:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_78887+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_78887
.p2align 0x4
.long 0xFE5
L_78887:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_78876:
	movq $0x3301,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x60(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_78877+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_6
.p2align 0x4
.long 0xFE1
L_78877:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_78878
L_78884:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_78885+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_78885
.p2align 0x4
.long 0xFE4
L_78885:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_78878:
	movq $0x2B81,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x60(%rbp)
	movq $0x27,0x50(%rbp)
	movq $0x9,0x58(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x50,%rbp
	leaq (L_78879+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachFuncLabelVar_1
.p2align 0x4
.long 0xFE2
L_78879:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_78881
L_78882:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_78883+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_78883
.p2align 0x4
.long 0xFE3
L_78883:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_78881
.text
.p2align 0x4
.globl x_1423
.hidden x_1423
x_1423:
L_78903:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_78904
L_78949:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_78950+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_78950
.p2align 0x4
.long 0x63C
L_78950:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_78904:
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x18(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x58(%rbp)
	movq %r14,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_78905+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_4
.p2align 0x4
.long 0xFDC
L_78905:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_78906
L_78947:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_78948+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_78948
.p2align 0x4
.long 0x9E0
L_78948:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_78906:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_406656
L_78907:
L_78908:
	movq %r15,0x50(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_78909+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1427
.p2align 0x4
L_406656:
L_78946:
	movq $0x45,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x13,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0x47,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x1B7F,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r13,0x8(%r10)
	addq $0x18,%r12
	movq %r11,0x0(%r10)
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r13,1)
	movq %r10,0x0(%r14)
	movq $0x196B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r11,0x8(%r14)
	addq $0x18,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x58(%rbp),%r13
	movq 0x0(%r13),%r10
	movq $0x28DF,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r14,0x0(%r8)
	movq %r10,0x8(%r8)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r9,%r14,1)
	movq %r8,0x0(%r13)
	xchgq %r11,%r15
	jmp L_78908
.p2align 0x4
.long 0xFDD
L_78909:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x48(%rbp)
	movq %r14,0x58(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_78910+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_73
.p2align 0x4
.long 0xBBA
L_78910:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq 0x10(%r15),%r14
	cmpq $0x1,0x8(%r14)
	movq %r15,0x30(%rbp)
	je L_406658
L_78911:
	movq 0x28(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_78912+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_73
.p2align 0x4
L_406658:
L_78945:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xFDE
L_78912:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_78913
L_78943:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_78944+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_78944
.p2align 0x4
.long 0xFE7
L_78944:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_78913:
	movq 0x18(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_406661
L_78914:
	cmpq $0x1,%r15
	je L_406659
L_78915:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x8(%r14)
	movl $0x0,0x0(%r14)
	movq 0x0(%r15),%r14
	movq %r14,0x70(%rbp)
	movb $0x7,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_78916+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3819
.p2align 0x4
L_406659:
L_78918:
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_406660
L_78919:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x8(%r14)
	movl $0x0,0x0(%r14)
	movq 0x0(%r15),%r14
	movq %r14,0x70(%rbp)
	movb $0xF,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_78920+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3819
.p2align 0x4
L_406660:
L_78922:
	movq $0x3401,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x68(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_78923+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_2
.p2align 0x4
L_406661:
L_78929:
	movq $0x3689,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x28,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x8(%rbp),%r14
	movq %r14,0x18(%r15)
	movq %r15,0x8(%rbp)
	movq $0x7,0x0(%rbp)
	movq $0x7,0x10(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	jmp foreachFuncLabelVar_1
.p2align 0x4
.long 0xFDF
L_78916:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_78918
L_78939:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_78940+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_78940
.p2align 0x4
.long 0xFE7
L_78940:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_78918
.p2align 0x4
.long 0xFDE
L_78920:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_78922
L_78936:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_78937+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_78937
.p2align 0x4
.long 0xFE6
L_78937:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_78922
.p2align 0x4
.long 0xFE0
L_78923:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_78924
L_78934:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_78935+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_78935
.p2align 0x4
.long 0xFE5
L_78935:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_78924:
	movq $0x3301,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x60(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_78925+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_6
.p2align 0x4
.long 0xFE1
L_78925:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_78926
L_78932:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_78933+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_78933
.p2align 0x4
.long 0xFE4
L_78933:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_78926:
	movq $0x2B81,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x60(%rbp)
	movq $0x27,0x50(%rbp)
	movq $0x9,0x58(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x50,%rbp
	leaq (L_78927+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachFuncLabelVar_1
.p2align 0x4
.long 0xFE2
L_78927:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_78929
L_78930:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_78931+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_78931
.p2align 0x4
.long 0xFE3
L_78931:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_78929
.text
.p2align 0x4
.globl x_1422
.hidden x_1422
x_1422:
L_78951:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_78952
L_78997:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_78998+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_78998
.p2align 0x4
.long 0x63C
L_78998:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_78952:
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x18(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x58(%rbp)
	movq %r14,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_78953+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_4
.p2align 0x4
.long 0xFDC
L_78953:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_78954
L_78995:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_78996+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_78996
.p2align 0x4
.long 0x9E0
L_78996:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_78954:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_406669
L_78955:
L_78956:
	movq %r15,0x50(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_78957+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1427
.p2align 0x4
L_406669:
L_78994:
	movq $0x45,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x13,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0x47,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x1B7F,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r13,0x8(%r10)
	addq $0x18,%r12
	movq %r11,0x0(%r10)
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r13,1)
	movq %r10,0x0(%r14)
	movq $0x196B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r11,0x8(%r14)
	addq $0x18,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x58(%rbp),%r13
	movq 0x0(%r13),%r10
	movq $0x28DF,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r14,0x0(%r8)
	movq %r10,0x8(%r8)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r9,%r14,1)
	movq %r8,0x0(%r13)
	xchgq %r11,%r15
	jmp L_78956
.p2align 0x4
.long 0xFDD
L_78957:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x48(%rbp)
	movq %r14,0x58(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_78958+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_73
.p2align 0x4
.long 0xBBA
L_78958:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq 0x10(%r15),%r14
	cmpq $0x1,0x8(%r14)
	movq %r15,0x30(%rbp)
	je L_406671
L_78959:
	movq 0x28(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_78960+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_73
.p2align 0x4
L_406671:
L_78993:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xFDE
L_78960:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_78961
L_78991:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_78992+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_78992
.p2align 0x4
.long 0xFE7
L_78992:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_78961:
	movq 0x18(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_406674
L_78962:
	cmpq $0x1,%r15
	je L_406672
L_78963:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x8(%r14)
	movl $0x0,0x0(%r14)
	movq 0x0(%r15),%r14
	movq %r14,0x70(%rbp)
	movb $0x7,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_78964+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3819
.p2align 0x4
L_406672:
L_78966:
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_406673
L_78967:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x8(%r14)
	movl $0x0,0x0(%r14)
	movq 0x0(%r15),%r14
	movq %r14,0x70(%rbp)
	movb $0xF,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_78968+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3819
.p2align 0x4
L_406673:
L_78970:
	movq $0x3401,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x68(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_78971+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_2
.p2align 0x4
L_406674:
L_78977:
	movq $0x368B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x28,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x8(%rbp),%r14
	movq %r14,0x18(%r15)
	movq %r15,0x8(%rbp)
	movq $0x9,0x0(%rbp)
	movq $0x9,0x10(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	jmp foreachFuncLabelVar_1
.p2align 0x4
.long 0xFDF
L_78964:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_78966
L_78987:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_78988+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_78988
.p2align 0x4
.long 0xFE7
L_78988:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_78966
.p2align 0x4
.long 0xFDE
L_78968:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_78970
L_78984:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_78985+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_78985
.p2align 0x4
.long 0xFE6
L_78985:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_78970
.p2align 0x4
.long 0xFE0
L_78971:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_78972
L_78982:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_78983+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_78983
.p2align 0x4
.long 0xFE5
L_78983:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_78972:
	movq $0x3301,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x60(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_78973+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_6
.p2align 0x4
.long 0xFE1
L_78973:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_78974
L_78980:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_78981+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_78981
.p2align 0x4
.long 0xFE4
L_78981:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_78974:
	movq $0x2B81,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x60(%rbp)
	movq $0x27,0x50(%rbp)
	movq $0x9,0x58(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x50,%rbp
	leaq (L_78975+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachFuncLabelVar_1
.p2align 0x4
.long 0xFE2
L_78975:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_78977
L_78978:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_78979+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_78979
.p2align 0x4
.long 0xFE3
L_78979:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_78977
.text
.p2align 0x4
.globl get_71
.hidden get_71
get_71:
L_78999:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_79000
L_79054:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_79055+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79055
.p2align 0x4
.long 0x45F
L_79055:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
L_79000:
	movq 0x8(%rbp),%r10
	movq 0x8(%r10),%r11
	movq 0x0(%r10),%r13
	movq 0x0(%rbp),%r10
	movq 0x10(%r10),%r15
	movq (globalObjptr+0x1068)(%rip),%r10
	movq 0x0(%r10),%r14
	incq %r14
	jo L_406690
L_79002:
	movq %r14,0x0(%r10)
	movq 0x0(%r15),%r10
	cmpq $0x1,%r10
	je L_406689
L_79003:
	movq 0x8(%r10),%r14
	movq 0x0(%r10),%r10
	xorl %ecx,%ecx
	movq %r10,%r15
.p2align 0x4,,0x7
L_79005:
	movq %r15,%r10
	andq $0x3,%r10
	jnz L_406688
L_79046:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r10
	shrq $0x1,%r10
	cmpq $0xD0E,%r10
	jne L_406687
L_79047:
	movq 0x8(%r15),%r10
	cmpq %r11,0x0(%r15)
	movq %r11,(localObjptr+0x0)(%rip)
	je L_406684
L_79006:
	incl %ecx
	jo L_406683
L_79008:
	cmpq $0x1,%r14
	je L_406681
L_79009:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq (localObjptr+0x0)(%rip),%r11
	jmp L_79005
.p2align 0x4
L_406681:
L_79010:
L_79011:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_406682
L_79013:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl x_227
L_79045:
	movl %ecx,0x0(%r15)
x_227:
	movq %r13,0x10(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_79015+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_406682:
L_79012:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_406683:
L_79007:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_406684:
L_79049:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_79012
L_79050:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_406685
L_79052:
	movl %ecx,0x0(%r15)
	movq %r10,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_406685:
L_79051:
	movq %r10,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_406687:
	movq %r11,(localObjptr+0x0)(%rip)
	jmp L_79006
.p2align 0x4
L_406688:
	movq %r11,(localObjptr+0x0)(%rip)
	jmp L_79006
.p2align 0x4
L_406689:
L_79053:
	xorl %ecx,%ecx
	jmp L_79011
.p2align 0x4
L_406690:
L_79001:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_79015:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_79016+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1
L_79016:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_79017+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4AF
L_79017:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xF070)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_79018+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x5AF
L_79018:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_79019+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x51E
L_79019:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_79020
L_79043:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_79044+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79044
.p2align 0x4
.long 0x4AE
L_79044:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_79020:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_79021:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_79007
L_79022:
	cmpq $0x1,%r14
	je L_406692
L_79023:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_79021
.p2align 0x4
L_406692:
L_79024:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_79025
L_79041:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_79042+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79042
.p2align 0x4
.long 0x4E6
L_79042:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_79025:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_406693
L_79026:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
toString_88:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	addq $0x8,%rbp
	leaq (rev_88+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_406693:
L_79040:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_88
.p2align 0x4
.long 0x1
rev_88:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_406699
L_79027:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_79028:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_406698
.p2align 0x4,,0x7
L_79029:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_406697
L_79030:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_79028
.p2align 0x4
L_406697:
L_79032:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_79033+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_406698:
L_79037:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_79038+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79038
.p2align 0x4
.long 0x45B
L_79038:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_79029
.p2align 0x4
L_406699:
L_79039:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_79032
.p2align 0x4
.long 0x1
L_79033:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_79034
L_79035:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_79036+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79036
.p2align 0x4
.long 0x451
L_79036:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_79034:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.text
.p2align 0x4
.globl x_1421
.hidden x_1421
x_1421:
L_79056:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_79057
L_79102:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_79103+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79103
.p2align 0x4
.long 0x63C
L_79103:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_79057:
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x18(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x58(%rbp)
	movq %r14,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_79058+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_4
.p2align 0x4
.long 0xFDC
L_79058:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_79059
L_79100:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_79101+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79101
.p2align 0x4
.long 0x9E0
L_79101:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_79059:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_406702
L_79060:
L_79061:
	movq %r15,0x50(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_79062+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1427
.p2align 0x4
L_406702:
L_79099:
	movq $0x45,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x13,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0x47,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x1B7F,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r13,0x8(%r10)
	addq $0x18,%r12
	movq %r11,0x0(%r10)
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r13,1)
	movq %r10,0x0(%r14)
	movq $0x196B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r11,0x8(%r14)
	addq $0x18,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x58(%rbp),%r13
	movq 0x0(%r13),%r10
	movq $0x28DF,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r14,0x0(%r8)
	movq %r10,0x8(%r8)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r9,%r14,1)
	movq %r8,0x0(%r13)
	xchgq %r11,%r15
	jmp L_79061
.p2align 0x4
.long 0xFDD
L_79062:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x48(%rbp)
	movq %r14,0x58(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_79063+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_78
.p2align 0x4
.long 0xBBA
L_79063:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq 0x10(%r15),%r14
	cmpq $0x1,0x8(%r14)
	movq %r15,0x30(%rbp)
	je L_406704
L_79064:
	movq 0x28(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_79065+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_78
.p2align 0x4
L_406704:
L_79098:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xFDE
L_79065:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_79066
L_79096:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_79097+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79097
.p2align 0x4
.long 0xFE7
L_79097:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_79066:
	movq 0x18(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_406707
L_79067:
	cmpq $0x1,%r15
	je L_406705
L_79068:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x8(%r14)
	movl $0x0,0x0(%r14)
	movq 0x0(%r15),%r14
	movq %r14,0x70(%rbp)
	movb $0xC,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_79069+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3819
.p2align 0x4
L_406705:
L_79071:
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_406706
L_79072:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x8(%r14)
	movl $0x0,0x0(%r14)
	movq 0x0(%r15),%r14
	movq %r14,0x70(%rbp)
	movb $0x9,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_79073+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3819
.p2align 0x4
L_406706:
L_79075:
	movq $0x340B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x68(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_79076+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_2
.p2align 0x4
L_406707:
L_79082:
	movq $0x3695,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x28,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x8(%rbp),%r14
	movq %r14,0x18(%r15)
	movq %r15,0x8(%rbp)
	movq $0xF,0x0(%rbp)
	movq $0xF,0x10(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	jmp foreachFuncLabelVar_1
.p2align 0x4
.long 0xFDF
L_79069:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_79071
L_79092:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_79093+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79093
.p2align 0x4
.long 0xFE7
L_79093:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_79071
.p2align 0x4
.long 0xFDE
L_79073:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_79075
L_79089:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_79090+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79090
.p2align 0x4
.long 0xFE6
L_79090:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_79075
.p2align 0x4
.long 0xFE0
L_79076:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_79077
L_79087:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_79088+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79088
.p2align 0x4
.long 0xFE5
L_79088:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_79077:
	movq $0x332B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x60(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_79078+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_6
.p2align 0x4
.long 0xFE1
L_79078:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_79079
L_79085:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_79086+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79086
.p2align 0x4
.long 0xFE4
L_79086:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_79079:
	movq $0x2B7B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x60(%rbp)
	movq $0x11,0x50(%rbp)
	movq $0x3,0x58(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x50,%rbp
	leaq (L_79080+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachFuncLabelVar_1
.p2align 0x4
.long 0xFE2
L_79080:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_79082
L_79083:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_79084+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79084
.p2align 0x4
.long 0xFE3
L_79084:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_79082
.text
.p2align 0x4
.globl get_78
.hidden get_78
get_78:
L_79104:
	cmpq %rbp,(gcState+0x18)(%rip)
	jb L_79134
L_79105:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_406726
L_79106:
	movq 0x0(%rbp),%r13
	movq 0x10(%r13),%r11
	movq %r11,0x10(%rbp)
	movq (globalObjptr+0x1068)(%rip),%r13
	movq 0x0(%r13),%r15
	incq %r15
	jo L_406725
L_79108:
	movq %r15,0x0(%r13)
	movq 0x0(%r11),%r13
	cmpq $0x1,%r13
	je L_406724
L_79109:
	movq 0x0(%r13),%r14
	movq 0x8(%r13),%r13
	xorl %ecx,%ecx
	movq %r13,%r15
.p2align 0x4,,0x7
L_79111:
	movq %r14,%r13
	andq $0x3,%r13
	jnz L_79112
L_79126:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r13
	shrq $0x1,%r13
	cmpq $0xCFC,%r13
	jne L_79112
L_79127:
	movq 0x8(%r14),%r13
	movq 0x0(%r14),%r11
	cmpq %r11,0x8(%rbp)
	je L_406719
L_79112:
	incl %ecx
	movl %ecx,0x18(%rbp)
	jo L_406718
L_79114:
	cmpq $0x1,%r15
	je L_406714
L_79115:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	jmp L_79111
.p2align 0x4
L_406714:
L_79116:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_79117
L_79124:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_79125+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79125
.p2align 0x4
.long 0x49B
L_79125:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_79117:
	movl 0x18(%rbp),%ecx
L_79118:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_406716
L_79120:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_79122
L_79123:
	movl %ecx,0x0(%r15)
L_79122:
	movq $0x27CB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x731,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x0(%r14)
	movl $0x0,0x4(%r14)
	movq $0x27D5,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x72D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movl $0x0,0x0(%r13)
	movl $0x0,0x4(%r13)
	movq $0x27D3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq $0x1,0x0(%r15)
	movq $0x72F,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r15,0x8(%r11)
	addq $0x18,%r12
	movl $0x0,0x0(%r11)
	movl $0x0,0x4(%r11)
	movq $0x733,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x0(%r15)
	movq %r11,0x8(%r15)
	movq %r13,0x10(%r15)
	addq $0x20,%r12
	movq $0x19F9,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	movq %r15,0x0(%rbp)
	addq $0x18,%r12
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%r14)
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r13
	movq $0x28DF,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq %r15,%r14
	shrq $0x8,%r14
	movq (gcState+0x3C8)(%rip),%r13
	movb $0x1,0x0(%r13,%r14,1)
	movq %r11,0x0(%r15)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_406716:
L_79119:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_406718:
L_79113:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_406719:
L_79129:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_79119
L_79130:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl L_406720
L_79132:
	movl %ecx,0x0(%r15)
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_406720:
L_79131:
	movq %r13,0x0(%rbp)
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_406724:
L_79133:
	xorl %ecx,%ecx
	jmp L_79118
.p2align 0x4
L_406725:
L_79107:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_406726:
L_79134:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x18,%rbp
	leaq (L_79135+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79135
.p2align 0x4
.long 0x45F
L_79135:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	jmp L_79106
.text
.p2align 0x4
.globl x_1420
.hidden x_1420
x_1420:
L_79136:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_79137
L_79182:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_79183+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79183
.p2align 0x4
.long 0x63C
L_79183:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_79137:
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x18(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x58(%rbp)
	movq %r14,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_79138+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_4
.p2align 0x4
.long 0xFDC
L_79138:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_79139
L_79180:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_79181+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79181
.p2align 0x4
.long 0x9E0
L_79181:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_79139:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_406729
L_79140:
L_79141:
	movq %r15,0x50(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_79142+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1427
.p2align 0x4
L_406729:
L_79179:
	movq $0x45,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x13,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0x47,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x1B7F,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r13,0x8(%r10)
	addq $0x18,%r12
	movq %r11,0x0(%r10)
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r13,1)
	movq %r10,0x0(%r14)
	movq $0x196B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r11,0x8(%r14)
	addq $0x18,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x58(%rbp),%r13
	movq 0x0(%r13),%r10
	movq $0x28DF,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r14,0x0(%r8)
	movq %r10,0x8(%r8)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r9,%r14,1)
	movq %r8,0x0(%r13)
	xchgq %r11,%r15
	jmp L_79141
.p2align 0x4
.long 0xFDD
L_79142:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x48(%rbp)
	movq %r14,0x58(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_79143+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_78
.p2align 0x4
.long 0xBBA
L_79143:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq 0x10(%r15),%r14
	cmpq $0x1,0x8(%r14)
	movq %r15,0x30(%rbp)
	je L_406731
L_79144:
	movq 0x28(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_79145+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_78
.p2align 0x4
L_406731:
L_79178:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xFDE
L_79145:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_79146
L_79176:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_79177+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79177
.p2align 0x4
.long 0xFE7
L_79177:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_79146:
	movq 0x18(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_406734
L_79147:
	cmpq $0x1,%r15
	je L_406732
L_79148:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x8(%r14)
	movl $0x0,0x0(%r14)
	movq 0x0(%r15),%r14
	movq %r14,0x70(%rbp)
	movb $0xC,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_79149+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3819
.p2align 0x4
L_406732:
L_79151:
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_406733
L_79152:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x8(%r14)
	movl $0x0,0x0(%r14)
	movq 0x0(%r15),%r14
	movq %r14,0x70(%rbp)
	movb $0x9,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_79153+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3819
.p2align 0x4
L_406733:
L_79155:
	movq $0x340B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x68(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_79156+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_2
.p2align 0x4
L_406734:
L_79162:
	movq $0x36AB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x28,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x8(%rbp),%r14
	movq %r14,0x18(%r15)
	movq %r15,0x8(%rbp)
	movq $0x21,0x0(%rbp)
	movq $0x1F,0x10(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	jmp foreachFuncLabelVar_1
.p2align 0x4
.long 0xFDF
L_79149:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_79151
L_79172:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_79173+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79173
.p2align 0x4
.long 0xFE7
L_79173:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_79151
.p2align 0x4
.long 0xFDE
L_79153:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_79155
L_79169:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_79170+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79170
.p2align 0x4
.long 0xFE6
L_79170:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_79155
.p2align 0x4
.long 0xFE0
L_79156:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_79157
L_79167:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_79168+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79168
.p2align 0x4
.long 0xFE5
L_79168:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_79157:
	movq $0x332B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x60(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_79158+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_6
.p2align 0x4
.long 0xFE1
L_79158:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_79159
L_79165:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_79166+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79166
.p2align 0x4
.long 0xFE4
L_79166:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_79159:
	movq $0x2B7B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x60(%rbp)
	movq $0x11,0x50(%rbp)
	movq $0x3,0x58(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x50,%rbp
	leaq (L_79160+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachFuncLabelVar_1
.p2align 0x4
.long 0xFE2
L_79160:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_79162
L_79163:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_79164+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79164
.p2align 0x4
.long 0xFE3
L_79164:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_79162
.text
.p2align 0x4
.globl x_1419
.hidden x_1419
x_1419:
L_79184:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_79185
L_79230:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_79231+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79231
.p2align 0x4
.long 0x63C
L_79231:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_79185:
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x18(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x58(%rbp)
	movq %r14,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_79186+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_4
.p2align 0x4
.long 0xFDC
L_79186:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_79187
L_79228:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_79229+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79229
.p2align 0x4
.long 0x9E0
L_79229:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_79187:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_406742
L_79188:
L_79189:
	movq %r15,0x50(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_79190+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1427
.p2align 0x4
L_406742:
L_79227:
	movq $0x45,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x13,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0x47,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x1B7F,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r13,0x8(%r10)
	addq $0x18,%r12
	movq %r11,0x0(%r10)
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r13,1)
	movq %r10,0x0(%r14)
	movq $0x196B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r11,0x8(%r14)
	addq $0x18,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x58(%rbp),%r13
	movq 0x0(%r13),%r10
	movq $0x28DF,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r14,0x0(%r8)
	movq %r10,0x8(%r8)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r9,%r14,1)
	movq %r8,0x0(%r13)
	xchgq %r11,%r15
	jmp L_79189
.p2align 0x4
.long 0xFDD
L_79190:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x48(%rbp)
	movq %r14,0x58(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_79191+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_78
.p2align 0x4
.long 0xBBA
L_79191:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq 0x10(%r15),%r14
	cmpq $0x1,0x8(%r14)
	movq %r15,0x30(%rbp)
	je L_406744
L_79192:
	movq 0x28(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_79193+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_78
.p2align 0x4
L_406744:
L_79226:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xFDE
L_79193:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_79194
L_79224:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_79225+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79225
.p2align 0x4
.long 0xFE7
L_79225:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_79194:
	movq 0x18(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_406747
L_79195:
	cmpq $0x1,%r15
	je L_406745
L_79196:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x8(%r14)
	movl $0x0,0x0(%r14)
	movq 0x0(%r15),%r14
	movq %r14,0x70(%rbp)
	movb $0xC,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_79197+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3819
.p2align 0x4
L_406745:
L_79199:
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_406746
L_79200:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x8(%r14)
	movl $0x0,0x0(%r14)
	movq 0x0(%r15),%r14
	movq %r14,0x70(%rbp)
	movb $0x9,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_79201+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3819
.p2align 0x4
L_406746:
L_79203:
	movq $0x340B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x68(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_79204+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_2
.p2align 0x4
L_406747:
L_79210:
	movq $0x3693,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x28,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x8(%rbp),%r14
	movq %r14,0x18(%r15)
	movq %r15,0x8(%rbp)
	movq $0xE,0x0(%rbp)
	movq $0xE,0x10(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	jmp foreachFuncLabelVar_1
.p2align 0x4
.long 0xFDF
L_79197:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_79199
L_79220:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_79221+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79221
.p2align 0x4
.long 0xFE7
L_79221:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_79199
.p2align 0x4
.long 0xFDE
L_79201:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_79203
L_79217:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_79218+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79218
.p2align 0x4
.long 0xFE6
L_79218:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_79203
.p2align 0x4
.long 0xFE0
L_79204:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_79205
L_79215:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_79216+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79216
.p2align 0x4
.long 0xFE5
L_79216:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_79205:
	movq $0x332B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x60(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_79206+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_6
.p2align 0x4
.long 0xFE1
L_79206:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_79207
L_79213:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_79214+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79214
.p2align 0x4
.long 0xFE4
L_79214:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_79207:
	movq $0x2B7B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x60(%rbp)
	movq $0x11,0x50(%rbp)
	movq $0x3,0x58(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x50,%rbp
	leaq (L_79208+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachFuncLabelVar_1
.p2align 0x4
.long 0xFE2
L_79208:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_79210
L_79211:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_79212+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79212
.p2align 0x4
.long 0xFE3
L_79212:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_79210
.text
.p2align 0x4
.globl x_1418
.hidden x_1418
x_1418:
L_79232:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_79233
L_79278:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x30,%rbp
	leaq (L_79279+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79279
.p2align 0x4
.long 0x63C
L_79279:
	addq $0xFFFFFFFFFFFFFFD0,%rbp
L_79233:
	movq 0x8(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x28(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x10(%rbp),%r15
	movq 0x0(%r15),%r14
	movq %r14,0x38(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x40(%rbp)
	movq 0x18(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x0(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x58(%rbp)
	movq %r14,0x68(%rbp)
	addq $0x68,%rbp
	leaq (L_79234+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp peek_4
.p2align 0x4
.long 0xFDC
L_79234:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_79235
L_79276:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_79277+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79277
.p2align 0x4
.long 0x9E0
L_79277:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_79235:
	movq 0x18(%rbp),%r15
	cmpq $0x1,%r15
	je L_406755
L_79236:
L_79237:
	movq %r15,0x50(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x58(%rbp)
	addq $0x50,%rbp
	leaq (L_79238+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1427
.p2align 0x4
L_406755:
L_79275:
	movq $0x45,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x10,%r12
	movq $0x1,0x0(%r14)
	movq $0x13,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	addq $0x10,%r12
	movq $0x1,0x0(%r13)
	movq $0x47,0x0(%r12)
	movq %r12,%r11
	addq $0x8,%r11
	movq %r14,0x0(%r11)
	movq %r13,0x8(%r11)
	addq $0x18,%r12
	movq 0x48(%rbp),%r14
	movq 0x0(%r14),%r13
	movq $0x1B7F,0x0(%r12)
	movq %r12,%r10
	addq $0x8,%r10
	movq %r13,0x8(%r10)
	addq $0x18,%r12
	movq %r11,0x0(%r10)
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r9
	movb $0x1,0x0(%r9,%r13,1)
	movq %r10,0x0(%r14)
	movq $0x196B,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r11,0x8(%r14)
	addq $0x18,%r12
	movq 0x50(%rbp),%r13
	movq %r13,0x0(%r14)
	movq 0x58(%rbp),%r13
	movq 0x0(%r13),%r10
	movq $0x28DF,0x0(%r12)
	movq %r12,%r8
	addq $0x8,%r8
	movq %r14,0x0(%r8)
	movq %r10,0x8(%r8)
	addq $0x18,%r12
	movq %r13,%r14
	shrq $0x8,%r14
	movb $0x1,0x0(%r9,%r14,1)
	movq %r8,0x0(%r13)
	xchgq %r11,%r15
	jmp L_79237
.p2align 0x4
.long 0xFDD
L_79238:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x18(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x20(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x48(%rbp)
	movq %r14,0x58(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_79239+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_78
.p2align 0x4
.long 0xBBA
L_79239:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq 0x10(%r15),%r14
	cmpq $0x1,0x8(%r14)
	movq %r15,0x30(%rbp)
	je L_406757
L_79240:
	movq 0x28(%rbp),%r15
	movq 0x10(%r15),%r14
	movq %r14,0x78(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x30(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x50(%rbp)
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x58(%rbp)
	movq 0x18(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x48(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_79241+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_78
.p2align 0x4
L_406757:
L_79274:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0xFDE
L_79241:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_79242
L_79272:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_79273+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79273
.p2align 0x4
.long 0xFE7
L_79273:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_79242:
	movq 0x18(%rbp),%r15
	movq 0x10(%r15),%r14
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_406760
L_79243:
	cmpq $0x1,%r15
	je L_406758
L_79244:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x8(%r14)
	movl $0x0,0x0(%r14)
	movq 0x0(%r15),%r14
	movq %r14,0x70(%rbp)
	movb $0xC,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_79245+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3819
.p2align 0x4
L_406758:
L_79247:
	movq 0x18(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r15
	cmpq $0x1,%r15
	je L_406759
L_79248:
	movq %r14,%r13
	shrq $0x8,%r13
	movq (gcState+0x3C8)(%rip),%r11
	movb $0x1,0x0(%r11,%r13,1)
	movq $0x1,0x8(%r14)
	movl $0x0,0x0(%r14)
	movq 0x0(%r15),%r14
	movq %r14,0x70(%rbp)
	movb $0x9,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_79249+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3819
.p2align 0x4
L_406759:
L_79251:
	movq $0x340B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x68(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_79252+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachi_2
.p2align 0x4
L_406760:
L_79258:
	movq $0x3695,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x28,%r12
	movq 0x38(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x40(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x8(%rbp),%r14
	movq %r14,0x18(%r15)
	movq %r15,0x8(%rbp)
	movq $0xF,0x0(%rbp)
	movq $0xF,0x10(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	jmp foreachFuncLabelVar_1
.p2align 0x4
.long 0xFDF
L_79245:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_79247
L_79268:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_79269+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79269
.p2align 0x4
.long 0xFE7
L_79269:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_79247
.p2align 0x4
.long 0xFDE
L_79249:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_79251
L_79265:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_79266+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79266
.p2align 0x4
.long 0xFE6
L_79266:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_79251
.p2align 0x4
.long 0xFE0
L_79252:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_79253
L_79263:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_79264+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79264
.p2align 0x4
.long 0xFE5
L_79264:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_79253:
	movq $0x332B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x30(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x60(%rbp)
	movq 0x58(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x60,%rbp
	leaq (L_79254+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_6
.p2align 0x4
.long 0xFE1
L_79254:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_79255
L_79261:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x60,%rbp
	leaq (L_79262+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79262
.p2align 0x4
.long 0xFE4
L_79262:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
L_79255:
	movq $0x2B7B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x60(%rbp)
	movq $0x11,0x50(%rbp)
	movq $0x3,0x58(%rbp)
	movq 0x20(%rbp),%r15
	movq %r15,0x68(%rbp)
	addq $0x50,%rbp
	leaq (L_79256+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreachFuncLabelVar_1
.p2align 0x4
.long 0xFE2
L_79256:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_79258
L_79259:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x50,%rbp
	leaq (L_79260+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79260
.p2align 0x4
.long 0xFE3
L_79260:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	jmp L_79258
.text
.p2align 0x4
.globl visit_10
.hidden visit_10
visit_10:
L_79280:
	cmpq %rbp,(gcState+0x18)(%rip)
	jnb L_79281
L_79652:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_79653+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79653
.p2align 0x4
.long 0x4DE
L_79653:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_79281:
	movq 0x28(%rbp),%r10
	movq 0x8(%r10),%r11
	movq 0x0(%r10),%r13
	movq 0x0(%rbp),%r10
	movq 0x10(%r10),%r15
	movq (globalObjptr+0x1068)(%rip),%r10
	movq 0x0(%r10),%r14
	incq %r14
	jo L_406778
L_79283:
	movq %r14,0x0(%r10)
	movq 0x0(%r15),%r10
	cmpq $0x1,%r10
	je L_406777
L_79284:
	movq 0x8(%r10),%r14
	movq 0x0(%r10),%r10
	movl $0x0,0x30(%rbp)
	movq %r10,%r15
.p2align 0x4,,0x7
L_79286:
	movq %r15,%r10
	andq $0x3,%r10
	jnz L_406776
L_79327:
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r10
	shrq $0x1,%r10
	cmpq $0xCEE,%r10
	jne L_406775
L_79328:
	movq 0x8(%r15),%r10
	movq %r10,0x38(%rbp)
	cmpq %r11,0x0(%r15)
	movq %r11,(localObjptr+0x0)(%rip)
	je L_406770
L_79287:
	movl 0x30(%rbp),%r10d
	incl %r10d
	jo L_406769
L_79289:
	cmpq $0x1,%r14
	je L_406767
L_79290:
	movl %r10d,0x30(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq (localObjptr+0x0)(%rip),%r11
	jmp L_79286
.p2align 0x4
L_406767:
	movl %r10d,%ecx
L_79292:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_406768
L_79294:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl x_228
L_79326:
	movl %ecx,0x0(%r15)
x_228:
	movq %r13,0x10(%rbp)
	movq 0x0(%rbp),%r15
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_79296+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_406768:
L_79293:
	movq (globalObjptr+0x1080)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_406769:
L_79288:
	movq $0x3,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_406770:
L_79330:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_79331
L_79649:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x48,%rbp
	leaq (L_79650+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79650
.p2align 0x4
.long 0xA28
L_79650:
	addq $0xFFFFFFFFFFFFFFB8,%rbp
L_79331:
	movl 0x30(%rbp),%r14d
	movslq %r14d,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_79293
L_79332:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %r14d,0x0(%r13)
	jl L_406772
L_79333:
	movq 0x38(%rbp),%r15
L_79334:
	movq 0x0(%r15),%r14
	movq 0x10(%r15),%r13
	movl 0x0(%r14),%r15d
	testl %r15d,%r15d
	jnz L_406771
L_79335:
	movl $0x1,0x0(%r14)
	movq 0x0(%r13),%r15
	movq %r15,0x30(%rbp)
	movq 0x8(%r13),%r15
	movq %r15,0x48(%rbp)
	movq $0x3319,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_79336+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foreach_6
.p2align 0x4
L_406771:
L_79647:
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_406772:
L_79648:
	movq (globalObjptr+0x1078)(%rip),%r14
	movl 0x30(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movq 0x38(%rbp),%r15
	jmp L_79334
.p2align 0x4
L_406775:
	movq %r11,(localObjptr+0x0)(%rip)
	jmp L_79287
.p2align 0x4
L_406776:
	movq %r11,(localObjptr+0x0)(%rip)
	jmp L_79287
.p2align 0x4
L_406777:
L_79651:
	xorl %ecx,%ecx
	jmp L_79292
.p2align 0x4
L_406778:
L_79282:
	movq (globalObjptr+0x1088)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
L_79296:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_79297+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4EC
L_79336:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_79337
L_79645:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_79646+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79646
.p2align 0x4
.long 0x4F0
L_79646:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
L_79337:
	movq 0x8(%rbp),%r10
	movq 0x70(%r10),%r9
	movq %r9,0x38(%rbp)
	movq 0x68(%r10),%r9
	movq %r9,0x40(%rbp)
	movq 0x60(%r10),%r9
	movq %r9,0x48(%rbp)
	movq 0x58(%r10),%r9
	movq %r9,0x50(%rbp)
	movq 0x50(%r10),%r9
	movq %r9,0x58(%rbp)
	movq 0x48(%r10),%r9
	movq 0x40(%r10),%r15
	movq 0x38(%r10),%r11
	movq 0x30(%r10),%r8
	movq 0x28(%r10),%rsp
	movq %rsp,0x60(%rbp)
	movq 0x20(%r10),%rsp
	movq %rsp,0x68(%rbp)
	movq 0x18(%r10),%rsp
	movq %rsp,0x70(%rbp)
	movq 0x10(%r10),%rsp
	movq %rsp,0x78(%rbp)
	movq 0x8(%r10),%rsp
	movq %rsp,0x80(%rbp)
	movq 0x0(%r10),%rsp
	movq %rsp,0x88(%rbp)
	movq 0x30(%rbp),%r10
	cmpq $0x1,%r10
	je L_406816
L_79338:
	movq 0xFFFFFFFFFFFFFFF8(%r10),%r14
	shrq $0x1,%r14
	cmpq $0xEBE,%r14
	je L_406813
	cmpq $0xEBF,%r14
	je L_406810
	cmpq $0xEC0,%r14
	je L_406808
	cmpq $0xEC1,%r14
	je L_406807
	cmpq $0xEC2,%r14
	je L_406794
	cmpq $0xEC3,%r14
	je L_406793
L_79339:
	movq 0x10(%r10),%r9
	movq 0x8(%r10),%rsp
	movq %rsp,0x38(%rbp)
	movq 0x0(%r10),%rsp
	movq %rsp,0x40(%rbp)
	movq 0x8(%r15),%r8
	movq 0x0(%r15),%r10
	movq 0x10(%r9),%r15
	movq (globalObjptr+0x1068)(%rip),%rsp
	movq 0x0(%rsp),%r14
	incq %r14
	jo L_79282
L_79340:
	movq %r14,0x0(%rsp)
	movq 0x0(%r15),%rsp
	cmpq $0x1,%rsp
	je L_406791
L_79341:
	movq 0x0(%rsp),%r14
	movq 0x8(%rsp),%rsp
	xorl %ecx,%ecx
	movq %rsp,%r15
	movq %r9,%r13
	movq %r8,%r9
.p2align 0x4,,0x7
L_79343:
	movq %r14,%r8
	andq $0x3,%r8
	jnz L_406790
L_79382:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r8
	shrq $0x1,%r8
	cmpq $0xCEE,%r8
	jne L_406789
L_79383:
	movq 0x8(%r14),%r8
	cmpq 0x0(%r14),%r9
	movq %r9,(localObjptr+0x18)(%rip)
	je L_406783
	movq %r11,(localObjptr+0x10)(%rip)
L_79344:
	incl %ecx
	jo L_79288
L_79345:
	cmpq $0x1,%r15
	je L_406780
L_79346:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq (localObjptr+0x10)(%rip),%r11
	movq (localObjptr+0x18)(%rip),%r9
	jmp L_79343
.p2align 0x4
L_406780:
L_79347:
L_79348:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_79293
L_79349:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl x_229
L_79381:
	movl %ecx,0x0(%r15)
x_229:
	movq %r13,0x8(%rbp)
	movq %r10,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_79351+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_406783:
L_79385:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_79293
L_79386:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r14
	cmpl %ecx,0x0(%r14)
	jnl L_406787
L_79410:
	movl %ecx,0x0(%r14)
	movq %r8,%r15
	movq %r11,(localObjptr+0x10)(%rip)
L_79388:
	movq 0x18(%r15),%r14
	movq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	movl %r15d,%r13d
	movslq %r13d,%r11
	cmpq %r15,%r11
	jne L_406786
L_79391:
	testl %r13d,%r13d
	jz L_406785
L_79392:
	cmpq $0x0,%r15
	jna L_406784
L_79395:
	movq 0x0(%r14),%r15
	movq 0x0(%r15),%r13
	movq %r13,0x58(%rbp)
L_79396:
	movq $0x1,0x68(%rbp)
	movl $0x0,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_79397+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_5
.p2align 0x4
L_406784:
L_79394:
	movq $0x6,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_406785:
L_79409:
	movq (localObjptr+0x10)(%rip),%r15
	movq %r15,0x58(%rbp)
	jmp L_79396
.p2align 0x4
L_406786:
L_79390:
	movq (globalObjptr+0x4D8)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_406787:
L_79387:
	movq %r8,%r15
	movq %r11,(localObjptr+0x10)(%rip)
	jmp L_79388
.p2align 0x4
L_406789:
	movq %r11,(localObjptr+0x10)(%rip)
	movq %r9,(localObjptr+0x18)(%rip)
	jmp L_79344
.p2align 0x4
L_406790:
	movq %r11,(localObjptr+0x10)(%rip)
	movq %r9,(localObjptr+0x18)(%rip)
	jmp L_79344
.p2align 0x4
L_406791:
L_79411:
	xorl %ecx,%ecx
	movq %r9,%r13
	jmp L_79348
.p2align 0x4
L_406793:
L_79606:
	movq 0x20(%r10),%r15
	movq %r15,0x60(%rbp)
	movq 0x18(%r10),%r15
	movq %r15,0x68(%rbp)
	movq 0x10(%r10),%r15
	movq %r15,0x70(%rbp)
	movq 0x8(%r10),%r15
	movq %r15,0x78(%rbp)
	movq 0x0(%r10),%r15
	movq %r15,0x80(%rbp)
	movq $0x1,0x90(%rbp)
	movl $0x0,0x98(%rbp)
	addq $0x90,%rbp
	leaq (L_79607+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_5
.p2align 0x4
L_406794:
L_79493:
	movq 0x10(%r10),%r11
	movq %r11,0x50(%rbp)
	movq 0x8(%r10),%r13
	movq 0x0(%r10),%r11
	movq %r11,0x58(%rbp)
	movq 0x8(%r9),%r10
	movq 0x0(%r9),%r11
	movq 0x10(%r13),%r15
	movq (globalObjptr+0x1068)(%rip),%r9
	movq 0x0(%r9),%r14
	incq %r14
	jo L_79282
L_79494:
	movq %r14,0x0(%r9)
	movq 0x0(%r15),%r9
	cmpq $0x1,%r9
	je L_406805
L_79495:
	movq 0x0(%r9),%r14
	movq 0x8(%r9),%r9
	movl $0x0,0x60(%rbp)
	movq %r9,%r15
.p2align 0x4,,0x7
L_79497:
	movq %r14,%r9
	andq $0x3,%r9
	jnz L_406804
L_79536:
	movq 0xFFFFFFFFFFFFFFF8(%r14),%r9
	shrq $0x1,%r9
	cmpq $0xCED,%r9
	jne L_406803
L_79537:
	movq 0x8(%r14),%r9
	movq %r9,0x68(%rbp)
	cmpq 0x0(%r14),%r10
	movq %r10,(localObjptr+0x10)(%rip)
	je L_406798
L_79498:
	movl 0x60(%rbp),%r9d
	incl %r9d
	jo L_79288
L_79499:
	cmpq $0x1,%r15
	je L_406795
L_79500:
	movl %r9d,0x60(%rbp)
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq (localObjptr+0x10)(%rip),%r10
	jmp L_79497
.p2align 0x4
L_406795:
	movl %r9d,%ecx
L_79502:
	movslq %ecx,%r15
	movq (globalObjptr+0x1070)(%rip),%r14
	addq 0x0(%r14),%r15
	jo L_79293
L_79503:
	movq %r15,0x0(%r14)
	movq (globalObjptr+0x1078)(%rip),%r15
	cmpl %ecx,0x0(%r15)
	jnl x_230
L_79535:
	movl %ecx,0x0(%r15)
x_230:
	movq %r13,0x8(%rbp)
	movq %r11,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_79505+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
L_406798:
L_79539:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_79540
L_79603:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_79604+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79604
.p2align 0x4
.long 0x10D4
L_79604:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_79540:
	movl 0x60(%rbp),%r14d
	movslq %r14d,%r15
	movq (globalObjptr+0x1070)(%rip),%r13
	addq 0x0(%r13),%r15
	jo L_79293
L_79541:
	movq %r15,0x0(%r13)
	movq (globalObjptr+0x1078)(%rip),%r13
	cmpl %r14d,0x0(%r13)
	jl L_406800
L_79542:
	movq 0x68(%rbp),%r15
L_79543:
	movq 0x0(%r15),%r14
	movq %r14,0x60(%rbp)
	movq 0x8(%r15),%r14
	movq %r14,0x68(%rbp)
	movq 0x10(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x58(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_79390
L_79545:
	movl %r13d,0x88(%rbp)
	movq $0x3887,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_79546+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_5
.p2align 0x4
L_406800:
L_79602:
	movq (globalObjptr+0x1078)(%rip),%r14
	movl 0x60(%rbp),%r13d
	movl %r13d,0x0(%r14)
	movq 0x68(%rbp),%r15
	jmp L_79543
.p2align 0x4
L_406803:
	movq %r10,(localObjptr+0x10)(%rip)
	jmp L_79498
.p2align 0x4
L_406804:
	movq %r10,(localObjptr+0x10)(%rip)
	jmp L_79498
.p2align 0x4
L_406805:
L_79605:
	xorl %ecx,%ecx
	jmp L_79502
.p2align 0x4
L_406807:
L_79433:
	movq %r8,0xA0(%rbp)
	movq 0x10(%r10),%r15
	movq %r15,0x98(%rbp)
	movq 0x8(%r10),%r15
	movq %r15,0x40(%rbp)
	movq 0x0(%r10),%r15
	movq %r15,0x48(%rbp)
	addq $0x98,%rbp
	leaq (L_79434+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1398
.p2align 0x4
L_406808:
L_79428:
	movq 0x8(%r10),%r15
	movq %r15,0x50(%rbp)
	movq 0x0(%r10),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_79390
L_79430:
	movl %r13d,0x68(%rbp)
	movq $0x3887,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x48(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x60(%rbp)
	addq $0x60,%rbp
	leaq (L_79431+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_5
.p2align 0x4
L_406810:
L_79422:
	movq 0x0(%r10),%r15
	cmpq $0x1,0x10(%rbp)
	je L_406812
L_79423:
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_79390
L_79425:
	movl %r13d,0x58(%rbp)
	movq $0x3887,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x48(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_79426+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_5
.p2align 0x4
L_406812:
L_79427:
	movq (globalObjptr+0x1E88)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_406813:
L_79412:
	movq 0x0(%r10),%r15
	cmpq $0x1,0x18(%rbp)
	je L_406815
L_79413:
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_79390
L_79415:
	movl %r13d,0x58(%rbp)
	movq $0x3887,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x48(%rbp),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x50(%rbp)
	addq $0x50,%rbp
	leaq (L_79416+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_5
.p2align 0x4
L_406815:
L_79421:
	movq (globalObjptr+0x1E90)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_406816:
L_79404:
	movq $0x369B,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x30,%r12
	movq 0x28(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x20(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x18(%rbp),%r14
	movq %r14,0x10(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x18(%r15)
	movq 0x8(%rbp),%r14
	movq %r14,0x20(%r15)
	movq %r15,0x8(%rbp)
	movq $0x15,0x0(%rbp)
	movq $0x13,0x10(%rbp)
	movq 0x30(%rbp),%r15
	movq %r15,0x18(%rbp)
	jmp foreachFuncLabelVar_1
.p2align 0x4
.long 0x1
L_79297:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_79298+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1
L_79351:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_79352+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x8EE
L_79397:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_79398
L_79407:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_79408+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79408
.p2align 0x4
.long 0x900
L_79408:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_79398:
	movq 0x40(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_79390
L_79400:
	movl %r13d,0x78(%rbp)
	movq $0x3887,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_79401+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_5
.p2align 0x4
.long 0x10D5
L_79607:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x88(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0x98(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0xA0(%rbp)
	addq $0x98,%rbp
	leaq (L_79608+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1340
.p2align 0x4
.long 0x1
L_79505:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_79506+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x10CD
L_79546:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x70(%rbp),%r14
	movq %r14,0x78(%rbp)
	movq %r15,0x80(%rbp)
	movq (globalObjptr+0xF088)(%rip),%r15
	movq %r15,0x88(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x78,%rbp
	leaq (L_79547+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp coerces_1
.p2align 0x4
.long 0x10BC
L_79434:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_79435
L_79491:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x98,%rbp
	leaq (L_79492+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79492
.p2align 0x4
.long 0x10CC
L_79492:
	addq $0xFFFFFFFFFFFFFF68,%rbp
L_79435:
	movq $0xCFB,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x90(%rbp)
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x38(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x48(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF8(%r15),%r13
	shrq $0x1,%r13
	cmpq $0x1206,%r13
	je L_406820
L_79490:
	movq 0x0(%r15),%r13
	movq %r13,0x80(%rbp)
	movq $0x3617,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x30,%r12
	movq 0x68(%rbp),%r13
	movq %r13,0x0(%r15)
	movq 0x58(%rbp),%r13
	movq %r13,0x8(%r15)
	movq 0x50(%rbp),%r13
	movq %r13,0x10(%r15)
	movq 0x70(%rbp),%r13
	movq %r13,0x18(%r15)
	movq %r14,0x20(%r15)
	movq %r15,0x78(%rbp)
	movb $0xA,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_79465+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldP_1
.p2align 0x4
L_406820:
L_79436:
	movq 0x8(%r15),%r13
	movq %r13,0x68(%rbp)
	movq 0x0(%r15),%r13
	movq %r13,0x70(%rbp)
	movq 0x78(%rbp),%r15
	movq 0x8(%r15),%r11
	movq %r11,0x98(%rbp)
	movq 0x0(%r15),%r11
	movq %r11,0xA0(%rbp)
	movq %r13,0xB0(%rbp)
	addq $0xB0,%rbp
	leaq (L_79437+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp schckToInt32_0
.p2align 0x4
.long 0x84C
L_79431:
	addq $0xFFFFFFFFFFFFFFA0,%rbp
	movq 0x60(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x60(%rbp)
	addq $0x58,%rbp
	leaq (L_79432+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1340
.p2align 0x4
.long 0x67C
L_79426:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq %r15,0x48(%rbp)
	movq (globalObjptr+0xEE88)(%rip),%r15
	movq %r15,0x50(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x10(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_79417+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp coerces_1
.p2align 0x4
.long 0x67C
L_79416:
	addq $0xFFFFFFFFFFFFFFB0,%rbp
	movq 0x50(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq %r15,0x48(%rbp)
	movq (globalObjptr+0xE920)(%rip),%r15
	movq %r15,0x50(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq 0x18(%rbp),%r15
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_79417+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp coerces_1
.p2align 0x4
.long 0x4AF
L_79298:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xF078)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_79299+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x1
L_79352:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_79353+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x10BB
L_79401:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq 0x58(%rbp),%r14
	movq %r14,0x48(%rbp)
	movq %r15,0x58(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x60(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x50(%rbp)
	addq $0x40,%rbp
	leaq (L_79402+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp primApp_4
.p2align 0x4
.long 0x10D6
L_79608:
	addq $0xFFFFFFFFFFFFFF68,%rbp
	movq 0x98(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq %r15,0x90(%rbp)
	movq 0x88(%rbp),%r15
	movq %r15,0x98(%rbp)
	movq (globalObjptr+0xF0B8)(%rip),%r15
	movq %r15,0xA0(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0xA8(%rbp)
	addq $0x90,%rbp
	leaq (L_79609+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp coerces_1
.p2align 0x4
.long 0x1
L_79506:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	movq (globalObjptr+0xDFE8)(%rip),%r15
	movq %r15,0x10(%rbp)
	addq $0x10,%rbp
	leaq (L_79507+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x10CE
L_79547:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_79548
L_79600:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_79601+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79601
.p2align 0x4
.long 0x10D3
L_79601:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_79548:
	movq 0x50(%rbp),%r15
	cmpq $0x1,%r15
	je L_406831
	cmpq $0x2,%r15
	je L_406829
L_79549:
	movq 0x8(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x0(%r15),%r14
	cmpq $0x1,0x60(%rbp)
	je L_406822
L_79550:
	movq %r14,0x78(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_79551+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1340
.p2align 0x4
L_406822:
L_79554:
	movq 0x48(%rbp),%r15
	cmpq $0x1,%r15
	je L_406827
	cmpq $0x2,%r15
	je L_406824
L_79555:
	cmpq $0x1,0x68(%rbp)
	je L_79404
L_79556:
	movq %r15,0x78(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_79557+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1340
.p2align 0x4
L_406824:
L_79562:
	movq 0x68(%rbp),%r14
	cmpq $0x1,%r14
	je L_79404
L_79563:
	movq 0x10(%rbp),%r13
	cmpq $0x1,%r13
	je L_406825
L_79564:
	movq %r14,0x48(%rbp)
	movq (globalObjptr+0xF0A0)(%rip),%r15
	movq %r15,0x50(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq %r13,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_79417+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp coerces_1
.p2align 0x4
L_406825:
L_79566:
	movq (globalObjptr+0x1E78)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_406827:
L_79559:
	cmpq $0x1,0x68(%rbp)
	je L_79404
L_79560:
	movq (globalObjptr+0x1E98)(%rip),%r14
	movq %r14,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_406829:
L_79595:
	cmpq $0x1,0x60(%rbp)
	jne bug_171
L_79597:
	cmpq $0x1,0x68(%rbp)
	je L_79404
bug_171:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq (globalObjptr+0xF0B0)(%rip),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_406831:
L_79573:
	movq 0x68(%rbp),%r14
	cmpq $0x1,%r14
	je L_406833
L_79574:
	movq 0x10(%rbp),%r13
	cmpq $0x1,%r13
	je L_79566
L_79575:
	movq %r13,0x70(%rbp)
	movq %r14,0x78(%rbp)
	movq (globalObjptr+0xF0A0)(%rip),%r14
	movq %r14,0x80(%rbp)
	movq 0x40(%rbp),%r14
	movq %r14,0x88(%rbp)
	addq $0x70,%rbp
	leaq (L_79576+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp coerces_1
.p2align 0x4
L_406833:
L_79590:
	cmpq $0x1,0x10(%rbp)
	je L_406836
L_79591:
	movq 0x60(%rbp),%r13
	cmpq $0x1,%r13
	je L_79404
L_79592:
	xchgq %r13,%r15
L_79580:
	movq 0x18(%rbp),%r14
	cmpq $0x1,%r14
	je L_406834
L_79581:
	movq %r15,0x48(%rbp)
	movq (globalObjptr+0xF0A8)(%rip),%r15
	movq %r15,0x50(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x58(%rbp)
	movq %r14,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_79417+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp coerces_1
.p2align 0x4
L_406834:
L_79582:
	movq (globalObjptr+0x1EA0)(%rip),%r15
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
L_406836:
L_79578:
	movq 0x60(%rbp),%r15
	cmpq $0x1,%r15
	je L_79404
L_79579:
	jmp L_79580
.p2align 0x4
.long 0x10C7
L_79465:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_79466
L_79483:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_79484+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79484
.p2align 0x4
.long 0x10C9
L_79484:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_79466:
	movq 0x40(%rbp),%r15
	cmpq $0x1,%r15
	je L_79404
L_79467:
	movq %r15,0x70(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x78(%rbp)
	addq $0x70,%rbp
	leaq (length_10+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1340
.p2align 0x4
.long 0x10BD
L_79437:
	addq $0xFFFFFFFFFFFFFF50,%rbp
	movl 0xB0(%rbp),%r15d
	movl %r15d,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_79438
L_79488:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_79489+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79489
.p2align 0x4
.long 0x10CB
L_79489:
	addq $0xFFFFFFFFFFFFFF50,%rbp
L_79438:
	movslq 0x48(%rbp),%r15
	movq 0xA0(%rbp),%r14
	cmpq 0xFFFFFFFFFFFFFFF0(%r14),%r15
	jnb L_79394
L_79440:
	movq 0x0(%r14,%r15,8),%r13
	cmpq $0x1,%r13
	je L_406841
L_79441:
	movl 0x0(%r13),%r15d
	movl %r15d,0xA8(%rbp)
	movq $0x1D5F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0xA0(%rbp)
	movq 0x98(%rbp),%r15
	movq %r15,0xB0(%rbp)
	addq $0xA0,%rbp
	leaq (L_79442+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp lookup_1
.p2align 0x4
L_406841:
L_79487:
	movq $0x9,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x67B
L_79432:
	addq $0xFFFFFFFFFFFFFFA8,%rbp
	movq 0x58(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq (globalObjptr+0xED48)(%rip),%r14
	movq %r14,0x50(%rbp)
	movq 0x40(%rbp),%r14
	movq %r14,0x58(%rbp)
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_79417+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp coerces_1
.p2align 0x4
.long 0x4EC
L_79417:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_79404
L_79419:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_79420+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79420
.p2align 0x4
.long 0x4F0
L_79420:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_79404
.p2align 0x4
.long 0x5AF
L_79299:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_79300+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4AF
L_79353:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xF078)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_79354+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x4EC
L_79402:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	movq 0x40(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_79404
L_79405:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x40,%rbp
	leaq (L_79406+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79406
.p2align 0x4
.long 0x4F0
L_79406:
	addq $0xFFFFFFFFFFFFFFC0,%rbp
	jmp L_79404
.p2align 0x4
.long 0x10D7
L_79609:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq $0x1,0x90(%rbp)
	movl $0x0,0x98(%rbp)
	addq $0x90,%rbp
	leaq (L_79610+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_5
.p2align 0x4
.long 0x4AF
L_79507:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
	movq 0x10(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq (globalObjptr+0xF080)(%rip),%r15
	movq %r15,0x18(%rbp)
	addq $0x18,%rbp
	leaq (L_79508+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x10CF
L_79551:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x50(%rbp)
	movq %r15,0x78(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq (globalObjptr+0xF090)(%rip),%r15
	movq %r15,0x88(%rbp)
	movq 0x40(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x78,%rbp
	leaq (L_79552+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp coerces_1
.p2align 0x4
.long 0x10D1
L_79557:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x38(%rbp)
	movq 0x68(%rbp),%r14
	movq %r14,0x48(%rbp)
	movq (globalObjptr+0xF098)(%rip),%r14
	movq %r14,0x50(%rbp)
	movq 0x40(%rbp),%r14
	movq %r14,0x58(%rbp)
	movq %r15,0x40(%rbp)
	addq $0x40,%rbp
	leaq (L_79417+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp coerces_1
.p2align 0x4
.long 0x10C8
L_79576:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_79578
L_79587:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_79588+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79588
.p2align 0x4
.long 0x10D2
L_79588:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	jmp L_79578
.p2align 0x4
.long 0x10C8
length_10:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_79468
L_79480:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_79481+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79481
.p2align 0x4
.long 0x10C9
L_79481:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_79468:
	movq 0x38(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r11,%r14
	jne L_79390
L_79470:
	testl %r13d,%r13d
	jz L_79404
L_79471:
	movq 0x40(%rbp),%r15
	movq %r15,0x8(%rbp)
	movq 0x60(%rbp),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_79472+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp toString_538
.p2align 0x4
.long 0x10BE
L_79442:
	addq $0xFFFFFFFFFFFFFF60,%rbp
	movq 0xA0(%rbp),%r15
	movq %r15,0x48(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_79443
L_79485:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA0,%rbp
	leaq (L_79486+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79486
.p2align 0x4
.long 0x10CA
L_79486:
	addq $0xFFFFFFFFFFFFFF60,%rbp
L_79443:
	movq 0x58(%rbp),%r15
	movq 0x8(%r15),%r14
	movq 0x8(%r14),%r13
	movq %r13,0x78(%rbp)
	movq 0x0(%r14),%r11
	movq %r11,0x98(%rbp)
	movq 0x48(%rbp),%r15
	movq 0x50(%rbp),%r14
	movq 0x10(%r14),%r11
	cmpq %r11,0x10(%r15)
	je L_406850
L_79444:
	movq %r14,0xA8(%rbp)
	movq %r13,0xB0(%rbp)
	addq $0xA8,%rbp
	leaq (L_79445+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_14
.p2align 0x4
L_406850:
L_79464:
	movq $0x3655,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x28,%r12
	movq 0x90(%rbp),%r11
	movq %r11,0x0(%r15)
	movq 0x80(%rbp),%r11
	movq %r11,0x8(%r15)
	movq 0x88(%rbp),%r11
	movq %r11,0x10(%r15)
	movq 0x70(%rbp),%r11
	movq %r11,0x18(%r15)
	movq %r15,0x78(%rbp)
	movb $0x10,0x70(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x70,%rbp
	leaq (L_79465+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp foldP_0
.p2align 0x4
.long 0x51E
L_79300:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_79301
L_79324:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_79325+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79325
.p2align 0x4
.long 0x4AE
L_79325:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_79301:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_79302:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_79288
L_79303:
	cmpq $0x1,%r14
	je L_406852
L_79304:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_79302
.p2align 0x4
L_406852:
L_79305:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_79306
L_79322:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_79323+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79323
.p2align 0x4
.long 0x4E6
L_79323:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_79306:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_406853
L_79307:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
toString_89:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	addq $0x8,%rbp
	leaq (rev_89+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_406853:
L_79321:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_89
.p2align 0x4
.long 0x5AF
L_79354:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_79355+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x10D7
L_79610:
	addq $0xFFFFFFFFFFFFFF70,%rbp
	movq 0x90(%rbp),%r15
	movq %r15,0x40(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_79611
L_79642:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x90,%rbp
	leaq (L_79643+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79643
.p2align 0x4
.long 0xC15
L_79643:
	addq $0xFFFFFFFFFFFFFF70,%rbp
L_79611:
	movq 0x80(%rbp),%r15
	movq 0xFFFFFFFFFFFFFFF0(%r15),%r14
	movl %r14d,%r13d
	movslq %r13d,%r11
	cmpq %r14,%r11
	jne L_79390
L_79613:
	movl %r13d,0x88(%rbp)
	movq $0x3887,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	addq $0x18,%r12
	movq 0x48(%rbp),%r13
	movq %r13,0x0(%r14)
	movq %r15,0x8(%r14)
	movq %r14,0x80(%rbp)
	addq $0x80,%rbp
	leaq (L_79614+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp tabulate_5
.p2align 0x4
.long 0x5AF
L_79508:
	addq $0xFFFFFFFFFFFFFFE8,%rbp
	movq 0x18(%rbp),%r15
	movq %r15,0x10(%rbp)
	movq (globalObjptr+0xDFF8)(%rip),%r15
	movq %r15,0x20(%rbp)
	addq $0x20,%rbp
	leaq (L_79509+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp str_3
.p2align 0x4
.long 0x10D0
L_79552:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_79554
L_79570:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_79571+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79571
.p2align 0x4
.long 0x670
L_79571:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	jmp L_79554
.p2align 0x4
.long 0x1
L_79472:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_79473
L_79477:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_79478+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79478
.p2align 0x4
.long 0x451
L_79478:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_79473:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x1E80)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xEE98)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x8(%rbp)
	addq $0x8,%rbp
	leaq (bug_170+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x10BF
L_79445:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x50(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_79446
L_79462:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_79463+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79463
.p2align 0x4
.long 0x10C6
L_79463:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_79446:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x58(%rbp)
	addq $0x18,%r12
	movq 0x50(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xF018)(%rip),%r14
	movq %r14,0x8(%r15)
	movq 0x48(%rbp),%r15
	movq %r15,0xA8(%rbp)
	movq 0x78(%rbp),%r15
	movq %r15,0xB0(%rbp)
	addq $0xA8,%rbp
	leaq (L_79447+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_14
.p2align 0x4
.long 0x1
rev_89:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_406864
L_79308:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_79309:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_406863
.p2align 0x4,,0x7
L_79310:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_406862
L_79311:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_79309
.p2align 0x4
L_406862:
L_79313:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_79314+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_406863:
L_79318:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_79319+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79319
.p2align 0x4
.long 0x45B
L_79319:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_79310
.p2align 0x4
L_406864:
L_79320:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_79313
.p2align 0x4
.long 0x51E
L_79355:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_79356
L_79379:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_79380+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79380
.p2align 0x4
.long 0x4AE
L_79380:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_79356:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_79357:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_79288
L_79358:
	cmpq $0x1,%r14
	je L_406865
L_79359:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_79357
.p2align 0x4
L_406865:
L_79360:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_79361
L_79377:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_79378+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79378
.p2align 0x4
.long 0x4E6
L_79378:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_79361:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_406866
L_79362:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
toString_90:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	addq $0x8,%rbp
	leaq (rev_90+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_406866:
L_79376:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_90
.p2align 0x4
.long 0x10D8
L_79614:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x48(%rbp)
	movq 0x40(%rbp),%r14
	movq %r14,0x78(%rbp)
	movq 0x60(%rbp),%r14
	movq %r14,0x80(%rbp)
	movq 0x70(%rbp),%r14
	movq %r14,0x88(%rbp)
	movq %r15,0x90(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x98(%rbp)
	addq $0x78,%rbp
	leaq (L_79615+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp primApp_4
.p2align 0x4
.long 0x51E
L_79509:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	movq 0x20(%rbp),%r15
	movq %r15,0x18(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_79510
L_79533:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x28,%rbp
	leaq (L_79534+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79534
.p2align 0x4
.long 0x4AE
L_79534:
	addq $0xFFFFFFFFFFFFFFD8,%rbp
L_79510:
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x18(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1,0x8(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq 0x10(%rbp),%r13
	movq %r13,0x0(%r14)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x8(%rbp),%r13
	movq %r13,0x0(%r15)
	movq $0x1B6D,0x0(%r12)
	movq %r12,%r13
	addq $0x8,%r13
	movq %r13,0x20(%rbp)
	movq %r15,0x8(%r13)
	addq $0x18,%r12
	movq 0x0(%rbp),%r11
	movq %r11,0x0(%r13)
	xorl %ecx,%ecx
	movq %r15,%r14
	movq %r11,%r15
.p2align 0x4,,0x7
L_79511:
	addl 0x0(%r15),%ecx
	movl %ecx,0x28(%rbp)
	jo L_79288
L_79512:
	cmpq $0x1,%r14
	je L_406870
L_79513:
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	jmp L_79511
.p2align 0x4
L_406870:
L_79514:
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_79515
L_79531:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x38,%rbp
	leaq (L_79532+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79532
.p2align 0x4
.long 0x4E6
L_79532:
	addq $0xFFFFFFFFFFFFFFC8,%rbp
L_79515:
	movl 0x28(%rbp),%ecx
	testl %ecx,%ecx
	jz L_406871
L_79516:
	movq $0x1B69,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x20(%rbp),%r14
	movq %r14,0x0(%r15)
toString_91:
	movq $0xC3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movl %ecx,0x0(%r14)
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movl $0x0,0x4(%r14)
	movq %r14,0x10(%rbp)
	movq $0x1,0x8(%rbp)
	addq $0x8,%rbp
	leaq (rev_91+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3785
.p2align 0x4
L_406871:
L_79530:
	movq $0x1,%r15
	xorl %r14d,%r14d
	xchgl %r14d,%ecx
	jmp toString_91
.p2align 0x4
.long 0x1
bug_170:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_79474
L_79475:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_79476+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79476
.p2align 0x4
.long 0x451
L_79476:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_79474:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x10C0
L_79447:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0x60(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_79448
L_79460:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xA8,%rbp
	leaq (L_79461+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79461
.p2align 0x4
.long 0x10C5
L_79461:
	addq $0xFFFFFFFFFFFFFF58,%rbp
L_79448:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x60(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xF020)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0xA8(%rbp)
	addq $0xA8,%rbp
	leaq (L_79449+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp record_3
.p2align 0x4
.long 0x1
L_79314:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_79315
L_79316:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_79317+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79317
.p2align 0x4
.long 0x451
L_79317:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_79315:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x1
rev_90:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_406880
L_79363:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_79364:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_406879
.p2align 0x4,,0x7
L_79365:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_406878
L_79366:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_79364
.p2align 0x4
L_406878:
L_79368:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_79369+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_406879:
L_79373:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_79374+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79374
.p2align 0x4
.long 0x45B
L_79374:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_79365
.p2align 0x4
L_406880:
L_79375:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_79368
.p2align 0x4
.long 0x10D9
L_79615:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x40(%rbp)
	movq 0x38(%rbp),%r15
	movq %r15,0x70(%rbp)
	addq $0x68,%rbp
	leaq (L_79616+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp x_1340
.p2align 0x4
.long 0x1
rev_91:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq $0x1,%r15
	je L_406883
L_79517:
	movq 0x0(%r15),%r14
	movq 0x8(%r15),%r15
	movq %r15,0x0(%rbp)
	movq %r14,0x8(%rbp)
	movq $0x1,0x10(%rbp)
.p2align 0x4,,0x7
L_79518:
	cmpq %r12,(gcState+0x8)(%rip)
	jb L_406882
.p2align 0x4,,0x7
L_79519:
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x8(%rbp),%r14
	movq %r14,0x0(%r15)
	movq 0x10(%rbp),%r14
	movq %r14,0x8(%r15)
	movq 0x0(%rbp),%r14
	cmpq $0x1,%r14
	je L_406881
L_79520:
	movq %r15,0x10(%rbp)
	movq 0x0(%r14),%r15
	movq 0x8(%r14),%r14
	movq %r14,0x0(%rbp)
	movq %r15,0x8(%rbp)
	jmp L_79518
.p2align 0x4
L_406881:
L_79522:
	movq %r15,0x8(%rbp)
	addq $0x8,%rbp
	leaq (L_79523+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
L_406882:
L_79527:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x20,%rbp
	leaq (L_79528+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79528
.p2align 0x4
.long 0x45B
L_79528:
	addq $0xFFFFFFFFFFFFFFE0,%rbp
	jmp L_79519
.p2align 0x4
L_406883:
L_79529:
	movq $0x1,%r14
	xchgq %r14,%r15
	jmp L_79522
.p2align 0x4
.long 0x69A
L_79449:
	addq $0xFFFFFFFFFFFFFF58,%rbp
	movq 0xA8(%rbp),%r15
	movq %r15,0xA0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_79450
L_79458:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xB0,%rbp
	leaq (L_79459+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79459
.p2align 0x4
.long 0x10C4
L_79459:
	addq $0xFFFFFFFFFFFFFF50,%rbp
L_79450:
	movq 0x98(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0xA8(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0xB0(%rbp)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq (globalObjptr+0xF028)(%rip),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x858)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xA808)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0xC0(%rbp)
	addq $0xC0,%rbp
	leaq (L_79451+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x1
L_79369:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_79370
L_79371:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_79372+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79372
.p2align 0x4
.long 0x451
L_79372:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_79370:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x10DA
L_79616:
	addq $0xFFFFFFFFFFFFFF98,%rbp
	movq 0x68(%rbp),%r15
	movq %r15,0x38(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_79617
L_79640:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x68,%rbp
	leaq (L_79641+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79641
.p2align 0x4
.long 0xBCE
L_79641:
	addq $0xFFFFFFFFFFFFFF98,%rbp
L_79617:
	movq 0x38(%rbp),%r15
	cmpq $0x0,0xFFFFFFFFFFFFFFF0(%r15)
	jna L_79394
L_79619:
	movq 0x0(%r15),%r14
	movq %r14,0x48(%rbp)
	movq 0x58(%rbp),%r15
	movq 0x8(%r15),%r13
	movq 0x8(%r13),%r11
	movq %r11,0x50(%rbp)
	movq 0x0(%r13),%r10
	movq %r10,0x60(%rbp)
	movq 0x40(%rbp),%r15
	movq 0x10(%r15),%r13
	cmpq %r13,0x10(%r14)
	je L_79404
L_79620:
	movq %r15,0x70(%rbp)
	movq %r11,0x78(%rbp)
	addq $0x70,%rbp
	leaq (L_79621+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_14
.p2align 0x4
.long 0x1
L_79523:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq 0x8(%rbp),%r15
	movq %r15,0x0(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_79524
L_79525:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x10,%rbp
	leaq (L_79526+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79526
.p2align 0x4
.long 0x451
L_79526:
	addq $0xFFFFFFFFFFFFFFF0,%rbp
L_79524:
	movq $0x192F,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x10C1
L_79451:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	movq 0xC0(%rbp),%r15
	movq %r15,0xB8(%rbp)
	movq %r15,0xC0(%rbp)
	movq 0xA8(%rbp),%r15
	movq %r15,0xC8(%rbp)
	addq $0xC0,%rbp
	leaq (L_79452+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x10DB
L_79621:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x58(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_79622
L_79637:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x70,%rbp
	leaq (L_79638+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79638
.p2align 0x4
.long 0x77F
L_79638:
	addq $0xFFFFFFFFFFFFFF90,%rbp
L_79622:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r15,0x68(%rbp)
	addq $0x18,%r12
	movq 0x58(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xF018)(%rip),%r14
	movq %r14,0x8(%r15)
	movq 0x48(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq 0x50(%rbp),%r15
	movq %r15,0x80(%rbp)
	addq $0x78,%rbp
	leaq (L_79623+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp get_14
.p2align 0x4
.long 0x10C1
L_79452:
	addq $0xFFFFFFFFFFFFFF40,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_79453
L_79456:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0xC0,%rbp
	leaq (L_79457+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79457
.p2align 0x4
.long 0x10C3
L_79457:
	addq $0xFFFFFFFFFFFFFF40,%rbp
L_79453:
	movq $0x3E37,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0xB0(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0xC8(%rbp)
	movq (globalObjptr+0x9D8)(%rip),%r15
	movq %r15,0xB8(%rbp)
	movq 0xA0(%rbp),%r15
	movq %r15,0xC0(%rbp)
	addq $0xB8,%rbp
	leaq (L_79454+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3780
.p2align 0x4
.long 0xECF
L_79623:
	addq $0xFFFFFFFFFFFFFF88,%rbp
	movq 0x78(%rbp),%r15
	movq %r15,0x70(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_79624
L_79635:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x80,%rbp
	leaq (L_79636+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79636
.p2align 0x4
.long 0xEF4
L_79636:
	addq $0xFFFFFFFFFFFFFF80,%rbp
L_79624:
	movq $0x11FF,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq 0x70(%rbp),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0xF020)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x0(%r14)
	addq $0x18,%r12
	movq $0x1,0x8(%r14)
	movq $0x23A3,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	movq %r14,0x8(%r15)
	addq $0x18,%r12
	movq 0x68(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x70(%rbp)
	addq $0x70,%rbp
	leaq (L_79625+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp record_3
.p2align 0x4
.long 0x10C2
L_79454:
	addq $0xFFFFFFFFFFFFFF48,%rbp
	movq 0xB8(%rbp),%r15
	movq %r15,0xB0(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x8(%rbp)
	movq 0xA8(%rbp),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_79455+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x79A
L_79625:
	addq $0xFFFFFFFFFFFFFF90,%rbp
	movq 0x70(%rbp),%r15
	movq %r15,0x68(%rbp)
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_79626
L_79633:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x78,%rbp
	leaq (L_79634+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79634
.p2align 0x4
.long 0xEA3
L_79634:
	addq $0xFFFFFFFFFFFFFF88,%rbp
L_79626:
	movq 0x60(%rbp),%r15
	movq 0x8(%r15),%r14
	movq %r14,0x70(%rbp)
	movq 0x0(%r15),%r14
	movq %r14,0x78(%rbp)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x18,%r12
	movq (globalObjptr+0xF028)(%rip),%r14
	movq %r14,0x0(%r15)
	movq (globalObjptr+0x858)(%rip),%r14
	movq %r14,0x8(%r15)
	movq $0x1B53,0x0(%r12)
	movq %r12,%r14
	addq $0x8,%r14
	movq %r15,0x8(%r14)
	addq $0x18,%r12
	movq (globalObjptr+0xA808)(%rip),%r15
	movq %r15,0x0(%r14)
	movq %r14,0x88(%rbp)
	addq $0x88,%rbp
	leaq (L_79627+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp concat_0
.p2align 0x4
.long 0x1
L_79455:
	addq $0xFFFFFFFFFFFFFFF8,%rbp
	movq $0x15,(globalObjptrNonRoot+0x0)(%rip)
	movq (gcState+0x560)(%rip),%rbp
	addq (gcState+0x20)(%rip),%rbp
	jmp *0xFFFFFFFFFFFFFFF8(%rbp)
.p2align 0x4
.long 0x10DC
L_79627:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	movq 0x88(%rbp),%r15
	movq %r15,0x80(%rbp)
	movq %r15,0x88(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x90(%rbp)
	addq $0x88,%rbp
	leaq (L_79628+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
.p2align 0x4
.long 0x10DC
L_79628:
	addq $0xFFFFFFFFFFFFFF78,%rbp
	cmpq %r12,(gcState+0x8)(%rip)
	jnb L_79629
L_79631:
	movq (c_stackP+0x0)(%rip),%rsp
	movl $0x0,%r15d
	movl %r15d,%edx
	xorq %rsi,%rsi
	leaq gcState(%rip),%r15
	movq %r15,%rdi
	xorq %rax,%rax
	addq $0x88,%rbp
	leaq (L_79632+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	movq %rbp,(gcState+0x10)(%rip)
	movq %r12,(gcState+0x0)(%rip)
	call GC_collect
	movq (gcState+0x0)(%rip),%r12
	movq (gcState+0x10)(%rip),%rbp
	jmp L_79632
.p2align 0x4
.long 0x10DE
L_79632:
	addq $0xFFFFFFFFFFFFFF78,%rbp
L_79629:
	movq $0x3E37,0x0(%r12)
	movq %r12,%r15
	addq $0x8,%r15
	addq $0x10,%r12
	movq 0x78(%rbp),%r14
	movq %r14,0x0(%r15)
	movq %r15,0x90(%rbp)
	movq (globalObjptr+0x9D8)(%rip),%r15
	movq %r15,0x80(%rbp)
	movq 0x68(%rbp),%r15
	movq %r15,0x88(%rbp)
	addq $0x80,%rbp
	leaq (L_79630+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp loop_3780
.p2align 0x4
.long 0x10DD
L_79630:
	addq $0xFFFFFFFFFFFFFF80,%rbp
	movq 0x80(%rbp),%r15
	movq %r15,0x78(%rbp)
	movq (globalObjptr+0xA088)(%rip),%r15
	movq %r15,0x8(%rbp)
	movq 0x70(%rbp),%r15
	movq %r15,0x10(%rbp)
	addq $0x8,%rbp
	leaq (L_79455+0x0)(%rip),%r15
	movq %r15,0xFFFFFFFFFFFFFFF8(%rbp)
	jmp output_0
